public final class org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolWaveletDelta, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto;
    private org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletDelta)>(r2);

        return;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r11;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r3;
        java.lang.String $r4, r13;
        boolean $z0, $z1;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r2;
        java.util.Iterator $r6, $r8;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r12;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.util.List $r5, $r7;
        java.lang.Object $r9, $r10;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersion()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r3);

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r1);

        $r4 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: java.lang.String getAuthor()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void setAuthor(java.lang.String)>($r4);

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void clearOperation()>();

        $r5 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: java.util.List getOperation()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) $r10;

        $r11 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke $r11.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r12);

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>($r11);

        goto label1;

     label2:
        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void clearAddressPath()>();

        $r7 = interfaceinvoke r2.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: java.util.List getAddressPath()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r9;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void addAddressPath(java.lang.String)>(r13);

        goto label3;

     label4:
        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersion()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r2;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r3;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getHashedVersion()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r3);

        return $r1;
    }

    public void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1, $r3;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r5;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder clearHashedVersion()>();

        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder setHashedVersion(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r5);

        return;
    }

    public java.lang.String getAuthor()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: java.lang.String getAuthor()>();

        return $r2;
    }

    public void setAuthor(java.lang.String)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder setAuthor(java.lang.String)>(r1);

        return;
    }

    public java.util.List getOperation()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r3;
        int $i0, i1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r4;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: int getOperationSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getOperation(int)>(i1);

        specialinvoke $r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllOperation(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r3;
        java.lang.Object $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r4;
        boolean $z0;

        r4 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) $r2;

        virtualinvoke r4.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOperation(int)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r2;
        int i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r3;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getOperation(int)>(i0);

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>($r3);

        return $r1;
    }

    public void setOperation(int, org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        int i0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOrCreateProtocolWaveletOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder setOperation(int,org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>(i0, $r4);

        return;
    }

    public int getOperationSize()
    {
        int $i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: int getOperationCount()>();

        return $i0;
    }

    public void addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOrCreateProtocolWaveletOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder addOperation(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>($r4);

        return;
    }

    public void clearOperation()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder clearOperation()>();

        return;
    }

    public java.util.List getAddressPath()
    {
        java.util.List $r2, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: java.util.List getAddressPathList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllAddressPath(java.util.List)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.util.List r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder addAllAddressPath(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getAddressPath(int)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;
        int i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: java.lang.String getAddressPath(int)>(i0);

        return $r2;
    }

    public void setAddressPath(int, java.lang.String)
    {
        int i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder setAddressPath(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getAddressPathSize()
    {
        int $i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: int getAddressPathCount()>();

        return $i0;
    }

    public void addAddressPath(java.lang.String)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder addAddressPath(java.lang.String)>(r1);

        return;
    }

    public void clearAddressPath()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder clearAddressPath()>();

        return;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r3;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r0;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r0);

        return $r1;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOrCreateProtocolWaveletOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r3;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1, $r3;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta build()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = $r3;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r2, $r3;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta)>($r3);

     label2:
        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r12;
        com.google.gson.JsonElement $r5, $r13;
        com.google.gson.Gson r4;
        int $i0, $i1, i2, i3;
        com.google.gson.JsonPrimitive $r6, $r10;
        java.lang.String $r7, $r11;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r1;
        org.waveprotocol.wave.communication.json.RawStringData r3;
        com.google.gson.JsonArray $r8, $r9;

        r1 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r3 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r4 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersion()>();

        $r5 = interfaceinvoke $r2.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r3, r4);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r5);

        $r6 = new com.google.gson.JsonPrimitive;

        $r7 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: java.lang.String getAuthor()>();

        specialinvoke $r6.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r7);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r6);

        $r8 = new com.google.gson.JsonArray;

        specialinvoke $r8.<com.google.gson.JsonArray: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: int getOperationSize()>();

        if i2 >= $i0 goto label2;

        $r12 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOperation(int)>(i2);

        $r13 = interfaceinvoke $r12.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r3, r4);

        virtualinvoke $r8.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r13);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r8);

        $r9 = new com.google.gson.JsonArray;

        specialinvoke $r9.<com.google.gson.JsonArray: void <init>()>();

        i3 = 0;

     label3:
        $i1 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: int getAddressPathSize()>();

        if i3 >= $i1 goto label4;

        $r10 = new com.google.gson.JsonPrimitive;

        $r11 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: java.lang.String getAddressPath(int)>(i3);

        specialinvoke $r10.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r11);

        virtualinvoke $r9.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("4", $r9);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r16;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r9;
        com.google.gson.JsonElement r0, $r3, $r5, $r7, $r10, $r13, $r15;
        com.google.gson.Gson r11;
        int $i0, $i1, i2, i3;
        java.lang.String $r6, $r14;
        boolean $z0, $z1, $z2, $z3;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r2;
        org.waveprotocol.wave.communication.json.RawStringData r12;
        com.google.gson.JsonArray $r4, $r8;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r11 := @parameter1: com.google.gson.Gson;

        r12 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $r16 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r16.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r16, $r15, r11, r12);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r16);

     label1:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label2;

        $r13 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r14 = virtualinvoke $r13.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void setAuthor(java.lang.String)>($r14);

     label2:
        $z2 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z2 == 0 goto label4;

        $r7 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $r8 = virtualinvoke $r7.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i2 = 0;

     label3:
        $i1 = virtualinvoke $r8.<com.google.gson.JsonArray: int size()>();

        if i2 >= $i1 goto label4;

        $r9 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke $r9.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void <init>()>();

        $r10 = virtualinvoke $r8.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i2);

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r9, $r10, r11, r12);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>($r9);

        i2 = i2 + 1;

        goto label3;

     label4:
        $z3 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("4");

        if $z3 == 0 goto label6;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("4");

        $r4 = virtualinvoke $r3.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i3 = 0;

     label5:
        $i0 = virtualinvoke $r4.<com.google.gson.JsonArray: int size()>();

        if i3 >= $i0 goto label6;

        $r5 = virtualinvoke $r4.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i3);

        $r6 = virtualinvoke $r5.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void addAddressPath(java.lang.String)>($r6);

        i3 = i3 + 1;

        goto label5;

     label6:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r2, $r4;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()>();

        $r3 = (org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDelta $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolWaveletDelta) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletDeltaUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletDelta,org.waveprotocol.wave.federation.ProtocolWaveletDelta)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolWaveletOperation getOperation(int)
    {
        int i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl getOperation(int)>(i0);

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersion()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersion()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta) r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletDeltaProtoImpl: void setPB(org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta)>($r2);

        return;
    }
}
