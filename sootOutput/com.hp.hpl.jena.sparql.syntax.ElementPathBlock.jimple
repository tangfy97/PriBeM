public class com.hp.hpl.jena.sparql.syntax.ElementPathBlock extends com.hp.hpl.jena.sparql.syntax.Element implements com.hp.hpl.jena.sparql.syntax.TripleCollectorMark
{
    private com.hp.hpl.jena.sparql.core.PathBlock pattern;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.core.PathBlock;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern> = $r1;

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.core.BasicPattern)
    {
        java.util.Iterator $r4;
        com.hp.hpl.jena.sparql.core.BasicPattern r2;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        com.hp.hpl.jena.graph.Triple r6;
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        java.util.List $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.core.PathBlock;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern> = $r1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.core.BasicPattern: java.util.List getList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.graph.Triple) $r5;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void addTriple(com.hp.hpl.jena.graph.Triple)>(r6);

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: boolean isEmpty()>();

        return $z0;
    }

    public void addTriple(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.core.PathBlock $r2;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.PathBlock: void add(com.hp.hpl.jena.sparql.core.TriplePath)>(r1);

        return;
    }

    public int mark()
    {
        int $i0;
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: int size()>();

        return $i0;
    }

    public void addTriple(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.core.TriplePath $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        com.hp.hpl.jena.graph.Triple r2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r2 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r1 = new com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.TriplePath: void <init>(com.hp.hpl.jena.graph.Triple)>(r2);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void addTriplePath(com.hp.hpl.jena.sparql.core.TriplePath)>($r1);

        return;
    }

    public void addTriple(int, com.hp.hpl.jena.graph.Triple)
    {
        int i0;
        com.hp.hpl.jena.sparql.core.TriplePath $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        com.hp.hpl.jena.graph.Triple r2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        i0 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.graph.Triple;

        $r1 = new com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.TriplePath: void <init>(com.hp.hpl.jena.graph.Triple)>(r2);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void addTriplePath(int,com.hp.hpl.jena.sparql.core.TriplePath)>(i0, $r1);

        return;
    }

    public void addTriplePath(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.core.PathBlock $r2;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.PathBlock: void add(com.hp.hpl.jena.sparql.core.TriplePath)>(r1);

        return;
    }

    public void addTriplePath(int, com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r2;
        int i0;
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        i0 := @parameter0: int;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.TriplePath;

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.PathBlock: void add(int,com.hp.hpl.jena.sparql.core.TriplePath)>(i0, r1);

        return;
    }

    public com.hp.hpl.jena.sparql.core.PathBlock getPattern()
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        return $r1;
    }

    public java.util.Iterator patternElts()
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;
        java.util.ListIterator $r2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: java.util.ListIterator iterator()>();

        return $r2;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r1;
        int $i0, i1;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.PathBlock: int hashCode()>();

        i1 = 161 ^ $i0;

        return i1;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r1, r2;
        com.hp.hpl.jena.sparql.core.PathBlock $r4, $r5;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r3;
        com.hp.hpl.jena.sparql.syntax.Element r0;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r3 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.syntax.ElementPathBlock) r0;

        $r5 = r2.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $r4 = r1.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: com.hp.hpl.jena.sparql.core.PathBlock pattern>;

        $z1 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.core.PathBlock: boolean equiv(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r4, r3);

        return $z1;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor r0;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r1;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r1);

        return;
    }
}
