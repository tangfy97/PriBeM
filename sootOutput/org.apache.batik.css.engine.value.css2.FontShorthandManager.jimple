public class org.apache.batik.css.engine.value.css2.FontShorthandManager extends org.apache.batik.css.engine.value.AbstractValueFactory implements org.apache.batik.css.engine.value.ShorthandManager
{
    static org.w3c.css.sac.LexicalUnit NORMAL_LU;
    static org.w3c.css.sac.LexicalUnit BOLD_LU;
    static org.w3c.css.sac.LexicalUnit MEDIUM_LU;
    static org.w3c.css.sac.LexicalUnit SZ_10PT_LU;
    static org.w3c.css.sac.LexicalUnit SZ_8PT_LU;
    static org.w3c.css.sac.LexicalUnit FONT_FAMILY_LU;
    protected static final java.util.Set values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.css2.FontShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValueFactory: void <init>()>();

        return;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.css2.FontShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        return "font";
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.css2.FontShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.css2.FontShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        return 0;
    }

    public void handleSystemFont(org.apache.batik.css.engine.CSSEngine, org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler, java.lang.String, boolean)
    {
        org.apache.batik.css.engine.value.css2.FontShorthandManager r7;
        org.apache.batik.css.engine.CSSEngine r8;
        org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler r6;
        org.w3c.css.sac.LexicalUnit r0, r1, r2, r3, r4, r9;
        java.lang.String r5;
        boolean $z0, z1;

        r7 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        r8 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        r6 := @parameter1: org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler;

        r5 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r0 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

        r1 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

        r2 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

        r3 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

        r4 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit FONT_FAMILY_LU>;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("small-caption");

        if $z0 == 0 goto label1;

        r9 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit SZ_8PT_LU>;

        goto label2;

     label1:
        r9 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit SZ_10PT_LU>;

     label2:
        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-family", r4, z1);

        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-style", r0, z1);

        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-variant", r1, z1);

        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-weight", r2, z1);

        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-size", r9, z1);

        interfaceinvoke r6.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("line-height", r3, z1);

        return;
    }

    public void setValues(org.apache.batik.css.engine.CSSEngine, org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler, org.w3c.css.sac.LexicalUnit, boolean)
    {
        org.apache.batik.css.engine.value.ValueManager[] $r4;
        java.util.Set $r2;
        org.apache.batik.css.engine.value.css2.FontShorthandManager r19;
        org.apache.batik.css.engine.value.ValueManager $r5, $r6, $r7, $r8;
        org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler r18;
        short $s0, $s6, $s7, $s8, $s9, $s10, $s11, $s12;
        java.lang.String $r0, $r1, $r13, $r14, $r15, $r26, $r27, $r28;
        org.apache.batik.css.engine.value.StringMap $r9, $r10, $r11, $r12;
        org.w3c.css.sac.LexicalUnit $r17, r38, r39, r40, r41, r42, r43, r44, r45;
        boolean $z0, z1, z2, z3, z4;
        org.apache.batik.css.engine.CSSEngine r3;
        org.w3c.dom.DOMException $r20, $r21, $r22, $r23, $r24, $r25, $r31, $r33;
        int $i1, $i2, $i3, $i4, $i5, $i13, $i14, $i15, $i16, $i18;
        org.apache.batik.css.engine.value.css2.FontSizeManager $r37;
        java.lang.Object $r16, $r29, $r30, $r32;
        org.apache.batik.css.engine.value.IdentifierManager $r34, $r35, $r36;

        r19 := @this: org.apache.batik.css.engine.value.css2.FontShorthandManager;

        r3 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        r18 := @parameter1: org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler;

        r38 := @parameter2: org.w3c.css.sac.LexicalUnit;

        z1 := @parameter3: boolean;

        $s0 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i13 = (int) $s0;

        lookupswitch($i13)
        {
            case 12: goto label01;
            case 35: goto label02;
            default: goto label03;
        };

     label01:
        return;

     label02:
        $r0 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label03;

        virtualinvoke r19.<org.apache.batik.css.engine.value.css2.FontShorthandManager: void handleSystemFont(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler,java.lang.String,boolean)>(r3, r18, $r1, z1);

        return;

     label03:
        r39 = null;

        r40 = null;

        r41 = null;

        r42 = null;

        r43 = null;

        $r4 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] getValueManagers()>();

        $i1 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("font-style");

        $i2 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("font-variant");

        $i3 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("font-weight");

        $i4 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("font-size");

        $i5 = virtualinvoke r3.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>("line-height");

        $r5 = $r4[$i1];

        $r34 = (org.apache.batik.css.engine.value.IdentifierManager) $r5;

        $r6 = $r4[$i2];

        $r35 = (org.apache.batik.css.engine.value.IdentifierManager) $r6;

        $r7 = $r4[$i3];

        $r36 = (org.apache.batik.css.engine.value.IdentifierManager) $r7;

        $r8 = $r4[$i4];

        $r37 = (org.apache.batik.css.engine.value.css2.FontSizeManager) $r8;

        $r9 = virtualinvoke $r34.<org.apache.batik.css.engine.value.IdentifierManager: org.apache.batik.css.engine.value.StringMap getIdentifiers()>();

        $r10 = virtualinvoke $r35.<org.apache.batik.css.engine.value.IdentifierManager: org.apache.batik.css.engine.value.StringMap getIdentifiers()>();

        $r11 = virtualinvoke $r36.<org.apache.batik.css.engine.value.IdentifierManager: org.apache.batik.css.engine.value.StringMap getIdentifiers()>();

        $r12 = virtualinvoke $r37.<org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap getIdentifiers()>();

        z2 = 0;

        z4 = 0;

        z3 = 0;

        r44 = null;

        goto label15;

     label04:
        $s10 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i14 = (int) $s10;

        lookupswitch($i14)
        {
            case 13: goto label11;
            case 35: goto label05;
            default: goto label13;
        };

     label05:
        $r26 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>();

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String intern()>();

        if r39 != null goto label07;

        $r32 = virtualinvoke $r9.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r28);

        if $r32 == null goto label07;

        r39 = r38;

        if r44 == null goto label14;

        if r41 != null goto label06;

        r41 = r44;

        r44 = null;

        goto label14;

     label06:
        $s12 = interfaceinvoke r44.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r33 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s12);

        throw $r33;

     label07:
        if r40 != null goto label09;

        $r30 = virtualinvoke $r10.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r28);

        if $r30 == null goto label09;

        r40 = r38;

        if r44 == null goto label14;

        if r41 != null goto label08;

        r41 = r44;

        r44 = null;

        goto label14;

     label08:
        $s11 = interfaceinvoke r44.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r31 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s11);

        throw $r31;

     label09:
        if r44 != null goto label10;

        if r41 != null goto label10;

        $r29 = virtualinvoke $r11.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r28);

        if $r29 == null goto label10;

        r41 = r38;

        goto label14;

     label10:
        z2 = 1;

        z4 = 1;

        z3 = 1;

        goto label14;

     label11:
        if r44 != null goto label12;

        if r41 != null goto label12;

        r44 = r38;

        goto label14;

     label12:
        z2 = 1;

        z4 = 1;

        z3 = 1;

        goto label14;

     label13:
        z2 = 1;

        z4 = 1;

        z3 = 1;

     label14:
        if z3 != 0 goto label15;

        r38 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

     label15:
        if z4 != 0 goto label16;

        if r38 != null goto label04;

     label16:
        if r38 != null goto label17;

        $r25 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()>();

        throw $r25;

     label17:
        $s6 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i15 = (int) $s6;

        tableswitch($i15)
        {
            case 13: goto label20;
            case 14: goto label20;
            case 15: goto label20;
            case 16: goto label20;
            case 17: goto label20;
            case 18: goto label20;
            case 19: goto label20;
            case 20: goto label20;
            case 21: goto label20;
            case 22: goto label20;
            case 23: goto label20;
            case 24: goto label21;
            case 25: goto label21;
            case 26: goto label21;
            case 27: goto label21;
            case 28: goto label21;
            case 29: goto label21;
            case 30: goto label21;
            case 31: goto label21;
            case 32: goto label21;
            case 33: goto label21;
            case 34: goto label21;
            case 35: goto label18;
            default: goto label21;
        };

     label18:
        $r13 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String intern()>();

        $r16 = virtualinvoke $r12.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r15);

        if $r16 == null goto label19;

        r42 = r38;

        r38 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

     label19:
        goto label21;

     label20:
        r42 = r38;

        r38 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

     label21:
        if r42 != null goto label23;

        if r44 == null goto label22;

        r42 = r44;

        r44 = null;

        goto label23;

     label22:
        $s9 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r24 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s9);

        throw $r24;

     label23:
        if r44 == null goto label25;

        if r41 != null goto label24;

        r41 = r44;

        goto label25;

     label24:
        $s8 = interfaceinvoke r44.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r23 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s8);

        throw $r23;

     label25:
        if r38 != null goto label26;

        $r22 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()>();

        throw $r22;

     label26:
        $s7 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i16 = (int) $s7;

        lookupswitch($i16)
        {
            case 4: goto label27;
            default: goto label29;
        };

     label27:
        $r17 = interfaceinvoke r38.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        if $r17 != null goto label28;

        $r21 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()>();

        throw $r21;

     label28:
        r43 = $r17;

        r38 = interfaceinvoke $r17.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

     label29:
        if r38 != null goto label30;

        $r20 = virtualinvoke r19.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()>();

        throw $r20;

     label30:
        r45 = r38;

        if r39 != null goto label31;

        r39 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

     label31:
        if r40 != null goto label32;

        r40 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

     label32:
        if r41 != null goto label33;

        r41 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

     label33:
        if r43 != null goto label34;

        r43 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU>;

     label34:
        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-family", r45, z1);

        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-style", r39, z1);

        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-variant", r40, z1);

        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-weight", r41, z1);

        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("font-size", r42, z1);

        $i18 = (int) -1;

        if $i5 == $i18 goto label35;

        interfaceinvoke r18.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("line-height", r43, z1);

     label35:
        return;
    }

    static void <clinit>()
    {
        org.apache.batik.css.parser.CSSLexicalUnit $r0, $r1, $r2, $r3, $r4, $r5, $r7;
        java.util.Set $r9, $r10, $r11, $r12, $r13, $r14;
        java.util.HashSet $r8;
        org.w3c.css.sac.LexicalUnit $r6;

        $r0 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "normal", null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit NORMAL_LU> = $r0;

        $r1 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "bold", null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit BOLD_LU> = $r1;

        $r2 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "medium", null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit MEDIUM_LU> = $r2;

        $r3 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createFloat(short,float,org.w3c.css.sac.LexicalUnit)>(21, 10.0F, null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit SZ_10PT_LU> = $r3;

        $r4 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createFloat(short,float,org.w3c.css.sac.LexicalUnit)>(21, 8.0F, null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit SZ_8PT_LU> = $r4;

        $r5 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "Dialog", null);

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit FONT_FAMILY_LU> = $r5;

        $r6 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: org.w3c.css.sac.LexicalUnit FONT_FAMILY_LU>;

        $r7 = staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "Helvetica", $r6);

        staticinvoke <org.apache.batik.css.parser.CSSLexicalUnit: org.apache.batik.css.parser.CSSLexicalUnit createString(short,java.lang.String,org.w3c.css.sac.LexicalUnit)>(35, "sans-serif", $r7);

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values> = $r8;

        $r9 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("caption");

        $r10 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("icon");

        $r11 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("menu");

        $r12 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("message-box");

        $r13 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("small-caption");

        $r14 = <org.apache.batik.css.engine.value.css2.FontShorthandManager: java.util.Set values>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("status-bar");

        return;
    }
}
