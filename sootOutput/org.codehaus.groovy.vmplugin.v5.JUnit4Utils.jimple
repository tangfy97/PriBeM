public class org.codehaus.groovy.vmplugin.v5.JUnit4Utils extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.groovy.vmplugin.v5.JUnit4Utils r0;

        r0 := @this: org.codehaus.groovy.vmplugin.v5.JUnit4Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Boolean realIsJUnit4Test(java.lang.Class, groovy.lang.GroovyClassLoader)
    {
        java.lang.Throwable $r8;
        java.lang.reflect.Method[] $r5;
        java.lang.'annotation'.Annotation $r3, $r7;
        int $i0, i1;
        java.lang.Boolean $r10;
        java.lang.Class $r1, r2, $r4;
        java.lang.ClassNotFoundException $r9;
        groovy.lang.GroovyClassLoader r0;
        java.lang.reflect.Method r6;
        boolean z0;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: groovy.lang.GroovyClassLoader;

        z0 = 0;

     label01:
        $r1 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String)>("org.junit.runner.RunWith");

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

        if $r3 == null goto label02;

        z0 = 1;

        goto label05;

     label02:
        $r4 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String)>("org.junit.Test");

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i1 = 0;

     label03:
        $i0 = lengthof $r5;

        if i1 >= $i0 goto label05;

        r6 = $r5[i1];

        $r7 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r4);

        if $r7 == null goto label04;

        z0 = 1;

        goto label05;

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

     label09:
        if z0 == 0 goto label10;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label11;

     label10:
        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label11:
        return $r10;

        catch java.lang.ClassNotFoundException from label01 to label05 with label06;
        catch java.lang.Throwable from label01 to label07 with label08;
    }

    static java.lang.Object realRunJUnit4Test(java.lang.Class)
    {
        groovy.lang.GroovyRuntimeException $r33;
        java.util.List r22;
        java.lang.Object[] $r0;
        java.lang.StringBuffer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r24, $r26, $r28;
        int $i0, i1;
        java.lang.String $r8, $r14, $r20, $r29;
        java.io.PrintStream $r4, $r10, $r16, $r25, $r30;
        java.lang.Class r1;
        java.lang.Object $r2, $r6, $r12, $r18, $r21, $r23, $r27, $r31;
        java.lang.ClassNotFoundException $r32;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("org.junit.runner.JUnitCore", "runClasses", $r0);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JUnit 4 Runner, Tests: ");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r2, "runCount");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Failures: ");

        $r12 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r2, "failureCount");

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Time: ");

        $r18 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r2, "runTime");

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r2, "failures");

        r22 = (java.util.List) $r21;

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r22.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r23 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i1);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Test Failure: ");

        $r27 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r23, "description");

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r31 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r23, "trace");

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.Object)>($r31);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r2;

     label4:
        $r32 := @caughtexception;

        $r33 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r33.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Error running JUnit 4 test.");

        throw $r33;

        catch java.lang.ClassNotFoundException from label1 to label3 with label4;
    }
}
