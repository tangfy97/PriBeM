public class org.jdesktop.swingx.auth.DefaultUserNameStore extends org.jdesktop.swingx.auth.UserNameStore
{
    private static final java.lang.String USER_KEY;
    private static final java.lang.String NUM_KEY;
    private java.util.prefs.Preferences prefs;
    private java.lang.String[] userNames;

    public void <init>()
    {
        java.lang.String[] $r1;
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        specialinvoke r0.<org.jdesktop.swingx.auth.UserNameStore: void <init>()>();

        $r1 = newarray (java.lang.String)[0];

        r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames> = $r1;

        return;
    }

    public void loadUserNames()
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.lang.String[] r3;
        java.util.prefs.Preferences $r1, $r2, $r5;
        int $i0, i1;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8, $r9;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        specialinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void initPrefs()>();

        $r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        if $r1 == null goto label3;

        $r2 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        $i0 = virtualinvoke $r2.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>("usernames.length", 0);

        r3 = newarray (java.lang.String)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usernames.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>($r8, null);

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void setUserNames(java.lang.String[])>(r3);

     label3:
        return;
    }

    public void saveUserNames()
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.lang.String[] $r2, $r4, $r10;
        java.util.prefs.Preferences $r1, $r3, $r6;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r9, $r11;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        specialinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void initPrefs()>();

        $r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        if $r1 == null goto label2;

        $r3 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        $r2 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i0 = lengthof $r2;

        virtualinvoke $r3.<java.util.prefs.Preferences: void putInt(java.lang.String,int)>("usernames.length", $i0);

        i2 = 0;

     label1:
        $r4 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i1 = lengthof $r4;

        if i2 >= $i1 goto label2;

        $r6 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usernames.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $r11 = $r10[i2];

        virtualinvoke $r6.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>($r9, $r11);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String[] getUserNames()
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        int $i0, $i1;
        java.lang.String[] $r1, r2, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        $r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        $r4 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $r3 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i1);

        return r2;
    }

    public void setUserNames(java.lang.String[])
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.lang.String[] $r1, $r2, r3, $r4;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        r3 := @parameter0: java.lang.String[];

        if r3 != null goto label1;

        $r4 = newarray (java.lang.String)[0];

        goto label2;

     label1:
        $r4 = r3;

     label2:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] getUserNames()>();

        r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames> = $r4;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] getUserNames()>();

        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("userNames", $r1, $r2);

        return;
    }

    public void addUserName(java.lang.String)
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.lang.String[] $r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: boolean containsUserName(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

        $r2 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i0 = lengthof $r2;

        $i1 = $i0 + 1;

        r3 = newarray (java.lang.String)[$i1];

        i5 = 0;

     label1:
        $r4 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i2 = lengthof $r4;

        if i5 >= $i2 goto label2;

        $r5 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $r6 = $r5[i5];

        r3[i5] = $r6;

        i5 = i5 + 1;

        goto label1;

     label2:
        $i3 = lengthof r3;

        $i4 = $i3 - 1;

        r3[$i4] = r1;

        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void setUserNames(java.lang.String[])>(r3);

     label3:
        return;
    }

    public void removeUserName(java.lang.String)
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.lang.String[] $r2, r3, r4;
        int $i0, $i1, i2, $i3, i4, i5;
        java.lang.String r1, r5;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: boolean containsUserName(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $r2 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        r3 = newarray (java.lang.String)[$i1];

        i4 = 0;

        r4 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        i2 = lengthof r4;

        i5 = 0;

     label1:
        if i5 >= i2 goto label3;

        r5 = r4[i5];

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $i3 = i4;

        i4 = i4 + 1;

        r3[$i3] = r5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void setUserNames(java.lang.String[])>(r3);

     label4:
        return;
    }

    public boolean containsUserName(java.lang.String)
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        r3 := @parameter0: java.lang.String;

        r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String[] userNames>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.util.prefs.Preferences getPreferences()
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.util.prefs.Preferences $r1;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        $r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        return $r1;
    }

    public void setPreferences(java.util.prefs.Preferences)
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.util.prefs.Preferences $r1, r2, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        r2 := @parameter0: java.util.prefs.Preferences;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences getPreferences()>();

        specialinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void initPrefs()>();

        r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences getPreferences()>();

        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("preferences", $r1, $r3);

        $r4 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        if $r4 == $r1 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: void loadUserNames()>();

     label1:
        return;
    }

    private void initPrefs()
    {
        org.jdesktop.swingx.auth.DefaultUserNameStore r0;
        java.util.prefs.Preferences $r1, $r2, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.auth.DefaultUserNameStore;

        $r1 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>(class "Lorg/jdesktop/swingx/auth/DefaultUserNameStore;");

        r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs> = $r2;

        $r3 = r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs>;

        $r4 = virtualinvoke $r3.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>("DefaultUserNameStore");

        r0.<org.jdesktop.swingx.auth.DefaultUserNameStore: java.util.prefs.Preferences prefs> = $r4;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String NUM_KEY> = "usernames.length";

        <org.jdesktop.swingx.auth.DefaultUserNameStore: java.lang.String USER_KEY> = "usernames";

        return;
    }
}
