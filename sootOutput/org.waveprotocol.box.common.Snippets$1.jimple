final class org.waveprotocol.box.common.Snippets$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    final java.lang.StringBuilder val$resultBuilder;

    void <init>(java.lang.StringBuilder)
    {
        java.lang.StringBuilder r1;
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: java.lang.StringBuilder;

        r0.<org.waveprotocol.box.common.Snippets$1: java.lang.StringBuilder val$resultBuilder> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void characters(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.common.Snippets$1: java.lang.StringBuilder val$resultBuilder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.box.common.Snippets$1 r1;
        java.lang.StringBuilder $r2;
        java.lang.String r0;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        boolean $z0;

        r1 := @this: org.waveprotocol.box.common.Snippets$1;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("line");

        if $z0 == 0 goto label1;

        $r2 = r1.<org.waveprotocol.box.common.Snippets$1: java.lang.StringBuilder val$resultBuilder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label1:
        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        return;
    }

    public void retain(int)
    {
        int i0;
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        i0 := @parameter0: int;

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.Snippets$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.box.common.Snippets$1 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.box.common.Snippets$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.box.common.Snippets$1 r0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;

        r0 := @this: org.waveprotocol.box.common.Snippets$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        return;
    }
}
