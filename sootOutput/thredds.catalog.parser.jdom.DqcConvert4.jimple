public class thredds.catalog.parser.jdom.DqcConvert4 extends java.lang.Object implements thredds.catalog.query.DqcConvertIF
{
    public static boolean debugURL;
    public static boolean debugXML;
    public static boolean debugDBurl;
    public static boolean debugXMLopen;
    public static boolean showParsedXML;
    public static boolean showXMLoutput;
    protected static final org.jdom.Namespace defNS;
    protected static final org.jdom.Namespace xlinkNS;
    private thredds.catalog.query.DqcFactory factory;
    private java.net.URI docURI;

    public void <init>()
    {
        thredds.catalog.parser.jdom.DqcConvert4 r0;

        r0 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public thredds.catalog.query.QueryCapability parseXML(thredds.catalog.query.DqcFactory, org.jdom.Document, java.net.URI) throws java.io.IOException
    {
        org.jdom.output.XMLOutputter $r8;
        thredds.catalog.query.QueryCapability $r5;
        org.jdom.Document r3;
        java.net.URI r2;
        java.lang.String $r12, $r15;
        boolean $z0, $z1;
        java.io.PrintStream $r6, $r7, $r10;
        thredds.catalog.parser.jdom.DqcConvert4 r0;
        thredds.catalog.query.DqcFactory r1;
        java.lang.StringBuilder $r9, $r11, $r13, $r14;
        org.jdom.Element $r4;

        r0 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r1 := @parameter0: thredds.catalog.query.DqcFactory;

        r3 := @parameter1: org.jdom.Document;

        r2 := @parameter2: java.net.URI;

        r0.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.DqcFactory factory> = r1;

        r0.<thredds.catalog.parser.jdom.DqcConvert4: java.net.URI docURI> = r2;

        $z0 = <thredds.catalog.parser.jdom.DqcConvert4: boolean showParsedXML>;

        if $z0 == 0 goto label1;

        $r8 = new org.jdom.output.XMLOutputter;

        specialinvoke $r8.<org.jdom.output.XMLOutputter: void <init>()>();

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** DqcConvert3/showParsedXML = \n");

        $r12 = virtualinvoke $r8.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>(r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label1:
        $r4 = virtualinvoke r3.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r5 = specialinvoke r0.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.QueryCapability readQC(org.jdom.Element)>($r4);

        $z1 = <thredds.catalog.parser.jdom.DqcConvert4: boolean showXMLoutput>;

        if $z1 == 0 goto label2;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("*** DqcConvert3/showXMLoutput");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r0.<thredds.catalog.parser.jdom.DqcConvert4: void writeXML(thredds.catalog.query.QueryCapability,java.io.OutputStream)>($r5, $r7);

     label2:
        return $r5;
    }

    private thredds.catalog.query.ListChoice readChoice(thredds.catalog.query.QueryCapability, thredds.catalog.query.Selector, org.jdom.Element)
    {
        thredds.catalog.InvDocumentation $r9;
        thredds.catalog.query.SelectList $r14;
        thredds.catalog.query.Selector r4;
        thredds.catalog.query.QueryCapability r13;
        int $i0, i1;
        org.jdom.Namespace $r6;
        java.lang.String $r1, $r2, $r12;
        boolean $z0;
        thredds.catalog.parser.jdom.DqcConvert4 r8;
        thredds.catalog.query.ListChoice $r3;
        java.util.List $r5;
        java.lang.Object $r10;
        org.jdom.Element r0, $r7, r11;

        r8 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r13 := @parameter0: thredds.catalog.query.QueryCapability;

        r4 := @parameter1: thredds.catalog.query.Selector;

        r0 := @parameter2: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        $r3 = new thredds.catalog.query.ListChoice;

        specialinvoke $r3.<thredds.catalog.query.ListChoice: void <init>(thredds.catalog.query.Selector,java.lang.String,java.lang.String,java.lang.String)>(r4, $r1, $r2, null);

        $r5 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r11 = (org.jdom.Element) $r10;

        $r12 = virtualinvoke r11.<org.jdom.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("selectList");

        if $z0 == 0 goto label2;

        $r14 = specialinvoke r8.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability,org.jdom.Element)>(r13, r11);

        virtualinvoke $r3.<thredds.catalog.query.ListChoice: void addNestedSelector(thredds.catalog.query.SelectList)>($r14);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r7 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("description", $r6);

        if $r7 == null goto label4;

        $r9 = virtualinvoke r8.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.InvDocumentation readDocumentation(org.jdom.Element)>($r7);

        virtualinvoke $r3.<thredds.catalog.query.ListChoice: void setDescription(thredds.catalog.InvDocumentation)>($r9);

     label4:
        return $r3;
    }

    private org.jdom.Element writeChoice(thredds.catalog.query.ListChoice)
    {
        thredds.catalog.InvDocumentation $r5, $r12;
        thredds.catalog.query.SelectList $r10;
        thredds.catalog.query.Selector r8;
        java.util.ArrayList $r6;
        int i0, $i1;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4;
        boolean $z0;
        thredds.catalog.parser.jdom.DqcConvert4 r9;
        thredds.catalog.query.ListChoice r2;
        java.lang.Object $r7;
        org.jdom.Element $r0, $r11, $r13;

        r9 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r2 := @parameter0: thredds.catalog.query.ListChoice;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("choice", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.lang.String getValue()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r4);

        $r5 = virtualinvoke r2.<thredds.catalog.query.ListChoice: thredds.catalog.InvDocumentation getDescription()>();

        if $r5 == null goto label1;

        $r12 = virtualinvoke r2.<thredds.catalog.query.ListChoice: thredds.catalog.InvDocumentation getDescription()>();

        $r13 = specialinvoke r9.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeDocumentation(thredds.catalog.InvDocumentation,java.lang.String)>($r12, "description");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r13);

     label1:
        $r6 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.util.ArrayList getNestedSelectors()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (thredds.catalog.query.Selector) $r7;

        $z0 = r8 instanceof thredds.catalog.query.SelectList;

        if $z0 == 0 goto label3;

        $r10 = (thredds.catalog.query.SelectList) r8;

        $r11 = specialinvoke r9.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectList(thredds.catalog.query.SelectList)>($r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return $r0;
    }

    protected thredds.catalog.InvDocumentation readDocumentation(org.jdom.Element)
    {
        thredds.catalog.InvDocumentation $r20;
        org.jdom.Namespace $r1, $r3;
        java.lang.String $r2, $r4, $r5, $r6, $r15, $r18;
        java.net.URI $r8, r19;
        thredds.catalog.parser.jdom.DqcConvert4 r7;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r17;
        thredds.catalog.query.DqcFactory $r11;
        org.jdom.Element r0;

        r7 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace xlinkNS>;

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>("href", $r1);

        $r3 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace xlinkNS>;

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>("title", $r3);

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getTextNormalize()>();

        r19 = null;

        if $r2 == null goto label4;

     label1:
        $r8 = r7.<thredds.catalog.parser.jdom.DqcConvert4: java.net.URI docURI>;

        r19 = virtualinvoke $r8.<java.net.URI: java.net.URI resolve(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r11 = r7.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.DqcFactory factory>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** Invalid documentation href = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<thredds.catalog.query.DqcFactory: void appendErr(java.lang.String)>($r18);

     label4:
        $r20 = new thredds.catalog.InvDocumentation;

        specialinvoke $r20.<thredds.catalog.InvDocumentation: void <init>(java.lang.String,java.net.URI,java.lang.String,java.lang.String,java.lang.String)>($r2, r19, $r4, $r5, $r6);

        return $r20;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.jdom.Element writeDocumentation(thredds.catalog.InvDocumentation, java.lang.String)
    {
        thredds.catalog.InvDocumentation r3;
        org.jdom.Namespace $r2, $r7, $r12;
        java.lang.String r1, $r4, $r6, $r8, $r10, $r11, $r13, $r15;
        java.net.URI $r5, $r9;
        boolean $z0, $z1;
        thredds.catalog.parser.jdom.DqcConvert4 r14;
        org.jdom.Element $r0;

        r14 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.InvDocumentation;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.jdom.Element;

        $r2 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>(r1, $r2);

        $r4 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.lang.String getType()>();

        if $r4 == null goto label1;

        $r13 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.lang.String getType()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r13);

     label1:
        $z0 = virtualinvoke r3.<thredds.catalog.InvDocumentation: boolean hasXlink()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        $r7 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace xlinkNS>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>("href", $r6, $r7);

        $r8 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.lang.String getXlinkTitle()>();

        $r9 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.net.URI getURI()>();

        $r10 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label2;

        $r11 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.lang.String getXlinkTitle()>();

        $r12 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace xlinkNS>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>("title", $r11, $r12);

     label2:
        $r15 = virtualinvoke r3.<thredds.catalog.InvDocumentation: java.lang.String getInlineContent()>();

        if $r15 == null goto label3;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r15);

     label3:
        return $r0;
    }

    private thredds.catalog.query.Location readLocation(org.jdom.Element)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r8;
        thredds.catalog.query.Location $r7;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        org.jdom.Element r0;

        r8 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("latitude");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("longitude");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("elevation");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("latitude_units");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("longitude_units");

        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("elevation_units");

        $r7 = new thredds.catalog.query.Location;

        specialinvoke $r7.<thredds.catalog.query.Location: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6);

        return $r7;
    }

    private org.jdom.Element writeLocation(thredds.catalog.query.Location, java.lang.String)
    {
        thredds.catalog.query.Location r1;
        org.jdom.Namespace $r3;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1, $d2;
        thredds.catalog.parser.jdom.DqcConvert4 r10;
        org.jdom.Element $r0;

        r10 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r1 := @parameter0: thredds.catalog.query.Location;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.jdom.Element;

        $z0 = virtualinvoke r1.<thredds.catalog.query.Location: boolean hasElevation()>();

        if $z0 == 0 goto label1;

        $r11 = "location3D";

        goto label2;

     label1:
        $r11 = r2;

     label2:
        $r3 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>($r11, $r3);

        $d0 = virtualinvoke r1.<thredds.catalog.query.Location: double getLatitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("latitude", $r4);

        $d1 = virtualinvoke r1.<thredds.catalog.query.Location: double getLongitude()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("longitude", $r5);

        $z1 = virtualinvoke r1.<thredds.catalog.query.Location: boolean isDefaultLatitudeUnits()>();

        if $z1 != 0 goto label3;

        $r9 = virtualinvoke r1.<thredds.catalog.query.Location: java.lang.String getLatitudeUnits()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("latitude_units", $r9);

     label3:
        $z2 = virtualinvoke r1.<thredds.catalog.query.Location: boolean isDefaultLongitudeUnits()>();

        if $z2 != 0 goto label4;

        $r8 = virtualinvoke r1.<thredds.catalog.query.Location: java.lang.String getLongitudeUnits()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("longitude_units", $r8);

     label4:
        $z3 = virtualinvoke r1.<thredds.catalog.query.Location: boolean hasElevation()>();

        if $z3 == 0 goto label5;

        $d2 = virtualinvoke r1.<thredds.catalog.query.Location: double getElevation()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("elevation", $r6);

        $z4 = virtualinvoke r1.<thredds.catalog.query.Location: boolean isDefaultElevationUnits()>();

        if $z4 != 0 goto label5;

        $r7 = virtualinvoke r1.<thredds.catalog.query.Location: java.lang.String getElevationUnits()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("elevation_units", $r7);

     label5:
        return $r0;
    }

    private thredds.catalog.query.QueryCapability readQC(org.jdom.Element)
    {
        thredds.catalog.query.Selector r21;
        thredds.catalog.query.QueryCapability $r3;
        thredds.catalog.query.SelectService $r12;
        int $i0, i1, $i2, i3;
        org.jdom.Namespace $r7, $r10, $r13, $r15;
        java.lang.String $r1, $r2, $r6;
        java.net.URI $r5;
        boolean $z0;
        thredds.catalog.parser.jdom.DqcConvert4 r4;
        java.util.Iterator $r19;
        thredds.catalog.query.Query $r9;
        java.util.List $r14, $r16, $r18;
        java.lang.Object $r17, $r20, $r22;
        org.jdom.Element r0, $r8, $r11, r23, r24;

        r4 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("version");

        $r3 = new thredds.catalog.query.QueryCapability;

        $r5 = r4.<thredds.catalog.parser.jdom.DqcConvert4: java.net.URI docURI>;

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r3.<thredds.catalog.query.QueryCapability: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, $r2);

        $r7 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r8 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("query", $r7);

        $r9 = specialinvoke r4.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.Query readQuery(org.jdom.Element)>($r8);

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void setQuery(thredds.catalog.query.Query)>($r9);

        $r10 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r11 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("selectService", $r10);

        $r12 = specialinvoke r4.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectService readSelectService(org.jdom.Element)>($r11);

        if null == $r12 goto label1;

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r12);

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void setServiceSelector(thredds.catalog.query.Selector)>($r12);

     label1:
        $r13 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r14 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("userInterface", $r13);

        i1 = 0;

     label2:
        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $r22 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i1);

        r23 = (org.jdom.Element) $r22;

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void addUserInterface(java.lang.Object)>(r23);

        i1 = i1 + 1;

        goto label2;

     label3:
        specialinvoke r4.<thredds.catalog.parser.jdom.DqcConvert4: java.util.List readSelectors(thredds.catalog.query.QueryCapability,org.jdom.Element)>($r3, r0);

        $r15 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r16 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("compound", $r15);

        i3 = 0;

     label4:
        $i0 = interfaceinvoke $r16.<java.util.List: int size()>();

        if i3 >= $i0 goto label7;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i3);

        r24 = (org.jdom.Element) $r17;

        $r18 = specialinvoke r4.<thredds.catalog.parser.jdom.DqcConvert4: java.util.List readSelectors(thredds.catalog.query.QueryCapability,org.jdom.Element)>($r3, r24);

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (thredds.catalog.query.Selector) $r20;

        virtualinvoke r21.<thredds.catalog.query.Selector: void setCompoundSelectors(java.util.List)>($r18);

        goto label5;

     label6:
        i3 = i3 + 1;

        goto label4;

     label7:
        return $r3;
    }

    private java.util.List readSelectors(thredds.catalog.query.QueryCapability, org.jdom.Element)
    {
        thredds.catalog.query.QueryCapability r16;
        org.jdom.Namespace $r2, $r4, $r6, $r8, $r10;
        thredds.catalog.query.SelectRangeDate $r19;
        thredds.catalog.query.SelectStation $r25;
        java.util.List $r3, $r5, $r7, $r9, $r11;
        thredds.catalog.query.SelectGeoRegion $r15;
        thredds.catalog.query.SelectList $r28;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        thredds.catalog.parser.jdom.DqcConvert4 r12;
        thredds.catalog.query.SelectRange $r22;
        java.lang.Object $r13, $r17, $r20, $r23, $r26;
        org.jdom.Element r1, $r14, $r18, $r21, $r24, $r27;

        r12 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r16 := @parameter0: thredds.catalog.query.QueryCapability;

        r1 := @parameter1: org.jdom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r3 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("selectList", $r2);

        i5 = 0;

     label01:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i5 >= $i0 goto label03;

        $r26 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i5);

        $r27 = (org.jdom.Element) $r26;

        $r28 = specialinvoke r12.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability,org.jdom.Element)>(r16, $r27);

        if null == $r28 goto label02;

        virtualinvoke r16.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r28);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

     label02:
        i5 = i5 + 1;

        goto label01;

     label03:
        $r4 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r5 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("selectStation", $r4);

        i6 = 0;

     label04:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i6 >= $i1 goto label06;

        $r23 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i6);

        $r24 = (org.jdom.Element) $r23;

        $r25 = specialinvoke r12.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectStation readSelectStation(org.jdom.Element)>($r24);

        if null == $r25 goto label05;

        virtualinvoke r16.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r25);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

     label05:
        i6 = i6 + 1;

        goto label04;

     label06:
        $r6 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r7 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("selectFromRange", $r6);

        i7 = 0;

     label07:
        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i7 >= $i2 goto label09;

        $r20 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        $r21 = (org.jdom.Element) $r20;

        $r22 = specialinvoke r12.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectRange readSelectRange(org.jdom.Element)>($r21);

        if null == $r22 goto label08;

        virtualinvoke r16.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r22);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        $r8 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r9 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("selectFromDateRange", $r8);

        i8 = 0;

     label10:
        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i8 >= $i3 goto label12;

        $r17 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r18 = (org.jdom.Element) $r17;

        $r19 = specialinvoke r12.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectRangeDate readSelectRangeDate(org.jdom.Element)>($r18);

        if null == $r19 goto label11;

        virtualinvoke r16.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r19);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label11:
        i8 = i8 + 1;

        goto label10;

     label12:
        $r10 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r11 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("selectFromGeoRegion", $r10);

        i9 = 0;

     label13:
        $i4 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i9 >= $i4 goto label15;

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i9);

        $r14 = (org.jdom.Element) $r13;

        $r15 = specialinvoke r12.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.SelectGeoRegion readSelectGeoRegion(org.jdom.Element)>($r14);

        if null == $r15 goto label14;

        virtualinvoke r16.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r15);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label14:
        i9 = i9 + 1;

        goto label13;

     label15:
        return $r0;
    }

    public org.jdom.Document writeQC(thredds.catalog.query.QueryCapability)
    {
        thredds.catalog.query.Selector $r9, r25;
        thredds.catalog.query.QueryCapability r3;
        org.jdom.Document $r2;
        org.jdom.Namespace $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        thredds.catalog.query.SelectRangeDate $r18;
        thredds.catalog.query.SelectStation $r14;
        thredds.catalog.query.Query $r7;
        thredds.catalog.query.SelectGeoRegion $r16;
        thredds.catalog.query.SelectList $r22;
        java.util.ArrayList $r12;
        thredds.catalog.query.SelectService $r10;
        int i0, $i1;
        java.lang.String $r4, $r5, $r24;
        thredds.catalog.parser.jdom.DqcConvert4 r6;
        thredds.catalog.query.SelectRange $r20;
        java.lang.Object $r13;
        org.jdom.Element $r0, $r8, $r11, $r15, $r17, $r19, $r21, $r23;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.QueryCapability;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("queryCapability", $r1);

        $r2 = new org.jdom.Document;

        specialinvoke $r2.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r4 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        if null == $r4 goto label01;

        $r24 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r24);

     label01:
        $r5 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getVersion()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("version", $r5);

        $r7 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Query getQuery()>();

        $r8 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeQuery(thredds.catalog.query.Query)>($r7);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        $r9 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Selector getServiceSelector()>();

        $r10 = (thredds.catalog.query.SelectService) $r9;

        $r11 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectService(thredds.catalog.query.SelectService)>($r10);

        if $r11 == null goto label02;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label02:
        $r12 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.util.ArrayList getSelectors()>();

        i0 = 0;

     label03:
        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i0 >= $i1 goto label10;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i0);

        r25 = (thredds.catalog.query.Selector) $r13;

        $z0 = r25 instanceof thredds.catalog.query.SelectList;

        if $z0 == 0 goto label04;

        $r22 = (thredds.catalog.query.SelectList) r25;

        $r23 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectList(thredds.catalog.query.SelectList)>($r22);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r23);

        goto label09;

     label04:
        $z1 = r25 instanceof thredds.catalog.query.SelectRange;

        if $z1 == 0 goto label05;

        $r20 = (thredds.catalog.query.SelectRange) r25;

        $r21 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectRange(thredds.catalog.query.SelectRange)>($r20);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

        goto label09;

     label05:
        $z2 = r25 instanceof thredds.catalog.query.SelectRangeDate;

        if $z2 == 0 goto label06;

        $r18 = (thredds.catalog.query.SelectRangeDate) r25;

        $r19 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectRangeDate(thredds.catalog.query.SelectRangeDate)>($r18);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r19);

        goto label09;

     label06:
        $z3 = r25 instanceof thredds.catalog.query.SelectGeoRegion;

        if $z3 == 0 goto label07;

        $r16 = (thredds.catalog.query.SelectGeoRegion) r25;

        $r17 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectGeoRegion(thredds.catalog.query.SelectGeoRegion)>($r16);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r17);

        goto label09;

     label07:
        $z4 = r25 instanceof thredds.catalog.query.SelectService;

        if $z4 == 0 goto label08;

        goto label09;

     label08:
        $z5 = r25 instanceof thredds.catalog.query.SelectStation;

        if $z5 == 0 goto label09;

        $r14 = (thredds.catalog.query.SelectStation) r25;

        $r15 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeSelectStation(thredds.catalog.query.SelectStation)>($r14);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

     label09:
        i0 = i0 + 1;

        goto label03;

     label10:
        return $r2;
    }

    private thredds.catalog.query.Query readQuery(org.jdom.Element)
    {
        java.lang.String $r1, $r10, $r13;
        java.net.URI $r3, r14;
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        java.lang.Exception $r4;
        thredds.catalog.query.Query $r15;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11, $r12;
        thredds.catalog.query.DqcFactory $r6;
        org.jdom.Element r0;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("base");

        r14 = null;

        if $r1 == null goto label4;

     label1:
        $r3 = r2.<thredds.catalog.parser.jdom.DqcConvert4: java.net.URI docURI>;

        r14 = virtualinvoke $r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = r2.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.DqcFactory factory>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** Invalid query base = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<thredds.catalog.query.DqcFactory: void appendFatalErr(java.lang.String)>($r13);

     label4:
        $r15 = new thredds.catalog.query.Query;

        specialinvoke $r15.<thredds.catalog.query.Query: void <init>(java.lang.String,java.net.URI,java.lang.String)>($r1, r14, null);

        return $r15;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.jdom.Element writeQuery(thredds.catalog.query.Query)
    {
        thredds.catalog.query.Query r2;
        thredds.catalog.parser.jdom.DqcConvert4 r4;
        org.jdom.Namespace $r1;
        java.lang.String $r3;
        org.jdom.Element $r0;

        r4 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r2 := @parameter0: thredds.catalog.query.Query;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("query", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.Query: java.lang.String getBase()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("base", $r3);

        return $r0;
    }

    private void readSelector(org.jdom.Element, thredds.catalog.query.Selector)
    {
        thredds.catalog.InvDocumentation $r10;
        thredds.catalog.parser.jdom.DqcConvert4 r9;
        thredds.catalog.query.Selector r0;
        org.jdom.Namespace $r7;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        org.jdom.Element r1, $r8;

        r9 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r1 := @parameter0: org.jdom.Element;

        r0 := @parameter1: thredds.catalog.query.Selector;

        $r2 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("title");

        virtualinvoke r0.<thredds.catalog.query.Selector: void setTitle(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        virtualinvoke r0.<thredds.catalog.query.Selector: void setId(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("template");

        virtualinvoke r0.<thredds.catalog.query.Selector: void setTemplate(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("required");

        virtualinvoke r0.<thredds.catalog.query.Selector: void setRequired(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("multiple");

        virtualinvoke r0.<thredds.catalog.query.Selector: void setMultiple(java.lang.String)>($r6);

        $r7 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r8 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("description", $r7);

        if $r8 == null goto label1;

        $r10 = virtualinvoke r9.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.InvDocumentation readDocumentation(org.jdom.Element)>($r8);

        virtualinvoke r0.<thredds.catalog.query.Selector: void setDescription(thredds.catalog.InvDocumentation)>($r10);

     label1:
        return;
    }

    private void writeSelector(org.jdom.Element, thredds.catalog.query.Selector)
    {
        thredds.catalog.InvDocumentation $r4, $r7;
        thredds.catalog.parser.jdom.DqcConvert4 r6;
        thredds.catalog.query.Selector r0;
        java.lang.String $r1, $r2, $r3, $r9, $r10, $r11;
        org.jdom.Element r5, $r8;
        boolean $z0, $z1;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r5 := @parameter0: org.jdom.Element;

        r0 := @parameter1: thredds.catalog.query.Selector;

        $r1 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getId()>();

        if $r1 == null goto label1;

        $r11 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getId()>();

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("id", $r11);

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getTitle()>();

        if $r2 == null goto label2;

        $r10 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getTitle()>();

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("title", $r10);

     label2:
        $r3 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getTemplate()>();

        if $r3 == null goto label3;

        $r9 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getTemplate()>();

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("template", $r9);

     label3:
        $z0 = virtualinvoke r0.<thredds.catalog.query.Selector: boolean isRequired()>();

        if $z0 != 0 goto label4;

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("required", "false");

     label4:
        $z1 = virtualinvoke r0.<thredds.catalog.query.Selector: boolean isMultiple()>();

        if $z1 == 0 goto label5;

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("multiple", "true");

     label5:
        $r4 = virtualinvoke r0.<thredds.catalog.query.Selector: thredds.catalog.InvDocumentation getDescription()>();

        if $r4 == null goto label6;

        $r7 = virtualinvoke r0.<thredds.catalog.query.Selector: thredds.catalog.InvDocumentation getDescription()>();

        $r8 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeDocumentation(thredds.catalog.InvDocumentation,java.lang.String)>($r7, "description");

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

     label6:
        return;
    }

    private thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability, org.jdom.Element)
    {
        thredds.catalog.query.SelectList $r0;
        thredds.catalog.parser.jdom.DqcConvert4 r1;
        thredds.catalog.query.ListChoice $r8;
        thredds.catalog.query.QueryCapability r5;
        java.util.List $r4;
        int $i0, i1;
        org.jdom.Namespace $r3;
        java.lang.Object $r6;
        org.jdom.Element r2, $r7;

        r1 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r5 := @parameter0: thredds.catalog.query.QueryCapability;

        r2 := @parameter1: org.jdom.Element;

        $r0 = new thredds.catalog.query.SelectList;

        specialinvoke $r0.<thredds.catalog.query.SelectList: void <init>()>();

        specialinvoke r1.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r2, $r0);

        $r3 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r4 = virtualinvoke r2.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("choice", $r3);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (org.jdom.Element) $r6;

        $r8 = specialinvoke r1.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.ListChoice readChoice(thredds.catalog.query.QueryCapability,thredds.catalog.query.Selector,org.jdom.Element)>(r5, $r0, $r7);

        virtualinvoke $r0.<thredds.catalog.query.SelectList: void addChoice(thredds.catalog.query.ListChoice)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private org.jdom.Element writeSelectList(thredds.catalog.query.SelectList)
    {
        thredds.catalog.query.SelectList r3;
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.ListChoice $r6;
        java.util.ArrayList $r4;
        int $i0, i1;
        org.jdom.Namespace $r1;
        java.lang.Object $r5;
        org.jdom.Element $r0, $r7;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.SelectList;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectList", $r1);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r0, r3);

        $r4 = virtualinvoke r3.<thredds.catalog.query.SelectList: java.util.ArrayList getChoices()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (thredds.catalog.query.ListChoice) $r5;

        $r7 = specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeChoice(thredds.catalog.query.ListChoice)>($r6);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private thredds.catalog.query.SelectRange readSelectRange(org.jdom.Element)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r8;
        thredds.catalog.query.SelectRange $r7;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        org.jdom.Element r0;

        r8 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("min");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("max");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("units");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("modulo");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("resolution");

        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("selectType");

        $r7 = new thredds.catalog.query.SelectRange;

        specialinvoke $r7.<thredds.catalog.query.SelectRange: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6);

        specialinvoke r8.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r0, $r7);

        return $r7;
    }

    private org.jdom.Element writeSelectRange(thredds.catalog.query.SelectRange)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.SelectRange r3;
        org.jdom.Namespace $r1;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.jdom.Element $r0;
        boolean $z0;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.SelectRange;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectFromRange", $r1);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r0, r3);

        $r4 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getMin()>();

        if $r4 == null goto label1;

        $r13 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getMin()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("min", $r13);

     label1:
        $r5 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getMax()>();

        if $r5 == null goto label2;

        $r12 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getMax()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("max", $r12);

     label2:
        $r6 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getUnits()>();

        if $r6 == null goto label3;

        $r11 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getUnits()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("units", $r11);

     label3:
        $z0 = virtualinvoke r3.<thredds.catalog.query.SelectRange: boolean isModulo()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("modulo", "true");

     label4:
        $r7 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getResolution()>();

        if $r7 == null goto label5;

        $r10 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getResolution()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("resolution", $r10);

     label5:
        $r8 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getSelectType()>();

        if $r8 == null goto label6;

        $r9 = virtualinvoke r3.<thredds.catalog.query.SelectRange: java.lang.String getSelectType()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("selectType", $r9);

     label6:
        return $r0;
    }

    private thredds.catalog.query.SelectRangeDate readSelectRangeDate(org.jdom.Element)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r7;
        thredds.catalog.query.SelectRangeDate $r6;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        org.jdom.Element r0;

        r7 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("start");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("end");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("duration");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("resolution");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("selectType");

        $r6 = new thredds.catalog.query.SelectRangeDate;

        specialinvoke $r6.<thredds.catalog.query.SelectRangeDate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        specialinvoke r7.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r0, $r6);

        return $r6;
    }

    private org.jdom.Element writeSelectRangeDate(thredds.catalog.query.SelectRangeDate)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.SelectRangeDate r3;
        org.jdom.Namespace $r1;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.jdom.Element $r0;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.SelectRangeDate;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectFromDateRange", $r1);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r0, r3);

        $r4 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getStart()>();

        if $r4 == null goto label1;

        $r13 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getStart()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("start", $r13);

     label1:
        $r5 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getEnd()>();

        if $r5 == null goto label2;

        $r12 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getEnd()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("end", $r12);

     label2:
        $r6 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getDuration()>();

        if $r6 == null goto label3;

        $r11 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getDuration()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("duration", $r11);

     label3:
        $r7 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getResolution()>();

        if $r7 == null goto label4;

        $r10 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getResolution()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("resolution", $r10);

     label4:
        $r8 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getSelectType()>();

        if $r8 == null goto label5;

        $r9 = virtualinvoke r3.<thredds.catalog.query.SelectRangeDate: java.lang.String getSelectType()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("selectType", $r9);

     label5:
        return $r0;
    }

    private thredds.catalog.query.SelectGeoRegion readSelectGeoRegion(org.jdom.Element)
    {
        thredds.catalog.query.SelectGeoRegion $r10;
        thredds.catalog.parser.jdom.DqcConvert4 r3;
        thredds.catalog.query.Location $r6, $r9;
        org.jdom.Namespace $r1, $r4, $r7;
        thredds.catalog.query.DqcFactory $r11;
        org.jdom.Element r0, $r2, $r5, $r8;

        r3 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r2 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("geoBoundingBox", $r1);

        if $r2 != null goto label1;

        $r11 = r3.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.DqcFactory factory>;

        virtualinvoke $r11.<thredds.catalog.query.DqcFactory: void appendErr(java.lang.String)>("No geoBoundingBox in selectFromGeoRegion");

        return null;

     label1:
        $r4 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r5 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("lowerLeft", $r4);

        $r6 = specialinvoke r3.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.Location readLocation(org.jdom.Element)>($r5);

        $r7 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r8 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("upperRight", $r7);

        $r9 = specialinvoke r3.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.Location readLocation(org.jdom.Element)>($r8);

        $r10 = new thredds.catalog.query.SelectGeoRegion;

        specialinvoke $r10.<thredds.catalog.query.SelectGeoRegion: void <init>(thredds.catalog.query.Location,thredds.catalog.query.Location)>($r6, $r9);

        specialinvoke r3.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r0, $r10);

        return $r10;
    }

    private org.jdom.Element writeSelectGeoRegion(thredds.catalog.query.SelectGeoRegion)
    {
        thredds.catalog.query.SelectGeoRegion r3;
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.Location $r6, $r7, $r8, $r10;
        org.jdom.Namespace $r1, $r5;
        org.jdom.Element $r0, $r4, $r9, $r11;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.SelectGeoRegion;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectFromGeoRegion", $r1);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r0, r3);

        $r4 = new org.jdom.Element;

        $r5 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("geoBoundingBox", $r5);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        $r6 = virtualinvoke r3.<thredds.catalog.query.SelectGeoRegion: thredds.catalog.query.Location getLowerLeft()>();

        if $r6 == null goto label1;

        $r10 = virtualinvoke r3.<thredds.catalog.query.SelectGeoRegion: thredds.catalog.query.Location getLowerLeft()>();

        $r11 = specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeLocation(thredds.catalog.query.Location,java.lang.String)>($r10, "lowerLeft");

        virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label1:
        $r7 = virtualinvoke r3.<thredds.catalog.query.SelectGeoRegion: thredds.catalog.query.Location getUpperRight()>();

        if $r7 == null goto label2;

        $r8 = virtualinvoke r3.<thredds.catalog.query.SelectGeoRegion: thredds.catalog.query.Location getUpperRight()>();

        $r9 = specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeLocation(thredds.catalog.query.Location,java.lang.String)>($r8, "upperRight");

        virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

     label2:
        return $r0;
    }

    private thredds.catalog.query.SelectService readSelectService(org.jdom.Element)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.SelectService $r1;
        java.util.List $r4;
        int $i0, i1;
        org.jdom.Namespace $r3;
        java.lang.Object $r5;
        java.lang.String $r7, $r8, $r9, $r10, $r11;
        org.jdom.Element r0, r6;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: org.jdom.Element;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new thredds.catalog.query.SelectService;

        specialinvoke $r1.<thredds.catalog.query.SelectService: void <init>(java.lang.String,java.lang.String)>(null, null);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r0, $r1);

        $r3 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r4 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("serviceType", $r3);

        i1 = 0;

     label2:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.jdom.Element) $r5;

        $r7 = virtualinvoke r6.<org.jdom.Element: java.lang.String getText()>();

        $r8 = virtualinvoke r6.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("title");

        $r9 = virtualinvoke r6.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dataFormatType");

        $r10 = virtualinvoke r6.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("returns");

        $r11 = virtualinvoke r6.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        virtualinvoke $r1.<thredds.catalog.query.SelectService: void addServiceChoice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, $r10, $r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r1;
    }

    private org.jdom.Element writeSelectService(thredds.catalog.query.SelectService)
    {
        java.util.ArrayList $r4;
        thredds.catalog.query.SelectService$ServiceChoice r6;
        thredds.catalog.query.SelectService r0;
        int $i0, i1;
        org.jdom.Namespace $r2, $r8;
        java.lang.String $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        thredds.catalog.parser.jdom.DqcConvert4 r3;
        java.lang.Object $r5;
        org.jdom.Element $r1, $r7;

        r3 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r0 := @parameter0: thredds.catalog.query.SelectService;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.jdom.Element;

        $r2 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r1.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectService", $r2);

        specialinvoke r3.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r1, r0);

        $r4 = virtualinvoke r0.<thredds.catalog.query.SelectService: java.util.ArrayList getChoices()>();

        i1 = 0;

     label2:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (thredds.catalog.query.SelectService$ServiceChoice) $r5;

        $r7 = new org.jdom.Element;

        $r8 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("serviceType", $r8);

        $r9 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getTitle()>();

        if $r9 == null goto label3;

        $r17 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getTitle()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("title", $r17);

     label3:
        $r10 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getDataFormat()>();

        if $r10 == null goto label4;

        $r16 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getDataFormat()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dataFormatType", $r16);

     label4:
        $r11 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getReturns()>();

        if $r11 == null goto label5;

        $r15 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getReturns()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("returns", $r15);

     label5:
        $r12 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getValue2()>();

        if $r12 == null goto label6;

        $r14 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getValue2()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r14);

     label6:
        $r13 = virtualinvoke r6.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getService()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r13);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        i1 = i1 + 1;

        goto label2;

     label7:
        return $r1;
    }

    private thredds.catalog.query.SelectStation readSelectStation(org.jdom.Element)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r1;
        thredds.catalog.query.SelectStation $r0;
        thredds.catalog.query.Station $r7;
        java.util.List $r4;
        int $i0, i1;
        org.jdom.Namespace $r3;
        java.lang.Object $r5;
        org.jdom.Element r2, $r6;

        r1 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r2 := @parameter0: org.jdom.Element;

        $r0 = new thredds.catalog.query.SelectStation;

        specialinvoke $r0.<thredds.catalog.query.SelectStation: void <init>()>();

        specialinvoke r1.<thredds.catalog.parser.jdom.DqcConvert4: void readSelector(org.jdom.Element,thredds.catalog.query.Selector)>(r2, $r0);

        $r3 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r4 = virtualinvoke r2.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("station", $r3);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (org.jdom.Element) $r5;

        $r7 = specialinvoke r1.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.Station readStation(thredds.catalog.query.Selector,org.jdom.Element)>($r0, $r6);

        virtualinvoke $r0.<thredds.catalog.query.SelectStation: void addStation(thredds.catalog.query.Station)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private org.jdom.Element writeSelectStation(thredds.catalog.query.SelectStation)
    {
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        thredds.catalog.query.SelectStation r3;
        java.util.ArrayList $r4;
        thredds.catalog.query.Station $r6;
        int $i0, i1;
        org.jdom.Namespace $r1;
        java.lang.Object $r5;
        org.jdom.Element $r0, $r7;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.SelectStation;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectStation", $r1);

        specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: void writeSelector(org.jdom.Element,thredds.catalog.query.Selector)>($r0, r3);

        $r4 = virtualinvoke r3.<thredds.catalog.query.SelectStation: java.util.ArrayList getStations()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (thredds.catalog.query.Station) $r5;

        $r7 = specialinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeStation(thredds.catalog.query.Station)>($r6);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private thredds.catalog.query.Station readStation(thredds.catalog.query.Selector, org.jdom.Element)
    {
        thredds.catalog.InvDocumentation $r11;
        thredds.catalog.parser.jdom.DqcConvert4 r7;
        thredds.catalog.query.Selector r4;
        thredds.catalog.query.Station $r3;
        thredds.catalog.query.Location $r8;
        org.jdom.Namespace $r5, $r9, $r12;
        java.lang.String $r1, $r2;
        org.jdom.Element r0, $r6, $r10, r13;

        r7 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r4 := @parameter0: thredds.catalog.query.Selector;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        $r3 = new thredds.catalog.query.Station;

        specialinvoke $r3.<thredds.catalog.query.Station: void <init>(thredds.catalog.query.Selector,java.lang.String,java.lang.String,java.lang.String)>(r4, $r1, $r2, null);

        $r5 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r6 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("location", $r5);

        r13 = $r6;

        if null != $r6 goto label1;

        $r12 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        r13 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("location3D", $r12);

     label1:
        $r8 = specialinvoke r7.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.query.Location readLocation(org.jdom.Element)>(r13);

        virtualinvoke $r3.<thredds.catalog.query.Station: void setLocation(thredds.catalog.query.Location)>($r8);

        $r9 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        $r10 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("description", $r9);

        if $r10 == null goto label2;

        $r11 = virtualinvoke r7.<thredds.catalog.parser.jdom.DqcConvert4: thredds.catalog.InvDocumentation readDocumentation(org.jdom.Element)>($r10);

        virtualinvoke $r3.<thredds.catalog.query.Station: void setDescription(thredds.catalog.InvDocumentation)>($r11);

     label2:
        return $r3;
    }

    private org.jdom.Element writeStation(thredds.catalog.query.Station)
    {
        thredds.catalog.InvDocumentation $r5, $r9;
        thredds.catalog.parser.jdom.DqcConvert4 r6;
        thredds.catalog.query.Station r2;
        thredds.catalog.query.Location $r7;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4;
        org.jdom.Element $r0, $r8, $r10;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r2 := @parameter0: thredds.catalog.query.Station;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("station", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.Station: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.Station: java.lang.String getValue()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r4);

        $r5 = virtualinvoke r2.<thredds.catalog.query.Station: thredds.catalog.InvDocumentation getDescription()>();

        if $r5 == null goto label1;

        $r9 = virtualinvoke r2.<thredds.catalog.query.Station: thredds.catalog.InvDocumentation getDescription()>();

        $r10 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeDocumentation(thredds.catalog.InvDocumentation,java.lang.String)>($r9, "description");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label1:
        $r7 = virtualinvoke r2.<thredds.catalog.query.Station: thredds.catalog.query.Location getLocation()>();

        $r8 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Element writeLocation(thredds.catalog.query.Location,java.lang.String)>($r7, "location");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        return $r0;
    }

    public void writeXML(thredds.catalog.query.QueryCapability, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r5;
        thredds.catalog.parser.jdom.DqcConvert4 r2;
        org.jdom.Document $r4;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        thredds.catalog.query.QueryCapability r3;

        r2 := @this: thredds.catalog.parser.jdom.DqcConvert4;

        r3 := @parameter0: thredds.catalog.query.QueryCapability;

        r5 := @parameter1: java.io.OutputStream;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        $r4 = virtualinvoke r2.<thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Document writeQC(thredds.catalog.query.QueryCapability)>(r3);

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r4, r5);

        return;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0, $r1;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean debugURL> = 0;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean debugXML> = 0;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean debugDBurl> = 0;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean debugXMLopen> = 0;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean showParsedXML> = 0;

        <thredds.catalog.parser.jdom.DqcConvert4: boolean showXMLoutput> = 0;

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/thredds/queryCapability/v0.4");

        <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace defNS> = $r0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("xlink", "http://www.w3.org/1999/xlink");

        <thredds.catalog.parser.jdom.DqcConvert4: org.jdom.Namespace xlinkNS> = $r1;

        return;
    }
}
