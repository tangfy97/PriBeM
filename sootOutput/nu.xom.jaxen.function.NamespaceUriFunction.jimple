public class nu.xom.jaxen.function.NamespaceUriFunction extends java.lang.Object implements nu.xom.jaxen.Function
{

    public void <init>()
    {
        nu.xom.jaxen.function.NamespaceUriFunction r0;

        r0 := @this: nu.xom.jaxen.function.NamespaceUriFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(nu.xom.jaxen.Context, java.util.List) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        java.util.List r0, $r5;
        nu.xom.jaxen.function.NamespaceUriFunction r8;
        int $i0, $i1;
        java.lang.String $r4, $r7;
        nu.xom.jaxen.Context r2;
        nu.xom.jaxen.Navigator $r3, $r6;

        r8 := @this: nu.xom.jaxen.function.NamespaceUriFunction;

        r2 := @parameter0: nu.xom.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = virtualinvoke r2.<nu.xom.jaxen.Context: java.util.List getNodeSet()>();

        $r6 = virtualinvoke r2.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r7 = staticinvoke <nu.xom.jaxen.function.NamespaceUriFunction: java.lang.String evaluate(java.util.List,nu.xom.jaxen.Navigator)>($r5, $r6);

        return $r7;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r3 = virtualinvoke r2.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r4 = staticinvoke <nu.xom.jaxen.function.NamespaceUriFunction: java.lang.String evaluate(java.util.List,nu.xom.jaxen.Navigator)>(r0, $r3);

        return $r4;

     label2:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("namespace-uri() requires zero or one argument.");

        throw $r1;
    }

    public static java.lang.String evaluate(java.util.List, nu.xom.jaxen.Navigator) throws nu.xom.jaxen.FunctionCallException
    {
        java.lang.String $r4, $r5, $r7;
        nu.xom.jaxen.Navigator r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        nu.xom.jaxen.FunctionCallException $r3;
        java.util.List r0, $r6;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.List;

        r2 := @parameter1: nu.xom.jaxen.Navigator;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = $r1 instanceof java.util.List;

        if $z1 == 0 goto label01;

        $r6 = (java.util.List) $r1;

        $r7 = staticinvoke <nu.xom.jaxen.function.NamespaceUriFunction: java.lang.String evaluate(java.util.List,nu.xom.jaxen.Navigator)>($r6, r2);

        return $r7;

     label01:
        $z2 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isElement(java.lang.Object)>($r1);

        if $z2 == 0 goto label02;

        $r5 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: java.lang.String getElementNamespaceUri(java.lang.Object)>($r1);

        return $r5;

     label02:
        $z3 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isAttribute(java.lang.Object)>($r1);

        if $z3 == 0 goto label04;

        $r4 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: java.lang.String getAttributeNamespaceUri(java.lang.Object)>($r1);

        if $r4 != null goto label03;

        return "";

     label03:
        return $r4;

     label04:
        $z4 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isProcessingInstruction(java.lang.Object)>($r1);

        if $z4 == 0 goto label05;

        return "";

     label05:
        $z5 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isNamespace(java.lang.Object)>($r1);

        if $z5 == 0 goto label06;

        return "";

     label06:
        $z6 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isDocument(java.lang.Object)>($r1);

        if $z6 == 0 goto label07;

        return "";

     label07:
        $z7 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isComment(java.lang.Object)>($r1);

        if $z7 == 0 goto label08;

        return "";

     label08:
        $z8 = interfaceinvoke r2.<nu.xom.jaxen.Navigator: boolean isText(java.lang.Object)>($r1);

        if $z8 == 0 goto label09;

        return "";

     label09:
        $r3 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r3.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("The argument to the namespace-uri function must be a node-set");

        throw $r3;

     label10:
        return "";
    }
}
