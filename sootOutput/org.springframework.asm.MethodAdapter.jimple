public class org.springframework.asm.MethodAdapter extends java.lang.Object implements org.springframework.asm.MethodVisitor
{
    protected org.springframework.asm.MethodVisitor mv;

    public void <init>(org.springframework.asm.MethodVisitor)
    {
        org.springframework.asm.MethodVisitor r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: org.springframework.asm.MethodVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv> = r1;

        return;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotationDefault()
    {
        org.springframework.asm.AnnotationVisitor $r2;
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        $r2 = interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: org.springframework.asm.AnnotationVisitor visitAnnotationDefault()>();

        return $r2;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.springframework.asm.MethodAdapter r0;
        org.springframework.asm.AnnotationVisitor $r3;
        org.springframework.asm.MethodVisitor $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        $r3 = interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r3;
    }

    public org.springframework.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.AnnotationVisitor $r3;
        org.springframework.asm.MethodVisitor $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        $r3 = interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: org.springframework.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r1, z0);

        return $r3;
    }

    public void visitAttribute(org.springframework.asm.Attribute)
    {
        org.springframework.asm.MethodVisitor $r2;
        org.springframework.asm.Attribute r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: org.springframework.asm.Attribute;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitAttribute(org.springframework.asm.Attribute)>(r1);

        return;
    }

    public void visitCode()
    {
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitCode()>();

        return;
    }

    public void visitInsn(int)
    {
        int i0;
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitInsn(int)>(i0);

        return;
    }

    public void visitIntInsn(int, int)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0, i1;
        org.springframework.asm.MethodVisitor $r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitIntInsn(int,int)>(i0, i1);

        return;
    }

    public void visitVarInsn(int, int)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0, i1;
        org.springframework.asm.MethodVisitor $r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitVarInsn(int,int)>(i0, i1);

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.MethodVisitor $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(i0, r1);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.MethodVisitor $r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r4.<org.springframework.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.MethodVisitor $r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r4.<org.springframework.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        return;
    }

    public void visitJumpInsn(int, org.springframework.asm.Label)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.Label r1;
        org.springframework.asm.MethodVisitor $r2;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.asm.Label;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitJumpInsn(int,org.springframework.asm.Label)>(i0, r1);

        return;
    }

    public void visitLabel(org.springframework.asm.Label)
    {
        org.springframework.asm.Label r1;
        org.springframework.asm.MethodVisitor $r2;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: org.springframework.asm.Label;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitLabel(org.springframework.asm.Label)>(r1);

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.asm.MethodVisitor $r2;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>(r1);

        return;
    }

    public void visitIincInsn(int, int)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0, i1;
        org.springframework.asm.MethodVisitor $r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitIincInsn(int,int)>(i0, i1);

        return;
    }

    public void visitTableSwitchInsn(int, int, org.springframework.asm.Label, org.springframework.asm.Label[])
    {
        org.springframework.asm.MethodAdapter r0;
        int i0, i1;
        org.springframework.asm.Label r1;
        org.springframework.asm.Label[] r2;
        org.springframework.asm.MethodVisitor $r3;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.springframework.asm.Label;

        r2 := @parameter3: org.springframework.asm.Label[];

        $r3 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r3.<org.springframework.asm.MethodVisitor: void visitTableSwitchInsn(int,int,org.springframework.asm.Label,org.springframework.asm.Label[])>(i0, i1, r1, r2);

        return;
    }

    public void visitLookupSwitchInsn(org.springframework.asm.Label, int[], org.springframework.asm.Label[])
    {
        int[] r2;
        org.springframework.asm.MethodAdapter r0;
        org.springframework.asm.Label r1;
        org.springframework.asm.Label[] r3;
        org.springframework.asm.MethodVisitor $r4;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: org.springframework.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: org.springframework.asm.Label[];

        $r4 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r4.<org.springframework.asm.MethodVisitor: void visitLookupSwitchInsn(org.springframework.asm.Label,int[],org.springframework.asm.Label[])>(r1, r2, r3);

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.MethodVisitor $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>(r1, i0);

        return;
    }

    public void visitTryCatchBlock(org.springframework.asm.Label, org.springframework.asm.Label, org.springframework.asm.Label, java.lang.String)
    {
        org.springframework.asm.MethodAdapter r0;
        org.springframework.asm.Label r1, r2, r3;
        org.springframework.asm.MethodVisitor $r5;
        java.lang.String r4;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: org.springframework.asm.Label;

        r2 := @parameter1: org.springframework.asm.Label;

        r3 := @parameter2: org.springframework.asm.Label;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r5.<org.springframework.asm.MethodVisitor: void visitTryCatchBlock(org.springframework.asm.Label,org.springframework.asm.Label,org.springframework.asm.Label,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.springframework.asm.Label, org.springframework.asm.Label, int)
    {
        org.springframework.asm.Label r4, r5;
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.MethodVisitor $r6;
        java.lang.String r1, r2, r3;

        r0 := @this: org.springframework.asm.MethodAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.springframework.asm.Label;

        r5 := @parameter4: org.springframework.asm.Label;

        i0 := @parameter5: int;

        $r6 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r6.<org.springframework.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.springframework.asm.Label,org.springframework.asm.Label,int)>(r1, r2, r3, r4, r5, i0);

        return;
    }

    public void visitLineNumber(int, org.springframework.asm.Label)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0;
        org.springframework.asm.Label r1;
        org.springframework.asm.MethodVisitor $r2;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.asm.Label;

        $r2 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r2.<org.springframework.asm.MethodVisitor: void visitLineNumber(int,org.springframework.asm.Label)>(i0, r1);

        return;
    }

    public void visitMaxs(int, int)
    {
        org.springframework.asm.MethodAdapter r0;
        int i0, i1;
        org.springframework.asm.MethodVisitor $r1;

        r0 := @this: org.springframework.asm.MethodAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitMaxs(int,int)>(i0, i1);

        return;
    }

    public void visitEnd()
    {
        org.springframework.asm.MethodVisitor $r1;
        org.springframework.asm.MethodAdapter r0;

        r0 := @this: org.springframework.asm.MethodAdapter;

        $r1 = r0.<org.springframework.asm.MethodAdapter: org.springframework.asm.MethodVisitor mv>;

        interfaceinvoke $r1.<org.springframework.asm.MethodVisitor: void visitEnd()>();

        return;
    }
}
