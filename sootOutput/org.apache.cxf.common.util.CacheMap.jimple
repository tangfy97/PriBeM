public class org.apache.cxf.common.util.CacheMap extends java.lang.Object implements java.util.Map
{
    java.util.Map mainDataMap;
    java.util.Map extraKeyMap;

    public void <init>()
    {
        org.apache.cxf.common.util.WeakIdentityHashMap $r2;
        org.apache.cxf.common.util.CacheMap r0;
        java.util.WeakHashMap $r1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap> = $r1;

        $r2 = new org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke $r2.<org.apache.cxf.common.util.WeakIdentityHashMap: void <init>()>();

        r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap> = $r2;

        return;
    }

    public void clear()
    {
        org.apache.cxf.common.util.CacheMap r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    private void updateMainDataMap()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r1, $r5, $r6, $r7;
        java.lang.Object $r4, $r8;
        org.apache.cxf.common.util.CacheMap r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r6 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

     label2:
        goto label1;

     label3:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2, $r3;
        java.lang.Object r1;
        org.apache.cxf.common.util.CacheMap r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r3 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z1;

     label1:
        return 1;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map $r2, $r3;
        java.lang.Object r1;
        org.apache.cxf.common.util.CacheMap r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.cxf.common.util.CacheMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Map $r2, $r4, $r5;
        java.lang.Object r1, $r3, r6;
        org.apache.cxf.common.util.CacheMap r0;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = $r3;

        if $r3 != null goto label1;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r5 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        if r6 == null goto label2;

        $r4 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label2:
        return r6;
    }

    public boolean isEmpty()
    {
        java.util.Map $r1, $r2;
        org.apache.cxf.common.util.CacheMap r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.apache.cxf.common.util.CacheMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r3, $r5;
        java.lang.Object r1, r2, $r4, $r6;
        org.apache.cxf.common.util.CacheMap r0;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        if $r4 != null goto label1;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label2;

     label1:
        $r6 = $r4;

     label2:
        return $r6;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r7;
        org.apache.cxf.common.util.CacheMap r5;
        boolean $z0;

        r5 := @this: org.apache.cxf.common.util.CacheMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.apache.cxf.common.util.CacheMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Map $r2, $r4;
        java.lang.Object r1, $r3, $r5;
        org.apache.cxf.common.util.CacheMap r0;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map extraKeyMap>;

        if $r3 != null goto label1;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r5 = $r3;

     label2:
        return $r5;
    }

    public int size()
    {
        int $i0;
        org.apache.cxf.common.util.CacheMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.cxf.common.util.CacheMap r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.cxf.common.util.CacheMap r0;
        java.lang.String $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.CacheMap;

        specialinvoke r0.<org.apache.cxf.common.util.CacheMap: void updateMainDataMap()>();

        $r1 = r0.<org.apache.cxf.common.util.CacheMap: java.util.Map mainDataMap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
