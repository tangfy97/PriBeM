public class org.apache.poi.hslf.record.InteractiveInfo extends org.apache.poi.hslf.record.RecordContainer
{
    private byte[] _header;
    private static long _type;
    private org.apache.poi.hslf.record.InteractiveInfoAtom infoAtom;

    public org.apache.poi.hslf.record.InteractiveInfoAtom getInteractiveInfoAtom()
    {
        org.apache.poi.hslf.record.InteractiveInfo r0;
        org.apache.poi.hslf.record.InteractiveInfoAtom $r1;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        $r1 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.InteractiveInfoAtom infoAtom>;

        return $r1;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        org.apache.poi.hslf.record.Record[] $r4;
        int i0, i1, $i2, $i3;
        org.apache.poi.hslf.record.InteractiveInfo r0;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i3 = i0 + 8;

        $i2 = i1 - 8;

        $r4 = staticinvoke <org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] findChildRecords(byte[],int,int)>(r2, $i3, $i2);

        r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children> = $r4;

        specialinvoke r0.<org.apache.poi.hslf.record.InteractiveInfo: void findInterestingChildren()>();

        return;
    }

    private void findInterestingChildren()
    {
        org.apache.poi.hslf.record.Record $r2, $r7, $r11;
        java.lang.IllegalStateException $r3;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r1, $r6, $r10;
        org.apache.poi.hslf.record.InteractiveInfoAtom $r12;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.String $r9;
        org.apache.poi.hslf.record.InteractiveInfo r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        $r1 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children>;

        $r2 = $r1[0];

        $z0 = $r2 instanceof org.apache.poi.hslf.record.InteractiveInfoAtom;

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children>;

        $r11 = $r10[0];

        $r12 = (org.apache.poi.hslf.record.InteractiveInfoAtom) $r11;

        r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.InteractiveInfoAtom infoAtom> = $r12;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First child record wasn\'t a InteractiveInfoAtom, was of type ");

        $r6 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children>;

        $r7 = $r6[0];

        $l0 = virtualinvoke $r7.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        return;
    }

    public void <init>()
    {
        byte[] $r1, $r3, $r4;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r2, $r7;
        org.apache.poi.hslf.record.InteractiveInfoAtom $r5, $r6;
        short $s2;
        int $i1;
        org.apache.poi.hslf.record.InteractiveInfo r0;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header> = $r1;

        $r2 = newarray (org.apache.poi.hslf.record.Record)[1];

        r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header>;

        $r3[0] = 15;

        $r4 = r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.InteractiveInfo: long _type>;

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r4, 2, $s2);

        $r5 = new org.apache.poi.hslf.record.InteractiveInfoAtom;

        specialinvoke $r5.<org.apache.poi.hslf.record.InteractiveInfoAtom: void <init>()>();

        r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.InteractiveInfoAtom infoAtom> = $r5;

        $r7 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children>;

        $r6 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.InteractiveInfoAtom infoAtom>;

        $r7[0] = $r6;

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.InteractiveInfo r0;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        $l0 = <org.apache.poi.hslf.record.InteractiveInfo: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r1, $r2;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r4;
        byte $b1, $b2;
        org.apache.poi.hslf.record.InteractiveInfo r0;

        r0 := @this: org.apache.poi.hslf.record.InteractiveInfo;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header>;

        $b2 = $r1[0];

        $r2 = r0.<org.apache.poi.hslf.record.InteractiveInfo: byte[] _header>;

        $b1 = $r2[1];

        $l0 = <org.apache.poi.hslf.record.InteractiveInfo: long _type>;

        $r4 = r0.<org.apache.poi.hslf.record.InteractiveInfo: org.apache.poi.hslf.record.Record[] _children>;

        virtualinvoke r0.<org.apache.poi.hslf.record.InteractiveInfo: void writeOut(byte,byte,long,org.apache.poi.hslf.record.Record[],java.io.OutputStream)>($b2, $b1, $l0, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.InteractiveInfo: long _type> = 4082L;

        return;
    }
}
