final class org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1 extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.DocumentFactory
{
    final org.waveprotocol.wave.model.schema.SchemaProvider val$schemas;

    void <init>(org.waveprotocol.wave.model.schema.SchemaProvider)
    {
        org.waveprotocol.wave.model.schema.SchemaProvider r1;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.schema.SchemaProvider;

        r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1: org.waveprotocol.wave.model.schema.SchemaProvider val$schemas> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument create(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.schema.SchemaProvider $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r5;
        org.waveprotocol.wave.model.document.operation.DocInitialization r6;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument $r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1 r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        $r4 = r1.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1: org.waveprotocol.wave.model.schema.SchemaProvider val$schemas>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.schema.SchemaProvider: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema getSchemaForId(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r2, r3);

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema,org.waveprotocol.wave.model.document.operation.DocInitialization)>($r5, r6);

        return $r0;
    }

    public volatile org.waveprotocol.wave.model.wave.data.DocumentOperationSink create(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.document.operation.DocInitialization r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1 r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument $r4;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument create(org.waveprotocol.wave.model.id.WaveletId,java.lang.String,org.waveprotocol.wave.model.document.operation.DocInitialization)>(r1, r2, r3);

        return $r4;
    }
}
