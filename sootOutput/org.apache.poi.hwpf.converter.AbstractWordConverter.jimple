public abstract class org.apache.poi.hwpf.converter.AbstractWordConverter extends java.lang.Object
{
    private static final byte BEL_MARK;
    private static final byte FIELD_BEGIN_MARK;
    private static final byte FIELD_END_MARK;
    private static final byte FIELD_SEPARATOR_MARK;
    private static final org.apache.poi.util.POILogger logger;
    private static final java.util.regex.Pattern PATTERN_HYPERLINK_EXTERNAL;
    private static final java.util.regex.Pattern PATTERN_HYPERLINK_LOCAL;
    private static final java.util.regex.Pattern PATTERN_PAGEREF;
    private static final byte SPECCHAR_AUTONUMBERED_FOOTNOTE_REFERENCE;
    private static final byte SPECCHAR_DRAWN_OBJECT;
    protected static final char UNICODECHAR_NO_BREAK_SPACE;
    protected static final char UNICODECHAR_NONBREAKING_HYPHEN;
    protected static final char UNICODECHAR_ZERO_WIDTH_SPACE;
    private final java.util.Set bookmarkStack;
    private org.apache.poi.hwpf.converter.FontReplacer fontReplacer;
    private org.apache.poi.util.POILogger log;
    private org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState numberingState;
    private org.apache.poi.hwpf.converter.PicturesManager picturesManager;

    public void <init>()
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState $r5;
        org.apache.poi.hwpf.converter.DefaultFontReplacer $r2;
        java.lang.Class $r3;
        org.apache.poi.util.POILogger $r4;
        java.util.LinkedHashSet $r1;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.Set bookmarkStack> = $r1;

        $r2 = new org.apache.poi.hwpf.converter.DefaultFontReplacer;

        specialinvoke $r2.<org.apache.poi.hwpf.converter.DefaultFontReplacer: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.FontReplacer fontReplacer> = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>($r3);

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger log> = $r4;

        $r5 = new org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState;

        specialinvoke $r5.<org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState numberingState> = $r5;

        return;
    }

    private static void addToStructures(java.util.List, org.apache.poi.hwpf.converter.AbstractWordConverter$Structure)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter$Structure r2, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;
        java.util.Iterator $r1;
        java.util.List r0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.poi.hwpf.converter.AbstractWordConverter$Structure;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.hwpf.converter.AbstractWordConverter$Structure) $r3;

        $i1 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i0 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i1 > $i0 goto label2;

        $i15 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        $i14 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i15 < $i14 goto label2;

        return;

     label2:
        $i3 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i2 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i3 >= $i2 goto label3;

        $i13 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i12 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        if $i13 < $i12 goto label5;

     label3:
        $i5 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i4 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i5 >= $i4 goto label4;

        $i11 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        $i10 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        if $i11 <= $i10 goto label5;

     label4:
        $i7 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i6 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i7 > $i6 goto label6;

        $i9 = r4.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        $i8 = r2.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        if $i9 >= $i8 goto label6;

     label5:
        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        goto label1;

     label6:
        goto label1;

     label7:
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    protected void afterProcess()
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        return;
    }

    protected org.apache.poi.hwpf.converter.FontReplacer$Triplet getCharacterRunTriplet(org.apache.poi.hwpf.usermodel.CharacterRun)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r1;
        org.apache.poi.hwpf.converter.FontReplacer$Triplet $r0, $r5;
        org.apache.poi.hwpf.converter.FontReplacer $r4;
        java.lang.String $r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r0 = new org.apache.poi.hwpf.converter.FontReplacer$Triplet;

        specialinvoke $r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isBold()>();

        $r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean bold> = $z0;

        $z1 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isItalic()>();

        $r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: boolean italic> = $z1;

        $r2 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String getFontName()>();

        $r0.<org.apache.poi.hwpf.converter.FontReplacer$Triplet: java.lang.String fontName> = $r2;

        $r4 = virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.FontReplacer getFontReplacer()>();

        $r5 = interfaceinvoke $r4.<org.apache.poi.hwpf.converter.FontReplacer: org.apache.poi.hwpf.converter.FontReplacer$Triplet update(org.apache.poi.hwpf.converter.FontReplacer$Triplet)>($r0);

        return $r5;
    }

    public abstract org.w3c.dom.Document getDocument();

    public org.apache.poi.hwpf.converter.FontReplacer getFontReplacer()
    {
        org.apache.poi.hwpf.converter.FontReplacer $r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.FontReplacer fontReplacer>;

        return $r1;
    }

    protected int getNumberColumnsSpanned(int[], int, org.apache.poi.hwpf.usermodel.TableCell)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r2;
        org.apache.poi.hwpf.usermodel.TableCell r0;
        int[] r1;
        int i0, $i1, $i2, i3, $i4, i5, i6;

        r2 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.hwpf.usermodel.TableCell;

        i5 = i0;

        i6 = 0;

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableCell: int getLeftEdge()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableCell: int getWidth()>();

        i3 = $i1 + $i2;

     label1:
        $i4 = r1[i5];

        if $i4 >= i3 goto label2;

        i6 = i6 + 1;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i6;
    }

    protected int getNumberRowsSpanned(org.apache.poi.hwpf.usermodel.Table, int[], int, int, org.apache.poi.hwpf.usermodel.TableCell)
    {
        org.apache.poi.hwpf.usermodel.TableCell r0, $r3, $r4;
        org.apache.poi.hwpf.usermodel.TableRow $r2;
        int[] r6;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.apache.poi.hwpf.converter.AbstractWordConverter r5;
        org.apache.poi.hwpf.usermodel.Table r1;

        r5 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.Table;

        r6 := @parameter1: int[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: org.apache.poi.hwpf.usermodel.TableCell;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableCell: boolean isFirstVerticallyMerged()>();

        if $z0 != 0 goto label01;

        return 1;

     label01:
        $i0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Table: int numRows()>();

        i7 = 1;

        i8 = i1 + 1;

     label02:
        if i8 >= $i0 goto label13;

        $r2 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Table: org.apache.poi.hwpf.usermodel.TableRow getRow(int)>(i8);

        $i3 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        if i2 < $i3 goto label03;

        goto label13;

     label03:
        z5 = 0;

        i9 = 0;

        i10 = 0;

     label04:
        $i4 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.TableRow: int numCells()>();

        if i10 >= $i4 goto label09;

        $r4 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.TableCell getCell(int)>(i10);

        $z3 = virtualinvoke $r4.<org.apache.poi.hwpf.usermodel.TableCell: boolean isVerticallyMerged()>();

        if $z3 == 0 goto label05;

        $z4 = virtualinvoke $r4.<org.apache.poi.hwpf.usermodel.TableCell: boolean isFirstVerticallyMerged()>();

        if $z4 == 0 goto label07;

     label05:
        $i5 = virtualinvoke r5.<org.apache.poi.hwpf.converter.AbstractWordConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>(r6, i9, $r4);

        i9 = i9 + $i5;

        if $i5 == 0 goto label06;

        z5 = 1;

        goto label09;

     label06:
        goto label08;

     label07:
        $i6 = virtualinvoke r5.<org.apache.poi.hwpf.converter.AbstractWordConverter: int getNumberColumnsSpanned(int[],int,org.apache.poi.hwpf.usermodel.TableCell)>(r6, i9, $r4);

        i9 = i9 + $i6;

     label08:
        i10 = i10 + 1;

        goto label04;

     label09:
        if z5 != 0 goto label10;

        goto label12;

     label10:
        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.TableCell getCell(int)>(i2);

        $z1 = virtualinvoke $r3.<org.apache.poi.hwpf.usermodel.TableCell: boolean isVerticallyMerged()>();

        if $z1 == 0 goto label13;

        $z2 = virtualinvoke $r3.<org.apache.poi.hwpf.usermodel.TableCell: boolean isFirstVerticallyMerged()>();

        if $z2 == 0 goto label11;

        goto label13;

     label11:
        i7 = i7 + 1;

     label12:
        i8 = i8 + 1;

        goto label02;

     label13:
        return i7;
    }

    public org.apache.poi.hwpf.converter.PicturesManager getPicturesManager()
    {
        org.apache.poi.hwpf.converter.PicturesManager $r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        $r1 = r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.PicturesManager picturesManager>;

        return $r1;
    }

    protected abstract void outputCharacters(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String);

    protected abstract void processBookmarks(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.util.List);

    protected boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore, int, org.apache.poi.hwpf.usermodel.Range, org.w3c.dom.Element)
    {
        byte[] $r7, $r8, $r9, $r102;
        org.apache.poi.hwpf.usermodel.Field $r18, $r73, r94;
        byte $b3, $b4, $b61;
        java.util.Map $r55, $r67;
        java.lang.StringBuilder $r30, $r31, $r34, $r35, $r36, $r44, $r47, $r115, $r117, $r118, $r121;
        org.apache.poi.hwpf.usermodel.Bookmarks $r54, $r66;
        org.apache.poi.hwpf.model.PicturesTable $r22, $r23;
        org.apache.poi.hwpf.converter.AbstractWordConverter r11;
        int[] $r74;
        java.util.Collection $r56, $r80;
        org.apache.poi.util.POILogger $r29;
        org.apache.poi.hwpf.usermodel.Range r0;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, i55, $i56, i57, $i58, $i59, i60, $i62, i63, $i66, $i67, $i68, $i69, $i70, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82;
        java.util.LinkedList $r105, $r113;
        org.apache.poi.hwpf.model.FieldsDocumentPart $r17, $r72;
        org.w3c.dom.Element r12;
        java.lang.Object $r38, $r39, $r40, $r41, $r45, $r49, $r50, $r58, $r64, $r82, $r84;
        java.lang.Class $r46;
        org.apache.poi.hwpf.HWPFDocumentCore r2;
        java.util.Set $r61, $r63, $r85, $r88;
        org.apache.poi.hwpf.usermodel.Picture $r24;
        java.lang.Throwable $r87;
        org.apache.poi.hwpf.usermodel.CharacterRun $r5, $r20, $r68, $r77;
        java.lang.AssertionError $r107, $r120;
        java.util.ArrayList $r111;
        java.lang.String $r6, $r10, $r13, $r14, $r25, $r32, $r37, $r48, $r69, r97;
        java.lang.UnsupportedOperationException $r116;
        org.apache.poi.hwpf.usermodel.Fields $r16, $r71;
        char[] $r104;
        org.apache.poi.hwpf.converter.AbstractWordConverter$Structure r92, $r106, $r108, $r110;
        org.apache.poi.hwpf.usermodel.Bookmark r91, r93;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, $z25, $z26;
        java.util.List $r59, r90;
        org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries r95, $r109;
        org.apache.poi.hwpf.HWPFDocument $r15, $r19, $r21, $r51, $r53, $r70, r89, r96, r98, r99, r100, r101;
        org.apache.poi.hwpf.converter.AbstractWordConverter$3 $r119;
        org.apache.poi.hwpf.converter.AbstractWordConverter$2 $r114;
        org.apache.poi.hwpf.converter.AbstractWordConverter$1 $r112;
        java.util.Iterator $r4, $r57, $r60, $r81, $r83;
        char $c12, $c20, $c21, $c22, $c48, c64;

        r11 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r2 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        i13 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        r12 := @parameter3: org.w3c.dom.Element;

        if r0 != null goto label01;

        return 0;

     label01:
        z23 = 0;

        $r105 = new java.util.LinkedList;

        specialinvoke $r105.<java.util.LinkedList: void <init>()>();

        $z0 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z0 == 0 goto label13;

        r89 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r66 = virtualinvoke r89.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Bookmarks getBookmarks()>();

        $i44 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $i45 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        $r67 = interfaceinvoke $r66.<org.apache.poi.hwpf.usermodel.Bookmarks: java.util.Map getBookmarksStartedBetween(int,int)>($i44, $i45);

        if $r67 == null goto label06;

        $r80 = interfaceinvoke $r67.<java.util.Map: java.util.Collection values()>();

        $r81 = interfaceinvoke $r80.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z20 = interfaceinvoke $r81.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label06;

        $r82 = interfaceinvoke $r81.<java.util.Iterator: java.lang.Object next()>();

        r90 = (java.util.List) $r82;

        $r83 = interfaceinvoke r90.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z21 = interfaceinvoke $r83.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label05;

        $r84 = interfaceinvoke $r83.<java.util.Iterator: java.lang.Object next()>();

        r91 = (org.apache.poi.hwpf.usermodel.Bookmark) $r84;

        $r85 = r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.Set bookmarkStack>;

        $z22 = interfaceinvoke $r85.<java.util.Set: boolean contains(java.lang.Object)>(r91);

        if $z22 != 0 goto label04;

        $r106 = new org.apache.poi.hwpf.converter.AbstractWordConverter$Structure;

        specialinvoke $r106.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: void <init>(org.apache.poi.hwpf.usermodel.Bookmark)>(r91);

        staticinvoke <org.apache.poi.hwpf.converter.AbstractWordConverter: void addToStructures(java.util.List,org.apache.poi.hwpf.converter.AbstractWordConverter$Structure)>($r105, $r106);

     label04:
        goto label03;

     label05:
        goto label02;

     label06:
        i55 = 0;

     label07:
        $i56 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i55 >= $i56 goto label13;

        $r68 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i55);

        if $r68 != null goto label08;

        $r107 = new java.lang.AssertionError;

        specialinvoke $r107.<java.lang.AssertionError: void <init>()>();

        throw $r107;

     label08:
        $i46 = virtualinvoke $r68.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i66 = (int) -1;

        if $i46 >= $i66 goto label09;

        goto label12;

     label09:
        $r69 = virtualinvoke $r68.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        if $r69 == null goto label12;

        $i47 = virtualinvoke $r69.<java.lang.String: int length()>();

        if $i47 == 0 goto label12;

        $c48 = virtualinvoke $r69.<java.lang.String: char charAt(int)>(0);

        $i67 = (int) $c48;

        if $i67 == 19 goto label10;

        goto label12;

     label10:
        $r70 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r71 = virtualinvoke $r70.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Fields getFields()>();

        $r72 = <org.apache.poi.hwpf.model.FieldsDocumentPart: org.apache.poi.hwpf.model.FieldsDocumentPart MAIN>;

        $i49 = virtualinvoke $r68.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $r73 = interfaceinvoke $r71.<org.apache.poi.hwpf.usermodel.Fields: org.apache.poi.hwpf.usermodel.Field getFieldByStartOffset(org.apache.poi.hwpf.model.FieldsDocumentPart,int)>($r72, $i49);

        if $r73 == null goto label11;

        $r108 = new org.apache.poi.hwpf.converter.AbstractWordConverter$Structure;

        specialinvoke $r108.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: void <init>(org.apache.poi.hwpf.usermodel.Field)>($r73);

        staticinvoke <org.apache.poi.hwpf.converter.AbstractWordConverter: void addToStructures(java.util.List,org.apache.poi.hwpf.converter.AbstractWordConverter$Structure)>($r105, $r108);

        goto label12;

     label11:
        $r74 = specialinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: int[] tryDeadField_lookupFieldSeparatorEnd(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range,int)>(r2, r0, i55);

        if $r74 == null goto label12;

        $r110 = new org.apache.poi.hwpf.converter.AbstractWordConverter$Structure;

        $r109 = new org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries;

        $i51 = $r74[0];

        $i50 = $r74[1];

        specialinvoke $r109.<org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries: void <init>(int,int,int)>(i55, $i51, $i50);

        $i52 = virtualinvoke $r68.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i53 = $r74[1];

        $r77 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i53);

        $i54 = virtualinvoke $r77.<org.apache.poi.hwpf.usermodel.CharacterRun: int getEndOffset()>();

        specialinvoke $r110.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries,int,int)>($r109, $i52, $i54);

        staticinvoke <org.apache.poi.hwpf.converter.AbstractWordConverter: void addToStructures(java.util.List,org.apache.poi.hwpf.converter.AbstractWordConverter$Structure)>($r105, $r110);

        i55 = $r74[1];

     label12:
        i55 = i55 + 1;

        goto label07;

     label13:
        $r111 = new java.util.ArrayList;

        specialinvoke $r111.<java.util.ArrayList: void <init>(java.util.Collection)>($r105);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r111);

        i57 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $r4 = interfaceinvoke $r111.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z24 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label28;

        $r38 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r92 = (org.apache.poi.hwpf.converter.AbstractWordConverter$Structure) $r38;

        $i28 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i28 == i57 goto label15;

        $r112 = new org.apache.poi.hwpf.converter.AbstractWordConverter$1;

        $i43 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        specialinvoke $r112.<org.apache.poi.hwpf.converter.AbstractWordConverter$1: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r11, i57, $i43, r0);

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r2, i13, $r112, r12);

     label15:
        $r39 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        $z16 = $r39 instanceof org.apache.poi.hwpf.usermodel.Bookmark;

        if $z16 == 0 goto label24;

        $r113 = new java.util.LinkedList;

        specialinvoke $r113.<java.util.LinkedList: void <init>()>();

        $r53 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r54 = virtualinvoke $r53.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Bookmarks getBookmarks()>();

        $i34 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i32 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        $i33 = $i32 + 1;

        $r55 = interfaceinvoke $r54.<org.apache.poi.hwpf.usermodel.Bookmarks: java.util.Map getBookmarksStartedBetween(int,int)>($i34, $i33);

        $r56 = interfaceinvoke $r55.<java.util.Map: java.util.Collection values()>();

        $r57 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();

        $r58 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $r59 = (java.util.List) $r58;

        $r60 = interfaceinvoke $r59.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z19 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label18;

        $r64 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r93 = (org.apache.poi.hwpf.usermodel.Bookmark) $r64;

        $i39 = interfaceinvoke r93.<org.apache.poi.hwpf.usermodel.Bookmark: int getStart()>();

        $i40 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        if $i39 != $i40 goto label17;

        $i41 = interfaceinvoke r93.<org.apache.poi.hwpf.usermodel.Bookmark: int getEnd()>();

        $i42 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        if $i41 != $i42 goto label17;

        interfaceinvoke $r113.<java.util.List: boolean add(java.lang.Object)>(r93);

     label17:
        goto label16;

     label18:
        $r61 = r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.Set bookmarkStack>;

        interfaceinvoke $r61.<java.util.Set: boolean addAll(java.util.Collection)>($r113);

     label19:
        $i35 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        $i36 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>($i35, $i36);

        $r114 = new org.apache.poi.hwpf.converter.AbstractWordConverter$2;

        $i38 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int start>;

        specialinvoke $r114.<org.apache.poi.hwpf.converter.AbstractWordConverter$2: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r11, $i38, $i37, r0);

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processBookmarks(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,java.util.List)>(r2, r12, $r114, i13, $r113);

     label20:
        $r63 = r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.Set bookmarkStack>;

        interfaceinvoke $r63.<java.util.Set: boolean removeAll(java.util.Collection)>($r113);

        goto label23;

     label21:
        $r87 := @caughtexception;

     label22:
        $r88 = r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.Set bookmarkStack>;

        interfaceinvoke $r88.<java.util.Set: boolean removeAll(java.util.Collection)>($r113);

        throw $r87;

     label23:
        goto label27;

     label24:
        $r40 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        $z17 = $r40 instanceof org.apache.poi.hwpf.usermodel.Field;

        if $z17 == 0 goto label25;

        $r50 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        r94 = (org.apache.poi.hwpf.usermodel.Field) $r50;

        $r51 = (org.apache.poi.hwpf.HWPFDocument) r2;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processField(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.Range,int,org.apache.poi.hwpf.usermodel.Field,org.w3c.dom.Element)>($r51, r0, i13, r94, r12);

        goto label27;

     label25:
        $r41 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        $z18 = $r41 instanceof org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries;

        if $z18 == 0 goto label26;

        $r49 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        r95 = (org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries) $r49;

        $i31 = r95.<org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries: int beginMark>;

        $i30 = r95.<org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries: int separatorMark>;

        $i29 = r95.<org.apache.poi.hwpf.converter.AbstractWordConverter$DeadFieldBoundaries: int endMark>;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDeadField(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,int,int,int)>(r2, r12, r0, i13, $i31, $i30, $i29);

        goto label27;

     label26:
        $r116 = new java.lang.UnsupportedOperationException;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NYI: ");

        $r45 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: java.lang.Object structure>;

        $r46 = virtualinvoke $r45.<java.lang.Object: java.lang.Class getClass()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r116.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r48);

        throw $r116;

     label27:
        $i58 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        $i59 = r92.<org.apache.poi.hwpf.converter.AbstractWordConverter$Structure: int end>;

        i57 = staticinvoke <java.lang.Math: int min(int,int)>($i58, $i59);

        goto label14;

     label28:
        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        if i57 == $i0 goto label31;

        $i23 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        if i57 <= $i23 goto label29;

        $r29 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ended at #");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i57);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $i26 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $r34 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $i27 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "Latest structure in ", r0, $r32, " after range boundaries [", $r37, ")");

        return 1;

     label29:
        $i24 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        if i57 >= $i24 goto label30;

        $r119 = new org.apache.poi.hwpf.converter.AbstractWordConverter$3;

        $i25 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int getEndOffset()>();

        specialinvoke $r119.<org.apache.poi.hwpf.converter.AbstractWordConverter$3: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r11, i57, $i25, r0);

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r2, i13, $r119, r12);

     label30:
        return 1;

     label31:
        i60 = 0;

     label32:
        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i60 >= $i1 goto label63;

        $r5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i60);

        if $r5 != null goto label33;

        $r120 = new java.lang.AssertionError;

        specialinvoke $r120.<java.lang.AssertionError: void <init>()>();

        throw $r120;

     label33:
        $z1 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z1 == 0 goto label36;

        $r21 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r22 = virtualinvoke $r21.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.model.PicturesTable getPicturesTable()>();

        $z15 = virtualinvoke $r22.<org.apache.poi.hwpf.model.PicturesTable: boolean hasPicture(org.apache.poi.hwpf.usermodel.CharacterRun)>($r5);

        if $z15 == 0 goto label36;

        r96 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r23 = virtualinvoke r96.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.model.PicturesTable getPicturesTable()>();

        $r24 = virtualinvoke $r23.<org.apache.poi.hwpf.model.PicturesTable: org.apache.poi.hwpf.usermodel.Picture extractPicture(org.apache.poi.hwpf.usermodel.CharacterRun,boolean)>($r5, 1);

        $r25 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $c22 = virtualinvoke $r25.<java.lang.String: char charAt(int)>(0);

        if $c22 != 1 goto label34;

        $z25 = 1;

        goto label35;

     label34:
        $z25 = 0;

     label35:
        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processImage(org.w3c.dom.Element,boolean,org.apache.poi.hwpf.usermodel.Picture)>(r12, $z25, $r24);

        goto label62;

     label36:
        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        r97 = $r6;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $i2 = lengthof $r7;

        if $i2 != 0 goto label37;

        goto label62;

     label37:
        $z2 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z2 == 0 goto label41;

        $c20 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i68 = (int) $c20;

        if $i68 != 2 goto label38;

        $z14 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z14 == 0 goto label38;

        r98 = (org.apache.poi.hwpf.HWPFDocument) r2;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processNoteAnchor(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r98, $r5, r12);

        goto label62;

     label38:
        $c21 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i69 = (int) $c21;

        if $i69 != 8 goto label39;

        $z13 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z13 == 0 goto label39;

        r99 = (org.apache.poi.hwpf.HWPFDocument) r2;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDrawnObject(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r99, $r5, r12);

        goto label62;

     label39:
        $z9 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isOle2()>();

        if $z9 == 0 goto label40;

        $z12 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z12 == 0 goto label40;

        r100 = (org.apache.poi.hwpf.HWPFDocument) r2;

        specialinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processOle2(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r100, $r5, r12);

        goto label62;

     label40:
        $z10 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSymbol()>();

        if $z10 == 0 goto label41;

        $z11 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z11 == 0 goto label41;

        r101 = (org.apache.poi.hwpf.HWPFDocument) r2;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processSymbol(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r101, $r5, r12);

        goto label62;

     label41:
        $r102 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $b61 = $r102[0];

        $i70 = (int) $b61;

        if $i70 != 19 goto label45;

        $z8 = r2 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z8 == 0 goto label44;

        $r15 = (org.apache.poi.hwpf.HWPFDocument) r2;

        $r16 = virtualinvoke $r15.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Fields getFields()>();

        $r17 = <org.apache.poi.hwpf.model.FieldsDocumentPart: org.apache.poi.hwpf.model.FieldsDocumentPart MAIN>;

        $i15 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $r18 = interfaceinvoke $r16.<org.apache.poi.hwpf.usermodel.Fields: org.apache.poi.hwpf.usermodel.Field getFieldByStartOffset(org.apache.poi.hwpf.model.FieldsDocumentPart,int)>($r17, $i15);

        if $r18 == null goto label44;

        $r19 = (org.apache.poi.hwpf.HWPFDocument) r2;

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processField(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.Range,int,org.apache.poi.hwpf.usermodel.Field,org.w3c.dom.Element)>($r19, r0, i13, $r18, r12);

        $i16 = interfaceinvoke $r18.<org.apache.poi.hwpf.usermodel.Field: int getFieldEndOffset()>();

     label42:
        $i17 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i60 >= $i17 goto label43;

        $r20 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i60);

        $i19 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.CharacterRun: int getEndOffset()>();

        if $i19 > $i16 goto label43;

        i60 = i60 + 1;

        goto label42;

     label43:
        $i18 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i60 >= $i18 goto label62;

        $i72 = (int) -1;

        i60 = i60 + $i72;

        goto label62;

     label44:
        $i14 = virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: int tryDeadField(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range,int,int,org.w3c.dom.Element)>(r2, r0, i13, i60, r12);

        if $i14 == i60 goto label62;

        i60 = $i14;

        goto label62;

     label45:
        $r8 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $b3 = $r8[0];

        $i73 = (int) $b3;

        if $i73 != 20 goto label46;

        goto label62;

     label46:
        $r9 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $b4 = $r9[0];

        $i74 = (int) $b4;

        if $i74 != 21 goto label47;

        goto label62;

     label47:
        $z3 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z3 != 0 goto label62;

        $z4 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isObj()>();

        if $z4 != 0 goto label62;

        $z5 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isOle2()>();

        if $z5 == 0 goto label48;

        goto label62;

     label48:
        $z6 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("\r");

        if $z6 != 0 goto label49;

        $i10 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i11 = $i10 - 1;

        $c12 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($i11);

        $i75 = (int) $c12;

        if $i75 != 7 goto label50;

        if i13 == -2147483648 goto label50;

     label49:
        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r97 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label50:
        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke r97.<java.lang.String: char[] toCharArray()>();

        $i62 = lengthof $r104;

        i63 = 0;

     label51:
        if i63 >= $i62 goto label58;

        c64 = $r104[i63];

        $i76 = (int) c64;

        if $i76 != 11 goto label53;

        $i9 = virtualinvoke $r121.<java.lang.StringBuilder: int length()>();

        if $i9 <= 0 goto label52;

        $r14 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void outputCharacters(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.CharacterRun,java.lang.String)>(r12, $r5, $r14);

        virtualinvoke $r121.<java.lang.StringBuilder: void setLength(int)>(0);

     label52:
        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processLineBreak(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.CharacterRun)>(r12, $r5);

        goto label57;

     label53:
        $i77 = (int) c64;

        if $i77 != 30 goto label54;

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8209);

        goto label57;

     label54:
        $i78 = (int) c64;

        if $i78 != 31 goto label55;

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8203);

        goto label57;

     label55:
        $i79 = (int) c64;

        if $i79 >= 32 goto label56;

        $i80 = (int) c64;

        if $i80 == 9 goto label56;

        $i81 = (int) c64;

        if $i81 == 10 goto label56;

        $i82 = (int) c64;

        if $i82 != 13 goto label57;

     label56:
        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c64);

     label57:
        i63 = i63 + 1;

        goto label51;

     label58:
        $i7 = virtualinvoke $r121.<java.lang.StringBuilder: int length()>();

        if $i7 <= 0 goto label59;

        $r13 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<org.apache.poi.hwpf.converter.AbstractWordConverter: void outputCharacters(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.CharacterRun,java.lang.String)>(r12, $r5, $r13);

        virtualinvoke $r121.<java.lang.StringBuilder: void setLength(int)>(0);

     label59:
        $z7 = z23;

        $r10 = virtualinvoke r97.<java.lang.String: java.lang.String trim()>();

        $i8 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i8 == 0 goto label60;

        $z26 = 1;

        goto label61;

     label60:
        $z26 = 0;

     label61:
        z23 = $z7 | $z26;

     label62:
        i60 = i60 + 1;

        goto label32;

     label63:
        return z23;

        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    protected void processDeadField(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, int, int, int)
    {
        org.apache.poi.hwpf.HWPFDocumentCore r6;
        java.util.regex.Matcher $r17;
        boolean $z0;
        org.apache.poi.util.POILogger $r0;
        org.apache.poi.hwpf.usermodel.Range r3;
        java.lang.StringBuilder $r19;
        java.util.regex.Pattern $r16;
        org.apache.poi.hwpf.converter.AbstractWordConverter$4 $r9;
        org.apache.poi.hwpf.usermodel.CharacterRun $r4, $r5, $r8, $r10, $r11, $r13, $r14;
        org.apache.poi.hwpf.converter.AbstractWordConverter$6 $r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter$5 $r12;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        java.lang.String $r15, $r18;
        org.apache.poi.hwpf.converter.AbstractWordConverter r2;
        org.w3c.dom.Element r7;

        r2 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r6 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r7 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i8 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i3 := @parameter6: int;

        $i2 = i0 + 1;

        if $i2 >= i1 goto label1;

        $i9 = i1 + 1;

        if $i9 >= i3 goto label1;

        $r9 = new org.apache.poi.hwpf.converter.AbstractWordConverter$4;

        $i10 = i0 + 1;

        $r10 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i10);

        $i11 = virtualinvoke $r10.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i12 = i1 - 1;

        $r11 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i12);

        $i13 = virtualinvoke $r11.<org.apache.poi.hwpf.usermodel.CharacterRun: int getEndOffset()>();

        specialinvoke $r9.<org.apache.poi.hwpf.converter.AbstractWordConverter$4: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r2, $i11, $i13, r3);

        $r12 = new org.apache.poi.hwpf.converter.AbstractWordConverter$5;

        $i14 = i1 + 1;

        $r13 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i14);

        $i15 = virtualinvoke $r13.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i16 = i3 - 1;

        $r14 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i16);

        $i17 = virtualinvoke $r14.<org.apache.poi.hwpf.usermodel.CharacterRun: int getEndOffset()>();

        specialinvoke $r12.<org.apache.poi.hwpf.converter.AbstractWordConverter$5: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r2, $i15, $i17, r3);

        $r15 = virtualinvoke $r9.<org.apache.poi.hwpf.usermodel.Range: java.lang.String text()>();

        $r16 = <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_HYPERLINK_LOCAL>;

        $r17 = virtualinvoke $r16.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r15);

        $z0 = virtualinvoke $r17.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r18 = virtualinvoke $r17.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke r2.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processPageref(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,java.lang.String)>(r6, r7, $r12, i8, $r18);

        return;

     label1:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported field type: \n");

        i18 = i0;

     label2:
        if i18 > i3 goto label3;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r8 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i18);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i18 = i18 + 1;

        goto label2;

     label3:
        $r0 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r0.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r19);

        $r1 = new org.apache.poi.hwpf.converter.AbstractWordConverter$6;

        $r4 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i1);

        $i4 = virtualinvoke $r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i5 = $i4 + 1;

        $r5 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i3);

        $i6 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        specialinvoke $r1.<org.apache.poi.hwpf.converter.AbstractWordConverter$6: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r2, $i5, $i6, r3);

        $i7 = i1 + 1;

        if $i7 >= i3 goto label4;

        virtualinvoke r2.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r6, i8, $r1, r7);

     label4:
        return;
    }

    public void processDocument(org.apache.poi.hwpf.HWPFDocumentCore)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r3;
        org.apache.poi.hwpf.HWPFDocumentCore r0;
        org.apache.poi.util.POILogger $r6;
        org.apache.poi.hpsf.SummaryInformation $r1;
        org.apache.poi.hwpf.usermodel.Section $r4;
        java.lang.Exception $r5;
        org.apache.poi.hwpf.usermodel.Range $r2;
        int $i0;

        r3 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r0 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hpsf.SummaryInformation getSummaryInformation()>();

        if $r1 == null goto label2;

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation)>($r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(5, "Unable to process document summary information: ", $r5, $r5);

     label4:
        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hwpf.usermodel.Range getRange()>();

        $i0 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.Range: int numSections()>();

        if $i0 != 1 goto label5;

        $r4 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.Section getSection(int)>(0);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processSingleSection(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Section)>(r0, $r4);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void afterProcess()>();

        return;

     label5:
        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range)>(r0, $r2);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void afterProcess()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected abstract void processDocumentInformation(org.apache.poi.hpsf.SummaryInformation);

    protected void processDocumentPart(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.Range r0;
        org.apache.poi.hwpf.converter.AbstractWordConverter r1;
        org.apache.poi.hwpf.HWPFDocumentCore r2;
        int $i0, i1;
        org.apache.poi.hwpf.usermodel.Section $r3;

        r1 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r2 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numSections()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.Section getSection(int)>(i1);

        virtualinvoke r1.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processSection(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Section,int)>(r2, $r3, i1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void processDrawnObject(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        byte[] $r6;
        org.apache.poi.hwpf.converter.PicturesManager $r1, $r8;
        org.apache.poi.util.POILogger $r18;
        float $f0, f1, $f2, f3;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r17, $r19, $r20, $r21;
        org.apache.poi.hwpf.HWPFDocument r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.poi.hwpf.usermodel.OfficeDrawings $r3;
        java.lang.String $r14, $r15, $r22;
        org.apache.poi.hwpf.usermodel.OfficeDrawing $r5;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.apache.poi.hwpf.usermodel.PictureType $r7;
        org.w3c.dom.Element r16;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r2 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r16 := @parameter2: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.PicturesManager getPicturesManager()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.OfficeDrawings getOfficeDrawingsMain()>();

        $i0 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $r5 = interfaceinvoke $r3.<org.apache.poi.hwpf.usermodel.OfficeDrawings: org.apache.poi.hwpf.usermodel.OfficeDrawing getOfficeDrawingAt(int)>($i0);

        if $r5 != null goto label2;

        $r18 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Characters #");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" references missing drawn object");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r22);

        return;

     label2:
        $r6 = interfaceinvoke $r5.<org.apache.poi.hwpf.usermodel.OfficeDrawing: byte[] getPictureData()>();

        if $r6 != null goto label3;

        return;

     label3:
        $i1 = interfaceinvoke $r5.<org.apache.poi.hwpf.usermodel.OfficeDrawing: int getRectangleRight()>();

        $i2 = interfaceinvoke $r5.<org.apache.poi.hwpf.usermodel.OfficeDrawing: int getRectangleLeft()>();

        $i3 = $i1 - $i2;

        $f0 = (float) $i3;

        f1 = $f0 / 1440.0F;

        $i4 = interfaceinvoke $r5.<org.apache.poi.hwpf.usermodel.OfficeDrawing: int getRectangleBottom()>();

        $i5 = interfaceinvoke $r5.<org.apache.poi.hwpf.usermodel.OfficeDrawing: int getRectangleTop()>();

        $i6 = $i4 - $i5;

        $f2 = (float) $i6;

        f3 = $f2 / 1440.0F;

        $r7 = staticinvoke <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType findMatchingType(byte[])>($r6);

        $r8 = virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.PicturesManager getPicturesManager()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $i7 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = interfaceinvoke $r8.<org.apache.poi.hwpf.converter.PicturesManager: java.lang.String savePicture(byte[],org.apache.poi.hwpf.usermodel.PictureType,java.lang.String,float,float)>($r6, $r7, $r14, f1, f3);

        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDrawnObject(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.apache.poi.hwpf.usermodel.OfficeDrawing,java.lang.String,org.w3c.dom.Element)>(r2, r4, $r5, $r15, r16);

        return;
    }

    protected abstract void processDrawnObject(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.apache.poi.hwpf.usermodel.OfficeDrawing, java.lang.String, org.w3c.dom.Element);

    protected void processDropDownList(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.String[], int)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.w3c.dom.Element r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r2;
        int i0;
        java.lang.String[] r3;
        java.lang.String $r4;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        $r4 = r3[i0];

        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void outputCharacters(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.CharacterRun,java.lang.String)>(r1, r2, $r4);

        return;
    }

    protected abstract void processEndnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range);

    protected void processField(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.Range, int, org.apache.poi.hwpf.usermodel.Field, org.w3c.dom.Element)
    {
        java.lang.Integer $r18;
        org.apache.poi.hwpf.usermodel.Field r0;
        java.util.regex.Matcher $r8, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.util.POILogger $r22, $r35;
        org.apache.poi.hwpf.usermodel.Range r1, $r2, $r14, $r15, $r20, $r28, $r33, $r42;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r37, $r38, $r39, $r40, $r43, $r45;
        java.util.regex.Pattern $r7, $r9, $r30;
        org.apache.poi.hwpf.HWPFDocument r4;
        org.apache.poi.hwpf.usermodel.CharacterRun $r16, $r19;
        org.apache.poi.hwpf.converter.AbstractWordConverter$7 r34, $r44;
        java.lang.String[] $r17;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        java.lang.String $r6, $r10, $r11, $r13, $r27, $r29, $r32, $r41;
        org.apache.poi.hwpf.converter.AbstractWordConverter r3;
        org.w3c.dom.Element r5;

        r3 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r4 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r1 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.poi.hwpf.usermodel.Field;

        r5 := @parameter4: org.w3c.dom.Element;

        $i0 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: int getType()>();

        lookupswitch($i0)
        {
            case 37: goto label01;
            case 58: goto label03;
            case 83: goto label06;
            case 88: goto label09;
            default: goto label13;
        };

     label01:
        $r28 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range firstSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        if $r28 == null goto label13;

        $r29 = virtualinvoke $r28.<org.apache.poi.hwpf.usermodel.Range: java.lang.String text()>();

        $r30 = <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_PAGEREF>;

        $r31 = virtualinvoke $r30.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r29);

        $z6 = virtualinvoke $r31.<java.util.regex.Matcher: boolean find()>();

        if $z6 == 0 goto label02;

        $r32 = virtualinvoke $r31.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r33 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range secondSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processPageref(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,java.lang.String)>(r4, r5, $r33, i1, $r32);

        return;

     label02:
        goto label13;

     label03:
        $z3 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: boolean hasSeparator()>();

        if $z3 != 0 goto label04;

        $r22 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contains ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with \'Embedded Object\' but without separator mark");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r27);

        return;

     label04:
        $r19 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.CharacterRun getMarkSeparatorCharacterRun(org.apache.poi.hwpf.usermodel.Range)>(r1);

        $z4 = virtualinvoke $r19.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isOle2()>();

        if $z4 == 0 goto label13;

        $z5 = specialinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processOle2(org.apache.poi.hwpf.HWPFDocument,org.apache.poi.hwpf.usermodel.CharacterRun,org.w3c.dom.Element)>(r4, $r19, r5);

        if $z5 != 0 goto label05;

        $r20 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range secondSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r4, i1, $r20, r5);

     label05:
        return;

     label06:
        $r15 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range firstSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        $i8 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        $i9 = $i8 - 1;

        $r16 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>($i9);

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String[] getDropDownListValues()>();

        $r18 = virtualinvoke $r16.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.Integer getDropDownListDefaultItemIndex()>();

        if $r17 == null goto label13;

        if $r18 != null goto label07;

        $i12 = (int) -1;

        $i10 = $i12;

        goto label08;

     label07:
        $i10 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

     label08:
        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDropDownList(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.CharacterRun,java.lang.String[],int)>(r5, $r16, $r17, $i10);

        return;

     label09:
        $r2 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range firstSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        if $r2 == null goto label13;

        $r6 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.Range: java.lang.String text()>();

        $r7 = <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_HYPERLINK_EXTERNAL>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        $z0 = virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label10;

        $r13 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r14 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range secondSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processHyperlink(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,java.lang.String)>(r4, r5, $r14, i1, $r13);

        return;

     label10:
        $r9 = <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_HYPERLINK_LOCAL>;

        virtualinvoke $r8.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r9);

        $z1 = virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label12;

        $r10 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r34 = null;

        $r11 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $z2 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: boolean isNotEmpty(java.lang.String)>($r11);

        if $z2 == 0 goto label11;

        $r44 = new org.apache.poi.hwpf.converter.AbstractWordConverter$7;

        $i2 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $i3 = virtualinvoke $r8.<java.util.regex.Matcher: int start(int)>(2);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $i6 = virtualinvoke $r8.<java.util.regex.Matcher: int end(int)>(2);

        $i7 = $i5 + $i6;

        specialinvoke $r44.<org.apache.poi.hwpf.converter.AbstractWordConverter$7: void <init>(org.apache.poi.hwpf.converter.AbstractWordConverter,int,int,org.apache.poi.hwpf.usermodel.Range)>(r3, $i4, $i7, $r2);

        r34 = $r44;

     label11:
        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processPageref(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,java.lang.String)>(r4, r5, r34, i1, $r10);

        return;

     label12:
        goto label13;

     label13:
        $r35 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contains ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with unsupported type or format");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r41);

        $r42 = interfaceinvoke r0.<org.apache.poi.hwpf.usermodel.Field: org.apache.poi.hwpf.usermodel.Range secondSubrange(org.apache.poi.hwpf.usermodel.Range)>(r1);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processCharacters(org.apache.poi.hwpf.HWPFDocumentCore,int,org.apache.poi.hwpf.usermodel.Range,org.w3c.dom.Element)>(r4, i1, $r42, r5);

        return;
    }

    protected abstract void processFootnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument, int, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range);

    protected abstract void processHyperlink(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String);

    protected void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture)
    {
        byte[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r6, $r7;
        boolean z0, $z1;
        org.apache.poi.hwpf.converter.PicturesManager $r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.apache.poi.hwpf.usermodel.PictureType $r5;
        org.w3c.dom.Element r2;
        org.apache.poi.hwpf.usermodel.Picture r3;
        float $f0, f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r2 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        r3 := @parameter2: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.PicturesManager getPicturesManager()>();

        if $r1 == null goto label5;

        $i0 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getHorizontalScalingFactor()>();

        $i1 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getVerticalScalingFactor()>();

        if $i0 <= 0 goto label1;

        $i7 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $i8 = $i7 * $i0;

        $i9 = $i8 / 1000;

        $f4 = (float) $i9;

        $f5 = $f4 / 1440.0F;

        goto label2;

     label1:
        $i2 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $f0 = (float) $i2;

        $f5 = $f0 / 1440.0F;

     label2:
        f1 = $f5;

        if $i1 <= 0 goto label3;

        $i4 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $i5 = $i4 * $i1;

        $i6 = $i5 / 1000;

        $f3 = (float) $i6;

        $f6 = $f3 / 1440.0F;

        goto label4;

     label3:
        $i3 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $f2 = (float) $i3;

        $f6 = $f2 / 1440.0F;

     label4:
        $r4 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: byte[] getContent()>();

        $r5 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.usermodel.PictureType suggestPictureType()>();

        $r6 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.Picture: java.lang.String suggestFullFileName()>();

        $r7 = interfaceinvoke $r1.<org.apache.poi.hwpf.converter.PicturesManager: java.lang.String savePicture(byte[],org.apache.poi.hwpf.usermodel.PictureType,java.lang.String,float,float)>($r4, $r5, $r6, f1, $f6);

        $z1 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isNotEmpty(java.lang.String)>($r7);

        if $z1 == 0 goto label5;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processImage(org.w3c.dom.Element,boolean,org.apache.poi.hwpf.usermodel.Picture,java.lang.String)>(r2, z0, r3, $r7);

        return;

     label5:
        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processImageWithoutPicturesManager(org.w3c.dom.Element,boolean,org.apache.poi.hwpf.usermodel.Picture)>(r2, z0, r3);

        return;
    }

    protected abstract void processImage(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture, java.lang.String);

    protected abstract void processImageWithoutPicturesManager(org.w3c.dom.Element, boolean, org.apache.poi.hwpf.usermodel.Picture);

    protected abstract void processLineBreak(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.CharacterRun);

    protected void processNoteAnchor(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r0;
        org.apache.poi.hwpf.usermodel.CharacterRun r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17;
        org.apache.poi.hwpf.usermodel.Notes $r1, $r3;
        org.apache.poi.hwpf.converter.AbstractWordConverter r6;
        org.apache.poi.hwpf.usermodel.Range $r4, $r8, $r10, $r11;
        org.w3c.dom.Element r7;

        r6 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r0 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r7 := @parameter2: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Notes getFootnotes()>();

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i1 = interfaceinvoke $r1.<org.apache.poi.hwpf.usermodel.Notes: int getNoteIndexByAnchorPosition(int)>($i0);

        $i15 = (int) -1;

        if $i1 == $i15 goto label1;

        $r8 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Range getFootnoteRange()>();

        $i9 = virtualinvoke $r8.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $i10 = interfaceinvoke $r1.<org.apache.poi.hwpf.usermodel.Notes: int getNoteTextStartOffset(int)>($i1);

        $i11 = interfaceinvoke $r1.<org.apache.poi.hwpf.usermodel.Notes: int getNoteTextEndOffset(int)>($i1);

        $r10 = new org.apache.poi.hwpf.usermodel.Range;

        $i13 = $i9 + $i10;

        $i12 = $i9 + $i11;

        specialinvoke $r10.<org.apache.poi.hwpf.usermodel.Range: void <init>(int,int,org.apache.poi.hwpf.HWPFDocumentCore)>($i13, $i12, r0);

        virtualinvoke r6.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processFootnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument,int,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r0, $i1, r7, $r10);

        return;

     label1:
        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Notes getEndnotes()>();

        $i2 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getStartOffset()>();

        $i3 = interfaceinvoke $r3.<org.apache.poi.hwpf.usermodel.Notes: int getNoteIndexByAnchorPosition(int)>($i2);

        $i17 = (int) -1;

        if $i3 == $i17 goto label2;

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.Range getEndnoteRange()>();

        $i4 = virtualinvoke $r4.<org.apache.poi.hwpf.usermodel.Range: int getStartOffset()>();

        $i5 = interfaceinvoke $r3.<org.apache.poi.hwpf.usermodel.Notes: int getNoteTextStartOffset(int)>($i3);

        $i6 = interfaceinvoke $r3.<org.apache.poi.hwpf.usermodel.Notes: int getNoteTextEndOffset(int)>($i3);

        $r11 = new org.apache.poi.hwpf.usermodel.Range;

        $i8 = $i4 + $i5;

        $i7 = $i4 + $i6;

        specialinvoke $r11.<org.apache.poi.hwpf.usermodel.Range: void <init>(int,int,org.apache.poi.hwpf.HWPFDocumentCore)>($i8, $i7, r0);

        virtualinvoke r6.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processEndnoteAutonumbered(org.apache.poi.hwpf.HWPFDocument,int,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range)>(r0, $i3, r7, $r11);

        return;

     label2:
        return;
    }

    private boolean processOle2(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r0;
        org.apache.poi.poifs.filesystem.Entry $r7;
        org.apache.poi.hwpf.usermodel.CharacterRun r4;
        java.lang.Integer $r11, $r14;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        boolean $z0;
        org.apache.poi.hwpf.converter.AbstractWordConverter r8;
        org.apache.poi.util.POILogger $r10, $r13;
        org.apache.poi.hwpf.usermodel.ObjectsPool $r1;
        java.lang.Exception $r12;
        org.w3c.dom.Element r9;
        java.lang.StringBuilder $r2, $r3, $r5;

        r8 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r0 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r4 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r9 := @parameter2: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFDocument: org.apache.poi.hwpf.usermodel.ObjectsPool getObjectsPool()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i0 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r1.<org.apache.poi.hwpf.usermodel.ObjectsPool: org.apache.poi.poifs.filesystem.Entry getObjectById(java.lang.String)>($r6);

        if $r7 != null goto label1;

        $r10 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $i1 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "Referenced OLE2 object \'", $r11, "\' not found in ObjectPool");

        return 0;

     label1:
        $z0 = virtualinvoke r8.<org.apache.poi.hwpf.converter.AbstractWordConverter: boolean processOle2(org.apache.poi.hwpf.HWPFDocument,org.w3c.dom.Element,org.apache.poi.poifs.filesystem.Entry)>(r0, r9, $r7);

     label2:
        return $z0;

     label3:
        $r12 := @caughtexception;

        $r13 = <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger>;

        $i2 = virtualinvoke r4.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r13.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable)>(5, "Unable to convert internal OLE2 object \'", $r14, "\': ", $r12, $r12);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected boolean processOle2(org.apache.poi.hwpf.HWPFDocument, org.w3c.dom.Element, org.apache.poi.poifs.filesystem.Entry) throws java.lang.Exception
    {
        org.apache.poi.hwpf.HWPFDocument r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.w3c.dom.Element r2;
        org.apache.poi.poifs.filesystem.Entry r3;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.poi.poifs.filesystem.Entry;

        return 0;
    }

    protected abstract void processPageBreak(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element);

    protected abstract void processPageref(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int, java.lang.String);

    protected abstract void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, int, org.apache.poi.hwpf.usermodel.Paragraph, java.lang.String);

    protected void processParagraphes(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Range, int)
    {
        java.lang.IllegalStateException $r21;
        org.apache.poi.hwpf.HWPFDocumentCore r4;
        org.apache.poi.hwpf.usermodel.Paragraph $r1;
        boolean $z0, $z1, $z2, z3;
        org.apache.poi.util.POILogger $r19;
        java.lang.Exception $r18;
        org.apache.poi.hwpf.usermodel.Range r0;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r20;
        int $i0, i1, $i2, $i4, $i5, $i6, $i7, i8, i9, $i11;
        org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState $r7;
        java.lang.String $r2, $r8, $r17;
        org.apache.poi.hwpf.converter.AbstractWordConverter r3;
        org.apache.poi.hwpf.usermodel.Table $r9;
        char $c3;
        org.w3c.dom.Element r5;
        org.apache.poi.hwpf.usermodel.HWPFList $r6;

        r3 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r4 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r5 := @parameter1: org.w3c.dom.Element;

        r0 := @parameter2: org.apache.poi.hwpf.usermodel.Range;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numParagraphs()>();

        i8 = 0;

     label01:
        if i8 >= $i0 goto label10;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.Paragraph getParagraph(int)>(i8);

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: boolean isInTable()>();

        if $z0 == 0 goto label03;

        $i4 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getTableLevel()>();

        if $i4 == i1 goto label03;

        $i5 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getTableLevel()>();

        if $i5 >= i1 goto label02;

        $r21 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to process table cell with higher level (");

        $i7 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getTableLevel()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") than current table level (");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as inner table part");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r21;

     label02:
        $r9 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.Table getTable(org.apache.poi.hwpf.usermodel.Paragraph)>($r1);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processTable(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Table)>(r4, r5, $r9);

        $i6 = virtualinvoke $r9.<org.apache.poi.hwpf.usermodel.Table: int numParagraphs()>();

        i9 = i8 + $i6;

        $i11 = (int) -1;

        i8 = i9 + $i11;

        goto label09;

     label03:
        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: java.lang.String text()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("\f");

        if $z1 == 0 goto label04;

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processPageBreak(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element)>(r4, r5);

     label04:
        z3 = 0;

        $z2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: boolean isInList()>();

        if $z2 == 0 goto label08;

     label05:
        $r6 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.HWPFList getList()>();

        $r7 = r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState numberingState>;

        $i2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getIlvl()>();

        $c3 = (char) $i2;

        $r8 = staticinvoke <org.apache.poi.hwpf.converter.AbstractWordUtils: java.lang.String getBulletText(org.apache.poi.hwpf.converter.AbstractWordUtils$NumberingState,org.apache.poi.hwpf.usermodel.HWPFList,char)>($r7, $r6, $c3);

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,int,org.apache.poi.hwpf.usermodel.Paragraph,java.lang.String)>(r4, r5, i1, $r1, $r8);

        z3 = 1;

     label06:
        goto label08;

     label07:
        $r18 := @caughtexception;

        $r19 = r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger log>;

        virtualinvoke $r19.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(5, "Can\'t process paragraph as list entry, will be processed without list information", $r18);

     label08:
        if z3 != 0 goto label09;

        virtualinvoke r3.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processParagraph(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,int,org.apache.poi.hwpf.usermodel.Paragraph,java.lang.String)>(r4, r5, i1, $r1, "");

     label09:
        i8 = i8 + 1;

        goto label01;

     label10:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    protected abstract void processSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section, int);

    protected void processSingleSection(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Section)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        org.apache.poi.hwpf.usermodel.Section r2;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.Section;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processSection(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Section,int)>(r1, r2, 0);

        return;
    }

    protected void processSymbol(org.apache.poi.hwpf.HWPFDocument, org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.HWPFDocument r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.w3c.dom.Element r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r2;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocument;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterRun;

        r3 := @parameter2: org.w3c.dom.Element;

        return;
    }

    protected abstract void processTable(org.apache.poi.hwpf.HWPFDocumentCore, org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.Table);

    public void setFontReplacer(org.apache.poi.hwpf.converter.FontReplacer)
    {
        org.apache.poi.hwpf.converter.FontReplacer r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.converter.FontReplacer;

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.FontReplacer fontReplacer> = r1;

        return;
    }

    public void setPicturesManager(org.apache.poi.hwpf.converter.PicturesManager)
    {
        org.apache.poi.hwpf.converter.PicturesManager r1;
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.converter.PicturesManager;

        r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.hwpf.converter.PicturesManager picturesManager> = r1;

        return;
    }

    protected int tryDeadField(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Range, int, int, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.converter.AbstractWordConverter r0;
        org.apache.poi.hwpf.HWPFDocumentCore r1;
        org.apache.poi.hwpf.usermodel.Range r2;
        org.w3c.dom.Element r4;
        int[] $r3;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r1 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        r4 := @parameter4: org.w3c.dom.Element;

        $r3 = specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: int[] tryDeadField_lookupFieldSeparatorEnd(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range,int)>(r1, r2, i0);

        if $r3 != null goto label1;

        return i0;

     label1:
        $i3 = $r3[0];

        $i2 = $r3[1];

        virtualinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordConverter: void processDeadField(org.apache.poi.hwpf.HWPFDocumentCore,org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.Range,int,int,int,int)>(r1, r4, r2, i1, i0, $i3, $i2);

        $i4 = $r3[1];

        return $i4;
    }

    private int[] tryDeadField_lookupFieldSeparatorEnd(org.apache.poi.hwpf.HWPFDocumentCore, org.apache.poi.hwpf.usermodel.Range, int)
    {
        byte[] $r4, $r5, $r6;
        org.apache.poi.hwpf.HWPFDocumentCore r8;
        org.apache.poi.hwpf.usermodel.CharacterRun $r2;
        byte b3, $b4;
        int[] $r1, $r9;
        int i0, $i1, $i2, i5, i6, i7, $i9, $i11, $i12, $i13, $i15, $i16, $i18, $i20, $i22, $i24;
        java.lang.String $r3;
        org.apache.poi.hwpf.converter.AbstractWordConverter r7;
        org.apache.poi.hwpf.usermodel.Range r0;

        r7 := @this: org.apache.poi.hwpf.converter.AbstractWordConverter;

        r8 := @parameter0: org.apache.poi.hwpf.HWPFDocumentCore;

        r0 := @parameter1: org.apache.poi.hwpf.usermodel.Range;

        i0 := @parameter2: int;

        $i9 = (int) -1;

        i5 = $i9;

        $i11 = (int) -1;

        i6 = $i11;

        i7 = i0 + 1;

     label01:
        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: int numCharacterRuns()>();

        if i7 >= $i1 goto label08;

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Range: org.apache.poi.hwpf.usermodel.CharacterRun getCharacterRun(int)>(i7);

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $i2 = lengthof $r4;

        if $i2 != 0 goto label02;

        goto label07;

     label02:
        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        b3 = $r5[0];

        $i12 = (int) b3;

        if $i12 != 19 goto label03;

        $r9 = specialinvoke r7.<org.apache.poi.hwpf.converter.AbstractWordConverter: int[] tryDeadField_lookupFieldSeparatorEnd(org.apache.poi.hwpf.HWPFDocumentCore,org.apache.poi.hwpf.usermodel.Range,int)>(r8, r0, i7);

        if $r9 == null goto label07;

        i7 = $r9[1];

        goto label07;

     label03:
        $i13 = (int) b3;

        if $i13 != 20 goto label05;

        $i15 = (int) -1;

        if i5 == $i15 goto label04;

        return null;

     label04:
        i5 = i7;

        goto label07;

     label05:
        $r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $b4 = $r6[0];

        $i16 = (int) $b4;

        if $i16 != 21 goto label07;

        $i18 = (int) -1;

        $i20 = (int) -1;

        if $i18 == $i20 goto label06;

        return null;

     label06:
        i6 = i7;

        goto label08;

     label07:
        i7 = i7 + 1;

        goto label01;

     label08:
        $i22 = (int) -1;

        if i5 == $i22 goto label09;

        $i24 = (int) -1;

        if i6 != $i24 goto label10;

     label09:
        return null;

     label10:
        $r1 = newarray (int)[2];

        $r1[0] = i5;

        $r1[1] = i6;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;
        java.util.regex.Pattern $r1, $r2, $r3;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: char UNICODECHAR_ZERO_WIDTH_SPACE> = 8203;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: char UNICODECHAR_NONBREAKING_HYPHEN> = 8209;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: char UNICODECHAR_NO_BREAK_SPACE> = 160;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte SPECCHAR_DRAWN_OBJECT> = 8;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte SPECCHAR_AUTONUMBERED_FOOTNOTE_REFERENCE> = 2;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte FIELD_SEPARATOR_MARK> = 20;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte FIELD_END_MARK> = 21;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte FIELD_BEGIN_MARK> = 19;

        <org.apache.poi.hwpf.converter.AbstractWordConverter: byte BEL_MARK> = 7;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/converter/AbstractWordConverter;");

        <org.apache.poi.hwpf.converter.AbstractWordConverter: org.apache.poi.util.POILogger logger> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[ \\t\\r\\n]*HYPERLINK \"(.*)\".*$");

        <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_HYPERLINK_EXTERNAL> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[ \\t\\r\\n]*HYPERLINK \\\\l \"(.*)\"[ ](.*)$");

        <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_HYPERLINK_LOCAL> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[ \\t\\r\\n]*PAGEREF ([^ ]*)[ \\t\\r\\n]*\\\\h.*$");

        <org.apache.poi.hwpf.converter.AbstractWordConverter: java.util.regex.Pattern PATTERN_PAGEREF> = $r3;

        return;
    }
}
