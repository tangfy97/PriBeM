final class org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 extends java.lang.Object implements org.waveprotocol.wave.model.adt.docbased.Factory
{

    void <init>()
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.conversation.DocumentBasedManifest adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, org.waveprotocol.wave.model.document.Doc$E)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 r3;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r0;
        org.waveprotocol.wave.model.document.Doc$E r1;

        r3 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r1 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.DocumentBasedManifest: org.waveprotocol.wave.model.conversation.DocumentBasedManifest createOnExisting(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Void)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1$1 $r0;
        java.lang.Void r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 r1;

        r1 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1;

        r2 := @parameter0: java.lang.Void;

        $r0 = new org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1$1: void <init>(org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1)>(r1);

        return $r0;
    }

    public volatile org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Object)
    {
        java.lang.Void $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 r0;
        org.waveprotocol.wave.model.adt.docbased.Initializer $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1: org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Void)>($r2);

        return $r3;
    }

    public volatile java.lang.Object adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest $r4;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1 r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;
        org.waveprotocol.wave.model.document.Doc$E $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.model.document.Doc$E) r2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifest$1: org.waveprotocol.wave.model.conversation.DocumentBasedManifest adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter,org.waveprotocol.wave.model.document.Doc$E)>(r1, $r3);

        return $r4;
    }
}
