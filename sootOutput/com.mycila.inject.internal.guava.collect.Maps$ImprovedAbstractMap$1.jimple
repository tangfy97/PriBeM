class com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1 extends com.mycila.inject.internal.guava.collect.Maps$KeySet
{
    final com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap)
    {
        com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1 r0;
        com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap;

        r0.<com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1: com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$KeySet: void <init>()>();

        return;
    }

    java.util.Map map()
    {
        com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1 r0;
        com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap$1: com.mycila.inject.internal.guava.collect.Maps$ImprovedAbstractMap this$0>;

        return $r1;
    }
}
