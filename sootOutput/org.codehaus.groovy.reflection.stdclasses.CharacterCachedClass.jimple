public class org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass extends org.codehaus.groovy.reflection.CachedClass
{
    private boolean allowNull;
    static java.lang.Class class$java$lang$Character;

    public void <init>(java.lang.Class, boolean)
    {
        org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass r0;
        java.lang.Class r1;
        boolean z0;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.groovy.reflection.CachedClass: void <init>(java.lang.Class)>(r1);

        r0.<org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: boolean allowNull> = z0;

        return;
    }

    public boolean isDirectlyAssignable(java.lang.Object)
    {
        org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: boolean allowNull>;

        if $z0 == 0 goto label1;

        if r1 == null goto label2;

     label1:
        $z1 = r1 instanceof java.lang.Character;

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass r0;
        java.lang.Class r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass;

        r1 := @parameter0: java.lang.Class;

        $z0 = r0.<org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: boolean allowNull>;

        if $z0 == 0 goto label1;

        if r1 == null goto label4;

     label1:
        $r2 = <org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: java.lang.Class class$java$lang$Character>;

        if $r2 != null goto label2;

        $r4 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: java.lang.Class class$java$lang$Character> = $r4;

        goto label3;

     label2:
        $r4 = <org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass: java.lang.Class class$java$lang$Character>;

     label3:
        if r1 == $r4 goto label4;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r1 != $r3 goto label5;

     label4:
        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
