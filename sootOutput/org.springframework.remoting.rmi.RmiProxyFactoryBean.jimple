public class org.springframework.remoting.rmi.RmiProxyFactoryBean extends org.springframework.remoting.rmi.RmiClientInterceptor implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware
{
    private java.lang.Object serviceProxy;

    public void <init>()
    {
        org.springframework.remoting.rmi.RmiProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.rmi.RmiProxyFactoryBean;

        specialinvoke r0.<org.springframework.remoting.rmi.RmiClientInterceptor: void <init>()>();

        return;
    }

    public void afterPropertiesSet()
    {
        org.springframework.aop.framework.ProxyFactory $r2;
        org.springframework.remoting.rmi.RmiProxyFactoryBean r0;
        java.lang.Class $r1, $r3;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.springframework.remoting.rmi.RmiProxyFactoryBean;

        specialinvoke r0.<org.springframework.remoting.rmi.RmiClientInterceptor: void afterPropertiesSet()>();

        $r1 = virtualinvoke r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Class getServiceInterface()>();

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'serviceInterface\' is required");

        throw $r6;

     label1:
        $r2 = new org.springframework.aop.framework.ProxyFactory;

        $r3 = virtualinvoke r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Class getServiceInterface()>();

        specialinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.aopalliance.intercept.Interceptor)>($r3, r0);

        $r4 = virtualinvoke r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.ClassLoader getBeanClassLoader()>();

        $r5 = virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r4);

        r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Object serviceProxy> = $r5;

        return;
    }

    public java.lang.Object getObject()
    {
        org.springframework.remoting.rmi.RmiProxyFactoryBean r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.remoting.rmi.RmiProxyFactoryBean;

        $r1 = r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Object serviceProxy>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.remoting.rmi.RmiProxyFactoryBean r0;
        java.lang.Class $r1;

        r0 := @this: org.springframework.remoting.rmi.RmiProxyFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Class getServiceInterface()>();

        return $r1;
    }

    public boolean isSingleton()
    {
        org.springframework.remoting.rmi.RmiProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.rmi.RmiProxyFactoryBean;

        return 1;
    }
}
