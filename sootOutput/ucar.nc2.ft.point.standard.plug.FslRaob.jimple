public class ucar.nc2.ft.point.standard.plug.FslRaob extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.FslRaob r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.FslRaob;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.FslRaob r2;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r3;
        boolean $z0, $z1, $z2;

        r2 := @this: ucar.nc2.ft.point.standard.plug.FslRaob;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "version", null);

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Forecast Systems Lab 1.3");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Forecast Systems Lab 1.4");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.PointConfigXML $r2;
        java.util.Formatter r4;
        ucar.nc2.ft.point.standard.TableConfig $r5, $r8, r12;
        java.lang.String $r1, $r14, $r15, $r16;
        ucar.nc2.constants.FeatureType r3;
        boolean $z0, $z1;
        java.util.Iterator $r10;
        java.util.List $r6, $r9;
        ucar.nc2.ft.point.standard.plug.FslRaob r13;
        java.lang.Object $r7, $r11;
        ucar.nc2.dataset.NetcdfDataset r0;

        r13 := @this: ucar.nc2.ft.point.standard.plug.FslRaob;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter2: java.util.Formatter;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "version", null);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Forecast Systems Lab 1.4");

        if $z0 == 0 goto label1;

        $r16 = "resources/nj22/pointConfig/FslRaob14.xml";

        goto label2;

     label1:
        $r16 = "resources/nj22/pointConfig/FslRaob13.xml";

     label2:
        $r2 = new ucar.nc2.ft.point.standard.PointConfigXML;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.PointConfigXML: void <init>()>();

        $r5 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig readConfigXMLfromResource(java.lang.String,ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>($r16, r3, r0, r4);

        $r6 = $r5.<ucar.nc2.ft.point.standard.TableConfig: java.util.List children>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (ucar.nc2.ft.point.standard.TableConfig) $r7;

        $r9 = $r8.<ucar.nc2.ft.point.standard.TableConfig: java.util.List children>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.ft.point.standard.TableConfig) $r11;

        $r15 = r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        $r14 = r12.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        specialinvoke r13.<ucar.nc2.ft.point.standard.plug.FslRaob: void makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.ft.point.standard.TableConfig,java.lang.String,java.lang.String)>(r0, $r5, r12, $r15, $r14);

        goto label3;

     label4:
        return $r5;
    }

    private void makeMultidimInner(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.ft.point.standard.TableConfig, java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r6, $r7;
        ucar.nc2.ft.point.standard.TableConfig r9, r10;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.Variable r12;
        java.lang.String r1, r3, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r8;
        ucar.ma2.DataType $r17, $r18;
        java.util.List $r5;
        ucar.nc2.ft.point.standard.plug.FslRaob r19;
        ucar.nc2.Dimension $r2, $r4, $r13, $r15;
        java.lang.Object $r11;
        ucar.nc2.dataset.NetcdfDataset r0;

        r19 := @this: ucar.nc2.ft.point.standard.plug.FslRaob;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r9 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r10 := @parameter2: ucar.nc2.ft.point.standard.TableConfig;

        r1 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        $r8 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.Variable) $r11;

        $z0 = r12 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r13 = virtualinvoke r12.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r13 == null goto label5;

        $z1 = virtualinvoke $r13.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label5;

        $i2 = virtualinvoke r12.<ucar.nc2.Variable: int getRank()>();

        if $i2 == 1 goto label3;

        $i3 = virtualinvoke r12.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 2 goto label4;

        $r17 = virtualinvoke r12.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r17 != $r18 goto label4;

     label3:
        $r14 = virtualinvoke r12.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label5;

     label4:
        $r15 = virtualinvoke r12.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        if $r15 == null goto label5;

        $z2 = virtualinvoke $r15.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label5;

        $r16 = virtualinvoke r12.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r16);

     label5:
        goto label1;

     label6:
        r9.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r6;

        r10.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r7;

        return;
    }
}
