public final class org.apache.neethi.util.Service extends java.lang.Object
{
    static java.util.Map instanceMap;

    private void <init>()
    {
        org.apache.neethi.util.Service r0;

        r0 := @this: org.apache.neethi.util.Service;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.List cast(java.util.List)
    {
        java.util.List r0;

        r0 := @parameter0: java.util.List;

        return r0;
    }

    public static synchronized java.util.List providers(java.lang.Class)
    {
        java.util.Enumeration $r12;
        java.net.URL r34;
        java.util.Map $r6, $r11;
        java.lang.SecurityException $r31;
        boolean $z0;
        java.lang.LinkageError $r25;
        java.lang.Exception $r27, $r29;
        java.util.List $r8, $r9;
        java.lang.StringBuilder $r1, $r4, $r36;
        java.lang.ClassLoader r32;
        java.lang.Throwable $r23;
        java.util.ArrayList $r37;
        int $i0, $i1, $i3;
        java.lang.String $r3, $r5, $r17, r35;
        java.io.IOException $r22, $r24, $r26, $r28, $r30;
        java.io.InputStreamReader $r38;
        java.lang.Class r2, $r18, $r21;
        java.lang.Object $r7, $r13, $r19, $r20;
        java.io.BufferedReader $r39;
        java.io.InputStream $r14, r33;

        r2 := @parameter0: java.lang.Class;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <org.apache.neethi.util.Service: java.util.Map instanceMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (java.util.List) $r7;

        $r9 = staticinvoke <org.apache.neethi.util.Service: java.util.List cast(java.util.List)>($r8);

        if $r9 == null goto label01;

        return $r9;

     label01:
        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r11 = <org.apache.neethi.util.Service: java.util.Map instanceMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r37);

        r32 = null;

     label02:
        r32 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label03:
        goto label05;

     label04:
        $r31 := @caughtexception;

     label05:
        if r32 != null goto label06;

        $r21 = class "Lorg/apache/neethi/util/Service;";

        r32 = virtualinvoke $r21.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label06:
        if r32 != null goto label07;

        r32 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label07:
        if r32 != null goto label08;

        return $r37;

     label08:
        $r12 = virtualinvoke r32.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r5);

     label09:
        goto label11;

     label10:
        $r30 := @caughtexception;

        return $r37;

     label11:
        $z0 = interfaceinvoke $r12.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label38;

        r33 = null;

     label12:
        $r13 = interfaceinvoke $r12.<java.util.Enumeration: java.lang.Object nextElement()>();

        r34 = (java.net.URL) $r13;

        $r14 = virtualinvoke r34.<java.net.URL: java.io.InputStream openStream()>();

        r33 = $r14;

        $r38 = new java.io.InputStreamReader;

        specialinvoke $r38.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r14, "UTF-8");

        $r39 = new java.io.BufferedReader;

        specialinvoke $r39.<java.io.BufferedReader: void <init>(java.io.Reader)>($r38);

        r35 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>();

     label13:
        if r35 == null goto label21;

     label14:
        $i0 = virtualinvoke r35.<java.lang.String: int indexOf(int)>(35);

        $i3 = (int) -1;

        if $i0 == $i3 goto label15;

        r35 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label15:
        $r17 = virtualinvoke r35.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i1 != 0 goto label17;

        r35 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>();

     label16:
        goto label13;

     label17:
        $r18 = virtualinvoke r32.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.Object newInstance()>();

        $r20 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r19);

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r20);

     label18:
        goto label20;

     label19:
        $r29 := @caughtexception;

     label20:
        r35 = virtualinvoke $r39.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label13;

     label21:
        if $r14 == null goto label22;

        virtualinvoke $r14.<java.io.InputStream: void close()>();

     label22:
        goto label37;

     label23:
        $r28 := @caughtexception;

        goto label37;

     label24:
        $r27 := @caughtexception;

     label25:
        if r33 == null goto label26;

        virtualinvoke r33.<java.io.InputStream: void close()>();

     label26:
        goto label37;

     label27:
        $r26 := @caughtexception;

        goto label37;

     label28:
        $r25 := @caughtexception;

     label29:
        if r33 == null goto label30;

        virtualinvoke r33.<java.io.InputStream: void close()>();

     label30:
        goto label37;

     label31:
        $r24 := @caughtexception;

        goto label37;

     label32:
        $r23 := @caughtexception;

     label33:
        if r33 == null goto label34;

        virtualinvoke r33.<java.io.InputStream: void close()>();

     label34:
        goto label36;

     label35:
        $r22 := @caughtexception;

     label36:
        throw $r23;

     label37:
        goto label11;

     label38:
        return $r37;

        catch java.lang.SecurityException from label02 to label03 with label04;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Exception from label14 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Exception from label12 to label21 with label24;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.LinkageError from label12 to label21 with label28;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label12 to label21 with label32;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.neethi.util.Service: java.util.Map instanceMap> = $r0;

        return;
    }
}
