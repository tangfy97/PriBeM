public class org.apache.tika.detect.XmlRootExtractor extends java.lang.Object
{

    public void <init>()
    {
        org.apache.tika.detect.XmlRootExtractor r0;

        r0 := @this: org.apache.tika.detect.XmlRootExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.xml.namespace.QName extractRootElement(byte[])
    {
        byte[] r2;
        java.io.ByteArrayInputStream $r1;
        org.apache.tika.detect.XmlRootExtractor r0;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.tika.detect.XmlRootExtractor;

        r2 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        $r3 = virtualinvoke r0.<org.apache.tika.detect.XmlRootExtractor: javax.xml.namespace.QName extractRootElement(java.io.InputStream)>($r1);

        return $r3;
    }

    public javax.xml.namespace.QName extractRootElement(java.io.InputStream)
    {
        org.apache.tika.detect.XmlRootExtractor$ExtractorHandler $r0;
        javax.xml.parsers.SAXParserFactory $r1;
        org.apache.tika.sax.OfflineContentHandler $r5;
        java.lang.Exception $r7;
        org.apache.tika.io.CloseShieldInputStream $r3;
        javax.xml.parsers.SAXParser $r2;
        org.apache.tika.detect.XmlRootExtractor r8;
        javax.xml.namespace.QName $r6;
        java.io.InputStream r4;

        r8 := @this: org.apache.tika.detect.XmlRootExtractor;

        r4 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.tika.detect.XmlRootExtractor$ExtractorHandler;

        specialinvoke $r0.<org.apache.tika.detect.XmlRootExtractor$ExtractorHandler: void <init>(org.apache.tika.detect.XmlRootExtractor$1)>(null);

     label1:
        $r1 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

        $r2 = virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r3 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r3.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r4);

        $r5 = new org.apache.tika.sax.OfflineContentHandler;

        specialinvoke $r5.<org.apache.tika.sax.OfflineContentHandler: void <init>(org.xml.sax.ContentHandler)>($r0);

        virtualinvoke $r2.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>($r3, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r6 = staticinvoke <org.apache.tika.detect.XmlRootExtractor$ExtractorHandler: javax.xml.namespace.QName access$100(org.apache.tika.detect.XmlRootExtractor$ExtractorHandler)>($r0);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
