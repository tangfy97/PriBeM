public class org.apache.lucene.queries.function.valuesource.TFValueSource extends org.apache.lucene.queries.function.valuesource.TermFreqValueSource
{

    public void <init>(java.lang.String, java.lang.String, java.lang.String, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.queries.function.valuesource.TFValueSource r0;
        org.apache.lucene.util.BytesRef r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.TFValueSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.util.BytesRef;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.TermFreqValueSource: void <init>(java.lang.String,java.lang.String,java.lang.String,org.apache.lucene.util.BytesRef)>(r1, r2, r3, r4);

        return;
    }

    public java.lang.String name()
    {
        org.apache.lucene.queries.function.valuesource.TFValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.TFValueSource;

        return "tf";
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r13;
        org.apache.lucene.queries.function.valuesource.TFValueSource$1 $r12;
        org.apache.lucene.index.Terms $r5;
        org.apache.lucene.search.similarities.TFIDFSimilarity $r11;
        org.apache.lucene.index.Fields $r2;
        org.apache.lucene.queries.function.valuesource.TFValueSource r3;
        java.util.Map r6;
        org.apache.lucene.search.similarities.Similarity $r9;
        java.lang.Object $r7;
        java.lang.String $r4, $r10;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r1;
        org.apache.lucene.search.IndexSearcher r8;

        r3 := @this: org.apache.lucene.queries.function.valuesource.TFValueSource;

        r6 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        $r4 = r3.<org.apache.lucene.queries.function.valuesource.TFValueSource: java.lang.String indexedField>;

        $r5 = virtualinvoke $r2.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r4);

        $r7 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("searcher");

        r8 = (org.apache.lucene.search.IndexSearcher) $r7;

        $r9 = virtualinvoke r8.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        $r10 = r3.<org.apache.lucene.queries.function.valuesource.TFValueSource: java.lang.String indexedField>;

        $r11 = staticinvoke <org.apache.lucene.queries.function.valuesource.IDFValueSource: org.apache.lucene.search.similarities.TFIDFSimilarity asTFIDF(org.apache.lucene.search.similarities.Similarity,java.lang.String)>($r9, $r10);

        if $r11 != null goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("requires a TFIDFSimilarity (such as DefaultSimilarity)");

        throw $r13;

     label1:
        $r12 = new org.apache.lucene.queries.function.valuesource.TFValueSource$1;

        specialinvoke $r12.<org.apache.lucene.queries.function.valuesource.TFValueSource$1: void <init>(org.apache.lucene.queries.function.valuesource.TFValueSource,org.apache.lucene.queries.function.ValueSource,org.apache.lucene.index.Terms,org.apache.lucene.search.similarities.TFIDFSimilarity)>(r3, r3, $r5, $r11);

        return $r12;
    }
}
