public class org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl extends java.lang.Object implements org.aspectj.lang.reflect.DeclareErrorOrWarning
{
    private org.aspectj.lang.reflect.PointcutExpression pc;
    private java.lang.String msg;
    private boolean isError;
    private org.aspectj.lang.reflect.AjType declaringType;

    public void <init>(java.lang.String, java.lang.String, boolean, org.aspectj.lang.reflect.AjType)
    {
        org.aspectj.lang.reflect.AjType r4;
        org.aspectj.internal.lang.reflect.PointcutExpressionImpl $r1;
        java.lang.String r2, r3;
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r0;
        boolean z0;

        r0 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r4 := @parameter3: org.aspectj.lang.reflect.AjType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.aspectj.internal.lang.reflect.PointcutExpressionImpl;

        specialinvoke $r1.<org.aspectj.internal.lang.reflect.PointcutExpressionImpl: void <init>(java.lang.String)>(r2);

        r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.PointcutExpression pc> = $r1;

        r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String msg> = r3;

        r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: boolean isError> = z0;

        r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.AjType declaringType> = r4;

        return;
    }

    public org.aspectj.lang.reflect.AjType getDeclaringType()
    {
        org.aspectj.lang.reflect.AjType $r1;
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.AjType declaringType>;

        return $r1;
    }

    public org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
    {
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r0;
        org.aspectj.lang.reflect.PointcutExpression $r1;

        r0 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.PointcutExpression pc>;

        return $r1;
    }

    public java.lang.String getMessage()
    {
        java.lang.String $r1;
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String msg>;

        return $r1;
    }

    public boolean isError()
    {
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r0;
        boolean $z0;

        r0 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        $z0 = r0.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: boolean isError>;

        return $z0;
    }

    public java.lang.String toString()
    {
        org.aspectj.lang.reflect.PointcutExpression $r2;
        java.lang.StringBuffer $r0;
        java.lang.String $r3, $r4, $r5, $r6;
        org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl r1;
        boolean $z0;

        r1 := @this: org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("declare ");

        $z0 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: boolean isError()>();

        if $z0 == 0 goto label1;

        $r6 = "error : ";

        goto label2;

     label1:
        $r6 = "warning : ";

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r2 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()>();

        $r3 = interfaceinvoke $r2.<org.aspectj.lang.reflect.PointcutExpression: java.lang.String asString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r4 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String getMessage()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
