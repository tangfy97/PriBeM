public abstract class org.apache.xpath.axes.PredicatedNodeTest extends org.apache.xpath.patterns.NodeTest implements org.apache.xpath.axes.SubContextList
{
    protected int m_predCount;
    protected transient boolean m_foundLast;
    protected org.apache.xpath.axes.LocPathIterator m_lpi;
    transient int m_predicateIndex;
    private org.apache.xpath.Expression[] m_predicates;
    protected transient int[] m_proximityPositions;
    static final boolean DEBUG_PREDICATECOUNTING;

    void <init>(org.apache.xpath.axes.LocPathIterator)
    {
        int $i1, $i3;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.axes.LocPathIterator r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r1 := @parameter0: org.apache.xpath.axes.LocPathIterator;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predCount> = $i1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean m_foundLast> = 0;

        $i3 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i3;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi> = r1;

        return;
    }

    void <init>()
    {
        int $i1, $i3;
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predCount> = $i1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean m_foundLast> = 0;

        $i3 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i3;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r4;
        java.io.ObjectInputStream r0;
        int $i1;
        org.apache.xpath.axes.PredicatedNodeTest r1;
        java.lang.ClassNotFoundException $r2;

        r1 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r0 := @parameter0: java.io.ObjectInputStream;

     label1:
        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i1 = (int) -1;

        r1.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i1;

        virtualinvoke r1.<org.apache.xpath.axes.PredicatedNodeTest: void resetProximityPositions()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = new javax.xml.transform.TransformerException;

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r2);

        throw $r4;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.xpath.axes.LocPathIterator $r4, $r12;
        int[] $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1;
        org.apache.xpath.axes.PredicatedNodeTest r0, r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.xpath.axes.PredicatedNodeTest) $r1;

        $r3 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        if null == $r3 goto label1;

        $r6 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $r5 = r2.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        if $r6 != $r5 goto label1;

        $r7 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $i0 = lengthof $r7;

        $r8 = newarray (int)[$i0];

        r2.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions> = $r8;

        $r11 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $r10 = r2.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $r9 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $i1 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i1);

     label1:
        $r12 = r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi>;

        if $r12 != r0 goto label2;

        $r4 = (org.apache.xpath.axes.LocPathIterator) r2;

        r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi> = $r4;

     label2:
        return r2;
    }

    public int getPredicateCount()
    {
        int $i0, $i1, $i2, $i4;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.Expression[] $r1, $r2;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $i0 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predCount>;

        $i4 = (int) -1;

        if $i4 != $i0 goto label3;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null != $r1 goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $i2 = lengthof $r2;

     label2:
        return $i2;

     label3:
        $i1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predCount>;

        return $i1;
    }

    public void setPredicateCount(int)
    {
        org.apache.xpath.Expression $r3;
        int i0, i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.Expression[] r1, $r2;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        if i0 <= 0 goto label3;

        r1 = newarray (org.apache.xpath.Expression)[i0];

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r3 = $r2[i1];

        r1[i1] = $r3;

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates> = r1;

        goto label4;

     label3:
        r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates> = null;

     label4:
        return;
    }

    protected void initPredicateInfo(org.apache.xpath.compiler.Compiler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r6;
        org.apache.xpath.Expression[] $r2, $r3, $r4, $r5;
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, $i2, i3;
        org.apache.xpath.axes.PredicatedNodeTest r1;

        r1 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r0 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getFirstPredicateOpPos(int)>(i0);

        if $i1 <= 0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression[] getCompiledPredicates(int)>($i1);

        r1.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates> = $r2;

        $r3 = r1.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null == $r3 goto label3;

        i3 = 0;

        goto label2;

     label1:
        $r5 = r1.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r6 = $r5[i3];

        virtualinvoke $r6.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        i3 = i3 + 1;

     label2:
        $r4 = r1.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $i2 = lengthof $r4;

        if i3 < $i2 goto label1;

     label3:
        return;
    }

    public org.apache.xpath.Expression getPredicate(int)
    {
        org.apache.xpath.Expression $r2;
        int i0;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.Expression[] $r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getProximityPosition()
    {
        int $i0, $i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $i0 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex>;

        $i1 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(int)>($i0);

        return $i1;
    }

    public int getProximityPosition(org.apache.xpath.XPathContext)
    {
        int $i0;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition()>();

        return $i0;
    }

    public abstract int getLastPos(org.apache.xpath.XPathContext);

    protected int getProximityPosition(int)
    {
        int[] $r1;
        int i0, $i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $i1 = $r1[i0];

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public void resetProximityPositions()
    {
        org.apache.xml.utils.WrappedRuntimeException $r4;
        int[] $r1, $r2;
        int $i0, i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        java.lang.Exception $r3;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $i0 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        if $i0 <= 0 goto label7;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        if null != $r1 goto label1;

        $r2 = newarray (int)[$i0];

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions> = $r2;

     label1:
        i1 = 0;

        goto label6;

     label2:
        virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: void initProximityPosition(int)>(i1);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r4.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < $i0 goto label2;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void initProximityPosition(int) throws javax.xml.transform.TransformerException
    {
        int i0;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        int[] $r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        $r1[i0] = 0;

        return;
    }

    protected void countProximityPosition(int)
    {
        int[] r1;
        int i0, $i1, $i2, $i3;
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int[] m_proximityPositions>;

        if null == r1 goto label1;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label1;

        $i2 = r1[i0];

        $i3 = $i2 + 1;

        r1[i0] = $i3;

     label1:
        return;
    }

    public boolean isReverseAxes()
    {
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        return 0;
    }

    public int getPredicateIndex()
    {
        int $i0;
        org.apache.xpath.axes.PredicatedNodeTest r0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $i0 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex>;

        return $i0;
    }

    boolean executePredicates(int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r9;
        org.apache.xpath.Expression[] $r4, $r7;
        org.apache.xpath.XPathContext r1;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, $i11, $i13, $i15, $i17;
        boolean $z0, $z1;
        double $d0;
        org.apache.xpath.Expression $r5, $r8;
        org.apache.xpath.axes.LocPathIterator $r2;
        org.apache.xpath.objects.XObject $r6;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xml.utils.PrefixResolver $r3;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i1 := @parameter0: int;

        r1 := @parameter1: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        if $i0 != 0 goto label01;

        return 1;

     label01:
        virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

     label02:
        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = 0;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushSubContextList(org.apache.xpath.axes.SubContextList)>(r0);

        $r2 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushNamespaceContext(org.apache.xml.utils.PrefixResolver)>($r3);

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i1);

        i9 = 0;

        goto label10;

     label03:
        $r4 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r5 = $r4[i9];

        $r6 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $i2 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: int getType()>();

        if 2 != $i2 goto label07;

        $i5 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex>;

        $i6 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(int)>($i5);

        $d0 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: double num()>();

        i7 = (int) $d0;

        if $i6 == i7 goto label05;

        goto label15;

     label04:
        return 0;

     label05:
        $r7 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r8 = $r7[i9];

        $z1 = virtualinvoke $r8.<org.apache.xpath.Expression: boolean isStableNumber()>();

        if $z1 == 0 goto label06;

        $i8 = $i0 - 1;

        if i9 != $i8 goto label06;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean m_foundLast> = 1;

     label06:
        goto label09;

     label07:
        $z0 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: boolean bool()>();

        if $z0 != 0 goto label09;

        goto label16;

     label08:
        return 0;

     label09:
        $i3 = r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex>;

        $i4 = $i3 + 1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i4;

        virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: void countProximityPosition(int)>($i4);

        i9 = i9 + 1;

     label10:
        if i9 < $i0 goto label03;

        goto label17;

     label11:
        goto label14;

     label12:
        $r9 := @caughtexception;

        goto label18;

     label13:
        throw $r9;

     label14:
        return 1;

     label15:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        $i11 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i11;

        goto label04;

     label16:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        $i13 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i13;

        goto label08;

     label17:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        $i15 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i15;

        goto label11;

     label18:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        $i17 = (int) -1;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: int m_predicateIndex> = $i17;

        goto label13;

        catch java.lang.Throwable from label02 to label12 with label12;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.Expression $r3;
        java.util.Vector r1;
        int i0, $i1, i2;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.Expression[] $r2;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $i1 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i2 = i2 + 1;

     label2:
        if i2 < $i1 goto label1;

        return;
    }

    protected java.lang.String nodeToString(int)
    {
        org.apache.xpath.axes.LocPathIterator $r1;
        org.apache.xpath.XPathContext $r2;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r11;
        int i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        java.lang.String $r5, $r10;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        $i3 = (int) -1;

        if $i3 == i0 goto label1;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r5 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>(i0);

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $i1 = i0 + 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label1:
        return "null";
    }

    public short acceptNode(int)
    {
        java.lang.Throwable $r5;
        javax.xml.transform.TransformerException $r6;
        org.apache.xpath.objects.XNumber $r4;
        java.lang.RuntimeException $r7;
        org.apache.xpath.axes.LocPathIterator $r1;
        org.apache.xpath.XPathContext $r2;
        int i0, $i1;
        org.apache.xpath.objects.XObject $r3;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

     label01:
        virtualinvoke $r2.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        $r3 = virtualinvoke r0.<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>($r2, i0);

        $r4 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if $r3 == $r4 goto label05;

        $i1 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        if $i1 <= 0 goto label03;

        virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: void countProximityPosition(int)>(0);

        $z0 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean executePredicates(int,org.apache.xpath.XPathContext)>(i0, $r2);

        if $z0 != 0 goto label03;

        goto label11;

     label02:
        return 3;

     label03:
        goto label12;

     label04:
        return 1;

     label05:
        goto label13;

     label06:
        goto label10;

     label07:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label08:
        $r5 := @caughtexception;

        goto label14;

     label09:
        throw $r5;

     label10:
        return 3;

     label11:
        virtualinvoke $r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label02;

     label12:
        virtualinvoke $r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label04;

     label13:
        virtualinvoke $r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label06;

     label14:
        virtualinvoke $r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label09;

        catch javax.xml.transform.TransformerException from label01 to label05 with label07;
        catch java.lang.Throwable from label01 to label08 with label08;
    }

    public org.apache.xpath.axes.LocPathIterator getLocPathIterator()
    {
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.axes.LocPathIterator $r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi>;

        return $r1;
    }

    public void setLocPathIterator(org.apache.xpath.axes.LocPathIterator)
    {
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.axes.LocPathIterator r1;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r1 := @parameter0: org.apache.xpath.axes.LocPathIterator;

        r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator m_lpi> = r1;

        if r0 == r1 goto label1;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

     label1:
        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.Expression $r1;
        int $i0, i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        $i0 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        i1 = 0;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression getPredicate(int)>(i1);

        $z0 = virtualinvoke $r1.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

        return 0;
    }

    public void callPredicateVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.Expression $r6, $r8;
        org.apache.xpath.Expression[] $r1, $r2, $r5, $r7;
        org.apache.xpath.XPathVisitor r4;
        int i0, i1;
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.axes.PredicatedNodeTest$PredOwner $r3;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r4 := @parameter0: org.apache.xpath.XPathVisitor;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null == $r1 goto label4;

        $r2 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        i0 = lengthof $r2;

        i1 = 0;

        goto label3;

     label1:
        $r3 = new org.apache.xpath.axes.PredicatedNodeTest$PredOwner;

        specialinvoke $r3.<org.apache.xpath.axes.PredicatedNodeTest$PredOwner: void <init>(org.apache.xpath.axes.PredicatedNodeTest,int)>(r0, i1);

        $r5 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r6 = $r5[i1];

        $z0 = virtualinvoke r4.<org.apache.xpath.XPathVisitor: boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)>($r3, $r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r8 = $r7[i1];

        virtualinvoke $r8.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r3, r4);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression[] $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1, i2;
        boolean $z0, $z1;
        org.apache.xpath.Expression r1, $r10, $r11;
        org.apache.xpath.axes.PredicatedNodeTest r0, r2;

        r0 := @this: org.apache.xpath.axes.PredicatedNodeTest;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.patterns.NodeTest: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.xpath.axes.PredicatedNodeTest) r1;

        $r3 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null == $r3 goto label7;

        $r5 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        i0 = lengthof $r5;

        $r6 = r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null == $r6 goto label2;

        $r7 = r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $i1 = lengthof $r7;

        if $i1 == i0 goto label3;

     label2:
        return 0;

     label3:
        i2 = 0;

        goto label6;

     label4:
        $r8 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r11 = $r8[i2];

        $r9 = r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        $r10 = $r9[i2];

        $z1 = virtualinvoke $r11.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r10);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label4;

        goto label8;

     label7:
        $r4 = r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        if null == $r4 goto label8;

        return 0;

     label8:
        return 1;
    }

    static org.apache.xpath.Expression[] access$000(org.apache.xpath.axes.PredicatedNodeTest)
    {
        org.apache.xpath.axes.PredicatedNodeTest r0;
        org.apache.xpath.Expression[] $r1;

        r0 := @parameter0: org.apache.xpath.axes.PredicatedNodeTest;

        $r1 = r0.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression[] m_predicates>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.PredicatedNodeTest: boolean DEBUG_PREDICATECOUNTING> = 0;

        return;
    }
}
