public class org.apache.zookeeper.server.TraceFormatter extends java.lang.Object
{

    public void <init>()
    {
        org.apache.zookeeper.server.TraceFormatter r0;

        r0 := @this: org.apache.zookeeper.server.TraceFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String op2String(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -11: goto label14;
            case -10: goto label13;
            case -9: goto label16;
            case -8: goto label16;
            case -7: goto label16;
            case -6: goto label16;
            case -5: goto label16;
            case -4: goto label16;
            case -3: goto label16;
            case -2: goto label16;
            case -1: goto label15;
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label12;
            case 12: goto label11;
            case 13: goto label16;
            case 14: goto label07;
            default: goto label16;
        };

     label01:
        return "notification";

     label02:
        return "create";

     label03:
        return "delete";

     label04:
        return "exists";

     label05:
        return "getDate";

     label06:
        return "setData";

     label07:
        return "multi";

     label08:
        return "getACL";

     label09:
        return "setACL";

     label10:
        return "getChildren";

     label11:
        return "getChildren2";

     label12:
        return "ping";

     label13:
        return "createSession";

     label14:
        return "closeSession";

     label15:
        return "error";

     label16:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        byte[] r4;
        java.util.Date $r39;
        java.nio.ByteBuffer $r7, $r8;
        byte $b2;
        java.text.DateFormat $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r38;
        java.lang.String[] r0;
        long $l3, $l4, $l6;
        int $i0, $i1, $i5, $i7, $i8, $i9, $i10, $i13;
        java.lang.String $r2, r9, $r14, $r19, $r24, $r27, $r35, $r37;
        java.io.PrintStream $r6, $r10;
        char $c11;
        java.io.FileInputStream $r36;
        java.nio.channels.FileChannel $r3;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("USAGE: TraceFormatter trace_file");

        staticinvoke <java.lang.System: void exit(int)>(2);

     label1:
        $r36 = new java.io.FileInputStream;

        $r2 = r0[0];

        specialinvoke $r36.<java.io.FileInputStream: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r36.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

     label2:
        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(41);

        virtualinvoke $r3.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>($r7);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $b2 = virtualinvoke $r7.<java.nio.ByteBuffer: byte get()>();

        $l3 = virtualinvoke $r7.<java.nio.ByteBuffer: long getLong()>();

        $l4 = virtualinvoke $r7.<java.nio.ByteBuffer: long getLong()>();

        $i5 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        $l6 = virtualinvoke $r7.<java.nio.ByteBuffer: long getLong()>();

        $i7 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        $i8 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        $i9 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i9);

        virtualinvoke $r3.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>($r8);

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        r9 = "n/a";

        $i10 = virtualinvoke $r8.<java.nio.ByteBuffer: int remaining()>();

        if $i10 <= 0 goto label3;

        $i13 = (int) -10;

        if $i8 == $i13 goto label3;

        $i1 = virtualinvoke $r8.<java.nio.ByteBuffer: int getInt()>();

        r4 = newarray (byte)[$i1];

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r4);

        $r37 = new java.lang.String;

        specialinvoke $r37.<java.lang.String: void <init>(byte[])>(r4);

        r9 = $r37;

     label3:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r12 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 1);

        $r39 = new java.util.Date;

        specialinvoke $r39.<java.util.Date: void <init>(long)>($l3);

        $r14 = virtualinvoke $r12.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r39);

        $r15 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $c11 = (char) $b2;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=0x");

        $r19 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cxid=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op=");

        $r24 = staticinvoke <org.apache.zookeeper.server.TraceFormatter: java.lang.String op2String(int)>($i8);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" zxid=0x");

        $r27 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l6);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txnType=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r35);

        goto label2;
    }
}
