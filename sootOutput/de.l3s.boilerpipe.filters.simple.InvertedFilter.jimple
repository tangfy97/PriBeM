public final class de.l3s.boilerpipe.filters.simple.InvertedFilter extends java.lang.Object implements de.l3s.boilerpipe.BoilerpipeFilter
{
    public static final de.l3s.boilerpipe.filters.simple.InvertedFilter INSTANCE;

    private void <init>()
    {
        de.l3s.boilerpipe.filters.simple.InvertedFilter r0;

        r0 := @this: de.l3s.boilerpipe.filters.simple.InvertedFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        java.util.Iterator $r2;
        de.l3s.boilerpipe.filters.simple.InvertedFilter r5;
        java.util.List $r1;
        de.l3s.boilerpipe.document.TextBlock r4;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: de.l3s.boilerpipe.filters.simple.InvertedFilter;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        $r1 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.util.List getTextBlocks()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (de.l3s.boilerpipe.document.TextBlock) $r3;

        $z2 = virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: boolean setIsContent(boolean)>($z3);

        goto label2;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.filters.simple.InvertedFilter $r0;

        $r0 = new de.l3s.boilerpipe.filters.simple.InvertedFilter;

        specialinvoke $r0.<de.l3s.boilerpipe.filters.simple.InvertedFilter: void <init>()>();

        <de.l3s.boilerpipe.filters.simple.InvertedFilter: de.l3s.boilerpipe.filters.simple.InvertedFilter INSTANCE> = $r0;

        return;
    }
}
