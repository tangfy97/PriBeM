public class org.apache.cxf.interceptor.FaultOutInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.interceptor.FaultOutInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.FaultOutInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("pre-protocol");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.service.Service r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.databinding.DataBinding $r19;
        java.util.logging.Logger $r33;
        java.lang.Exception r10, $r31;
        java.util.List $r15;
        java.lang.Throwable $r3;
        org.apache.cxf.service.model.BindingOperationInfo r6;
        java.util.logging.Level $r32;
        org.apache.cxf.interceptor.Fault r2;
        org.apache.cxf.service.model.FaultInfo $r9;
        java.lang.String $r34;
        org.apache.cxf.service.model.MessagePartInfo r18;
        java.util.Iterator $r16;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r4, $r12;
        org.apache.cxf.staxutils.W3CDOMStreamWriter $r20, $r24;
        org.w3c.dom.Element $r21, $r23, $r25, $r28, $r29, $r30;
        org.apache.cxf.databinding.DataWriter $r22, $r26, $r27;
        org.apache.cxf.interceptor.FaultOutInterceptor r7;
        java.lang.Object $r1, $r5, $r11, $r13, $r17;
        java.lang.Class $r8;

        r7 := @this: org.apache.cxf.interceptor.FaultOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r2 = (org.apache.cxf.interceptor.Fault) $r1;

        if r2 != null goto label01;

        return;

     label01:
        $r3 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

        if $r3 != null goto label02;

        return;

     label02:
        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;");

        r6 = (org.apache.cxf.service.model.BindingOperationInfo) $r5;

        if r6 != null goto label03;

        return;

     label03:
        $r8 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke r7.<org.apache.cxf.interceptor.FaultOutInterceptor: org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)>(r6, $r8);

        $z0 = $r3 instanceof java.lang.Exception;

        if $z0 == 0 goto label12;

        if $r9 == null goto label12;

        r10 = (java.lang.Exception) $r3;

        $r11 = virtualinvoke r7.<org.apache.cxf.interceptor.FaultOutInterceptor: java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)>($r3, $r9, r0);

        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r13 = interfaceinvoke $r12.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/Service;");

        r14 = (org.apache.cxf.service.Service) $r13;

        $r15 = virtualinvoke $r9.<org.apache.cxf.service.model.FaultInfo: java.util.List getMessageParts()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.cxf.service.model.MessagePartInfo) $r17;

        $r19 = interfaceinvoke r14.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

     label04:
        $z1 = specialinvoke r7.<org.apache.cxf.interceptor.FaultOutInterceptor: boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)>($r19);

        if $z1 == 0 goto label07;

        $r27 = interfaceinvoke $r19.<org.apache.cxf.databinding.DataBinding: org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)>(class "Lorg/w3c/dom/Node;");

        $z4 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: boolean hasDetails()>();

        if $z4 == 0 goto label05;

        $r30 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getDetail()>();

        interfaceinvoke $r27.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r11, r18, $r30);

        goto label06;

     label05:
        $r28 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getOrCreateDetail()>();

        interfaceinvoke $r27.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r11, r18, $r28);

        $r29 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getDetail()>();

        $z5 = interfaceinvoke $r29.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z5 != 0 goto label06;

        virtualinvoke r2.<org.apache.cxf.interceptor.Fault: void setDetail(org.w3c.dom.Element)>(null);

     label06:
        goto label09;

     label07:
        $z2 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: boolean hasDetails()>();

        if $z2 == 0 goto label08;

        $r24 = new org.apache.cxf.staxutils.W3CDOMStreamWriter;

        $r25 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getDetail()>();

        specialinvoke $r24.<org.apache.cxf.staxutils.W3CDOMStreamWriter: void <init>(org.w3c.dom.Element)>($r25);

        $r26 = interfaceinvoke $r19.<org.apache.cxf.databinding.DataBinding: org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        interfaceinvoke $r26.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r11, r18, $r24);

        goto label09;

     label08:
        $r20 = new org.apache.cxf.staxutils.W3CDOMStreamWriter;

        $r21 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getOrCreateDetail()>();

        specialinvoke $r20.<org.apache.cxf.staxutils.W3CDOMStreamWriter: void <init>(org.w3c.dom.Element)>($r21);

        $r22 = interfaceinvoke $r19.<org.apache.cxf.databinding.DataBinding: org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        interfaceinvoke $r22.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r11, r18, $r20);

        $r23 = virtualinvoke r2.<org.apache.cxf.interceptor.Fault: org.w3c.dom.Element getDetail()>();

        $z3 = interfaceinvoke $r23.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z3 != 0 goto label09;

        virtualinvoke r2.<org.apache.cxf.interceptor.Fault: void setDetail(org.w3c.dom.Element)>(null);

     label09:
        $r34 = virtualinvoke r10.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r2.<org.apache.cxf.interceptor.Fault: void setMessage(java.lang.String)>($r34);

     label10:
        goto label12;

     label11:
        $r31 := @caughtexception;

        $r33 = <org.apache.cxf.interceptor.FaultOutInterceptor: java.util.logging.Logger LOG>;

        $r32 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r33.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r32, "EXCEPTION_WHILE_WRITING_FAULT", $r31);

     label12:
        return;

        catch java.lang.Exception from label04 to label10 with label11;
    }

    private boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)
    {
        org.apache.cxf.databinding.DataBinding r0;
        java.lang.Class[] $r1;
        org.apache.cxf.interceptor.FaultOutInterceptor r3;
        int i0, i1;
        java.lang.Class r2;
        boolean $z0, z1;

        r3 := @this: org.apache.cxf.interceptor.FaultOutInterceptor;

        r0 := @parameter0: org.apache.cxf.databinding.DataBinding;

        z1 = 0;

        $r1 = interfaceinvoke r0.<org.apache.cxf.databinding.DataBinding: java.lang.Class[] getSupportedWriterFormats()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/w3c/dom/Node;");

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z1;
    }

    protected java.lang.Object getFaultBean(java.lang.Throwable, org.apache.cxf.service.model.FaultInfo, org.apache.cxf.message.Message)
    {
        java.lang.Throwable r0;
        java.lang.Object[] $r4, $r9, $r14, $r19;
        java.lang.NoSuchMethodException $r11;
        org.apache.cxf.common.i18n.Message $r8, $r13, $r18;
        org.apache.cxf.interceptor.Fault $r7, $r12, $r17;
        org.apache.cxf.service.model.FaultInfo r22;
        java.lang.reflect.Method $r3;
        boolean $z0;
        org.apache.cxf.message.Message r23;
        java.lang.Class[] $r2;
        java.util.logging.Logger $r10, $r15, $r20;
        java.lang.Exception $r6;
        java.lang.reflect.InvocationTargetException $r16;
        org.apache.cxf.interceptor.FaultOutInterceptor r21;
        java.lang.Class $r1;
        java.lang.Object $r5;

        r21 := @this: org.apache.cxf.interceptor.FaultOutInterceptor;

        r0 := @parameter0: java.lang.Throwable;

        r22 := @parameter1: org.apache.cxf.service.model.FaultInfo;

        r23 := @parameter2: org.apache.cxf.message.Message;

        $z0 = r0 instanceof org.apache.cxf.interceptor.FaultOutInterceptor$FaultInfoException;

        if $z0 == 0 goto label6;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getFaultInfo", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

     label2:
        return $r5;

     label3:
        $r16 := @caughtexception;

        $r17 = new org.apache.cxf.interceptor.Fault;

        $r18 = new org.apache.cxf.common.i18n.Message;

        $r20 = <org.apache.cxf.interceptor.FaultOutInterceptor: java.util.logging.Logger LOG>;

        $r19 = newarray (java.lang.Object)[0];

        specialinvoke $r18.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVOKE_FAULT_INFO", $r20, $r19);

        specialinvoke $r17.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r18, $r16);

        throw $r17;

     label4:
        $r11 := @caughtexception;

        $r12 = new org.apache.cxf.interceptor.Fault;

        $r13 = new org.apache.cxf.common.i18n.Message;

        $r15 = <org.apache.cxf.interceptor.FaultOutInterceptor: java.util.logging.Logger LOG>;

        $r14 = newarray (java.lang.Object)[0];

        specialinvoke $r13.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_FAULT_INFO_METHOD", $r15, $r14);

        specialinvoke $r12.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r13, $r11);

        throw $r12;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.cxf.interceptor.Fault;

        $r8 = new org.apache.cxf.common.i18n.Message;

        $r10 = <org.apache.cxf.interceptor.FaultOutInterceptor: java.util.logging.Logger LOG>;

        $r9 = newarray (java.lang.Object)[0];

        specialinvoke $r8.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_ACCCESS_FAULT_INFO", $r10, $r9);

        specialinvoke $r7.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r8, $r6);

        throw $r7;

     label6:
        return r0;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo, java.lang.Class)
    {
        org.apache.cxf.service.model.BindingFaultInfo r4;
        org.apache.cxf.service.model.BindingOperationInfo r0;
        org.apache.cxf.service.model.FaultInfo $r5, r12;
        java.lang.String $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        org.apache.cxf.interceptor.FaultOutInterceptor r11;
        java.lang.Object $r3, $r8;
        java.lang.Class $r6, r9, r10, r13;

        r11 := @this: org.apache.cxf.interceptor.FaultOutInterceptor;

        r0 := @parameter0: org.apache.cxf.service.model.BindingOperationInfo;

        r10 := @parameter1: java.lang.Class;

        r12 = null;

        r13 = null;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.BindingOperationInfo: java.util.Collection getFaults()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.model.BindingFaultInfo) $r3;

        $r5 = virtualinvoke r4.<org.apache.cxf.service.model.BindingFaultInfo: org.apache.cxf.service.model.FaultInfo getFaultInfo()>();

        $r6 = class "Ljava/lang/Class;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<org.apache.cxf.service.model.FaultInfo: java.lang.Object getProperty(java.lang.String)>($r7);

        r9 = (java.lang.Class) $r8;

        if r9 == null goto label3;

        $z1 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r10);

        if $z1 == 0 goto label3;

        if r12 == null goto label2;

        $z2 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r9);

        if $z2 == 0 goto label3;

     label2:
        r12 = $r5;

        r13 = r9;

     label3:
        goto label1;

     label4:
        return r12;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/FaultOutInterceptor;");

        <org.apache.cxf.interceptor.FaultOutInterceptor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
