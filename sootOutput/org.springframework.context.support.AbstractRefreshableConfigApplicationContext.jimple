public abstract class org.springframework.context.support.AbstractRefreshableConfigApplicationContext extends org.springframework.context.support.AbstractRefreshableApplicationContext implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean
{
    private java.lang.String[] configLocations;
    private boolean setIdCalled;

    public void <init>()
    {
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        specialinvoke r0.<org.springframework.context.support.AbstractRefreshableApplicationContext: void <init>()>();

        r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: boolean setIdCalled> = 0;

        return;
    }

    public void <init>(org.springframework.context.ApplicationContext)
    {
        org.springframework.context.ApplicationContext r1;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.context.support.AbstractRefreshableApplicationContext: void <init>(org.springframework.context.ApplicationContext)>(r1);

        r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: boolean setIdCalled> = 0;

        return;
    }

    public void setConfigLocation(java.lang.String)
    {
        java.lang.String[] $r2;
        java.lang.String r1;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r1, ",; \t\n");

        virtualinvoke r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setConfigLocations(java.lang.String[])>($r2);

        return;
    }

    public void setConfigLocations(java.lang.String[])
    {
        java.lang.String[] r0, $r2, $r4;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r1;
        int $i0, $i1, i2;
        java.lang.String $r3, $r5, $r6;

        r1 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label3;

        staticinvoke <org.springframework.util.Assert: void noNullElements(java.lang.Object[],java.lang.String)>(r0, "Config locations must not be null");

        $i0 = lengthof r0;

        $r2 = newarray (java.lang.String)[$i0];

        r1.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] configLocations> = $r2;

        i2 = 0;

        goto label2;

     label1:
        $r4 = r1.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] configLocations>;

        $r3 = r0[i2];

        $r5 = virtualinvoke r1.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String resolvePath(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $r4[i2] = $r6;

        i2 = i2 + 1;

     label2:
        $i1 = lengthof r0;

        if i2 < $i1 goto label1;

        goto label4;

     label3:
        r1.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] configLocations> = null;

     label4:
        return;
    }

    protected java.lang.String[] getConfigLocations()
    {
        java.lang.String[] $r1, $r2;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        $r1 = r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] configLocations>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] configLocations>;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] getDefaultConfigLocations()>();

     label2:
        return $r2;
    }

    protected java.lang.String[] getDefaultConfigLocations()
    {
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        return null;
    }

    protected java.lang.String resolvePath(java.lang.String)
    {
        java.lang.String r0, $r1;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r2;

        r2 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)>(r0);

        return $r1;
    }

    public void setId(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.context.support.AbstractRefreshableApplicationContext: void setId(java.lang.String)>(r1);

        r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: boolean setIdCalled> = 1;

        return;
    }

    public void setBeanName(java.lang.String)
    {
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r1, $r5;
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: boolean setIdCalled>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.springframework.context.support.AbstractRefreshableApplicationContext: void setId(java.lang.String)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ApplicationContext \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setDisplayName(java.lang.String)>($r5);

     label1:
        return;
    }

    public void afterPropertiesSet()
    {
        org.springframework.context.support.AbstractRefreshableConfigApplicationContext r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.AbstractRefreshableConfigApplicationContext;

        $z0 = virtualinvoke r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: boolean isActive()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void refresh()>();

     label1:
        return;
    }
}
