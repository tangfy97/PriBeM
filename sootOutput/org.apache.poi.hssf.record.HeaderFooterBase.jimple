public abstract class org.apache.poi.hssf.record.HeaderFooterBase extends org.apache.poi.hssf.record.StandardRecord
{
    private boolean field_2_hasMultibyte;
    private java.lang.String field_3_text;

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.hssf.record.HeaderFooterBase r0;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        virtualinvoke r0.<org.apache.poi.hssf.record.HeaderFooterBase: void setText(java.lang.String)>(r1);

        return;
    }

    protected void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        short $s1;
        org.apache.poi.hssf.record.RecordInputStream r1;
        byte $b2;
        int $i0, $i3, $i4;
        java.lang.String $r2, $r3;
        org.apache.poi.hssf.record.HeaderFooterBase r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int remaining()>();

        if $i0 <= 0 goto label5;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $b2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte> = $z1;

        $z0 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte>;

        if $z0 == 0 goto label3;

        $i3 = (int) $s1;

        $r3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: java.lang.String readUnicodeLEString(int)>($i3);

        r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text> = $r3;

        goto label4;

     label3:
        $i4 = (int) $s1;

        $r2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: java.lang.String readCompressedUnicode(int)>($i4);

        r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text> = $r2;

     label4:
        goto label6;

     label5:
        r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text> = "";

     label6:
        return;
    }

    public final void setText(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2, $r3;
        org.apache.poi.hssf.record.HeaderFooterBase r1;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text must not be null");

        throw $r3;

     label1:
        $z0 = staticinvoke <org.apache.poi.util.StringUtil: boolean hasMultibyte(java.lang.String)>(r0);

        r1.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte> = $z0;

        r1.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text> = r0;

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.HeaderFooterBase: int getDataSize()>();

        if $i0 <= 8224 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header/Footer string too long (limit is 8224 bytes)");

        throw $r2;

     label2:
        return;
    }

    private int getTextLength()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.poi.hssf.record.HeaderFooterBase r0;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        $r1 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public final java.lang.String getText()
    {
        java.lang.String $r1;
        org.apache.poi.hssf.record.HeaderFooterBase r0;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        $r1 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text>;

        return $r1;
    }

    public final void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        byte $b2;
        org.apache.poi.util.LittleEndianOutput r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        org.apache.poi.hssf.record.HeaderFooterBase r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.HeaderFooterBase: int getTextLength()>();

        if $i0 <= 0 goto label4;

        $i1 = specialinvoke r0.<org.apache.poi.hssf.record.HeaderFooterBase: int getTextLength()>();

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        $z0 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($b2);

        $z1 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte>;

        if $z1 == 0 goto label3;

        $r3 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text>;

        staticinvoke <org.apache.poi.util.StringUtil: void putUnicodeLE(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r3, r1);

        goto label4;

     label3:
        $r2 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: java.lang.String field_3_text>;

        staticinvoke <org.apache.poi.util.StringUtil: void putCompressedUnicode(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r2, r1);

     label4:
        return;
    }

    protected final int getDataSize()
    {
        byte $b4;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.hssf.record.HeaderFooterBase r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.HeaderFooterBase;

        $i0 = specialinvoke r0.<org.apache.poi.hssf.record.HeaderFooterBase: int getTextLength()>();

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i1 = specialinvoke r0.<org.apache.poi.hssf.record.HeaderFooterBase: int getTextLength()>();

        $z0 = r0.<org.apache.poi.hssf.record.HeaderFooterBase: boolean field_2_hasMultibyte>;

        if $z0 == 0 goto label2;

        $b4 = 2;

        goto label3;

     label2:
        $b4 = 1;

     label3:
        $i2 = $i1 * $b4;

        $i3 = 3 + $i2;

        return $i3;
    }
}
