class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser extends org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers,org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)>(r1, null);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    public int first(int)
    {
        short $s1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i12, $i14, $i16, $i18;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i6 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i6);

        i7 = $i0;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $s1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>($i0);

        $i9 = (int) $s1;

        if 2 == $i9 goto label1;

        $i10 = (int) $s1;

        if 13 != $i10 goto label2;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: int _parent(int)>($i0);

        i7 = $i2;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int _firstch(int)>($i2);

        $i12 = (int) -1;

        if $i12 == $i3 goto label2;

        $r7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r7.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i3);

        return $i5;

     label2:
        $r8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i8 = virtualinvoke $r8.<org.apache.xml.dtm.ref.DTMDefaultBase: int _nextsib(int)>(i7);

        $i14 = (int) -1;

        if $i14 != $i8 goto label3;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i7 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: int _parent(int)>(i7);

     label3:
        $i16 = (int) -1;

        if $i16 != $i8 goto label4;

        $i18 = (int) -1;

        if $i18 != i7 goto label2;

     label4:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i8);

        return $i4;
    }

    public int first(int, int)
    {
        short $s0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i14, $i16, $i18, $i20;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i9 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $s0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: short getNodeType(int)>(i9);

        $i11 = (int) $s0;

        if 2 == $i11 goto label1;

        $i12 = (int) $s0;

        if 13 != $i12 goto label3;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int getParent(int)>(i9);

        i9 = $i1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstChild(int)>($i1);

        $i14 = (int) -1;

        if $i14 == $i2 goto label3;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i7 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)>($i2);

        if $i7 != i4 goto label2;

        return $i2;

     label2:
        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: int next(int,int,int)>($i1, $i2, i4);

        return $i8;

     label3:
        $r7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i10 = virtualinvoke $r7.<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextSibling(int)>(i9);

        $i16 = (int) -1;

        if $i16 != $i10 goto label4;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i6 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int getParent(int)>(i9);

        i9 = $i6;

        goto label6;

     label4:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)>($i10);

        if $i3 != i4 goto label5;

        return $i10;

     label5:
        $i5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: int next(int,int,int)>(i9, $i10, i4);

        return $i5;

     label6:
        $i18 = (int) -1;

        if $i18 != $i10 goto label7;

        $i20 = (int) -1;

        if $i20 != $i6 goto label3;

     label7:
        return $i10;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        short $s4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;
        int $i0, i1, i2, i3, $i6, $i7, $i9, $i10, $i11;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i2);

        goto label1;

     label1:
        i3 = i3 + 1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $s4 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>(i3);

        $i6 = (int) -1;

        $i7 = (int) $s4;

        if $i6 != $i7 goto label2;

        $i9 = (int) -1;

        return $i9;

     label2:
        $i10 = (int) $s4;

        if 2 == $i10 goto label1;

        $i11 = (int) $s4;

        if 13 != $i11 goto label3;

        goto label1;

     label3:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i3);

        return $i0;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;
        int $i0, i1, $i2, i3, i4, i5, $i7, $i9;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i5 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i4);

        goto label1;

     label1:
        i5 = i5 + 1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int _exptype(int)>(i5);

        $i7 = (int) -1;

        if $i7 != $i0 goto label2;

        $i9 = (int) -1;

        return $i9;

     label2:
        if $i0 == i1 goto label3;

        goto label1;

     label3:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i5);

        return $i2;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
