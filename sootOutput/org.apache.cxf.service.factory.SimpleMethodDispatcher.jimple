public class org.apache.cxf.service.factory.SimpleMethodDispatcher extends java.lang.Object implements org.apache.cxf.service.invoker.MethodDispatcher
{
    private java.util.Map infoMap;
    private java.util.Map opToMethod;
    private java.util.Map methodToOp;

    public void <init>()
    {
        org.apache.cxf.service.factory.SimpleMethodDispatcher r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r2, $r3;

        r0 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 2);

        r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map infoMap> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 2);

        r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map opToMethod> = $r2;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 2);

        r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map methodToOp> = $r3;

        return;
    }

    public transient void bind(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method[])
    {
        org.apache.cxf.service.model.OperationInfo r3, $r6;
        java.util.concurrent.ConcurrentHashMap $r9;
        java.lang.reflect.Method[] r0;
        org.apache.cxf.service.factory.SimpleMethodDispatcher r2;
        java.util.Map $r4, $r5, $r8, $r10;
        int i0, i1;
        java.lang.reflect.Method r1, r7;
        boolean $z0;

        r2 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        r3 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter1: java.lang.reflect.Method[];

        r1 = r0[0];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r0[i1];

        $r8 = r2.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map methodToOp>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r3);

        $r9 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(4, 0.75F, 2);

        $r10 = r2.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map infoMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r2.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map opToMethod>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

        $z0 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z0 == 0 goto label3;

        $r5 = r2.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map opToMethod>;

        $r6 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

     label3:
        return;
    }

    public org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method, org.apache.cxf.endpoint.Endpoint)
    {
        org.apache.cxf.service.model.BindingOperationInfo r9, $r19, r20;
        org.apache.cxf.service.factory.SimpleMethodDispatcher r0;
        java.util.Map $r2, r4, $r10;
        java.lang.reflect.Method r1;
        boolean $z0, $z1;
        org.apache.cxf.service.model.EndpointInfo $r6, $r13;
        java.util.Iterator $r16;
        java.util.Collection $r15;
        org.apache.cxf.service.model.OperationInfo r12, $r18;
        org.apache.cxf.service.model.BindingInfo $r7, $r14;
        org.apache.cxf.endpoint.Endpoint r5;
        java.lang.Object $r3, $r8, $r11, $r17;

        r0 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r5 := @parameter1: org.apache.cxf.endpoint.Endpoint;

        $r2 = r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map infoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke r5.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r8 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (org.apache.cxf.service.model.BindingOperationInfo) $r8;

        if r9 != null goto label5;

        $r10 = r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map methodToOp>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (org.apache.cxf.service.model.OperationInfo) $r11;

        if r12 != null goto label2;

        return null;

     label2:
        $r13 = interfaceinvoke r5.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r15 = virtualinvoke $r14.<org.apache.cxf.service.model.BindingInfo: java.util.Collection getOperations()>();

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.cxf.service.model.BindingOperationInfo) $r17;

        $r18 = virtualinvoke r20.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $z1 = virtualinvoke $r18.<org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object)>(r12);

        if $z1 == 0 goto label4;

        $r19 = specialinvoke r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)>(r12, r20);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r19);

        return $r19;

     label4:
        goto label3;

     label5:
        return r9;
    }

    private org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo, org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.factory.SimpleMethodDispatcher r4;
        org.apache.cxf.service.model.OperationInfo $r1, r2, $r3;
        org.apache.cxf.service.model.BindingOperationInfo $r0, r5;
        boolean $z0;

        r4 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        r2 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r5 := @parameter1: org.apache.cxf.service.model.BindingOperationInfo;

        $r0 = virtualinvoke r5.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo getUnwrappedOperation()>();

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $r3 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        r5 = $r0;

     label1:
        return r5;
    }

    public java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.factory.SimpleMethodDispatcher r0;
        java.util.Map $r2;
        org.apache.cxf.service.model.OperationInfo $r3;
        org.apache.cxf.service.model.BindingOperationInfo r1;
        java.lang.Object $r4;
        java.lang.reflect.Method $r5;

        r0 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        r1 := @parameter0: org.apache.cxf.service.model.BindingOperationInfo;

        $r2 = r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map opToMethod>;

        $r3 = virtualinvoke r1.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.reflect.Method) $r4;

        return $r5;
    }

    public java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.factory.SimpleMethodDispatcher r0;
        java.util.Map $r2;
        org.apache.cxf.service.model.OperationInfo r1;
        java.lang.Object $r3;
        java.lang.reflect.Method $r4;

        r0 := @this: org.apache.cxf.service.factory.SimpleMethodDispatcher;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        $r2 = r0.<org.apache.cxf.service.factory.SimpleMethodDispatcher: java.util.Map opToMethod>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.reflect.Method) $r3;

        return $r4;
    }
}
