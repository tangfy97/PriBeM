public final class org.apache.cxf.common.util.UrlUtils extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String[] RESERVED_CHARS;
    private static final java.lang.String[] ENCODED_CHARS;

    private void <init>()
    {
        org.apache.cxf.common.util.UrlUtils r0;

        r0 := @this: org.apache.cxf.common.util.UrlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String urlDecode(java.lang.String, java.lang.String)
    {
        java.util.logging.Logger $r3;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String r0, $r6, r7;
        java.io.UnsupportedEncodingException $r1;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

     label1:
        r7 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r3 = <org.apache.cxf.common.util.UrlUtils: java.util.logging.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 encoding can not be used to decode ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void warning(java.lang.String)>($r6);

     label4:
        return r7;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String urlDecode(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.common.util.UrlUtils: java.lang.String urlDecode(java.lang.String,java.lang.String)>(r0, "UTF-8");

        return $r1;
    }

    public static java.lang.String pathDecode(java.lang.String)
    {
        java.lang.String[] $r0, $r2, $r4, $r5;
        int $i0, $i1, i2, $i4;
        java.lang.String $r1, $r3, $r6, $r7, r8;

        r8 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $r0 = <org.apache.cxf.common.util.UrlUtils: java.lang.String[] RESERVED_CHARS>;

        $i0 = lengthof $r0;

        if i2 >= $i0 goto label3;

        $r2 = <org.apache.cxf.common.util.UrlUtils: java.lang.String[] RESERVED_CHARS>;

        $r3 = $r2[i2];

        $i1 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>($r3);

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

        $r4 = <org.apache.cxf.common.util.UrlUtils: java.lang.String[] RESERVED_CHARS>;

        $r7 = $r4[i2];

        $r5 = <org.apache.cxf.common.util.UrlUtils: java.lang.String[] ENCODED_CHARS>;

        $r6 = $r5[i2];

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = staticinvoke <org.apache.cxf.common.util.UrlUtils: java.lang.String urlDecode(java.lang.String)>(r8);

        return $r1;
    }

    public static java.util.Map parseQueryString(java.lang.String)
    {
        java.util.HashMap $r8;
        java.util.StringTokenizer $r9;
        int $i0, $i1, $i3;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = new java.util.StringTokenizer;

        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, "&");

     label1:
        $z0 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(61);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r7 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "");

        goto label3;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = $i0 + 1;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label3:
        goto label1;

     label4:
        return $r8;
    }

    public static java.lang.String getStem(java.lang.String)
    {
        int $i0, $i2;
        java.net.URI $r0, $r2;
        java.lang.String $r1, $r3, r4, r5;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r4);

        $r1 = virtualinvoke $r0.<java.net.URI: java.lang.String getRawPath()>();

        r5 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r5);

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1, $r2;
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/common/util/UrlUtils;");

        <org.apache.cxf.common.util.UrlUtils: java.util.logging.Logger LOG> = $r0;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "+";

        <org.apache.cxf.common.util.UrlUtils: java.lang.String[] RESERVED_CHARS> = $r1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "%2b";

        <org.apache.cxf.common.util.UrlUtils: java.lang.String[] ENCODED_CHARS> = $r2;

        return;
    }
}
