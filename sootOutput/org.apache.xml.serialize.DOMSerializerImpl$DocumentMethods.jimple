class org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods extends java.lang.Object
{
    private static java.lang.reflect.Method fgDocumentGetXmlVersionMethod;
    private static java.lang.reflect.Method fgDocumentGetInputEncodingMethod;
    private static java.lang.reflect.Method fgDocumentGetXmlEncodingMethod;
    private static boolean fgDocumentMethodsAvailable;
    static java.lang.Class class$org$w3c$dom$Document;

    private void <init>()
    {
        org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods r0;

        r0 := @this: org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: boolean fgDocumentMethodsAvailable>;

        return $z0;
    }

    static java.lang.reflect.Method access$100()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlVersionMethod>;

        return $r0;
    }

    static java.lang.reflect.Method access$200()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetInputEncodingMethod>;

        return $r0;
    }

    static java.lang.reflect.Method access$300()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlEncodingMethod>;

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1, $r4, $r7;
        java.lang.Exception $r9;
        java.lang.Class $r0, $r3, $r6, $r10, $r11, $r12;
        java.lang.reflect.Method $r2, $r5, $r8;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlVersionMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetInputEncodingMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlEncodingMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: boolean fgDocumentMethodsAvailable> = 0;

     label01:
        $r0 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

        if $r0 != null goto label02;

        $r10 = staticinvoke <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Document");

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document> = $r10;

        goto label03;

     label02:
        $r10 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

     label03:
        $r1 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getXmlVersion", $r1);

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlVersionMethod> = $r2;

        $r3 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

        if $r3 != null goto label04;

        $r11 = staticinvoke <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Document");

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document> = $r11;

        goto label05;

     label04:
        $r11 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

     label05:
        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInputEncoding", $r4);

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetInputEncodingMethod> = $r5;

        $r6 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

        if $r6 != null goto label06;

        $r12 = staticinvoke <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Document");

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document> = $r12;

        goto label07;

     label06:
        $r12 = <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.Class class$org$w3c$dom$Document>;

     label07:
        $r7 = newarray (java.lang.Class)[0];

        $r8 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getXmlEncoding", $r7);

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlEncodingMethod> = $r8;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: boolean fgDocumentMethodsAvailable> = 1;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlVersionMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetInputEncodingMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: java.lang.reflect.Method fgDocumentGetXmlEncodingMethod> = null;

        <org.apache.xml.serialize.DOMSerializerImpl$DocumentMethods: boolean fgDocumentMethodsAvailable> = 0;

     label10:
        return;

        catch java.lang.Exception from label01 to label08 with label09;
    }
}
