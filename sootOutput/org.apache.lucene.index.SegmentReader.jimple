public final class org.apache.lucene.index.SegmentReader extends org.apache.lucene.index.AtomicReader
{
    private final org.apache.lucene.index.SegmentInfoPerCommit si;
    private final org.apache.lucene.util.Bits liveDocs;
    private final int numDocs;
    final org.apache.lucene.index.SegmentCoreReaders core;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.SegmentInfoPerCommit, int, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        org.apache.lucene.index.SegmentInfoPerCommit r1;
        org.apache.lucene.index.SegmentCoreReaders $r2, $r6, $r16;
        java.lang.AssertionError $r7;
        org.apache.lucene.store.Directory $r5, $r11;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.store.IOContext r4, $r12, $r13;
        org.apache.lucene.codecs.LiveDocsFormat $r10;
        org.apache.lucene.util.Bits $r14;
        boolean $z0, $z1;
        org.apache.lucene.index.SegmentInfo $r3, $r8, $r17;
        org.apache.lucene.codecs.Codec $r9;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfoPerCommit;

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.index.AtomicReader: void <init>()>();

        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si> = r1;

        $r2 = new org.apache.lucene.index.SegmentCoreReaders;

        $r3 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r5 = $r3.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        specialinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: void <init>(org.apache.lucene.index.SegmentReader,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.store.IOContext,int)>(r0, $r5, r1, r4, i0);

        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core> = $r2;

     label1:
        $z0 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfoPerCommit: boolean hasDeletions()>();

        if $z0 == 0 goto label2;

        $r8 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r10 = virtualinvoke $r9.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.LiveDocsFormat liveDocsFormat()>();

        $r11 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.store.Directory directory()>();

        $r12 = new org.apache.lucene.store.IOContext;

        $r13 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext READ>;

        specialinvoke $r12.<org.apache.lucene.store.IOContext: void <init>(org.apache.lucene.store.IOContext,boolean)>($r13, 1);

        $r14 = virtualinvoke $r10.<org.apache.lucene.codecs.LiveDocsFormat: org.apache.lucene.util.Bits readLiveDocs(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.store.IOContext)>($r11, r1, $r12);

        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.Bits liveDocs> = $r14;

        goto label4;

     label2:
        $z1 = <org.apache.lucene.index.SegmentReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i1 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        if $i1 == 0 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.Bits liveDocs> = null;

     label4:
        $r17 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i2 = virtualinvoke $r17.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i3 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i4 = $i2 - $i3;

        r0.<org.apache.lucene.index.SegmentReader: int numDocs> = $i4;

     label5:
        if 1 != 0 goto label9;

        $r6 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        virtualinvoke $r6.<org.apache.lucene.index.SegmentCoreReaders: void decRef()>();

        goto label9;

     label6:
        $r15 := @caughtexception;

     label7:
        if 0 != 0 goto label8;

        $r16 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        virtualinvoke $r16.<org.apache.lucene.index.SegmentCoreReaders: void decRef()>();

     label8:
        throw $r15;

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void <init>(org.apache.lucene.index.SegmentInfoPerCommit, org.apache.lucene.index.SegmentCoreReaders, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentInfo $r3, $r6, $r10;
        org.apache.lucene.index.SegmentInfoPerCommit r1;
        org.apache.lucene.index.SegmentCoreReaders r2;
        org.apache.lucene.codecs.Codec $r4;
        org.apache.lucene.store.Directory $r8;
        int $i0, $i1, $i2;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.codecs.LiveDocsFormat $r5;
        org.apache.lucene.store.IOContext r7;
        org.apache.lucene.util.Bits $r9;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfoPerCommit;

        r2 := @parameter1: org.apache.lucene.index.SegmentCoreReaders;

        r7 := @parameter2: org.apache.lucene.store.IOContext;

        $r3 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r5 = virtualinvoke $r4.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.LiveDocsFormat liveDocsFormat()>();

        $r6 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r8 = $r6.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r9 = virtualinvoke $r5.<org.apache.lucene.codecs.LiveDocsFormat: org.apache.lucene.util.Bits readLiveDocs(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.store.IOContext)>($r8, r1, r7);

        $r10 = r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i0 = virtualinvoke $r10.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i1 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i2 = $i0 - $i1;

        specialinvoke r0.<org.apache.lucene.index.SegmentReader: void <init>(org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.index.SegmentCoreReaders,org.apache.lucene.util.Bits,int)>(r1, r2, $r9, $i2);

        return;
    }

    void <init>(org.apache.lucene.index.SegmentInfoPerCommit, org.apache.lucene.index.SegmentCoreReaders, org.apache.lucene.util.Bits, int)
    {
        int i0;
        org.apache.lucene.index.SegmentInfoPerCommit r1;
        org.apache.lucene.index.SegmentCoreReaders r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.AssertionError $r4;
        org.apache.lucene.util.Bits r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfoPerCommit;

        r2 := @parameter1: org.apache.lucene.index.SegmentCoreReaders;

        r3 := @parameter2: org.apache.lucene.util.Bits;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.index.AtomicReader: void <init>()>();

        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si> = r1;

        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core> = r2;

        virtualinvoke r2.<org.apache.lucene.index.SegmentCoreReaders: void incRef()>();

        $z0 = <org.apache.lucene.index.SegmentReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r3 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.Bits liveDocs> = r3;

        r0.<org.apache.lucene.index.SegmentReader: int numDocs> = i0;

        return;
    }

    public org.apache.lucene.util.Bits getLiveDocs()
    {
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.util.Bits $r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.Bits liveDocs>;

        return $r1;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.lucene.index.SegmentCoreReaders $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        virtualinvoke $r1.<org.apache.lucene.index.SegmentCoreReaders: void decRef()>();

        return;
    }

    public org.apache.lucene.index.FieldInfos getFieldInfos()
    {
        org.apache.lucene.index.SegmentCoreReaders $r1;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.index.FieldInfos $r2;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r2 = $r1.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        return $r2;
    }

    public org.apache.lucene.codecs.StoredFieldsReader getFieldsReader()
    {
        org.apache.lucene.index.SegmentCoreReaders $r1;
        java.lang.Object $r3;
        org.apache.lucene.codecs.StoredFieldsReader $r4;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.util.CloseableThreadLocal $r2;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r2 = $r1.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal fieldsReaderLocal>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r4 = (org.apache.lucene.codecs.StoredFieldsReader) $r3;

        return $r4;
    }

    public void document(int, org.apache.lucene.index.StoredFieldVisitor) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.index.StoredFieldVisitor r2;
        org.apache.lucene.codecs.StoredFieldsReader $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        specialinvoke r0.<org.apache.lucene.index.SegmentReader: void checkBounds(int)>(i0);

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.codecs.StoredFieldsReader getFieldsReader()>();

        virtualinvoke $r1.<org.apache.lucene.codecs.StoredFieldsReader: void visitDocument(int,org.apache.lucene.index.StoredFieldVisitor)>(i0, r2);

        return;
    }

    public org.apache.lucene.index.Fields fields()
    {
        org.apache.lucene.codecs.FieldsProducer $r2;
        org.apache.lucene.index.SegmentCoreReaders $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r2 = $r1.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.FieldsProducer fields>;

        return $r2;
    }

    public int numDocs()
    {
        int $i0;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $i0 = r0.<org.apache.lucene.index.SegmentReader: int numDocs>;

        return $i0;
    }

    public int maxDoc()
    {
        org.apache.lucene.index.SegmentInfo $r2;
        int $i0;
        org.apache.lucene.index.SegmentInfoPerCommit $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        return $i0;
    }

    public org.apache.lucene.codecs.TermVectorsReader getTermVectorsReader()
    {
        org.apache.lucene.codecs.TermVectorsReader $r4;
        org.apache.lucene.index.SegmentCoreReaders $r1;
        java.lang.Object $r3;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.util.CloseableThreadLocal $r2;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r2 = $r1.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal termVectorsLocal>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r4 = (org.apache.lucene.codecs.TermVectorsReader) $r3;

        return $r4;
    }

    public org.apache.lucene.index.Fields getTermVectors(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.TermVectorsReader $r1;
        int i0;
        org.apache.lucene.index.Fields $r2;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.codecs.TermVectorsReader getTermVectorsReader()>();

        if $r1 != null goto label1;

        return null;

     label1:
        specialinvoke r0.<org.apache.lucene.index.SegmentReader: void checkBounds(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.TermVectorsReader: org.apache.lucene.index.Fields get(int)>(i0);

        return $r2;
    }

    private void checkBounds(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        org.apache.lucene.index.SegmentReader r3;
        java.lang.String $r8;

        r3 := @this: org.apache.lucene.index.SegmentReader;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r3.<org.apache.lucene.index.SegmentReader: int maxDoc()>();

        if i0 < $i2 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("docID must be >= 0 and < maxDoc=");

        $i1 = virtualinvoke r3.<org.apache.lucene.index.SegmentReader: int maxDoc()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (got docID=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.SegmentInfo $r2, $r4;
        org.apache.lucene.index.SegmentInfoPerCommit $r1, $r3, $r5, $r7;
        org.apache.lucene.store.Directory $r6;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String $r8;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r5 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r6 = $r2.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r3 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r4 = $r3.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i0 = virtualinvoke $r4.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i1 = r0.<org.apache.lucene.index.SegmentReader: int numDocs>;

        $i2 = $i0 - $i1;

        $r7 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $i3 = virtualinvoke $r7.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i4 = $i2 - $i3;

        $r8 = virtualinvoke $r5.<org.apache.lucene.index.SegmentInfoPerCommit: java.lang.String toString(org.apache.lucene.store.Directory,int)>($r6, $i4);

        return $r8;
    }

    public java.lang.String getSegmentName()
    {
        org.apache.lucene.index.SegmentInfo $r2;
        org.apache.lucene.index.SegmentInfoPerCommit $r1;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String $r3;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r3 = $r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        return $r3;
    }

    public org.apache.lucene.index.SegmentInfoPerCommit getSegmentInfo()
    {
        org.apache.lucene.index.SegmentInfoPerCommit $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        return $r1;
    }

    public org.apache.lucene.store.Directory directory()
    {
        org.apache.lucene.index.SegmentInfo $r2;
        org.apache.lucene.store.Directory $r3;
        org.apache.lucene.index.SegmentInfoPerCommit $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentInfoPerCommit si>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r3 = $r2.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        return $r3;
    }

    public java.lang.Object getCoreCacheKey()
    {
        org.apache.lucene.index.SegmentCoreReaders $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        return $r1;
    }

    public java.lang.Object getCombinedCoreAndDeletesKey()
    {
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        return r0;
    }

    public int getTermInfosIndexDivisor()
    {
        int $i0;
        org.apache.lucene.index.SegmentCoreReaders $r1;
        org.apache.lucene.index.SegmentReader r0;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        $r1 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $i0 = $r1.<org.apache.lucene.index.SegmentCoreReaders: int termsIndexDivisor>;

        return $i0;
    }

    public org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r3;
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String r1;
        org.apache.lucene.index.BinaryDocValues $r3;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String r1;
        org.apache.lucene.index.SortedDocValues $r3;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SortedSetDocValues $r3;
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r3;
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String)>(r1);

        return $r3;
    }

    public void addCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)
    {
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.index.SegmentReader$CoreClosedListener r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: org.apache.lucene.index.SegmentReader$CoreClosedListener;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: void addCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)>(r1);

        return;
    }

    public void removeCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)
    {
        org.apache.lucene.index.SegmentCoreReaders $r2;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.index.SegmentReader$CoreClosedListener r1;

        r0 := @this: org.apache.lucene.index.SegmentReader;

        r1 := @parameter0: org.apache.lucene.index.SegmentReader$CoreClosedListener;

        virtualinvoke r0.<org.apache.lucene.index.SegmentReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentCoreReaders core>;

        virtualinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders: void removeCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SegmentReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SegmentReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
