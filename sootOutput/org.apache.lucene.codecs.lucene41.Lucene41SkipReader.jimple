final class org.apache.lucene.codecs.lucene41.Lucene41SkipReader extends org.apache.lucene.codecs.MultiLevelSkipListReader
{
    private final int blockSize;
    private long[] docPointer;
    private long[] posPointer;
    private long[] payPointer;
    private int[] posBufferUpto;
    private int[] payloadByteUpto;
    private long lastPosPointer;
    private long lastPayPointer;
    private int lastPayloadByteUpto;
    private long lastDocPointer;
    private int lastPosBufferUpto;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.IndexInput, int, int, boolean, boolean, boolean)
    {
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        long[] $r2, $r3, $r5;
        int[] $r4, $r6;
        int i0, i1;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        specialinvoke r0.<org.apache.lucene.codecs.MultiLevelSkipListReader: void <init>(org.apache.lucene.store.IndexInput,int,int,int)>(r1, i0, i1, 8);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int blockSize> = i1;

        $r2 = newarray (long)[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] docPointer> = $r2;

        if z0 == 0 goto label5;

        $r3 = newarray (long)[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer> = $r3;

        $r4 = newarray (int)[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] posBufferUpto> = $r4;

        if z1 == 0 goto label1;

        $r6 = newarray (int)[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto> = $r6;

        goto label2;

     label1:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto> = null;

     label2:
        if z2 != 0 goto label3;

        if z1 == 0 goto label4;

     label3:
        $r5 = newarray (long)[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer> = $r5;

        goto label6;

     label4:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer> = null;

        goto label6;

     label5:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer> = null;

     label6:
        return;
    }

    protected int trim(int)
    {
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int blockSize>;

        $i2 = i0 % $i1;

        if $i2 != 0 goto label1;

        $i3 = i0 - 1;

        goto label2;

     label1:
        $i3 = i0;

     label2:
        return $i3;
    }

    public void init(long, long, long, long, int)
    {
        long l0, l3, l4, l5;
        java.lang.AssertionError $r3;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        long[] $r1, $r2, $r4, $r5, $r6;
        byte $b6;
        int i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        l0 := @parameter0: long;

        l3 := @parameter1: long;

        l4 := @parameter2: long;

        l5 := @parameter3: long;

        i1 := @parameter4: int;

        $i2 = virtualinvoke r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int trim(int)>(i1);

        specialinvoke r0.<org.apache.lucene.codecs.MultiLevelSkipListReader: void init(long,int)>(l0, $i2);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastDocPointer> = l3;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPosPointer> = l4;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPayPointer> = l5;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] docPointer>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, l3);

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r4, l4);

        $r5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r6, l5);

        goto label2;

     label1:
        $z0 = <org.apache.lucene.codecs.lucene41.Lucene41SkipReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b6 = l4 cmp 0L;

        if $b6 == 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public long getDocPointer()
    {
        long $l0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $l0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastDocPointer>;

        return $l0;
    }

    public long getPosPointer()
    {
        long $l0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $l0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPosPointer>;

        return $l0;
    }

    public int getPosBufferUpto()
    {
        int $i0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $i0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPosBufferUpto>;

        return $i0;
    }

    public long getPayPointer()
    {
        long $l0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $l0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPayPointer>;

        return $l0;
    }

    public int getPayloadByteUpto()
    {
        int $i0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $i0 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPayloadByteUpto>;

        return $i0;
    }

    public int getNextSkipDoc()
    {
        int $i0;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        int[] $r1;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] skipDoc>;

        $i0 = $r1[0];

        return $i0;
    }

    protected void seekChild(int) throws java.io.IOException
    {
        long $l1, $l2, $l4;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        long[] $r1, $r2, $r3, $r6, $r7;
        int[] $r4, $r5, $r8;
        int i0, $i3, $i5;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.codecs.MultiLevelSkipListReader: void seekChild(int)>(i0);

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] docPointer>;

        $l1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastDocPointer>;

        $r1[i0] = $l1;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        $l2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPosPointer>;

        $r3[i0] = $l2;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] posBufferUpto>;

        $i3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPosBufferUpto>;

        $r4[i0] = $i3;

        $r5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        if $r5 == null goto label1;

        $r8 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        $i5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPayloadByteUpto>;

        $r8[i0] = $i5;

     label1:
        $r6 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        if $r6 == null goto label2;

        $r7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        $l4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPayPointer>;

        $r7[i0] = $l4;

     label2:
        return;
    }

    protected void setLastSkipData(int)
    {
        long $l1, $l2, $l5;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r0;
        long[] $r1, $r2, $r3, $r5, $r8;
        int[] $r4, $r6, $r7;
        int i0, $i3, $i4;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.codecs.MultiLevelSkipListReader: void setLastSkipData(int)>(i0);

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] docPointer>;

        $l1 = $r1[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastDocPointer> = $l1;

        $r2 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        $l2 = $r3[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPosPointer> = $l2;

        $r4 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] posBufferUpto>;

        $i3 = $r4[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPosBufferUpto> = $i3;

        $r5 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        if $r5 == null goto label1;

        $r8 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        $l5 = $r8[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long lastPayPointer> = $l5;

     label1:
        $r6 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        if $r6 == null goto label2;

        $r7 = r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        $i4 = $r7[i0];

        r0.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int lastPayloadByteUpto> = $i4;

     label2:
        return;
    }

    protected int readSkipData(int, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        long $l2, $l4, $l5, $l6, $l8, $l9, $l11, $l13, $l14;
        org.apache.lucene.codecs.lucene41.Lucene41SkipReader r1;
        long[] $r2, $r3, $r4, $r7, $r8;
        int[] $r5, $r6, $r9;
        int $i0, i1, $i3, $i7, $i10, $i12, $i15;
        org.apache.lucene.store.IndexInput r0;

        r1 := @this: org.apache.lucene.codecs.lucene41.Lucene41SkipReader;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r2 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] docPointer>;

        $l2 = $r2[i1];

        $i3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        $r2[i1] = $l5;

        $r3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        if $r3 == null goto label2;

        $r4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] posPointer>;

        $l6 = $r4[i1];

        $i7 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $l8 = (long) $i7;

        $l9 = $l6 + $l8;

        $r4[i1] = $l9;

        $r5 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] posBufferUpto>;

        $i10 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r5[i1] = $i10;

        $r6 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        if $r6 == null goto label1;

        $r9 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: int[] payloadByteUpto>;

        $i15 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r9[i1] = $i15;

     label1:
        $r7 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        if $r7 == null goto label2;

        $r8 = r1.<org.apache.lucene.codecs.lucene41.Lucene41SkipReader: long[] payPointer>;

        $l11 = $r8[i1];

        $i12 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $l13 = (long) $i12;

        $l14 = $l11 + $l13;

        $r8[i1] = $l14;

     label2:
        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene41/Lucene41SkipReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene41.Lucene41SkipReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
