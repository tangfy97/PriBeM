public class org.apache.cxf.clustering.RetryStrategy extends org.apache.cxf.clustering.SequentialStrategy
{
    private int maxNumberOfRetries;
    private int counter;

    public void <init>()
    {
        org.apache.cxf.clustering.RetryStrategy r0;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        specialinvoke r0.<org.apache.cxf.clustering.SequentialStrategy: void <init>()>();

        return;
    }

    public java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)
    {
        java.util.List $r2;
        org.apache.cxf.clustering.RetryStrategy r0;
        org.apache.cxf.message.Exchange r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        $z0 = virtualinvoke r0.<org.apache.cxf.clustering.RetryStrategy: boolean stillTheSameAddress()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.clustering.RetryStrategy: java.util.List getEndpoints(org.apache.cxf.message.Exchange,boolean)>(r1, $z0);

        return $r2;
    }

    protected java.lang.Object getNextAlternate(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.clustering.RetryStrategy r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        r1 := @parameter0: java.util.List;

        $z0 = virtualinvoke r0.<org.apache.cxf.clustering.RetryStrategy: boolean stillTheSameAddress()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0);

     label2:
        return $r2;
    }

    protected boolean stillTheSameAddress()
    {
        org.apache.cxf.clustering.RetryStrategy r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        $i0 = r0.<org.apache.cxf.clustering.RetryStrategy: int maxNumberOfRetries>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $i1 = r0.<org.apache.cxf.clustering.RetryStrategy: int counter>;

        $i2 = $i1 + 1;

        r0.<org.apache.cxf.clustering.RetryStrategy: int counter> = $i2;

        $i3 = r0.<org.apache.cxf.clustering.RetryStrategy: int maxNumberOfRetries>;

        if $i2 > $i3 goto label2;

        return 1;

     label2:
        r0.<org.apache.cxf.clustering.RetryStrategy: int counter> = 0;

        return 0;
    }

    public void setMaxNumberOfRetries(int)
    {
        int i0;
        org.apache.cxf.clustering.RetryStrategy r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.cxf.clustering.RetryStrategy: int maxNumberOfRetries> = i0;

        return;
    }

    public int getMaxNumberOfRetries()
    {
        int $i0;
        org.apache.cxf.clustering.RetryStrategy r0;

        r0 := @this: org.apache.cxf.clustering.RetryStrategy;

        $i0 = r0.<org.apache.cxf.clustering.RetryStrategy: int maxNumberOfRetries>;

        return $i0;
    }
}
