public class org.objectweb.asm.Attribute extends java.lang.Object
{
    public final java.lang.String type;
    byte[] value;
    org.objectweb.asm.Attribute next;

    protected void <init>(java.lang.String)
    {
        org.objectweb.asm.Attribute r0;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.Attribute;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.objectweb.asm.Attribute: java.lang.String type> = r1;

        return;
    }

    public boolean isUnknown()
    {
        org.objectweb.asm.Attribute r0;

        r0 := @this: org.objectweb.asm.Attribute;

        return 1;
    }

    public boolean isCodeAttribute()
    {
        org.objectweb.asm.Attribute r0;

        r0 := @this: org.objectweb.asm.Attribute;

        return 0;
    }

    protected org.objectweb.asm.Label[] getLabels()
    {
        org.objectweb.asm.Attribute r0;

        r0 := @this: org.objectweb.asm.Attribute;

        return null;
    }

    protected org.objectweb.asm.Attribute read(org.objectweb.asm.ClassReader, int, int, char[], int, org.objectweb.asm.Label[])
    {
        byte[] $r3, $r5, $r6;
        org.objectweb.asm.ClassReader r4;
        org.objectweb.asm.Attribute $r0, r1;
        int i0, i1, i2;
        char[] r7;
        org.objectweb.asm.Label[] r8;
        java.lang.String $r2;

        r1 := @this: org.objectweb.asm.Attribute;

        r4 := @parameter0: org.objectweb.asm.ClassReader;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r7 := @parameter3: char[];

        i2 := @parameter4: int;

        r8 := @parameter5: org.objectweb.asm.Label[];

        $r0 = new org.objectweb.asm.Attribute;

        $r2 = r1.<org.objectweb.asm.Attribute: java.lang.String type>;

        specialinvoke $r0.<org.objectweb.asm.Attribute: void <init>(java.lang.String)>($r2);

        $r3 = newarray (byte)[i0];

        $r0.<org.objectweb.asm.Attribute: byte[] value> = $r3;

        $r6 = r4.<org.objectweb.asm.ClassReader: byte[] b>;

        $r5 = $r0.<org.objectweb.asm.Attribute: byte[] value>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i1, $r5, 0, i0);

        return $r0;
    }

    protected org.objectweb.asm.ByteVector write(org.objectweb.asm.ClassWriter, byte[], int, int, int)
    {
        org.objectweb.asm.ClassWriter r4;
        byte[] $r2, $r3, r5;
        org.objectweb.asm.ByteVector $r0;
        org.objectweb.asm.Attribute r1;
        int $i0, i1, i2, i3;

        r1 := @this: org.objectweb.asm.Attribute;

        r4 := @parameter0: org.objectweb.asm.ClassWriter;

        r5 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r0 = new org.objectweb.asm.ByteVector;

        specialinvoke $r0.<org.objectweb.asm.ByteVector: void <init>()>();

        $r2 = r1.<org.objectweb.asm.Attribute: byte[] value>;

        $r0.<org.objectweb.asm.ByteVector: byte[] data> = $r2;

        $r3 = r1.<org.objectweb.asm.Attribute: byte[] value>;

        $i0 = lengthof $r3;

        $r0.<org.objectweb.asm.ByteVector: int length> = $i0;

        return $r0;
    }

    final int getCount()
    {
        org.objectweb.asm.Attribute r0, r1;
        int i0;

        r0 := @this: org.objectweb.asm.Attribute;

        i0 = 0;

        r1 = r0;

     label1:
        if r1 == null goto label2;

        i0 = i0 + 1;

        r1 = r1.<org.objectweb.asm.Attribute: org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return i0;
    }

    final int getSize(org.objectweb.asm.ClassWriter, byte[], int, int, int)
    {
        org.objectweb.asm.ClassWriter r1;
        byte[] r3;
        org.objectweb.asm.ByteVector $r4;
        org.objectweb.asm.Attribute r0, r5;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.String $r2;

        r0 := @this: org.objectweb.asm.Attribute;

        r1 := @parameter0: org.objectweb.asm.ClassWriter;

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r5 = r0;

        i5 = 0;

     label1:
        if r5 == null goto label2;

        $r2 = r5.<org.objectweb.asm.Attribute: java.lang.String type>;

        virtualinvoke r1.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($r2);

        $r4 = virtualinvoke r5.<org.objectweb.asm.Attribute: org.objectweb.asm.ByteVector write(org.objectweb.asm.ClassWriter,byte[],int,int,int)>(r1, r3, i0, i1, i2);

        $i3 = $r4.<org.objectweb.asm.ByteVector: int length>;

        $i4 = $i3 + 6;

        i5 = i5 + $i4;

        r5 = r5.<org.objectweb.asm.Attribute: org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return i5;
    }

    final void put(org.objectweb.asm.ClassWriter, byte[], int, int, int, org.objectweb.asm.ByteVector)
    {
        org.objectweb.asm.ClassWriter r1;
        byte[] r2, $r7;
        org.objectweb.asm.ByteVector $r3, r4, $r6;
        org.objectweb.asm.Attribute r0, r8;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String $r5;

        r0 := @this: org.objectweb.asm.Attribute;

        r1 := @parameter0: org.objectweb.asm.ClassWriter;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r4 := @parameter5: org.objectweb.asm.ByteVector;

        r8 = r0;

     label1:
        if r8 == null goto label2;

        $r3 = virtualinvoke r8.<org.objectweb.asm.Attribute: org.objectweb.asm.ByteVector write(org.objectweb.asm.ClassWriter,byte[],int,int,int)>(r1, r2, i0, i1, i2);

        $r5 = r8.<org.objectweb.asm.Attribute: java.lang.String type>;

        $i3 = virtualinvoke r1.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>($r5);

        $r6 = virtualinvoke r4.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i3);

        $i4 = $r3.<org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r6.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>($i4);

        $r7 = $r3.<org.objectweb.asm.ByteVector: byte[] data>;

        $i5 = $r3.<org.objectweb.asm.ByteVector: int length>;

        virtualinvoke r4.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r7, 0, $i5);

        r8 = r8.<org.objectweb.asm.Attribute: org.objectweb.asm.Attribute next>;

        goto label1;

     label2:
        return;
    }
}
