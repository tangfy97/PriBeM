public class org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater extends java.lang.Object implements org.waveprotocol.wave.client.editor.EditorUpdateEvent$EditorUpdateListener
{
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet updateables;
    private final org.waveprotocol.wave.client.editor.EditorContext editor;

    public void <init>(org.waveprotocol.wave.client.editor.EditorContext)
    {
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater r0;
        org.waveprotocol.wave.client.editor.EditorContext r2;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.EditorContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.model.util.CopyOnWriteSet updateables> = $r1;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.client.editor.EditorContext editor> = r2;

        return;
    }

    public org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller add(org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller)
    {
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller r1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller;

        $r2 = r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.model.util.CopyOnWriteSet updateables>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return r1;
    }

    public void onUpdate(org.waveprotocol.wave.client.editor.EditorUpdateEvent)
    {
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater r0;
        org.waveprotocol.wave.client.editor.EditorUpdateEvent r1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorUpdateEvent;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: void updateButtonStates()>();

        return;
    }

    public void updateButtonStates()
    {
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater r0;
        org.waveprotocol.wave.client.editor.EditorContext $r2;
        java.util.Iterator $r6;
        org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller r8;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1, $r5;
        org.waveprotocol.wave.model.document.util.Range $r4;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r3;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.model.util.CopyOnWriteSet updateables>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: org.waveprotocol.wave.model.document.util.Range getOrderedSelectionRange()>();

        if $r4 != null goto label2;

        return;

     label2:
        $r5 = r0.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater: org.waveprotocol.wave.model.util.CopyOnWriteSet updateables>;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller) $r7;

        interfaceinvoke r8.<org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller: void update(org.waveprotocol.wave.model.document.util.Range)>($r4);

        goto label3;

     label4:
        return;
    }
}
