class javax.mail.Session$ProviderInfo extends java.lang.Object
{
    private final java.util.Map byClassName;
    private final java.util.Map byProtocol;
    private final java.util.List all;

    private void <init>()
    {
        javax.mail.Session$ProviderInfo r0;
        java.util.HashMap $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: javax.mail.Session$ProviderInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.mail.Session$ProviderInfo: java.util.Map byClassName> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<javax.mail.Session$ProviderInfo: java.util.Map byProtocol> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<javax.mail.Session$ProviderInfo: java.util.List all> = $r3;

        return;
    }

    public void addProvider(javax.mail.Provider)
    {
        javax.mail.Session$ProviderInfo r2;
        java.util.List $r6;
        javax.mail.Provider r0;
        java.util.Map $r3, $r5, $r7, $r8;
        java.lang.String $r1, $r4;
        boolean $z0, $z1;

        r2 := @this: javax.mail.Session$ProviderInfo;

        r0 := @parameter0: javax.mail.Provider;

        $r1 = virtualinvoke r0.<javax.mail.Provider: java.lang.String getClassName()>();

        $r3 = r2.<javax.mail.Session$ProviderInfo: java.util.Map byClassName>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r8 = r2.<javax.mail.Session$ProviderInfo: java.util.Map byClassName>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

     label1:
        $r4 = virtualinvoke r0.<javax.mail.Provider: java.lang.String getProtocol()>();

        $r5 = r2.<javax.mail.Session$ProviderInfo: java.util.Map byProtocol>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r7 = r2.<javax.mail.Session$ProviderInfo: java.util.Map byProtocol>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

     label2:
        $r6 = r2.<javax.mail.Session$ProviderInfo: java.util.List all>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    static java.util.List access$000(javax.mail.Session$ProviderInfo)
    {
        java.util.List $r1;
        javax.mail.Session$ProviderInfo r0;

        r0 := @parameter0: javax.mail.Session$ProviderInfo;

        $r1 = r0.<javax.mail.Session$ProviderInfo: java.util.List all>;

        return $r1;
    }

    static java.util.Map access$100(javax.mail.Session$ProviderInfo)
    {
        javax.mail.Session$ProviderInfo r0;
        java.util.Map $r1;

        r0 := @parameter0: javax.mail.Session$ProviderInfo;

        $r1 = r0.<javax.mail.Session$ProviderInfo: java.util.Map byClassName>;

        return $r1;
    }

    static java.util.Map access$200(javax.mail.Session$ProviderInfo)
    {
        javax.mail.Session$ProviderInfo r0;
        java.util.Map $r1;

        r0 := @parameter0: javax.mail.Session$ProviderInfo;

        $r1 = r0.<javax.mail.Session$ProviderInfo: java.util.Map byProtocol>;

        return $r1;
    }

    void <init>(javax.mail.Session$1)
    {
        javax.mail.Session$1 r1;
        javax.mail.Session$ProviderInfo r0;

        r0 := @this: javax.mail.Session$ProviderInfo;

        r1 := @parameter0: javax.mail.Session$1;

        specialinvoke r0.<javax.mail.Session$ProviderInfo: void <init>()>();

        return;
    }
}
