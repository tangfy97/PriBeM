abstract class org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler extends org.waveprotocol.wave.model.experimental.schema.SchemaFactory$Handler
{

    private void <init>()
    {
        org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler;

        specialinvoke r0.<org.waveprotocol.wave.model.experimental.schema.SchemaFactory$Handler: void <init>(org.waveprotocol.wave.model.experimental.schema.SchemaFactory$1)>(null);

        return;
    }

    abstract void registerElement(java.lang.String, org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment);

    void <init>(org.waveprotocol.wave.model.experimental.schema.SchemaFactory$1)
    {
        org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler r0;
        org.waveprotocol.wave.model.experimental.schema.SchemaFactory$1 r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler;

        r1 := @parameter0: org.waveprotocol.wave.model.experimental.schema.SchemaFactory$1;

        specialinvoke r0.<org.waveprotocol.wave.model.experimental.schema.SchemaFactory$ElementCollectionHandler: void <init>()>();

        return;
    }
}
