public class org.apache.lucene.index.MultiDocValues$MultiSortedDocValues extends org.apache.lucene.index.SortedDocValues
{
    public final int[] docStarts;
    public final org.apache.lucene.index.SortedDocValues[] values;
    public final org.apache.lucene.index.MultiDocValues$OrdinalMap mapping;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.SortedDocValues[], int[], org.apache.lucene.index.MultiDocValues$OrdinalMap) throws java.io.IOException
    {
        org.apache.lucene.util.packed.MonotonicAppendingLongBuffer[] $r5;
        org.apache.lucene.index.MultiDocValues$MultiSortedDocValues r0;
        org.apache.lucene.index.SortedDocValues[] r1;
        java.lang.AssertionError $r4, $r6;
        org.apache.lucene.index.MultiDocValues$OrdinalMap r3;
        int[] r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        r1 := @parameter0: org.apache.lucene.index.SortedDocValues[];

        r2 := @parameter1: int[];

        r3 := @parameter2: org.apache.lucene.index.MultiDocValues$OrdinalMap;

        specialinvoke r0.<org.apache.lucene.index.SortedDocValues: void <init>()>();

        $z0 = <org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = lengthof r1;

        $r5 = r3.<org.apache.lucene.index.MultiDocValues$OrdinalMap: org.apache.lucene.util.packed.MonotonicAppendingLongBuffer[] ordDeltas>;

        $i3 = lengthof $r5;

        if $i4 == $i3 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $z1 = <org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i2 = lengthof r2;

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        if $i2 == $i1 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.SortedDocValues[] values> = r1;

        r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: int[] docStarts> = r2;

        r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping> = r3;

        return;
    }

    public int getOrd(int)
    {
        org.apache.lucene.index.MultiDocValues$MultiSortedDocValues r0;
        org.apache.lucene.index.SortedDocValues[] $r2;
        long $l5, $l6;
        org.apache.lucene.index.MultiDocValues$OrdinalMap $r5;
        int[] $r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i7;
        org.apache.lucene.index.SortedDocValues $r4;

        r0 := @this: org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: int[] docStarts>;

        $i1 = staticinvoke <org.apache.lucene.index.ReaderUtil: int subIndex(int,int[])>(i0, $r1);

        $r2 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.SortedDocValues[] values>;

        $r4 = $r2[$i1];

        $r3 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: int[] docStarts>;

        $i2 = $r3[$i1];

        $i3 = i0 - $i2;

        $i4 = virtualinvoke $r4.<org.apache.lucene.index.SortedDocValues: int getOrd(int)>($i3);

        $r5 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $l5 = (long) $i4;

        $l6 = virtualinvoke $r5.<org.apache.lucene.index.MultiDocValues$OrdinalMap: long getGlobalOrd(int,long)>($i1, $l5);

        $i7 = (int) $l6;

        return $i7;
    }

    public void lookupOrd(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r4;
        org.apache.lucene.index.MultiDocValues$MultiSortedDocValues r0;
        org.apache.lucene.index.SortedDocValues[] $r3;
        long $l1, $l3, $l4;
        org.apache.lucene.index.MultiDocValues$OrdinalMap $r1, $r2;
        int i0, $i2, i5;
        org.apache.lucene.index.SortedDocValues $r5;

        r0 := @this: org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        i0 := @parameter0: int;

        r4 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $l1 = (long) i0;

        $i2 = virtualinvoke $r1.<org.apache.lucene.index.MultiDocValues$OrdinalMap: int getSegmentNumber(long)>($l1);

        $r2 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $l3 = (long) i0;

        $l4 = virtualinvoke $r2.<org.apache.lucene.index.MultiDocValues$OrdinalMap: long getSegmentOrd(int,long)>($i2, $l3);

        i5 = (int) $l4;

        $r3 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.SortedDocValues[] values>;

        $r5 = $r3[$i2];

        virtualinvoke $r5.<org.apache.lucene.index.SortedDocValues: void lookupOrd(int,org.apache.lucene.util.BytesRef)>(i5, r4);

        return;
    }

    public int getValueCount()
    {
        org.apache.lucene.index.MultiDocValues$OrdinalMap $r1;
        org.apache.lucene.index.MultiDocValues$MultiSortedDocValues r0;
        int $i1;
        long $l0;

        r0 := @this: org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        $r1 = r0.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.MultiDocValues$OrdinalMap: long getValueCount()>();

        $i1 = (int) $l0;

        return $i1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/MultiDocValues;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: boolean $assertionsDisabled> = $z1;

        return;
    }
}
