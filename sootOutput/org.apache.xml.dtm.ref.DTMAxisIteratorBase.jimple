public abstract class org.apache.xml.dtm.ref.DTMAxisIteratorBase extends java.lang.Object implements org.apache.xml.dtm.DTMAxisIterator
{
    protected int _last;
    protected int _position;
    protected int _markedNode;
    protected int _startNode;
    protected boolean _includeSelf;
    protected boolean _isRestartable;

    public void <init>()
    {
        int $i1, $i3;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _last> = $i1;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position> = 0;

        $i3 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode> = $i3;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _includeSelf> = 0;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = 1;

        return;
    }

    public int getStartNode()
    {
        int $i0;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        return $i0;
    }

    public org.apache.xml.dtm.DTMAxisIterator reset()
    {
        int $i0;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = 1;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator setStartNode(int)>($i0);

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = z0;

        return r0;
    }

    public org.apache.xml.dtm.DTMAxisIterator includeSelf()
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _includeSelf> = 1;

        return r0;
    }

    public int getLast()
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _last>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        i2 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position>;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: void setMark()>();

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator reset()>();

     label1:
        $i3 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _last>;

        $i4 = $i3 + 1;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _last> = $i4;

        $i5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int next()>();

        $i9 = (int) -1;

        if $i5 != $i9 goto label1;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: void gotoMark()>();

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position> = i2;

     label2:
        $i1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _last>;

        return $i1;
    }

    public int getPosition()
    {
        int $i0, $i1;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position>;

        if $i0 != 0 goto label1;

        $i1 = 1;

        goto label2;

     label1:
        $i1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position>;

     label2:
        return $i1;
    }

    public boolean isReverse()
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        return 0;
    }

    public org.apache.xml.dtm.DTMAxisIterator cloneIterator()
    {
        org.apache.xml.utils.WrappedRuntimeException $r3;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0, r4;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r4 = (org.apache.xml.dtm.ref.DTMAxisIteratorBase) $r1;

        r4.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = 0;

        return r4;

     label2:
        $r2 := @caughtexception;

        $r3 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r3.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label2;
    }

    protected final int returnNode(int)
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;
        int $i0, $i1, i2;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position>;

        $i1 = $i0 + 1;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position> = $i1;

        return i2;
    }

    protected final org.apache.xml.dtm.DTMAxisIterator resetPosition()
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _position> = 0;

        return r0;
    }

    public boolean isDocOrdered()
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        return 1;
    }

    public int getAxis()
    {
        int $i1;
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        $i1 = (int) -1;

        return $i1;
    }

    public void setRestartable(boolean)
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = z0;

        return;
    }

    public int getNodeByPosition(int)
    {
        org.apache.xml.dtm.ref.DTMAxisIteratorBase r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIteratorBase;

        i0 := @parameter0: int;

        if i0 <= 0 goto label5;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean isReverse()>();

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getLast()>();

        $i5 = $i4 - i0;

        $i6 = $i5 + 1;

        goto label2;

     label1:
        $i6 = i0;

     label2:
        i1 = $i6;

        goto label4;

     label3:
        $i3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getPosition()>();

        if i1 != $i3 goto label4;

        return $i2;

     label4:
        $i2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int next()>();

        $i8 = (int) -1;

        if $i2 != $i8 goto label3;

     label5:
        $i10 = (int) -1;

        return $i10;
    }

    public abstract org.apache.xml.dtm.DTMAxisIterator setStartNode(int);

    public abstract void gotoMark();

    public abstract void setMark();

    public abstract int next();
}
