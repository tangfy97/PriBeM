class com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator delegateIterator;
    java.util.Collection collection;
    final com.google.common.collect.AbstractMultimap$AsMap this$1;

    void <init>(com.google.common.collect.AbstractMultimap$AsMap)
    {
        java.util.Iterator $r5;
        com.google.common.collect.AbstractMultimap$AsMap r1, $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        r1 := @parameter0: com.google.common.collect.AbstractMultimap$AsMap;

        r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMultimap$AsMap this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMultimap$AsMap this$1>;

        $r3 = $r2.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator> = $r5;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.util.Map$Entry next()
    {
        java.util.Map$Entry r3, $r11;
        java.util.Iterator $r1;
        java.util.Collection $r6, $r8, $r10;
        com.google.common.collect.AbstractMultimap $r9;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator r0;
        com.google.common.collect.AbstractMultimap$AsMap $r7;
        java.lang.Object $r2, $r4, $r5;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.util.Collection) $r5;

        r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Collection collection> = $r6;

        $r7 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMultimap$AsMap this$1>;

        $r9 = $r7.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $r8 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Collection collection>;

        $r10 = staticinvoke <com.google.common.collect.AbstractMultimap: java.util.Collection access$1300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection)>($r9, $r4, $r8);

        $r11 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r4, $r10);

        return $r11;
    }

    public void remove()
    {
        java.util.Iterator $r1;
        com.google.common.collect.AbstractMultimap$AsMap $r2;
        java.util.Collection $r3, $r5;
        com.google.common.collect.AbstractMultimap $r4;
        int $i0;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Iterator delegateIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: com.google.common.collect.AbstractMultimap$AsMap this$1>;

        $r4 = $r2.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $r3 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Collection collection>;

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        staticinvoke <com.google.common.collect.AbstractMultimap: int access$220(com.google.common.collect.AbstractMultimap,int)>($r4, $i0);

        $r5 = r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Collection collection>;

        interfaceinvoke $r5.<java.util.Collection: void clear()>();

        return;
    }

    public volatile java.lang.Object next()
    {
        java.util.Map$Entry $r1;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator r0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: java.util.Map$Entry next()>();

        return $r1;
    }
}
