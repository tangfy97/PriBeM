class org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell extends org.apache.lucene.spatial.prefix.tree.Cell
{
    private com.spatial4j.core.shape.Shape shape;
    final org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0;

    public void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree, java.lang.String)
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        java.lang.String r2;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree r1;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0> = r1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void <init>(java.lang.String)>(r2);

        return;
    }

    public void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree, java.lang.String, com.spatial4j.core.shape.SpatialRelation)
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        com.spatial4j.core.shape.SpatialRelation r3;
        java.lang.String r2;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree r1;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.spatial4j.core.shape.SpatialRelation;

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0> = r1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void <init>(java.lang.String)>(r2);

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.SpatialRelation shapeRel> = r3;

        return;
    }

    void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree, byte[], int, int)
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        byte[] r2;
        int i0, i1;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree r1;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0> = r1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void <init>(byte[],int,int)>(r2, i0, i1);

        return;
    }

    public void reset(byte[], int, int)
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: void reset(byte[],int,int)>(r1, i0, i1);

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.Shape shape> = null;

        return;
    }

    public java.util.Collection getSubCells()
    {
        java.util.ArrayList $r0;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell $r1, r2, $r9, $r16, $r23;
        java.lang.String $r5, $r8, $r12, $r15, $r19, $r22, $r26, $r29;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree $r4, $r11, $r18, $r25;
        java.lang.StringBuilder $r3, $r6, $r7, $r10, $r13, $r14, $r17, $r20, $r21, $r24, $r27, $r28;

        r2 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(4);

        $r1 = new org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r4 = r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: java.lang.String getTokenString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree,java.lang.String)>($r4, $r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r9 = new org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r11 = r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: java.lang.String getTokenString()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree,java.lang.String)>($r11, $r15);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r16 = new org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r18 = r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: java.lang.String getTokenString()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree,java.lang.String)>($r18, $r22);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r23 = new org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r25 = r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: java.lang.String getTokenString()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: void <init>(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree,java.lang.String)>($r25, $r29);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        return $r0;
    }

    public int getSubCellsSize()
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        return 4;
    }

    public org.apache.lucene.spatial.prefix.tree.Cell getSubCell(com.spatial4j.core.shape.Point)
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        com.spatial4j.core.shape.Point r1;
        int $i0, $i1;
        org.apache.lucene.spatial.prefix.tree.Cell $r3;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree $r2;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        r1 := @parameter0: com.spatial4j.core.shape.Point;

        $r2 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $i0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: int getLevel()>();

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: org.apache.lucene.spatial.prefix.tree.Cell getCell(com.spatial4j.core.shape.Point,int)>(r1, $i1);

        return $r3;
    }

    public com.spatial4j.core.shape.Shape getShape()
    {
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        com.spatial4j.core.shape.Shape $r1, $r2;
        com.spatial4j.core.shape.Rectangle $r3;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.Shape shape>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.Rectangle makeShape()>();

        r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.Shape shape> = $r3;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: com.spatial4j.core.shape.Shape shape>;

        return $r2;
    }

    private com.spatial4j.core.shape.Rectangle makeShape()
    {
        com.spatial4j.core.shape.Rectangle $r8;
        com.spatial4j.core.context.SpatialContext $r7;
        java.lang.StringBuilder $r23, $r24, $r26;
        double[] $r10, $r12, $r14, $r16, $r18, $r20;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell r0;
        int $i0, $i1, $i2, $i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r1, $r25;
        org.apache.lucene.spatial.prefix.tree.QuadPrefixTree $r2, $r3, $r4, $r5, $r6, $r9, $r11, $r13, $r15, $r17, $r19;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;
        char $c4;
        java.lang.RuntimeException $r27;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: java.lang.String getTokenString()>();

        $r2 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        d6 = staticinvoke <org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double access$000(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree)>($r2);

        $r3 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        d7 = staticinvoke <org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double access$100(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree)>($r3);

        i5 = 0;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i5 >= $i0 goto label10;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c4;

        if 65 == $i6 goto label02;

        $i7 = (int) $c4;

        if 97 != $i7 goto label03;

     label02:
        $r13 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r14 = $r13.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelH>;

        $d2 = $r14[i5];

        d7 = d7 + $d2;

        goto label09;

     label03:
        $i8 = (int) $c4;

        if 66 == $i8 goto label04;

        $i9 = (int) $c4;

        if 98 != $i9 goto label05;

     label04:
        $r15 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r16 = $r15.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelW>;

        $d3 = $r16[i5];

        d6 = d6 + $d3;

        $r17 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r18 = $r17.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelH>;

        $d4 = $r18[i5];

        d7 = d7 + $d4;

        goto label09;

     label05:
        $i10 = (int) $c4;

        if 67 == $i10 goto label09;

        $i11 = (int) $c4;

        if 99 != $i11 goto label06;

        goto label09;

     label06:
        $i12 = (int) $c4;

        if 68 == $i12 goto label07;

        $i13 = (int) $c4;

        if 100 != $i13 goto label08;

     label07:
        $r19 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r20 = $r19.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelW>;

        $d5 = $r20[i5];

        d6 = d6 + $d5;

        goto label09;

     label08:
        $r27 = new java.lang.RuntimeException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected char: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r27;

     label09:
        i5 = i5 + 1;

        goto label01;

     label10:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label11;

        $r9 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r10 = $r9.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelW>;

        $i2 = $i1 - 1;

        d8 = $r10[$i2];

        $r11 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r12 = $r11.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double[] levelH>;

        $i3 = $i1 - 1;

        d9 = $r12[$i3];

        goto label12;

     label11:
        $r4 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        d8 = staticinvoke <org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double access$200(org.apache.lucene.spatial.prefix.tree.QuadPrefixTree)>($r4);

        $r5 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        d9 = $r5.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: double gridH>;

     label12:
        $r6 = r0.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree$QuadCell: org.apache.lucene.spatial.prefix.tree.QuadPrefixTree this$0>;

        $r7 = $r6.<org.apache.lucene.spatial.prefix.tree.QuadPrefixTree: com.spatial4j.core.context.SpatialContext ctx>;

        $d1 = d6 + d8;

        $d0 = d7 + d9;

        $r8 = virtualinvoke $r7.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>(d6, $d1, d7, $d0);

        return $r8;
    }
}
