public class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager extends java.lang.Object implements org.apache.http.conn.ClientConnectionManager
{
    private final org.apache.commons.logging.Log log;
    protected final org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;
    protected final org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool;
    protected final org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool;
    protected final org.apache.http.conn.ClientConnectionOperator connOperator;
    protected final org.apache.http.conn.params.ConnPerRouteBean connPerRoute;

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry)
    {
        java.util.concurrent.TimeUnit $r2;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit)>(r1, -1L, $r2);

        return;
    }

    public void <init>()
    {
        org.apache.http.conn.scheme.SchemeRegistry $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = staticinvoke <org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>();

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>($r1);

        return;
    }

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        org.apache.http.conn.params.ConnPerRouteBean $r3;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        long l0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r3 = new org.apache.http.conn.params.ConnPerRouteBean;

        specialinvoke $r3.<org.apache.http.conn.params.ConnPerRouteBean: void <init>()>();

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit,org.apache.http.conn.params.ConnPerRouteBean)>(r1, l0, r2, $r3);

        return;
    }

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry, long, java.util.concurrent.TimeUnit, org.apache.http.conn.params.ConnPerRouteBean)
    {
        org.apache.http.conn.scheme.SchemeRegistry r1;
        org.apache.http.conn.params.ConnPerRouteBean r4;
        long l0;
        java.lang.IllegalArgumentException $r9;
        java.util.concurrent.TimeUnit r6;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        org.apache.http.conn.ClientConnectionOperator $r5;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r7, $r8;
        java.lang.Class $r2;
        org.apache.commons.logging.Log $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        l0 := @parameter1: long;

        r6 := @parameter2: java.util.concurrent.TimeUnit;

        r4 := @parameter3: org.apache.http.conn.params.ConnPerRouteBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry may not be null");

        throw $r9;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log> = $r3;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = r1;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute> = r4;

        $r5 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>(r1);

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator> = $r5;

        $r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit)>(l0, r6);

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool> = $r7;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool> = $r8;

        return;
    }

    public void <init>(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.conn.scheme.SchemeRegistry r1;
        org.apache.http.conn.params.ConnPerRouteBean $r4;
        java.lang.IllegalArgumentException $r10;
        org.apache.http.impl.conn.tsccm.AbstractConnPool $r7;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        org.apache.http.params.HttpParams r6;
        org.apache.http.conn.ClientConnectionOperator $r5;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r8, $r9;
        java.lang.Class $r2;
        org.apache.commons.logging.Log $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r6 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry may not be null");

        throw $r10;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log> = $r3;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = r1;

        $r4 = new org.apache.http.conn.params.ConnPerRouteBean;

        specialinvoke $r4.<org.apache.http.conn.params.ConnPerRouteBean: void <init>()>();

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute> = $r4;

        $r5 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>(r1);

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator> = $r5;

        $r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>(r6);

        $r8 = (org.apache.http.impl.conn.tsccm.ConnPoolByRoute) $r7;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool> = $r8;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool> = $r9;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.lang.Throwable $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

     label1:
        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void shutdown()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.params.HttpParams r2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.ClientConnectionOperator $r3;

        r1 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r2 := @parameter0: org.apache.http.params.HttpParams;

        $r0 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r3 = r1.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator>;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>($r3, r2);

        return $r0;
    }

    protected org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        org.apache.http.conn.params.ConnPerRouteBean $r3;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r0;
        org.apache.http.conn.ClientConnectionOperator $r4;
        long l0;

        r1 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r0 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r4 = r1.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator connOperator>;

        $r3 = r1.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute>;

        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.params.ConnPerRoute,int,long,java.util.concurrent.TimeUnit)>($r4, $r3, 20, l0, r2);

        return $r0;
    }

    protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator $r0;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r2;

        r2 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        $r0 = new org.apache.http.impl.conn.DefaultClientConnectionOperator;

        specialinvoke $r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>(r1);

        return $r0;
    }

    public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()
    {
        org.apache.http.conn.scheme.SchemeRegistry $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        return $r1;
    }

    public org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 $r5;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r3;
        java.lang.Object r2;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r4;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        $r4 = virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r1, r2);

        $r5 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        specialinvoke $r5.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.tsccm.PoolEntryRequest,org.apache.http.conn.routing.HttpRoute)>(r0, $r4, r1);

        return $r5;
    }

    public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter r1;
        org.apache.http.impl.conn.AbstractPoolEntry $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.http.conn.ClientConnectionManager $r8;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r24, $r25, $r26;
        java.lang.Throwable $r12, $r13;
        long l0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r4;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r9;
        java.io.IOException $r17;
        org.apache.http.conn.ManagedClientConnection r0;
        java.lang.IllegalArgumentException $r10, $r11;
        java.util.concurrent.TimeUnit r5;
        org.apache.commons.logging.Log $r6, $r7, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23;

        r4 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r0 := @parameter0: org.apache.http.conn.ManagedClientConnection;

        l0 := @parameter1: long;

        r5 := @parameter2: java.util.concurrent.TimeUnit;

        $z0 = r0 instanceof org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter;

        if $z0 != 0 goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection class mismatch, connection not obtained from this manager.");

        throw $r11;

     label01:
        r1 = (org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter) r0;

        $r2 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        if $r2 == null goto label02;

        $r8 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>();

        if $r8 == r4 goto label02;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection not obtained from this manager.");

        throw $r10;

     label02:
        entermonitor r1;

     label03:
        $r3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>();

        $r9 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r3;

        if $r9 != null goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        $z1 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: boolean isOpen()>();

        if $z1 == 0 goto label06;

        $z2 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: boolean isMarkedReusable()>();

        if $z2 != 0 goto label06;

        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void shutdown()>();

     label06:
        $z8 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: boolean isMarkedReusable()>();

        $r23 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z9 = interfaceinvoke $r23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z9 == 0 goto label08;

        if $z8 == 0 goto label07;

        $r7 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is reusable.");

        goto label08;

     label07:
        $r6 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is not reusable.");

     label08:
        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        $r24 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r24.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r9, $z8, l0, r5);

        goto label17;

     label09:
        $r17 := @caughtexception;

        $r18 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r18.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label10;

        $r22 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Exception shutting down released connection.", $r17);

     label10:
        $z6 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: boolean isMarkedReusable()>();

        $r19 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z7 = interfaceinvoke $r19.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z7 == 0 goto label12;

        if $z6 == 0 goto label11;

        $r21 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is reusable.");

        goto label12;

     label11:
        $r20 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is not reusable.");

     label12:
        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        $r25 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r25.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r9, $z6, l0, r5);

        goto label17;

     label13:
        $r13 := @caughtexception;

     label14:
        $z3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: boolean isMarkedReusable()>();

        $r14 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label16;

        if $z3 == 0 goto label15;

        $r16 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is reusable.");

        goto label16;

     label15:
        $r15 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Released connection is not reusable.");

     label16:
        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>();

        $r26 = r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r26.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>($r9, $z3, l0, r5);

        throw $r13;

     label17:
        exitmonitor r1;

     label18:
        goto label21;

     label19:
        $r12 := @caughtexception;

        exitmonitor r1;

     label20:
        throw $r12;

     label21:
        return;

        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r2;
        org.apache.commons.logging.Log $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Shutting down");

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void shutdown()>();

        return;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r2;
        int $i0;
        org.apache.http.conn.routing.HttpRoute r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        $i0 = virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>(r1);

        return $i0;
    }

    public int getConnectionsInPool()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r1;
        int $i0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        $i0 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()>();

        return $i0;
    }

    public void closeIdleConnections(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r2;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r3;
        org.apache.commons.logging.Log $r1, $r5;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connections idle longer than ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r3.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>(l0, r2);

        return;
    }

    public void closeExpiredConnections()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r2;
        org.apache.commons.logging.Log $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing expired connections");

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r2.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeExpiredConnections()>();

        return;
    }

    public int getMaxTotal()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r1;
        int $i0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        $i0 = virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()>();

        return $i0;
    }

    public void setMaxTotal(int)
    {
        int i0;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool>;

        virtualinvoke $r1.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void setMaxTotalConnections(int)>(i0);

        return;
    }

    public int getDefaultMaxPerRoute()
    {
        int $i0;
        org.apache.http.conn.params.ConnPerRouteBean $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute>;

        $i0 = virtualinvoke $r1.<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMaxPerRoute()>();

        return $i0;
    }

    public void setDefaultMaxPerRoute(int)
    {
        int i0;
        org.apache.http.conn.params.ConnPerRouteBean $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute>;

        virtualinvoke $r1.<org.apache.http.conn.params.ConnPerRouteBean: void setDefaultMaxPerRoute(int)>(i0);

        return;
    }

    public int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.conn.params.ConnPerRouteBean $r2;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        int $i0;
        org.apache.http.conn.routing.HttpRoute r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute>;

        $i0 = virtualinvoke $r2.<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>(r1);

        return $i0;
    }

    public void setMaxForRoute(org.apache.http.conn.routing.HttpRoute, int)
    {
        org.apache.http.conn.params.ConnPerRouteBean $r2;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;
        int i0;
        org.apache.http.conn.routing.HttpRoute r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.params.ConnPerRouteBean connPerRoute>;

        virtualinvoke $r2.<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)>(r1, i0);

        return;
    }

    static org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)
    {
        org.apache.commons.logging.Log $r1;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r0;

        r0 := @parameter0: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log log>;

        return $r1;
    }
}
