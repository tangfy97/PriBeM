public class org.bouncycastle.crypto.engines.RC2Engine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private static byte[] piTable;
    private static final int BLOCK_SIZE;
    private int[] workingKey;
    private boolean encrypting;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.RC2Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private int[] generateWorkingKey(byte[], int)
    {
        byte[] r1, $r2, $r3, $r4;
        byte $b9, $b23, $b29, $b34;
        int[] r0, r6;
        org.bouncycastle.crypto.engines.RC2Engine r5;
        short $s31, $s33, $s35, s40, $s43, $s45, $s48, $s51;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i30, $i32, i36, i37, i38, i39, i41, i42, $i44, $i46, $i47, $i49, $i50, $i52, $i54;

        r5 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        r0 = newarray (int)[128];

        i36 = 0;

     label1:
        $i0 = lengthof r1;

        if i36 == $i0 goto label2;

        $b34 = r1[i36];

        $s43 = (short) $b34;

        $s35 = $s43 & 255;

        $i44 = (int) $s35;

        r0[i36] = $i44;

        i36 = i36 + 1;

        goto label1;

     label2:
        i37 = lengthof r1;

        if i37 >= 128 goto label4;

        i38 = 0;

        $i24 = i37 - 1;

        i39 = r0[$i24];

     label3:
        $r4 = <org.bouncycastle.crypto.engines.RC2Engine: byte[] piTable>;

        $i25 = i38;

        i38 = i38 + 1;

        $i26 = r0[$i25];

        $i27 = i39 + $i26;

        $i28 = $i27 & 255;

        $b29 = $r4[$i28];

        $s45 = (short) $b29;

        $s31 = $s45 & 255;

        $i46 = (int) $s31;

        i39 = $i46;

        $i30 = i37;

        i37 = i37 + 1;

        $i47 = (int) $s31;

        r0[$i30] = $i47;

        if i37 < 128 goto label3;

     label4:
        $i2 = i1 + 7;

        $i32 = $i2 >> 3;

        $r2 = <org.bouncycastle.crypto.engines.RC2Engine: byte[] piTable>;

        $i3 = 128 - $i32;

        $i7 = r0[$i3];

        $i4 = neg i1;

        $i5 = 7 & $i4;

        $i6 = 255 >> $i5;

        $i8 = $i7 & $i6;

        $b9 = $r2[$i8];

        $s48 = (short) $b9;

        $s33 = $s48 & 255;

        s40 = $s33;

        $i10 = 128 - $i32;

        $i49 = (int) $s33;

        r0[$i10] = $i49;

        $i11 = 128 - $i32;

        i41 = $i11 - 1;

     label5:
        if i41 < 0 goto label6;

        $r3 = <org.bouncycastle.crypto.engines.RC2Engine: byte[] piTable>;

        $i20 = i41 + $i32;

        $i21 = r0[$i20];

        $i50 = (int) s40;

        $i22 = $i50 ^ $i21;

        $b23 = $r3[$i22];

        $s51 = (short) $b23;

        s40 = $s51 & 255;

        $i52 = (int) s40;

        r0[i41] = $i52;

        $i54 = (int) -1;

        i41 = i41 + $i54;

        goto label5;

     label6:
        r6 = newarray (int)[64];

        i42 = 0;

     label7:
        $i12 = lengthof r6;

        if i42 == $i12 goto label8;

        $i13 = 2 * i42;

        $i18 = r0[$i13];

        $i14 = 2 * i42;

        $i15 = $i14 + 1;

        $i16 = r0[$i15];

        $i17 = $i16 << 8;

        $i19 = $i18 + $i17;

        r6[i42] = $i19;

        i42 = i42 + 1;

        goto label7;

     label8:
        return r6;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r10, $r12;
        int[] $r11, $r13;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r8;
        org.bouncycastle.crypto.params.KeyParameter $r9;
        boolean z0, $z1, $z2;
        org.bouncycastle.crypto.CipherParameters r1;
        java.lang.IllegalArgumentException $r2;
        org.bouncycastle.crypto.engines.RC2Engine r0;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;
        org.bouncycastle.crypto.params.RC2Parameters r14;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.RC2Engine: boolean encrypting> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.RC2Parameters;

        if $z1 == 0 goto label1;

        r14 = (org.bouncycastle.crypto.params.RC2Parameters) r1;

        $r12 = virtualinvoke r14.<org.bouncycastle.crypto.params.RC2Parameters: byte[] getKey()>();

        $i2 = virtualinvoke r14.<org.bouncycastle.crypto.params.RC2Parameters: int getEffectiveKeyBits()>();

        $r13 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC2Engine: int[] generateWorkingKey(byte[],int)>($r12, $i2);

        r0.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey> = $r13;

        goto label3;

     label1:
        $z2 = r1 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z2 == 0 goto label2;

        $r9 = (org.bouncycastle.crypto.params.KeyParameter) r1;

        $r10 = virtualinvoke $r9.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $i0 = lengthof $r10;

        $i1 = $i0 * 8;

        $r11 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC2Engine: int[] generateWorkingKey(byte[],int)>($r10, $i1);

        r0.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey> = $r11;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to RC2 init - ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        return;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.RC2Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.RC2Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        return "RC2";
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.RC2Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        return 8;
    }

    public final int processBlock(byte[], int, byte[], int)
    {
        byte[] r2, r3;
        java.lang.IllegalStateException $r6;
        org.bouncycastle.crypto.engines.RC2Engine r0;
        org.bouncycastle.crypto.DataLengthException $r4, $r5;
        int[] $r1;
        int i0, $i1, $i2, i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i3 := @parameter3: int;

        $r1 = r0.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RC2 engine not initialised");

        throw $r6;

     label1:
        $i2 = i0 + 8;

        $i1 = lengthof r2;

        if $i2 <= $i1 goto label2;

        $r5 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r5.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r5;

     label2:
        $i5 = i3 + 8;

        $i4 = lengthof r3;

        if $i5 <= $i4 goto label3;

        $r4 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r4;

     label3:
        $z0 = r0.<org.bouncycastle.crypto.engines.RC2Engine: boolean encrypting>;

        if $z0 == 0 goto label4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.RC2Engine: void encryptBlock(byte[],int,byte[],int)>(r2, i0, r3, i3);

        goto label5;

     label4:
        specialinvoke r0.<org.bouncycastle.crypto.engines.RC2Engine: void decryptBlock(byte[],int,byte[],int)>(r2, i0, r3, i3);

     label5:
        return 8;
    }

    private int rotateWordLeft(int, int)
    {
        org.bouncycastle.crypto.engines.RC2Engine r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, $i8;

        r0 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        $i8 = (int) 65535;

        i6 = i5 & $i8;

        $i3 = i6 << i0;

        $i1 = 16 - i0;

        $i2 = i6 >> $i1;

        $i4 = $i3 | $i2;

        return $i4;
    }

    private void encryptBlock(byte[], int, byte[], int)
    {
        byte[] r0, r10;
        byte $b2, $b5, $b9, $b12, $b16, $b19, $b23, $b26, $b46, $b49, $b51, $b54, $b56, $b59, $b61, $b64;
        short $s3, $s6, $s10, $s13, $s17, $s20, $s24, $s27, $s183, $s185, $s187, $s189, $s191, $s193, $s195, $s197;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        org.bouncycastle.crypto.engines.RC2Engine r1;
        int i0, $i1, $i4, $i7, $i8, $i11, $i14, $i15, $i18, $i21, $i22, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, $i47, $i48, $i50, $i52, $i53, $i55, $i57, $i58, $i60, $i62, $i63, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, i168, i169, i170, i171, i172, i173, i174, i175, i176, i177, i178, i179, i180, i181, i182, $i184, $i186, $i188, $i190, $i192, $i194, $i196, $i198, $i200, $i202, $i204, $i206, $i208, $i210, $i212, $i214, $i216, $i218, $i220, $i222;

        r1 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r10 := @parameter2: byte[];

        i45 := @parameter3: int;

        $i1 = i0 + 7;

        $b2 = r0[$i1];

        $s183 = (short) $b2;

        $s3 = $s183 & 255;

        $i184 = (int) $s3;

        $i7 = $i184 << 8;

        $i4 = i0 + 6;

        $b5 = r0[$i4];

        $s185 = (short) $b5;

        $s6 = $s185 & 255;

        $i186 = (int) $s6;

        i168 = $i7 + $i186;

        $i8 = i0 + 5;

        $b9 = r0[$i8];

        $s187 = (short) $b9;

        $s10 = $s187 & 255;

        $i188 = (int) $s10;

        $i14 = $i188 << 8;

        $i11 = i0 + 4;

        $b12 = r0[$i11];

        $s189 = (short) $b12;

        $s13 = $s189 & 255;

        $i190 = (int) $s13;

        i169 = $i14 + $i190;

        $i15 = i0 + 3;

        $b16 = r0[$i15];

        $s191 = (short) $b16;

        $s17 = $s191 & 255;

        $i192 = (int) $s17;

        $i21 = $i192 << 8;

        $i18 = i0 + 2;

        $b19 = r0[$i18];

        $s193 = (short) $b19;

        $s20 = $s193 & 255;

        $i194 = (int) $s20;

        i170 = $i21 + $i194;

        $i22 = i0 + 1;

        $b23 = r0[$i22];

        $s195 = (short) $b23;

        $s24 = $s195 & 255;

        $i196 = (int) $s24;

        $i28 = $i196 << 8;

        $i25 = i0 + 0;

        $b26 = r0[$i25];

        $s197 = (short) $b26;

        $s27 = $s197 & 255;

        $i198 = (int) $s27;

        i171 = $i28 + $i198;

        i172 = 0;

     label1:
        if i172 > 16 goto label2;

        $i200 = (int) -1;

        $i134 = i168 ^ $i200;

        $i135 = i170 & $i134;

        $i137 = i171 + $i135;

        $i136 = i169 & i168;

        $i139 = $i137 + $i136;

        $r19 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i138 = $r19[i172];

        $i140 = $i139 + $i138;

        $i141 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i140, 1);

        i171 = $i141;

        $i202 = (int) -1;

        $i142 = $i141 ^ $i202;

        $i143 = i169 & $i142;

        $i145 = i170 + $i143;

        $i144 = i168 & $i141;

        $i148 = $i145 + $i144;

        $r20 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i146 = i172 + 1;

        $i147 = $r20[$i146];

        $i149 = $i148 + $i147;

        $i150 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i149, 2);

        i170 = $i150;

        $i204 = (int) -1;

        $i151 = $i150 ^ $i204;

        $i152 = i168 & $i151;

        $i154 = i169 + $i152;

        $i153 = $i141 & $i150;

        $i157 = $i154 + $i153;

        $r21 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i155 = i172 + 2;

        $i156 = $r21[$i155];

        $i158 = $i157 + $i156;

        $i159 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i158, 3);

        i169 = $i159;

        $i206 = (int) -1;

        $i160 = $i159 ^ $i206;

        $i161 = $i141 & $i160;

        $i163 = i168 + $i161;

        $i162 = $i150 & $i159;

        $i166 = $i163 + $i162;

        $r22 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i164 = i172 + 3;

        $i165 = $r22[$i164];

        $i167 = $i166 + $i165;

        i168 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i167, 5);

        i172 = i172 + 4;

        goto label1;

     label2:
        $r2 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i29 = i168 & 63;

        $i30 = $r2[$i29];

        i173 = i171 + $i30;

        $r3 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i31 = i173 & 63;

        $i32 = $r3[$i31];

        i174 = i170 + $i32;

        $r4 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i33 = i174 & 63;

        $i34 = $r4[$i33];

        i175 = i169 + $i34;

        $r5 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i35 = i175 & 63;

        $i36 = $r5[$i35];

        i176 = i168 + $i36;

        i177 = 20;

     label3:
        if i177 > 40 goto label4;

        $i208 = (int) -1;

        $i100 = i176 ^ $i208;

        $i101 = i174 & $i100;

        $i103 = i173 + $i101;

        $i102 = i175 & i176;

        $i105 = $i103 + $i102;

        $r15 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i104 = $r15[i177];

        $i106 = $i105 + $i104;

        $i107 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i106, 1);

        i173 = $i107;

        $i210 = (int) -1;

        $i108 = $i107 ^ $i210;

        $i109 = i175 & $i108;

        $i111 = i174 + $i109;

        $i110 = i176 & $i107;

        $i114 = $i111 + $i110;

        $r16 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i112 = i177 + 1;

        $i113 = $r16[$i112];

        $i115 = $i114 + $i113;

        $i116 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i115, 2);

        i174 = $i116;

        $i212 = (int) -1;

        $i117 = $i116 ^ $i212;

        $i118 = i176 & $i117;

        $i120 = i175 + $i118;

        $i119 = $i107 & $i116;

        $i123 = $i120 + $i119;

        $r17 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i121 = i177 + 2;

        $i122 = $r17[$i121];

        $i124 = $i123 + $i122;

        $i125 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i124, 3);

        i175 = $i125;

        $i214 = (int) -1;

        $i126 = $i125 ^ $i214;

        $i127 = $i107 & $i126;

        $i129 = i176 + $i127;

        $i128 = $i116 & $i125;

        $i132 = $i129 + $i128;

        $r18 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i130 = i177 + 3;

        $i131 = $r18[$i130];

        $i133 = $i132 + $i131;

        i176 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i133, 5);

        i177 = i177 + 4;

        goto label3;

     label4:
        $r6 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i37 = i176 & 63;

        $i38 = $r6[$i37];

        i178 = i173 + $i38;

        $r7 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i39 = i178 & 63;

        $i40 = $r7[$i39];

        i179 = i174 + $i40;

        $r8 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i41 = i179 & 63;

        $i42 = $r8[$i41];

        i180 = i175 + $i42;

        $r9 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i43 = i180 & 63;

        $i44 = $r9[$i43];

        i181 = i176 + $i44;

        i182 = 44;

     label5:
        if i182 >= 64 goto label6;

        $i216 = (int) -1;

        $i66 = i181 ^ $i216;

        $i67 = i179 & $i66;

        $i69 = i178 + $i67;

        $i68 = i180 & i181;

        $i71 = $i69 + $i68;

        $r11 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i70 = $r11[i182];

        $i72 = $i71 + $i70;

        $i73 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i72, 1);

        i178 = $i73;

        $i218 = (int) -1;

        $i74 = $i73 ^ $i218;

        $i75 = i180 & $i74;

        $i77 = i179 + $i75;

        $i76 = i181 & $i73;

        $i80 = $i77 + $i76;

        $r12 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i78 = i182 + 1;

        $i79 = $r12[$i78];

        $i81 = $i80 + $i79;

        $i82 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i81, 2);

        i179 = $i82;

        $i220 = (int) -1;

        $i83 = $i82 ^ $i220;

        $i84 = i181 & $i83;

        $i86 = i180 + $i84;

        $i85 = $i73 & $i82;

        $i89 = $i86 + $i85;

        $r13 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i87 = i182 + 2;

        $i88 = $r13[$i87];

        $i90 = $i89 + $i88;

        $i91 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i90, 3);

        i180 = $i91;

        $i222 = (int) -1;

        $i92 = $i91 ^ $i222;

        $i93 = $i73 & $i92;

        $i95 = i181 + $i93;

        $i94 = $i82 & $i91;

        $i98 = $i95 + $i94;

        $r14 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i96 = i182 + 3;

        $i97 = $r14[$i96];

        $i99 = $i98 + $i97;

        i181 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>($i99, 5);

        i182 = i182 + 4;

        goto label5;

     label6:
        $i47 = i45 + 0;

        $b46 = (byte) i178;

        r10[$i47] = $b46;

        $i50 = i45 + 1;

        $i48 = i178 >> 8;

        $b49 = (byte) $i48;

        r10[$i50] = $b49;

        $i52 = i45 + 2;

        $b51 = (byte) i179;

        r10[$i52] = $b51;

        $i55 = i45 + 3;

        $i53 = i179 >> 8;

        $b54 = (byte) $i53;

        r10[$i55] = $b54;

        $i57 = i45 + 4;

        $b56 = (byte) i180;

        r10[$i57] = $b56;

        $i60 = i45 + 5;

        $i58 = i180 >> 8;

        $b59 = (byte) $i58;

        r10[$i60] = $b59;

        $i62 = i45 + 6;

        $b61 = (byte) i181;

        r10[$i62] = $b61;

        $i65 = i45 + 7;

        $i63 = i181 >> 8;

        $b64 = (byte) $i63;

        r10[$i65] = $b64;

        return;
    }

    private void decryptBlock(byte[], int, byte[], int)
    {
        byte[] r0, r10;
        byte $b2, $b5, $b9, $b12, $b16, $b19, $b23, $b26, $b46, $b49, $b51, $b54, $b56, $b59, $b61, $b64;
        short $s3, $s6, $s10, $s13, $s17, $s20, $s24, $s27, $s174, $s176, $s178, $s180, $s182, $s184, $s186, $s188;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        org.bouncycastle.crypto.engines.RC2Engine r1;
        int i0, $i1, $i4, $i7, $i8, $i11, $i14, $i15, $i18, $i21, $i22, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, $i47, $i48, $i50, $i52, $i53, $i55, $i57, $i58, $i60, $i62, $i63, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, i159, i160, i161, i162, i163, i164, i165, i166, i167, i168, i169, i170, i171, i172, i173, $i175, $i177, $i179, $i181, $i183, $i185, $i187, $i189, $i191, $i193, $i195, $i197, $i199, $i201, $i203, $i205, $i207, $i209, $i211, $i213, $i215, $i217, $i219;

        r1 := @this: org.bouncycastle.crypto.engines.RC2Engine;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r10 := @parameter2: byte[];

        i45 := @parameter3: int;

        $i1 = i0 + 7;

        $b2 = r0[$i1];

        $s174 = (short) $b2;

        $s3 = $s174 & 255;

        $i175 = (int) $s3;

        $i7 = $i175 << 8;

        $i4 = i0 + 6;

        $b5 = r0[$i4];

        $s176 = (short) $b5;

        $s6 = $s176 & 255;

        $i177 = (int) $s6;

        i159 = $i7 + $i177;

        $i8 = i0 + 5;

        $b9 = r0[$i8];

        $s178 = (short) $b9;

        $s10 = $s178 & 255;

        $i179 = (int) $s10;

        $i14 = $i179 << 8;

        $i11 = i0 + 4;

        $b12 = r0[$i11];

        $s180 = (short) $b12;

        $s13 = $s180 & 255;

        $i181 = (int) $s13;

        i160 = $i14 + $i181;

        $i15 = i0 + 3;

        $b16 = r0[$i15];

        $s182 = (short) $b16;

        $s17 = $s182 & 255;

        $i183 = (int) $s17;

        $i21 = $i183 << 8;

        $i18 = i0 + 2;

        $b19 = r0[$i18];

        $s184 = (short) $b19;

        $s20 = $s184 & 255;

        $i185 = (int) $s20;

        i161 = $i21 + $i185;

        $i22 = i0 + 1;

        $b23 = r0[$i22];

        $s186 = (short) $b23;

        $s24 = $s186 & 255;

        $i187 = (int) $s24;

        $i28 = $i187 << 8;

        $i25 = i0 + 0;

        $b26 = r0[$i25];

        $s188 = (short) $b26;

        $s27 = $s188 & 255;

        $i189 = (int) $s27;

        i162 = $i28 + $i189;

        i163 = 60;

     label1:
        if i163 < 44 goto label2;

        $i128 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i159, 11);

        $i191 = (int) -1;

        $i129 = i160 ^ $i191;

        $i131 = i162 & $i129;

        $i130 = i161 & i160;

        $i134 = $i131 + $i130;

        $r19 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i132 = i163 + 3;

        $i133 = $r19[$i132];

        $i135 = $i134 + $i133;

        i159 = $i128 - $i135;

        $i136 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i160, 13);

        $i193 = (int) -1;

        $i137 = i161 ^ $i193;

        $i139 = i159 & $i137;

        $i138 = i162 & i161;

        $i142 = $i139 + $i138;

        $r20 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i140 = i163 + 2;

        $i141 = $r20[$i140];

        $i143 = $i142 + $i141;

        i160 = $i136 - $i143;

        $i144 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i161, 14);

        $i195 = (int) -1;

        $i145 = i162 ^ $i195;

        $i147 = i160 & $i145;

        $i146 = i159 & i162;

        $i150 = $i147 + $i146;

        $r21 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i148 = i163 + 1;

        $i149 = $r21[$i148];

        $i151 = $i150 + $i149;

        i161 = $i144 - $i151;

        $i152 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i162, 15);

        $i197 = (int) -1;

        $i153 = i159 ^ $i197;

        $i155 = i161 & $i153;

        $i154 = i160 & i159;

        $i157 = $i155 + $i154;

        $r22 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i156 = $r22[i163];

        $i158 = $i157 + $i156;

        i162 = $i152 - $i158;

        $i199 = (int) -4;

        i163 = i163 + $i199;

        goto label1;

     label2:
        $r2 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i29 = i160 & 63;

        $i30 = $r2[$i29];

        i164 = i159 - $i30;

        $r3 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i31 = i161 & 63;

        $i32 = $r3[$i31];

        i165 = i160 - $i32;

        $r4 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i33 = i162 & 63;

        $i34 = $r4[$i33];

        i166 = i161 - $i34;

        $r5 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i35 = i164 & 63;

        $i36 = $r5[$i35];

        i167 = i162 - $i36;

        i168 = 40;

     label3:
        if i168 < 20 goto label4;

        $i97 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i164, 11);

        $i201 = (int) -1;

        $i98 = i165 ^ $i201;

        $i100 = i167 & $i98;

        $i99 = i166 & i165;

        $i103 = $i100 + $i99;

        $r15 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i101 = i168 + 3;

        $i102 = $r15[$i101];

        $i104 = $i103 + $i102;

        i164 = $i97 - $i104;

        $i105 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i165, 13);

        $i203 = (int) -1;

        $i106 = i166 ^ $i203;

        $i108 = i164 & $i106;

        $i107 = i167 & i166;

        $i111 = $i108 + $i107;

        $r16 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i109 = i168 + 2;

        $i110 = $r16[$i109];

        $i112 = $i111 + $i110;

        i165 = $i105 - $i112;

        $i113 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i166, 14);

        $i205 = (int) -1;

        $i114 = i167 ^ $i205;

        $i116 = i165 & $i114;

        $i115 = i164 & i167;

        $i119 = $i116 + $i115;

        $r17 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i117 = i168 + 1;

        $i118 = $r17[$i117];

        $i120 = $i119 + $i118;

        i166 = $i113 - $i120;

        $i121 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i167, 15);

        $i207 = (int) -1;

        $i122 = i164 ^ $i207;

        $i124 = i166 & $i122;

        $i123 = i165 & i164;

        $i126 = $i124 + $i123;

        $r18 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i125 = $r18[i168];

        $i127 = $i126 + $i125;

        i167 = $i121 - $i127;

        $i209 = (int) -4;

        i168 = i168 + $i209;

        goto label3;

     label4:
        $r6 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i37 = i165 & 63;

        $i38 = $r6[$i37];

        i169 = i164 - $i38;

        $r7 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i39 = i166 & 63;

        $i40 = $r7[$i39];

        i170 = i165 - $i40;

        $r8 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i41 = i167 & 63;

        $i42 = $r8[$i41];

        i171 = i166 - $i42;

        $r9 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i43 = i169 & 63;

        $i44 = $r9[$i43];

        i172 = i167 - $i44;

        i173 = 16;

     label5:
        if i173 < 0 goto label6;

        $i66 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i169, 11);

        $i211 = (int) -1;

        $i67 = i170 ^ $i211;

        $i69 = i172 & $i67;

        $i68 = i171 & i170;

        $i72 = $i69 + $i68;

        $r11 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i70 = i173 + 3;

        $i71 = $r11[$i70];

        $i73 = $i72 + $i71;

        i169 = $i66 - $i73;

        $i74 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i170, 13);

        $i213 = (int) -1;

        $i75 = i171 ^ $i213;

        $i77 = i169 & $i75;

        $i76 = i172 & i171;

        $i80 = $i77 + $i76;

        $r12 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i78 = i173 + 2;

        $i79 = $r12[$i78];

        $i81 = $i80 + $i79;

        i170 = $i74 - $i81;

        $i82 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i171, 14);

        $i215 = (int) -1;

        $i83 = i172 ^ $i215;

        $i85 = i170 & $i83;

        $i84 = i169 & i172;

        $i88 = $i85 + $i84;

        $r13 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i86 = i173 + 1;

        $i87 = $r13[$i86];

        $i89 = $i88 + $i87;

        i171 = $i82 - $i89;

        $i90 = specialinvoke r1.<org.bouncycastle.crypto.engines.RC2Engine: int rotateWordLeft(int,int)>(i172, 15);

        $i217 = (int) -1;

        $i91 = i169 ^ $i217;

        $i93 = i171 & $i91;

        $i92 = i170 & i169;

        $i95 = $i93 + $i92;

        $r14 = r1.<org.bouncycastle.crypto.engines.RC2Engine: int[] workingKey>;

        $i94 = $r14[i173];

        $i96 = $i95 + $i94;

        i172 = $i90 - $i96;

        $i219 = (int) -4;

        i173 = i173 + $i219;

        goto label5;

     label6:
        $i47 = i45 + 0;

        $b46 = (byte) i172;

        r10[$i47] = $b46;

        $i50 = i45 + 1;

        $i48 = i172 >> 8;

        $b49 = (byte) $i48;

        r10[$i50] = $b49;

        $i52 = i45 + 2;

        $b51 = (byte) i171;

        r10[$i52] = $b51;

        $i55 = i45 + 3;

        $i53 = i171 >> 8;

        $b54 = (byte) $i53;

        r10[$i55] = $b54;

        $i57 = i45 + 4;

        $b56 = (byte) i170;

        r10[$i57] = $b56;

        $i60 = i45 + 5;

        $i58 = i170 >> 8;

        $b59 = (byte) $i58;

        r10[$i60] = $b59;

        $i62 = i45 + 6;

        $b61 = (byte) i169;

        r10[$i62] = $b61;

        $i65 = i45 + 7;

        $i63 = i169 >> 8;

        $b64 = (byte) $i63;

        r10[$i65] = $b64;

        return;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.bouncycastle.crypto.engines.RC2Engine: int BLOCK_SIZE> = 8;

        $r0 = newarray (byte)[256];

        $r0[0] = -39;

        $r0[1] = 120;

        $r0[2] = -7;

        $r0[3] = -60;

        $r0[4] = 25;

        $r0[5] = -35;

        $r0[6] = -75;

        $r0[7] = -19;

        $r0[8] = 40;

        $r0[9] = -23;

        $r0[10] = -3;

        $r0[11] = 121;

        $r0[12] = 74;

        $r0[13] = -96;

        $r0[14] = -40;

        $r0[15] = -99;

        $r0[16] = -58;

        $r0[17] = 126;

        $r0[18] = 55;

        $r0[19] = -125;

        $r0[20] = 43;

        $r0[21] = 118;

        $r0[22] = 83;

        $r0[23] = -114;

        $r0[24] = 98;

        $r0[25] = 76;

        $r0[26] = 100;

        $r0[27] = -120;

        $r0[28] = 68;

        $r0[29] = -117;

        $r0[30] = -5;

        $r0[31] = -94;

        $r0[32] = 23;

        $r0[33] = -102;

        $r0[34] = 89;

        $r0[35] = -11;

        $r0[36] = -121;

        $r0[37] = -77;

        $r0[38] = 79;

        $r0[39] = 19;

        $r0[40] = 97;

        $r0[41] = 69;

        $r0[42] = 109;

        $r0[43] = -115;

        $r0[44] = 9;

        $r0[45] = -127;

        $r0[46] = 125;

        $r0[47] = 50;

        $r0[48] = -67;

        $r0[49] = -113;

        $r0[50] = 64;

        $r0[51] = -21;

        $r0[52] = -122;

        $r0[53] = -73;

        $r0[54] = 123;

        $r0[55] = 11;

        $r0[56] = -16;

        $r0[57] = -107;

        $r0[58] = 33;

        $r0[59] = 34;

        $r0[60] = 92;

        $r0[61] = 107;

        $r0[62] = 78;

        $r0[63] = -126;

        $r0[64] = 84;

        $r0[65] = -42;

        $r0[66] = 101;

        $r0[67] = -109;

        $r0[68] = -50;

        $r0[69] = 96;

        $r0[70] = -78;

        $r0[71] = 28;

        $r0[72] = 115;

        $r0[73] = 86;

        $r0[74] = -64;

        $r0[75] = 20;

        $r0[76] = -89;

        $r0[77] = -116;

        $r0[78] = -15;

        $r0[79] = -36;

        $r0[80] = 18;

        $r0[81] = 117;

        $r0[82] = -54;

        $r0[83] = 31;

        $r0[84] = 59;

        $r0[85] = -66;

        $r0[86] = -28;

        $r0[87] = -47;

        $r0[88] = 66;

        $r0[89] = 61;

        $r0[90] = -44;

        $r0[91] = 48;

        $r0[92] = -93;

        $r0[93] = 60;

        $r0[94] = -74;

        $r0[95] = 38;

        $r0[96] = 111;

        $r0[97] = -65;

        $r0[98] = 14;

        $r0[99] = -38;

        $r0[100] = 70;

        $r0[101] = 105;

        $r0[102] = 7;

        $r0[103] = 87;

        $r0[104] = 39;

        $r0[105] = -14;

        $r0[106] = 29;

        $r0[107] = -101;

        $r0[108] = -68;

        $r0[109] = -108;

        $r0[110] = 67;

        $r0[111] = 3;

        $r0[112] = -8;

        $r0[113] = 17;

        $r0[114] = -57;

        $r0[115] = -10;

        $r0[116] = -112;

        $r0[117] = -17;

        $r0[118] = 62;

        $r0[119] = -25;

        $r0[120] = 6;

        $r0[121] = -61;

        $r0[122] = -43;

        $r0[123] = 47;

        $r0[124] = -56;

        $r0[125] = 102;

        $r0[126] = 30;

        $r0[127] = -41;

        $r0[128] = 8;

        $r0[129] = -24;

        $r0[130] = -22;

        $r0[131] = -34;

        $r0[132] = -128;

        $r0[133] = 82;

        $r0[134] = -18;

        $r0[135] = -9;

        $r0[136] = -124;

        $r0[137] = -86;

        $r0[138] = 114;

        $r0[139] = -84;

        $r0[140] = 53;

        $r0[141] = 77;

        $r0[142] = 106;

        $r0[143] = 42;

        $r0[144] = -106;

        $r0[145] = 26;

        $r0[146] = -46;

        $r0[147] = 113;

        $r0[148] = 90;

        $r0[149] = 21;

        $r0[150] = 73;

        $r0[151] = 116;

        $r0[152] = 75;

        $r0[153] = -97;

        $r0[154] = -48;

        $r0[155] = 94;

        $r0[156] = 4;

        $r0[157] = 24;

        $r0[158] = -92;

        $r0[159] = -20;

        $r0[160] = -62;

        $r0[161] = -32;

        $r0[162] = 65;

        $r0[163] = 110;

        $r0[164] = 15;

        $r0[165] = 81;

        $r0[166] = -53;

        $r0[167] = -52;

        $r0[168] = 36;

        $r0[169] = -111;

        $r0[170] = -81;

        $r0[171] = 80;

        $r0[172] = -95;

        $r0[173] = -12;

        $r0[174] = 112;

        $r0[175] = 57;

        $r0[176] = -103;

        $r0[177] = 124;

        $r0[178] = 58;

        $r0[179] = -123;

        $r0[180] = 35;

        $r0[181] = -72;

        $r0[182] = -76;

        $r0[183] = 122;

        $r0[184] = -4;

        $r0[185] = 2;

        $r0[186] = 54;

        $r0[187] = 91;

        $r0[188] = 37;

        $r0[189] = 85;

        $r0[190] = -105;

        $r0[191] = 49;

        $r0[192] = 45;

        $r0[193] = 93;

        $r0[194] = -6;

        $r0[195] = -104;

        $r0[196] = -29;

        $r0[197] = -118;

        $r0[198] = -110;

        $r0[199] = -82;

        $r0[200] = 5;

        $r0[201] = -33;

        $r0[202] = 41;

        $r0[203] = 16;

        $r0[204] = 103;

        $r0[205] = 108;

        $r0[206] = -70;

        $r0[207] = -55;

        $r0[208] = -45;

        $r0[209] = 0;

        $r0[210] = -26;

        $r0[211] = -49;

        $r0[212] = -31;

        $r0[213] = -98;

        $r0[214] = -88;

        $r0[215] = 44;

        $r0[216] = 99;

        $r0[217] = 22;

        $r0[218] = 1;

        $r0[219] = 63;

        $r0[220] = 88;

        $r0[221] = -30;

        $r0[222] = -119;

        $r0[223] = -87;

        $r0[224] = 13;

        $r0[225] = 56;

        $r0[226] = 52;

        $r0[227] = 27;

        $r0[228] = -85;

        $r0[229] = 51;

        $r0[230] = -1;

        $r0[231] = -80;

        $r0[232] = -69;

        $r0[233] = 72;

        $r0[234] = 12;

        $r0[235] = 95;

        $r0[236] = -71;

        $r0[237] = -79;

        $r0[238] = -51;

        $r0[239] = 46;

        $r0[240] = -59;

        $r0[241] = -13;

        $r0[242] = -37;

        $r0[243] = 71;

        $r0[244] = -27;

        $r0[245] = -91;

        $r0[246] = -100;

        $r0[247] = 119;

        $r0[248] = 10;

        $r0[249] = -90;

        $r0[250] = 32;

        $r0[251] = 104;

        $r0[252] = -2;

        $r0[253] = 127;

        $r0[254] = -63;

        $r0[255] = -83;

        <org.bouncycastle.crypto.engines.RC2Engine: byte[] piTable> = $r0;

        return;
    }
}
