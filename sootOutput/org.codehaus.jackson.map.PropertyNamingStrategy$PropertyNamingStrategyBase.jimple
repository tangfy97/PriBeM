public abstract class org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase extends org.codehaus.jackson.map.PropertyNamingStrategy
{

    public void <init>()
    {
        org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase;

        specialinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy: void <init>()>();

        return;
    }

    public java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedField, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r4;
        java.lang.String r1, $r2;
        org.codehaus.jackson.map.MapperConfig r3;
        org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase;

        r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedField;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r4;
        java.lang.String r1, $r2;
        org.codehaus.jackson.map.MapperConfig r3;
        org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase;

        r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r4;
        java.lang.String r1, $r2;
        org.codehaus.jackson.map.MapperConfig r3;
        org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase;

        r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedParameter, java.lang.String)
    {
        java.lang.String r1, $r2;
        org.codehaus.jackson.map.MapperConfig r3;
        org.codehaus.jackson.map.introspect.AnnotatedParameter r4;
        org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase;

        r3 := @parameter0: org.codehaus.jackson.map.MapperConfig;

        r4 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedParameter;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase: java.lang.String translate(java.lang.String)>(r1);

        return $r2;
    }

    public abstract java.lang.String translate(java.lang.String);
}
