public final class com.sun.xml.bind.v2.ClassFactory extends java.lang.Object
{
    private static final java.lang.Class[] emptyClass;
    private static final java.lang.Object[] emptyObject;
    private static final java.util.logging.Logger logger;
    private static final java.lang.ThreadLocal tls;

    public void <init>()
    {
        com.sun.xml.bind.v2.ClassFactory r0;

        r0 := @this: com.sun.xml.bind.v2.ClassFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void cleanCache()
    {
        java.lang.ThreadLocal $r0, $r1;
        java.lang.String $r5;
        java.util.logging.Logger $r3;
        java.lang.Exception $r2;
        java.util.logging.Level $r4;

        $r0 = <com.sun.xml.bind.v2.ClassFactory: java.lang.ThreadLocal tls>;

        if $r0 == null goto label4;

     label1:
        $r1 = <com.sun.xml.bind.v2.ClassFactory: java.lang.ThreadLocal tls>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void remove()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r5 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r4, "Unable to clean Thread Local cache of classes used in Unmarshaller: {0}", $r5);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Object create0(java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        com.sun.xml.bind.v2.Messages $r30;
        java.lang.NoSuchMethodException $r18;
        java.util.Map r2;
        java.lang.SecurityException $r10;
        boolean $z0, $z1, $z2;
        java.lang.ThreadLocal $r0;
        java.util.logging.Logger $r12, $r20;
        java.lang.StringBuilder $r11, $r14, $r15, $r16, $r19, $r22, $r23;
        java.lang.Object[] $r29, $r35;
        java.lang.reflect.Constructor $r7, r33;
        java.util.logging.Level $r13, $r21;
        int $i0, $i1, $i2;
        java.lang.String $r17, $r24, $r27, $r31, $r32;
        java.lang.ref.WeakReference r5, $r8;
        java.lang.NoSuchMethodError $r26, $r28, r34;
        java.lang.Class[] $r6;
        java.lang.Object $r1, $r4, $r9, $r36;
        java.lang.Class r3, $r25;

        r3 := @parameter0: java.lang.Class;

        $r0 = <com.sun.xml.bind.v2.ClassFactory: java.lang.ThreadLocal tls>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.util.Map) $r1;

        r33 = null;

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.ref.WeakReference) $r4;

        if r5 == null goto label01;

        $r9 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r33 = (java.lang.reflect.Constructor) $r9;

     label01:
        if r33 != null goto label12;

     label02:
        $r6 = <com.sun.xml.bind.v2.ClassFactory: java.lang.Class[] emptyClass>;

        $r7 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6);

        r33 = $r7;

     label03:
        goto label07;

     label04:
        $r18 := @caughtexception;

        $r20 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r21 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default constructor found on ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r21, $r24, $r18);

        $r25 = virtualinvoke r3.<java.lang.Class: java.lang.Class getDeclaringClass()>();

        if $r25 == null goto label05;

        $i2 = virtualinvoke r3.<java.lang.Class: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z2 != 0 goto label05;

        $r28 = new java.lang.NoSuchMethodError;

        $r30 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages NO_DEFAULT_CONSTRUCTOR_IN_INNER_CLASS>;

        $r29 = newarray (java.lang.Object)[1];

        $r31 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r29[0] = $r31;

        $r32 = virtualinvoke $r30.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r29);

        specialinvoke $r28.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>($r32);

        r34 = $r28;

        goto label06;

     label05:
        $r26 = new java.lang.NoSuchMethodError;

        $r27 = virtualinvoke $r18.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r26.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>($r27);

        r34 = $r26;

     label06:
        virtualinvoke r34.<java.lang.NoSuchMethodError: java.lang.Throwable initCause(java.lang.Throwable)>($r18);

        throw r34;

     label07:
        $i0 = virtualinvoke r3.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label08;

        $i1 = virtualinvoke $r7.<java.lang.reflect.Constructor: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 != 0 goto label11;

     label08:
        virtualinvoke $r7.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r12 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make the constructor of ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" accessible");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r13, $r17, $r10);

        throw $r10;

     label11:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

     label12:
        $r35 = <com.sun.xml.bind.v2.ClassFactory: java.lang.Object[] emptyObject>;

        $r36 = virtualinvoke r33.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r35);

        return $r36;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.SecurityException from label08 to label09 with label10;
    }

    public static java.lang.Object create(java.lang.Class)
    {
        java.lang.Throwable $r3;
        java.lang.IllegalStateException $r4;
        java.lang.Error $r5;
        java.util.logging.Level $r10, $r19;
        java.lang.InstantiationException $r16;
        java.lang.String $r13, $r15, $r22, $r24;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r7;
        java.lang.RuntimeException $r6;
        java.util.logging.Logger $r9, $r18;
        java.lang.reflect.InvocationTargetException $r2;
        java.lang.InstantiationError $r23;
        java.lang.IllegalAccessError $r14;
        java.lang.Class r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r8, $r11, $r12, $r17, $r20, $r21;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create0(java.lang.Class)>(r0);

     label2:
        return $r1;

     label3:
        $r16 := @caughtexception;

        $r18 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r19 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, $r22, $r16);

        $r23 = new java.lang.InstantiationError;

        $r24 = virtualinvoke $r16.<java.lang.InstantiationException: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.InstantiationError: void <init>(java.lang.String)>($r24);

        throw $r23;

     label4:
        $r7 := @caughtexception;

        $r9 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r10 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r10, $r13, $r7);

        $r14 = new java.lang.IllegalAccessError;

        $r15 = virtualinvoke $r7.<java.lang.IllegalAccessException: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r15);

        throw $r14;

     label5:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z0 = $r3 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label6;

        $r6 = (java.lang.RuntimeException) $r3;

        throw $r6;

     label6:
        $z1 = $r3 instanceof java.lang.Error;

        if $z1 == 0 goto label7;

        $r5 = (java.lang.Error) $r3;

        throw $r5;

     label7:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static java.lang.Object create(java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r43;
        java.lang.NullPointerException $r12;
        java.lang.reflect.Method r0;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r30;
        java.util.logging.Logger $r5, $r14, $r23, $r32;
        java.lang.reflect.InvocationTargetException $r41;
        java.lang.IllegalAccessError $r39;
        java.lang.StringBuilder $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37;
        java.lang.Throwable $r42, r46;
        java.lang.Object[] $r1;
        java.lang.Error $r44;
        java.util.logging.Level $r6, $r15, $r24, $r33;
        java.lang.String $r9, $r11, $r18, $r20, $r27, $r29, $r36, $r38, $r40, $r48;
        java.lang.NoSuchMethodError $r47;
        java.lang.RuntimeException $r45;
        java.lang.IllegalArgumentException $r21;
        java.lang.Object $r2;
        java.lang.Class $r8, $r17, $r26, $r35;
        java.lang.ExceptionInInitializerError $r3;

        r0 := @parameter0: java.lang.reflect.Method;

     label01:
        $r1 = <com.sun.xml.bind.v2.ClassFactory: java.lang.Object[] emptyObject>;

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

     label02:
        return $r2;

     label03:
        $r41 := @caughtexception;

        $r42 = virtualinvoke $r41.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z0 = $r42 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label04;

        $r45 = (java.lang.RuntimeException) $r42;

        throw $r45;

     label04:
        $z1 = $r42 instanceof java.lang.Error;

        if $z1 == 0 goto label05;

        $r44 = (java.lang.Error) $r42;

        throw $r44;

     label05:
        $r43 = new java.lang.IllegalStateException;

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r42);

        throw $r43;

     label06:
        $r30 := @caughtexception;

        $r32 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r33 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r35 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.String getName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r33, $r38, $r30);

        $r39 = new java.lang.IllegalAccessError;

        $r40 = virtualinvoke $r30.<java.lang.IllegalAccessException: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r40);

        throw $r39;

     label07:
        $r21 := @caughtexception;

        $r23 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r24 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r26 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r24, $r29, $r21);

        r46 = $r21;

        goto label10;

     label08:
        $r12 := @caughtexception;

        $r14 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r15 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r17 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r15, $r20, $r12);

        r46 = $r12;

        goto label10;

     label09:
        $r3 := @caughtexception;

        $r5 = <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger>;

        $r6 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create a new instance of ");

        $r8 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, $r11, $r3);

        r46 = $r3;

     label10:
        $r47 = new java.lang.NoSuchMethodError;

        $r48 = virtualinvoke r46.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r47.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>($r48);

        virtualinvoke $r47.<java.lang.NoSuchMethodError: java.lang.Throwable initCause(java.lang.Throwable)>(r46);

        throw $r47;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label06;
        catch java.lang.IllegalArgumentException from label01 to label02 with label07;
        catch java.lang.NullPointerException from label01 to label02 with label08;
        catch java.lang.ExceptionInInitializerError from label01 to label02 with label09;
    }

    public static java.lang.Class inferImplClass(java.lang.Class, java.lang.Class[])
    {
        java.lang.Class[] r1;
        int i0, i1;
        java.lang.Class r0, r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(r0);

        return $r3;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        com.sun.xml.bind.v2.ClassFactory$1 $r3;
        java.lang.Class[] $r0;
        java.util.logging.Logger $r2;

        $r0 = newarray (java.lang.Class)[0];

        <com.sun.xml.bind.v2.ClassFactory: java.lang.Class[] emptyClass> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <com.sun.xml.bind.v2.ClassFactory: java.lang.Object[] emptyObject> = $r1;

        $r2 = staticinvoke <com.sun.xml.bind.Util: java.util.logging.Logger getClassLogger()>();

        <com.sun.xml.bind.v2.ClassFactory: java.util.logging.Logger logger> = $r2;

        $r3 = new com.sun.xml.bind.v2.ClassFactory$1;

        specialinvoke $r3.<com.sun.xml.bind.v2.ClassFactory$1: void <init>()>();

        <com.sun.xml.bind.v2.ClassFactory: java.lang.ThreadLocal tls> = $r3;

        return;
    }
}
