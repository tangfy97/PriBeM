class org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final int val$position;
    final org.waveprotocol.wave.model.document.ReadableAnnotationSet val$annotationSet;
    final org.waveprotocol.wave.model.util.StringMap val$before;
    final org.waveprotocol.wave.model.util.StringMap val$after;
    final org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic, int, org.waveprotocol.wave.model.document.ReadableAnnotationSet, org.waveprotocol.wave.model.util.StringMap, org.waveprotocol.wave.model.util.StringMap)
    {
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1 r0;
        org.waveprotocol.wave.model.document.ReadableAnnotationSet r2;
        int i0;
        org.waveprotocol.wave.model.util.StringMap r3, r4;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic;

        i0 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.document.ReadableAnnotationSet;

        r3 := @parameter3: org.waveprotocol.wave.model.util.StringMap;

        r4 := @parameter4: org.waveprotocol.wave.model.util.StringMap;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: int val$position> = i0;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.document.ReadableAnnotationSet val$annotationSet> = r2;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.util.StringMap val$before> = r3;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.util.StringMap val$after> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.model.document.ReadableAnnotationSet $r2, $r5, $r8;
        org.waveprotocol.wave.model.util.StringMap $r4, $r7;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3, $r6;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: int val$position>;

        if $i0 <= 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.document.ReadableAnnotationSet val$annotationSet>;

        $i2 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: int val$position>;

        $i3 = $i2 - 1;

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: java.lang.Object getAnnotation(int,java.lang.String)>($i3, r1);

        if $r6 == null goto label1;

        $r7 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.util.StringMap val$before>;

        interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, $r6);

     label1:
        $i4 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: int val$position>;

        $r8 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.document.ReadableAnnotationSet val$annotationSet>;

        $i5 = interfaceinvoke $r8.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: int size()>();

        if $i4 >= $i5 goto label2;

        $r2 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.document.ReadableAnnotationSet val$annotationSet>;

        $i1 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: int val$position>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: java.lang.Object getAnnotation(int,java.lang.String)>($i1, r1);

        if $r3 == null goto label2;

        $r4 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$1: org.waveprotocol.wave.model.util.StringMap val$after>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r1, $r3);

     label2:
        return;
    }
}
