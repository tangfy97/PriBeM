public abstract class org.apache.lucene.util.StringHelper extends java.lang.Object
{
    private static java.util.Comparator versionComparator;

    public static int bytesDifference(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2, $r3;
        byte $b5, $b6;
        int $i0, $i1, i2, $i3, $i4, $i7, $i8, $i9, i10, $i11, $i12;
        org.apache.lucene.util.BytesRef r0, r1;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r1.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 >= $i0 goto label1;

        $i9 = r0.<org.apache.lucene.util.BytesRef: int length>;

        goto label2;

     label1:
        $i9 = r1.<org.apache.lucene.util.BytesRef: int length>;

     label2:
        i2 = $i9;

        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i7 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $r3 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        i10 = 0;

     label3:
        if i10 >= i2 goto label5;

        $i3 = i10 + $i7;

        $b6 = $r2[$i3];

        $i4 = i10 + $i8;

        $b5 = $r3[$i4];

        $i11 = (int) $b6;

        $i12 = (int) $b5;

        if $i11 == $i12 goto label4;

        return i10;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        return i2;
    }

    private void <init>()
    {
        org.apache.lucene.util.StringHelper r0;

        r0 := @this: org.apache.lucene.util.StringHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Comparator getVersionComparator()
    {
        java.util.Comparator $r0;

        $r0 = <org.apache.lucene.util.StringHelper: java.util.Comparator versionComparator>;

        return $r0;
    }

    public static boolean equals(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static boolean startsWith(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r0, r1;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        $z0 = staticinvoke <org.apache.lucene.util.StringHelper: boolean sliceEquals(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,int)>(r0, r1, 0);

        return $z0;
    }

    public static boolean endsWith(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r0, r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r1.<org.apache.lucene.util.BytesRef: int length>;

        $i2 = $i1 - $i0;

        $z0 = staticinvoke <org.apache.lucene.util.StringHelper: boolean sliceEquals(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,int)>(r0, r1, $i2);

        return $z0;
    }

    private static boolean sliceEquals(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef, int)
    {
        byte[] $r2, $r3;
        byte $b10, $b11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, i12, i13, $i14, $i15;
        org.apache.lucene.util.BytesRef r0, r1;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        i0 := @parameter2: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i3 = $i1 - i0;

        $i2 = r1.<org.apache.lucene.util.BytesRef: int length>;

        if $i3 >= $i2 goto label2;

     label1:
        return 0;

     label2:
        $i4 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        i12 = $i4 + i0;

        i13 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i6 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i5 = r1.<org.apache.lucene.util.BytesRef: int length>;

        i7 = $i6 + $i5;

     label3:
        if i13 >= i7 goto label4;

        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = i12;

        i12 = i12 + 1;

        $b11 = $r2[$i8];

        $r3 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i9 = i13;

        i13 = i13 + 1;

        $b10 = $r3[$i9];

        $i14 = (int) $b11;

        $i15 = (int) $b10;

        if $i14 == $i15 goto label3;

        return 0;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        org.apache.lucene.util.StringHelper$1 $r0;

        $r0 = new org.apache.lucene.util.StringHelper$1;

        specialinvoke $r0.<org.apache.lucene.util.StringHelper$1: void <init>()>();

        <org.apache.lucene.util.StringHelper: java.util.Comparator versionComparator> = $r0;

        return;
    }
}
