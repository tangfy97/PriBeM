public class org.apache.tika.parser.html.HtmlParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final java.util.Set SUPPORTED_TYPES;
    private static final org.apache.tika.config.ServiceLoader LOADER;
    private static final org.ccil.cowan.tagsoup.Schema HTML_SCHEMA;

    public void <init>()
    {
        org.apache.tika.parser.html.HtmlParser r0;

        r0 := @this: org.apache.tika.parser.html.HtmlParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.html.HtmlParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.html.HtmlParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.html.HtmlParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r15;
        org.apache.tika.config.ServiceLoader $r5, $r7;
        org.apache.tika.mime.MediaType $r10, $r11;
        org.apache.tika.metadata.Metadata r3;
        java.nio.charset.Charset $r8;
        org.apache.tika.parser.html.HtmlParser r13;
        org.apache.tika.parser.html.XHTMLDowngradeHandler $r24;
        java.lang.String $r9, $r12, $r16;
        org.xml.sax.ContentHandler r14;
        boolean $z0;
        org.xml.sax.InputSource $r26;
        org.ccil.cowan.tagsoup.Parser $r20;
        org.apache.tika.parser.html.HtmlMapper $r19;
        org.apache.tika.io.CloseShieldInputStream $r1;
        org.apache.tika.parser.html.HtmlParser$HtmlParserMapper $r17;
        org.apache.tika.detect.AutoDetectReader $r0;
        org.apache.tika.parser.ParseContext r4;
        org.apache.tika.parser.html.HtmlHandler $r25;
        java.lang.Object $r6, $r18, $r22;
        java.io.InputStream r2;
        org.ccil.cowan.tagsoup.Schema $r21, $r23;

        r13 := @this: org.apache.tika.parser.html.HtmlParser;

        r2 := @parameter0: java.io.InputStream;

        r14 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r4 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.detect.AutoDetectReader;

        $r1 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r1.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r2);

        $r5 = <org.apache.tika.parser.html.HtmlParser: org.apache.tika.config.ServiceLoader LOADER>;

        $r6 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/config/ServiceLoader;", $r5);

        $r7 = (org.apache.tika.config.ServiceLoader) $r6;

        specialinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata,org.apache.tika.config.ServiceLoader)>($r1, r3, $r7);

     label1:
        $r8 = virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: java.nio.charset.Charset getCharset()>();

        $r9 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        if $r9 == null goto label2;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("text/html");

        if $z0 == 0 goto label3;

     label2:
        $r10 = new org.apache.tika.mime.MediaType;

        $r11 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_HTML>;

        specialinvoke $r10.<org.apache.tika.mime.MediaType: void <init>(org.apache.tika.mime.MediaType,java.nio.charset.Charset)>($r11, $r8);

        $r12 = virtualinvoke $r10.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r12);

     label3:
        $r16 = virtualinvoke $r8.<java.nio.charset.Charset: java.lang.String name()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Encoding", $r16);

        $r17 = new org.apache.tika.parser.html.HtmlParser$HtmlParserMapper;

        specialinvoke $r17.<org.apache.tika.parser.html.HtmlParser$HtmlParserMapper: void <init>(org.apache.tika.parser.html.HtmlParser,org.apache.tika.parser.html.HtmlParser$1)>(r13, null);

        $r18 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/html/HtmlMapper;", $r17);

        $r19 = (org.apache.tika.parser.html.HtmlMapper) $r18;

        $r20 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r20.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        $r21 = <org.apache.tika.parser.html.HtmlParser: org.ccil.cowan.tagsoup.Schema HTML_SCHEMA>;

        $r22 = virtualinvoke r4.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/ccil/cowan/tagsoup/Schema;", $r21);

        $r23 = (org.ccil.cowan.tagsoup.Schema) $r22;

        virtualinvoke $r20.<org.ccil.cowan.tagsoup.Parser: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema", $r23);

        virtualinvoke $r20.<org.ccil.cowan.tagsoup.Parser: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", 1);

        $r24 = new org.apache.tika.parser.html.XHTMLDowngradeHandler;

        $r25 = new org.apache.tika.parser.html.HtmlHandler;

        specialinvoke $r25.<org.apache.tika.parser.html.HtmlHandler: void <init>(org.apache.tika.parser.html.HtmlMapper,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>($r19, r14, r3);

        specialinvoke $r24.<org.apache.tika.parser.html.XHTMLDowngradeHandler: void <init>(org.xml.sax.ContentHandler)>($r25);

        virtualinvoke $r20.<org.ccil.cowan.tagsoup.Parser: void setContentHandler(org.xml.sax.ContentHandler)>($r24);

        $r26 = virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: org.xml.sax.InputSource asInputSource()>();

        virtualinvoke $r20.<org.ccil.cowan.tagsoup.Parser: void parse(org.xml.sax.InputSource)>($r26);

     label4:
        virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void close()>();

        goto label7;

     label5:
        $r15 := @caughtexception;

     label6:
        virtualinvoke $r0.<org.apache.tika.detect.AutoDetectReader: void close()>();

        throw $r15;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected java.lang.String mapSafeElement(java.lang.String)
    {
        org.apache.tika.parser.html.HtmlParser r3;
        java.lang.String r0, $r2;
        org.apache.tika.parser.html.HtmlMapper $r1;

        r3 := @this: org.apache.tika.parser.html.HtmlParser;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.html.DefaultHtmlMapper: org.apache.tika.parser.html.HtmlMapper INSTANCE>;

        $r2 = interfaceinvoke $r1.<org.apache.tika.parser.html.HtmlMapper: java.lang.String mapSafeElement(java.lang.String)>(r0);

        return $r2;
    }

    protected boolean isDiscardElement(java.lang.String)
    {
        org.apache.tika.parser.html.HtmlParser r2;
        java.lang.String r0;
        org.apache.tika.parser.html.HtmlMapper $r1;
        boolean $z0;

        r2 := @this: org.apache.tika.parser.html.HtmlParser;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.html.DefaultHtmlMapper: org.apache.tika.parser.html.HtmlMapper INSTANCE>;

        $z0 = interfaceinvoke $r1.<org.apache.tika.parser.html.HtmlMapper: boolean isDiscardElement(java.lang.String)>(r0);

        return $z0;
    }

    public java.lang.String mapSafeAttribute(java.lang.String, java.lang.String)
    {
        org.apache.tika.parser.html.HtmlParser r4;
        java.lang.String r0, r1, $r3;
        org.apache.tika.parser.html.HtmlMapper $r2;

        r4 := @this: org.apache.tika.parser.html.HtmlParser;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.tika.parser.html.DefaultHtmlMapper: org.apache.tika.parser.html.HtmlMapper INSTANCE>;

        $r3 = interfaceinvoke $r2.<org.apache.tika.parser.html.HtmlMapper: java.lang.String mapSafeAttribute(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.tika.config.ServiceLoader $r8;
        java.util.Set $r7;
        org.apache.tika.mime.MediaType $r2, $r3, $r4, $r5;
        java.util.HashSet $r0;
        java.util.List $r6;
        org.apache.tika.mime.MediaType[] $r1;
        java.lang.Class $r9;
        java.lang.ClassLoader $r10;
        org.ccil.cowan.tagsoup.HTMLSchema $r11;

        <org.apache.tika.parser.html.HtmlParser: long serialVersionUID> = 7895315240498733128L;

        $r0 = new java.util.HashSet;

        $r1 = newarray (org.apache.tika.mime.MediaType)[4];

        $r2 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType text(java.lang.String)>("html");

        $r1[0] = $r2;

        $r3 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("xhtml+xml");

        $r1[1] = $r3;

        $r4 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("vnd.wap.xhtml+xml");

        $r1[2] = $r4;

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("x-asp");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <org.apache.tika.parser.html.HtmlParser: java.util.Set SUPPORTED_TYPES> = $r7;

        $r8 = new org.apache.tika.config.ServiceLoader;

        $r9 = class "Lorg/apache/tika/parser/html/HtmlParser;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r8.<org.apache.tika.config.ServiceLoader: void <init>(java.lang.ClassLoader)>($r10);

        <org.apache.tika.parser.html.HtmlParser: org.apache.tika.config.ServiceLoader LOADER> = $r8;

        $r11 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r11.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        <org.apache.tika.parser.html.HtmlParser: org.ccil.cowan.tagsoup.Schema HTML_SCHEMA> = $r11;

        return;
    }
}
