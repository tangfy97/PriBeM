public class org.springframework.aop.aspectj.SimpleAspectInstanceFactory extends java.lang.Object implements org.springframework.aop.aspectj.AspectInstanceFactory
{
    private final java.lang.Class aspectClass;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Aspect class must not be null");

        r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass> = r1;

        return;
    }

    public final java.lang.Class getAspectClass()
    {
        java.lang.Class $r1;
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

        $r1 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        return $r1;
    }

    public final java.lang.Object getAspectInstance()
    {
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;
        org.springframework.aop.framework.AopConfigException $r4, $r12;
        java.lang.InstantiationException $r11;
        java.lang.String $r7, $r10, $r15, $r18;
        java.lang.IllegalAccessException $r3;
        java.lang.Class $r1, $r6, $r14;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r8, $r9, $r13, $r16, $r17;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

     label1:
        $r1 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r2;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.springframework.aop.framework.AopConfigException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to instantiate aspect class [");

        $r14 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r11);

        throw $r12;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.springframework.aop.framework.AopConfigException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot access element class [");

        $r6 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r3);

        throw $r4;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public java.lang.ClassLoader getAspectClassLoader()
    {
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

        $r1 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public int getOrder()
    {
        int $i0;
        java.lang.Class $r1;
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

        $r1 = r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class aspectClass>;

        $i0 = virtualinvoke r0.<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: int getOrderForAspectClass(java.lang.Class)>($r1);

        return $i0;
    }

    protected int getOrderForAspectClass(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.aop.aspectj.SimpleAspectInstanceFactory r0;

        r0 := @this: org.springframework.aop.aspectj.SimpleAspectInstanceFactory;

        r1 := @parameter0: java.lang.Class;

        return 2147483647;
    }
}
