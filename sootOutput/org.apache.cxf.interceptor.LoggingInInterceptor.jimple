public class org.apache.cxf.interceptor.LoggingInInterceptor extends org.apache.cxf.interceptor.AbstractLoggingInterceptor
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractLoggingInterceptor: void <init>(java.lang.String)>("receive");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractLoggingInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractLoggingInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>()>();

        r0.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit> = i0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, "receive");

        r0.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit> = i0;

        return;
    }

    public void <init>(java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>()>();

        r0.<org.apache.cxf.interceptor.LoggingInInterceptor: java.io.PrintWriter writer> = r1;

        return;
    }

    public void <init>(java.lang.String, java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        java.lang.String r1;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, "receive");

        r0.<org.apache.cxf.interceptor.LoggingInInterceptor: java.io.PrintWriter writer> = r2;

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.io.PrintWriter $r3;
        org.apache.cxf.interceptor.LoggingInInterceptor r0;
        org.apache.cxf.message.Message r1;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = virtualinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)>(r1);

        $r3 = r0.<org.apache.cxf.interceptor.LoggingInInterceptor: java.io.PrintWriter writer>;

        if $r3 != null goto label1;

        $r4 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.apache.cxf.interceptor.LoggingInInterceptor: void logging(java.util.logging.Logger,org.apache.cxf.message.Message)>($r2, r1);

     label2:
        return;
    }

    protected void logging(java.util.logging.Logger, org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Integer $r84;
        byte $b3, $b8, $b12;
        java.io.Reader $r21, r97;
        java.lang.Exception $r85, $r87;
        java.lang.StringBuilder $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r33, $r36, $r37, $r42, $r43, $r45, $r46, $r47, $r49, $r50, $r52, $r55, $r56, $r61, $r62, $r64, $r67, $r68, $r72, $r74, $r75, $r77, $r79, $r93, $r94, $r100, $r102, $r103, $r106, $r107;
        org.apache.cxf.io.DelegatingInputStream $r58, $r59;
        long $l0, $l2, $l5, $l7, $l9, $l11, $l14;
        org.apache.cxf.interceptor.LoggingMessage $r99;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r13, $r29, $r35, $r38, $r48, $r54, $r57, $r63, $r65, $r69, $r73, $r76, $r78, $r80, $r81, $r83, r89, r90, r91, r95, $r98;
        org.apache.cxf.io.CachedWriter $r105;
        org.apache.cxf.message.Exchange $r2, $r82;
        java.io.File $r22, $r34, $r41, $r53;
        org.apache.cxf.interceptor.LoggingInInterceptor r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.logging.Logger r19;
        org.apache.cxf.interceptor.Fault $r104, $r108;
        int $i1, $i4, $i6, $i10, $i13, $i15, $i16, $i17, $i18, $i19;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r4, $r8, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r66, $r70, $r71;
        org.apache.cxf.io.CachedOutputStream $r101;
        java.io.InputStream $r40, $r60, $r96;

        r16 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r19 := @parameter0: java.util.logging.Logger;

        r0 := @parameter1: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.interceptor.LoggingMessage: java.lang.String ID_KEY>;

        $z0 = interfaceinvoke r0.<org.apache.cxf.message.Message: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = <org.apache.cxf.interceptor.LoggingMessage: java.lang.String ID_KEY>;

        $r4 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r3);

        r89 = (java.lang.String) $r4;

        if r89 != null goto label02;

        $r81 = staticinvoke <org.apache.cxf.interceptor.LoggingMessage: java.lang.String nextId()>();

        r89 = $r81;

        $r82 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r83 = <org.apache.cxf.interceptor.LoggingMessage: java.lang.String ID_KEY>;

        interfaceinvoke $r82.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r83, $r81);

     label02:
        $r5 = <org.apache.cxf.interceptor.LoggingMessage: java.lang.String ID_KEY>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r89);

        $r99 = new org.apache.cxf.interceptor.LoggingMessage;

        specialinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: void <init>(java.lang.String,java.lang.String)>("Inbound Message\n----------------------------", r89);

        $r7 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r7);

        $r84 = (java.lang.Integer) $r8;

        if $r84 == null goto label03;

        $r79 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getResponseCode()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84);

     label03:
        $r9 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        $r10 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r9);

        $r80 = (java.lang.String) $r10;

        if $r80 == null goto label04;

        $r77 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getEncoding()>();

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

     label04:
        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        $r78 = (java.lang.String) $r11;

        if $r78 == null goto label05;

        $r75 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getHttpMethod()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

     label05:
        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        $r76 = (java.lang.String) $r12;

        if $r76 == null goto label06;

        $r74 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getContentType()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

     label06:
        $r13 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r14 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r13);

        if $r14 == null goto label07;

        $r72 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getHeader()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

     label07:
        $r15 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.url");

        $r73 = (java.lang.String) $r15;

        r90 = $r73;

        if $r73 != null goto label10;

        $r69 = <org.apache.cxf.message.Message: java.lang.String ENDPOINT_ADDRESS>;

        $r70 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r69);

        r91 = (java.lang.String) $r70;

        $r71 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        r90 = (java.lang.String) $r71;

        if r90 == null goto label09;

        $z4 = virtualinvoke r90.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z4 == 0 goto label09;

        if r91 == null goto label10;

        $z5 = virtualinvoke r91.<java.lang.String: boolean startsWith(java.lang.String)>(r90);

        if $z5 != 0 goto label10;

        $z6 = virtualinvoke r91.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z6 == 0 goto label08;

        $i15 = virtualinvoke r91.<java.lang.String: int length()>();

        if $i15 <= 1 goto label08;

        $i16 = virtualinvoke r91.<java.lang.String: int length()>();

        r91 = virtualinvoke r91.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

     label08:
        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        r90 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        r90 = r91;

     label10:
        if r90 == null goto label11;

        $r64 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getAddress()>();

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        $r65 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r66 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r65);

        r95 = (java.lang.String) $r66;

        if r95 == null goto label11;

        $r67 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getAddress()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r95);

     label11:
        $z7 = virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: boolean isShowBinaryContent()>();

        if $z7 != 0 goto label12;

        $z3 = virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: boolean isBinaryContent(java.lang.String)>($r76);

        if $z3 == 0 goto label12;

        $r61 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- Binary Content ---");

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r63 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.String toString()>();

        virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: void log(java.util.logging.Logger,java.lang.String)>(r19, $r63);

        return;

     label12:
        $r17 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        $r60 = (java.io.InputStream) $r17;

        if $r60 == null goto label23;

        $r101 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r101.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

        $l7 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: long threshold>;

        $b8 = $l7 cmp 0L;

        $i17 = (int) $b8;

        if $i17 <= 0 goto label13;

        $l14 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: long threshold>;

        virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: void setThreshold(long)>($l14);

     label13:
        $z1 = $r60 instanceof org.apache.cxf.io.DelegatingInputStream;

        if $z1 == 0 goto label14;

        $r59 = (org.apache.cxf.io.DelegatingInputStream) $r60;

        $r96 = virtualinvoke $r59.<org.apache.cxf.io.DelegatingInputStream: java.io.InputStream getInputStream()>();

        goto label15;

     label14:
        $r96 = $r60;

     label15:
        staticinvoke <org.apache.cxf.helpers.IOUtils: int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)>($r96, $r101);

        virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: void flush()>();

        $r40 = virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

        $z2 = $r60 instanceof org.apache.cxf.io.DelegatingInputStream;

        if $z2 == 0 goto label16;

        $r58 = (org.apache.cxf.io.DelegatingInputStream) $r60;

        virtualinvoke $r58.<org.apache.cxf.io.DelegatingInputStream: void setInputStream(java.io.InputStream)>($r40);

        goto label17;

     label16:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", $r40);

     label17:
        $r41 = virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: java.io.File getTempFile()>();

        if $r41 == null goto label18;

        $r49 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nMessage (saved to tmp file):\n");

        $r50 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filename: ");

        $r53 = virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: java.io.File getTempFile()>();

        $r54 = virtualinvoke $r53.<java.io.File: java.lang.String getAbsolutePath()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

     label18:
        $l9 = virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: long size()>();

        $i10 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit>;

        $l11 = (long) $i10;

        $b12 = $l9 cmp $l11;

        $i18 = (int) $b12;

        if $i18 <= 0 goto label19;

        $r43 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(message truncated to ");

        $i13 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit>;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)\n");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

     label19:
        $r42 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getPayload()>();

        virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)>($r42, $r101, $r80, $r76);

        virtualinvoke $r101.<org.apache.cxf.io.CachedOutputStream: void close()>();

     label20:
        goto label22;

     label21:
        $r87 := @caughtexception;

        $r104 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r104.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r87);

        throw $r104;

     label22:
        goto label29;

     label23:
        $r18 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/Reader;");

        r97 = (java.io.Reader) $r18;

        if r97 == null goto label29;

     label24:
        $r105 = new org.apache.cxf.io.CachedWriter;

        specialinvoke $r105.<org.apache.cxf.io.CachedWriter: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.IOUtils: void copyAndCloseInput(java.io.Reader,java.io.Writer)>(r97, $r105);

        $r21 = virtualinvoke $r105.<org.apache.cxf.io.CachedWriter: java.io.Reader getReader()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/Reader;", $r21);

        $r22 = virtualinvoke $r105.<org.apache.cxf.io.CachedWriter: java.io.File getTempFile()>();

        if $r22 == null goto label25;

        $r30 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nMessage (saved to tmp file):\n");

        $r31 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filename: ");

        $r34 = virtualinvoke $r105.<org.apache.cxf.io.CachedWriter: java.io.File getTempFile()>();

        $r35 = virtualinvoke $r34.<java.io.File: java.lang.String getAbsolutePath()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

     label25:
        $l0 = virtualinvoke $r105.<org.apache.cxf.io.CachedWriter: long size()>();

        $i1 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit>;

        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        $i19 = (int) $b3;

        if $i19 <= 0 goto label26;

        $r24 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getMessage()>();

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(message truncated to ");

        $i6 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label26:
        $r23 = virtualinvoke $r99.<org.apache.cxf.interceptor.LoggingMessage: java.lang.StringBuilder getPayload()>();

        $i4 = r16.<org.apache.cxf.interceptor.LoggingInInterceptor: int limit>;

        $l5 = (long) $i4;

        virtualinvoke $r105.<org.apache.cxf.io.CachedWriter: void writeCacheTo(java.lang.StringBuilder,long)>($r23, $l5);

     label27:
        goto label29;

     label28:
        $r85 := @caughtexception;

        $r108 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r108.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r85);

        throw $r108;

     label29:
        $r98 = virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: java.lang.String formatLoggingMessage(org.apache.cxf.interceptor.LoggingMessage)>($r99);

        virtualinvoke r16.<org.apache.cxf.interceptor.LoggingInInterceptor: void log(java.util.logging.Logger,java.lang.String)>(r19, $r98);

        return;

        catch java.lang.Exception from label13 to label20 with label21;
        catch java.lang.Exception from label24 to label27 with label28;
    }

    protected java.lang.String formatLoggingMessage(org.apache.cxf.interceptor.LoggingMessage)
    {
        java.lang.String $r1;
        org.apache.cxf.interceptor.LoggingInInterceptor r2;
        org.apache.cxf.interceptor.LoggingMessage r0;

        r2 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        r0 := @parameter0: org.apache.cxf.interceptor.LoggingMessage;

        $r1 = virtualinvoke r0.<org.apache.cxf.interceptor.LoggingMessage: java.lang.String toString()>();

        return $r1;
    }

    protected java.util.logging.Logger getLogger()
    {
        java.util.logging.Logger $r0;
        org.apache.cxf.interceptor.LoggingInInterceptor r1;

        r1 := @this: org.apache.cxf.interceptor.LoggingInInterceptor;

        $r0 = <org.apache.cxf.interceptor.LoggingInInterceptor: java.util.logging.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/LoggingInInterceptor;");

        <org.apache.cxf.interceptor.LoggingInInterceptor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
