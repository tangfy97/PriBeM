public final enum class org.springframework.http.HttpStatus extends java.lang.Enum
{
    public static final enum org.springframework.http.HttpStatus CONTINUE;
    public static final enum org.springframework.http.HttpStatus SWITCHING_PROTOCOLS;
    public static final enum org.springframework.http.HttpStatus PROCESSING;
    public static final enum org.springframework.http.HttpStatus OK;
    public static final enum org.springframework.http.HttpStatus CREATED;
    public static final enum org.springframework.http.HttpStatus ACCEPTED;
    public static final enum org.springframework.http.HttpStatus NON_AUTHORITATIVE_INFORMATION;
    public static final enum org.springframework.http.HttpStatus NO_CONTENT;
    public static final enum org.springframework.http.HttpStatus RESET_CONTENT;
    public static final enum org.springframework.http.HttpStatus PARTIAL_CONTENT;
    public static final enum org.springframework.http.HttpStatus MULTI_STATUS;
    public static final enum org.springframework.http.HttpStatus ALREADY_REPORTED;
    public static final enum org.springframework.http.HttpStatus IM_USED;
    public static final enum org.springframework.http.HttpStatus MULTIPLE_CHOICES;
    public static final enum org.springframework.http.HttpStatus MOVED_PERMANENTLY;
    public static final enum org.springframework.http.HttpStatus FOUND;
    public static final enum org.springframework.http.HttpStatus MOVED_TEMPORARILY;
    public static final enum org.springframework.http.HttpStatus SEE_OTHER;
    public static final enum org.springframework.http.HttpStatus NOT_MODIFIED;
    public static final enum org.springframework.http.HttpStatus USE_PROXY;
    public static final enum org.springframework.http.HttpStatus TEMPORARY_REDIRECT;
    public static final enum org.springframework.http.HttpStatus BAD_REQUEST;
    public static final enum org.springframework.http.HttpStatus UNAUTHORIZED;
    public static final enum org.springframework.http.HttpStatus PAYMENT_REQUIRED;
    public static final enum org.springframework.http.HttpStatus FORBIDDEN;
    public static final enum org.springframework.http.HttpStatus NOT_FOUND;
    public static final enum org.springframework.http.HttpStatus METHOD_NOT_ALLOWED;
    public static final enum org.springframework.http.HttpStatus NOT_ACCEPTABLE;
    public static final enum org.springframework.http.HttpStatus PROXY_AUTHENTICATION_REQUIRED;
    public static final enum org.springframework.http.HttpStatus REQUEST_TIMEOUT;
    public static final enum org.springframework.http.HttpStatus CONFLICT;
    public static final enum org.springframework.http.HttpStatus GONE;
    public static final enum org.springframework.http.HttpStatus LENGTH_REQUIRED;
    public static final enum org.springframework.http.HttpStatus PRECONDITION_FAILED;
    public static final enum org.springframework.http.HttpStatus REQUEST_ENTITY_TOO_LARGE;
    public static final enum org.springframework.http.HttpStatus REQUEST_URI_TOO_LONG;
    public static final enum org.springframework.http.HttpStatus UNSUPPORTED_MEDIA_TYPE;
    public static final enum org.springframework.http.HttpStatus REQUESTED_RANGE_NOT_SATISFIABLE;
    public static final enum org.springframework.http.HttpStatus EXPECTATION_FAILED;
    public static final enum org.springframework.http.HttpStatus INSUFFICIENT_SPACE_ON_RESOURCE;
    public static final enum org.springframework.http.HttpStatus METHOD_FAILURE;
    public static final enum org.springframework.http.HttpStatus DESTINATION_LOCKED;
    public static final enum org.springframework.http.HttpStatus UNPROCESSABLE_ENTITY;
    public static final enum org.springframework.http.HttpStatus LOCKED;
    public static final enum org.springframework.http.HttpStatus FAILED_DEPENDENCY;
    public static final enum org.springframework.http.HttpStatus UPGRADE_REQUIRED;
    public static final enum org.springframework.http.HttpStatus INTERNAL_SERVER_ERROR;
    public static final enum org.springframework.http.HttpStatus NOT_IMPLEMENTED;
    public static final enum org.springframework.http.HttpStatus BAD_GATEWAY;
    public static final enum org.springframework.http.HttpStatus SERVICE_UNAVAILABLE;
    public static final enum org.springframework.http.HttpStatus GATEWAY_TIMEOUT;
    public static final enum org.springframework.http.HttpStatus HTTP_VERSION_NOT_SUPPORTED;
    public static final enum org.springframework.http.HttpStatus VARIANT_ALSO_NEGOTIATES;
    public static final enum org.springframework.http.HttpStatus INSUFFICIENT_STORAGE;
    public static final enum org.springframework.http.HttpStatus LOOP_DETECTED;
    public static final enum org.springframework.http.HttpStatus NOT_EXTENDED;
    private final int value;
    private static final org.springframework.http.HttpStatus[] ENUM$VALUES;

    static void <clinit>()
    {
        org.springframework.http.HttpStatus $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112;
        org.springframework.http.HttpStatus[] $r56;

        $r0 = new org.springframework.http.HttpStatus;

        specialinvoke $r0.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("CONTINUE", 0, 100);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CONTINUE> = $r0;

        $r1 = new org.springframework.http.HttpStatus;

        specialinvoke $r1.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("SWITCHING_PROTOCOLS", 1, 101);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SWITCHING_PROTOCOLS> = $r1;

        $r2 = new org.springframework.http.HttpStatus;

        specialinvoke $r2.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("PROCESSING", 2, 102);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PROCESSING> = $r2;

        $r3 = new org.springframework.http.HttpStatus;

        specialinvoke $r3.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("OK", 3, 200);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus OK> = $r3;

        $r4 = new org.springframework.http.HttpStatus;

        specialinvoke $r4.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("CREATED", 4, 201);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CREATED> = $r4;

        $r5 = new org.springframework.http.HttpStatus;

        specialinvoke $r5.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("ACCEPTED", 5, 202);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus ACCEPTED> = $r5;

        $r6 = new org.springframework.http.HttpStatus;

        specialinvoke $r6.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NON_AUTHORITATIVE_INFORMATION", 6, 203);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NON_AUTHORITATIVE_INFORMATION> = $r6;

        $r7 = new org.springframework.http.HttpStatus;

        specialinvoke $r7.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NO_CONTENT", 7, 204);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NO_CONTENT> = $r7;

        $r8 = new org.springframework.http.HttpStatus;

        specialinvoke $r8.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("RESET_CONTENT", 8, 205);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus RESET_CONTENT> = $r8;

        $r9 = new org.springframework.http.HttpStatus;

        specialinvoke $r9.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("PARTIAL_CONTENT", 9, 206);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PARTIAL_CONTENT> = $r9;

        $r10 = new org.springframework.http.HttpStatus;

        specialinvoke $r10.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("MULTI_STATUS", 10, 207);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MULTI_STATUS> = $r10;

        $r11 = new org.springframework.http.HttpStatus;

        specialinvoke $r11.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("ALREADY_REPORTED", 11, 208);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus ALREADY_REPORTED> = $r11;

        $r12 = new org.springframework.http.HttpStatus;

        specialinvoke $r12.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("IM_USED", 12, 226);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus IM_USED> = $r12;

        $r13 = new org.springframework.http.HttpStatus;

        specialinvoke $r13.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("MULTIPLE_CHOICES", 13, 300);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MULTIPLE_CHOICES> = $r13;

        $r14 = new org.springframework.http.HttpStatus;

        specialinvoke $r14.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("MOVED_PERMANENTLY", 14, 301);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MOVED_PERMANENTLY> = $r14;

        $r15 = new org.springframework.http.HttpStatus;

        specialinvoke $r15.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("FOUND", 15, 302);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FOUND> = $r15;

        $r16 = new org.springframework.http.HttpStatus;

        specialinvoke $r16.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("MOVED_TEMPORARILY", 16, 302);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MOVED_TEMPORARILY> = $r16;

        $r17 = new org.springframework.http.HttpStatus;

        specialinvoke $r17.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("SEE_OTHER", 17, 303);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SEE_OTHER> = $r17;

        $r18 = new org.springframework.http.HttpStatus;

        specialinvoke $r18.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NOT_MODIFIED", 18, 304);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_MODIFIED> = $r18;

        $r19 = new org.springframework.http.HttpStatus;

        specialinvoke $r19.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("USE_PROXY", 19, 305);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus USE_PROXY> = $r19;

        $r20 = new org.springframework.http.HttpStatus;

        specialinvoke $r20.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("TEMPORARY_REDIRECT", 20, 307);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus TEMPORARY_REDIRECT> = $r20;

        $r21 = new org.springframework.http.HttpStatus;

        specialinvoke $r21.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("BAD_REQUEST", 21, 400);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_REQUEST> = $r21;

        $r22 = new org.springframework.http.HttpStatus;

        specialinvoke $r22.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("UNAUTHORIZED", 22, 401);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNAUTHORIZED> = $r22;

        $r23 = new org.springframework.http.HttpStatus;

        specialinvoke $r23.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("PAYMENT_REQUIRED", 23, 402);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PAYMENT_REQUIRED> = $r23;

        $r24 = new org.springframework.http.HttpStatus;

        specialinvoke $r24.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("FORBIDDEN", 24, 403);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FORBIDDEN> = $r24;

        $r25 = new org.springframework.http.HttpStatus;

        specialinvoke $r25.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NOT_FOUND", 25, 404);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_FOUND> = $r25;

        $r26 = new org.springframework.http.HttpStatus;

        specialinvoke $r26.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("METHOD_NOT_ALLOWED", 26, 405);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus METHOD_NOT_ALLOWED> = $r26;

        $r27 = new org.springframework.http.HttpStatus;

        specialinvoke $r27.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NOT_ACCEPTABLE", 27, 406);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_ACCEPTABLE> = $r27;

        $r28 = new org.springframework.http.HttpStatus;

        specialinvoke $r28.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("PROXY_AUTHENTICATION_REQUIRED", 28, 407);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PROXY_AUTHENTICATION_REQUIRED> = $r28;

        $r29 = new org.springframework.http.HttpStatus;

        specialinvoke $r29.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("REQUEST_TIMEOUT", 29, 408);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_TIMEOUT> = $r29;

        $r30 = new org.springframework.http.HttpStatus;

        specialinvoke $r30.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("CONFLICT", 30, 409);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CONFLICT> = $r30;

        $r31 = new org.springframework.http.HttpStatus;

        specialinvoke $r31.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("GONE", 31, 410);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus GONE> = $r31;

        $r32 = new org.springframework.http.HttpStatus;

        specialinvoke $r32.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("LENGTH_REQUIRED", 32, 411);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LENGTH_REQUIRED> = $r32;

        $r33 = new org.springframework.http.HttpStatus;

        specialinvoke $r33.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("PRECONDITION_FAILED", 33, 412);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PRECONDITION_FAILED> = $r33;

        $r34 = new org.springframework.http.HttpStatus;

        specialinvoke $r34.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("REQUEST_ENTITY_TOO_LARGE", 34, 413);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_ENTITY_TOO_LARGE> = $r34;

        $r35 = new org.springframework.http.HttpStatus;

        specialinvoke $r35.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("REQUEST_URI_TOO_LONG", 35, 414);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_URI_TOO_LONG> = $r35;

        $r36 = new org.springframework.http.HttpStatus;

        specialinvoke $r36.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("UNSUPPORTED_MEDIA_TYPE", 36, 415);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNSUPPORTED_MEDIA_TYPE> = $r36;

        $r37 = new org.springframework.http.HttpStatus;

        specialinvoke $r37.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("REQUESTED_RANGE_NOT_SATISFIABLE", 37, 416);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUESTED_RANGE_NOT_SATISFIABLE> = $r37;

        $r38 = new org.springframework.http.HttpStatus;

        specialinvoke $r38.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("EXPECTATION_FAILED", 38, 417);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus EXPECTATION_FAILED> = $r38;

        $r39 = new org.springframework.http.HttpStatus;

        specialinvoke $r39.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("INSUFFICIENT_SPACE_ON_RESOURCE", 39, 419);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INSUFFICIENT_SPACE_ON_RESOURCE> = $r39;

        $r40 = new org.springframework.http.HttpStatus;

        specialinvoke $r40.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("METHOD_FAILURE", 40, 420);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus METHOD_FAILURE> = $r40;

        $r41 = new org.springframework.http.HttpStatus;

        specialinvoke $r41.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("DESTINATION_LOCKED", 41, 421);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus DESTINATION_LOCKED> = $r41;

        $r42 = new org.springframework.http.HttpStatus;

        specialinvoke $r42.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("UNPROCESSABLE_ENTITY", 42, 422);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNPROCESSABLE_ENTITY> = $r42;

        $r43 = new org.springframework.http.HttpStatus;

        specialinvoke $r43.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("LOCKED", 43, 423);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LOCKED> = $r43;

        $r44 = new org.springframework.http.HttpStatus;

        specialinvoke $r44.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("FAILED_DEPENDENCY", 44, 424);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FAILED_DEPENDENCY> = $r44;

        $r45 = new org.springframework.http.HttpStatus;

        specialinvoke $r45.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("UPGRADE_REQUIRED", 45, 426);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UPGRADE_REQUIRED> = $r45;

        $r46 = new org.springframework.http.HttpStatus;

        specialinvoke $r46.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("INTERNAL_SERVER_ERROR", 46, 500);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INTERNAL_SERVER_ERROR> = $r46;

        $r47 = new org.springframework.http.HttpStatus;

        specialinvoke $r47.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NOT_IMPLEMENTED", 47, 501);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_IMPLEMENTED> = $r47;

        $r48 = new org.springframework.http.HttpStatus;

        specialinvoke $r48.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("BAD_GATEWAY", 48, 502);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_GATEWAY> = $r48;

        $r49 = new org.springframework.http.HttpStatus;

        specialinvoke $r49.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("SERVICE_UNAVAILABLE", 49, 503);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SERVICE_UNAVAILABLE> = $r49;

        $r50 = new org.springframework.http.HttpStatus;

        specialinvoke $r50.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("GATEWAY_TIMEOUT", 50, 504);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus GATEWAY_TIMEOUT> = $r50;

        $r51 = new org.springframework.http.HttpStatus;

        specialinvoke $r51.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("HTTP_VERSION_NOT_SUPPORTED", 51, 505);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus HTTP_VERSION_NOT_SUPPORTED> = $r51;

        $r52 = new org.springframework.http.HttpStatus;

        specialinvoke $r52.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("VARIANT_ALSO_NEGOTIATES", 52, 506);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus VARIANT_ALSO_NEGOTIATES> = $r52;

        $r53 = new org.springframework.http.HttpStatus;

        specialinvoke $r53.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("INSUFFICIENT_STORAGE", 53, 507);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INSUFFICIENT_STORAGE> = $r53;

        $r54 = new org.springframework.http.HttpStatus;

        specialinvoke $r54.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("LOOP_DETECTED", 54, 508);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LOOP_DETECTED> = $r54;

        $r55 = new org.springframework.http.HttpStatus;

        specialinvoke $r55.<org.springframework.http.HttpStatus: void <init>(java.lang.String,int,int)>("NOT_EXTENDED", 55, 510);

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_EXTENDED> = $r55;

        $r56 = newarray (org.springframework.http.HttpStatus)[56];

        $r57 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CONTINUE>;

        $r56[0] = $r57;

        $r58 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SWITCHING_PROTOCOLS>;

        $r56[1] = $r58;

        $r59 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PROCESSING>;

        $r56[2] = $r59;

        $r60 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus OK>;

        $r56[3] = $r60;

        $r61 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CREATED>;

        $r56[4] = $r61;

        $r62 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus ACCEPTED>;

        $r56[5] = $r62;

        $r63 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NON_AUTHORITATIVE_INFORMATION>;

        $r56[6] = $r63;

        $r64 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NO_CONTENT>;

        $r56[7] = $r64;

        $r65 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus RESET_CONTENT>;

        $r56[8] = $r65;

        $r66 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PARTIAL_CONTENT>;

        $r56[9] = $r66;

        $r67 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MULTI_STATUS>;

        $r56[10] = $r67;

        $r68 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus ALREADY_REPORTED>;

        $r56[11] = $r68;

        $r69 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus IM_USED>;

        $r56[12] = $r69;

        $r70 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MULTIPLE_CHOICES>;

        $r56[13] = $r70;

        $r71 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MOVED_PERMANENTLY>;

        $r56[14] = $r71;

        $r72 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FOUND>;

        $r56[15] = $r72;

        $r73 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus MOVED_TEMPORARILY>;

        $r56[16] = $r73;

        $r74 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SEE_OTHER>;

        $r56[17] = $r74;

        $r75 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_MODIFIED>;

        $r56[18] = $r75;

        $r76 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus USE_PROXY>;

        $r56[19] = $r76;

        $r77 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus TEMPORARY_REDIRECT>;

        $r56[20] = $r77;

        $r78 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_REQUEST>;

        $r56[21] = $r78;

        $r79 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNAUTHORIZED>;

        $r56[22] = $r79;

        $r80 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PAYMENT_REQUIRED>;

        $r56[23] = $r80;

        $r81 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FORBIDDEN>;

        $r56[24] = $r81;

        $r82 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_FOUND>;

        $r56[25] = $r82;

        $r83 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus METHOD_NOT_ALLOWED>;

        $r56[26] = $r83;

        $r84 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_ACCEPTABLE>;

        $r56[27] = $r84;

        $r85 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PROXY_AUTHENTICATION_REQUIRED>;

        $r56[28] = $r85;

        $r86 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_TIMEOUT>;

        $r56[29] = $r86;

        $r87 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus CONFLICT>;

        $r56[30] = $r87;

        $r88 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus GONE>;

        $r56[31] = $r88;

        $r89 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LENGTH_REQUIRED>;

        $r56[32] = $r89;

        $r90 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus PRECONDITION_FAILED>;

        $r56[33] = $r90;

        $r91 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_ENTITY_TOO_LARGE>;

        $r56[34] = $r91;

        $r92 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUEST_URI_TOO_LONG>;

        $r56[35] = $r92;

        $r93 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNSUPPORTED_MEDIA_TYPE>;

        $r56[36] = $r93;

        $r94 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus REQUESTED_RANGE_NOT_SATISFIABLE>;

        $r56[37] = $r94;

        $r95 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus EXPECTATION_FAILED>;

        $r56[38] = $r95;

        $r96 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INSUFFICIENT_SPACE_ON_RESOURCE>;

        $r56[39] = $r96;

        $r97 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus METHOD_FAILURE>;

        $r56[40] = $r97;

        $r98 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus DESTINATION_LOCKED>;

        $r56[41] = $r98;

        $r99 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UNPROCESSABLE_ENTITY>;

        $r56[42] = $r99;

        $r100 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LOCKED>;

        $r56[43] = $r100;

        $r101 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus FAILED_DEPENDENCY>;

        $r56[44] = $r101;

        $r102 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus UPGRADE_REQUIRED>;

        $r56[45] = $r102;

        $r103 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INTERNAL_SERVER_ERROR>;

        $r56[46] = $r103;

        $r104 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_IMPLEMENTED>;

        $r56[47] = $r104;

        $r105 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_GATEWAY>;

        $r56[48] = $r105;

        $r106 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus SERVICE_UNAVAILABLE>;

        $r56[49] = $r106;

        $r107 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus GATEWAY_TIMEOUT>;

        $r56[50] = $r107;

        $r108 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus HTTP_VERSION_NOT_SUPPORTED>;

        $r56[51] = $r108;

        $r109 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus VARIANT_ALSO_NEGOTIATES>;

        $r56[52] = $r109;

        $r110 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus INSUFFICIENT_STORAGE>;

        $r56[53] = $r110;

        $r111 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus LOOP_DETECTED>;

        $r56[54] = $r111;

        $r112 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_EXTENDED>;

        $r56[55] = $r112;

        <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus[] ENUM$VALUES> = $r56;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.springframework.http.HttpStatus r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.springframework.http.HttpStatus;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.springframework.http.HttpStatus: int value> = i1;

        return;
    }

    public int value()
    {
        int $i0;
        org.springframework.http.HttpStatus r0;

        r0 := @this: org.springframework.http.HttpStatus;

        $i0 = r0.<org.springframework.http.HttpStatus: int value>;

        return $i0;
    }

    public org.springframework.http.HttpStatus$Series series()
    {
        org.springframework.http.HttpStatus$Series $r1;
        org.springframework.http.HttpStatus r0;

        r0 := @this: org.springframework.http.HttpStatus;

        $r1 = staticinvoke <org.springframework.http.HttpStatus$Series: org.springframework.http.HttpStatus$Series access$2(org.springframework.http.HttpStatus)>(r0);

        return $r1;
    }

    public java.lang.String toString()
    {
        int $i0;
        org.springframework.http.HttpStatus r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.http.HttpStatus;

        $i0 = r0.<org.springframework.http.HttpStatus: int value>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;
    }

    public static org.springframework.http.HttpStatus valueOf(int)
    {
        org.springframework.http.HttpStatus[] $r0;
        java.lang.IllegalArgumentException $r2;
        org.springframework.http.HttpStatus r1;
        int i0, i1, $i2, i3;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

        goto label3;

     label1:
        r1 = $r0[i3];

        $i2 = r1.<org.springframework.http.HttpStatus: int value>;

        if $i2 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("No matching constant for [");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static org.springframework.http.HttpStatus[] values()
    {
        int $i0;
        org.springframework.http.HttpStatus[] $r0, $r1;

        $r0 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus[] ENUM$VALUES>;

        $i0 = lengthof $r0;

        $r1 = newarray (org.springframework.http.HttpStatus)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    public static org.springframework.http.HttpStatus valueOf(java.lang.String)
    {
        org.springframework.http.HttpStatus $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/springframework/http/HttpStatus;", r0);

        $r2 = (org.springframework.http.HttpStatus) $r1;

        return $r2;
    }
}
