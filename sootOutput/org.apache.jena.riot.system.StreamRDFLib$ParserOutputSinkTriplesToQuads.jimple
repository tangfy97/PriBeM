class org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads extends org.apache.jena.riot.system.StreamRDFWrapper
{
    private final com.hp.hpl.jena.graph.Node gn;

    void <init>(com.hp.hpl.jena.graph.Node, org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.system.StreamRDF r1;
        com.hp.hpl.jena.graph.Node r2;
        org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads r0;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: org.apache.jena.riot.system.StreamRDF;

        specialinvoke r0.<org.apache.jena.riot.system.StreamRDFWrapper: void <init>(org.apache.jena.riot.system.StreamRDF)>(r1);

        r0.<org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads: com.hp.hpl.jena.graph.Node gn> = r2;

        return;
    }

    public void triple(com.hp.hpl.jena.graph.Triple)
    {
        org.apache.jena.riot.system.StreamRDF $r4;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads r0;
        com.hp.hpl.jena.sparql.core.Quad $r1;
        com.hp.hpl.jena.graph.Triple r2;

        r0 := @this: org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads;

        r2 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r4 = r0.<org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads: org.apache.jena.riot.system.StreamRDF sink>;

        $r1 = new com.hp.hpl.jena.sparql.core.Quad;

        $r3 = r0.<org.apache.jena.riot.system.StreamRDFLib$ParserOutputSinkTriplesToQuads: com.hp.hpl.jena.graph.Node gn>;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.Quad: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>($r3, r2);

        interfaceinvoke $r4.<org.apache.jena.riot.system.StreamRDF: void quad(com.hp.hpl.jena.sparql.core.Quad)>($r1);

        return;
    }
}
