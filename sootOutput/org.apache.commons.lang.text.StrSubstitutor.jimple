public class org.apache.commons.lang.text.StrSubstitutor extends java.lang.Object
{
    public static final char DEFAULT_ESCAPE;
    public static final org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX;
    public static final org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX;
    private char escapeChar;
    private org.apache.commons.lang.text.StrMatcher prefixMatcher;
    private org.apache.commons.lang.text.StrMatcher suffixMatcher;
    private org.apache.commons.lang.text.StrLookup variableResolver;

    public static java.lang.String replace(java.lang.Object, java.util.Map)
    {
        org.apache.commons.lang.text.StrSubstitutor $r0;
        java.util.Map r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Map;

        $r0 = new org.apache.commons.lang.text.StrSubstitutor;

        specialinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(java.util.Map)>(r1);

        $r3 = virtualinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r2);

        return $r3;
    }

    public static java.lang.String replace(java.lang.Object, java.util.Map, java.lang.String, java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor $r0;
        java.util.Map r1;
        java.lang.Object r4;
        java.lang.String r2, r3, $r5;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r0 = new org.apache.commons.lang.text.StrSubstitutor;

        specialinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(java.util.Map,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r5 = virtualinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r4);

        return $r5;
    }

    public static java.lang.String replaceSystemProperties(java.lang.Object)
    {
        org.apache.commons.lang.text.StrSubstitutor $r0;
        java.lang.Object r2;
        java.lang.String $r3;
        org.apache.commons.lang.text.StrLookup $r1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.apache.commons.lang.text.StrSubstitutor;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup systemPropertiesLookup()>();

        specialinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup)>($r1);

        $r3 = virtualinvoke $r0.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r2);

        return $r3;
    }

    public void <init>()
    {
        org.apache.commons.lang.text.StrMatcher $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r2 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r1 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>(null, $r2, $r1, 36);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        org.apache.commons.lang.text.StrMatcher $r3, $r4;
        org.apache.commons.lang.text.StrLookup $r2;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        $r4 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r3 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>($r2, $r4, $r3, 36);

        return;
    }

    public void <init>(java.util.Map, java.lang.String, java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        java.lang.String r3, r4;
        org.apache.commons.lang.text.StrLookup $r2;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,java.lang.String,java.lang.String,char)>($r2, r3, r4, 36);

        return;
    }

    public void <init>(java.util.Map, java.lang.String, java.lang.String, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        char c0;
        java.lang.String r3, r4;
        org.apache.commons.lang.text.StrLookup $r2;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        c0 := @parameter3: char;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,java.lang.String,java.lang.String,char)>($r2, r3, r4, c0);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher $r2, $r3;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        $r3 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r2 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>(r1, $r3, $r2, 36);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup, java.lang.String, java.lang.String, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char c0;
        java.lang.String r2, r3;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        c0 := @parameter3: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setVariableResolver(org.apache.commons.lang.text.StrLookup)>(r1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setEscapeChar(char)>(c0);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup, org.apache.commons.lang.text.StrMatcher, org.apache.commons.lang.text.StrMatcher, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char c0;
        org.apache.commons.lang.text.StrMatcher r2, r3;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r2 := @parameter1: org.apache.commons.lang.text.StrMatcher;

        r3 := @parameter2: org.apache.commons.lang.text.StrMatcher;

        c0 := @parameter3: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setVariableResolver(org.apache.commons.lang.text.StrLookup)>(r1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>(r2);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>(r3);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setEscapeChar(char)>(c0);

        return;
    }

    public java.lang.String replace(java.lang.String)
    {
        org.apache.commons.lang.text.StrBuilder $r1;
        org.apache.commons.lang.text.StrSubstitutor r2;
        int $i0;
        java.lang.String r0, $r3;
        boolean $z0;

        r2 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(java.lang.String)>(r0);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $z0 = virtualinvoke r2.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r1, 0, $i0);

        if $z0 != 0 goto label2;

        return r0;

     label2:
        $r3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String replace(java.lang.String, int, int)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int i0, i1, $i2;
        java.lang.String r0, $r4, $r5;
        boolean $z0;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String,int,int)>(r0, i1, i0);

        $z0 = virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, i0);

        if $z0 != 0 goto label2;

        $i2 = i1 + i0;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        return $r5;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(char[])
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int $i0, $i1;
        char[] r0;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = lengthof r0;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[])>(r0);

        $i1 = lengthof r0;

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, $i1);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(char[], int, int)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int i0, i1;
        char[] r0;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>(r0, i1, i0);

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, i0);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.StringBuffer)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        java.lang.StringBuffer r0;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int $i0, $i1;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.StringBuffer;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer)>(r0);

        $i1 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, $i1);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.StringBuffer, int, int)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        java.lang.StringBuffer r0;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int i0, i1;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.StringBuffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int)>(r0, i1, i0);

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, i0);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(org.apache.commons.lang.text.StrBuilder)
    {
        org.apache.commons.lang.text.StrBuilder r0, $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int $i0, $i1;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = virtualinvoke r0.<org.apache.commons.lang.text.StrBuilder: int length()>();

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder)>(r0);

        $i1 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, $i1);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrBuilder r0, $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int i0, i1;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder,int,int)>(r0, i1, i0);

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, i0);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.Object)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r4;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, $i0);

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean replaceIn(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        org.apache.commons.lang.text.StrSubstitutor r1;
        int $i0;
        boolean $z0;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.StringBuffer;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $z0 = virtualinvoke r1.<org.apache.commons.lang.text.StrSubstitutor: boolean replaceIn(java.lang.StringBuffer,int,int)>(r0, 0, $i0);

        return $z0;
    }

    public boolean replaceIn(java.lang.StringBuffer, int, int)
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r2;
        java.lang.StringBuffer r0;
        org.apache.commons.lang.text.StrSubstitutor r3;
        int i0, i1, $i2;
        java.lang.String $r4;
        boolean $z0;

        r3 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.StringBuffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int)>(r0, i1, i0);

        $z0 = virtualinvoke r3.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r2, 0, i0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i2 = i1 + i0;

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i1, $i2, $r4);

        return 1;
    }

    public boolean replaceIn(org.apache.commons.lang.text.StrBuilder)
    {
        org.apache.commons.lang.text.StrBuilder r0;
        org.apache.commons.lang.text.StrSubstitutor r1;
        int $i0;
        boolean $z0;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.commons.lang.text.StrBuilder: int length()>();

        $z0 = virtualinvoke r1.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r0, 0, $i0);

        return $z0;
    }

    public boolean replaceIn(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrBuilder r0;
        org.apache.commons.lang.text.StrSubstitutor r1;
        int i0, i1;
        boolean $z0;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r0, i0, i1);

        return $z0;
    }

    protected boolean substitute(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrBuilder r1;
        org.apache.commons.lang.text.StrSubstitutor r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List)>(r1, i0, i1, null);

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int substitute(org.apache.commons.lang.text.StrBuilder, int, int, java.util.List)
    {
        byte $b23;
        boolean z0, $z1, z2;
        java.util.List r8;
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher $r1, $r2;
        org.apache.commons.lang.text.StrBuilder r3;
        java.util.ArrayList $r11;
        int i1, i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, i19, i20, i21, i22, $i24, $i25, $i27, $i29;
        java.lang.String $r5, $r10, $r12;
        char $c0, $c17;
        char[] r9;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r3 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r8 := @parameter3: java.util.List;

        $r1 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher()>();

        $r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher()>();

        $c0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: char getEscapeChar()>();

        if r8 != null goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        z2 = 0;

        i19 = 0;

        r9 = r3.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

        i20 = i1 + i2;

        i21 = i1;

     label03:
        if i21 >= i20 goto label11;

        $i3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r9, i21, i1, i20);

        if $i3 != 0 goto label04;

        i21 = i21 + 1;

        goto label10;

     label04:
        if i21 <= i1 goto label05;

        $i16 = i21 - 1;

        $c17 = r9[$i16];

        $i24 = (int) $c17;

        $i25 = (int) $c0;

        if $i24 != $i25 goto label05;

        $i18 = i21 - 1;

        virtualinvoke r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder deleteCharAt(int)>($i18);

        r9 = r3.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

        $i27 = (int) -1;

        i19 = i19 + $i27;

        z2 = 1;

        $i29 = (int) -1;

        i20 = i20 + $i29;

        goto label10;

     label05:
        i4 = i21;

        i21 = i21 + $i3;

     label06:
        if i21 >= i20 goto label10;

        $i5 = virtualinvoke $r2.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r9, i21, i1, i20);

        if $i5 != 0 goto label07;

        i21 = i21 + 1;

        goto label06;

     label07:
        $r10 = new java.lang.String;

        $i8 = i4 + $i3;

        $i6 = i21 - i4;

        $i7 = $i6 - $i3;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>(r9, $i8, $i7);

        i21 = i21 + $i5;

        i9 = i21;

        if r8 != null goto label08;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r8 = $r11;

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>(r9, i1, i2);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

     label08:
        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void checkCyclicSubstitution(java.lang.String,java.util.List)>($r10, r8);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r5 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang.text.StrBuilder,int,int)>($r10, r3, i4, i9);

        if $r5 == null goto label09;

        $i12 = virtualinvoke $r5.<java.lang.String: int length()>();

        virtualinvoke r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder replace(int,int,java.lang.String)>(i4, i9, $r5);

        z2 = 1;

        $i13 = specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List)>(r3, i4, $i12, r8);

        $i14 = i9 - i4;

        $i15 = $i12 - $i14;

        i22 = $i13 + $i15;

        i21 = i21 + i22;

        i20 = i20 + i22;

        i19 = i19 + i22;

        r9 = r3.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

     label09:
        $i10 = interfaceinvoke r8.<java.util.List: int size()>();

        $i11 = $i10 - 1;

        interfaceinvoke r8.<java.util.List: java.lang.Object remove(int)>($i11);

        goto label10;

     label10:
        goto label03;

     label11:
        if z0 == 0 goto label14;

        if z2 == 0 goto label12;

        $b23 = 1;

        goto label13;

     label12:
        $b23 = 0;

     label13:
        return $b23;

     label14:
        return i19;
    }

    private void checkCyclicSubstitution(java.lang.String, java.util.List)
    {
        org.apache.commons.lang.text.StrBuilder $r2;
        java.lang.IllegalStateException $r4;
        java.util.List r0;
        org.apache.commons.lang.text.StrSubstitutor r6;
        java.lang.Object $r3;
        java.lang.String r1, $r5;
        boolean $z0;

        r6 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r2.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(256);

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>("Infinite loop in property interpolation of ");

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(": ");

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Collection,java.lang.String)>(r0, "->");

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    protected java.lang.String resolveVariable(java.lang.String, org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrBuilder r4;
        org.apache.commons.lang.text.StrSubstitutor r0;
        int i0, i1;
        java.lang.String r2, $r3;
        org.apache.commons.lang.text.StrLookup $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup getVariableResolver()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrLookup: java.lang.String lookup(java.lang.String)>(r2);

        return $r3;
    }

    public char getEscapeChar()
    {
        char $c0;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $c0 = r0.<org.apache.commons.lang.text.StrSubstitutor: char escapeChar>;

        return $c0;
    }

    public void setEscapeChar(char)
    {
        char c0;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        r0.<org.apache.commons.lang.text.StrSubstitutor: char escapeChar> = c0;

        return;
    }

    public org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r1;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher prefixMatcher>;

        return $r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)
    {
        org.apache.commons.lang.text.StrMatcher r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.lang.text.StrSubstitutor r1;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrMatcher;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable prefix matcher must not be null!");

        throw $r2;

     label1:
        r1.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher prefixMatcher> = r0;

        return r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r2;
        char c0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher charMatcher(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>($r1);

        return $r2;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r1, $r3;
        java.lang.String r0;
        org.apache.commons.lang.text.StrMatcher $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable prefix must not be null!");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>(r0);

        $r3 = virtualinvoke r1.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>($r2);

        return $r3;
    }

    public org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher()
    {
        org.apache.commons.lang.text.StrMatcher $r1;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher suffixMatcher>;

        return $r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)
    {
        org.apache.commons.lang.text.StrMatcher r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.lang.text.StrSubstitutor r1;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: org.apache.commons.lang.text.StrMatcher;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable suffix matcher must not be null!");

        throw $r2;

     label1:
        r1.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher suffixMatcher> = r0;

        return r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r2;
        char c0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher charMatcher(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>($r1);

        return $r2;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r1, $r3;
        java.lang.String r0;
        org.apache.commons.lang.text.StrMatcher $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable suffix must not be null!");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>(r0);

        $r3 = virtualinvoke r1.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>($r2);

        return $r3;
    }

    public org.apache.commons.lang.text.StrLookup getVariableResolver()
    {
        org.apache.commons.lang.text.StrLookup $r1;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup variableResolver>;

        return $r1;
    }

    public void setVariableResolver(org.apache.commons.lang.text.StrLookup)
    {
        org.apache.commons.lang.text.StrLookup r1;
        org.apache.commons.lang.text.StrSubstitutor r0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup variableResolver> = r1;

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.text.StrMatcher $r0, $r1;

        <org.apache.commons.lang.text.StrSubstitutor: char DEFAULT_ESCAPE> = 36;

        $r0 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>("${");

        <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX> = $r0;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>("}");

        <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX> = $r1;

        return;
    }
}
