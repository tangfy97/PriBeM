final class org.springframework.context.support.AbstractApplicationContext$1 extends org.springframework.context.support.ReadOnlySystemAttributesMap
{
    final org.springframework.context.support.AbstractApplicationContext this$0;

    void <init>(org.springframework.context.support.AbstractApplicationContext)
    {
        org.springframework.context.support.AbstractApplicationContext$1 r0;
        org.springframework.context.support.AbstractApplicationContext r1;

        r0 := @this: org.springframework.context.support.AbstractApplicationContext$1;

        r1 := @parameter0: org.springframework.context.support.AbstractApplicationContext;

        r0.<org.springframework.context.support.AbstractApplicationContext$1: org.springframework.context.support.AbstractApplicationContext this$0> = r1;

        specialinvoke r0.<org.springframework.context.support.ReadOnlySystemAttributesMap: void <init>()>();

        return;
    }

    protected java.lang.String getSystemAttribute(java.lang.String)
    {
        org.springframework.context.support.AbstractApplicationContext$1 r3;
        org.springframework.context.support.AbstractApplicationContext $r4, $r6;
        java.security.AccessControlException $r2;
        org.apache.commons.logging.Log $r5, $r8;
        java.lang.StringBuilder $r7, $r9, $r10, $r12;
        java.lang.String r0, $r1, $r11, $r13;
        boolean $z0;

        r3 := @this: org.springframework.context.support.AbstractApplicationContext$1;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r4 = r3.<org.springframework.context.support.AbstractApplicationContext$1: org.springframework.context.support.AbstractApplicationContext this$0>;

        $r5 = $r4.<org.springframework.context.support.AbstractApplicationContext: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z0 == 0 goto label4;

        $r6 = r3.<org.springframework.context.support.AbstractApplicationContext$1: org.springframework.context.support.AbstractApplicationContext this$0>;

        $r8 = $r6.<org.springframework.context.support.AbstractApplicationContext: org.apache.commons.logging.Log logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not allowed to obtain system property [");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r11 = virtualinvoke $r2.<java.security.AccessControlException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r13);

     label4:
        return null;

        catch java.security.AccessControlException from label1 to label2 with label3;
    }
}
