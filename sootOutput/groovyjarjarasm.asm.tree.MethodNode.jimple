public class groovyjarjarasm.asm.tree.MethodNode extends groovyjarjarasm.asm.tree.MemberNode implements groovyjarjarasm.asm.MethodVisitor
{
    public int access;
    public java.lang.String name;
    public java.lang.String desc;
    public java.lang.String signature;
    public final java.util.List exceptions;
    public java.lang.Object annotationDefault;
    public java.util.List[] visibleParameterAnnotations;
    public java.util.List[] invisibleParameterAnnotations;
    public final java.util.List instructions;
    public final java.util.List tryCatchBlocks;
    public int maxStack;
    public int maxLocals;
    public java.util.List localVariables;
    public java.util.List lineNumbers;

    public void <init>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r5;
        groovyjarjarasm.asm.tree.MethodNode r0;
        java.util.ArrayList $r4, $r6, $r7, $r10, $r11;
        byte $b3;
        int i0, $i1, $i2;
        java.lang.String r1, r2, r3;
        boolean z0, $z2, $z3;
        java.util.List $r8, $r9;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        specialinvoke r0.<groovyjarjarasm.asm.tree.MemberNode: void <init>()>();

        r0.<groovyjarjarasm.asm.tree.MethodNode: int access> = i0;

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String name> = r1;

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String desc> = r2;

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String signature> = r3;

        $r4 = new java.util.ArrayList;

        if r5 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r5;

     label2:
        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List exceptions> = $r4;

        $i1 = i0 & 1024;

        if $i1 == 0 goto label3;

        $z3 = 1;

        $z2 = 1;

        goto label4;

     label3:
        $z3 = 0;

        $z2 = 0;

     label4:
        z0 = $z2;

        $r6 = new java.util.ArrayList;

        if $z3 == 0 goto label5;

        $b3 = 0;

        goto label6;

     label5:
        $b3 = 24;

     label6:
        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($b3);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions> = $r6;

        if z0 != 0 goto label7;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(5);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(5);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers> = $r11;

     label7:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List tryCatchBlocks> = $r7;

        if r5 == null goto label8;

        $r8 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List exceptions>;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label8:
        return;
    }

    public groovyjarjarasm.asm.AnnotationVisitor visitAnnotationDefault()
    {
        groovyjarjarasm.asm.tree.AnnotationNode $r0;
        groovyjarjarasm.asm.tree.MethodNode r2;
        groovyjarjarasm.asm.tree.MethodNode$1 $r1;

        r2 := @this: groovyjarjarasm.asm.tree.MethodNode;

        $r0 = new groovyjarjarasm.asm.tree.AnnotationNode;

        $r1 = new groovyjarjarasm.asm.tree.MethodNode$1;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.MethodNode$1: void <init>(groovyjarjarasm.asm.tree.MethodNode,int)>(r2, 0);

        specialinvoke $r0.<groovyjarjarasm.asm.tree.AnnotationNode: void <init>(java.util.List)>($r1);

        return $r0;
    }

    public groovyjarjarasm.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        java.util.List[] $r3, $r4, $r6, $r9, $r12, $r13, $r14, $r16, $r19, $r22;
        groovyjarjarasm.asm.tree.MethodNode r2;
        java.util.ArrayList $r8, $r18;
        int i0, i1, i2;
        groovyjarjarasm.asm.tree.AnnotationNode $r0;
        java.lang.String r1, $r10, $r20;
        boolean z0;
        java.util.List $r5, $r7, $r15, $r17;
        groovyjarjarasm.asm.Type[] $r11, $r21;

        r2 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new groovyjarjarasm.asm.tree.AnnotationNode;

        specialinvoke $r0.<groovyjarjarasm.asm.tree.AnnotationNode: void <init>(java.lang.String)>(r1);

        if z0 == 0 goto label3;

        $r13 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        if $r13 != null goto label1;

        $r20 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String desc>;

        $r21 = staticinvoke <groovyjarjarasm.asm.Type: groovyjarjarasm.asm.Type[] getArgumentTypes(java.lang.String)>($r20);

        i1 = lengthof $r21;

        $r22 = newarray (java.util.List)[i1];

        r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations> = $r22;

     label1:
        $r14 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        $r15 = $r14[i0];

        if $r15 != null goto label2;

        $r19 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(1);

        $r19[i0] = $r18;

     label2:
        $r16 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        $r17 = $r16[i0];

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label6;

     label3:
        $r3 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        if $r3 != null goto label4;

        $r10 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String desc>;

        $r11 = staticinvoke <groovyjarjarasm.asm.Type: groovyjarjarasm.asm.Type[] getArgumentTypes(java.lang.String)>($r10);

        i2 = lengthof $r11;

        $r12 = newarray (java.util.List)[i2];

        r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations> = $r12;

     label4:
        $r4 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        $r5 = $r4[i0];

        if $r5 != null goto label5;

        $r9 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(1);

        $r9[i0] = $r8;

     label5:
        $r6 = r2.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        $r7 = $r6[i0];

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r0);

     label6:
        return $r0;
    }

    public void visitCode()
    {
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        return;
    }

    public void visitInsn(int)
    {
        java.util.List $r2;
        int i0;
        groovyjarjarasm.asm.tree.InsnNode $r1;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        $r2 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.InsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.InsnNode: void <init>(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitIntInsn(int, int)
    {
        java.util.List $r2;
        groovyjarjarasm.asm.tree.IntInsnNode $r1;
        int i0, i1;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.IntInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.IntInsnNode: void <init>(int,int)>(i0, i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitVarInsn(int, int)
    {
        java.util.List $r2;
        groovyjarjarasm.asm.tree.VarInsnNode $r1;
        int i0, i1;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.VarInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.VarInsnNode: void <init>(int,int)>(i0, i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        java.util.List $r3;
        groovyjarjarasm.asm.tree.TypeInsnNode $r1;
        int i0;
        java.lang.String r2;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.TypeInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.TypeInsnNode: void <init>(int,java.lang.String)>(i0, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        groovyjarjarasm.asm.tree.FieldInsnNode $r1;
        java.util.List $r5;
        int i0;
        java.lang.String r2, r3, r4;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.FieldInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.FieldInsnNode: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r2, r3, r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.List $r5;
        groovyjarjarasm.asm.tree.MethodInsnNode $r1;
        int i0;
        java.lang.String r2, r3, r4;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.MethodInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.MethodInsnNode: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r2, r3, r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitJumpInsn(int, groovyjarjarasm.asm.Label)
    {
        java.util.List $r3;
        int i0;
        groovyjarjarasm.asm.tree.JumpInsnNode $r1;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.Label r2;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r2 := @parameter1: groovyjarjarasm.asm.Label;

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.JumpInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.JumpInsnNode: void <init>(int,groovyjarjarasm.asm.Label)>(i0, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitLabel(groovyjarjarasm.asm.Label)
    {
        java.util.List $r3;
        groovyjarjarasm.asm.tree.LabelNode $r1;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.Label r2;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r2 := @parameter0: groovyjarjarasm.asm.Label;

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.LabelNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.LabelNode: void <init>(groovyjarjarasm.asm.Label)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        java.util.List $r3;
        groovyjarjarasm.asm.tree.LdcInsnNode $r1;
        java.lang.Object r2;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.LdcInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.LdcInsnNode: void <init>(java.lang.Object)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitIincInsn(int, int)
    {
        java.util.List $r2;
        groovyjarjarasm.asm.tree.IincInsnNode $r1;
        int i0, i1;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.IincInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.IincInsnNode: void <init>(int,int)>(i0, i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitTableSwitchInsn(int, int, groovyjarjarasm.asm.Label, groovyjarjarasm.asm.Label[])
    {
        java.util.List $r4;
        int i0, i1;
        groovyjarjarasm.asm.Label[] r3;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.tree.TableSwitchInsnNode $r1;
        groovyjarjarasm.asm.Label r2;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: groovyjarjarasm.asm.Label;

        r3 := @parameter3: groovyjarjarasm.asm.Label[];

        $r4 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.TableSwitchInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: void <init>(int,int,groovyjarjarasm.asm.Label,groovyjarjarasm.asm.Label[])>(i0, i1, r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitLookupSwitchInsn(groovyjarjarasm.asm.Label, int[], groovyjarjarasm.asm.Label[])
    {
        java.util.List $r5;
        int[] r3;
        groovyjarjarasm.asm.tree.LookupSwitchInsnNode $r1;
        groovyjarjarasm.asm.Label[] r4;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.Label r2;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r2 := @parameter0: groovyjarjarasm.asm.Label;

        r3 := @parameter1: int[];

        r4 := @parameter2: groovyjarjarasm.asm.Label[];

        $r5 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.LookupSwitchInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: void <init>(groovyjarjarasm.asm.Label,int[],groovyjarjarasm.asm.Label[])>(r2, r3, r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        java.util.List $r3;
        int i0;
        groovyjarjarasm.asm.tree.MultiANewArrayInsnNode $r1;
        java.lang.String r2;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r1 = new groovyjarjarasm.asm.tree.MultiANewArrayInsnNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.MultiANewArrayInsnNode: void <init>(java.lang.String,int)>(r2, i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitTryCatchBlock(groovyjarjarasm.asm.Label, groovyjarjarasm.asm.Label, groovyjarjarasm.asm.Label, java.lang.String)
    {
        java.util.List $r6;
        java.lang.String r5;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.tree.TryCatchBlockNode $r1;
        groovyjarjarasm.asm.Label r2, r3, r4;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r2 := @parameter0: groovyjarjarasm.asm.Label;

        r3 := @parameter1: groovyjarjarasm.asm.Label;

        r4 := @parameter2: groovyjarjarasm.asm.Label;

        r5 := @parameter3: java.lang.String;

        $r6 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List tryCatchBlocks>;

        $r1 = new groovyjarjarasm.asm.tree.TryCatchBlockNode;

        specialinvoke $r1.<groovyjarjarasm.asm.tree.TryCatchBlockNode: void <init>(groovyjarjarasm.asm.Label,groovyjarjarasm.asm.Label,groovyjarjarasm.asm.Label,java.lang.String)>(r2, r3, r4, r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, groovyjarjarasm.asm.Label, groovyjarjarasm.asm.Label, int)
    {
        groovyjarjarasm.asm.tree.MethodNode r0;
        java.util.ArrayList $r9;
        java.util.List $r1, $r8;
        int i0;
        groovyjarjarasm.asm.tree.LocalVariableNode $r2;
        java.lang.String r3, r4, r5;
        groovyjarjarasm.asm.Label r6, r7;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: groovyjarjarasm.asm.Label;

        r7 := @parameter4: groovyjarjarasm.asm.Label;

        i0 := @parameter5: int;

        $r1 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables>;

        if $r1 != null goto label1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(1);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables> = $r9;

     label1:
        $r8 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables>;

        $r2 = new groovyjarjarasm.asm.tree.LocalVariableNode;

        specialinvoke $r2.<groovyjarjarasm.asm.tree.LocalVariableNode: void <init>(java.lang.String,java.lang.String,java.lang.String,groovyjarjarasm.asm.Label,groovyjarjarasm.asm.Label,int)>(r3, r4, r5, r6, r7, i0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void visitLineNumber(int, groovyjarjarasm.asm.Label)
    {
        java.util.List $r1, $r4;
        int i0;
        groovyjarjarasm.asm.tree.LineNumberNode $r2;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.Label r3;
        java.util.ArrayList $r5;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        r3 := @parameter1: groovyjarjarasm.asm.Label;

        $r1 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers>;

        if $r1 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(1);

        r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers> = $r5;

     label1:
        $r4 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers>;

        $r2 = new groovyjarjarasm.asm.tree.LineNumberNode;

        specialinvoke $r2.<groovyjarjarasm.asm.tree.LineNumberNode: void <init>(int,groovyjarjarasm.asm.Label)>(i0, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void visitMaxs(int, int)
    {
        int i0, i1;
        groovyjarjarasm.asm.tree.MethodNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<groovyjarjarasm.asm.tree.MethodNode: int maxStack> = i0;

        r0.<groovyjarjarasm.asm.tree.MethodNode: int maxLocals> = i1;

        return;
    }

    public void accept(groovyjarjarasm.asm.ClassVisitor)
    {
        groovyjarjarasm.asm.MethodVisitor $r8;
        groovyjarjarasm.asm.tree.AnnotationNode r60, r61, r63, r65;
        java.lang.String $r5, $r6, $r7, $r44, $r48, $r52, $r56;
        groovyjarjarasm.asm.tree.TryCatchBlockNode $r35;
        groovyjarjarasm.asm.Attribute $r41;
        java.util.List[] $r14, $r15, $r16, $r17, $r42, $r46;
        groovyjarjarasm.asm.tree.MethodNode r0;
        groovyjarjarasm.asm.AnnotationVisitor $r45, $r49, $r53, $r57, $r58;
        java.util.List $r1, $r3, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r30, $r33, $r36, $r39, $r50, $r54, r62, r64;
        groovyjarjarasm.asm.tree.AbstractInsnNode $r38;
        java.lang.String[] r2;
        groovyjarjarasm.asm.ClassVisitor r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, i13, i14, $i15, i16, i17, i18, $i19, i20, i21, i22, $i23, i24, i25, i26, i27, $i28, i29, i30, $i31, i32, i33;
        java.lang.Object $r9, $r28, $r31, $r34, $r37, $r40, $r43, $r47, $r51, $r55, $r59;
        groovyjarjarasm.asm.tree.LocalVariableNode $r32;
        groovyjarjarasm.asm.tree.LineNumberNode $r29;

        r0 := @this: groovyjarjarasm.asm.tree.MethodNode;

        r4 := @parameter0: groovyjarjarasm.asm.ClassVisitor;

        $r1 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List exceptions>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List exceptions>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        $i1 = r0.<groovyjarjarasm.asm.tree.MethodNode: int access>;

        $r7 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String name>;

        $r6 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String desc>;

        $r5 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.String signature>;

        $r8 = interfaceinvoke r4.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($i1, $r7, $r6, $r5, r2);

        if $r8 != null goto label01;

        return;

     label01:
        $r9 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.Object annotationDefault>;

        if $r9 == null goto label02;

        $r58 = interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: groovyjarjarasm.asm.AnnotationVisitor visitAnnotationDefault()>();

        $r59 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.lang.Object annotationDefault>;

        staticinvoke <groovyjarjarasm.asm.tree.AnnotationNode: void accept(groovyjarjarasm.asm.AnnotationVisitor,java.lang.String,java.lang.Object)>($r58, null, $r59);

        interfaceinvoke $r58.<groovyjarjarasm.asm.AnnotationVisitor: void visitEnd()>();

     label02:
        $r10 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List visibleAnnotations>;

        if $r10 != null goto label03;

        $i9 = 0;

        goto label04;

     label03:
        $r11 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List visibleAnnotations>;

        $i9 = interfaceinvoke $r11.<java.util.List: int size()>();

     label04:
        i10 = $i9;

        i11 = 0;

     label05:
        if i11 >= i10 goto label06;

        $r54 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List visibleAnnotations>;

        $r55 = interfaceinvoke $r54.<java.util.List: java.lang.Object get(int)>(i11);

        r60 = (groovyjarjarasm.asm.tree.AnnotationNode) $r55;

        $r56 = r60.<groovyjarjarasm.asm.tree.AnnotationNode: java.lang.String desc>;

        $r57 = interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: groovyjarjarasm.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r56, 1);

        virtualinvoke r60.<groovyjarjarasm.asm.tree.AnnotationNode: void accept(groovyjarjarasm.asm.AnnotationVisitor)>($r57);

        i11 = i11 + 1;

        goto label05;

     label06:
        $r12 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List invisibleAnnotations>;

        if $r12 != null goto label07;

        $i12 = 0;

        goto label08;

     label07:
        $r13 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List invisibleAnnotations>;

        $i12 = interfaceinvoke $r13.<java.util.List: int size()>();

     label08:
        i13 = $i12;

        i14 = 0;

     label09:
        if i14 >= i13 goto label10;

        $r50 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List invisibleAnnotations>;

        $r51 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(i14);

        r61 = (groovyjarjarasm.asm.tree.AnnotationNode) $r51;

        $r52 = r61.<groovyjarjarasm.asm.tree.AnnotationNode: java.lang.String desc>;

        $r53 = interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: groovyjarjarasm.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r52, 0);

        virtualinvoke r61.<groovyjarjarasm.asm.tree.AnnotationNode: void accept(groovyjarjarasm.asm.AnnotationVisitor)>($r53);

        i14 = i14 + 1;

        goto label09;

     label10:
        $r14 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        if $r14 != null goto label11;

        $i15 = 0;

        goto label12;

     label11:
        $r15 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        $i15 = lengthof $r15;

     label12:
        i16 = $i15;

        i17 = 0;

     label13:
        if i17 >= i16 goto label17;

        $r46 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] visibleParameterAnnotations>;

        r62 = $r46[i17];

        if r62 != null goto label14;

        goto label16;

     label14:
        i18 = 0;

     label15:
        $i8 = interfaceinvoke r62.<java.util.List: int size()>();

        if i18 >= $i8 goto label16;

        $r47 = interfaceinvoke r62.<java.util.List: java.lang.Object get(int)>(i18);

        r63 = (groovyjarjarasm.asm.tree.AnnotationNode) $r47;

        $r48 = r63.<groovyjarjarasm.asm.tree.AnnotationNode: java.lang.String desc>;

        $r49 = interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: groovyjarjarasm.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i17, $r48, 1);

        virtualinvoke r63.<groovyjarjarasm.asm.tree.AnnotationNode: void accept(groovyjarjarasm.asm.AnnotationVisitor)>($r49);

        i18 = i18 + 1;

        goto label15;

     label16:
        i17 = i17 + 1;

        goto label13;

     label17:
        $r16 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        if $r16 != null goto label18;

        $i19 = 0;

        goto label19;

     label18:
        $r17 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        $i19 = lengthof $r17;

     label19:
        i20 = $i19;

        i21 = 0;

     label20:
        if i21 >= i20 goto label24;

        $r42 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List[] invisibleParameterAnnotations>;

        r64 = $r42[i21];

        if r64 != null goto label21;

        goto label23;

     label21:
        i22 = 0;

     label22:
        $i7 = interfaceinvoke r64.<java.util.List: int size()>();

        if i22 >= $i7 goto label23;

        $r43 = interfaceinvoke r64.<java.util.List: java.lang.Object get(int)>(i22);

        r65 = (groovyjarjarasm.asm.tree.AnnotationNode) $r43;

        $r44 = r65.<groovyjarjarasm.asm.tree.AnnotationNode: java.lang.String desc>;

        $r45 = interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: groovyjarjarasm.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i21, $r44, 0);

        virtualinvoke r65.<groovyjarjarasm.asm.tree.AnnotationNode: void accept(groovyjarjarasm.asm.AnnotationVisitor)>($r45);

        i22 = i22 + 1;

        goto label22;

     label23:
        i21 = i21 + 1;

        goto label20;

     label24:
        $r18 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List attrs>;

        if $r18 != null goto label25;

        $i23 = 0;

        goto label26;

     label25:
        $r19 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List attrs>;

        $i23 = interfaceinvoke $r19.<java.util.List: int size()>();

     label26:
        i24 = $i23;

        i25 = 0;

     label27:
        if i25 >= i24 goto label28;

        $r39 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List attrs>;

        $r40 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(i25);

        $r41 = (groovyjarjarasm.asm.Attribute) $r40;

        interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: void visitAttribute(groovyjarjarasm.asm.Attribute)>($r41);

        i25 = i25 + 1;

        goto label27;

     label28:
        $r20 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i2 <= 0 goto label41;

        interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: void visitCode()>();

        i26 = 0;

     label29:
        $r21 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $i3 = interfaceinvoke $r21.<java.util.List: int size()>();

        if i26 >= $i3 goto label30;

        $r36 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List instructions>;

        $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(i26);

        $r38 = (groovyjarjarasm.asm.tree.AbstractInsnNode) $r37;

        virtualinvoke $r38.<groovyjarjarasm.asm.tree.AbstractInsnNode: void accept(groovyjarjarasm.asm.MethodVisitor)>($r8);

        i26 = i26 + 1;

        goto label29;

     label30:
        i27 = 0;

     label31:
        $r22 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List tryCatchBlocks>;

        $i4 = interfaceinvoke $r22.<java.util.List: int size()>();

        if i27 >= $i4 goto label32;

        $r33 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List tryCatchBlocks>;

        $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(i27);

        $r35 = (groovyjarjarasm.asm.tree.TryCatchBlockNode) $r34;

        virtualinvoke $r35.<groovyjarjarasm.asm.tree.TryCatchBlockNode: void accept(groovyjarjarasm.asm.MethodVisitor)>($r8);

        i27 = i27 + 1;

        goto label31;

     label32:
        $r23 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables>;

        if $r23 != null goto label33;

        $i28 = 0;

        goto label34;

     label33:
        $r24 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables>;

        $i28 = interfaceinvoke $r24.<java.util.List: int size()>();

     label34:
        i29 = $i28;

        i30 = 0;

     label35:
        if i30 >= i29 goto label36;

        $r30 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List localVariables>;

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i30);

        $r32 = (groovyjarjarasm.asm.tree.LocalVariableNode) $r31;

        virtualinvoke $r32.<groovyjarjarasm.asm.tree.LocalVariableNode: void accept(groovyjarjarasm.asm.MethodVisitor)>($r8);

        i30 = i30 + 1;

        goto label35;

     label36:
        $r25 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers>;

        if $r25 != null goto label37;

        $i31 = 0;

        goto label38;

     label37:
        $r26 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers>;

        $i31 = interfaceinvoke $r26.<java.util.List: int size()>();

     label38:
        i32 = $i31;

        i33 = 0;

     label39:
        if i33 >= i32 goto label40;

        $r27 = r0.<groovyjarjarasm.asm.tree.MethodNode: java.util.List lineNumbers>;

        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i33);

        $r29 = (groovyjarjarasm.asm.tree.LineNumberNode) $r28;

        virtualinvoke $r29.<groovyjarjarasm.asm.tree.LineNumberNode: void accept(groovyjarjarasm.asm.MethodVisitor)>($r8);

        i33 = i33 + 1;

        goto label39;

     label40:
        $i6 = r0.<groovyjarjarasm.asm.tree.MethodNode: int maxStack>;

        $i5 = r0.<groovyjarjarasm.asm.tree.MethodNode: int maxLocals>;

        interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>($i6, $i5);

     label41:
        interfaceinvoke $r8.<groovyjarjarasm.asm.MethodVisitor: void visitEnd()>();

        return;
    }
}
