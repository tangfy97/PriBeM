public abstract class javax.xml.parsers.DocumentBuilderFactory extends java.lang.Object
{
    private boolean validating;
    private boolean namespaceAware;
    private boolean whitespace;
    private boolean expandEntityRef;
    private boolean ignoreComments;
    private boolean coalescing;

    protected void <init>()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating> = 0;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware> = 0;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace> = 0;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef> = 1;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments> = 0;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing> = 0;

        return;
    }

    public static javax.xml.parsers.DocumentBuilderFactory newInstance()
    {
        javax.xml.parsers.FactoryFinder$ConfigurationError $r2;
        java.lang.Object $r0;
        javax.xml.parsers.DocumentBuilderFactory $r1;
        java.lang.String $r5;
        javax.xml.parsers.FactoryConfigurationError $r3;
        java.lang.Exception $r4;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)>("javax.xml.parsers.DocumentBuilderFactory", "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl");

        $r1 = (javax.xml.parsers.DocumentBuilderFactory) $r0;

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new javax.xml.parsers.FactoryConfigurationError;

        $r4 = virtualinvoke $r2.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();

        $r5 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r4, $r5);

        throw $r3;

        catch javax.xml.parsers.FactoryFinder$ConfigurationError from label1 to label2 with label2;
    }

    public static javax.xml.parsers.DocumentBuilderFactory newInstance(java.lang.String, java.lang.ClassLoader)
    {
        javax.xml.parsers.FactoryFinder$ConfigurationError $r4;
        javax.xml.parsers.FactoryConfigurationError $r3, $r5;
        java.lang.Exception $r6;
        java.lang.Object $r1;
        java.lang.String r0, $r7;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        java.lang.ClassLoader r8;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r3 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r3.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.String)>("factoryClassName cannot be null.");

        throw $r3;

     label1:
        if r8 != null goto label2;

        r8 = staticinvoke <javax.xml.parsers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        $r1 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r8, 0);

        $r2 = (javax.xml.parsers.DocumentBuilderFactory) $r1;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new javax.xml.parsers.FactoryConfigurationError;

        $r6 = virtualinvoke $r4.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();

        $r7 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r5.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r6, $r7);

        throw $r5;

        catch javax.xml.parsers.FactoryFinder$ConfigurationError from label2 to label3 with label3;
    }

    public abstract javax.xml.parsers.DocumentBuilder newDocumentBuilder() throws javax.xml.parsers.ParserConfigurationException;

    public void setNamespaceAware(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware> = z0;

        return;
    }

    public void setValidating(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating> = z0;

        return;
    }

    public void setIgnoringElementContentWhitespace(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace> = z0;

        return;
    }

    public void setExpandEntityReferences(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef> = z0;

        return;
    }

    public void setIgnoringComments(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments> = z0;

        return;
    }

    public void setCoalescing(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing> = z0;

        return;
    }

    public boolean isNamespaceAware()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware>;

        return $z0;
    }

    public boolean isValidating()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating>;

        return $z0;
    }

    public boolean isIgnoringElementContentWhitespace()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace>;

        return $z0;
    }

    public boolean isExpandEntityReferences()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef>;

        return $z0;
    }

    public boolean isIgnoringComments()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments>;

        return $z0;
    }

    public boolean isCoalescing()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing>;

        return $z0;
    }

    public abstract void setAttribute(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException;

    public abstract java.lang.Object getAttribute(java.lang.String) throws java.lang.IllegalArgumentException;

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.parsers.ParserConfigurationException;

    public abstract boolean getFeature(java.lang.String) throws javax.xml.parsers.ParserConfigurationException;

    public javax.xml.validation.Schema getSchema()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Package $r5, $r10;
        java.lang.StringBuffer $r1, $r2, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        javax.xml.parsers.DocumentBuilderFactory r3;
        java.lang.String $r6, $r11, $r14;

        r3 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r0;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        javax.xml.validation.Schema r15;
        java.lang.StringBuffer $r1, $r2, $r7, $r8, $r12, $r13;
        java.lang.String $r6, $r11, $r14;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Package $r5, $r10;
        java.lang.Class $r4, $r9;
        javax.xml.parsers.DocumentBuilderFactory r3;

        r3 := @this: javax.xml.parsers.DocumentBuilderFactory;

        r15 := @parameter0: javax.xml.validation.Schema;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r0;
    }

    public void setXIncludeAware(boolean)
    {
        java.lang.StringBuffer $r1, $r2, $r7, $r8, $r12, $r13;
        java.lang.String $r6, $r11, $r14;
        boolean z0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Package $r5, $r10;
        java.lang.Class $r4, $r9;
        javax.xml.parsers.DocumentBuilderFactory r3;

        r3 := @this: javax.xml.parsers.DocumentBuilderFactory;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r0;
    }

    public boolean isXIncludeAware()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Package $r5, $r10;
        java.lang.StringBuffer $r1, $r2, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        javax.xml.parsers.DocumentBuilderFactory r3;
        java.lang.String $r6, $r11, $r14;

        r3 := @this: javax.xml.parsers.DocumentBuilderFactory;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r0;
    }
}
