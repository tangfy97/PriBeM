public class org.apache.lucene.search.FuzzyTermsEnum extends org.apache.lucene.index.TermsEnum
{
    private org.apache.lucene.index.TermsEnum actualEnum;
    private org.apache.lucene.search.BoostAttribute actualBoostAtt;
    private final org.apache.lucene.search.BoostAttribute boostAtt;
    private final org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt;
    private final org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute dfaAtt;
    private float bottom;
    private org.apache.lucene.util.BytesRef bottomTerm;
    private final java.util.Comparator termComparator;
    protected final float minSimilarity;
    protected final float scale_factor;
    protected final int termLength;
    protected int maxEdits;
    protected final boolean raw;
    protected final org.apache.lucene.index.Terms terms;
    private final org.apache.lucene.index.Term term;
    protected final int[] termText;
    protected final int realPrefixLength;
    private final boolean transpositions;
    private org.apache.lucene.util.BytesRef queuedBottom;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.Terms, org.apache.lucene.util.AttributeSource, org.apache.lucene.index.Term, float, int, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.Term r6;
        org.apache.lucene.search.MaxNonCompetitiveBoostAttribute $r14, $r15, $r16;
        byte $b0, $b1, $b8, $b17;
        int[] $r8, $r9, $r19;
        org.apache.lucene.util.AttributeSource $r1, r10;
        boolean z0;
        org.apache.lucene.index.Terms r5;
        org.apache.lucene.util.BytesRef $r17;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        org.apache.lucene.util.Attribute $r2, $r11, $r13;
        org.apache.lucene.search.BoostAttribute $r3;
        org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute $r12;
        int i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, i19, $i20, $i21, $i22, $i23;
        java.lang.String $r7;
        java.lang.UnsupportedOperationException $r26;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        java.lang.IllegalArgumentException $r23, $r24, $r25;
        java.util.Comparator $r4;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r5 := @parameter0: org.apache.lucene.index.Terms;

        r10 := @parameter1: org.apache.lucene.util.AttributeSource;

        r6 := @parameter2: org.apache.lucene.index.Term;

        f0 := @parameter3: float;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<org.apache.lucene.index.TermsEnum: void <init>()>();

        $r1 = virtualinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.AttributeSource attributes()>();

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/BoostAttribute;");

        $r3 = (org.apache.lucene.search.BoostAttribute) $r2;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.BoostAttribute boostAtt> = $r3;

        $r4 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        r0.<org.apache.lucene.search.FuzzyTermsEnum: java.util.Comparator termComparator> = $r4;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef queuedBottom> = null;

        $b0 = f0 cmpl 1.0F;

        $i21 = (int) $b0;

        if $i21 < 0 goto label01;

        $i16 = (int) f0;

        $f6 = (float) $i16;

        $b17 = f0 cmpl $f6;

        if $b17 == 0 goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fractional edit distances are not allowed");

        throw $r23;

     label01:
        $b1 = f0 cmpg 0.0F;

        $i22 = (int) $b1;

        if $i22 >= 0 goto label02;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minimumSimilarity cannot be less than 0");

        throw $r24;

     label02:
        if i2 >= 0 goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("prefixLength cannot be less than 0");

        throw $r25;

     label03:
        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.Terms terms> = r5;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.Term term> = r6;

        $r7 = virtualinvoke r6.<org.apache.lucene.index.Term: java.lang.String text()>();

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i4 = virtualinvoke $r7.<java.lang.String: int codePointCount(int,int)>(0, $i3);

        $r8 = newarray (int)[$i4];

        r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText> = $r8;

        i18 = 0;

        i19 = 0;

     label04:
        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i18 >= $i5 goto label05;

        $r19 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText>;

        $i13 = i19;

        i19 = i19 + 1;

        $i14 = virtualinvoke $r7.<java.lang.String: int codePointAt(int)>(i18);

        $r19[$i13] = $i14;

        $i15 = staticinvoke <java.lang.Character: int charCount(int)>($i14);

        i18 = i18 + $i15;

        goto label04;

     label05:
        $r9 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText>;

        $i6 = lengthof $r9;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: int termLength> = $i6;

        $r11 = virtualinvoke r10.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/FuzzyTermsEnum$LevenshteinAutomataAttribute;");

        $r12 = (org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute) $r11;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute dfaAtt> = $r12;

        $i7 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int termLength>;

        if i2 <= $i7 goto label06;

        $i20 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int termLength>;

        goto label07;

     label06:
        $i20 = i2;

     label07:
        r0.<org.apache.lucene.search.FuzzyTermsEnum: int realPrefixLength> = $i20;

        $b8 = f0 cmpl 1.0F;

        $i23 = (int) $b8;

        if $i23 < 0 goto label08;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity> = 0.0F;

        $i12 = (int) f0;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits> = $i12;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: boolean raw> = 1;

        goto label09;

     label08:
        r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity> = f0;

        $f1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity>;

        $i9 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int termLength>;

        $i10 = specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: int initialMaxDistance(float,int)>($f1, $i9);

        r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits> = $i10;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: boolean raw> = 0;

     label09:
        if z0 == 0 goto label10;

        $i11 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        if $i11 <= 2 goto label10;

        $r26 = new java.lang.UnsupportedOperationException;

        specialinvoke $r26.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("with transpositions enabled, distances > 2 are not supported ");

        throw $r26;

     label10:
        r0.<org.apache.lucene.search.FuzzyTermsEnum: boolean transpositions> = z0;

        $f2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity>;

        $f3 = 1.0F - $f2;

        $f4 = 1.0F / $f3;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: float scale_factor> = $f4;

        $r13 = virtualinvoke r10.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/MaxNonCompetitiveBoostAttribute;");

        $r14 = (org.apache.lucene.search.MaxNonCompetitiveBoostAttribute) $r13;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt> = $r14;

        $r15 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $f5 = interfaceinvoke $r15.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: float getMaxNonCompetitiveBoost()>();

        r0.<org.apache.lucene.search.FuzzyTermsEnum: float bottom> = $f5;

        $r16 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $r17 = interfaceinvoke $r16.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: org.apache.lucene.util.BytesRef getCompetitiveTerm()>();

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef bottomTerm> = $r17;

        specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: void bottomChanged(org.apache.lucene.util.BytesRef,boolean)>(null, 1);

        return;
    }

    protected org.apache.lucene.index.TermsEnum getAutomatonEnum(int, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        java.lang.Object[] $r11;
        org.apache.lucene.search.FuzzyTermsEnum$AutomatonFuzzyTermsEnum $r4;
        org.apache.lucene.util.automaton.CompiledAutomaton[] $r10, $r12;
        org.apache.lucene.index.TermsEnum $r8;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.util.automaton.CompiledAutomaton r3;
        org.apache.lucene.index.Terms $r7;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef r5, $r6, $r13;
        java.util.List $r1, $r9;
        java.lang.Object $r2;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: java.util.List initAutomata(int)>(i0);

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (org.apache.lucene.util.automaton.CompiledAutomaton) $r2;

        $r4 = new org.apache.lucene.search.FuzzyTermsEnum$AutomatonFuzzyTermsEnum;

        $r7 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.Terms terms>;

        if r5 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r6 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r6.<org.apache.lucene.util.BytesRef: void <init>()>();

        $r13 = virtualinvoke r3.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef floor(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>(r5, $r6);

     label2:
        $r8 = virtualinvoke $r7.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum intersect(org.apache.lucene.util.automaton.CompiledAutomaton,org.apache.lucene.util.BytesRef)>(r3, $r13);

        $i2 = i0 + 1;

        $r9 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(0, $i2);

        $i3 = i0 + 1;

        $r10 = newarray (org.apache.lucene.util.automaton.CompiledAutomaton)[$i3];

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (org.apache.lucene.util.automaton.CompiledAutomaton[]) $r11;

        specialinvoke $r4.<org.apache.lucene.search.FuzzyTermsEnum$AutomatonFuzzyTermsEnum: void <init>(org.apache.lucene.search.FuzzyTermsEnum,org.apache.lucene.index.TermsEnum,org.apache.lucene.util.automaton.CompiledAutomaton[])>(r0, $r8, $r12);

        return $r4;

     label3:
        return null;
    }

    private java.util.List initAutomata(int)
    {
        org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute $r1;
        int[] $r4, $r5, $r10;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.Boolean $r9;
        java.lang.String $r6, $r11;
        boolean $z0;
        org.apache.lucene.util.automaton.CompiledAutomaton $r8;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.automaton.Automaton $r7, $r12, r13;
        java.util.List $r2;
        org.apache.lucene.util.automaton.LevenshteinAutomata $r3;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute dfaAtt>;

        $r2 = interfaceinvoke $r1.<org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttribute: java.util.List automata()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > i1 goto label3;

        if i1 > 2 goto label3;

        $r3 = new org.apache.lucene.util.automaton.LevenshteinAutomata;

        $r5 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText>;

        $i5 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int realPrefixLength>;

        $r4 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText>;

        $i3 = lengthof $r4;

        $i2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int realPrefixLength>;

        $i4 = $i3 - $i2;

        $r6 = staticinvoke <org.apache.lucene.util.UnicodeUtil: java.lang.String newString(int[],int,int)>($r5, $i5, $i4);

        $z0 = r0.<org.apache.lucene.search.FuzzyTermsEnum: boolean transpositions>;

        specialinvoke $r3.<org.apache.lucene.util.automaton.LevenshteinAutomata: void <init>(java.lang.String,boolean)>($r6, $z0);

        i8 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i8 > i1 goto label3;

        $r7 = virtualinvoke $r3.<org.apache.lucene.util.automaton.LevenshteinAutomata: org.apache.lucene.util.automaton.Automaton toAutomaton(int)>(i8);

        r13 = $r7;

        $i6 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int realPrefixLength>;

        if $i6 <= 0 goto label2;

        $r10 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int[] termText>;

        $i7 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int realPrefixLength>;

        $r11 = staticinvoke <org.apache.lucene.util.UnicodeUtil: java.lang.String newString(int[],int,int)>($r10, 0, $i7);

        $r12 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeString(java.lang.String)>($r11);

        r13 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: org.apache.lucene.util.automaton.Automaton concatenate(org.apache.lucene.util.automaton.Automaton,org.apache.lucene.util.automaton.Automaton)>($r12, $r7);

     label2:
        $r8 = new org.apache.lucene.util.automaton.CompiledAutomaton;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r8.<org.apache.lucene.util.automaton.CompiledAutomaton: void <init>(org.apache.lucene.util.automaton.Automaton,java.lang.Boolean,boolean)>(r13, $r9, 0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        i8 = i8 + 1;

        goto label1;

     label3:
        return $r2;
    }

    protected void setEnum(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum r1;
        org.apache.lucene.search.BoostAttribute $r4;
        org.apache.lucene.util.AttributeSource $r2;
        org.apache.lucene.util.Attribute $r3;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum> = r1;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.AttributeSource attributes()>();

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/BoostAttribute;");

        $r4 = (org.apache.lucene.search.BoostAttribute) $r3;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.BoostAttribute actualBoostAtt> = $r4;

        return;
    }

    private void bottomChanged(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        byte $b3, $b7;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        boolean z0, z1, $z2;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1, r2, $r3;
        float $f0, $f1, $f2, $f3;
        java.util.Comparator $r4;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        z1 := @parameter1: boolean;

        i0 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef bottomTerm>;

        if $r1 == null goto label1;

        if r2 == null goto label2;

        $r4 = r0.<org.apache.lucene.search.FuzzyTermsEnum: java.util.Comparator termComparator>;

        $r3 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef bottomTerm>;

        $i8 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $i8 < 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        $i9 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        if $i9 <= 0 goto label7;

        if z0 == 0 goto label5;

        $f2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float bottom>;

        $i6 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        $f3 = specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: float calculateMaxBoost(int)>($i6);

        $b7 = $f2 cmpl $f3;

        $i11 = (int) $b7;

        if $i11 < 0 goto label7;

        goto label6;

     label5:
        $f0 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float bottom>;

        $i2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        $f1 = specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: float calculateMaxBoost(int)>($i2);

        $b3 = $f0 cmpl $f1;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label7;

     label6:
        $i4 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        $i5 = $i4 - 1;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits> = $i5;

        goto label4;

     label7:
        $i10 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        if i0 != $i10 goto label8;

        if z1 == 0 goto label9;

     label8:
        $i1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int maxEdits>;

        virtualinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: void maxEditDistanceChanged(org.apache.lucene.util.BytesRef,int,boolean)>(r2, $i1, z1);

     label9:
        return;
    }

    protected void maxEditDistanceChanged(org.apache.lucene.util.BytesRef, int, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef r1;
        java.lang.AssertionError $r4;
        java.lang.IllegalArgumentException $r3;
        org.apache.lucene.index.TermsEnum $r2;
        int i0;
        boolean $z0, z1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum getAutomatonEnum(int,org.apache.lucene.util.BytesRef)>(i0, r1);

        if $r2 != null goto label2;

        $z0 = <org.apache.lucene.search.FuzzyTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 2 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxEdits cannot be > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE");

        throw $r3;

     label2:
        virtualinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: void setEnum(org.apache.lucene.index.TermsEnum)>($r2);

        return;
    }

    private int initialMaxDistance(float, int)
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        int i0, $i1;
        float f0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $d0 = (double) f0;

        $d2 = 1.0 - $d0;

        $d1 = (double) i0;

        $d3 = $d2 * $d1;

        $i1 = (int) $d3;

        return $i1;
    }

    private float calculateMaxBoost(int)
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        int i0, $i1;
        float $f0, $f1, $f2, f3, $f4, $f5, $f6, $f7;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        i0 := @parameter0: int;

        $f1 = (float) i0;

        $i1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: int termLength>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        f3 = 1.0F - $f2;

        $f4 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity>;

        $f6 = f3 - $f4;

        $f5 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float scale_factor>;

        $f7 = $f6 * $f5;

        return $f7;
    }

    public org.apache.lucene.util.BytesRef next() throws java.io.IOException
    {
        org.apache.lucene.search.BoostAttribute $r4, $r5;
        org.apache.lucene.search.MaxNonCompetitiveBoostAttribute $r6, $r7;
        byte $b0;
        org.apache.lucene.index.TermsEnum $r2;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1, $r3, $r8, $r9, $r10, $r11;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef queuedBottom>;

        if $r1 == null goto label1;

        $r11 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef queuedBottom>;

        specialinvoke r0.<org.apache.lucene.search.FuzzyTermsEnum: void bottomChanged(org.apache.lucene.util.BytesRef,boolean)>($r11, 0);

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef queuedBottom> = null;

     label1:
        $r2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        $r5 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.BoostAttribute boostAtt>;

        $r4 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.BoostAttribute actualBoostAtt>;

        $f0 = interfaceinvoke $r4.<org.apache.lucene.search.BoostAttribute: float getBoost()>();

        interfaceinvoke $r5.<org.apache.lucene.search.BoostAttribute: void setBoost(float)>($f0);

        $r6 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $f1 = interfaceinvoke $r6.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: float getMaxNonCompetitiveBoost()>();

        $r7 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $r8 = interfaceinvoke $r7.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: org.apache.lucene.util.BytesRef getCompetitiveTerm()>();

        if $r3 == null goto label3;

        $f2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float bottom>;

        $b0 = $f1 cmpl $f2;

        if $b0 != 0 goto label2;

        $r10 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef bottomTerm>;

        if $r8 == $r10 goto label3;

     label2:
        r0.<org.apache.lucene.search.FuzzyTermsEnum: float bottom> = $f1;

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef bottomTerm> = $r8;

        $r9 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r3);

        r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.util.BytesRef queuedBottom> = $r9;

     label3:
        return $r3;
    }

    public int docFreq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        return $i0;
    }

    public long totalTermFreq() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        return $l0;
    }

    public org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r3;
        int i0;
        org.apache.lucene.index.DocsEnum r2, $r4;
        org.apache.lucene.util.Bits r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        r2 := @parameter1: org.apache.lucene.index.DocsEnum;

        i0 := @parameter2: int;

        $r3 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r1, r2, i0);

        return $r4;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocsAndPositionsEnum r2, $r4;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r3;
        int i0;
        org.apache.lucene.util.Bits r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        r2 := @parameter1: org.apache.lucene.index.DocsAndPositionsEnum;

        i0 := @parameter2: int;

        $r3 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum,int)>(r1, r2, i0);

        return $r4;
    }

    public void seekExact(org.apache.lucene.util.BytesRef, org.apache.lucene.index.TermState) throws java.io.IOException
    {
        org.apache.lucene.index.TermState r2;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef r1;
        org.apache.lucene.index.TermsEnum $r3;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        r2 := @parameter1: org.apache.lucene.index.TermState;

        $r3 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: void seekExact(org.apache.lucene.util.BytesRef,org.apache.lucene.index.TermState)>(r1, r2);

        return;
    }

    public org.apache.lucene.index.TermState termState() throws java.io.IOException
    {
        org.apache.lucene.index.TermState $r2;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        return $r2;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        java.util.Comparator $r2;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: java.util.Comparator getComparator()>();

        return $r2;
    }

    public long ord() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: long ord()>();

        return $l0;
    }

    public boolean seekExact(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef r1;
        org.apache.lucene.index.TermsEnum $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>(r1, z0);

        return $z1;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.TermsEnum$SeekStatus $r3;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.util.BytesRef r1;
        org.apache.lucene.index.TermsEnum $r2;
        boolean z0;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef,boolean)>(r1, z0);

        return $r3;
    }

    public void seekExact(long) throws java.io.IOException
    {
        long l0;
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: void seekExact(long)>(l0);

        return;
    }

    public org.apache.lucene.util.BytesRef term() throws java.io.IOException
    {
        org.apache.lucene.search.FuzzyTermsEnum r0;
        org.apache.lucene.index.TermsEnum $r1;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.TermsEnum actualEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        return $r2;
    }

    public float getMinSimilarity()
    {
        float $f0;
        org.apache.lucene.search.FuzzyTermsEnum r0;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $f0 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float minSimilarity>;

        return $f0;
    }

    public float getScaleFactor()
    {
        float $f0;
        org.apache.lucene.search.FuzzyTermsEnum r0;

        r0 := @this: org.apache.lucene.search.FuzzyTermsEnum;

        $f0 = r0.<org.apache.lucene.search.FuzzyTermsEnum: float scale_factor>;

        return $f0;
    }

    static org.apache.lucene.index.Term access$000(org.apache.lucene.search.FuzzyTermsEnum)
    {
        org.apache.lucene.index.Term $r1;
        org.apache.lucene.search.FuzzyTermsEnum r0;

        r0 := @parameter0: org.apache.lucene.search.FuzzyTermsEnum;

        $r1 = r0.<org.apache.lucene.search.FuzzyTermsEnum: org.apache.lucene.index.Term term>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/FuzzyTermsEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.FuzzyTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
