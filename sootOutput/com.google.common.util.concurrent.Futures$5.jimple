final class com.google.common.util.concurrent.Futures$5 extends java.lang.Object implements java.util.concurrent.Future
{
    private final java.lang.Object lock;
    private boolean set;
    private java.lang.Object value;
    private java.util.concurrent.ExecutionException exception;
    final java.util.concurrent.Future val$future;
    final com.google.common.base.Function val$function;

    void <init>(java.util.concurrent.Future, com.google.common.base.Function)
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future r1;
        com.google.common.base.Function r2;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: com.google.common.base.Function;

        r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future> = r1;

        r0.<com.google.common.util.concurrent.Futures$5: com.google.common.base.Function val$function> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object lock> = $r3;

        r0.<com.google.common.util.concurrent.Futures$5: boolean set> = 0;

        r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object value> = null;

        r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.ExecutionException exception> = null;

        return;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.Future: java.lang.Object get()>();

        $r3 = specialinvoke r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object apply(java.lang.Object)>($r2);

        return $r3;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit r1;
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r2;
        long l0;
        java.lang.Object $r3, $r4;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $r4 = specialinvoke r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object apply(java.lang.Object)>($r3);

        return $r4;
    }

    private java.lang.Object apply(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        java.lang.Throwable $r7;
        com.google.common.util.concurrent.Futures$5 r0;
        com.google.common.base.Function $r5;
        java.lang.Error $r8;
        java.lang.RuntimeException $r10;
        java.util.concurrent.ExecutionException $r3, $r9, $r11, $r12;
        java.lang.Object $r1, $r2, r4, $r6;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        r4 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $z0 = r0.<com.google.common.util.concurrent.Futures$5: boolean set>;

        if $z0 != 0 goto label07;

     label02:
        $r5 = r0.<com.google.common.util.concurrent.Futures$5: com.google.common.base.Function val$function>;

        $r6 = interfaceinvoke $r5.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r4);

        r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object value> = $r6;

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

        $r11 = new java.util.concurrent.ExecutionException;

        specialinvoke $r11.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r10);

        r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.ExecutionException exception> = $r11;

        goto label06;

     label05:
        $r8 := @caughtexception;

        $r9 = new java.util.concurrent.ExecutionException;

        specialinvoke $r9.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r8);

        r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.ExecutionException exception> = $r9;

     label06:
        r0.<com.google.common.util.concurrent.Futures$5: boolean set> = 1;

     label07:
        $r12 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.ExecutionException exception>;

        if $r12 == null goto label08;

        $r3 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.ExecutionException exception>;

        throw $r3;

     label08:
        $r2 = r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object value>;

        exitmonitor $r1;

     label09:
        return $r2;

     label10:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r7;

        catch java.lang.RuntimeException from label02 to label03 with label04;
        catch java.lang.Error from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean cancel(boolean)
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        boolean z0, $z1;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z1 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>(z0);

        return $z1;
    }

    public boolean isCancelled()
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isDone()>();

        return $z0;
    }
}
