final class org.apache.xmlbeans.impl.store.Saver$FragSaveCur extends org.apache.xmlbeans.impl.store.Saver$SaveCur
{
    private org.apache.xmlbeans.impl.store.Cur _cur;
    private org.apache.xmlbeans.impl.store.Cur _end;
    private java.util.ArrayList _ancestorNamespaces;
    private javax.xml.namespace.QName _elem;
    private boolean _saveAttr;
    private static final int ROOT_START;
    private static final int ELEM_START;
    private static final int ROOT_END;
    private static final int ELEM_END;
    private static final int CUR;
    private int _state;
    private int[] _stateStack;
    private int _stateStackSize;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.impl.store.Cur, javax.xml.namespace.QName)
    {
        int[] $r6;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.store.Cur r1, r2, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        r3 := @parameter2: javax.xml.namespace.QName;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean _saveAttr> = $z2;

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur weakCur(java.lang.Object)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur> = $r4;

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur weakCur(java.lang.Object)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _end> = $r5;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: javax.xml.namespace.QName _elem> = r3;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 1;

        $r6 = newarray (int)[8];

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack> = $r6;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: void computeAncestorNamespaces(org.apache.xmlbeans.impl.store.Cur)>(r1);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return;
    }

    java.util.List getAncestorNamespaces()
    {
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: java.util.ArrayList _ancestorNamespaces>;

        return $r1;
    }

    private void computeAncestorNamespaces(org.apache.xmlbeans.impl.store.Cur)
    {
        java.util.ArrayList $r1, $r5, $r7;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r6, $r8;
        org.apache.xmlbeans.impl.store.Cur r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        r2 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: java.util.ArrayList _ancestorNamespaces> = $r1;

     label1:
        $z2 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean toParentRaw()>();

        if $z2 == 0 goto label5;

        $z0 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        if $z0 == 0 goto label1;

     label2:
        $z1 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 == 0 goto label4;

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsPrefix()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsUri()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 > 0 goto label3;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label3:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: java.util.ArrayList _ancestorNamespaces>;

        $r6 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsPrefix()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: java.util.ArrayList _ancestorNamespaces>;

        $r8 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsUri()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label4:
        $z3 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z3 != 0 goto label2;

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        goto label1;

     label5:
        return;
    }

    void release()
    {
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur> = null;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _end>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _end> = null;

        return;
    }

    int kind()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1, $i2, $i4, $i6;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label5;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        $i4 = (int) -2;

        return $i4;

     label4:
        $i6 = (int) -1;

        return $i6;

     label5:
        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i2 == 5 goto label6;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label6:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        return $i1;
    }

    javax.xml.namespace.QName getName()
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1;
        javax.xml.namespace.QName $r1, $r3;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        return null;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: javax.xml.namespace.QName _elem>;

        return $r1;

     label3:
        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i1 == 5 goto label4;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label4:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        return $r3;
    }

    java.lang.String getXmlnsPrefix()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur $r1, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i0 != 5 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsPrefix()>();

        return $r2;
    }

    java.lang.String getXmlnsUri()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur $r1, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i0 != 5 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsUri()>();

        return $r2;
    }

    boolean isXmlns()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i0 != 5 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z2 != 0 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        return $z1;
    }

    boolean hasChildren()
    {
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        z3 = 0;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean isContainer()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: void push()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean next()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean isText()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean isFinish()>();

        if $z2 != 0 goto label1;

        z3 = 1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: void pop()>();

     label2:
        return z3;
    }

    boolean hasText()
    {
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        z2 = 0;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean isContainer()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: void push()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean next()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean isText()>();

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: void pop()>();

     label2:
        return z2;
    }

    boolean isTextCData()
    {
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        org.apache.xmlbeans.impl.store.Cur $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isTextCData()>();

        return $z0;
    }

    java.lang.Object getChars()
    {
        java.lang.AssertionError $r7;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1, $i2, $i4;
        java.lang.Object $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur $r1, $r3, $r4, $r6;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i2 != 5 goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z1 != 0 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i4 = (int) -1;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>($i4);

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i0 = $r3.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _offSrc> = $i0;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i1 = $r4.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _cchSrc> = $i1;

        return $r2;
    }

    boolean next()
    {
        java.lang.AssertionError $r6;
        byte $b1, $b2;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.xml.namespace.QName $r4, $r12;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label08;
            default: goto label14;
        };

     label01:
        $r12 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: javax.xml.namespace.QName _elem>;

        if $r12 != null goto label02;

        $b1 = 5;

        goto label03;

     label02:
        $b1 = 2;

     label03:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = $b1;

        goto label14;

     label04:
        $z3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean _saveAttr>;

        if $z3 == 0 goto label05;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 4;

        goto label14;

     label05:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z4 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z4 == 0 goto label06;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        $r11 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

     label06:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _end>;

        $z5 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Cur: boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)>($r8);

        if $z5 == 0 goto label07;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 4;

        goto label14;

     label07:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 5;

        goto label14;

     label08:
        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label09;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z2 == 0 goto label09;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label09:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _end>;

        $z1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)>($r2);

        if $z1 == 0 goto label14;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: javax.xml.namespace.QName _elem>;

        if $r4 != null goto label10;

        $b2 = 3;

        goto label11;

     label10:
        $b2 = 4;

     label11:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = $b2;

        goto label14;

     label12:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 3;

        goto label14;

     label13:
        return 0;

     label14:
        return 1;
    }

    void toEnd()
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 3;

        return;

     label2:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 4;

        return;

     label3:
        return;

     label4:
        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i1 != 5 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label5;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z2 == 0 goto label6;

     label5:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label6:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: void toEnd()>();

        return;
    }

    boolean toFirstAttr()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label2;
            default: goto label3;
        };

     label1:
        return 0;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        return $z0;

     label3:
        $z1 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i1 == 2 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z2 != 0 goto label5;

        return 0;

     label5:
        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = 5;

        return 1;
    }

    boolean toNextAttr()
    {
        java.lang.AssertionError $r2;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i0 == 5 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $z1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean _saveAttr>;

        if $z1 != 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    java.lang.String getAttrValue()
    {
        java.lang.AssertionError $r3;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur $r1, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        if $i0 != 5 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getValueAsString()>();

        return $r2;
    }

    void push()
    {
        int[] $r1, $r2, r4, $r5;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xmlbeans.impl.store.Cur $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $i1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize>;

        $i6 = $i5 * 2;

        r4 = newarray (int)[$i6];

        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack>;

        $i7 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i7);

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack> = r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state>;

        $r2[$i2] = $i4;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        return;
    }

    void pop()
    {
        int[] $r2;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int[] _stateStack>;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize>;

        $i1 = $i0 - 1;

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _stateStackSize> = $i1;

        $i2 = $r2[$i1];

        r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int _state> = $i2;

        return;
    }

    org.apache.xmlbeans.XmlDocumentProperties getDocProps()
    {
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        org.apache.xmlbeans.impl.store.Saver$FragSaveCur r0;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$FragSaveCur;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$FragSaveCur: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r1, 0);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int CUR> = 5;

        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int ELEM_END> = 4;

        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int ROOT_END> = 3;

        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int ELEM_START> = 2;

        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: int ROOT_START> = 1;

        $r0 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Saver");

        <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Saver$FragSaveCur: boolean $assertionsDisabled> = $z1;

        return;
    }
}
