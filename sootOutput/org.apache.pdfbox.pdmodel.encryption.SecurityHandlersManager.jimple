public class org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private static org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager instance;
    private java.util.Hashtable handlerNames;
    private java.util.Hashtable handlerPolicyClasses;

    private void <init>()
    {
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager r0;
        java.lang.RuntimeException $r4;
        java.util.Hashtable $r1, $r2;
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames> = null;

        r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses> = null;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses> = $r2;

     label1:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)>("Standard", class "Lorg/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler;", class "Lorg/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy;");

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)>("Adobe.PubSec", class "Lorg/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler;", class "Lorg/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy;");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException from label1 to label2 with label3;
    }

    public void registerHandler(java.lang.String, java.lang.Class, java.lang.Class) throws org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException
    {
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r3, $r11, $r18, $r24, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager r0;
        java.lang.Exception $r29;
        java.lang.StringBuilder $r4, $r5, $r7, $r19, $r20, $r22, $r25, $r26, $r27;
        java.lang.String $r6, $r8, r12, $r21, $r23, $r28;
        java.util.Hashtable $r2, $r9, $r13, $r15, $r16, $r17;
        java.lang.Class r1, $r10, r14;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r14 := @parameter2: java.lang.Class;

        $r2 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r9 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses>;

        $z1 = virtualinvoke $r9.<java.util.Hashtable: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r3 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the following security handler was already registered: ");

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r10 = class "Lorg/apache/pdfbox/pdmodel/encryption/SecurityHandler;";

        $z2 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z2 == 0 goto label8;

     label3:
        $r13 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames>;

        $z3 = virtualinvoke $r13.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r12);

        if $z3 == 0 goto label4;

        $r24 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a security handler was already registered for the filter name ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label4:
        $r15 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses>;

        $z4 = virtualinvoke $r15.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r14);

        if $z4 == 0 goto label5;

        $r18 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a security handler was already registered for the policy class ");

        $r21 = virtualinvoke r14.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label5:
        $r16 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, r1);

        $r17 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r1);

     label6:
        goto label9;

     label7:
        $r29 := @caughtexception;

        $r30 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        specialinvoke $r30.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.Exception)>($r29);

        throw $r30;

     label8:
        $r11 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        specialinvoke $r11.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>("The class is not a super class of SecurityHandler");

        throw $r11;

     label9:
        return;

        catch java.lang.Exception from label3 to label6 with label7;
    }

    public static org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager getInstance()
    {
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager $r0, $r1, $r2;
        org.bouncycastle.jce.provider.BouncyCastleProvider $r3;

        $r0 = <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager instance>;

        if $r0 != null goto label1;

        $r2 = new org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager;

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: void <init>()>();

        <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager instance> = $r2;

        $r3 = new org.bouncycastle.jce.provider.BouncyCastleProvider;

        specialinvoke $r3.<org.bouncycastle.jce.provider.BouncyCastleProvider: void <init>()>();

        staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r3);

     label1:
        $r1 = <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager instance>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy) throws org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException
    {
        java.lang.Object[] $r8;
        java.lang.reflect.Constructor $r9;
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r12, $r21;
        java.lang.String $r16, $r18, $r24, $r27, $r29;
        java.util.Hashtable $r2;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager r0;
        java.lang.Class[] $r6;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler r11;
        java.lang.Exception $r19;
        java.lang.Class $r3, r5, $r7, $r15;
        java.lang.Object $r4, $r10;
        java.lang.StringBuilder $r13, $r14, $r17, $r22, $r23, $r25, $r26, $r28;
        org.apache.commons.logging.Log $r20;
        org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy r1;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy;

        $r2 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerPolicyClasses>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label1;

        $r12 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find an appropriate security handler for ");

        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label1:
        r5 = (java.lang.Class) $r4;

        $r6 = newarray (java.lang.Class)[1];

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6[0] = $r7;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

     label2:
        $r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6);

        $r10 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        r11 = (org.apache.pdfbox.pdmodel.encryption.SecurityHandler) $r10;

     label3:
        return r11;

     label4:
        $r19 := @caughtexception;

        $r20 = <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r19, $r19);

        $r21 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem while trying to instanciate the security handler ");

        $r24 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke $r19.<java.lang.Exception: java.lang.String getMessage()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r29);

        throw $r21;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler(java.lang.String) throws org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException
    {
        java.lang.Object[] r6;
        java.lang.reflect.Constructor $r7;
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r10, $r17;
        java.lang.String r1, $r14, $r20, $r23, $r25;
        java.util.Hashtable $r2;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager r0;
        java.lang.Class[] r5;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler r9;
        java.lang.Exception $r15;
        java.lang.Object $r3, $r8;
        java.lang.Class r4;
        java.lang.StringBuilder $r11, $r12, $r13, $r18, $r19, $r21, $r22, $r24;
        org.apache.commons.logging.Log $r16;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: java.util.Hashtable handlerNames>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $r10 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find an appropriate security handler for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        r4 = (java.lang.Class) $r3;

        r5 = newarray (java.lang.Class)[0];

        r6 = newarray (java.lang.Object)[0];

     label2:
        $r7 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);

        $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r6);

        r9 = (org.apache.pdfbox.pdmodel.encryption.SecurityHandler) $r8;

     label3:
        return r9;

     label4:
        $r15 := @caughtexception;

        $r16 = <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r15, $r15);

        $r17 = new org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem while trying to instanciate the security handler ");

        $r20 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r23 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException: void <init>(java.lang.String)>($r25);

        throw $r17;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager;");

        <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
