public class org.fife.io.DocumentReader extends java.io.Reader
{
    private long position;
    private long mark;
    private javax.swing.text.Document document;
    private javax.swing.text.Segment segment;

    public void <init>(javax.swing.text.Document)
    {
        org.fife.io.DocumentReader r0;
        javax.swing.text.Document r1;
        javax.swing.text.Segment $r2;

        r0 := @this: org.fife.io.DocumentReader;

        r1 := @parameter0: javax.swing.text.Document;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.fife.io.DocumentReader: long position> = 0L;

        r0.<org.fife.io.DocumentReader: long mark> = -1L;

        r0.<org.fife.io.DocumentReader: javax.swing.text.Document document> = r1;

        $r2 = new javax.swing.text.Segment;

        specialinvoke $r2.<javax.swing.text.Segment: void <init>()>();

        r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment> = $r2;

        return;
    }

    public void close()
    {
        org.fife.io.DocumentReader r0;

        r0 := @this: org.fife.io.DocumentReader;

        return;
    }

    public void mark(int)
    {
        org.fife.io.DocumentReader r0;
        int i1;
        long $l0;

        r0 := @this: org.fife.io.DocumentReader;

        i1 := @parameter0: int;

        $l0 = r0.<org.fife.io.DocumentReader: long position>;

        r0.<org.fife.io.DocumentReader: long mark> = $l0;

        return;
    }

    public boolean markSupported()
    {
        org.fife.io.DocumentReader r0;

        r0 := @this: org.fife.io.DocumentReader;

        return 1;
    }

    public int read()
    {
        org.fife.io.DocumentReader r0;
        long $l0, $l2, $l4, $l6, $l7;
        byte $b3;
        int $i1, $i5, $i8, $i10, $i12, $i13, $i15;
        char $c9;
        javax.swing.text.BadLocationException $r7;
        char[] $r6;
        javax.swing.text.Document $r1, $r3;
        javax.swing.text.Segment $r2, $r4, $r5;

        r0 := @this: org.fife.io.DocumentReader;

        $l0 = r0.<org.fife.io.DocumentReader: long position>;

        $r1 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i1 = interfaceinvoke $r1.<javax.swing.text.Document: int getLength()>();

        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        $i10 = (int) $b3;

        if $i10 < 0 goto label1;

        $i12 = (int) -1;

        return $i12;

     label1:
        $r3 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $l4 = r0.<org.fife.io.DocumentReader: long position>;

        $i5 = (int) $l4;

        $r2 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        interfaceinvoke $r3.<javax.swing.text.Document: void getText(int,int,javax.swing.text.Segment)>($i5, 1, $r2);

        $l6 = r0.<org.fife.io.DocumentReader: long position>;

        $l7 = $l6 + 1L;

        r0.<org.fife.io.DocumentReader: long position> = $l7;

        $r4 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        $r6 = $r4.<javax.swing.text.Segment: char[] array>;

        $r5 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        $i8 = $r5.<javax.swing.text.Segment: int offset>;

        $c9 = $r6[$i8];

     label2:
        $i13 = (int) $c9;

        return $i13;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<javax.swing.text.BadLocationException: void printStackTrace()>();

        $i15 = (int) -1;

        return $i15;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public int read(char[])
    {
        org.fife.io.DocumentReader r0;
        int $i0, $i1;
        char[] r1;

        r0 := @this: org.fife.io.DocumentReader;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.fife.io.DocumentReader: int read(char[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(char[], int, int)
    {
        byte $b3, $b10;
        javax.swing.text.BadLocationException $r10;
        javax.swing.text.Document $r1, $r2, $r5, $r9;
        org.fife.io.DocumentReader r0;
        long $l0, $l2, $l5, $l6, $l7, $l9, $l14, $l16, $l17, $l18, $l22;
        int $i1, i4, $i8, i11, $i12, $i13, $i15, $i19, $i20, $i21, $i23, i24, $i25, $i27, $i28, $i30;
        char[] r3, $r8;
        javax.swing.text.Segment $r4, $r6, $r7;

        r0 := @this: org.fife.io.DocumentReader;

        r3 := @parameter0: char[];

        i11 := @parameter1: int;

        i4 := @parameter2: int;

        $l0 = r0.<org.fife.io.DocumentReader: long position>;

        $r1 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i1 = interfaceinvoke $r1.<javax.swing.text.Document: int getLength()>();

        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        $i25 = (int) $b3;

        if $i25 < 0 goto label1;

        $i27 = (int) -1;

        return $i27;

     label1:
        i24 = i4;

        $l6 = r0.<org.fife.io.DocumentReader: long position>;

        $l5 = (long) i4;

        $l7 = $l6 + $l5;

        $r2 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i8 = interfaceinvoke $r2.<javax.swing.text.Document: int getLength()>();

        $l9 = (long) $i8;

        $b10 = $l7 cmp $l9;

        $i28 = (int) $b10;

        if $i28 < 0 goto label2;

        $r9 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i21 = interfaceinvoke $r9.<javax.swing.text.Document: int getLength()>();

        $l22 = r0.<org.fife.io.DocumentReader: long position>;

        $i23 = (int) $l22;

        i24 = $i21 - $i23;

     label2:
        $i13 = i11 + i24;

        $i12 = lengthof r3;

        if $i13 < $i12 goto label3;

        $i20 = lengthof r3;

        i24 = $i20 - i11;

     label3:
        $r5 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $l14 = r0.<org.fife.io.DocumentReader: long position>;

        $i15 = (int) $l14;

        $r4 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        interfaceinvoke $r5.<javax.swing.text.Document: void getText(int,int,javax.swing.text.Segment)>($i15, i24, $r4);

        $l17 = r0.<org.fife.io.DocumentReader: long position>;

        $l16 = (long) i24;

        $l18 = $l17 + $l16;

        r0.<org.fife.io.DocumentReader: long position> = $l18;

        $r6 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        $r8 = $r6.<javax.swing.text.Segment: char[] array>;

        $r7 = r0.<org.fife.io.DocumentReader: javax.swing.text.Segment segment>;

        $i19 = $r7.<javax.swing.text.Segment: int offset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i19, r3, i11, i24);

     label4:
        return i24;

     label5:
        $r10 := @caughtexception;

        $i30 = (int) -1;

        return $i30;

        catch javax.swing.text.BadLocationException from label3 to label4 with label5;
    }

    public boolean ready()
    {
        org.fife.io.DocumentReader r0;

        r0 := @this: org.fife.io.DocumentReader;

        return 1;
    }

    public void reset()
    {
        org.fife.io.DocumentReader r0;
        byte $b1;
        long $l0, $l2;

        r0 := @this: org.fife.io.DocumentReader;

        $l0 = r0.<org.fife.io.DocumentReader: long mark>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        r0.<org.fife.io.DocumentReader: long position> = 0L;

        goto label2;

     label1:
        $l2 = r0.<org.fife.io.DocumentReader: long mark>;

        r0.<org.fife.io.DocumentReader: long position> = $l2;

        r0.<org.fife.io.DocumentReader: long mark> = -1L;

     label2:
        return;
    }

    public long skip(long)
    {
        org.fife.io.DocumentReader r0;
        long l0, $l1, $l2, $l4, l6, $l8, $l10, $l11, $l12, $l13;
        byte $b5;
        int $i3, $i7, $i9, $i14;
        javax.swing.text.Document $r1, $r2, $r3;

        r0 := @this: org.fife.io.DocumentReader;

        l0 := @parameter0: long;

        $l1 = r0.<org.fife.io.DocumentReader: long position>;

        $l2 = $l1 + l0;

        $r1 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i3 = interfaceinvoke $r1.<javax.swing.text.Document: int getLength()>();

        $l4 = (long) $i3;

        $b5 = $l2 cmp $l4;

        $i14 = (int) $b5;

        if $i14 > 0 goto label1;

        $l12 = r0.<org.fife.io.DocumentReader: long position>;

        $l13 = $l12 + l0;

        r0.<org.fife.io.DocumentReader: long position> = $l13;

        return l0;

     label1:
        l6 = r0.<org.fife.io.DocumentReader: long position>;

        $r2 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i7 = interfaceinvoke $r2.<javax.swing.text.Document: int getLength()>();

        $l8 = (long) $i7;

        r0.<org.fife.io.DocumentReader: long position> = $l8;

        $r3 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i9 = interfaceinvoke $r3.<javax.swing.text.Document: int getLength()>();

        $l10 = (long) $i9;

        $l11 = $l10 - l6;

        return $l11;
    }

    public void seek(long)
    {
        org.fife.io.DocumentReader r0;
        int $i1;
        long l0, $l2, $l3;
        javax.swing.text.Document $r1;

        r0 := @this: org.fife.io.DocumentReader;

        l0 := @parameter0: long;

        $r1 = r0.<org.fife.io.DocumentReader: javax.swing.text.Document document>;

        $i1 = interfaceinvoke $r1.<javax.swing.text.Document: int getLength()>();

        $l2 = (long) $i1;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l2);

        r0.<org.fife.io.DocumentReader: long position> = $l3;

        return;
    }
}
