class org.springframework.util.WeakReferenceMonitor$MonitoringProcess extends java.lang.Object implements java.lang.Runnable
{

    private void <init>()
    {
        org.springframework.util.WeakReferenceMonitor$MonitoringProcess r0;

        r0 := @this: org.springframework.util.WeakReferenceMonitor$MonitoringProcess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r4, $r7;
        org.springframework.util.WeakReferenceMonitor$MonitoringProcess r9;
        java.lang.ref.ReferenceQueue $r1;
        java.lang.ref.Reference $r2;
        org.springframework.util.WeakReferenceMonitor$ReleaseListener $r3;
        java.lang.InterruptedException $r5;
        org.apache.commons.logging.Log $r0, $r6, $r8;
        boolean $z0;

        r9 := @this: org.springframework.util.WeakReferenceMonitor$MonitoringProcess;

        $r0 = staticinvoke <org.springframework.util.WeakReferenceMonitor: org.apache.commons.logging.Log access$0()>();

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Starting reference monitor thread");

        goto label12;

     label01:
        $r1 = staticinvoke <org.springframework.util.WeakReferenceMonitor: java.lang.ref.ReferenceQueue access$2()>();

        $r2 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

        $r3 = staticinvoke <org.springframework.util.WeakReferenceMonitor: org.springframework.util.WeakReferenceMonitor$ReleaseListener access$3(java.lang.ref.Reference)>($r2);

        if $r3 == null goto label12;

     label02:
        interfaceinvoke $r3.<org.springframework.util.WeakReferenceMonitor$ReleaseListener: void released()>();

     label03:
        goto label12;

     label04:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.springframework.util.WeakReferenceMonitor: org.apache.commons.logging.Log access$0()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Reference release listener threw exception", $r7);

     label05:
        goto label12;

     label06:
        $r5 := @caughtexception;

        entermonitor class "Lorg/springframework/util/WeakReferenceMonitor;";

     label07:
        staticinvoke <org.springframework.util.WeakReferenceMonitor: void access$4(java.lang.Thread)>(null);

        exitmonitor class "Lorg/springframework/util/WeakReferenceMonitor;";

     label08:
        goto label11;

     label09:
        $r4 := @caughtexception;

        exitmonitor class "Lorg/springframework/util/WeakReferenceMonitor;";

     label10:
        throw $r4;

     label11:
        $r6 = staticinvoke <org.springframework.util.WeakReferenceMonitor: org.apache.commons.logging.Log access$0()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Reference monitor thread interrupted", $r5);

        goto label13;

     label12:
        $z0 = staticinvoke <org.springframework.util.WeakReferenceMonitor: boolean access$1()>();

        if $z0 != 0 goto label01;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.InterruptedException from label01 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void <init>(org.springframework.util.WeakReferenceMonitor$MonitoringProcess)
    {
        org.springframework.util.WeakReferenceMonitor$MonitoringProcess r0, r1;

        r0 := @this: org.springframework.util.WeakReferenceMonitor$MonitoringProcess;

        r1 := @parameter0: org.springframework.util.WeakReferenceMonitor$MonitoringProcess;

        specialinvoke r0.<org.springframework.util.WeakReferenceMonitor$MonitoringProcess: void <init>()>();

        return;
    }
}
