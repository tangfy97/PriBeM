public class com.hp.hpl.jena.sparql.engine.http.HttpQuery extends com.hp.hpl.jena.sparql.engine.http.Params
{
    static final org.slf4j.Logger log;
    public static int urlLimit;
    java.lang.String serviceURL;
    java.lang.String contentTypeResult;
    static final java.lang.Object noValue;
    private org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator;
    private int responseCode;
    private java.lang.String responseMessage;
    private boolean forcePOST;
    private java.lang.String queryString;
    private boolean serviceParams;
    private final java.util.regex.Pattern queryParamPattern;
    private int connectTimeout;
    private int readTimeout;
    private boolean allowGZip;
    private boolean allowDeflate;
    private org.apache.http.client.HttpClient client;

    public void <init>(java.lang.String)
    {
        java.util.regex.Pattern $r1;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult> = "application/sparql-results+xml";

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String responseMessage> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean forcePOST> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String queryString> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean serviceParams> = 0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".+[&|\\?]query=.*");

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.util.regex.Pattern queryParamPattern> = $r1;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowGZip> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowDeflate> = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void init(java.lang.String)>(r2);

        return;
    }

    public void <init>(java.net.URL)
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        java.net.URL r2;
        java.util.regex.Pattern $r1;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r2 := @parameter0: java.net.URL;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult> = "application/sparql-results+xml";

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String responseMessage> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean forcePOST> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String queryString> = null;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean serviceParams> = 0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".+[&|\\?]query=.*");

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.util.regex.Pattern queryParamPattern> = $r1;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowGZip> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowDeflate> = 0;

        $r3 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void init(java.lang.String)>($r3);

        return;
    }

    private void init(java.lang.String)
    {
        org.slf4j.Logger $r0, $r7;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r2;
        java.util.regex.Matcher $r4;
        int $i0;
        com.hp.hpl.jena.query.QueryExecException $r5;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String r1, $r10;
        java.util.regex.Pattern $r3;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>($r10);

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(63);

        if $i0 < 0 goto label2;

        r2.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean serviceParams> = 1;

     label2:
        $r3 = r2.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.util.regex.Pattern queryParamPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label3;

        $r5 = new com.hp.hpl.jena.query.QueryExecException;

        specialinvoke $r5.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>("SERVICE URL overrides the \'query\' SPARQL protocol parameter");

        throw $r5;

     label3:
        r2.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL> = r1;

        return;
    }

    private java.lang.String getQueryString()
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String queryString>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.lang.String httpString()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String queryString> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String queryString>;

        return $r2;
    }

    public void setAccept(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r1 := @parameter0: java.lang.String;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult> = r1;

        return;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        return $r1;
    }

    public int getResponseCode()
    {
        int $i0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $i0 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode>;

        return $i0;
    }

    public void setAllowGZip(boolean)
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowGZip> = z0;

        return;
    }

    public void setAllowDeflate(boolean)
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowDeflate> = z0;

        return;
    }

    public void setBasicAuthentication(java.lang.String, char[])
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        org.apache.jena.atlas.web.auth.SimpleAuthenticator $r1;
        char[] r3;
        java.lang.String r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: char[];

        $r1 = new org.apache.jena.atlas.web.auth.SimpleAuthenticator;

        specialinvoke $r1.<org.apache.jena.atlas.web.auth.SimpleAuthenticator: void <init>(java.lang.String,char[])>(r2, r3);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setAuthenticator(org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r1);

        return;
    }

    public void setAuthenticator(org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        org.apache.jena.atlas.web.auth.HttpAuthenticator r1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r1 := @parameter0: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator> = r1;

        return;
    }

    public org.apache.http.client.HttpClient getClient()
    {
        org.apache.http.client.HttpClient $r1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        return $r1;
    }

    public boolean usesPOST()
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean forcePOST>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String getQueryString()>();

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i0 + $i1;

        $i2 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: int urlLimit>;

        if $i3 < $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void setForcePOST()
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean forcePOST> = 1;

        return;
    }

    public void setConnectTimeout(int)
    {
        int i0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        i0 := @parameter0: int;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout> = i0;

        return;
    }

    public int getConnectTimeout()
    {
        int $i0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $i0 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout>;

        return $i0;
    }

    public void setReadTimeout(int)
    {
        int i0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        i0 := @parameter0: int;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout> = i0;

        return;
    }

    public int getReadTimeout()
    {
        int $i0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $i0 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout>;

        return $i0;
    }

    public java.io.InputStream exec() throws com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP
    {
        org.slf4j.Logger $r4, $r6;
        com.hp.hpl.jena.shared.JenaException $r3;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP $r5;
        boolean $z0;
        java.io.InputStream $r1, $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean usesPOST()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream execPost()>();

     label2:
        return $r2;

     label3:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream execGet()>();

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        $r6 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Exception in exec", $r5);

        throw $r5;

     label6:
        $r3 := @caughtexception;

        $r4 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("JenaException in exec", $r3);

        throw $r3;

        catch com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP from label1 to label2 with label5;
        catch com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP from label3 to label4 with label5;
        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label6;
        catch com.hp.hpl.jena.shared.JenaException from label3 to label4 with label6;
    }

    private java.io.InputStream execGet() throws com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP
    {
        org.apache.http.impl.client.DecompressingHttpClient $r25;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r22, $r51;
        org.apache.http.impl.client.SystemDefaultHttpClient $r16;
        com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP $r28, $r36, $r41;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r10, $r12, $r14, $r42, $r43, $r44;
        java.lang.Throwable $r37;
        long $l1;
        org.apache.http.client.HttpClient $r17, $r21, $r26, $r29, $r31, $r50;
        java.lang.String $r1, $r5, $r9, $r13, $r15, $r23, $r34, $r45, $r47, $r48, $r49;
        org.apache.http.params.HttpParams $r18, $r30, $r32;
        java.net.URL $r3, $r33, r46;
        boolean $z0, $z1, $z2;
        org.apache.jena.atlas.web.TypedInputStream $r52;
        org.apache.http.protocol.BasicHttpContext $r20;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.http.impl.client.AbstractHttpClient $r24;
        org.slf4j.Logger $r2, $r11;
        java.net.MalformedURLException $r40;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        org.apache.jena.atlas.web.HttpException $r35, $r38;
        java.util.concurrent.TimeUnit $r19;
        java.io.InputStream $r27, $r39;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String getQueryString()>();

        $r2 = staticinvoke <com.hp.hpl.jena.query.ARQ: org.slf4j.Logger getHttpRequestLogger()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>($r1);

     label01:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int count()>();

        if $i0 != 0 goto label02;

        $r33 = new java.net.URL;

        $r34 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        specialinvoke $r33.<java.net.URL: void <init>(java.lang.String)>($r34);

        r46 = $r33;

        goto label05;

     label02:
        $r3 = new java.net.URL;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean serviceParams>;

        if $z0 == 0 goto label03;

        $r47 = "&";

        goto label04;

     label03:
        $r47 = "?";

     label04:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r9);

        r46 = $r3;

     label05:
        goto label07;

     label06:
        $r40 := @caughtexception;

        $r41 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int,java.lang.String)>(0, $r45);

        throw $r41;

     label07:
        $r11 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET ");

        $r13 = virtualinvoke r46.<java.net.URL: java.lang.String toExternalForm()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void trace(java.lang.String)>($r15);

     label08:
        $r16 = new org.apache.http.impl.client.SystemDefaultHttpClient;

        specialinvoke $r16.<org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client> = $r16;

        $r17 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r18 = interfaceinvoke $r17.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $r19 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l1 = virtualinvoke $r19.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        interfaceinvoke $r18.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>("http.conn-manager.timeout", $l1);

        $i2 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout>;

        if $i2 <= 0 goto label09;

        $r31 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r32 = interfaceinvoke $r31.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $i5 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout>;

        interfaceinvoke $r32.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i5);

     label09:
        $i3 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout>;

        if $i3 <= 0 goto label10;

        $r29 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r30 = interfaceinvoke $r29.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $i4 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout>;

        interfaceinvoke $r30.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i4);

     label10:
        $r20 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r20.<org.apache.http.protocol.BasicHttpContext: void <init>()>();

        $z1 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowGZip>;

        if $z1 != 0 goto label11;

        $z2 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowDeflate>;

        if $z2 == 0 goto label12;

     label11:
        $r21 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r24 = (org.apache.http.impl.client.AbstractHttpClient) $r21;

        $r23 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $r22 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void applyAuthentication(org.apache.http.impl.client.AbstractHttpClient,java.lang.String,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r24, $r23, $r20, $r22);

        $r25 = new org.apache.http.impl.client.DecompressingHttpClient;

        $r26 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        specialinvoke $r25.<org.apache.http.impl.client.DecompressingHttpClient: void <init>(org.apache.http.client.HttpClient)>($r26);

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client> = $r25;

     label12:
        $r48 = virtualinvoke r46.<java.net.URL: java.lang.String toString()>();

        $r49 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        $r50 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r51 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        $r52 = staticinvoke <org.apache.jena.riot.web.HttpOp: org.apache.jena.atlas.web.TypedInputStream execHttpGet(java.lang.String,java.lang.String,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r48, $r49, $r50, $r20, $r51);

        if $r52 != null goto label13;

        $r28 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int)>(404);

        throw $r28;

     label13:
        $r27 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream execCommon(org.apache.jena.atlas.web.TypedInputStream)>($r52);

     label14:
        return $r27;

     label15:
        $r38 := @caughtexception;

        $i8 = virtualinvoke $r38.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        if $i8 != 414 goto label17;

        $r39 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream execPost()>();

     label16:
        return $r39;

     label17:
        throw $r38;

     label18:
        $r35 := @caughtexception;

        $i6 = virtualinvoke $r35.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode> = $i6;

        $r36 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        $i7 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode>;

        $r37 = virtualinvoke $r35.<org.apache.jena.atlas.web.HttpException: java.lang.Throwable getCause()>();

        specialinvoke $r36.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int,java.lang.String,java.lang.Throwable)>($i7, "Error making the query, see cause for details", $r37);

        throw $r36;

        catch java.net.MalformedURLException from label01 to label05 with label06;
        catch org.apache.jena.atlas.web.HttpException from label08 to label14 with label15;
        catch org.apache.jena.atlas.web.HttpException from label08 to label14 with label18;
        catch org.apache.jena.atlas.web.HttpException from label15 to label16 with label18;
        catch org.apache.jena.atlas.web.HttpException from label17 to label18 with label18;
    }

    private java.io.InputStream execPost() throws com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP
    {
        org.apache.http.impl.client.DecompressingHttpClient $r20;
        java.net.URL $r0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r17, $r40;
        boolean $z0, $z1;
        org.apache.jena.atlas.web.TypedInputStream $r41;
        org.apache.http.impl.client.SystemDefaultHttpClient $r11;
        org.apache.http.protocol.BasicHttpContext $r15;
        com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP $r23, $r29, $r32;
        java.lang.StringBuilder $r3, $r5, $r7, $r33, $r34, $r35;
        java.lang.Throwable $r30;
        long $l0;
        org.apache.http.client.HttpClient $r12, $r16, $r21, $r24, $r26, $r39;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.http.impl.client.AbstractHttpClient $r19;
        java.lang.String $r2, $r6, $r8, $r10, $r18, $r36, $r37, $r38;
        org.slf4j.Logger $r4, $r9;
        java.net.MalformedURLException $r31;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r1;
        org.apache.jena.atlas.web.HttpException $r28;
        java.util.concurrent.TimeUnit $r14;
        org.apache.http.params.HttpParams $r13, $r25, $r27;
        java.io.InputStream $r22;

        r1 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

     label01:
        $r0 = new java.net.URL;

        $r2 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r2);

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        $r32 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int,java.lang.String)>(0, $r36);

        throw $r32;

     label04:
        $r4 = <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("POST ");

        $r6 = virtualinvoke $r0.<java.net.URL: java.lang.String toExternalForm()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>($r8);

        $r9 = staticinvoke <com.hp.hpl.jena.query.ARQ: org.slf4j.Logger getHttpRequestLogger()>();

        $r10 = virtualinvoke $r0.<java.net.URL: java.lang.String toExternalForm()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String)>($r10);

     label05:
        $r11 = new org.apache.http.impl.client.SystemDefaultHttpClient;

        specialinvoke $r11.<org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()>();

        r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client> = $r11;

        $r12 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r13 = interfaceinvoke $r12.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        interfaceinvoke $r13.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>("http.conn-manager.timeout", $l0);

        $i1 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout>;

        if $i1 <= 0 goto label06;

        $r26 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r27 = interfaceinvoke $r26.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $i4 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int connectTimeout>;

        interfaceinvoke $r27.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i4);

     label06:
        $i2 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout>;

        if $i2 <= 0 goto label07;

        $r24 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r25 = interfaceinvoke $r24.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $i3 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int readTimeout>;

        interfaceinvoke $r25.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i3);

     label07:
        $r15 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r15.<org.apache.http.protocol.BasicHttpContext: void <init>()>();

        $z0 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowGZip>;

        if $z0 != 0 goto label08;

        $z1 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: boolean allowDeflate>;

        if $z1 == 0 goto label09;

     label08:
        $r16 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r19 = (org.apache.http.impl.client.AbstractHttpClient) $r16;

        $r18 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $r17 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void applyAuthentication(org.apache.http.impl.client.AbstractHttpClient,java.lang.String,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r19, $r18, $r15, $r17);

        $r20 = new org.apache.http.impl.client.DecompressingHttpClient;

        $r21 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        specialinvoke $r20.<org.apache.http.impl.client.DecompressingHttpClient: void <init>(org.apache.http.client.HttpClient)>($r21);

        r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client> = $r20;

     label09:
        $r37 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $r38 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        $r39 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.http.client.HttpClient client>;

        $r40 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        $r41 = staticinvoke <org.apache.jena.riot.web.HttpOp: org.apache.jena.atlas.web.TypedInputStream execHttpPostFormStream(java.lang.String,com.hp.hpl.jena.sparql.engine.http.Params,java.lang.String,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r37, r1, $r38, $r39, $r15, $r40);

        if $r41 != null goto label10;

        $r23 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        specialinvoke $r23.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int)>(404);

        throw $r23;

     label10:
        $r22 = specialinvoke r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream execCommon(org.apache.jena.atlas.web.TypedInputStream)>($r41);

     label11:
        return $r22;

     label12:
        $r28 := @caughtexception;

        $i5 = virtualinvoke $r28.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode> = $i5;

        $r29 = new com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

        $i6 = r1.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode>;

        $r30 = virtualinvoke $r28.<org.apache.jena.atlas.web.HttpException: java.lang.Throwable getCause()>();

        specialinvoke $r29.<com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP: void <init>(int,java.lang.String,java.lang.Throwable)>($i6, "Error making the query, see cause for details", $r30);

        throw $r29;

        catch java.net.MalformedURLException from label01 to label02 with label03;
        catch org.apache.jena.atlas.web.HttpException from label05 to label11 with label12;
    }

    private java.io.InputStream execCommon(org.apache.jena.atlas.web.TypedInputStream) throws com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP
    {
        org.apache.jena.atlas.web.TypedInputStream r1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r1 := @parameter0: org.apache.jena.atlas.web.TypedInputStream;

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: int responseCode> = 200;

        $r2 = virtualinvoke r1.<org.apache.jena.atlas.web.TypedInputStream: java.lang.String getContentType()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        if $r3 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(";");

        if $z0 == 0 goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult>;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(59);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String contentTypeResult> = $r7;

     label1:
        return r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r0;
        int $i0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.String $r1, $r2, $r4, $r8;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String httpString()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.String serviceURL>;

        return $r2;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r2;
        java.lang.Class $r0;
        java.lang.Object $r3;
        java.lang.String $r1;

        $r0 = class "Lcom/hp/hpl/jena/sparql/engine/http/HttpQuery;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>($r1);

        <com.hp.hpl.jena.sparql.engine.http.HttpQuery: org.slf4j.Logger log> = $r2;

        <com.hp.hpl.jena.sparql.engine.http.HttpQuery: int urlLimit> = 2048;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.lang.Object noValue> = $r3;

        return;
    }
}
