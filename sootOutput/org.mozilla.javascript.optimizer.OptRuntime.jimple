public final class org.mozilla.javascript.optimizer.OptRuntime extends org.mozilla.javascript.ScriptRuntime
{
    public static final java.lang.Double zeroObj;
    public static final java.lang.Double oneObj;
    public static final java.lang.Double minusOneObj;

    public void <init>()
    {
        org.mozilla.javascript.optimizer.OptRuntime r0;

        r0 := @this: org.mozilla.javascript.optimizer.OptRuntime;

        specialinvoke r0.<org.mozilla.javascript.ScriptRuntime: void <init>()>();

        return;
    }

    public static java.lang.Object call0(org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2, r3;
        java.lang.Object[] $r4;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable r0;
        java.lang.Object $r5;

        r0 := @parameter0: org.mozilla.javascript.Callable;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: org.mozilla.javascript.Context;

        r2 := @parameter3: org.mozilla.javascript.Scriptable;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r5 = interfaceinvoke r0.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3, $r4);

        return $r5;
    }

    public static java.lang.Object call1(org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2, r3;
        java.lang.Object[] $r4;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable r0;
        java.lang.Object r5, $r6;

        r0 := @parameter0: org.mozilla.javascript.Callable;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.mozilla.javascript.Context;

        r2 := @parameter4: org.mozilla.javascript.Scriptable;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = interfaceinvoke r0.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3, $r4);

        return $r6;
    }

    public static java.lang.Object call2(org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] $r4;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable r0;
        org.mozilla.javascript.Scriptable r2, r3;
        java.lang.Object r5, r6, $r7;

        r0 := @parameter0: org.mozilla.javascript.Callable;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: java.lang.Object;

        r6 := @parameter3: java.lang.Object;

        r1 := @parameter4: org.mozilla.javascript.Context;

        r2 := @parameter5: org.mozilla.javascript.Scriptable;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r6;

        $r7 = interfaceinvoke r0.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3, $r4);

        return $r7;
    }

    public static java.lang.Object callN(org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2, r3;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable r0;
        java.lang.Object $r5;

        r0 := @parameter0: org.mozilla.javascript.Callable;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object[];

        r1 := @parameter3: org.mozilla.javascript.Context;

        r2 := @parameter4: org.mozilla.javascript.Scriptable;

        $r5 = interfaceinvoke r0.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3, r4);

        return $r5;
    }

    public static java.lang.Object callName(java.lang.Object[], java.lang.String, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2, $r4;
        java.lang.Object[] r5;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable $r3;
        java.lang.Object $r6;
        java.lang.String r0;

        r5 := @parameter0: java.lang.Object[];

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: org.mozilla.javascript.Context;

        r2 := @parameter3: org.mozilla.javascript.Scriptable;

        $r3 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Callable getNameFunctionAndThis(java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1, r2);

        $r4 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r1);

        $r6 = interfaceinvoke $r3.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, $r4, r5);

        return $r6;
    }

    public static java.lang.Object callName0(java.lang.String, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2, $r4;
        java.lang.Object[] $r5;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable $r3;
        java.lang.Object $r6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.mozilla.javascript.Context;

        r2 := @parameter2: org.mozilla.javascript.Scriptable;

        $r3 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Callable getNameFunctionAndThis(java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r1, r2);

        $r4 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r1);

        $r5 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r6 = interfaceinvoke $r3.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, $r4, $r5);

        return $r6;
    }

    public static java.lang.Object callProp0(java.lang.Object, java.lang.String, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] $r6;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Callable $r3;
        org.mozilla.javascript.Scriptable $r4, r5;
        java.lang.Object r0, $r7;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.mozilla.javascript.Context;

        r5 := @parameter3: org.mozilla.javascript.Scriptable;

        $r3 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>(r0, r1, r2);

        $r4 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)>(r2);

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r7 = interfaceinvoke $r3.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r5, $r4, $r6);

        return $r7;
    }

    public static java.lang.Object add(java.lang.Object, double)
    {
        java.lang.Double $r3;
        org.mozilla.javascript.Scriptable $r4;
        java.lang.Object r5;
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1;
        double d0, $d1, $d2;

        r5 := @parameter0: java.lang.Object;

        d0 := @parameter1: double;

        $z0 = r5 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.Scriptable) r5;

        r5 = interfaceinvoke $r4.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

     label1:
        $z1 = r5 instanceof java.lang.String;

        if $z1 != 0 goto label2;

        $d1 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: double toNumber(java.lang.Object)>(r5);

        $d2 = $d1 + d0;

        $r3 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double wrapDouble(double)>($d2);

        return $r3;

     label2:
        $r0 = (java.lang.String) r5;

        $r1 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: java.lang.String toString(double)>(d0);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.Object add(double, java.lang.Object)
    {
        java.lang.Double $r3;
        org.mozilla.javascript.Scriptable $r4;
        java.lang.Object r5;
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1;
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        r5 := @parameter1: java.lang.Object;

        $z0 = r5 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.Scriptable) r5;

        r5 = interfaceinvoke $r4.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

     label1:
        $z1 = r5 instanceof java.lang.String;

        if $z1 != 0 goto label2;

        $d1 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: double toNumber(java.lang.Object)>(r5);

        $d2 = $d1 + d0;

        $r3 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double wrapDouble(double)>($d2);

        return $r3;

     label2:
        $r0 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: java.lang.String toString(double)>(d0);

        $r1 = (java.lang.String) r5;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.Object[] padStart(java.lang.Object[], int)
    {
        java.lang.Object[] r0, r1;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        $i2 = $i1 + i0;

        r1 = newarray (java.lang.Object)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, i0, $i3);

        return r1;
    }

    public static void initFunction(org.mozilla.javascript.NativeFunction, int, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.Context r0;
        int i0;
        org.mozilla.javascript.NativeFunction r2;

        r2 := @parameter0: org.mozilla.javascript.NativeFunction;

        i0 := @parameter1: int;

        r1 := @parameter2: org.mozilla.javascript.Scriptable;

        r0 := @parameter3: org.mozilla.javascript.Context;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.NativeFunction,int,boolean)>(r0, r1, r2, i0, 0);

        return;
    }

    public static java.lang.Object callSpecial(org.mozilla.javascript.Context, org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, int, java.lang.String, int)
    {
        java.lang.Object[] r3;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Callable r1;
        org.mozilla.javascript.Scriptable r2, r4, r5;
        int i0, i1;
        java.lang.Object $r7;
        java.lang.String r6;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Callable;

        r2 := @parameter2: org.mozilla.javascript.Scriptable;

        r3 := @parameter3: java.lang.Object[];

        r4 := @parameter4: org.mozilla.javascript.Scriptable;

        r5 := @parameter5: org.mozilla.javascript.Scriptable;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.String;

        i1 := @parameter8: int;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object callSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int,java.lang.String,int)>(r0, r1, r2, r3, r4, r5, i0, r6, i1);

        return $r7;
    }

    public static java.lang.Object newObjectSpecial(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object[], org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, int)
    {
        java.lang.Object[] r2;
        org.mozilla.javascript.Scriptable r3, r5;
        org.mozilla.javascript.Context r0;
        int i0;
        java.lang.Object r1, $r4;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object[];

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: org.mozilla.javascript.Scriptable;

        i0 := @parameter5: int;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object newSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object[],org.mozilla.javascript.Scriptable,int)>(r0, r1, r2, r3, i0);

        return $r4;
    }

    public static java.lang.Double wrapDouble(double)
    {
        java.lang.Double $r1, $r2, $r3, $r4, $r5;
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5;
        double d0, $d1;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = 1.0 / d0;

        $b4 = $d1 cmpl 0.0;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label4;

        $r4 = <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double zeroObj>;

        return $r4;

     label1:
        $b1 = d0 cmpl 1.0;

        if $b1 != 0 goto label2;

        $r3 = <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double oneObj>;

        return $r3;

     label2:
        $b2 = d0 cmpl -1.0;

        if $b2 != 0 goto label3;

        $r2 = <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double minusOneObj>;

        return $r2;

     label3:
        $b3 = d0 cmpl d0;

        if $b3 == 0 goto label4;

        $r1 = <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double NaNobj>;

        return $r1;

     label4:
        $r5 = new java.lang.Double;

        specialinvoke $r5.<java.lang.Double: void <init>(double)>(d0);

        return $r5;
    }

    static java.lang.String encodeIntArray(int[])
    {
        char $c7, $c8;
        int[] r0;
        int i0, $i1, $i2, i3, $i4, i5, $i6, $i9, i10;
        char[] r1;
        java.lang.String $r2;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        $i1 = i0 * 2;

        $i2 = 1 + $i1;

        r1 = newarray (char)[$i2];

        r1[0] = 1;

        i10 = 0;

     label2:
        if i10 == i0 goto label3;

        i3 = r0[i10];

        $i4 = i10 * 2;

        i5 = 1 + $i4;

        $i6 = i3 >>> 16;

        $c7 = (char) $i6;

        r1[i5] = $c7;

        $i9 = i5 + 1;

        $c8 = (char) i3;

        r1[$i9] = $c8;

        i10 = i10 + 1;

        goto label2;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    private static int[] decodeIntArray(java.lang.String, int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3, $i4, i5, $i7, $i8, $i10, i12, $i13, $i14;
        java.lang.String r0;
        char $c6, $c9, $c11;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 0 goto label2;

        if r0 == null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        return null;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i0 * 2;

        $i3 = 1 + $i2;

        if $i1 == $i3 goto label3;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c11 == 1 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label3:
        $r1 = newarray (int)[i0];

        i12 = 0;

     label4:
        if i12 == i0 goto label5;

        $i4 = i12 * 2;

        i5 = 1 + $i4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i13 = (int) $c6;

        $i8 = $i13 << 16;

        $i7 = i5 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $i14 = (int) $c9;

        $i10 = $i8 | $i14;

        $r1[i12] = $i10;

        i12 = i12 + 1;

        goto label4;

     label5:
        return $r1;
    }

    public static org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[], java.lang.String, int, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] r2;
        org.mozilla.javascript.Scriptable r4, $r5;
        org.mozilla.javascript.Context r3;
        int[] $r1;
        int i0;
        java.lang.String r0;

        r2 := @parameter0: java.lang.Object[];

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: org.mozilla.javascript.Context;

        r4 := @parameter4: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: int[] decodeIntArray(java.lang.String,int)>(r0, i0);

        $r5 = staticinvoke <org.mozilla.javascript.optimizer.OptRuntime: org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[],int[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, $r1, r3, r4);

        return $r5;
    }

    public static void main(org.mozilla.javascript.Script, java.lang.String[])
    {
        java.lang.String[] r1;
        org.mozilla.javascript.optimizer.OptRuntime$1 $r0;
        org.mozilla.javascript.Script r2;

        r2 := @parameter0: org.mozilla.javascript.Script;

        r1 := @parameter1: java.lang.String[];

        $r0 = new org.mozilla.javascript.optimizer.OptRuntime$1;

        specialinvoke $r0.<org.mozilla.javascript.optimizer.OptRuntime$1: void <init>(java.lang.String[],org.mozilla.javascript.Script)>(r1, r2);

        staticinvoke <org.mozilla.javascript.Context: java.lang.Object call(org.mozilla.javascript.ContextAction)>($r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Double $r0, $r1, $r2;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(0.0);

        <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double zeroObj> = $r0;

        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(1.0);

        <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double oneObj> = $r1;

        $r2 = new java.lang.Double;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>(-1.0);

        <org.mozilla.javascript.optimizer.OptRuntime: java.lang.Double minusOneObj> = $r2;

        return;
    }
}
