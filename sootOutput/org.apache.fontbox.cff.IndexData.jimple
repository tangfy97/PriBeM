public class org.apache.fontbox.cff.IndexData extends java.lang.Object
{
    private int count;
    private int[] offset;
    private int[] data;

    public void <init>(int)
    {
        org.apache.fontbox.cff.IndexData r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.fontbox.cff.IndexData: int count> = i0;

        $i1 = i0 + 1;

        $r1 = newarray (int)[$i1];

        r0.<org.apache.fontbox.cff.IndexData: int[] offset> = $r1;

        return;
    }

    public byte[] getBytes(int)
    {
        byte[] r3;
        org.apache.fontbox.cff.IndexData r0;
        byte $b9;
        int[] $r1, $r2, $r4, $r5;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i10;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $i1 = i0 + 1;

        $i3 = $r1[$i1];

        $r2 = r0.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $i2 = $r2[i0];

        i4 = $i3 - $i2;

        r3 = newarray (byte)[i4];

        i10 = 0;

     label1:
        if i10 >= i4 goto label2;

        $r5 = r0.<org.apache.fontbox.cff.IndexData: int[] data>;

        $r4 = r0.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $i5 = $r4[i0];

        $i6 = $i5 - 1;

        $i7 = $i6 + i10;

        $i8 = $r5[$i7];

        $b9 = (byte) $i8;

        r3[i10] = $b9;

        i10 = i10 + 1;

        goto label1;

     label2:
        return r3;
    }

    public java.lang.String toString()
    {
        org.apache.fontbox.cff.IndexData r1;
        int[] $r8, $r12;
        int $i0;
        java.lang.String $r3, $r9, $r13, $r16;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r10, $r11, $r14, $r15;
        java.lang.Class $r2;

        r1 := @this: org.apache.fontbox.cff.IndexData;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[count=");

        $i0 = r1.<org.apache.fontbox.cff.IndexData: int count>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offset=");

        $r8 = r1.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $r9 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r12 = r1.<org.apache.fontbox.cff.IndexData: int[] data>;

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public int getCount()
    {
        int $i0;
        org.apache.fontbox.cff.IndexData r0;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        $i0 = r0.<org.apache.fontbox.cff.IndexData: int count>;

        return $i0;
    }

    public void setOffset(int, int)
    {
        org.apache.fontbox.cff.IndexData r0;
        int[] $r1;
        int i0, i1;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $r1[i0] = i1;

        return;
    }

    public int getOffset(int)
    {
        org.apache.fontbox.cff.IndexData r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.fontbox.cff.IndexData: int[] offset>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void initData(int)
    {
        int i0;
        org.apache.fontbox.cff.IndexData r0;
        int[] $r1;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        $r1 = newarray (int)[i0];

        r0.<org.apache.fontbox.cff.IndexData: int[] data> = $r1;

        return;
    }

    public void setData(int, int)
    {
        org.apache.fontbox.cff.IndexData r0;
        int[] $r1;
        int i0, i1;

        r0 := @this: org.apache.fontbox.cff.IndexData;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.fontbox.cff.IndexData: int[] data>;

        $r1[i0] = i1;

        return;
    }
}
