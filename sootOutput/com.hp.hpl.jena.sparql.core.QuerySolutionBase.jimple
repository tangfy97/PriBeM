public abstract class com.hp.hpl.jena.sparql.core.QuerySolutionBase extends java.lang.Object implements com.hp.hpl.jena.query.QuerySolution
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.QuerySolutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QuerySolutionBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        java.lang.String r1, $r2;
        com.hp.hpl.jena.sparql.core.QuerySolutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QuerySolutionBase;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: java.lang.String canonical(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuerySolutionBase: com.hp.hpl.jena.rdf.model.RDFNode _get(java.lang.String)>($r2);

        return $r3;
    }

    protected abstract com.hp.hpl.jena.rdf.model.RDFNode _get(java.lang.String);

    public com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.core.QuerySolutionBase r0;
        com.hp.hpl.jena.rdf.model.Resource $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.QuerySolutionBase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuerySolutionBase: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r1);

        $r3 = (com.hp.hpl.jena.rdf.model.Resource) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Literal getLiteral(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.core.QuerySolutionBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.QuerySolutionBase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuerySolutionBase: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r1);

        $r3 = (com.hp.hpl.jena.rdf.model.Literal) $r2;

        return $r3;
    }

    public boolean contains(java.lang.String)
    {
        java.lang.String r1, $r2;
        com.hp.hpl.jena.sparql.core.QuerySolutionBase r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QuerySolutionBase;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: java.lang.String canonical(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuerySolutionBase: boolean _contains(java.lang.String)>($r2);

        return $z0;
    }

    protected abstract boolean _contains(java.lang.String);

    public abstract java.util.Iterator varNames();
}
