class ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval extends java.lang.Object implements java.lang.Comparable
{
    java.util.Date coord;
    int start;
    int interval;
    final ucar.nc2.iosp.grid.GridTimeCoord this$0;

    private void <init>(ucar.nc2.iosp.grid.GridTimeCoord, java.util.Date, int, int)
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r0;
        java.util.Date r2;
        int i0, i1;
        ucar.nc2.iosp.grid.GridTimeCoord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridTimeCoord;

        r2 := @parameter1: java.util.Date;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: ucar.nc2.iosp.grid.GridTimeCoord this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord> = r2;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start> = i0;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval> = i1;

        return;
    }

    public int compareTo(ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval)
    {
        java.util.Date $r2, $r3;
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r0, r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        $r3 = r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $r2 = r1.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $i0 = virtualinvoke $r3.<java.util.Date: int compareTo(java.util.Date)>($r2);

        if $i0 != 0 goto label1;

        $i2 = r1.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i3 = $i2 - $i1;

        goto label2;

     label1:
        $i3 = $i0;

     label2:
        return $i3;
    }

    public int hashCode()
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r0;
        java.util.Date $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        $r1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $i0 = virtualinvoke $r1.<java.util.Date: int hashCode()>();

        $i2 = 17 * $i0;

        $i1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Date $r3, $r4;
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval) r0;

        $r4 = r2.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $r3 = r1.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $z0 = virtualinvoke $r4.<java.util.Date: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $i1 = r2.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i0 = r1.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r2;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        java.lang.String $r6;

        r2 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start=");

        $i0 = r2.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", interval=");

        $i1 = r2.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int compareTo(ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval)>($r2);

        return $i0;
    }

    void <init>(ucar.nc2.iosp.grid.GridTimeCoord, java.util.Date, int, int, ucar.nc2.iosp.grid.GridTimeCoord$1)
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r0;
        java.util.Date r2;
        int i0, i1;
        ucar.nc2.iosp.grid.GridTimeCoord r1;
        ucar.nc2.iosp.grid.GridTimeCoord$1 r3;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridTimeCoord;

        r2 := @parameter1: java.util.Date;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: ucar.nc2.iosp.grid.GridTimeCoord$1;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: void <init>(ucar.nc2.iosp.grid.GridTimeCoord,java.util.Date,int,int)>(r1, r2, i0, i1);

        return;
    }
}
