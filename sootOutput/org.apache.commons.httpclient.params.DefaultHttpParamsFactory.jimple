public class org.apache.commons.httpclient.params.DefaultHttpParamsFactory extends java.lang.Object implements org.apache.commons.httpclient.params.HttpParamsFactory
{
    private org.apache.commons.httpclient.params.HttpParams httpParams;
    static java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager;

    public void <init>()
    {
        org.apache.commons.httpclient.params.DefaultHttpParamsFactory r0;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParamsFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized org.apache.commons.httpclient.params.HttpParams getDefaultParams()
    {
        org.apache.commons.httpclient.params.HttpParams $r1, $r2, $r3;
        org.apache.commons.httpclient.params.DefaultHttpParamsFactory r0;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParamsFactory;

        $r1 = r0.<org.apache.commons.httpclient.params.DefaultHttpParamsFactory: org.apache.commons.httpclient.params.HttpParams httpParams>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParamsFactory: org.apache.commons.httpclient.params.HttpParams createParams()>();

        r0.<org.apache.commons.httpclient.params.DefaultHttpParamsFactory: org.apache.commons.httpclient.params.HttpParams httpParams> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.params.DefaultHttpParamsFactory: org.apache.commons.httpclient.params.HttpParams httpParams>;

        return $r2;
    }

    protected org.apache.commons.httpclient.params.HttpParams createParams()
    {
        org.apache.commons.httpclient.params.DefaultHttpParamsFactory r17;
        org.apache.commons.httpclient.HttpVersion $r1;
        java.lang.String[] $r5;
        java.util.ArrayList $r4;
        java.lang.Boolean $r12, $r13;
        java.lang.SecurityException $r14, $r15, $r16;
        java.lang.String $r7, $r8, $r9, $r10, $r11, r19, r20, r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.httpclient.DefaultHttpMethodRetryHandler $r3;
        org.apache.commons.httpclient.params.HttpClientParams $r0;
        java.util.List $r6;
        java.lang.Class $r2, $r18;

        r17 := @this: org.apache.commons.httpclient.params.DefaultHttpParamsFactory;

        $r0 = new org.apache.commons.httpclient.params.HttpClientParams;

        specialinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void <init>(org.apache.commons.httpclient.params.HttpParams)>(null);

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.useragent", "Jakarta Commons-HttpClient/3.1");

        $r1 = <org.apache.commons.httpclient.HttpVersion: org.apache.commons.httpclient.HttpVersion HTTP_1_1>;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setVersion(org.apache.commons.httpclient.HttpVersion)>($r1);

        $r2 = <org.apache.commons.httpclient.params.DefaultHttpParamsFactory: java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager>;

        if $r2 != null goto label01;

        $r18 = staticinvoke <org.apache.commons.httpclient.params.DefaultHttpParamsFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.SimpleHttpConnectionManager");

        <org.apache.commons.httpclient.params.DefaultHttpParamsFactory: java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager> = $r18;

        goto label02;

     label01:
        $r18 = <org.apache.commons.httpclient.params.DefaultHttpParamsFactory: java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager>;

     label02:
        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setConnectionManagerClass(java.lang.Class)>($r18);

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setCookiePolicy(java.lang.String)>("default");

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setHttpElementCharset(java.lang.String)>("US-ASCII");

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setContentCharset(java.lang.String)>("ISO-8859-1");

        $r3 = new org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;

        specialinvoke $r3.<org.apache.commons.httpclient.DefaultHttpMethodRetryHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.method.retry-handler", $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = newarray (java.lang.String)[14];

        $r5[0] = "EEE, dd MMM yyyy HH:mm:ss zzz";

        $r5[1] = "EEEE, dd-MMM-yy HH:mm:ss zzz";

        $r5[2] = "EEE MMM d HH:mm:ss yyyy";

        $r5[3] = "EEE, dd-MMM-yyyy HH:mm:ss z";

        $r5[4] = "EEE, dd-MMM-yyyy HH-mm-ss z";

        $r5[5] = "EEE, dd MMM yy HH:mm:ss z";

        $r5[6] = "EEE dd-MMM-yyyy HH:mm:ss z";

        $r5[7] = "EEE dd MMM yyyy HH:mm:ss z";

        $r5[8] = "EEE dd-MMM-yyyy HH-mm-ss z";

        $r5[9] = "EEE dd-MMM-yy HH:mm:ss z";

        $r5[10] = "EEE dd MMM yy HH:mm:ss z";

        $r5[11] = "EEE,dd-MMM-yy HH:mm:ss z";

        $r5[12] = "EEE,dd-MMM-yyyy HH:mm:ss z";

        $r5[13] = "EEE, dd-MM-yyyy HH:mm:ss z";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        virtualinvoke $r4.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.dateparser.patterns", $r4);

        r19 = null;

     label03:
        r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("httpclient.useragent");

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

     label06:
        if r19 == null goto label07;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.useragent", r19);

     label07:
        r20 = null;

     label08:
        r20 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("httpclient.authentication.preemptive");

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

     label11:
        if r20 == null goto label13;

        $r10 = virtualinvoke r20.<java.lang.String: java.lang.String trim()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z3 == 0 goto label12;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.authentication.preemptive", $r13);

        goto label13;

     label12:
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z4 == 0 goto label13;

        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.authentication.preemptive", $r12);

     label13:
        r21 = null;

     label14:
        r21 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("apache.commons.httpclient.cookiespec");

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

     label17:
        if r21 == null goto label20;

        $r7 = "COMPATIBILITY";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21);

        if $z0 == 0 goto label18;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setCookiePolicy(java.lang.String)>("compatibility");

        goto label20;

     label18:
        $r8 = "NETSCAPE_DRAFT";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21);

        if $z1 == 0 goto label19;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setCookiePolicy(java.lang.String)>("netscape");

        goto label20;

     label19:
        $r9 = "RFC2109";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21);

        if $z2 == 0 goto label20;

        virtualinvoke $r0.<org.apache.commons.httpclient.params.HttpClientParams: void setCookiePolicy(java.lang.String)>("rfc2109");

     label20:
        return $r0;

        catch java.lang.SecurityException from label03 to label04 with label05;
        catch java.lang.SecurityException from label08 to label09 with label10;
        catch java.lang.SecurityException from label14 to label15 with label16;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
