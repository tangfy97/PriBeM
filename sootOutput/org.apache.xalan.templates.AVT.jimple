public class org.apache.xalan.templates.AVT extends java.lang.Object implements java.io.Serializable, org.apache.xalan.templates.XSLTVisitable
{
    private java.lang.String m_simpleString;
    private java.util.Vector m_parts;
    private java.lang.String m_rawName;
    private java.lang.String m_name;
    private java.lang.String m_uri;

    public java.lang.String getRawName()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName>;

        return $r1;
    }

    public void setRawName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r1;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r1;

        return;
    }

    public java.lang.String getURI()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri>;

        return $r1;
    }

    public void setURI(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.templates.AVT r0;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r1;

        return;
    }

    public void <init>(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        java.util.Vector $r11, $r14, $r22, $r24, $r38;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.ElemTemplateElement r19;
        org.apache.xpath.XPath $r20;
        org.apache.xml.utils.FastStringBuffer $r6, $r7;
        org.xml.sax.SAXException $r27, $r29;
        java.lang.Throwable $r26;
        java.lang.Object[] $r10, $r32;
        javax.xml.transform.TransformerException $r41, $r42;
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.processor.StylesheetHandler r9;
        java.util.StringTokenizer $r37;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9;
        java.lang.String r1, r2, r3, r5, $r12, $r15, $r16, $r17, $r18, $r25, r33, r34, r35, r36;
        java.util.NoSuchElementException $r31;
        char $c4, $c7;
        org.apache.xalan.templates.AVTPartSimple $r39, $r43;
        org.apache.xalan.templates.AVTPartXPath $r40;

        r0 := @this: org.apache.xalan.templates.AVT;

        r9 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r19 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = null;

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = null;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r1;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r3;

        $r37 = new java.util.StringTokenizer;

        specialinvoke $r37.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r5, "{}\"\'", 1);

        $i0 = virtualinvoke $r37.<java.util.StringTokenizer: int countTokens()>();

        if $i0 >= 2 goto label01;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = r5;

        goto label38;

     label01:
        $r6 = staticinvoke <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()>();

        $r7 = staticinvoke <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()>();

     label02:
        $r38 = new java.util.Vector;

        $i1 = $i0 + 1;

        specialinvoke $r38.<java.util.Vector: void <init>(int)>($i1);

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = $r38;

        r33 = null;

        r34 = null;

        goto label32;

     label03:
        if r33 == null goto label04;

        r35 = r33;

        r33 = null;

        goto label05;

     label04:
        r35 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label05:
        $i2 = virtualinvoke r35.<java.lang.String: int length()>();

        if $i2 != 1 goto label26;

        $c4 = virtualinvoke r35.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c4;

        lookupswitch($i8)
        {
            case 34: goto label06;
            case 39: goto label06;
            case 123: goto label07;
            case 125: goto label20;
            default: goto label25;
        };

     label06:
        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r35);

        goto label27;

     label07:
        $r17 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r33 = $r17;

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("{");

        if $z2 == 0 goto label08;

        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r17);

        r33 = null;

        goto label27;

     label08:
        $i5 = virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i5 <= 0 goto label09;

        $r24 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r39 = new org.apache.xalan.templates.AVTPartSimple;

        $r25 = virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r39.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r25);

        virtualinvoke $r24.<java.util.Vector: void addElement(java.lang.Object)>($r39);

        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label09:
        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        goto label18;

     label10:
        $i6 = virtualinvoke r33.<java.lang.String: int length()>();

        if $i6 != 1 goto label17;

        $c7 = virtualinvoke r33.<java.lang.String: char charAt(int)>(0);

        $i9 = (int) $c7;

        lookupswitch($i9)
        {
            case 34: goto label11;
            case 39: goto label11;
            case 123: goto label14;
            case 125: goto label15;
            default: goto label16;
        };

     label11:
        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r33);

        r36 = r33;

        r33 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label13;

     label12:
        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r33);

        r33 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label13:
        $z3 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z3 == 0 goto label12;

        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r33);

        r33 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label18;

     label14:
        r34 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_CURLYBRACE", null);

        r33 = null;

        goto label18;

     label15:
        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r18 = virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        $r20 = virtualinvoke r9.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>($r18, r19);

        $r22 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r40 = new org.apache.xalan.templates.AVTPartXPath;

        specialinvoke $r40.<org.apache.xalan.templates.AVTPartXPath: void <init>(org.apache.xpath.XPath)>($r20);

        virtualinvoke $r22.<java.util.Vector: void addElement(java.lang.Object)>($r40);

        r33 = null;

        goto label18;

     label16:
        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r33);

        r33 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label18;

     label17:
        virtualinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r33);

        r33 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label18:
        if null != r33 goto label10;

        if r34 == null goto label27;

        goto label27;

     label19:
        $r31 := @caughtexception;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = r2;

        $r32[1] = r5;

        r34 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r32);

        goto label27;

     label20:
        $r16 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r33 = $r16;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z1 == 0 goto label21;

        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r16);

        r33 = null;

        goto label27;

     label21:
        virtualinvoke r9.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_FOUND_CURLYBRACE", null);

     label22:
        goto label24;

     label23:
        $r29 := @caughtexception;

        $r41 = new javax.xml.transform.TransformerException;

        specialinvoke $r41.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r29);

        throw $r41;

     label24:
        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>("}");

        goto label27;

     label25:
        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r35);

        goto label27;

     label26:
        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r35);

     label27:
        if null == r34 goto label32;

     label28:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r34;

        virtualinvoke r9.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_ATTR_TEMPLATE", $r10);

     label29:
        goto label31;

     label30:
        $r27 := @caughtexception;

        $r42 = new javax.xml.transform.TransformerException;

        specialinvoke $r42.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r27);

        throw $r42;

     label31:
        goto label33;

     label32:
        $z0 = virtualinvoke $r37.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label03;

     label33:
        $i3 = virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i3 <= 0 goto label34;

        $r14 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r43 = new org.apache.xalan.templates.AVTPartSimple;

        $r15 = virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r43.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r15);

        virtualinvoke $r14.<java.util.Vector: void addElement(java.lang.Object)>($r43);

        virtualinvoke $r6.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label34:
        goto label40;

     label35:
        goto label38;

     label36:
        $r26 := @caughtexception;

        goto label41;

     label37:
        throw $r26;

     label38:
        $r11 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null != $r11 goto label39;

        $r12 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null != $r12 goto label39;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = "";

     label39:
        return;

     label40:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r6);

        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r7);

        goto label35;

     label41:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r6);

        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r7);

        goto label37;

        catch java.util.NoSuchElementException from label07 to label19 with label19;
        catch org.xml.sax.SAXException from label21 to label22 with label23;
        catch org.xml.sax.SAXException from label28 to label29 with label30;
        catch java.lang.Throwable from label02 to label36 with label36;
    }

    public java.lang.String getSimpleString()
    {
        java.lang.Throwable $r11;
        org.apache.xml.utils.FastStringBuffer $r3;
        org.apache.xalan.templates.AVTPart r7;
        org.apache.xalan.templates.AVT r0;
        java.util.Vector $r2, $r4, $r5;
        int $i0, i1;
        java.lang.Object $r6;
        java.lang.String $r1, $r8, $r9, $r10;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r1 goto label01;

        $r10 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        return $r10;

     label01:
        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r2 goto label09;

        $r3 = staticinvoke <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()>();

     label02:
        virtualinvoke $r3.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

        goto label04;

     label03:
        $r5 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r7 = (org.apache.xalan.templates.AVTPart) $r6;

        $r8 = virtualinvoke r7.<org.apache.xalan.templates.AVTPart: java.lang.String getSimpleString()>();

        virtualinvoke $r3.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r8);

        i1 = i1 + 1;

     label04:
        if i1 < $i0 goto label03;

        $r9 = virtualinvoke $r3.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        goto label10;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        goto label11;

     label07:
        throw $r11;

     label08:
        return $r9;

     label09:
        return "";

     label10:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r3);

        goto label05;

     label11:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r3);

        goto label07;

        catch java.lang.Throwable from label02 to label06 with label06;
    }

    public java.lang.String evaluate(org.apache.xpath.XPathContext, int, org.apache.xml.utils.PrefixResolver) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r10;
        org.apache.xalan.templates.AVTPart r12;
        org.apache.xalan.templates.AVT r1;
        java.util.Vector $r3, $r4, $r5;
        org.apache.xpath.XPathContext r7;
        int $i0, i1, i2;
        java.lang.String $r2, $r9, r11;
        org.apache.xml.utils.FastStringBuffer $r0;
        java.lang.Object $r6;
        org.apache.xml.utils.PrefixResolver r8;

        r1 := @this: org.apache.xalan.templates.AVT;

        r7 := @parameter0: org.apache.xpath.XPathContext;

        i1 := @parameter1: int;

        r8 := @parameter2: org.apache.xml.utils.PrefixResolver;

        $r0 = staticinvoke <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()>();

     label01:
        $r2 = r1.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r2 goto label03;

        r11 = r1.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        goto label11;

     label02:
        return r11;

     label03:
        $r3 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r3 goto label07;

        virtualinvoke $r0.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r4 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i2 = 0;

        goto label05;

     label04:
        $r5 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r12 = (org.apache.xalan.templates.AVTPart) $r6;

        virtualinvoke r12.<org.apache.xalan.templates.AVTPart: void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)>(r7, $r0, i1, r8);

        i2 = i2 + 1;

     label05:
        if i2 < $i0 goto label04;

        $r9 = virtualinvoke $r0.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        goto label12;

     label06:
        return $r9;

     label07:
        goto label13;

     label08:
        return "";

     label09:
        $r10 := @caughtexception;

        goto label14;

     label10:
        throw $r10;

     label11:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r0);

        goto label02;

     label12:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r0);

        goto label06;

     label13:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r0);

        goto label08;

     label14:
        staticinvoke <org.apache.xml.utils.StringBufferPool: void free(org.apache.xml.utils.FastStringBuffer)>($r0);

        goto label10;

        catch java.lang.Throwable from label01 to label09 with label09;
    }

    public boolean isContextInsensitive()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.AVT r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xalan.templates.AVTPart r5;
        org.apache.xalan.templates.AVT r0;
        java.util.Vector $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r1 goto label4;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r5 = (org.apache.xalan.templates.AVTPart) $r4;

        $z0 = virtualinvoke r5.<org.apache.xalan.templates.AVTPart: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return 0;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xalan.templates.AVTPart r5;
        org.apache.xalan.templates.AVT r0;
        java.util.Vector $r1, $r2, $r3, r6;
        int $i0, i1, i2;
        java.lang.Object $r4;

        r0 := @this: org.apache.xalan.templates.AVT;

        r6 := @parameter0: java.util.Vector;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r1 goto label3;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i2 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r5 = (org.apache.xalan.templates.AVTPart) $r4;

        virtualinvoke r5.<org.apache.xalan.templates.AVTPart: void fixupVariables(java.util.Vector,int)>(r6, i1);

        i2 = i2 + 1;

     label2:
        if i2 < $i0 goto label1;

     label3:
        return;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.XSLTVisitor r0;
        org.apache.xalan.templates.AVTPart r6;
        org.apache.xalan.templates.AVT r1;
        java.util.Vector $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.xalan.templates.AVT;

        r0 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.XSLTVisitor: boolean visitAVT(org.apache.xalan.templates.AVT)>(r1);

        if $z0 == 0 goto label3;

        $r2 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r2 goto label3;

        $r3 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r4 = r1.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r6 = (org.apache.xalan.templates.AVTPart) $r5;

        interfaceinvoke r6.<org.apache.xalan.templates.XSLTVisitable: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r0);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public boolean isSimple()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.AVT r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
