public class org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterChart
{
    private static final javax.xml.namespace.QName SCATTERSTYLE$0;
    private static final javax.xml.namespace.QName VARYCOLORS$2;
    private static final javax.xml.namespace.QName SER$4;
    private static final javax.xml.namespace.QName DLBLS$6;
    private static final javax.xml.namespace.QName AXID$8;
    private static final javax.xml.namespace.QName EXTLST$10;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle getScatterStyle()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SCATTERSTYLE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setScatterStyle(org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SCATTERSTYLE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SCATTERSTYLE$0>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle addNewScatterStyle()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SCATTERSTYLE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterStyle) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getVaryColors()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetVaryColors()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setVaryColors(org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean r5, r10;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean addNewVaryColors()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetVaryColors()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getSerList()
    {
        java.lang.Throwable $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1SerList $r4;
        java.util.List $r5;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1SerList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1SerList: void <init>(org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer[] getSerArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer[] r5;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer getSerArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfSerArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setSerArray(org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer[])
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer[] r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setSerArray(int, org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer insertNewSer(int)
    {
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer addNewSer()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterSer) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeSer(int)
    {
        java.lang.Throwable $r4;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls getDLbls()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetDLbls()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDLbls(org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.XmlObject $r11;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls r5, r10;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls) $r8;

     label2:
        $r11 = (org.apache.xmlbeans.XmlObject) r5;

        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r11);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls addNewDLbls()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls r6;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDLbls) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetDLbls()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getAxIdList()
    {
        java.lang.Throwable $r3;
        java.util.List $r5;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1AxIdList $r4;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r4 = new org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1AxIdList;

        specialinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl$1AxIdList: void <init>(org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl)>(r0);

        exitmonitor $r1;

     label2:
        $r5 = (java.util.List) $r4;

        return $r5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt[] getAxIdArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt[] r5;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt getAxIdArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfAxIdArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAxIdArray(org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt[])
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt[] r2;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r2 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt[];

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAxIdArray(int, org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt insertNewAxId(int)
    {
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt addNewAxId()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTUnsignedInt) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAxId(int)
    {
        java.lang.Throwable $r4;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList getExtLst()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetExtLst()
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setExtLst(org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.XmlObject $r11;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r8;

     label2:
        $r11 = (org.apache.xmlbeans.XmlObject) r5;

        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r11);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList addNewExtLst()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetExtLst()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl r0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "scatterStyle");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SCATTERSTYLE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "varyColors");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName VARYCOLORS$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "ser");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName SER$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "dLbls");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName DLBLS$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "axId");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName AXID$8> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "extLst");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScatterChartImpl: javax.xml.namespace.QName EXTLST$10> = $r5;

        return;
    }
}
