public class org.apache.xerces.impl.xs.XSConstraints extends java.lang.Object
{
    static final int OCCURRENCE_UNKNOWN;
    static final org.apache.xerces.impl.dv.XSSimpleType STRING_TYPE;
    private static org.apache.xerces.impl.xs.XSParticleDecl fEmptyParticle;
    private static final java.util.Comparator ELEMENT_PARTICLE_COMPARATOR;

    public void <init>()
    {
        org.apache.xerces.impl.xs.XSConstraints r0;

        r0 := @this: org.apache.xerces.impl.xs.XSConstraints;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xerces.impl.xs.XSParticleDecl getEmptySequence()
    {
        org.apache.xerces.impl.xs.XSParticleDecl $r0, $r1, $r4;
        org.apache.xerces.impl.xs.util.XSObjectListImpl $r3, $r5;
        org.apache.xerces.impl.xs.XSModelGroupImpl $r2;

        $r0 = <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl fEmptyParticle>;

        if $r0 != null goto label1;

        $r2 = new org.apache.xerces.impl.xs.XSModelGroupImpl;

        specialinvoke $r2.<org.apache.xerces.impl.xs.XSModelGroupImpl: void <init>()>();

        $r2.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor> = 102;

        $r2.<org.apache.xerces.impl.xs.XSModelGroupImpl: int fParticleCount> = 0;

        $r2.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.impl.xs.XSParticleDecl[] fParticles> = null;

        $r3 = <org.apache.xerces.impl.xs.util.XSObjectListImpl: org.apache.xerces.impl.xs.util.XSObjectListImpl EMPTY_LIST>;

        $r2.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.xs.XSObjectList fAnnotations> = $r3;

        $r4 = new org.apache.xerces.impl.xs.XSParticleDecl;

        specialinvoke $r4.<org.apache.xerces.impl.xs.XSParticleDecl: void <init>()>();

        $r4.<org.apache.xerces.impl.xs.XSParticleDecl: short fType> = 3;

        $r4.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue> = $r2;

        $r5 = <org.apache.xerces.impl.xs.util.XSObjectListImpl: org.apache.xerces.impl.xs.util.XSObjectListImpl EMPTY_LIST>;

        $r4.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSObjectList fAnnotations> = $r5;

        <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl fEmptyParticle> = $r4;

     label1:
        $r1 = <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl fEmptyParticle>;

        return $r1;
    }

    public static boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition, org.apache.xerces.xs.XSTypeDefinition, short)
    {
        short $s0, s1, $s2;
        int $i3, $i4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xerces.impl.dv.XSSimpleType $r2, $r4, $r5, $r8;
        org.apache.xerces.impl.xs.XSComplexTypeDecl $r1, $r3, $r6, $r7;
        org.apache.xerces.xs.XSTypeDefinition r0, r9;

        r0 := @parameter0: org.apache.xerces.xs.XSTypeDefinition;

        r9 := @parameter1: org.apache.xerces.xs.XSTypeDefinition;

        s1 := @parameter2: short;

        $r1 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r0 != $r1 goto label03;

        if r0 != r9 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        return $z2;

     label03:
        $r2 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r0 != $r2 goto label07;

        $r7 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r9 == $r7 goto label04;

        $r8 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r9 != $r8 goto label05;

     label04:
        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        return $z3;

     label07:
        $s0 = interfaceinvoke r0.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i3 = (int) $s0;

        if $i3 != 16 goto label10;

        $s2 = interfaceinvoke r9.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i4 = (int) $s2;

        if $i4 != 15 goto label09;

        $r6 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r9 != $r6 goto label08;

        r9 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        goto label09;

     label08:
        return 0;

     label09:
        $r5 = (org.apache.xerces.impl.dv.XSSimpleType) r0;

        $r4 = (org.apache.xerces.impl.dv.XSSimpleType) r9;

        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)>($r5, $r4, s1);

        return $z1;

     label10:
        $r3 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) r0;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)>($r3, r9, s1);

        return $z0;
    }

    public static boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.xs.XSTypeDefinition, short)
    {
        org.apache.xerces.impl.dv.XSSimpleType r0, $r1, $r2, $r5;
        short $s0, s1;
        org.apache.xerces.impl.xs.XSComplexTypeDecl $r3, $r4;
        org.apache.xerces.xs.XSTypeDefinition r6;
        int $i2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xerces.impl.dv.XSSimpleType;

        r6 := @parameter1: org.apache.xerces.xs.XSTypeDefinition;

        s1 := @parameter2: short;

        $r1 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r0 != $r1 goto label4;

        $r4 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r6 == $r4 goto label1;

        $r5 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r6 != $r5 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $s0 = interfaceinvoke r6.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i2 = (int) $s0;

        if $i2 != 15 goto label6;

        $r3 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r6 != $r3 goto label5;

        r6 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        goto label6;

     label5:
        return 0;

     label6:
        $r2 = (org.apache.xerces.impl.dv.XSSimpleType) r6;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)>(r0, $r2, s1);

        return $z0;
    }

    public static boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl, org.apache.xerces.xs.XSTypeDefinition, short)
    {
        short s0;
        org.apache.xerces.impl.xs.XSComplexTypeDecl r0, $r1;
        org.apache.xerces.xs.XSTypeDefinition r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSComplexTypeDecl;

        r2 := @parameter1: org.apache.xerces.xs.XSTypeDefinition;

        s0 := @parameter2: short;

        $r1 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r0 != $r1 goto label3;

        if r0 != r2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)>(r0, r2, s0);

        return $z0;
    }

    private static boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.impl.dv.XSSimpleType, short)
    {
        org.apache.xerces.xs.XSObject $r7;
        short s0, $s1, $s2, $s3, $s4, $s5, $s7;
        org.apache.xerces.xs.XSObjectList $r6;
        int $i6, i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        org.apache.xerces.impl.dv.XSSimpleType r0, r3, $r4, $r5, r8, r9;
        org.apache.xerces.xs.XSTypeDefinition $r1, $r2;

        r0 := @parameter0: org.apache.xerces.impl.dv.XSSimpleType;

        r8 := @parameter1: org.apache.xerces.impl.dv.XSSimpleType;

        s0 := @parameter2: short;

        if r0 != r8 goto label01;

        return 1;

     label01:
        $s1 = s0 & 2;

        if $s1 != 0 goto label02;

        $r1 = interfaceinvoke r0.<org.apache.xerces.impl.dv.XSSimpleType: org.apache.xerces.xs.XSTypeDefinition getBaseType()>();

        $s2 = interfaceinvoke $r1.<org.apache.xerces.xs.XSTypeDefinition: short getFinal()>();

        $s3 = $s2 & 2;

        if $s3 == 0 goto label03;

     label02:
        return 0;

     label03:
        $r2 = interfaceinvoke r0.<org.apache.xerces.impl.dv.XSSimpleType: org.apache.xerces.xs.XSTypeDefinition getBaseType()>();

        r3 = (org.apache.xerces.impl.dv.XSSimpleType) $r2;

        if r3 != r8 goto label04;

        return 1;

     label04:
        $r4 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r3 == $r4 goto label05;

        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)>(r3, r8, s0);

        if $z1 == 0 goto label05;

        return 1;

     label05:
        $s4 = interfaceinvoke r0.<org.apache.xerces.impl.dv.XSSimpleType: short getVariety()>();

        $i9 = (int) $s4;

        if $i9 == 2 goto label06;

        $s7 = interfaceinvoke r0.<org.apache.xerces.impl.dv.XSSimpleType: short getVariety()>();

        $i10 = (int) $s7;

        if $i10 != 3 goto label07;

     label06:
        $r5 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r8 != $r5 goto label07;

        return 1;

     label07:
        $s5 = interfaceinvoke r8.<org.apache.xerces.impl.dv.XSSimpleType: short getVariety()>();

        $i11 = (int) $s5;

        if $i11 != 3 goto label11;

        $r6 = interfaceinvoke r8.<org.apache.xerces.impl.dv.XSSimpleType: org.apache.xerces.xs.XSObjectList getMemberTypes()>();

        $i6 = interfaceinvoke $r6.<org.apache.xerces.xs.XSObjectList: int getLength()>();

        i8 = 0;

        goto label10;

     label08:
        $r7 = interfaceinvoke $r6.<org.apache.xerces.xs.XSObjectList: org.apache.xerces.xs.XSObject item(int)>(i8);

        r9 = (org.apache.xerces.impl.dv.XSSimpleType) $r7;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)>(r0, r9, s0);

        if $z0 == 0 goto label09;

        return 1;

     label09:
        i8 = i8 + 1;

     label10:
        if i8 < $i6 goto label08;

     label11:
        return 0;
    }

    private static boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl, org.apache.xerces.xs.XSTypeDefinition, short)
    {
        short s0, $s1, $s2, $s3, $s4, $s5;
        int $i6, $i7, $i8;
        boolean $z0, $z1;
        org.apache.xerces.impl.dv.XSSimpleType $r3, $r4, $r5;
        org.apache.xerces.impl.xs.XSComplexTypeDecl r0, $r2, $r6, $r7;
        org.apache.xerces.xs.XSTypeDefinition r1, r8;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSComplexTypeDecl;

        r8 := @parameter1: org.apache.xerces.xs.XSTypeDefinition;

        s0 := @parameter2: short;

        if r0 != r8 goto label1;

        return 1;

     label1:
        $s1 = r0.<org.apache.xerces.impl.xs.XSComplexTypeDecl: short fDerivedBy>;

        $s2 = $s1 & s0;

        if $s2 == 0 goto label2;

        return 0;

     label2:
        r1 = r0.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        if r1 != r8 goto label3;

        return 1;

     label3:
        $r2 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r1 == $r2 goto label4;

        $r3 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        if r1 != $r3 goto label5;

     label4:
        return 0;

     label5:
        $s3 = interfaceinvoke r1.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i6 = (int) $s3;

        if $i6 != 15 goto label6;

        $r7 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) r1;

        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)>($r7, r8, s0);

        return $z1;

     label6:
        $s4 = interfaceinvoke r1.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i7 = (int) $s4;

        if $i7 != 16 goto label9;

        $s5 = interfaceinvoke r8.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i8 = (int) $s5;

        if $i8 != 15 goto label8;

        $r6 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if r8 != $r6 goto label7;

        r8 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.dv.XSSimpleType fAnySimpleType>;

        goto label8;

     label7:
        return 0;

     label8:
        $r5 = (org.apache.xerces.impl.dv.XSSimpleType) r1;

        $r4 = (org.apache.xerces.impl.dv.XSSimpleType) r8;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)>($r5, $r4, s0);

        return $z0;

     label9:
        return 0;
    }

    public static java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition, java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo)
    {
        org.apache.xerces.impl.dv.ValidatedInfo r5;
        org.apache.xerces.impl.xs.XSParticleDecl $r2;
        short $s0, $s1, $s2;
        int $i3, $i4;
        java.lang.String r3, $r6;
        boolean $z0;
        org.apache.xerces.impl.dv.ValidationContext r4;
        org.apache.xerces.xs.XSParticle $r1;
        org.apache.xerces.impl.dv.XSSimpleType r8;
        org.apache.xerces.impl.dv.InvalidDatatypeValueException $r7;
        org.apache.xerces.impl.xs.XSComplexTypeDecl r9;
        org.apache.xerces.xs.XSTypeDefinition r0;
        java.lang.Object r10;

        r0 := @parameter0: org.apache.xerces.xs.XSTypeDefinition;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.xerces.impl.dv.ValidationContext;

        r5 := @parameter3: org.apache.xerces.impl.dv.ValidatedInfo;

        r8 = null;

        $s0 = interfaceinvoke r0.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i3 = (int) $s0;

        if $i3 != 16 goto label1;

        r8 = (org.apache.xerces.impl.dv.XSSimpleType) r0;

        goto label4;

     label1:
        r9 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) r0;

        $s1 = r9.<org.apache.xerces.impl.xs.XSComplexTypeDecl: short fContentType>;

        if $s1 != 1 goto label2;

        r8 = r9.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.dv.XSSimpleType fXSSimpleType>;

        goto label4;

     label2:
        $s2 = r9.<org.apache.xerces.impl.xs.XSComplexTypeDecl: short fContentType>;

        $i4 = (int) $s2;

        if $i4 != 3 goto label3;

        $r1 = virtualinvoke r9.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSParticle getParticle()>();

        $r2 = (org.apache.xerces.impl.xs.XSParticleDecl) $r1;

        $z0 = virtualinvoke $r2.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z0 != 0 goto label4;

        return null;

     label3:
        return null;

     label4:
        if r8 != null goto label5;

        r8 = <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.dv.XSSimpleType STRING_TYPE>;

     label5:
        r10 = interfaceinvoke r8.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)>(r3, r4, r5);

        if r5 == null goto label6;

        $r6 = virtualinvoke r5.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String stringValue()>();

        r10 = interfaceinvoke r8.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)>($r6, r4, r5);

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        return null;

     label8:
        return r10;

        catch org.apache.xerces.impl.dv.InvalidDatatypeValueException from label5 to label6 with label7;
    }

    static void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter, org.apache.xerces.impl.xs.util.SimpleLocator, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        org.apache.xerces.impl.xs.util.SimpleLocator r0;
        org.apache.xerces.impl.XMLErrorReporter r1;
        java.lang.String r2;

        r1 := @parameter0: org.apache.xerces.impl.XMLErrorReporter;

        r0 := @parameter1: org.apache.xerces.impl.xs.util.SimpleLocator;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        if r0 == null goto label1;

        virtualinvoke r1.<org.apache.xerces.impl.XMLErrorReporter: java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short)>(r0, "http://www.w3.org/TR/xml-schema-1", r2, r3, 1);

        goto label2;

     label1:
        virtualinvoke r1.<org.apache.xerces.impl.XMLErrorReporter: java.lang.String reportError(java.lang.String,java.lang.String,java.lang.Object[],short)>("http://www.w3.org/TR/xml-schema-1", r2, r3, 1);

     label2:
        return;
    }

    public static void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket, org.apache.xerces.impl.xs.SubstitutionGroupHandler, org.apache.xerces.impl.xs.models.CMBuilder, org.apache.xerces.impl.XMLErrorReporter)
    {
        org.apache.xerces.util.SymbolHash $r95;
        org.apache.xerces.impl.xs.XMLSchemaException $r60, $r64, $r72, $r76;
        org.apache.xerces.impl.xs.models.CMBuilder r24;
        java.lang.Object[] $r12, $r15, $r36, $r46, $r63, $r67, $r68, $r75, $r79, $r80;
        org.apache.xerces.impl.xs.SchemaGrammar $r3, $r7, $r9, $r19, $r20, $r22, $r58, $r59;
        short $s8;
        java.lang.String $r13, $r16, $r38, $r48, $r52, $r62, $r66, $r70, $r74, $r77, $r81;
        org.apache.xerces.impl.xs.util.SimpleLocator[] $r10, $r23;
        org.apache.xerces.xs.XSTypeDefinition $r28, $r31, $r34, $r42, $r50, $r88;
        org.apache.xerces.impl.xs.util.SimpleLocator $r14, $r17, $r39, $r51, $r61, $r65, $r71, $r73, $r78, $r82;
        org.apache.xerces.impl.xs.XSParticleDecl $r44, $r45, $r54, $r56, r89, r90, $r93, $r94;
        boolean $z0, $z1, $z2, z3, z4;
        org.apache.xerces.impl.xs.XSComplexTypeDecl[] $r21;
        org.apache.xerces.impl.xs.XSGroupDecl r83, r85;
        org.apache.xerces.impl.xs.models.XSCMValidator $r92;
        org.apache.xerces.impl.xs.XSComplexTypeDecl $r25, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r37, $r40, $r41, $r43, $r47, $r49, $r53, $r55, $r57, $r69, $r87, $r91;
        org.apache.xerces.impl.XMLErrorReporter r11;
        org.apache.xerces.impl.xs.XSGroupDecl[] $r8;
        org.apache.xerces.impl.xs.XSGrammarBucket r0;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r2;
        org.apache.xerces.impl.xs.XSElementDecl[] $r4;
        org.apache.xerces.impl.xs.XSModelGroupImpl r84, r86;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, i13, i14, i15, i16, $i17, i18, i19, i20, $i21, $i23, $i25, $i26, $i28;
        org.apache.xerces.impl.xs.SchemaGrammar[] $r1;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSGrammarBucket;

        r2 := @parameter1: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r24 := @parameter2: org.apache.xerces.impl.xs.models.CMBuilder;

        r11 := @parameter3: org.apache.xerces.impl.XMLErrorReporter;

        $r1 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSGrammarBucket: org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()>();

        $i0 = lengthof $r1;

        i13 = $i0 - 1;

        goto label02;

     label01:
        $r3 = $r1[i13];

        $r4 = virtualinvoke $r3.<org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()>();

        virtualinvoke r2.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: void addSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl[])>($r4);

        $i23 = (int) -1;

        i13 = i13 + $i23;

     label02:
        if i13 >= 0 goto label01;

        $r93 = new org.apache.xerces.impl.xs.XSParticleDecl;

        specialinvoke $r93.<org.apache.xerces.impl.xs.XSParticleDecl: void <init>()>();

        $r94 = new org.apache.xerces.impl.xs.XSParticleDecl;

        specialinvoke $r94.<org.apache.xerces.impl.xs.XSParticleDecl: void <init>()>();

        $r93.<org.apache.xerces.impl.xs.XSParticleDecl: short fType> = 3;

        $r94.<org.apache.xerces.impl.xs.XSParticleDecl: short fType> = 3;

        $i1 = lengthof $r1;

        i14 = $i1 - 1;

        goto label10;

     label03:
        $r7 = $r1[i14];

        $r8 = virtualinvoke $r7.<org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()>();

        $r9 = $r1[i14];

        $r10 = virtualinvoke $r9.<org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.util.SimpleLocator[] getRGLocators()>();

        i15 = 0;

        goto label09;

     label04:
        i16 = i15 + 1;

        r83 = $r8[i15];

        r84 = r83.<org.apache.xerces.impl.xs.XSGroupDecl: org.apache.xerces.impl.xs.XSModelGroupImpl fModelGroup>;

        i15 = i16 + 1;

        r85 = $r8[i16];

        r86 = r85.<org.apache.xerces.impl.xs.XSGroupDecl: org.apache.xerces.impl.xs.XSModelGroupImpl fModelGroup>;

        $r93.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue> = r84;

        $r94.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue> = r86;

        if r86 != null goto label05;

        if r84 == null goto label09;

        $i4 = i15 / 2;

        $i5 = $i4 - 1;

        $r17 = $r10[$i5];

        $r15 = newarray (java.lang.Object)[2];

        $r16 = r83.<org.apache.xerces.impl.xs.XSGroupDecl: java.lang.String fName>;

        $r15[0] = $r16;

        $r15[1] = "rcase-Recurse.2";

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r17, "src-redefine.6.2.2", $r15);

        goto label09;

     label05:
        if r84 != null goto label06;

        $z0 = virtualinvoke $r94.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z0 != 0 goto label09;

        $i2 = i15 / 2;

        $i3 = $i2 - 1;

        $r14 = $r10[$i3];

        $r12 = newarray (java.lang.Object)[2];

        $r13 = r83.<org.apache.xerces.impl.xs.XSGroupDecl: java.lang.String fName>;

        $r12[0] = $r13;

        $r12[1] = "rcase-Recurse.2";

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r14, "src-redefine.6.2.2", $r12);

        goto label09;

     label06:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r93, r2, $r94, r2);

     label07:
        goto label09;

     label08:
        $r76 := @caughtexception;

        $r77 = virtualinvoke $r76.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.String getKey()>();

        $i9 = i15 / 2;

        $i10 = $i9 - 1;

        $r78 = $r10[$i10];

        $r79 = virtualinvoke $r76.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.Object[] getArgs()>();

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r78, $r77, $r79);

        $i11 = i15 / 2;

        $i12 = $i11 - 1;

        $r82 = $r10[$i12];

        $r80 = newarray (java.lang.Object)[2];

        $r81 = r83.<org.apache.xerces.impl.xs.XSGroupDecl: java.lang.String fName>;

        $r80[0] = $r81;

        $r80[1] = $r77;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r82, "src-redefine.6.2.2", $r80);

     label09:
        $i17 = lengthof $r8;

        if i15 < $i17 goto label04;

        $i25 = (int) -1;

        i14 = i14 + $i25;

     label10:
        if i14 >= 0 goto label03;

        $r95 = new org.apache.xerces.util.SymbolHash;

        specialinvoke $r95.<org.apache.xerces.util.SymbolHash: void <init>()>();

        $i6 = lengthof $r1;

        i18 = $i6 - 1;

        goto label30;

     label11:
        i19 = 0;

        $r19 = $r1[i18];

        z3 = $r19.<org.apache.xerces.impl.xs.SchemaGrammar: boolean fFullChecked>;

        $r20 = $r1[i18];

        $r21 = virtualinvoke $r20.<org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()>();

        $r22 = $r1[i18];

        $r23 = virtualinvoke $r22.<org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.util.SimpleLocator[] getUncheckedCTLocators()>();

        i20 = 0;

        goto label28;

     label12:
        if z3 != 0 goto label16;

        $r53 = $r21[i20];

        $r54 = $r53.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        if $r54 == null goto label16;

        virtualinvoke $r95.<org.apache.xerces.util.SymbolHash: void clear()>();

     label13:
        $r57 = $r21[i20];

        $r55 = $r21[i20];

        $r56 = $r55.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r57, $r56, $r95, r2);

     label14:
        goto label16;

     label15:
        $r72 := @caughtexception;

        $r73 = $r23[i20];

        $r74 = virtualinvoke $r72.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.String getKey()>();

        $r75 = virtualinvoke $r72.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.Object[] getArgs()>();

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r73, $r74, $r75);

     label16:
        $r87 = $r21[i20];

        $r88 = $r87.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        if $r88 == null goto label22;

        $r26 = $r21[i20];

        $r28 = $r26.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        $r27 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.XSComplexTypeDecl fAnyType>;

        if $r28 == $r27 goto label22;

        $r29 = $r21[i20];

        $s8 = $r29.<org.apache.xerces.impl.xs.XSComplexTypeDecl: short fDerivedBy>;

        $i26 = (int) $s8;

        if $i26 != 2 goto label22;

        $r30 = $r21[i20];

        $r31 = $r30.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        $z1 = $r31 instanceof org.apache.xerces.impl.xs.XSComplexTypeDecl;

        if $z1 == 0 goto label22;

        $r32 = $r21[i20];

        r89 = $r32.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        $r33 = $r21[i20];

        $r34 = $r33.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        $r35 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) $r34;

        r90 = $r35.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        if r89 != null goto label17;

        if r90 == null goto label22;

        $z2 = virtualinvoke r90.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z2 != 0 goto label22;

        $r51 = $r23[i20];

        $r46 = newarray (java.lang.Object)[2];

        $r47 = $r21[i20];

        $r48 = $r47.<org.apache.xerces.impl.xs.XSComplexTypeDecl: java.lang.String fName>;

        $r46[0] = $r48;

        $r49 = $r21[i20];

        $r50 = $r49.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        $r52 = interfaceinvoke $r50.<org.apache.xerces.xs.XSTypeDefinition: java.lang.String getName()>();

        $r46[1] = $r52;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r51, "derivation-ok-restriction.5.3.2", $r46);

        goto label22;

     label17:
        if r90 == null goto label21;

     label18:
        $r40 = $r21[i20];

        $r45 = $r40.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        $r41 = $r21[i20];

        $r42 = $r41.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.xs.XSTypeDefinition fBaseType>;

        $r43 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) $r42;

        $r44 = $r43.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.XSParticleDecl fParticle>;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r45, r2, $r44, r2);

     label19:
        goto label22;

     label20:
        $r64 := @caughtexception;

        $r65 = $r23[i20];

        $r66 = virtualinvoke $r64.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.String getKey()>();

        $r67 = virtualinvoke $r64.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.Object[] getArgs()>();

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r65, $r66, $r67);

        $r71 = $r23[i20];

        $r68 = newarray (java.lang.Object)[1];

        $r69 = $r21[i20];

        $r70 = $r69.<org.apache.xerces.impl.xs.XSComplexTypeDecl: java.lang.String fName>;

        $r68[0] = $r70;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r71, "derivation-ok-restriction.5.4.2", $r68);

        goto label22;

     label21:
        $r39 = $r23[i20];

        $r36 = newarray (java.lang.Object)[1];

        $r37 = $r21[i20];

        $r38 = $r37.<org.apache.xerces.impl.xs.XSComplexTypeDecl: java.lang.String fName>;

        $r36[0] = $r38;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r39, "derivation-ok-restriction.5.4.2", $r36);

     label22:
        $r91 = $r21[i20];

        $r92 = virtualinvoke $r91.<org.apache.xerces.impl.xs.XSComplexTypeDecl: org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.models.CMBuilder,boolean)>(r24, 1);

        z4 = 0;

        if $r92 == null goto label26;

     label23:
        z4 = interfaceinvoke $r92.<org.apache.xerces.impl.xs.models.XSCMValidator: boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r2);

     label24:
        goto label26;

     label25:
        $r60 := @caughtexception;

        $r61 = $r23[i20];

        $r62 = virtualinvoke $r60.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.String getKey()>();

        $r63 = virtualinvoke $r60.<org.apache.xerces.impl.xs.XMLSchemaException: java.lang.Object[] getArgs()>();

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])>(r11, $r61, $r62, $r63);

     label26:
        if z3 != 0 goto label27;

        if z4 == 0 goto label27;

        $i7 = i19;

        i19 = i19 + 1;

        $r25 = $r21[i20];

        $r21[$i7] = $r25;

     label27:
        i20 = i20 + 1;

     label28:
        $i21 = lengthof $r21;

        if i20 < $i21 goto label12;

        if z3 != 0 goto label29;

        $r58 = $r1[i18];

        virtualinvoke $r58.<org.apache.xerces.impl.xs.SchemaGrammar: void setUncheckedTypeNum(int)>(i19);

        $r59 = $r1[i18];

        $r59.<org.apache.xerces.impl.xs.SchemaGrammar: boolean fFullChecked> = 1;

     label29:
        $i28 = (int) -1;

        i18 = i18 + $i28;

     label30:
        if i18 >= 0 goto label11;

        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label06 to label07 with label08;
        catch org.apache.xerces.impl.xs.XMLSchemaException from label13 to label14 with label15;
        catch org.apache.xerces.impl.xs.XMLSchemaException from label18 to label19 with label20;
        catch org.apache.xerces.impl.xs.XMLSchemaException from label23 to label24 with label25;
    }

    public static void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl, org.apache.xerces.impl.xs.XSParticleDecl, org.apache.xerces.util.SymbolHash, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XSElementDecl[] $r8;
        org.apache.xerces.impl.xs.XSModelGroupImpl r11;
        org.apache.xerces.impl.xs.XSParticleDecl r0, $r6;
        short s0, $s2;
        int $i1, $i3, i4, i5, $i6;
        org.apache.xerces.util.SymbolHash r4;
        org.apache.xerces.xs.XSTerm $r1, $r7;
        org.apache.xerces.impl.xs.XSParticleDecl[] $r3;
        org.apache.xerces.impl.xs.XSComplexTypeDecl r2;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r5;
        org.apache.xerces.impl.xs.XSElementDecl $r9, r10;

        r2 := @parameter0: org.apache.xerces.impl.xs.XSComplexTypeDecl;

        r0 := @parameter1: org.apache.xerces.impl.xs.XSParticleDecl;

        r4 := @parameter2: org.apache.xerces.util.SymbolHash;

        r5 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        s0 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        $i6 = (int) s0;

        if $i6 != 2 goto label1;

        return;

     label1:
        if s0 != 1 goto label5;

        $r7 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r10 = (org.apache.xerces.impl.xs.XSElementDecl) $r7;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)>(r2, r10, r4);

        $s2 = r10.<org.apache.xerces.impl.xs.XSElementDecl: short fScope>;

        if $s2 != 1 goto label4;

        $r8 = virtualinvoke r5.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r10);

        i4 = 0;

        goto label3;

     label2:
        $r9 = $r8[i4];

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)>(r2, $r9, r4);

        i4 = i4 + 1;

     label3:
        $i3 = lengthof $r8;

        if i4 < $i3 goto label2;

     label4:
        return;

     label5:
        $r1 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r11 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r1;

        i5 = 0;

        goto label7;

     label6:
        $r3 = r11.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.impl.xs.XSParticleDecl[] fParticles>;

        $r6 = $r3[i5];

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r2, $r6, r4, r5);

        i5 = i5 + 1;

     label7:
        $i1 = r11.<org.apache.xerces.impl.xs.XSModelGroupImpl: int fParticleCount>;

        if i5 < $i1 goto label6;

        return;
    }

    public static void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl, org.apache.xerces.impl.xs.XSElementDecl, org.apache.xerces.util.SymbolHash) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r14;
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        org.apache.xerces.util.SymbolHash r8;
        java.lang.String $r2, $r5, $r7, $r16, $r17;
        org.apache.xerces.impl.xs.XMLSchemaException $r13;
        org.apache.xerces.impl.xs.XSComplexTypeDecl r15;
        org.apache.xerces.xs.XSTypeDefinition $r11, $r12;
        java.lang.Object $r9;
        org.apache.xerces.impl.xs.XSElementDecl r1, $r10;

        r15 := @parameter0: org.apache.xerces.impl.xs.XSComplexTypeDecl;

        r1 := @parameter1: org.apache.xerces.impl.xs.XSElementDecl;

        r8 := @parameter2: org.apache.xerces.util.SymbolHash;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke r8.<org.apache.xerces.util.SymbolHash: java.lang.Object get(java.lang.Object)>($r7);

        $r10 = (org.apache.xerces.impl.xs.XSElementDecl) $r9;

        if $r10 != null goto label1;

        virtualinvoke r8.<org.apache.xerces.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>($r7, r1);

        goto label3;

     label1:
        if r1 != $r10 goto label2;

        return;

     label2:
        $r12 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $r11 = $r10.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        if $r12 == $r11 goto label3;

        $r13 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r14 = newarray (java.lang.Object)[2];

        $r16 = r15.<org.apache.xerces.impl.xs.XSComplexTypeDecl: java.lang.String fName>;

        $r14[0] = $r16;

        $r17 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r14[1] = $r17;

        specialinvoke $r13.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-element-consistent", $r14);

        throw $r13;

     label3:
        return;
    }

    private static boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler, org.apache.xerces.impl.xs.XSParticleDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XSParticleDecl r0, r2;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r1, r3;
        boolean $z0;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSParticleDecl;

        r1 := @parameter1: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r2 := @parameter2: org.apache.xerces.impl.xs.XSParticleDecl;

        r3 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)>(r0, r1, r2, r3, 1);

        return $z0;
    }

    private static boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler, org.apache.xerces.impl.xs.XSParticleDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler, boolean) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.util.Vector r58, r59, $r64, $r65, $r66, $r67;
        org.apache.xerces.xs.XSTerm $r12, $r13, $r22, $r23, $r26, $r27, $r32, $r37, $r40, $r42, $r47, $r50;
        org.apache.xerces.impl.xs.XMLSchemaException $r62, $r63, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9, $r11, $r17, $r19, $r31;
        short $s2, $s7, $s12, s15, $s19, s20;
        org.apache.xerces.impl.xs.XSWildcardDecl $r14, $r15, $r24;
        org.apache.xerces.impl.xs.XSElementDecl $r25, $r28, $r29, $r35, $r45, r60, r61;
        org.apache.xerces.impl.xs.XSParticleDecl $r39, $r49, r54, r56;
        boolean $z0, $z1, z2, $z3, $z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r55, r57;
        org.apache.xerces.impl.xs.XSElementDecl[] $r33, $r43;
        org.apache.xerces.impl.xs.XSModelGroupImpl $r38, $r41, $r48, $r51;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, i13, i14, $i16, $i17, i18, $i21, $i22, i23, i24, $i25, $i27, $i29, $i30, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45;
        java.util.Comparator $r36, $r46;

        r54 := @parameter0: org.apache.xerces.impl.xs.XSParticleDecl;

        r55 := @parameter1: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r56 := @parameter2: org.apache.xerces.impl.xs.XSParticleDecl;

        r57 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        z2 := @parameter4: boolean;

        r58 = null;

        r59 = null;

        $i27 = (int) -2;

        i13 = $i27;

        $i29 = (int) -2;

        i14 = $i29;

        z5 = 0;

        z19 = 0;

        z18 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        $z0 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $z4 = virtualinvoke r56.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z4 != 0 goto label01;

        $r62 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r62.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.a", null);

        throw $r62;

     label01:
        $z1 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: boolean isEmpty()>();

        if $z1 != 0 goto label02;

        $z3 = virtualinvoke r56.<org.apache.xerces.impl.xs.XSParticleDecl: boolean isEmpty()>();

        if $z3 == 0 goto label02;

        $r63 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r63.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.b", null);

        throw $r63;

     label02:
        $s12 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        s15 = $s12;

        $i30 = (int) $s12;

        if $i30 != 3 goto label04;

        $r47 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r48 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r47;

        s15 = $r48.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

        $r49 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)>(r54);

        if $r49 == r54 goto label03;

        r54 = $r49;

        s15 = $r49.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        if s15 != 3 goto label03;

        $r50 = $r49.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r51 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r50;

        s15 = $r51.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

     label03:
        r58 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)>(r54);

     label04:
        $i16 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: int fMinOccurs>;

        $i17 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: int fMaxOccurs>;

        if r55 == null goto label07;

        if s15 != 1 goto label07;

        $r42 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r60 = (org.apache.xerces.impl.xs.XSElementDecl) $r42;

        $s7 = r60.<org.apache.xerces.impl.xs.XSElementDecl: short fScope>;

        if $s7 != 1 goto label07;

        $r43 = virtualinvoke r55.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r60);

        $i8 = lengthof $r43;

        if $i8 <= 0 goto label07;

        s15 = 101;

        i13 = $i16;

        i14 = $i17;

        $r64 = new java.util.Vector;

        $i9 = lengthof $r43;

        $i10 = $i9 + 1;

        specialinvoke $r64.<java.util.Vector: void <init>(int)>($i10);

        r58 = $r64;

        i18 = 0;

        goto label06;

     label05:
        $r45 = $r43[i18];

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void addElementToParticleVector(java.util.Vector,org.apache.xerces.impl.xs.XSElementDecl)>($r64, $r45);

        i18 = i18 + 1;

     label06:
        $i11 = lengthof $r43;

        if i18 < $i11 goto label05;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void addElementToParticleVector(java.util.Vector,org.apache.xerces.impl.xs.XSElementDecl)>($r64, r60);

        $r46 = <org.apache.xerces.impl.xs.XSConstraints: java.util.Comparator ELEMENT_PARTICLE_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r64, $r46);

        r55 = null;

     label07:
        $s19 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        s20 = $s19;

        $i31 = (int) $s19;

        if $i31 != 3 goto label09;

        $r37 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r38 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r37;

        s20 = $r38.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

        $r39 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)>(r56);

        if $r39 == r56 goto label08;

        r56 = $r39;

        s20 = $r39.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        if s20 != 3 goto label08;

        $r40 = $r39.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r41 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r40;

        s20 = $r41.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

     label08:
        r59 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)>(r56);

     label09:
        $i21 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: int fMinOccurs>;

        $i22 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: int fMaxOccurs>;

        if r57 == null goto label12;

        if s20 != 1 goto label12;

        $r32 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r61 = (org.apache.xerces.impl.xs.XSElementDecl) $r32;

        $s2 = r61.<org.apache.xerces.impl.xs.XSElementDecl: short fScope>;

        if $s2 != 1 goto label12;

        $r33 = virtualinvoke r57.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r61);

        $i3 = lengthof $r33;

        if $i3 <= 0 goto label12;

        s20 = 101;

        $r65 = new java.util.Vector;

        $i4 = lengthof $r33;

        $i5 = $i4 + 1;

        specialinvoke $r65.<java.util.Vector: void <init>(int)>($i5);

        r59 = $r65;

        i23 = 0;

        goto label11;

     label10:
        $r35 = $r33[i23];

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void addElementToParticleVector(java.util.Vector,org.apache.xerces.impl.xs.XSElementDecl)>($r65, $r35);

        i23 = i23 + 1;

     label11:
        $i6 = lengthof $r33;

        if i23 < $i6 goto label10;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void addElementToParticleVector(java.util.Vector,org.apache.xerces.impl.xs.XSElementDecl)>($r65, r61);

        $r36 = <org.apache.xerces.impl.xs.XSConstraints: java.util.Comparator ELEMENT_PARTICLE_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r65, $r36);

        r57 = null;

        z5 = 1;

        z19 = 1;

        z18 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        z14 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

     label12:
        lookupswitch(s15)
        {
            case 1: goto label13;
            case 2: goto label19;
            case 101: goto label30;
            case 102: goto label37;
            case 103: goto label23;
            default: goto label48;
        };

     label13:
        lookupswitch(s20)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 101: goto label16;
            case 102: goto label17;
            case 103: goto label17;
            default: goto label18;
        };

     label14:
        $r26 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r29 = (org.apache.xerces.impl.xs.XSElementDecl) $r26;

        $r27 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r28 = (org.apache.xerces.impl.xs.XSElementDecl) $r27;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)>($r29, $i16, $i17, $r28, $i21, $i22);

        return z16;

     label15:
        $r22 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r25 = (org.apache.xerces.impl.xs.XSElementDecl) $r22;

        $r23 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r24 = (org.apache.xerces.impl.xs.XSWildcardDecl) $r23;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int,boolean)>($r25, $i16, $i17, $r24, $i21, $i22, z2);

        return z19;

     label16:
        $r66 = new java.util.Vector;

        specialinvoke $r66.<java.util.Vector: void <init>()>();

        virtualinvoke $r66.<java.util.Vector: void addElement(java.lang.Object)>(r54);

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r66, 1, 1, r55, r59, $i21, $i22, r57);

        return z10;

     label17:
        $r67 = new java.util.Vector;

        specialinvoke $r67.<java.util.Vector: void <init>()>();

        virtualinvoke $r67.<java.util.Vector: void addElement(java.lang.Object)>(r54);

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r67, 1, 1, r55, r59, $i21, $i22, r57);

        return z8;

     label18:
        $r68 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = "in particleValidRestriction";

        specialinvoke $r68.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("Internal-Error", $r31);

        throw $r68;

     label19:
        lookupswitch(s20)
        {
            case 1: goto label21;
            case 2: goto label20;
            case 101: goto label21;
            case 102: goto label21;
            case 103: goto label21;
            default: goto label22;
        };

     label20:
        $r12 = r54.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r15 = (org.apache.xerces.impl.xs.XSWildcardDecl) $r12;

        $r13 = r56.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r14 = (org.apache.xerces.impl.xs.XSWildcardDecl) $r13;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int)>($r15, $i16, $i17, $r14, $i21, $i22);

        return z6;

     label21:
        $r69 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = "any:choice,sequence,all,elt";

        specialinvoke $r69.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.2", $r17);

        throw $r69;

     label22:
        $r70 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = "in particleValidRestriction";

        specialinvoke $r70.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("Internal-Error", $r19);

        throw $r70;

     label23:
        lookupswitch(s20)
        {
            case 1: goto label28;
            case 2: goto label24;
            case 101: goto label28;
            case 102: goto label28;
            case 103: goto label27;
            default: goto label29;
        };

     label24:
        $i33 = (int) -2;

        if i13 != $i33 goto label25;

        i13 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int minEffectiveTotalRange()>();

     label25:
        $i35 = (int) -2;

        if i14 != $i35 goto label26;

        i14 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int maxEffectiveTotalRange()>();

     label26:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)>(r58, i13, i14, r55, r56, $i21, $i22, z2);

        return z12;

     label27:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r58, $i16, $i17, r55, r59, $i21, $i22, r57);

        return z7;

     label28:
        $r71 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "all:choice,sequence,elt";

        specialinvoke $r71.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.2", $r1);

        throw $r71;

     label29:
        $r72 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "in particleValidRestriction";

        specialinvoke $r72.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("Internal-Error", $r3);

        throw $r72;

     label30:
        lookupswitch(s20)
        {
            case 1: goto label35;
            case 2: goto label31;
            case 101: goto label34;
            case 102: goto label35;
            case 103: goto label35;
            default: goto label36;
        };

     label31:
        $i37 = (int) -2;

        if i13 != $i37 goto label32;

        i13 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int minEffectiveTotalRange()>();

     label32:
        $i39 = (int) -2;

        if i14 != $i39 goto label33;

        i14 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int maxEffectiveTotalRange()>();

     label33:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)>(r58, i13, i14, r55, r56, $i21, $i22, z2);

        return z11;

     label34:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r58, $i16, $i17, r55, r59, $i21, $i22, r57);

        return z15;

     label35:
        $r73 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "choice:all,sequence,elt";

        specialinvoke $r73.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.2", $r9);

        throw $r73;

     label36:
        $r74 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "in particleValidRestriction";

        specialinvoke $r74.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("Internal-Error", $r11);

        throw $r74;

     label37:
        lookupswitch(s20)
        {
            case 1: goto label46;
            case 2: goto label38;
            case 101: goto label43;
            case 102: goto label42;
            case 103: goto label41;
            default: goto label47;
        };

     label38:
        $i41 = (int) -2;

        if i13 != $i41 goto label39;

        i13 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int minEffectiveTotalRange()>();

     label39:
        $i43 = (int) -2;

        if i14 != $i43 goto label40;

        i14 = virtualinvoke r54.<org.apache.xerces.impl.xs.XSParticleDecl: int maxEffectiveTotalRange()>();

     label40:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)>(r58, i13, i14, r55, r56, $i21, $i22, z2);

        return z14;

     label41:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r58, $i16, $i17, r55, r59, $i21, $i22, r57);

        return z13;

     label42:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r58, $i16, $i17, r55, r59, $i21, $i22, r57);

        return z17;

     label43:
        $i0 = virtualinvoke r58.<java.util.Vector: int size()>();

        i24 = $i16 * $i0;

        $i45 = (int) -1;

        if $i17 != $i45 goto label44;

        $i25 = $i17;

        goto label45;

     label44:
        $i1 = virtualinvoke r58.<java.util.Vector: int size()>();

        $i25 = $i17 * $i1;

     label45:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r58, i24, $i25, r55, r59, $i21, $i22, r57);

        return z18;

     label46:
        $r75 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "seq:elt";

        specialinvoke $r75.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("cos-particle-restrict.2", $r5);

        throw $r75;

     label47:
        $r76 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "in particleValidRestriction";

        specialinvoke $r76.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("Internal-Error", $r7);

        throw $r76;

     label48:
        return z9;
    }

    private static void addElementToParticleVector(java.util.Vector, org.apache.xerces.impl.xs.XSElementDecl)
    {
        org.apache.xerces.impl.xs.XSParticleDecl $r0;
        java.util.Vector r2;
        org.apache.xerces.impl.xs.XSElementDecl r1;

        r2 := @parameter0: java.util.Vector;

        r1 := @parameter1: org.apache.xerces.impl.xs.XSElementDecl;

        $r0 = new org.apache.xerces.impl.xs.XSParticleDecl;

        specialinvoke $r0.<org.apache.xerces.impl.xs.XSParticleDecl: void <init>()>();

        $r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue> = r1;

        $r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType> = 1;

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        return;
    }

    private static org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)
    {
        org.apache.xerces.xs.XSTerm $r1, $r2, $r4;
        org.apache.xerces.impl.xs.XSParticleDecl[] $r6;
        org.apache.xerces.impl.xs.XSModelGroupImpl $r3, $r5;
        org.apache.xerces.impl.xs.XSParticleDecl r0, $r7, $r8;
        short $s0, $s1;
        int $i2, $i3, $i4, $i5;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSParticleDecl;

        $s0 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        if $s0 == 1 goto label1;

        $s1 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        $i5 = (int) $s1;

        if $i5 != 2 goto label2;

     label1:
        return r0;

     label2:
        $i2 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: int fMinOccurs>;

        if $i2 != 1 goto label3;

        $i3 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: int fMaxOccurs>;

        if $i3 != 1 goto label3;

        $r1 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r3 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r2;

        $i4 = $r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: int fParticleCount>;

        if $i4 != 1 goto label3;

        $r4 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r5 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r4;

        $r6 = $r5.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.impl.xs.XSParticleDecl[] fParticles>;

        $r7 = $r6[0];

        $r8 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)>($r7);

        return $r8;

     label3:
        return r0;
    }

    private static java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)
    {
        org.apache.xerces.xs.XSTerm $r2;
        org.apache.xerces.impl.xs.XSParticleDecl[] $r4;
        org.apache.xerces.impl.xs.XSModelGroupImpl r3;
        org.apache.xerces.impl.xs.XSParticleDecl r0, $r5;
        short $s0, $s1, $s3;
        java.util.Vector $r6;
        int $i2, i4, $i5, $i6;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSParticleDecl;

        $s0 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        if $s0 == 1 goto label1;

        $s1 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        $i5 = (int) $s1;

        if $i5 != 2 goto label2;

     label1:
        return null;

     label2:
        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        $r2 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r3 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r2;

        i4 = 0;

        goto label4;

     label3:
        $s3 = r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

        $r4 = r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.impl.xs.XSParticleDecl[] fParticles>;

        $r5 = $r4[i4];

        $i6 = (int) $s3;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)>($i6, $r5, $r6);

        i4 = i4 + 1;

     label4:
        $i2 = r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: int fParticleCount>;

        if i4 < $i2 goto label3;

        return $r6;
    }

    private static void gatherChildren(int, org.apache.xerces.impl.xs.XSParticleDecl, java.util.Vector)
    {
        org.apache.xerces.impl.xs.XSModelGroupImpl r3, $r7;
        org.apache.xerces.impl.xs.XSParticleDecl r0, $r5;
        short s4;
        java.util.Vector r1;
        int i0, i1, i2, $i3, i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        org.apache.xerces.xs.XSTerm $r2, $r6;
        org.apache.xerces.impl.xs.XSParticleDecl[] $r4;

        i2 := @parameter0: int;

        r0 := @parameter1: org.apache.xerces.impl.xs.XSParticleDecl;

        r1 := @parameter2: java.util.Vector;

        i0 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: int fMinOccurs>;

        i1 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: int fMaxOccurs>;

        s4 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: short fType>;

        $i6 = (int) s4;

        if $i6 != 3 goto label1;

        $r6 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        $r7 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r6;

        s4 = $r7.<org.apache.xerces.impl.xs.XSModelGroupImpl: short fCompositor>;

     label1:
        if s4 == 1 goto label2;

        $i7 = (int) s4;

        if $i7 != 2 goto label3;

     label2:
        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>(r0);

        return;

     label3:
        if i0 != 1 goto label4;

        if i1 == 1 goto label5;

     label4:
        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>(r0);

        goto label9;

     label5:
        $i8 = (int) s4;

        if i2 != $i8 goto label8;

        $r2 = r0.<org.apache.xerces.impl.xs.XSParticleDecl: org.apache.xerces.xs.XSTerm fValue>;

        r3 = (org.apache.xerces.impl.xs.XSModelGroupImpl) $r2;

        i5 = 0;

        goto label7;

     label6:
        $r4 = r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: org.apache.xerces.impl.xs.XSParticleDecl[] fParticles>;

        $r5 = $r4[i5];

        $i9 = (int) s4;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)>($i9, $r5, r1);

        i5 = i5 + 1;

     label7:
        $i3 = r3.<org.apache.xerces.impl.xs.XSModelGroupImpl: int fParticleCount>;

        if i5 < $i3 goto label6;

        goto label9;

     label8:
        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSParticleDecl: boolean isEmpty()>();

        if $z0 != 0 goto label9;

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>(r0);

     label9:
        return;
    }

    private static void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl, int, int, org.apache.xerces.impl.xs.XSElementDecl, int, int) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XMLSchemaException $r57, $r58, $r59, $r60, $r61, $r62, $r63;
        java.lang.Object[] $r5, $r13, $r18, $r30, $r43, $r48, $r53;
        short $s4, $s5, $s6, $s7, $s8, $s9, $s10;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r19, $r21, $r23, $r31, $r33, $r35, $r38, $r39, $r44, $r46, $r49, $r50, $r51, $r54, $r55, $r56;
        org.apache.xerces.xs.XSTypeDefinition $r15, $r16, $r20, $r22, $r24, $r40;
        org.apache.xerces.impl.xs.XSElementDecl r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8;
        org.apache.xerces.impl.xs.XSComplexTypeDecl $r41;
        org.apache.xerces.impl.dv.ValidatedInfo $r25, $r26, $r32, $r34, $r36, $r37, $r45;
        int i0, i1, i2, i3, $i12, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Object $r27, $r28;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSElementDecl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.apache.xerces.impl.xs.XSElementDecl;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r2 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        if $r3 != $r2 goto label01;

        $r11 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r10 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        if $r11 == $r10 goto label02;

     label01:
        $r57 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r5 = newarray (java.lang.Object)[4];

        $r6 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r5[0] = $r6;

        $r7 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r5[1] = $r7;

        $r8 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r5[2] = $r8;

        $r9 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r5[3] = $r9;

        specialinvoke $r57.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.1", $r5);

        throw $r57;

     label02:
        $z0 = virtualinvoke r1.<org.apache.xerces.impl.xs.XSElementDecl: boolean getNillable()>();

        if $z0 != 0 goto label03;

        $z5 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSElementDecl: boolean getNillable()>();

        if $z5 == 0 goto label03;

        $r58 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r53 = newarray (java.lang.Object)[1];

        $r54 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r53[0] = $r54;

        specialinvoke $r58.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.2", $r53);

        throw $r58;

     label03:
        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z1 != 0 goto label08;

        $r59 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r48 = newarray (java.lang.Object)[5];

        $r49 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r48[0] = $r49;

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r48[1] = $r50;

        $i12 = (int) -1;

        if i1 != $i12 goto label04;

        $r55 = "unbounded";

        goto label05;

     label04:
        $r55 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label05:
        $r48[2] = $r55;

        $r51 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r48[3] = $r51;

        $i14 = (int) -1;

        if i3 != $i14 goto label06;

        $r56 = "unbounded";

        goto label07;

     label06:
        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label07:
        $r48[4] = $r56;

        specialinvoke $r59.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.3", $r48);

        throw $r59;

     label08:
        $s4 = virtualinvoke r1.<org.apache.xerces.impl.xs.XSElementDecl: short getConstraintType()>();

        $i15 = (int) $s4;

        if $i15 != 2 goto label14;

        $s5 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSElementDecl: short getConstraintType()>();

        $i16 = (int) $s5;

        if $i16 == 2 goto label09;

        $r60 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r43 = newarray (java.lang.Object)[2];

        $r44 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r43[0] = $r44;

        $r45 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r46 = virtualinvoke $r45.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String stringValue()>();

        $r43[1] = $r46;

        specialinvoke $r60.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.4.a", $r43);

        throw $r60;

     label09:
        z6 = 0;

        z8 = 0;

        z7 = 0;

        $r24 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $s6 = interfaceinvoke $r24.<org.apache.xerces.xs.XSTypeDefinition: short getTypeCategory()>();

        $i17 = (int) $s6;

        if $i17 == 16 goto label10;

        $r40 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $r41 = (org.apache.xerces.impl.xs.XSComplexTypeDecl) $r40;

        $s7 = $r41.<org.apache.xerces.impl.xs.XSComplexTypeDecl: short fContentType>;

        if $s7 != 1 goto label11;

     label10:
        z6 = 1;

        z8 = 1;

        z7 = 1;

     label11:
        if z8 != 0 goto label12;

        $r36 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r39 = $r36.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r37 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r38 = $r37.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $z4 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z4 == 0 goto label13;

     label12:
        if z7 == 0 goto label14;

        $r25 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r28 = $r25.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.Object actualValue>;

        $r26 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r27 = $r26.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.Object actualValue>;

        $z3 = virtualinvoke $r28.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z3 != 0 goto label14;

     label13:
        $r61 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r30 = newarray (java.lang.Object)[3];

        $r31 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r30[0] = $r31;

        $r32 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r33 = virtualinvoke $r32.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String stringValue()>();

        $r30[1] = $r33;

        $r34 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.impl.dv.ValidatedInfo fDefault>;

        $r35 = virtualinvoke $r34.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String stringValue()>();

        $r30[2] = $r35;

        specialinvoke $r61.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.4.b", $r30);

        throw $r61;

     label14:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: void checkIDConstraintRestriction(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl)>(r0, r1);

        $s8 = r0.<org.apache.xerces.impl.xs.XSElementDecl: short fBlock>;

        $s9 = r1.<org.apache.xerces.impl.xs.XSElementDecl: short fBlock>;

        $s10 = $s8 & $s9;

        $i18 = (int) $s10;

        $i19 = (int) $s9;

        if $i18 != $i19 goto label15;

        if $s8 != 0 goto label16;

        if $s9 == 0 goto label16;

     label15:
        $r62 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r13[0] = $r14;

        specialinvoke $r62.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.6", $r13);

        throw $r62;

     label16:
        $r16 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $r15 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $z2 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)>($r16, $r15, 25);

        if $z2 != 0 goto label17;

        $r63 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r18 = newarray (java.lang.Object)[3];

        $r19 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r18[0] = $r19;

        $r20 = r0.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $r21 = interfaceinvoke $r20.<org.apache.xerces.xs.XSTypeDefinition: java.lang.String getName()>();

        $r18[1] = $r21;

        $r22 = r1.<org.apache.xerces.impl.xs.XSElementDecl: org.apache.xerces.xs.XSTypeDefinition fType>;

        $r23 = interfaceinvoke $r22.<org.apache.xerces.xs.XSTypeDefinition: java.lang.String getName()>();

        $r18[2] = $r23;

        specialinvoke $r63.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NameAndTypeOK.7", $r18);

        throw $r63;

     label17:
        return;
    }

    private static void checkIDConstraintRestriction(org.apache.xerces.impl.xs.XSElementDecl, org.apache.xerces.impl.xs.XSElementDecl) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XSElementDecl r0, r1;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSElementDecl;

        r1 := @parameter1: org.apache.xerces.impl.xs.XSElementDecl;

        return;
    }

    private static boolean checkOccurrenceRange(int, int, int, int)
    {
        int i0, i1, i2, i3, $i5, $i7;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 < i1 goto label2;

        $i5 = (int) -1;

        if i2 == $i5 goto label1;

        $i7 = (int) -1;

        if i3 == $i7 goto label2;

        if i3 > i2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl, int, int, org.apache.xerces.impl.xs.XSWildcardDecl, int, int, boolean) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r4, $r8;
        int i0, i1, i2, i3, $i5, $i7;
        org.apache.xerces.impl.xs.XSWildcardDecl r0;
        java.lang.String $r2, $r5, $r6, $r9, $r10, $r11, $r12, $r13;
        boolean z0, $z1, $z2;
        org.apache.xerces.impl.xs.XMLSchemaException $r14, $r15;
        org.apache.xerces.impl.xs.XSElementDecl r1;

        r1 := @parameter0: org.apache.xerces.impl.xs.XSElementDecl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.xerces.impl.xs.XSWildcardDecl;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        if z0 == 0 goto label5;

        $z2 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z2 != 0 goto label5;

        $r14 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r8 = newarray (java.lang.Object)[5];

        $r9 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8[1] = $r10;

        $i5 = (int) -1;

        if i1 != $i5 goto label1;

        $r12 = "unbounded";

        goto label2;

     label1:
        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label2:
        $r8[2] = $r12;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r8[3] = $r11;

        $i7 = (int) -1;

        if i3 != $i7 goto label3;

        $r13 = "unbounded";

        goto label4;

     label3:
        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label4:
        $r8[4] = $r13;

        specialinvoke $r14.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSCompat.2", $r8);

        throw $r14;

     label5:
        $r2 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $z1 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: boolean allowNamespace(java.lang.String)>($r2);

        if $z1 != 0 goto label6;

        $r15 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r4[0] = $r5;

        $r6 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r4[1] = $r6;

        specialinvoke $r15.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSCompat.1", $r4);

        throw $r15;

     label6:
        return;
    }

    private static void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl, int, int, org.apache.xerces.impl.xs.XSWildcardDecl, int, int) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r3, $r8;
        int i0, i1, i2, i3, $i5, $i7;
        org.apache.xerces.impl.xs.XSWildcardDecl r0, r1;
        java.lang.String $r4, $r5, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        org.apache.xerces.impl.xs.XMLSchemaException $r13, $r14, $r15;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSWildcardDecl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.apache.xerces.impl.xs.XSWildcardDecl;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label5;

        $r13 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r8 = newarray (java.lang.Object)[4];

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8[0] = $r9;

        $i5 = (int) -1;

        if i1 != $i5 goto label1;

        $r11 = "unbounded";

        goto label2;

     label1:
        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label2:
        $r8[1] = $r11;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r8[2] = $r10;

        $i7 = (int) -1;

        if i3 != $i7 goto label3;

        $r12 = "unbounded";

        goto label4;

     label3:
        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label4:
        $r8[3] = $r12;

        specialinvoke $r13.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSSubset.2", $r8);

        throw $r13;

     label5:
        $z1 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: boolean isSubsetOf(org.apache.xerces.impl.xs.XSWildcardDecl)>(r1);

        if $z1 != 0 goto label6;

        $r14 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r14.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSSubset.1", null);

        throw $r14;

     label6:
        $z2 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: boolean weakerProcessContents(org.apache.xerces.impl.xs.XSWildcardDecl)>(r1);

        if $z2 == 0 goto label7;

        $r15 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: java.lang.String getProcessContentsAsString()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r1.<org.apache.xerces.impl.xs.XSWildcardDecl: java.lang.String getProcessContentsAsString()>();

        $r3[1] = $r5;

        specialinvoke $r15.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSSubset.3", $r3);

        throw $r15;

     label7:
        return;
    }

    private static void checkNSRecurseCheckCardinality(java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler, org.apache.xerces.impl.xs.XSParticleDecl, int, int, boolean) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r6;
        org.apache.xerces.impl.xs.XSParticleDecl r2, r4;
        java.util.Vector r0;
        int $i0, i1, i2, i3, i4, i5, $i7, $i9;
        java.lang.String $r7, $r8, $r11, $r12;
        boolean z0, $z1;
        org.apache.xerces.impl.xs.XMLSchemaException $r9, $r13, $r14;
        java.lang.Object $r1;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r3;

        r0 := @parameter0: java.util.Vector;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r3 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r4 := @parameter4: org.apache.xerces.impl.xs.XSParticleDecl;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        z0 := @parameter7: boolean;

        if z0 == 0 goto label05;

        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i1, i2, i3, i4);

        if $z1 != 0 goto label05;

        $r13 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r6 = newarray (java.lang.Object)[4];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r6[0] = $r7;

        $i7 = (int) -1;

        if i2 != $i7 goto label01;

        $r11 = "unbounded";

        goto label02;

     label01:
        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

     label02:
        $r6[1] = $r11;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        $r6[2] = $r8;

        $i9 = (int) -1;

        if i4 != $i9 goto label03;

        $r12 = "unbounded";

        goto label04;

     label03:
        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

     label04:
        $r6[3] = $r12;

        specialinvoke $r13.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSRecurseCheckCardinality.2", $r6);

        throw $r13;

     label05:
        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

     label06:
        i5 = 0;

        goto label08;

     label07:
        $r1 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        r2 = (org.apache.xerces.impl.xs.XSParticleDecl) $r1;

        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)>(r2, r3, r4, null, 0);

        i5 = i5 + 1;

     label08:
        if i5 < $i0 goto label07;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        $r14 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r14.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-NSRecurseCheckCardinality.1", null);

        throw $r14;

     label11:
        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label06 to label09 with label10;
    }

    private static void checkRecurse(java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler, java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XSParticleDecl r4, r18, r19;
        java.util.Vector r0, r1;
        boolean $z0, $z1, $z2;
        org.apache.xerces.impl.xs.XMLSchemaException $r14, $r20, $r21, $r22, $r23;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r5, r6;
        java.lang.Object[] $r11;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, i9, $i11, $i13;
        java.lang.String $r12, $r13, $r16, $r17;
        java.lang.Object $r2, $r3, $r8;

        r0 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r5 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r1 := @parameter4: java.util.Vector;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r6 := @parameter7: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label05;

        $r20 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r11 = newarray (java.lang.Object)[4];

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r11[0] = $r12;

        $i11 = (int) -1;

        if i1 != $i11 goto label01;

        $r16 = "unbounded";

        goto label02;

     label01:
        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label02:
        $r11[1] = $r16;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r11[2] = $r13;

        $i13 = (int) -1;

        if i3 != $i13 goto label03;

        $r17 = "unbounded";

        goto label04;

     label03:
        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label04:
        $r11[3] = $r17;

        specialinvoke $r20.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-Recurse.1", $r11);

        throw $r20;

     label05:
        $i4 = virtualinvoke r0.<java.util.Vector: int size()>();

        $i5 = virtualinvoke r1.<java.util.Vector: int size()>();

        i6 = 0;

        i7 = 0;

        goto label13;

     label06:
        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        r18 = (org.apache.xerces.impl.xs.XSParticleDecl) $r2;

        i8 = i6;

        goto label11;

     label07:
        $r3 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i8);

        r4 = (org.apache.xerces.impl.xs.XSParticleDecl) $r3;

        i6 = i6 + 1;

     label08:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r18, r5, r4, r6);

        goto label12;

     label09:
        $r14 := @caughtexception;

        $z2 = virtualinvoke r4.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z2 != 0 goto label10;

        $r21 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r21.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-Recurse.2", null);

        throw $r21;

     label10:
        i8 = i8 + 1;

     label11:
        if i8 < $i5 goto label07;

        $r22 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r22.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-Recurse.2", null);

        throw $r22;

     label12:
        i7 = i7 + 1;

     label13:
        if i7 < $i4 goto label06;

        i9 = i6;

        goto label16;

     label14:
        $r8 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i9);

        r19 = (org.apache.xerces.impl.xs.XSParticleDecl) $r8;

        $z1 = virtualinvoke r19.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z1 != 0 goto label15;

        $r23 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r23.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-Recurse.2", null);

        throw $r23;

     label15:
        i9 = i9 + 1;

     label16:
        if i9 < $i5 goto label14;

        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label08 to label09 with label09;
    }

    private static void checkRecurseUnordered(java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler, java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        org.apache.xerces.impl.xs.XSParticleDecl r5, r19, r20;
        java.util.Vector r0, r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xerces.impl.xs.XMLSchemaException $r16, $r21, $r22, $r23, $r24;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r6, r7;
        java.lang.Object[] $r13;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, $i10, $i12;
        java.lang.String $r14, $r15, $r17, $r18;
        boolean[] r2;
        java.lang.Object $r3, $r4, $r10;

        r0 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r6 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r1 := @parameter4: java.util.Vector;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r7 := @parameter7: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label05;

        $r21 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r13 = newarray (java.lang.Object)[4];

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r13[0] = $r14;

        $i10 = (int) -1;

        if i1 != $i10 goto label01;

        $r17 = "unbounded";

        goto label02;

     label01:
        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label02:
        $r13[1] = $r17;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r13[2] = $r15;

        $i12 = (int) -1;

        if i3 != $i12 goto label03;

        $r18 = "unbounded";

        goto label04;

     label03:
        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label04:
        $r13[3] = $r18;

        specialinvoke $r21.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseUnordered.1", $r13);

        throw $r21;

     label05:
        $i4 = virtualinvoke r0.<java.util.Vector: int size()>();

        $i5 = virtualinvoke r1.<java.util.Vector: int size()>();

        r2 = newarray (boolean)[$i5];

        i6 = 0;

        goto label13;

     label06:
        $r3 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        r19 = (org.apache.xerces.impl.xs.XSParticleDecl) $r3;

        i7 = 0;

        goto label11;

     label07:
        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        r5 = (org.apache.xerces.impl.xs.XSParticleDecl) $r4;

     label08:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r19, r6, r5, r7);

        $z1 = r2[i7];

        if $z1 == 0 goto label09;

        $r22 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r22.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseUnordered.2", null);

        throw $r22;

     label09:
        r2[i7] = 1;

        goto label12;

     label10:
        $r16 := @caughtexception;

        i7 = i7 + 1;

     label11:
        if i7 < $i5 goto label07;

        $r23 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r23.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseUnordered.2", null);

        throw $r23;

     label12:
        i6 = i6 + 1;

     label13:
        if i6 < $i4 goto label06;

        i8 = 0;

        goto label16;

     label14:
        $r10 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i8);

        r20 = (org.apache.xerces.impl.xs.XSParticleDecl) $r10;

        $z2 = r2[i8];

        if $z2 != 0 goto label15;

        $z3 = virtualinvoke r20.<org.apache.xerces.impl.xs.XSParticleDecl: boolean emptiable()>();

        if $z3 != 0 goto label15;

        $r24 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r24.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseUnordered.2", null);

        throw $r24;

     label15:
        i8 = i8 + 1;

     label16:
        if i8 < $i5 goto label14;

        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label08 to label10 with label10;
    }

    private static void checkRecurseLax(java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler, java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r10;
        org.apache.xerces.impl.xs.XSParticleDecl r3, r5;
        java.util.Vector r0, r1;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, $i10, $i12, $i14;
        java.lang.String $r11, $r12, $r14, $r15;
        boolean $z0, $z1;
        org.apache.xerces.impl.xs.XMLSchemaException $r13, $r16, $r17;
        java.lang.Object $r2, $r4;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r6, r7;

        r0 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r6 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r1 := @parameter4: java.util.Vector;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r7 := @parameter7: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label05;

        $r16 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r10 = newarray (java.lang.Object)[4];

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r10[0] = $r11;

        $i10 = (int) -1;

        if i1 != $i10 goto label01;

        $r14 = "unbounded";

        goto label02;

     label01:
        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label02:
        $r10[1] = $r14;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r10[2] = $r12;

        $i12 = (int) -1;

        if i3 != $i12 goto label03;

        $r15 = "unbounded";

        goto label04;

     label03:
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label04:
        $r10[3] = $r15;

        specialinvoke $r16.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseLax.1", $r10);

        throw $r16;

     label05:
        $i4 = virtualinvoke r0.<java.util.Vector: int size()>();

        $i5 = virtualinvoke r1.<java.util.Vector: int size()>();

        i6 = 0;

        i7 = 0;

        goto label12;

     label06:
        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        r3 = (org.apache.xerces.impl.xs.XSParticleDecl) $r2;

        i8 = i6;

        goto label10;

     label07:
        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i8);

        r5 = (org.apache.xerces.impl.xs.XSParticleDecl) $r4;

        i6 = i6 + 1;

     label08:
        $z1 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r3, r6, r5, r7);

        if $z1 == 0 goto label11;

        $i14 = (int) -1;

        i6 = i6 + $i14;

        goto label11;

     label09:
        $r13 := @caughtexception;

        i8 = i8 + 1;

     label10:
        if i8 < $i5 goto label07;

        $r17 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r17.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-RecurseLax.2", null);

        throw $r17;

     label11:
        i7 = i7 + 1;

     label12:
        if i7 < $i4 goto label06;

        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label08 to label09 with label09;
    }

    private static void checkMapAndSum(java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler, java.util.Vector, int, int, org.apache.xerces.impl.xs.SubstitutionGroupHandler) throws org.apache.xerces.impl.xs.XMLSchemaException
    {
        java.lang.Object[] $r10;
        org.apache.xerces.impl.xs.XSParticleDecl r3, r5;
        java.util.Vector r0, r1;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, $i9, $i11;
        java.lang.String $r11, $r12, $r14, $r15;
        boolean $z0;
        org.apache.xerces.impl.xs.XMLSchemaException $r13, $r16, $r17;
        java.lang.Object $r2, $r4;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r6, r7;

        r0 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r6 := @parameter3: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        r1 := @parameter4: java.util.Vector;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r7 := @parameter7: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean checkOccurrenceRange(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label05;

        $r16 = new org.apache.xerces.impl.xs.XMLSchemaException;

        $r10 = newarray (java.lang.Object)[4];

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r10[0] = $r11;

        $i9 = (int) -1;

        if i1 != $i9 goto label01;

        $r14 = "unbounded";

        goto label02;

     label01:
        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label02:
        $r10[1] = $r14;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r10[2] = $r12;

        $i11 = (int) -1;

        if i3 != $i11 goto label03;

        $r15 = "unbounded";

        goto label04;

     label03:
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

     label04:
        $r10[3] = $r15;

        specialinvoke $r16.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-MapAndSum.2", $r10);

        throw $r16;

     label05:
        $i4 = virtualinvoke r0.<java.util.Vector: int size()>();

        $i5 = virtualinvoke r1.<java.util.Vector: int size()>();

        i6 = 0;

        goto label12;

     label06:
        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        r3 = (org.apache.xerces.impl.xs.XSParticleDecl) $r2;

        i7 = 0;

        goto label10;

     label07:
        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        r5 = (org.apache.xerces.impl.xs.XSParticleDecl) $r4;

     label08:
        staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>(r3, r6, r5, r7);

        goto label11;

     label09:
        $r13 := @caughtexception;

        i7 = i7 + 1;

     label10:
        if i7 < $i5 goto label07;

        $r17 = new org.apache.xerces.impl.xs.XMLSchemaException;

        specialinvoke $r17.<org.apache.xerces.impl.xs.XMLSchemaException: void <init>(java.lang.String,java.lang.Object[])>("rcase-MapAndSum.1", null);

        throw $r17;

     label11:
        i6 = i6 + 1;

     label12:
        if i6 < $i4 goto label06;

        return;

        catch org.apache.xerces.impl.xs.XMLSchemaException from label08 to label09 with label09;
    }

    public static boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl, org.apache.xerces.impl.xs.XSElementDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler)
    {
        org.apache.xerces.impl.xs.XSElementDecl[] $r5, $r12;
        int $i0, $i1, i2, i3, $i5, $i7;
        java.lang.String $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r15, $r17, $r18, $r19, $r20;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r4;
        org.apache.xerces.impl.xs.XSElementDecl r0, r1, $r6, $r9, $r13, $r16;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSElementDecl;

        r1 := @parameter1: org.apache.xerces.impl.xs.XSElementDecl;

        r4 := @parameter2: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $r3 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r2 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        if $r3 != $r2 goto label1;

        $r20 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r19 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        if $r20 != $r19 goto label1;

        return 1;

     label1:
        $r5 = virtualinvoke r4.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r0);

        $i0 = lengthof $r5;

        i2 = $i0 - 1;

        goto label4;

     label2:
        $r6 = $r5[i2];

        $r8 = $r6.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r7 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        if $r8 != $r7 goto label3;

        $r9 = $r5[i2];

        $r11 = $r9.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r10 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        if $r11 != $r10 goto label3;

        return 1;

     label3:
        $i5 = (int) -1;

        i2 = i2 + $i5;

     label4:
        if i2 >= 0 goto label2;

        $r12 = virtualinvoke r4.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r1);

        $i1 = lengthof $r12;

        i3 = $i1 - 1;

        goto label7;

     label5:
        $r13 = $r12[i3];

        $r15 = $r13.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        $r14 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fName>;

        if $r15 != $r14 goto label6;

        $r16 = $r12[i3];

        $r18 = $r16.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $r17 = r0.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        if $r18 != $r17 goto label6;

        return 1;

     label6:
        $i7 = (int) -1;

        i3 = i3 + $i7;

     label7:
        if i3 >= 0 goto label5;

        return 0;
    }

    public static boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl, org.apache.xerces.impl.xs.XSWildcardDecl, org.apache.xerces.impl.xs.SubstitutionGroupHandler)
    {
        org.apache.xerces.impl.xs.XSElementDecl[] $r4;
        int $i0, i1, $i3;
        org.apache.xerces.impl.xs.XSWildcardDecl r0;
        java.lang.String $r2, $r6;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r3;
        org.apache.xerces.impl.xs.XSElementDecl r1, $r5;
        boolean $z0, $z1;

        r1 := @parameter0: org.apache.xerces.impl.xs.XSElementDecl;

        r0 := @parameter1: org.apache.xerces.impl.xs.XSWildcardDecl;

        r3 := @parameter2: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $r2 = r1.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: boolean allowNamespace(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = virtualinvoke r3.<org.apache.xerces.impl.xs.SubstitutionGroupHandler: org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)>(r1);

        $i0 = lengthof $r4;

        i1 = $i0 - 1;

        goto label4;

     label2:
        $r5 = $r4[i1];

        $r6 = $r5.<org.apache.xerces.impl.xs.XSElementDecl: java.lang.String fTargetNamespace>;

        $z1 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: boolean allowNamespace(java.lang.String)>($r6);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label4:
        if i1 >= 0 goto label2;

        return 0;
    }

    public static boolean overlapUPA(org.apache.xerces.impl.xs.XSWildcardDecl, org.apache.xerces.impl.xs.XSWildcardDecl)
    {
        java.lang.String[] $r3;
        short $s0, $s1;
        int $i2, $i3;
        org.apache.xerces.impl.xs.XSWildcardDecl r0, r1, $r2;

        r0 := @parameter0: org.apache.xerces.impl.xs.XSWildcardDecl;

        r1 := @parameter1: org.apache.xerces.impl.xs.XSWildcardDecl;

        $s0 = r0.<org.apache.xerces.impl.xs.XSWildcardDecl: short fProcessContents>;

        $r2 = virtualinvoke r0.<org.apache.xerces.impl.xs.XSWildcardDecl: org.apache.xerces.impl.xs.XSWildcardDecl performIntersectionWith(org.apache.xerces.impl.xs.XSWildcardDecl,short)>(r1, $s0);

        if $r2 == null goto label1;

        $s1 = $r2.<org.apache.xerces.impl.xs.XSWildcardDecl: short fType>;

        $i3 = (int) $s1;

        if $i3 != 3 goto label1;

        $r3 = $r2.<org.apache.xerces.impl.xs.XSWildcardDecl: java.lang.String[] fNamespaceList>;

        $i2 = lengthof $r3;

        if $i2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean overlapUPA(java.lang.Object, java.lang.Object, org.apache.xerces.impl.xs.SubstitutionGroupHandler)
    {
        org.apache.xerces.impl.xs.XSWildcardDecl $r2, $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object r0, r1;
        org.apache.xerces.impl.xs.SubstitutionGroupHandler r4;
        org.apache.xerces.impl.xs.XSElementDecl $r6, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.apache.xerces.impl.xs.SubstitutionGroupHandler;

        $z0 = r0 instanceof org.apache.xerces.impl.xs.XSElementDecl;

        if $z0 == 0 goto label2;

        $z4 = r1 instanceof org.apache.xerces.impl.xs.XSElementDecl;

        if $z4 == 0 goto label1;

        $r10 = (org.apache.xerces.impl.xs.XSElementDecl) r0;

        $r9 = (org.apache.xerces.impl.xs.XSElementDecl) r1;

        $z6 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r10, $r9, r4);

        return $z6;

     label1:
        $r8 = (org.apache.xerces.impl.xs.XSElementDecl) r0;

        $r7 = (org.apache.xerces.impl.xs.XSWildcardDecl) r1;

        $z5 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r8, $r7, r4);

        return $z5;

     label2:
        $z1 = r1 instanceof org.apache.xerces.impl.xs.XSElementDecl;

        if $z1 == 0 goto label3;

        $r6 = (org.apache.xerces.impl.xs.XSElementDecl) r1;

        $r5 = (org.apache.xerces.impl.xs.XSWildcardDecl) r0;

        $z3 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)>($r6, $r5, r4);

        return $z3;

     label3:
        $r3 = (org.apache.xerces.impl.xs.XSWildcardDecl) r0;

        $r2 = (org.apache.xerces.impl.xs.XSWildcardDecl) r1;

        $z2 = staticinvoke <org.apache.xerces.impl.xs.XSConstraints: boolean overlapUPA(org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.XSWildcardDecl)>($r3, $r2);

        return $z2;
    }

    static void <clinit>()
    {
        org.apache.xerces.xs.XSTypeDefinition $r1;
        org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar $r0;
        org.apache.xerces.impl.dv.XSSimpleType $r2;
        org.apache.xerces.impl.xs.XSConstraints$1 $r3;

        <org.apache.xerces.impl.xs.XSConstraints: int OCCURRENCE_UNKNOWN> = -2;

        $r0 = <org.apache.xerces.impl.xs.SchemaGrammar: org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar SG_SchemaNS>;

        $r1 = virtualinvoke $r0.<org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar: org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)>("string");

        $r2 = (org.apache.xerces.impl.dv.XSSimpleType) $r1;

        <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.dv.XSSimpleType STRING_TYPE> = $r2;

        <org.apache.xerces.impl.xs.XSConstraints: org.apache.xerces.impl.xs.XSParticleDecl fEmptyParticle> = null;

        $r3 = new org.apache.xerces.impl.xs.XSConstraints$1;

        specialinvoke $r3.<org.apache.xerces.impl.xs.XSConstraints$1: void <init>()>();

        <org.apache.xerces.impl.xs.XSConstraints: java.util.Comparator ELEMENT_PARTICLE_COMPARATOR> = $r3;

        return;
    }
}
