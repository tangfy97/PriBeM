public class org.apache.batik.bridge.SVGEllipseElementBridge extends org.apache.batik.bridge.SVGShapeElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGEllipseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGShapeElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGEllipseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        return "ellipse";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGEllipseElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        $r0 = new org.apache.batik.bridge.SVGEllipseElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.SVGEllipseElementBridge: void <init>()>();

        return $r0;
    }

    protected void buildShape(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.ShapeNode)
    {
        org.apache.batik.dom.svg.LiveAttributeException $r11;
        org.apache.batik.bridge.SVGEllipseElementBridge r14;
        org.apache.batik.dom.svg.SVGOMEllipseElement r15;
        org.w3c.dom.svg.SVGAnimatedLength $r1, $r3, $r5, $r7;
        org.apache.batik.bridge.BridgeException $r12;
        org.apache.batik.bridge.BridgeContext r13;
        org.apache.batik.gvt.ShapeNode r9;
        org.w3c.dom.Element r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.awt.geom.Ellipse2D$Float $r10;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r2, r4, r6, r8;

        r14 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        r13 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r9 := @parameter2: org.apache.batik.gvt.ShapeNode;

     label1:
        r15 = (org.apache.batik.dom.svg.SVGOMEllipseElement) r0;

        $r1 = virtualinvoke r15.<org.apache.batik.dom.svg.SVGOMEllipseElement: org.w3c.dom.svg.SVGAnimatedLength getCx()>();

        r2 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r1;

        $f0 = virtualinvoke r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $r3 = virtualinvoke r15.<org.apache.batik.dom.svg.SVGOMEllipseElement: org.w3c.dom.svg.SVGAnimatedLength getCy()>();

        r4 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r3;

        $f1 = virtualinvoke r4.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $r5 = virtualinvoke r15.<org.apache.batik.dom.svg.SVGOMEllipseElement: org.w3c.dom.svg.SVGAnimatedLength getRx()>();

        r6 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r5;

        $f2 = virtualinvoke r6.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $r7 = virtualinvoke r15.<org.apache.batik.dom.svg.SVGOMEllipseElement: org.w3c.dom.svg.SVGAnimatedLength getRy()>();

        r8 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r7;

        $f3 = virtualinvoke r8.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $r10 = new java.awt.geom.Ellipse2D$Float;

        $f7 = $f0 - $f2;

        $f6 = $f1 - $f3;

        $f5 = $f2 * 2.0F;

        $f4 = $f3 * 2.0F;

        specialinvoke $r10.<java.awt.geom.Ellipse2D$Float: void <init>(float,float,float,float)>($f7, $f6, $f5, $f4);

        virtualinvoke r9.<org.apache.batik.gvt.ShapeNode: void setShape(java.awt.Shape)>($r10);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.apache.batik.bridge.BridgeException;

        specialinvoke $r12.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.svg.LiveAttributeException)>(r13, $r11);

        throw $r12;

     label4:
        return;

        catch org.apache.batik.dom.svg.LiveAttributeException from label1 to label2 with label3;
    }

    public void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)
    {
        org.apache.batik.dom.svg.AnimatedLiveAttributeValue r0;
        org.apache.batik.gvt.GraphicsNode $r6;
        org.apache.batik.bridge.SVGEllipseElementBridge r2;
        org.apache.batik.bridge.BridgeContext $r4;
        org.apache.batik.gvt.ShapeNode $r7;
        org.w3c.dom.Element $r5;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        r0 := @parameter0: org.apache.batik.dom.svg.AnimatedLiveAttributeValue;

        $r1 = interfaceinvoke r0.<org.apache.batik.dom.svg.AnimatedLiveAttributeValue: java.lang.String getNamespaceURI()>();

        if $r1 != null goto label2;

        $r3 = interfaceinvoke r0.<org.apache.batik.dom.svg.AnimatedLiveAttributeValue: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("cx");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("cy");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("rx");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ry");

        if $z3 == 0 goto label2;

     label1:
        $r4 = r2.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = r2.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r6 = r2.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r7 = (org.apache.batik.gvt.ShapeNode) $r6;

        virtualinvoke r2.<org.apache.batik.bridge.SVGEllipseElementBridge: void buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>($r4, $r5, $r7);

        virtualinvoke r2.<org.apache.batik.bridge.SVGShapeElementBridge: void handleGeometryChanged()>();

        return;

     label2:
        specialinvoke r2.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)>(r0);

        return;
    }

    protected org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.ShapeNode)
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.ShapePainter $r6;
        java.awt.geom.Rectangle2D $r2;
        org.apache.batik.bridge.SVGEllipseElementBridge r3;
        org.apache.batik.bridge.BridgeContext r4;
        org.apache.batik.gvt.ShapeNode r0;
        org.w3c.dom.Element r5;
        byte $b0, $b1;
        double $d0, $d1;

        r3 := @this: org.apache.batik.bridge.SVGEllipseElementBridge;

        r4 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r5 := @parameter1: org.w3c.dom.Element;

        r0 := @parameter2: org.apache.batik.gvt.ShapeNode;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape getShape()>();

        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d1 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getHeight()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r6 = specialinvoke r3.<org.apache.batik.bridge.SVGShapeElementBridge: org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>(r4, r5, r0);

        return $r6;
    }
}
