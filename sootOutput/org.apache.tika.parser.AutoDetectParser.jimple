public class org.apache.tika.parser.AutoDetectParser extends org.apache.tika.parser.CompositeParser
{
    private static final long serialVersionUID;
    private org.apache.tika.detect.Detector detector;

    public void <init>()
    {
        org.apache.tika.config.TikaConfig $r1;
        org.apache.tika.parser.AutoDetectParser r0;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        $r1 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        specialinvoke r0.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.config.TikaConfig)>($r1);

        return;
    }

    public void <init>(org.apache.tika.detect.Detector)
    {
        org.apache.tika.config.TikaConfig $r1;
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.Detector r2;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        r2 := @parameter0: org.apache.tika.detect.Detector;

        $r1 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        specialinvoke r0.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.config.TikaConfig)>($r1);

        virtualinvoke r0.<org.apache.tika.parser.AutoDetectParser: void setDetector(org.apache.tika.detect.Detector)>(r2);

        return;
    }

    public transient void <init>(org.apache.tika.parser.Parser[])
    {
        org.apache.tika.parser.Parser[] r2;
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.DefaultDetector $r1;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        r2 := @parameter0: org.apache.tika.parser.Parser[];

        $r1 = new org.apache.tika.detect.DefaultDetector;

        specialinvoke $r1.<org.apache.tika.detect.DefaultDetector: void <init>()>();

        specialinvoke r0.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.detect.Detector,org.apache.tika.parser.Parser[])>($r1, r2);

        return;
    }

    public transient void <init>(org.apache.tika.detect.Detector, org.apache.tika.parser.Parser[])
    {
        org.apache.tika.parser.Parser[] r2;
        org.apache.tika.mime.MediaTypeRegistry $r1;
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.Detector r3;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        r3 := @parameter0: org.apache.tika.detect.Detector;

        r2 := @parameter1: org.apache.tika.parser.Parser[];

        $r1 = staticinvoke <org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaTypeRegistry getDefaultRegistry()>();

        specialinvoke r0.<org.apache.tika.parser.CompositeParser: void <init>(org.apache.tika.mime.MediaTypeRegistry,org.apache.tika.parser.Parser[])>($r1, r2);

        virtualinvoke r0.<org.apache.tika.parser.AutoDetectParser: void setDetector(org.apache.tika.detect.Detector)>(r3);

        return;
    }

    public void <init>(org.apache.tika.config.TikaConfig)
    {
        org.apache.tika.parser.Parser[] $r3;
        org.apache.tika.parser.Parser $r4;
        org.apache.tika.mime.MediaTypeRegistry $r2;
        org.apache.tika.config.TikaConfig r1;
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.Detector $r5;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        r1 := @parameter0: org.apache.tika.config.TikaConfig;

        $r2 = virtualinvoke r1.<org.apache.tika.config.TikaConfig: org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry()>();

        $r3 = newarray (org.apache.tika.parser.Parser)[1];

        $r4 = virtualinvoke r1.<org.apache.tika.config.TikaConfig: org.apache.tika.parser.Parser getParser()>();

        $r3[0] = $r4;

        specialinvoke r0.<org.apache.tika.parser.CompositeParser: void <init>(org.apache.tika.mime.MediaTypeRegistry,org.apache.tika.parser.Parser[])>($r2, $r3);

        $r5 = virtualinvoke r1.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        virtualinvoke r0.<org.apache.tika.parser.AutoDetectParser: void setDetector(org.apache.tika.detect.Detector)>($r5);

        return;
    }

    public org.apache.tika.detect.Detector getDetector()
    {
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.Detector $r1;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        $r1 = r0.<org.apache.tika.parser.AutoDetectParser: org.apache.tika.detect.Detector detector>;

        return $r1;
    }

    public void setDetector(org.apache.tika.detect.Detector)
    {
        org.apache.tika.parser.AutoDetectParser r0;
        org.apache.tika.detect.Detector r1;

        r0 := @this: org.apache.tika.parser.AutoDetectParser;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        r0.<org.apache.tika.parser.AutoDetectParser: org.apache.tika.detect.Detector detector> = r1;

        return;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r11;
        org.apache.tika.io.TemporaryResources $r0;
        org.apache.tika.parser.AutoDetectParser r3;
        org.apache.tika.detect.Detector $r5;
        org.apache.tika.mime.MediaType $r6;
        org.apache.tika.metadata.Metadata r4;
        org.apache.tika.sax.SecureContentHandler r9, $r13;
        org.apache.tika.parser.ParseContext r10;
        org.xml.sax.SAXException $r12;
        org.apache.tika.io.TikaInputStream $r2;
        java.lang.String $r7;
        org.xml.sax.ContentHandler r8;
        java.io.InputStream r1;

        r3 := @this: org.apache.tika.parser.AutoDetectParser;

        r1 := @parameter0: java.io.InputStream;

        r8 := @parameter1: org.xml.sax.ContentHandler;

        r4 := @parameter2: org.apache.tika.metadata.Metadata;

        r10 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r0.<org.apache.tika.io.TemporaryResources: void <init>()>();

     label01:
        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r1, $r0);

        $r5 = r3.<org.apache.tika.parser.AutoDetectParser: org.apache.tika.detect.Detector detector>;

        $r6 = interfaceinvoke $r5.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r2, r4);

        $r7 = virtualinvoke $r6.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r7);

        if r8 == null goto label02;

        $r13 = new org.apache.tika.sax.SecureContentHandler;

        specialinvoke $r13.<org.apache.tika.sax.SecureContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.io.TikaInputStream)>(r8, $r2);

        goto label03;

     label02:
        $r13 = null;

     label03:
        r9 = $r13;

     label04:
        specialinvoke r3.<org.apache.tika.parser.CompositeParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r2, $r13, r4, r10);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        virtualinvoke r9.<org.apache.tika.sax.SecureContentHandler: void throwIfCauseOf(org.xml.sax.SAXException)>($r12);

        throw $r12;

     label07:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r11;

     label10:
        return;

        catch org.xml.sax.SAXException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata r4;
        org.apache.tika.parser.ParseContext $r0;
        org.xml.sax.ContentHandler r3;
        org.apache.tika.parser.AutoDetectParser r1;
        java.io.InputStream r2;

        r1 := @this: org.apache.tika.parser.AutoDetectParser;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.xml.sax.ContentHandler;

        r4 := @parameter2: org.apache.tika.metadata.Metadata;

        $r0 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r0.<org.apache.tika.parser.ParseContext: void <init>()>();

        virtualinvoke $r0.<org.apache.tika.parser.ParseContext: void set(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", r1);

        virtualinvoke r1.<org.apache.tika.parser.AutoDetectParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r2, r3, r4, $r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.AutoDetectParser: long serialVersionUID> = 6110455808615143122L;

        return;
    }
}
