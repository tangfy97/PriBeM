public final class org.wiztools.commons.CollectionsUtil extends java.lang.Object
{
    public static final org.wiztools.commons.MultiValueMap EMPTY_MULTI_VALUE_MAP;

    public void <init>()
    {
        org.wiztools.commons.CollectionsUtil r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final org.wiztools.commons.MultiValueMap unmodifiableMultiValueMap(org.wiztools.commons.MultiValueMap)
    {
        org.wiztools.commons.CollectionsUtil$2 $r1;
        org.wiztools.commons.MultiValueMap r0;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: org.wiztools.commons.MultiValueMap;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r1 = new org.wiztools.commons.CollectionsUtil$2;

        specialinvoke $r1.<org.wiztools.commons.CollectionsUtil$2: void <init>(org.wiztools.commons.MultiValueMap)>(r0);

        return $r1;
    }

    public static transient java.util.List asList(java.lang.Object[])
    {
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object r2;
        java.util.ArrayList $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    static void <clinit>()
    {
        org.wiztools.commons.CollectionsUtil$1 $r0;

        $r0 = new org.wiztools.commons.CollectionsUtil$1;

        specialinvoke $r0.<org.wiztools.commons.CollectionsUtil$1: void <init>()>();

        <org.wiztools.commons.CollectionsUtil: org.wiztools.commons.MultiValueMap EMPTY_MULTI_VALUE_MAP> = $r0;

        return;
    }
}
