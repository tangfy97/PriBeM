class org.mozilla.javascript.TokenStream extends java.lang.Object
{
    private static final int EOF_CHAR;
    private boolean dirtyLine;
    java.lang.String regExpFlags;
    private java.lang.String string;
    private double number;
    private char[] stringBuffer;
    private int stringBufferTop;
    private org.mozilla.javascript.ObjToIntMap allStrings;
    private final int[] ungetBuffer;
    private int ungetCursor;
    private boolean hitEOF;
    private int lineStart;
    private int lineno;
    private int lineEndChar;
    private java.lang.String sourceString;
    private java.io.Reader sourceReader;
    private char[] sourceBuffer;
    private int sourceEnd;
    private int sourceCursor;
    private boolean xmlIsAttribute;
    private boolean xmlIsTagContent;
    private int xmlOpenTagsCount;
    private org.mozilla.javascript.Parser parser;

    void <init>(org.mozilla.javascript.Parser, java.io.Reader, java.lang.String, int)
    {
        org.mozilla.javascript.TokenStream r0;
        java.io.Reader r5;
        int[] $r3;
        int i0, $i1, $i3;
        char[] $r1, $r7;
        java.lang.String r6;
        org.mozilla.javascript.ObjToIntMap $r8;
        org.mozilla.javascript.Parser r4;

        r0 := @this: org.mozilla.javascript.TokenStream;

        r4 := @parameter0: org.mozilla.javascript.Parser;

        r5 := @parameter1: java.io.Reader;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = "";

        $r1 = newarray (char)[128];

        r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer> = $r1;

        $r8 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r8.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>(50);

        r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.ObjToIntMap allStrings> = $r8;

        $r3 = newarray (int)[3];

        r0.<org.mozilla.javascript.TokenStream: int[] ungetBuffer> = $r3;

        r0.<org.mozilla.javascript.TokenStream: boolean hitEOF> = 0;

        r0.<org.mozilla.javascript.TokenStream: int lineStart> = 0;

        $i3 = (int) -1;

        r0.<org.mozilla.javascript.TokenStream: int lineEndChar> = $i3;

        r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser> = r4;

        r0.<org.mozilla.javascript.TokenStream: int lineno> = i0;

        if r5 == null goto label2;

        if r6 == null goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        r0.<org.mozilla.javascript.TokenStream: java.io.Reader sourceReader> = r5;

        $r7 = newarray (char)[512];

        r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer> = $r7;

        r0.<org.mozilla.javascript.TokenStream: int sourceEnd> = 0;

        goto label4;

     label2:
        if r6 != null goto label3;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label3:
        r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString> = r6;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        r0.<org.mozilla.javascript.TokenStream: int sourceEnd> = $i1;

     label4:
        r0.<org.mozilla.javascript.TokenStream: int sourceCursor> = 0;

        return;
    }

    java.lang.String tokenToString(int)
    {
        int i0;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i0 := @parameter0: int;

        return "";
    }

    static boolean isKeyword(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.mozilla.javascript.TokenStream: int stringToKeyword(java.lang.String)>(r0);

        if 0 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int stringToKeyword(java.lang.String)
    {
        byte b42, b43, b44;
        short $s1;
        java.lang.String r0, r1, r2, r3, r4;
        boolean $z0;
        int $i0, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95;
        char $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c36, $c37, $c38, $c39, $c40, $c41;

        r0 := @parameter0: java.lang.String;

        b42 = 0;

        b44 = 0;

        b43 = 0;

        r1 = null;

        r4 = null;

        r3 = null;

        r2 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 2: goto label01;
            case 3: goto label04;
            case 4: goto label11;
            case 5: goto label25;
            case 6: goto label38;
            case 7: goto label51;
            case 8: goto label59;
            case 9: goto label66;
            case 10: goto label69;
            case 11: goto label72;
            case 12: goto label71;
            default: goto label72;
        };

     label01:
        $c38 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i45 = (int) $c38;

        if $i45 != 102 goto label02;

        $c41 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i46 = (int) $c41;

        if $i46 != 105 goto label72;

        b42 = 108;

        b44 = 108;

        b43 = 108;

        goto label73;

     label02:
        $i47 = (int) $c38;

        if $i47 != 110 goto label03;

        $c40 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i48 = (int) $c40;

        if $i48 != 105 goto label72;

        b42 = 51;

        b44 = 51;

        b43 = 51;

        goto label73;

     label03:
        $i49 = (int) $c38;

        if $i49 != 111 goto label72;

        $c39 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i50 = (int) $c39;

        if $i50 != 100 goto label72;

        b42 = 114;

        b44 = 114;

        b43 = 114;

        goto label73;

     label04:
        $c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i51 = (int) $c27;

        lookupswitch($i51)
        {
            case 102: goto label05;
            case 105: goto label06;
            case 110: goto label07;
            case 116: goto label08;
            case 118: goto label09;
            default: goto label10;
        };

     label05:
        $c36 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i52 = (int) $c36;

        if $i52 != 114 goto label72;

        $c37 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i53 = (int) $c37;

        if $i53 != 111 goto label72;

        b42 = 115;

        b44 = 115;

        b43 = 115;

        goto label73;

     label06:
        $c34 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i54 = (int) $c34;

        if $i54 != 116 goto label72;

        $c35 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i55 = (int) $c35;

        if $i55 != 110 goto label72;

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label73;

     label07:
        $c32 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i56 = (int) $c32;

        if $i56 != 119 goto label72;

        $c33 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i57 = (int) $c33;

        if $i57 != 101 goto label72;

        b42 = 30;

        b44 = 30;

        b43 = 30;

        goto label73;

     label08:
        $c30 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i58 = (int) $c30;

        if $i58 != 121 goto label72;

        $c31 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i59 = (int) $c31;

        if $i59 != 114 goto label72;

        b42 = 77;

        b44 = 77;

        b43 = 77;

        goto label73;

     label09:
        $c28 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i60 = (int) $c28;

        if $i60 != 114 goto label72;

        $c29 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i61 = (int) $c29;

        if $i61 != 97 goto label72;

        b42 = 118;

        b44 = 118;

        b43 = 118;

        goto label73;

     label10:
        goto label72;

     label11:
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i62 = (int) $c11;

        tableswitch($i62)
        {
            case 98: goto label12;
            case 99: goto label13;
            case 100: goto label24;
            case 101: goto label15;
            case 102: goto label24;
            case 103: goto label17;
            case 104: goto label24;
            case 105: goto label24;
            case 106: goto label24;
            case 107: goto label24;
            case 108: goto label18;
            case 109: goto label24;
            case 110: goto label19;
            case 111: goto label24;
            case 112: goto label24;
            case 113: goto label24;
            case 114: goto label24;
            case 115: goto label24;
            case 116: goto label20;
            case 117: goto label24;
            case 118: goto label22;
            case 119: goto label23;
            default: goto label24;
        };

     label12:
        r1 = "byte";

        r4 = "byte";

        r3 = "byte";

        r2 = "byte";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label13:
        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i63 = (int) $c22;

        if $i63 != 101 goto label14;

        $c25 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i64 = (int) $c25;

        if $i64 != 115 goto label72;

        $c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i65 = (int) $c26;

        if $i65 != 97 goto label72;

        b42 = 111;

        b44 = 111;

        b43 = 111;

        goto label73;

     label14:
        $i66 = (int) $c22;

        if $i66 != 114 goto label72;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i67 = (int) $c23;

        if $i67 != 97 goto label72;

        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i68 = (int) $c24;

        if $i68 != 104 goto label72;

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label73;

     label15:
        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i69 = (int) $c17;

        if $i69 != 101 goto label16;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i70 = (int) $c20;

        if $i70 != 115 goto label72;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i71 = (int) $c21;

        if $i71 != 108 goto label72;

        b42 = 109;

        b44 = 109;

        b43 = 109;

        goto label73;

     label16:
        $i72 = (int) $c17;

        if $i72 != 109 goto label72;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i73 = (int) $c18;

        if $i73 != 117 goto label72;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i74 = (int) $c19;

        if $i74 != 110 goto label72;

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label73;

     label17:
        r1 = "goto";

        r4 = "goto";

        r3 = "goto";

        r2 = "goto";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label18:
        r1 = "long";

        r4 = "long";

        r3 = "long";

        r2 = "long";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label19:
        r1 = "null";

        r4 = "null";

        r3 = "null";

        r2 = "null";

        b42 = 41;

        b44 = 41;

        b43 = 41;

        goto label72;

     label20:
        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i75 = (int) $c12;

        if $i75 != 101 goto label21;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i76 = (int) $c15;

        if $i76 != 117 goto label72;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i77 = (int) $c16;

        if $i77 != 114 goto label72;

        b42 = 44;

        b44 = 44;

        b43 = 44;

        goto label73;

     label21:
        $i78 = (int) $c12;

        if $i78 != 115 goto label72;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i79 = (int) $c13;

        if $i79 != 105 goto label72;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i80 = (int) $c14;

        if $i80 != 104 goto label72;

        b42 = 42;

        b44 = 42;

        b43 = 42;

        goto label73;

     label22:
        r1 = "void";

        r4 = "void";

        r3 = "void";

        r2 = "void";

        b42 = 122;

        b44 = 122;

        b43 = 122;

        goto label72;

     label23:
        r1 = "with";

        r4 = "with";

        r3 = "with";

        r2 = "with";

        b42 = 119;

        b44 = 119;

        b43 = 119;

        goto label72;

     label24:
        goto label72;

     label25:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i81 = (int) $c8;

        tableswitch($i81)
        {
            case 97: goto label26;
            case 98: goto label37;
            case 99: goto label37;
            case 100: goto label37;
            case 101: goto label27;
            case 102: goto label37;
            case 103: goto label37;
            case 104: goto label37;
            case 105: goto label28;
            case 106: goto label37;
            case 107: goto label37;
            case 108: goto label29;
            case 109: goto label37;
            case 110: goto label30;
            case 111: goto label32;
            case 112: goto label34;
            case 113: goto label37;
            case 114: goto label35;
            case 115: goto label37;
            case 116: goto label36;
            default: goto label37;
        };

     label26:
        r1 = "class";

        r4 = "class";

        r3 = "class";

        r2 = "class";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label27:
        r1 = "break";

        r4 = "break";

        r3 = "break";

        r2 = "break";

        b42 = 116;

        b44 = 116;

        b43 = 116;

        goto label72;

     label28:
        r1 = "while";

        r4 = "while";

        r3 = "while";

        r2 = "while";

        b42 = 113;

        b44 = 113;

        b43 = 113;

        goto label72;

     label29:
        r1 = "false";

        r4 = "false";

        r3 = "false";

        r2 = "false";

        b42 = 43;

        b44 = 43;

        b43 = 43;

        goto label72;

     label30:
        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i82 = (int) $c10;

        if $i82 != 99 goto label31;

        r1 = "const";

        r4 = "const";

        r3 = "const";

        r2 = "const";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label31:
        $i83 = (int) $c10;

        if $i83 != 102 goto label72;

        r1 = "final";

        r4 = "final";

        r3 = "final";

        r2 = "final";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label32:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i84 = (int) $c9;

        if $i84 != 102 goto label33;

        r1 = "float";

        r4 = "float";

        r3 = "float";

        r2 = "float";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label33:
        $i85 = (int) $c9;

        if $i85 != 115 goto label72;

        r1 = "short";

        r4 = "short";

        r3 = "short";

        r2 = "short";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label34:
        r1 = "super";

        r4 = "super";

        r3 = "super";

        r2 = "super";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label35:
        r1 = "throw";

        r4 = "throw";

        r3 = "throw";

        r2 = "throw";

        b42 = 49;

        b44 = 49;

        b43 = 49;

        goto label72;

     label36:
        r1 = "catch";

        r4 = "catch";

        r3 = "catch";

        r2 = "catch";

        b42 = 120;

        b44 = 120;

        b43 = 120;

        goto label72;

     label37:
        goto label72;

     label38:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i86 = (int) $c6;

        tableswitch($i86)
        {
            case 97: goto label39;
            case 98: goto label50;
            case 99: goto label50;
            case 100: goto label50;
            case 101: goto label40;
            case 102: goto label50;
            case 103: goto label50;
            case 104: goto label42;
            case 105: goto label50;
            case 106: goto label50;
            case 107: goto label50;
            case 108: goto label50;
            case 109: goto label43;
            case 110: goto label50;
            case 111: goto label44;
            case 112: goto label50;
            case 113: goto label50;
            case 114: goto label50;
            case 115: goto label50;
            case 116: goto label45;
            case 117: goto label46;
            case 118: goto label50;
            case 119: goto label47;
            case 120: goto label48;
            case 121: goto label49;
            default: goto label50;
        };

     label39:
        r1 = "native";

        r4 = "native";

        r3 = "native";

        r2 = "native";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label40:
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i87 = (int) $c7;

        if $i87 != 100 goto label41;

        r1 = "delete";

        r4 = "delete";

        r3 = "delete";

        r2 = "delete";

        b42 = 31;

        b44 = 31;

        b43 = 31;

        goto label72;

     label41:
        $i88 = (int) $c7;

        if $i88 != 114 goto label72;

        r1 = "return";

        r4 = "return";

        r3 = "return";

        r2 = "return";

        b42 = 4;

        b44 = 4;

        b43 = 4;

        goto label72;

     label42:
        r1 = "throws";

        r4 = "throws";

        r3 = "throws";

        r2 = "throws";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label43:
        r1 = "import";

        r4 = "import";

        r3 = "import";

        r2 = "import";

        b42 = 107;

        b44 = 107;

        b43 = 107;

        goto label72;

     label44:
        r1 = "double";

        r4 = "double";

        r3 = "double";

        r2 = "double";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label45:
        r1 = "static";

        r4 = "static";

        r3 = "static";

        r2 = "static";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label46:
        r1 = "public";

        r4 = "public";

        r3 = "public";

        r2 = "public";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label47:
        r1 = "switch";

        r4 = "switch";

        r3 = "switch";

        r2 = "switch";

        b42 = 110;

        b44 = 110;

        b43 = 110;

        goto label72;

     label48:
        r1 = "export";

        r4 = "export";

        r3 = "export";

        r2 = "export";

        b42 = 106;

        b44 = 106;

        b43 = 106;

        goto label72;

     label49:
        r1 = "typeof";

        r4 = "typeof";

        r3 = "typeof";

        r2 = "typeof";

        b42 = 32;

        b44 = 32;

        b43 = 32;

        goto label72;

     label50:
        goto label72;

     label51:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i89 = (int) $c5;

        lookupswitch($i89)
        {
            case 97: goto label52;
            case 101: goto label53;
            case 105: goto label54;
            case 111: goto label55;
            case 114: goto label56;
            case 120: goto label57;
            default: goto label58;
        };

     label52:
        r1 = "package";

        r4 = "package";

        r3 = "package";

        r2 = "package";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label53:
        r1 = "default";

        r4 = "default";

        r3 = "default";

        r2 = "default";

        b42 = 112;

        b44 = 112;

        b43 = 112;

        goto label72;

     label54:
        r1 = "finally";

        r4 = "finally";

        r3 = "finally";

        r2 = "finally";

        b42 = 121;

        b44 = 121;

        b43 = 121;

        goto label72;

     label55:
        r1 = "boolean";

        r4 = "boolean";

        r3 = "boolean";

        r2 = "boolean";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label56:
        r1 = "private";

        r4 = "private";

        r3 = "private";

        r2 = "private";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label57:
        r1 = "extends";

        r4 = "extends";

        r3 = "extends";

        r2 = "extends";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label58:
        goto label72;

     label59:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i90 = (int) $c4;

        lookupswitch($i90)
        {
            case 97: goto label60;
            case 99: goto label61;
            case 100: goto label62;
            case 102: goto label63;
            case 118: goto label64;
            default: goto label65;
        };

     label60:
        r1 = "abstract";

        r4 = "abstract";

        r3 = "abstract";

        r2 = "abstract";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label61:
        r1 = "continue";

        r4 = "continue";

        r3 = "continue";

        r2 = "continue";

        b42 = 117;

        b44 = 117;

        b43 = 117;

        goto label72;

     label62:
        r1 = "debugger";

        r4 = "debugger";

        r3 = "debugger";

        r2 = "debugger";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label63:
        r1 = "function";

        r4 = "function";

        r3 = "function";

        r2 = "function";

        b42 = 105;

        b44 = 105;

        b43 = 105;

        goto label72;

     label64:
        r1 = "volatile";

        r4 = "volatile";

        r3 = "volatile";

        r2 = "volatile";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label65:
        goto label72;

     label66:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i91 = (int) $c3;

        if $i91 != 105 goto label67;

        r1 = "interface";

        r4 = "interface";

        r3 = "interface";

        r2 = "interface";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label67:
        $i92 = (int) $c3;

        if $i92 != 112 goto label68;

        r1 = "protected";

        r4 = "protected";

        r3 = "protected";

        r2 = "protected";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label68:
        $i93 = (int) $c3;

        if $i93 != 116 goto label72;

        r1 = "transient";

        r4 = "transient";

        r3 = "transient";

        r2 = "transient";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label69:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i94 = (int) $c2;

        if $i94 != 109 goto label70;

        r1 = "implements";

        r4 = "implements";

        r3 = "implements";

        r2 = "implements";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label70:
        $i95 = (int) $c2;

        if $i95 != 110 goto label72;

        r1 = "instanceof";

        r4 = "instanceof";

        r3 = "instanceof";

        r2 = "instanceof";

        b42 = 52;

        b44 = 52;

        b43 = 52;

        goto label72;

     label71:
        r1 = "synchronized";

        r4 = "synchronized";

        r3 = "synchronized";

        r2 = "synchronized";

        b42 = 123;

        b44 = 123;

        b43 = 123;

        goto label72;

     label72:
        if r2 == null goto label73;

        if r3 == r0 goto label73;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label73;

        b42 = 0;

        b44 = 0;

        b43 = 0;

     label73:
        if b43 != 0 goto label74;

        return 0;

     label74:
        $s1 = b44 & 255;

        return $s1;
    }

    final int getLineno()
    {
        int $i0;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $i0 = r0.<org.mozilla.javascript.TokenStream: int lineno>;

        return $i0;
    }

    final java.lang.String getString()
    {
        org.mozilla.javascript.TokenStream r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $r1 = r0.<org.mozilla.javascript.TokenStream: java.lang.String string>;

        return $r1;
    }

    final double getNumber()
    {
        org.mozilla.javascript.TokenStream r0;
        double $d0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $d0 = r0.<org.mozilla.javascript.TokenStream: double number>;

        return $d0;
    }

    final boolean eof()
    {
        org.mozilla.javascript.TokenStream r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $z0 = r0.<org.mozilla.javascript.TokenStream: boolean hitEOF>;

        return $z0;
    }

    final int getToken() throws java.io.IOException
    {
        byte b31, b40, b41, b42, b43, b44, b45;
        org.mozilla.javascript.ObjToIntMap $r5, $r19;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i32, i33, i34, i35, i36, i37, i38, $i39, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i61, $i63, $i65, $i67;
        org.mozilla.javascript.TokenStream r0;
        java.lang.Object $r6, $r20;
        java.lang.Double $r1;
        java.lang.String $r4, $r7, $r11, $r21, $r22, $r23;
        java.lang.NumberFormatException $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, z42, z43, z44, z45, $z46, $z47, z48, z49, z50;
        org.mozilla.javascript.Parser $r2, $r3, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r18;
        double d0;
        char $c0, $c22;
        org.mozilla.javascript.CompilerEnvirons $r13;

        r0 := @this: org.mozilla.javascript.TokenStream;

     label001:
        $i27 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i27;

        $i47 = (int) -1;

        if $i27 != $i47 goto label002;

        return 0;

     label002:
        if $i27 != 10 goto label003;

        r0.<org.mozilla.javascript.TokenStream: boolean dirtyLine> = 0;

        return 1;

     label003:
        $z0 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isJSSpace(int)>($i27);

        if $z0 != 0 goto label001;

        if $i27 == 45 goto label004;

        r0.<org.mozilla.javascript.TokenStream: boolean dirtyLine> = 1;

        goto label004;

     label004:
        if $i27 != 64 goto label005;

        return 143;

     label005:
        z42 = 0;

        z50 = 0;

        z49 = 0;

        if $i27 != 92 goto label007;

        $i26 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i26;

        if $i26 != 117 goto label006;

        z43 = 1;

        z42 = 1;

        z50 = 1;

        z49 = 1;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        goto label008;

     label006:
        z43 = 0;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i26);

        i28 = 92;

        goto label008;

     label007:
        $c0 = (char) $i27;

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        z43 = $z1;

        if $z1 == 0 goto label008;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i27);

     label008:
        if z43 == 0 goto label022;

        z44 = z49;

     label009:
        if z50 == 0 goto label014;

        i29 = 0;

        i30 = 0;

     label010:
        if i30 == 4 goto label012;

        $i24 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        $i25 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>($i24, i29);

        i29 = $i25;

        if $i25 >= 0 goto label011;

        goto label012;

     label011:
        i30 = i30 + 1;

        goto label010;

     label012:
        if i29 >= 0 goto label013;

        $r16 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r16.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.invalid.escape");

        $i49 = (int) -1;

        return $i49;

     label013:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i29);

        z42 = 0;

        z50 = 0;

        goto label009;

     label014:
        $i20 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i20 != 92 goto label016;

        $i23 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i23 != 117 goto label015;

        z42 = 1;

        z50 = 1;

        z44 = 1;

        goto label009;

     label015:
        $r15 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r15.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.illegal.character");

        $i51 = (int) -1;

        return $i51;

     label016:
        $i53 = (int) -1;

        if $i20 == $i53 goto label018;

        $c22 = (char) $i20;

        $z41 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c22);

        if $z41 != 0 goto label017;

        goto label018;

     label017:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i20);

        goto label009;

     label018:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i20);

        $r11 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        if z44 != 0 goto label021;

        $i21 = staticinvoke <org.mozilla.javascript.TokenStream: int stringToKeyword(java.lang.String)>($r11);

        if $i21 == 0 goto label021;

        if $i21 == 123 goto label019;

        return $i21;

     label019:
        $r12 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        $r13 = $r12.<org.mozilla.javascript.Parser: org.mozilla.javascript.CompilerEnvirons compilerEnv>;

        $z40 = virtualinvoke $r13.<org.mozilla.javascript.CompilerEnvirons: boolean isReservedKeywordAsIdentifier()>();

        if $z40 != 0 goto label020;

        return $i21;

     label020:
        $r14 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r14.<org.mozilla.javascript.Parser: void addWarning(java.lang.String,java.lang.String)>("msg.reserved.keyword", $r11);

     label021:
        $r19 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.ObjToIntMap allStrings>;

        $r20 = virtualinvoke $r19.<org.mozilla.javascript.ObjToIntMap: java.lang.Object intern(java.lang.Object)>($r11);

        $r21 = (java.lang.String) $r20;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r21;

        return 38;

     label022:
        $z2 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>(i28);

        if $z2 != 0 goto label023;

        if i28 != 46 goto label047;

        $i19 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        $z39 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>($i19);

        if $z39 == 0 goto label047;

     label023:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        b31 = 10;

        b45 = 10;

        b44 = 10;

        b43 = 10;

        b42 = 10;

        b41 = 10;

        if i28 != 48 goto label027;

        $i5 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i5;

        if $i5 == 120 goto label024;

        if $i5 != 88 goto label025;

     label024:
        b31 = 16;

        b45 = 16;

        b44 = 16;

        b43 = 16;

        b42 = 16;

        b41 = 16;

        i28 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label027;

     label025:
        $z5 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>($i5);

        if $z5 == 0 goto label026;

        b31 = 8;

        b45 = 8;

        b44 = 8;

        b43 = 8;

        b42 = 8;

        b41 = 8;

        goto label027;

     label026:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(48);

     label027:
        if b43 != 16 goto label029;

     label028:
        $i4 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>(i28, 0);

        if 0 > $i4 goto label033;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i28);

        i28 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label028;

     label029:
        if 48 > i28 goto label033;

        if i28 > 57 goto label033;

        if b44 != 8 goto label032;

        if i28 < 56 goto label032;

        $r3 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        if i28 != 56 goto label030;

        $r22 = "8";

        goto label031;

     label030:
        $r22 = "9";

     label031:
        virtualinvoke $r3.<org.mozilla.javascript.Parser: void addWarning(java.lang.String,java.lang.String)>("msg.bad.octal.literal", $r22);

        b31 = 10;

        b45 = 10;

        b44 = 10;

        b42 = 10;

        b41 = 10;

     label032:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i28);

        i28 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label029;

     label033:
        z45 = 1;

        if b41 != 10 goto label041;

        if i28 == 46 goto label034;

        if i28 == 101 goto label034;

        if i28 != 69 goto label041;

     label034:
        z45 = 0;

        if i28 != 46 goto label036;

     label035:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i28);

        $i3 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i3;

        $z4 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>($i3);

        if $z4 != 0 goto label035;

     label036:
        if i28 == 101 goto label037;

        if i28 != 69 goto label041;

     label037:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i28);

        $i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i1;

        if $i1 == 43 goto label038;

        if $i1 != 45 goto label039;

     label038:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i1);

        i28 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label039:
        $z46 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>(i28);

        if $z46 != 0 goto label040;

        $r2 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r2.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.missing.exponent");

        $i55 = (int) -1;

        return $i55;

     label040:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i28);

        $i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i28 = $i2;

        $z3 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isDigit(int)>($i2);

        if $z3 != 0 goto label040;

     label041:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(i28);

        $r23 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        if b42 != 10 goto label045;

        if z45 != 0 goto label045;

     label042:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r23);

        d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

     label043:
        goto label046;

     label044:
        $r17 := @caughtexception;

        $r18 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r18.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.caught.nfe");

        $i57 = (int) -1;

        return $i57;

     label045:
        d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double stringToNumber(java.lang.String,int,int)>($r23, 0, b45);

     label046:
        r0.<org.mozilla.javascript.TokenStream: double number> = d0;

        return 39;

     label047:
        if i28 == 34 goto label048;

        if i28 != 39 goto label070;

     label048:
        i32 = i28;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        i33 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label049:
        if i33 == i32 goto label069;

        if i33 == 10 goto label050;

        $i59 = (int) -1;

        if i33 != $i59 goto label051;

     label050:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(i33);

        $r8 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r8.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.unterminated.string.lit");

        $i61 = (int) -1;

        return $i61;

     label051:
        if i33 != 92 goto label068;

        $i6 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i33 = $i6;

        lookupswitch($i6)
        {
            case 10: goto label065;
            case 98: goto label052;
            case 102: goto label053;
            case 110: goto label054;
            case 114: goto label055;
            case 116: goto label056;
            case 117: goto label058;
            case 118: goto label057;
            case 120: goto label062;
            default: goto label066;
        };

     label052:
        i33 = 8;

        goto label068;

     label053:
        i33 = 12;

        goto label068;

     label054:
        i33 = 10;

        goto label068;

     label055:
        i33 = 13;

        goto label068;

     label056:
        i33 = 9;

        goto label068;

     label057:
        i33 = 11;

        goto label068;

     label058:
        i34 = r0.<org.mozilla.javascript.TokenStream: int stringBufferTop>;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(117);

        i35 = 0;

        i36 = 0;

     label059:
        if i36 == 4 goto label061;

        $i11 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i33 = $i11;

        $i12 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>($i11, i35);

        i35 = $i12;

        if $i12 >= 0 goto label060;

        goto label049;

     label060:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i11);

        i36 = i36 + 1;

        goto label059;

     label061:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = i34;

        i33 = i35;

        goto label068;

     label062:
        $i7 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i33 = $i7;

        $i8 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>($i7, 0);

        if $i8 >= 0 goto label063;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(120);

        goto label049;

     label063:
        $i9 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i33 = $i9;

        $i10 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>($i9, $i8);

        if $i10 >= 0 goto label064;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(120);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i7);

        goto label049;

     label064:
        i33 = $i10;

        goto label068;

     label065:
        i33 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label049;

     label066:
        if 48 > $i6 goto label068;

        if $i6 >= 56 goto label068;

        i37 = $i6 - 48;

        $i13 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i38 = $i13;

        if 48 > $i13 goto label067;

        if $i13 >= 56 goto label067;

        $i14 = 8 * i37;

        $i15 = $i14 + $i13;

        i37 = $i15 - 48;

        $i16 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i38 = $i16;

        if 48 > $i16 goto label067;

        if $i16 >= 56 goto label067;

        if i37 > 31 goto label067;

        $i17 = 8 * i37;

        $i18 = $i17 + $i16;

        i37 = $i18 - 48;

        i38 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label067:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(i38);

        i33 = i37;

     label068:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i33);

        i33 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label049;

     label069:
        $r4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        $r5 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.ObjToIntMap allStrings>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.ObjToIntMap: java.lang.Object intern(java.lang.Object)>($r4);

        $r7 = (java.lang.String) $r6;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r7;

        return 40;

     label070:
        tableswitch(i28)
        {
            case 33: goto label096;
            case 34: goto label133;
            case 35: goto label133;
            case 36: goto label133;
            case 37: goto label122;
            case 38: goto label090;
            case 39: goto label133;
            case 40: goto label076;
            case 41: goto label077;
            case 42: goto label112;
            case 43: goto label125;
            case 44: goto label078;
            case 45: goto label128;
            case 46: goto label082;
            case 47: goto label114;
            case 48: goto label133;
            case 49: goto label133;
            case 50: goto label133;
            case 51: goto label133;
            case 52: goto label133;
            case 53: goto label133;
            case 54: goto label133;
            case 55: goto label133;
            case 56: goto label133;
            case 57: goto label133;
            case 58: goto label080;
            case 59: goto label071;
            case 60: goto label099;
            case 61: goto label093;
            case 62: goto label106;
            case 63: goto label079;
            case 64: goto label133;
            case 65: goto label133;
            case 66: goto label133;
            case 67: goto label133;
            case 68: goto label133;
            case 69: goto label133;
            case 70: goto label133;
            case 71: goto label133;
            case 72: goto label133;
            case 73: goto label133;
            case 74: goto label133;
            case 75: goto label133;
            case 76: goto label133;
            case 77: goto label133;
            case 78: goto label133;
            case 79: goto label133;
            case 80: goto label133;
            case 81: goto label133;
            case 82: goto label133;
            case 83: goto label133;
            case 84: goto label133;
            case 85: goto label133;
            case 86: goto label133;
            case 87: goto label133;
            case 88: goto label133;
            case 89: goto label133;
            case 90: goto label133;
            case 91: goto label072;
            case 92: goto label133;
            case 93: goto label073;
            case 94: goto label088;
            case 95: goto label133;
            case 96: goto label133;
            case 97: goto label133;
            case 98: goto label133;
            case 99: goto label133;
            case 100: goto label133;
            case 101: goto label133;
            case 102: goto label133;
            case 103: goto label133;
            case 104: goto label133;
            case 105: goto label133;
            case 106: goto label133;
            case 107: goto label133;
            case 108: goto label133;
            case 109: goto label133;
            case 110: goto label133;
            case 111: goto label133;
            case 112: goto label133;
            case 113: goto label133;
            case 114: goto label133;
            case 115: goto label133;
            case 116: goto label133;
            case 117: goto label133;
            case 118: goto label133;
            case 119: goto label133;
            case 120: goto label133;
            case 121: goto label133;
            case 122: goto label133;
            case 123: goto label074;
            case 124: goto label085;
            case 125: goto label075;
            case 126: goto label124;
            default: goto label133;
        };

     label071:
        return 78;

     label072:
        return 79;

     label073:
        return 80;

     label074:
        return 81;

     label075:
        return 82;

     label076:
        return 83;

     label077:
        return 84;

     label078:
        return 85;

     label079:
        return 98;

     label080:
        $z21 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(58);

        if $z21 == 0 goto label081;

        return 140;

     label081:
        return 99;

     label082:
        $z25 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(46);

        if $z25 == 0 goto label083;

        return 139;

     label083:
        $z26 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(40);

        if $z26 == 0 goto label084;

        return 142;

     label084:
        return 104;

     label085:
        $z6 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(124);

        if $z6 == 0 goto label086;

        return 100;

     label086:
        $z7 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z7 == 0 goto label087;

        return 87;

     label087:
        return 9;

     label088:
        $z8 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z8 == 0 goto label089;

        return 88;

     label089:
        return 10;

     label090:
        $z34 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(38);

        if $z34 == 0 goto label091;

        return 101;

     label091:
        $z35 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z35 == 0 goto label092;

        return 89;

     label092:
        return 11;

     label093:
        $z14 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z14 == 0 goto label095;

        $z15 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z15 == 0 goto label094;

        return 45;

     label094:
        return 12;

     label095:
        return 86;

     label096:
        $z37 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z37 == 0 goto label098;

        $z38 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z38 == 0 goto label097;

        return 46;

     label097:
        return 13;

     label098:
        return 26;

     label099:
        $z16 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(33);

        if $z16 == 0 goto label102;

        $z19 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(45);

        if $z19 == 0 goto label101;

        $z20 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(45);

        if $z20 == 0 goto label100;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void skipLine()>();

        goto label001;

     label100:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(45);

     label101:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(33);

     label102:
        $z47 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(60);

        if $z47 == 0 goto label104;

        $z18 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z18 == 0 goto label103;

        return 90;

     label103:
        return 18;

     label104:
        $z17 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z17 == 0 goto label105;

        return 15;

     label105:
        return 14;

     label106:
        $z9 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(62);

        if $z9 == 0 goto label110;

        $z11 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(62);

        if $z11 == 0 goto label108;

        $z13 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z13 == 0 goto label107;

        return 92;

     label107:
        return 20;

     label108:
        $z12 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z12 == 0 goto label109;

        return 91;

     label109:
        return 19;

     label110:
        $z10 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z10 == 0 goto label111;

        return 17;

     label111:
        return 16;

     label112:
        $z33 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z33 == 0 goto label113;

        return 95;

     label113:
        return 23;

     label114:
        $z22 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(47);

        if $z22 == 0 goto label115;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void skipLine()>();

        goto label001;

     label115:
        $z23 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(42);

        if $z23 == 0 goto label120;

        z48 = 0;

     label116:
        $i39 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        $i63 = (int) -1;

        if $i39 != $i63 goto label117;

        $r9 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r9.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.unterminated.comment");

        $i65 = (int) -1;

        return $i65;

     label117:
        if $i39 != 42 goto label118;

        z48 = 1;

        goto label116;

     label118:
        if $i39 != 47 goto label119;

        if z48 == 0 goto label116;

        goto label001;

     label119:
        z48 = 0;

        goto label116;

     label120:
        $z24 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z24 == 0 goto label121;

        return 96;

     label121:
        return 24;

     label122:
        $z36 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z36 == 0 goto label123;

        return 97;

     label123:
        return 25;

     label124:
        return 27;

     label125:
        $z31 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z31 == 0 goto label126;

        return 93;

     label126:
        $z32 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(43);

        if $z32 == 0 goto label127;

        return 102;

     label127:
        return 21;

     label128:
        $z27 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(61);

        if $z27 == 0 goto label129;

        b40 = 94;

        goto label132;

     label129:
        $z28 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(45);

        if $z28 == 0 goto label131;

        $z29 = r0.<org.mozilla.javascript.TokenStream: boolean dirtyLine>;

        if $z29 != 0 goto label130;

        $z30 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(62);

        if $z30 == 0 goto label130;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void skipLine()>();

        goto label001;

     label130:
        b40 = 103;

        goto label132;

     label131:
        b40 = 22;

     label132:
        r0.<org.mozilla.javascript.TokenStream: boolean dirtyLine> = 1;

        return b40;

     label133:
        $r10 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r10.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.illegal.character");

        $i67 = (int) -1;

        return $i67;

        catch java.lang.NumberFormatException from label042 to label043 with label044;
    }

    private static boolean isAlpha(int)
    {
        int i0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        if i0 > 90 goto label3;

        if 65 > i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        if 97 > i0 goto label4;

        if i0 > 122 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    static boolean isDigit(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 48 > i0 goto label1;

        if i0 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean isJSSpace(int)
    {
        int i0, $i2;
        char $c1;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        if i0 > 127 goto label4;

        if i0 == 32 goto label1;

        if i0 == 9 goto label1;

        if i0 == 12 goto label1;

        if i0 != 11 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        if i0 == 160 goto label5;

        $c1 = (char) i0;

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c1);

        if $i2 != 12 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;
    }

    private static boolean isJSFormatChar(int)
    {
        int i0, $i2;
        char $c1;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 <= 127 goto label1;

        $c1 = (char) i0;

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c1);

        if $i2 != 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void readRegExp(int) throws java.io.IOException
    {
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.lang.String $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.TokenStream r0;
        java.lang.RuntimeException $r6, $r8;
        char[] $r2, $r4;
        org.mozilla.javascript.Parser $r5, $r7;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i0 := @parameter0: int;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        if i0 != 96 goto label01;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(61);

        goto label02;

     label01:
        if i0 == 24 goto label02;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label02:
        $i5 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i6 = $i5;

        if $i5 == 47 goto label06;

        if $i5 == 10 goto label03;

        $i8 = (int) -1;

        if $i5 != $i8 goto label04;

     label03:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i5);

        $r7 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.Parser: java.lang.RuntimeException reportError(java.lang.String)>("msg.unterminated.re.lit");

        throw $r8;

     label04:
        if $i5 != 92 goto label05;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i5);

        i6 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label05:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i6);

        goto label02;

     label06:
        i1 = r0.<org.mozilla.javascript.TokenStream: int stringBufferTop>;

     label07:
        $z3 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(103);

        if $z3 == 0 goto label08;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(103);

        goto label07;

     label08:
        $z0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(105);

        if $z0 == 0 goto label09;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(105);

        goto label07;

     label09:
        $z1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean matchChar(int)>(109);

        if $z1 == 0 goto label10;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(109);

        goto label07;

     label10:
        $i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        $z2 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isAlpha(int)>($i2);

        if $z2 == 0 goto label11;

        $r5 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.Parser: java.lang.RuntimeException reportError(java.lang.String)>("msg.invalid.re.flag");

        throw $r6;

     label11:
        $r9 = new java.lang.String;

        $r2 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r2, 0, i1);

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r9;

        $r10 = new java.lang.String;

        $r4 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        $i3 = r0.<org.mozilla.javascript.TokenStream: int stringBufferTop>;

        $i4 = $i3 - i1;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r4, i1, $i4);

        r0.<org.mozilla.javascript.TokenStream: java.lang.String regExpFlags> = $r10;

        return;
    }

    boolean isXMLAttribute()
    {
        org.mozilla.javascript.TokenStream r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $z0 = r0.<org.mozilla.javascript.TokenStream: boolean xmlIsAttribute>;

        return $z0;
    }

    int getFirstXMLToken() throws java.io.IOException
    {
        int $i0;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount> = 0;

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsAttribute> = 0;

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent> = 0;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(60);

        $i0 = virtualinvoke r0.<org.mozilla.javascript.TokenStream: int getNextXMLToken()>();

        return $i0;
    }

    int getNextXMLToken() throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mozilla.javascript.Parser $r1, $r3, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44;
        java.lang.String $r2, $r5, $r6;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        i24 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label01:
        $i26 = (int) -1;

        if i24 == $i26 goto label25;

        $z0 = r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent>;

        if $z0 == 0 goto label10;

        lookupswitch(i24)
        {
            case 9: goto label07;
            case 10: goto label07;
            case 13: goto label07;
            case 32: goto label07;
            case 34: goto label05;
            case 39: goto label05;
            case 47: goto label03;
            case 61: goto label06;
            case 62: goto label02;
            case 123: goto label04;
            default: goto label08;
        };

     label02:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent> = 0;

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsAttribute> = 0;

        goto label09;

     label03:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        $i20 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i20 != 62 goto label09;

        $i21 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i21);

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent> = 0;

        $i22 = r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount>;

        $i23 = $i22 - 1;

        r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount> = $i23;

        goto label09;

     label04:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(i24);

        $r5 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r5;

        return 141;

     label05:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        $z5 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean readQuotedString(int)>(i24);

        if $z5 != 0 goto label09;

        $i28 = (int) -1;

        return $i28;

     label06:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsAttribute> = 1;

        goto label09;

     label07:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        goto label09;

     label08:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsAttribute> = 0;

     label09:
        $z6 = r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent>;

        if $z6 != 0 goto label24;

        $i19 = r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount>;

        if $i19 != 0 goto label24;

        $r6 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r6;

        return 144;

     label10:
        lookupswitch(i24)
        {
            case 60: goto label11;
            case 123: goto label22;
            default: goto label23;
        };

     label11:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        lookupswitch($i0)
        {
            case 33: goto label12;
            case 47: goto label19;
            case 63: goto label18;
            default: goto label21;
        };

     label12:
        $i6 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i6);

        $i7 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        lookupswitch($i7)
        {
            case 45: goto label13;
            case 91: goto label15;
            default: goto label17;
        };

     label13:
        $i15 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i15);

        $i16 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i16 != 45 goto label14;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i16);

        $z3 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean readXmlComment()>();

        if $z3 != 0 goto label24;

        $i30 = (int) -1;

        return $i30;

     label14:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r4 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r4.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        $i32 = (int) -1;

        return $i32;

     label15:
        $i8 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i8);

        $i9 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i9 != 67 goto label16;

        $i10 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i10 != 68 goto label16;

        $i11 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i11 != 65 goto label16;

        $i12 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i12 != 84 goto label16;

        $i13 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i13 != 65 goto label16;

        $i14 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i14 != 91 goto label16;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(67);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(68);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(65);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(84);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(65);

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(91);

        $z2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean readCDATA()>();

        if $z2 != 0 goto label24;

        $i34 = (int) -1;

        return $i34;

     label16:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r7 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r7.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        $i36 = (int) -1;

        return $i36;

     label17:
        $z4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean readEntity()>();

        if $z4 != 0 goto label24;

        $i38 = (int) -1;

        return $i38;

     label18:
        $i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i1);

        $z1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean readPI()>();

        if $z1 != 0 goto label24;

        $i40 = (int) -1;

        return $i40;

     label19:
        $i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i2);

        $i3 = r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount>;

        if $i3 != 0 goto label20;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r3 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r3.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        $i42 = (int) -1;

        return $i42;

     label20:
        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent> = 1;

        $i4 = r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount>;

        $i5 = $i4 - 1;

        r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount> = $i5;

        goto label24;

     label21:
        r0.<org.mozilla.javascript.TokenStream: boolean xmlIsTagContent> = 1;

        $i17 = r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount>;

        $i18 = $i17 + 1;

        r0.<org.mozilla.javascript.TokenStream: int xmlOpenTagsCount> = $i18;

        goto label24;

     label22:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>(i24);

        $r2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: java.lang.String getStringFromBuffer()>();

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = $r2;

        return 141;

     label23:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i24);

     label24:
        i24 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label01;

     label25:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        $i44 = (int) -1;

        return $i44;
    }

    private boolean readQuotedString(int) throws java.io.IOException
    {
        org.mozilla.javascript.TokenStream r0;
        int i0, i1, $i3;
        org.mozilla.javascript.Parser $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i0 := @parameter0: int;

        i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label1:
        $i3 = (int) -1;

        if i1 == $i3 goto label3;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i1);

        if i1 != i0 goto label2;

        return 1;

     label2:
        i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label1;

     label3:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        return 0;
    }

    private boolean readXmlComment() throws java.io.IOException
    {
        org.mozilla.javascript.TokenStream r0;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.mozilla.javascript.Parser $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label1:
        $i6 = (int) -1;

        if i4 == $i6 goto label3;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i4);

        if i4 != 45 goto label2;

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i0 != 45 goto label2;

        $i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i4 = $i1;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i1);

        $i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i2 != 62 goto label1;

        $i3 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i3);

        return 1;

     label2:
        i4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label1;

     label3:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        return 0;
    }

    private boolean readCDATA() throws java.io.IOException
    {
        org.mozilla.javascript.TokenStream r0;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.mozilla.javascript.Parser $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label1:
        $i6 = (int) -1;

        if i4 == $i6 goto label3;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i4);

        if i4 != 93 goto label2;

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i0 != 93 goto label2;

        $i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        i4 = $i1;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i1);

        $i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i2 != 62 goto label1;

        $i3 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i3);

        return 1;

     label2:
        i4 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label1;

     label3:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        return 0;
    }

    private boolean readEntity() throws java.io.IOException
    {
        org.mozilla.javascript.TokenStream r0;
        int i0, i1, $i3, $i5;
        org.mozilla.javascript.Parser $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i0 = 1;

        i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label1:
        $i3 = (int) -1;

        if i1 == $i3 goto label5;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i1);

        lookupswitch(i1)
        {
            case 60: goto label2;
            case 62: goto label3;
            default: goto label4;
        };

     label2:
        i0 = i0 + 1;

        goto label4;

     label3:
        $i5 = (int) -1;

        i0 = i0 + $i5;

        if i0 != 0 goto label4;

        return 1;

     label4:
        i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label1;

     label5:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        return 0;
    }

    private boolean readPI() throws java.io.IOException
    {
        org.mozilla.javascript.TokenStream r0;
        int $i0, $i1, i2, $i4;
        org.mozilla.javascript.Parser $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

     label1:
        $i4 = (int) -1;

        if i2 == $i4 goto label3;

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>(i2);

        if i2 != 63 goto label2;

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int peekChar()>();

        if $i0 != 62 goto label2;

        $i1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void addToString(int)>($i1);

        return 1;

     label2:
        i2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        goto label1;

     label3:
        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = 0;

        r0.<org.mozilla.javascript.TokenStream: java.lang.String string> = null;

        $r1 = r0.<org.mozilla.javascript.TokenStream: org.mozilla.javascript.Parser parser>;

        virtualinvoke $r1.<org.mozilla.javascript.Parser: void addError(java.lang.String)>("msg.XML.bad.form");

        return 0;
    }

    private java.lang.String getStringFromBuffer()
    {
        org.mozilla.javascript.TokenStream r1;
        int $i0;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.mozilla.javascript.TokenStream;

        $r0 = new java.lang.String;

        $r2 = r1.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        $i0 = r1.<org.mozilla.javascript.TokenStream: int stringBufferTop>;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r0;
    }

    private void addToString(int)
    {
        org.mozilla.javascript.TokenStream r0;
        char $c3;
        int i0, $i1, i2, $i4, $i5, $i6;
        char[] $r1, $r2, $r3, r4, $r5;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i2 := @parameter0: int;

        i0 = r0.<org.mozilla.javascript.TokenStream: int stringBufferTop>;

        $r1 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        $i1 = lengthof $r1;

        if i0 != $i1 goto label1;

        $r3 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        $i5 = lengthof $r3;

        $i6 = $i5 * 2;

        r4 = newarray (char)[$i6];

        $r5 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, i0);

        r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer> = r4;

     label1:
        $r2 = r0.<org.mozilla.javascript.TokenStream: char[] stringBuffer>;

        $c3 = (char) i2;

        $r2[i0] = $c3;

        $i4 = i0 + 1;

        r0.<org.mozilla.javascript.TokenStream: int stringBufferTop> = $i4;

        return;
    }

    private void ungetChar(int)
    {
        org.mozilla.javascript.TokenStream r0;
        int[] $r1, $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i1 := @parameter0: int;

        $i0 = r0.<org.mozilla.javascript.TokenStream: int ungetCursor>;

        if $i0 == 0 goto label1;

        $r1 = r0.<org.mozilla.javascript.TokenStream: int[] ungetBuffer>;

        $i2 = r0.<org.mozilla.javascript.TokenStream: int ungetCursor>;

        $i3 = $i2 - 1;

        $i4 = $r1[$i3];

        if $i4 != 10 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r2 = r0.<org.mozilla.javascript.TokenStream: int[] ungetBuffer>;

        $i5 = r0.<org.mozilla.javascript.TokenStream: int ungetCursor>;

        $i6 = $i5 + 1;

        r0.<org.mozilla.javascript.TokenStream: int ungetCursor> = $i6;

        $r2[$i5] = i1;

        return;
    }

    private boolean matchChar(int) throws java.io.IOException
    {
        int $i0, i1;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        i1 := @parameter0: int;

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        if $i0 != i1 goto label1;

        return 1;

     label1:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i0);

        return 0;
    }

    private int peekChar() throws java.io.IOException
    {
        int $i0;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i0);

        return $i0;
    }

    private int getChar() throws java.io.IOException
    {
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i20, $i22, $i24;
        java.lang.String $r2, $r4;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.TokenStream r0;
        char[] $r1;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $i0 = r0.<org.mozilla.javascript.TokenStream: int ungetCursor>;

        if $i0 == 0 goto label01;

        $r3 = r0.<org.mozilla.javascript.TokenStream: int[] ungetBuffer>;

        $i14 = r0.<org.mozilla.javascript.TokenStream: int ungetCursor>;

        $i15 = $i14 - 1;

        r0.<org.mozilla.javascript.TokenStream: int ungetCursor> = $i15;

        $i16 = $r3[$i15];

        return $i16;

     label01:
        $r4 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        if $r4 == null goto label03;

        $i11 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i10 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        if $i11 != $i10 goto label02;

        r0.<org.mozilla.javascript.TokenStream: boolean hitEOF> = 1;

        $i20 = (int) -1;

        return $i20;

     label02:
        $r2 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        $i12 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i13 = $i12 + 1;

        r0.<org.mozilla.javascript.TokenStream: int sourceCursor> = $i13;

        i17 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i12);

        goto label05;

     label03:
        $i2 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i1 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        if $i2 != $i1 goto label04;

        $z2 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean fillSourceBuffer()>();

        if $z2 != 0 goto label04;

        r0.<org.mozilla.javascript.TokenStream: boolean hitEOF> = 1;

        $i22 = (int) -1;

        return $i22;

     label04:
        $r1 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i3 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i4 = $i3 + 1;

        r0.<org.mozilla.javascript.TokenStream: int sourceCursor> = $i4;

        i17 = $r1[$i3];

     label05:
        $i18 = r0.<org.mozilla.javascript.TokenStream: int lineEndChar>;

        if $i18 < 0 goto label07;

        $i5 = r0.<org.mozilla.javascript.TokenStream: int lineEndChar>;

        if $i5 != 13 goto label06;

        if i17 != 10 goto label06;

        r0.<org.mozilla.javascript.TokenStream: int lineEndChar> = 10;

        goto label01;

     label06:
        $i24 = (int) -1;

        r0.<org.mozilla.javascript.TokenStream: int lineEndChar> = $i24;

        $i6 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i7 = $i6 - 1;

        r0.<org.mozilla.javascript.TokenStream: int lineStart> = $i7;

        $i8 = r0.<org.mozilla.javascript.TokenStream: int lineno>;

        $i9 = $i8 + 1;

        r0.<org.mozilla.javascript.TokenStream: int lineno> = $i9;

     label07:
        if i17 > 127 goto label09;

        if i17 == 10 goto label08;

        if i17 != 13 goto label11;

     label08:
        r0.<org.mozilla.javascript.TokenStream: int lineEndChar> = i17;

        i17 = 10;

        goto label11;

     label09:
        $z0 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isJSFormatChar(int)>(i17);

        if $z0 == 0 goto label10;

        goto label01;

     label10:
        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean isJSLineTerminator(int)>(i17);

        if $z1 == 0 goto label11;

        r0.<org.mozilla.javascript.TokenStream: int lineEndChar> = i17;

        i17 = 10;

     label11:
        return i17;
    }

    private void skipLine() throws java.io.IOException
    {
        int $i0, $i2;
        org.mozilla.javascript.TokenStream r0;

        r0 := @this: org.mozilla.javascript.TokenStream;

     label1:
        $i0 = specialinvoke r0.<org.mozilla.javascript.TokenStream: int getChar()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        if $i0 == 10 goto label2;

        goto label1;

     label2:
        specialinvoke r0.<org.mozilla.javascript.TokenStream: void ungetChar(int)>($i0);

        return;
    }

    final int getOffset()
    {
        org.mozilla.javascript.TokenStream r0;
        int $i0, $i1, $i2, i3, $i5;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $i1 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i0 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        i3 = $i1 - $i0;

        $i2 = r0.<org.mozilla.javascript.TokenStream: int lineEndChar>;

        if $i2 < 0 goto label1;

        $i5 = (int) -1;

        i3 = i3 + $i5;

     label1:
        return i3;
    }

    final java.lang.String getLine()
    {
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, i11, $i12, i13, i14, $i15, $i17, $i18, $i20, $i21;
        java.lang.String $r1, $r3, $r5, $r6, $r9;
        org.mozilla.javascript.TokenStream r0;
        char $c7, $c10;
        java.io.IOException $r4;
        char[] $r2, $r8;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $r1 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        if $r1 == null goto label04;

        i11 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i8 = r0.<org.mozilla.javascript.TokenStream: int lineEndChar>;

        if $i8 < 0 goto label01;

        $i17 = (int) -1;

        i11 = i11 + $i17;

        goto label03;

     label01:
        $i9 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        if i11 == $i9 goto label03;

        $r3 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        $c10 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i11);

        $i18 = (int) $c10;

        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean isJSLineTerminator(int)>($i18);

        if $z2 == 0 goto label02;

        goto label03;

     label02:
        i11 = i11 + 1;

        goto label01;

     label03:
        $r5 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        $i12 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i12, i11);

        return $r6;

     label04:
        $i1 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i0 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        i13 = $i1 - $i0;

        $i2 = r0.<org.mozilla.javascript.TokenStream: int lineEndChar>;

        if $i2 < 0 goto label05;

        $i20 = (int) -1;

        i13 = i13 + $i20;

        goto label13;

     label05:
        $i3 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $i5 = $i3 + i13;

        i14 = $i5;

        $i4 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        if $i5 != $i4 goto label11;

     label06:
        $z1 = specialinvoke r0.<org.mozilla.javascript.TokenStream: boolean fillSourceBuffer()>();

        if $z1 != 0 goto label08;

     label07:
        goto label13;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        goto label13;

     label10:
        $i6 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        i14 = $i6 + i13;

     label11:
        $r2 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $c7 = $r2[i14];

        $i21 = (int) $c7;

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean isJSLineTerminator(int)>($i21);

        if $z0 == 0 goto label12;

        goto label13;

     label12:
        i13 = i13 + 1;

        goto label05;

     label13:
        $r9 = new java.lang.String;

        $r8 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i15 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r8, $i15, i13);

        return $r9;

        catch java.io.IOException from label06 to label07 with label09;
    }

    private boolean fillSourceBuffer() throws java.io.IOException
    {
        java.io.Reader $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String $r1;
        org.mozilla.javascript.TokenStream r0;
        char[] $r2, $r3, $r4, $r5, $r6, r7, $r9, $r10;

        r0 := @this: org.mozilla.javascript.TokenStream;

        $r1 = r0.<org.mozilla.javascript.TokenStream: java.lang.String sourceString>;

        if $r1 == null goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $i1 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $r2 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label3;

        $i4 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        if $i4 == 0 goto label2;

        $r6 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i11 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $r5 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i9 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $i8 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $i10 = $i9 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i11, $r5, 0, $i10);

        $i13 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $i12 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $i14 = $i13 - $i12;

        r0.<org.mozilla.javascript.TokenStream: int sourceEnd> = $i14;

        $i16 = r0.<org.mozilla.javascript.TokenStream: int sourceCursor>;

        $i15 = r0.<org.mozilla.javascript.TokenStream: int lineStart>;

        $i17 = $i16 - $i15;

        r0.<org.mozilla.javascript.TokenStream: int sourceCursor> = $i17;

        r0.<org.mozilla.javascript.TokenStream: int lineStart> = 0;

        goto label3;

     label2:
        $r3 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i5 = lengthof $r3;

        $i6 = $i5 * 2;

        r7 = newarray (char)[$i6];

        $r4 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i7 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r7, 0, $i7);

        r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer> = r7;

     label3:
        $r8 = r0.<org.mozilla.javascript.TokenStream: java.io.Reader sourceReader>;

        $r9 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i18 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $r10 = r0.<org.mozilla.javascript.TokenStream: char[] sourceBuffer>;

        $i19 = lengthof $r10;

        $i20 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $i21 = $i19 - $i20;

        $i22 = virtualinvoke $r8.<java.io.Reader: int read(char[],int,int)>($r9, $i18, $i21);

        if $i22 >= 0 goto label4;

        return 0;

     label4:
        $i2 = r0.<org.mozilla.javascript.TokenStream: int sourceEnd>;

        $i3 = $i2 + $i22;

        r0.<org.mozilla.javascript.TokenStream: int sourceEnd> = $i3;

        return 1;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.TokenStream: int EOF_CHAR> = -1;

        return;
    }
}
