public class org.apache.cxf.jaxrs.client.LocalClientState extends java.lang.Object implements org.apache.cxf.jaxrs.client.ClientState
{
    private static final java.lang.String HTTP_SCHEME;
    private javax.ws.rs.core.MultivaluedMap requestHeaders;
    private javax.ws.rs.core.MultivaluedMap templates;
    private javax.ws.rs.core.Response response;
    private java.net.URI baseURI;
    private javax.ws.rs.core.UriBuilder currentBuilder;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = $r1;

        return;
    }

    public void <init>(java.net.URI)
    {
        org.apache.cxf.jaxrs.client.LocalClientState r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r3, $r5;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        javax.ws.rs.core.UriBuilder $r4, $r6;
        java.net.URI r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r2 := @parameter0: java.net.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = $r1;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI> = r2;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.client.LocalClientState: boolean isHttpScheme(java.net.URI)>(r2);

        if $z0 == 0 goto label1;

        $r5 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r5.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>(r2);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = $r6;

        goto label2;

     label1:
        $r3 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.lang.String)>("/");

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = $r4;

     label2:
        return;
    }

    public void <init>(java.net.URI, java.net.URI)
    {
        org.apache.cxf.jaxrs.client.LocalClientState r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r3;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        javax.ws.rs.core.UriBuilder $r5;
        java.net.URI r2, r4;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r2 := @parameter0: java.net.URI;

        r4 := @parameter1: java.net.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = $r1;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI> = r2;

        $r3 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r5 = virtualinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>(r4);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = $r5;

        return;
    }

    public void <init>(org.apache.cxf.jaxrs.client.LocalClientState)
    {
        org.apache.cxf.jaxrs.client.LocalClientState r0, r3;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1, $r2, $r11;
        javax.ws.rs.core.MultivaluedMap $r4, $r5, $r6;
        javax.ws.rs.core.Response $r7;
        javax.ws.rs.core.UriBuilder $r9, $r10, $r12;
        java.net.URI $r8;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r3 := @parameter0: org.apache.cxf.jaxrs.client.LocalClientState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = $r1;

        $r2 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r4 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders>;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>($r4);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = $r2;

        $r5 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        if $r5 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        $r11 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r6 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        specialinvoke $r11.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>($r6);

     label2:
        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates> = $r11;

        $r7 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.Response response>;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.Response response> = $r7;

        $r8 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI>;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI> = $r8;

        $r9 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder>;

        if $r9 == null goto label3;

        $r10 = r3.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder>;

        $r12 = virtualinvoke $r10.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder clone()>();

        goto label4;

     label3:
        $r12 = null;

     label4:
        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = $r12;

        return;
    }

    public void setCurrentBuilder(javax.ws.rs.core.UriBuilder)
    {
        javax.ws.rs.core.UriBuilder r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r1 := @parameter0: javax.ws.rs.core.UriBuilder;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = r1;

        return;
    }

    public javax.ws.rs.core.UriBuilder getCurrentBuilder()
    {
        javax.ws.rs.core.UriBuilder $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder>;

        return $r1;
    }

    public void setBaseURI(java.net.URI)
    {
        java.net.URI r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r1 := @parameter0: java.net.URI;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI> = r1;

        return;
    }

    public java.net.URI getBaseURI()
    {
        java.net.URI $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI>;

        return $r1;
    }

    public void setResponse(javax.ws.rs.core.Response)
    {
        javax.ws.rs.core.Response r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r1 := @parameter0: javax.ws.rs.core.Response;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.Response response> = r1;

        return;
    }

    public javax.ws.rs.core.Response getResponse()
    {
        javax.ws.rs.core.Response $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.Response response>;

        return $r1;
    }

    public void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders> = r1;

        return;
    }

    public javax.ws.rs.core.MultivaluedMap getRequestHeaders()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders>;

        return $r1;
    }

    public javax.ws.rs.core.MultivaluedMap getTemplates()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        return $r1;
    }

    public void setTemplates(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap $r1, r2, $r3;
        org.apache.cxf.jaxrs.client.LocalClientState r0;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        if $r1 != null goto label1;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates> = r2;

        goto label3;

     label1:
        if r2 == null goto label2;

        $r3 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>(r2);

        goto label3;

     label2:
        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates> = null;

     label3:
        return;
    }

    public void reset()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.client.LocalClientState r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r2;
        javax.ws.rs.core.UriBuilder $r4;
        java.net.URI $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        $r1 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap requestHeaders>;

        interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.Response response> = null;

        $r2 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r3 = r0.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI>;

        $r4 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>($r3);

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.UriBuilder currentBuilder> = $r4;

        r0.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates> = null;

        return;
    }

    public org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI, javax.ws.rs.core.MultivaluedMap, javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.jaxrs.client.LocalClientState $r1, r2, $r7, r8;
        javax.ws.rs.core.MultivaluedMap r4, r5, $r6, r9;
        java.net.URI r0, $r3;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.client.LocalClientState;

        r0 := @parameter0: java.net.URI;

        r4 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r5 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.client.LocalClientState: boolean isHttpScheme(java.net.URI)>(r0);

        if $z0 == 0 goto label1;

        $r7 = new org.apache.cxf.jaxrs.client.LocalClientState;

        specialinvoke $r7.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI)>(r0);

        r8 = $r7;

        goto label2;

     label1:
        $r1 = new org.apache.cxf.jaxrs.client.LocalClientState;

        $r3 = r2.<org.apache.cxf.jaxrs.client.LocalClientState: java.net.URI baseURI>;

        specialinvoke $r1.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI,java.net.URI)>($r3, r0);

        r8 = $r1;

     label2:
        if r4 == null goto label3;

        interfaceinvoke r8.<org.apache.cxf.jaxrs.client.ClientState: void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)>(r4);

     label3:
        $r6 = r2.<org.apache.cxf.jaxrs.client.LocalClientState: javax.ws.rs.core.MultivaluedMap templates>;

        r9 = $r6;

        if $r6 == null goto label4;

        if r5 == null goto label4;

        interfaceinvoke $r6.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>(r5);

        goto label5;

     label4:
        r9 = r5;

     label5:
        interfaceinvoke r8.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>(r9);

        return r8;
    }

    private static boolean isHttpScheme(java.net.URI)
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.net.URI;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.client.LocalClientState: java.lang.String HTTP_SCHEME> = "http";

        return;
    }
}
