class com.google.wave.api.WaveService$HttpFetcher extends java.lang.Object implements net.oauth.http.HttpClient
{
    private static final int URLFETCH_TIMEOUT_IN_MS;
    private static final java.lang.String HTTP_POST_METHOD;
    private static final java.lang.String HTTP_PUT_METHOD;

    void <init>()
    {
        com.google.wave.api.WaveService$HttpFetcher r0;

        r0 := @this: com.google.wave.api.WaveService$HttpFetcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.oauth.http.HttpResponseMessage execute(net.oauth.http.HttpMessage, java.util.Map) throws java.io.IOException
    {
        java.net.HttpURLConnection r28;
        java.net.URL $r3, $r9;
        java.util.Map r27;
        boolean $z0, $z1, $z2, z4, $z5, $z6;
        com.google.wave.api.WaveService$HttpResponse $r7;
        com.google.wave.api.WaveService$HttpFetcher r26;
        java.util.List $r6, $r17;
        java.lang.Throwable $r25;
        java.net.URLConnection $r4;
        int $i0;
        java.io.OutputStreamWriter $r11;
        java.lang.String $r2, $r5, $r8, $r13, $r14, $r15, $r16, $r22, $r24;
        java.io.OutputStream $r12;
        net.oauth.http.HttpMessage r0;
        java.util.Map$Entry r20;
        java.util.Iterator $r18;
        java.lang.Object $r19, $r21, $r23;
        java.io.InputStream $r1, $r10;

        r26 := @this: com.google.wave.api.WaveService$HttpFetcher;

        r0 := @parameter0: net.oauth.http.HttpMessage;

        r27 := @parameter1: java.util.Map;

        $r1 = virtualinvoke r0.<net.oauth.http.HttpMessage: java.io.InputStream getBody()>();

        $r2 = staticinvoke <com.google.wave.api.WaveService$HttpFetcher: java.lang.String readInputStream(java.io.InputStream)>($r1);

        $r3 = r0.<net.oauth.http.HttpMessage: java.net.URL url>;

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        r28 = (java.net.HttpURLConnection) $r4;

        virtualinvoke r28.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        $r5 = r0.<net.oauth.http.HttpMessage: java.lang.String method>;

        virtualinvoke r28.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r5);

        $r6 = r0.<net.oauth.http.HttpMessage: java.util.List headers>;

        if $r6 == null goto label02;

        $r17 = r0.<net.oauth.http.HttpMessage: java.util.List headers>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label02;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r19;

        $r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        $r23 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.lang.String) $r23;

        virtualinvoke r28.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r22, $r24);

        goto label01;

     label02:
        if $r2 == null goto label04;

        $r14 = "POST";

        $r13 = r0.<net.oauth.http.HttpMessage: java.lang.String method>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z0 != 0 goto label03;

        $r16 = "PUT";

        $r15 = r0.<net.oauth.http.HttpMessage: java.lang.String method>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);

        if $z1 == 0 goto label04;

     label03:
        $z6 = 1;

        $z5 = 1;

        goto label05;

     label04:
        $z6 = 0;

        $z5 = 0;

     label05:
        z4 = $z5;

        if $z6 == 0 goto label06;

        virtualinvoke r28.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label06:
        virtualinvoke r28.<java.net.HttpURLConnection: void connect()>();

        if z4 == 0 goto label11;

        $r11 = new java.io.OutputStreamWriter;

        $r12 = virtualinvoke r28.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r11.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r12, "UTF-8");

     label07:
        virtualinvoke $r11.<java.io.OutputStreamWriter: void write(java.lang.String)>($r2);

        virtualinvoke $r11.<java.io.OutputStreamWriter: void flush()>();

     label08:
        virtualinvoke $r11.<java.io.OutputStreamWriter: void close()>();

        goto label11;

     label09:
        $r25 := @caughtexception;

     label10:
        virtualinvoke $r11.<java.io.OutputStreamWriter: void close()>();

        throw $r25;

     label11:
        $r7 = new com.google.wave.api.WaveService$HttpResponse;

        $r8 = r0.<net.oauth.http.HttpMessage: java.lang.String method>;

        $r9 = r0.<net.oauth.http.HttpMessage: java.net.URL url>;

        $i0 = virtualinvoke r28.<java.net.HttpURLConnection: int getResponseCode()>();

        $r10 = virtualinvoke r28.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r7.<com.google.wave.api.WaveService$HttpResponse: void <init>(java.lang.String,java.net.URL,int,java.io.InputStream)>($r8, $r9, $i0, $r10);

        return $r7;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    static java.lang.String readInputStream(java.io.InputStream) throws java.io.IOException
    {
        java.lang.StringBuilder $r3;
        java.io.BufferedReader $r1;
        java.lang.String $r4, $r5;
        java.io.InputStreamReader $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r0);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label2;

     label3:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <com.google.wave.api.WaveService$HttpFetcher: java.lang.String HTTP_PUT_METHOD> = "PUT";

        <com.google.wave.api.WaveService$HttpFetcher: java.lang.String HTTP_POST_METHOD> = "POST";

        <com.google.wave.api.WaveService$HttpFetcher: int URLFETCH_TIMEOUT_IN_MS> = 10000;

        return;
    }
}
