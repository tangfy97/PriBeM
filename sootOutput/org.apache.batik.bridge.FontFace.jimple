public abstract class org.apache.batik.bridge.FontFace extends org.apache.batik.gvt.font.GVTFontFace implements org.apache.batik.bridge.ErrorConstants
{
    java.util.List srcs;

    public void <init>(java.util.List, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, java.lang.String, float, float, float, float, float, float, float, float)
    {
        java.lang.String r1, r2, r3, r4, r5, r6;
        org.apache.batik.bridge.FontFace r0;
        java.util.List r7;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;

        r0 := @this: org.apache.batik.bridge.FontFace;

        r7 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        f1 := @parameter7: float;

        r6 := @parameter8: java.lang.String;

        f2 := @parameter9: float;

        f3 := @parameter10: float;

        f4 := @parameter11: float;

        f5 := @parameter12: float;

        f6 := @parameter13: float;

        f7 := @parameter14: float;

        f8 := @parameter15: float;

        f9 := @parameter16: float;

        specialinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: void <init>(java.lang.String,float,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,java.lang.String,float,float,float,float,float,float,float,float)>(r1, f0, r2, r3, r4, r5, f1, r6, f2, f3, f4, f5, f6, f7, f8, f9);

        r0.<org.apache.batik.bridge.FontFace: java.util.List srcs> = r7;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.bridge.FontFace r0;

        r0 := @this: org.apache.batik.bridge.FontFace;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: void <init>(java.lang.String)>(r1);

        return;
    }

    public static org.apache.batik.bridge.CSSFontFace createFontFace(java.lang.String, org.apache.batik.bridge.FontFace)
    {
        java.lang.String r4, $r5, $r6, $r7, $r8, $r9;
        java.util.LinkedList $r1;
        org.apache.batik.bridge.FontFace r2;
        java.util.List $r3;
        org.apache.batik.bridge.CSSFontFace $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.bridge.FontFace;

        $r0 = new org.apache.batik.bridge.CSSFontFace;

        $r1 = new java.util.LinkedList;

        $r3 = r2.<org.apache.batik.bridge.FontFace: java.util.List srcs>;

        specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>($r3);

        $f9 = r2.<org.apache.batik.gvt.font.GVTFontFace: float unitsPerEm>;

        $r9 = r2.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontWeight>;

        $r8 = r2.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontStyle>;

        $r7 = r2.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontVariant>;

        $r6 = r2.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontStretch>;

        $f8 = r2.<org.apache.batik.gvt.font.GVTFontFace: float slope>;

        $r5 = r2.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String panose1>;

        $f7 = r2.<org.apache.batik.gvt.font.GVTFontFace: float ascent>;

        $f6 = r2.<org.apache.batik.gvt.font.GVTFontFace: float descent>;

        $f5 = r2.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughPosition>;

        $f4 = r2.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughThickness>;

        $f3 = r2.<org.apache.batik.gvt.font.GVTFontFace: float underlinePosition>;

        $f2 = r2.<org.apache.batik.gvt.font.GVTFontFace: float underlineThickness>;

        $f1 = r2.<org.apache.batik.gvt.font.GVTFontFace: float overlinePosition>;

        $f0 = r2.<org.apache.batik.gvt.font.GVTFontFace: float overlineThickness>;

        specialinvoke $r0.<org.apache.batik.bridge.CSSFontFace: void <init>(java.util.List,java.lang.String,float,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,java.lang.String,float,float,float,float,float,float,float,float)>($r1, r4, $f9, $r9, $r8, $r7, $r6, $f8, $r5, $f7, $f6, $f5, $f4, $f3, $f2, $f1, $f0);

        return $r0;
    }

    public org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)
    {
        java.lang.SecurityException $r20;
        java.lang.String $r1, $r2, $r9, $r17, $r18, r22;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4;
        org.apache.batik.bridge.FontFace r0;
        org.apache.batik.bridge.BridgeException $r16;
        org.apache.batik.bridge.BridgeContext r6;
        org.apache.batik.gvt.font.GVTFontFamily $r8;
        org.apache.batik.gvt.font.AWTFontFamily $r11, $r12, $r14;
        java.lang.Exception $r15;
        java.util.List $r3;
        org.apache.batik.bridge.UserAgent $r19, $r21;
        org.apache.batik.util.ParsedURL $r7;
        org.apache.batik.bridge.CSSFontFace $r10, $r13;
        java.lang.Object $r5;

        r0 := @this: org.apache.batik.bridge.FontFace;

        r6 := @parameter0: org.apache.batik.bridge.BridgeContext;

        $r1 = r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String familyName>;

        $r2 = staticinvoke <org.apache.batik.gvt.font.FontFamilyResolver: java.lang.String lookup(java.lang.String)>($r1);

        if $r2 == null goto label01;

        $r13 = staticinvoke <org.apache.batik.bridge.FontFace: org.apache.batik.bridge.CSSFontFace createFontFace(java.lang.String,org.apache.batik.bridge.FontFace)>($r2, r0);

        $r14 = new org.apache.batik.gvt.font.AWTFontFamily;

        specialinvoke $r14.<org.apache.batik.gvt.font.AWTFontFamily: void <init>(org.apache.batik.gvt.font.GVTFontFace)>($r13);

        return $r14;

     label01:
        $r3 = r0.<org.apache.batik.bridge.FontFace: java.util.List srcs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label10;

     label02:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r5 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        r22 = (java.lang.String) $r5;

        $r9 = staticinvoke <org.apache.batik.gvt.font.FontFamilyResolver: java.lang.String lookup(java.lang.String)>(r22);

        if $r9 == null goto label03;

        $r10 = staticinvoke <org.apache.batik.bridge.FontFace: org.apache.batik.bridge.CSSFontFace createFontFace(java.lang.String,org.apache.batik.bridge.FontFace)>(r22, r0);

        $r11 = new org.apache.batik.gvt.font.AWTFontFamily;

        specialinvoke $r11.<org.apache.batik.gvt.font.AWTFontFamily: void <init>(org.apache.batik.gvt.font.GVTFontFace)>($r10);

        return $r11;

     label03:
        goto label10;

     label04:
        $z1 = $r5 instanceof org.apache.batik.util.ParsedURL;

        if $z1 == 0 goto label10;

     label05:
        $r7 = (org.apache.batik.util.ParsedURL) $r5;

        $r8 = virtualinvoke r0.<org.apache.batik.bridge.FontFace: org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)>(r6, $r7);

        if $r8 == null goto label06;

        return $r8;

     label06:
        goto label10;

     label07:
        $r20 := @caughtexception;

        $r21 = virtualinvoke r6.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r21.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r20);

        goto label10;

     label08:
        $r16 := @caughtexception;

        $r17 = "uri.unsecure";

        $r18 = virtualinvoke $r16.<org.apache.batik.bridge.BridgeException: java.lang.String getCode()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label10;

        $r19 = virtualinvoke r6.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r19.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r16);

        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label02;

        $r12 = new org.apache.batik.gvt.font.AWTFontFamily;

        specialinvoke $r12.<org.apache.batik.gvt.font.AWTFontFamily: void <init>(org.apache.batik.gvt.font.GVTFontFace)>(r0);

        return $r12;

        catch java.lang.SecurityException from label05 to label06 with label07;
        catch org.apache.batik.bridge.BridgeException from label05 to label06 with label08;
        catch java.lang.Exception from label05 to label06 with label09;
    }

    protected org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext, org.apache.batik.util.ParsedURL)
    {
        org.w3c.dom.Document $r4, $r17, $r19;
        java.lang.SecurityException $r32;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.bridge.SVGFontFaceElementBridge $r26;
        org.apache.batik.bridge.FontFace r1;
        java.awt.Font $r12;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.bridge.SVGFontFace $r24;
        java.lang.Exception $r31;
        org.apache.batik.bridge.Bridge $r23;
        org.apache.batik.bridge.UserAgent $r9;
        org.apache.batik.util.ParsedURL $r8, $r30, r33, r34;
        org.w3c.dom.svg.SVGDocument r5, r18, r20;
        short $s0;
        org.w3c.dom.Node $r27, r37;
        java.lang.String $r0, $r6, $r7, $r10, $r15, $r16, $r21, $r22, $r28;
        org.apache.batik.bridge.SVGFontFamily $r25;
        org.apache.batik.gvt.font.AWTFontFamily $r13;
        org.w3c.dom.Element $r3, $r14, $r29, r35, r36;
        java.io.InputStream $r11;

        r1 := @this: org.apache.batik.bridge.FontFace;

        r2 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r33 := @parameter1: org.apache.batik.util.ParsedURL;

        $r0 = virtualinvoke r33.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        $r3 = virtualinvoke r1.<org.apache.batik.bridge.FontFace: org.w3c.dom.Element getBaseElement(org.apache.batik.bridge.BridgeContext)>(r2);

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r5 = (org.w3c.dom.svg.SVGDocument) $r4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.svg.SVGDocument: java.lang.String getURL()>();

        r34 = null;

        if $r6 == null goto label01;

        $r30 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r30.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r6);

        r34 = $r30;

     label01:
        $r7 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>($r3);

        $r8 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r8.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String,java.lang.String)>($r7, $r0);

        $r9 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

     label02:
        interfaceinvoke $r9.<org.apache.batik.bridge.UserAgent: void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>($r8, r34);

     label03:
        goto label05;

     label04:
        $r32 := @caughtexception;

        interfaceinvoke $r9.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r32);

        return null;

     label05:
        $r10 = virtualinvoke $r8.<org.apache.batik.util.ParsedURL: java.lang.String getRef()>();

        if $r10 == null goto label13;

        $r14 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>($r3, $r0);

        $r15 = interfaceinvoke $r14.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/svg");

        if $z0 == 0 goto label06;

        $r16 = interfaceinvoke $r14.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("font");

        if $z1 != 0 goto label07;

     label06:
        return null;

     label07:
        $r17 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r18 = (org.w3c.dom.svg.SVGDocument) $r17;

        $r19 = interfaceinvoke $r14.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r20 = (org.w3c.dom.svg.SVGDocument) $r19;

        r35 = $r14;

        if r18 == r20 goto label08;

        $r27 = interfaceinvoke r18.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r14, 1);

        r35 = (org.w3c.dom.Element) $r27;

        $r28 = staticinvoke <org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI(org.w3c.dom.Node)>($r14);

        $r29 = interfaceinvoke r18.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        interfaceinvoke $r29.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r35);

        interfaceinvoke $r29.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:base", $r28);

        staticinvoke <org.apache.batik.bridge.CSSUtilities: void computeStyleAndURIs(org.w3c.dom.Element,org.w3c.dom.Element,java.lang.String)>($r14, r35, $r0);

     label08:
        r36 = null;

        r37 = interfaceinvoke r35.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label11;

     label09:
        $s0 = interfaceinvoke r37.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label10;

        $r21 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/svg");

        if $z2 == 0 goto label10;

        $r22 = interfaceinvoke r37.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("font-face");

        if $z3 == 0 goto label10;

        r36 = (org.w3c.dom.Element) r37;

        goto label12;

     label10:
        r37 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label11:
        if r37 != null goto label09;

     label12:
        $r23 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "font-face");

        $r26 = (org.apache.batik.bridge.SVGFontFaceElementBridge) $r23;

        $r24 = virtualinvoke $r26.<org.apache.batik.bridge.SVGFontFaceElementBridge: org.apache.batik.bridge.SVGFontFace createFontFace(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r2, r36);

        $r25 = new org.apache.batik.bridge.SVGFontFamily;

        specialinvoke $r25.<org.apache.batik.bridge.SVGFontFamily: void <init>(org.apache.batik.gvt.font.GVTFontFace,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>($r24, r35, r2);

        return $r25;

     label13:
        $r11 = virtualinvoke $r8.<org.apache.batik.util.ParsedURL: java.io.InputStream openStream()>();

        $r12 = staticinvoke <java.awt.Font: java.awt.Font createFont(int,java.io.InputStream)>(0, $r11);

        $r13 = new org.apache.batik.gvt.font.AWTFontFamily;

        specialinvoke $r13.<org.apache.batik.gvt.font.AWTFontFamily: void <init>(org.apache.batik.gvt.font.GVTFontFace,java.awt.Font)>(r1, $r12);

        return $r13;

     label14:
        $r31 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label02 to label03 with label04;
        catch java.lang.Exception from label13 to label14 with label14;
    }

    protected org.w3c.dom.Element getBaseElement(org.apache.batik.bridge.BridgeContext)
    {
        org.w3c.dom.svg.SVGDocument r2;
        org.w3c.dom.Document $r1;
        org.apache.batik.bridge.FontFace r4;
        org.apache.batik.bridge.BridgeContext r0;
        org.w3c.dom.svg.SVGSVGElement $r3;

        r4 := @this: org.apache.batik.bridge.FontFace;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        $r1 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document getDocument()>();

        r2 = (org.w3c.dom.svg.SVGDocument) $r1;

        $r3 = interfaceinvoke r2.<org.w3c.dom.svg.SVGDocument: org.w3c.dom.svg.SVGSVGElement getRootElement()>();

        return $r3;
    }
}
