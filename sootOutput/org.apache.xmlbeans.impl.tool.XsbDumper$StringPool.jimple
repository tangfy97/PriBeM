class org.apache.xmlbeans.impl.tool.XsbDumper$StringPool extends java.lang.Object
{
    private java.util.List intsToStrings;
    private java.util.Map stringsToInts;
    private final org.apache.xmlbeans.impl.tool.XsbDumper this$0;

    void <init>(org.apache.xmlbeans.impl.tool.XsbDumper)
    {
        java.util.List $r4;
        org.apache.xmlbeans.impl.tool.XsbDumper$StringPool r0;
        org.apache.xmlbeans.impl.tool.XsbDumper r1;
        java.util.HashMap $r3;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.xmlbeans.impl.tool.XsbDumper$StringPool;

        r1 := @parameter0: org.apache.xmlbeans.impl.tool.XsbDumper;

        r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.Map stringsToInts> = $r3;

        $r4 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(null);

        return;
    }

    java.lang.String stringForCode(int)
    {
        java.util.List $r1;
        org.apache.xmlbeans.impl.tool.XsbDumper$StringPool r0;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xmlbeans.impl.tool.XsbDumper$StringPool;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    int codeForString(java.lang.String)
    {
        java.lang.Integer $r4, r8;
        java.util.List $r5, $r6;
        org.apache.xmlbeans.impl.tool.XsbDumper$StringPool r1;
        java.util.Map $r2, $r7;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String r0;

        r1 := @this: org.apache.xmlbeans.impl.tool.XsbDumper$StringPool;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.Map stringsToInts>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (java.lang.Integer) $r3;

        if r8 != null goto label2;

        $r4 = new java.lang.Integer;

        $r5 = r1.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i1);

        r8 = $r4;

        $r6 = r1.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r7 = r1.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.Map stringsToInts>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

     label2:
        $i0 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    void readFrom(java.io.DataInputStream)
    {
        java.lang.IllegalStateException $r25, $r27;
        java.util.Map $r3;
        java.util.List $r1;
        org.apache.xmlbeans.impl.tool.XsbDumper $r6, $r11, $r12, $r15, $r23;
        java.io.DataInputStream r4;
        short $s2;
        org.apache.xmlbeans.impl.tool.XsbDumper$StringPool r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r16, $r17, $r18, $r19, $r26, $r28;
        int $i0, $i1, $i3, i4, $i5, $i6;
        java.lang.String $r10, $r13, $r20, $r24;
        java.io.IOException $r22;

        r0 := @this: org.apache.xmlbeans.impl.tool.XsbDumper$StringPool;

        r4 := @parameter0: java.io.DataInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.List intsToStrings>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: java.util.Map stringsToInts>;

        $i1 = interfaceinvoke $r3.<java.util.Map: int size()>();

        if $i1 == 0 goto label2;

     label1:
        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>()>();

        throw $r25;

     label2:
        $s2 = virtualinvoke r4.<java.io.DataInputStream: short readShort()>();

        $r6 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0>;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("String pool (");

        $i5 = (int) $s2;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("):");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.tool.XsbDumper: void emit(java.lang.String)>($r10);

        $r11 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.tool.XsbDumper: void indent()>();

        i4 = 1;

     label3:
        $i6 = (int) $s2;

        if i4 >= $i6 goto label5;

        $r13 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: int codeForString(java.lang.String)>($r13);

        if $i3 == i4 goto label4;

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>()>();

        throw $r27;

     label4:
        $r15 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = \"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.xmlbeans.impl.tool.XsbDumper: void emit(java.lang.String)>($r20);

        i4 = i4 + 1;

        goto label3;

     label5:
        $r12 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0>;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.tool.XsbDumper: void outdent()>();

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;

        $r23 = r0.<org.apache.xmlbeans.impl.tool.XsbDumper$StringPool: org.apache.xmlbeans.impl.tool.XsbDumper this$0>;

        $r24 = virtualinvoke $r22.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.xmlbeans.impl.tool.XsbDumper: void emit(java.lang.String)>($r24);

     label8:
        return;

        catch java.io.IOException from label2 to label6 with label7;
    }
}
