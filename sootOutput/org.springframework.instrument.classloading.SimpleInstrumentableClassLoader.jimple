public class org.springframework.instrument.classloading.SimpleInstrumentableClassLoader extends org.springframework.core.OverridingClassLoader
{
    private final org.springframework.instrument.classloading.WeavingTransformer weavingTransformer;

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.instrument.classloading.SimpleInstrumentableClassLoader r0;
        org.springframework.instrument.classloading.WeavingTransformer $r2;

        r0 := @this: org.springframework.instrument.classloading.SimpleInstrumentableClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<org.springframework.core.OverridingClassLoader: void <init>(java.lang.ClassLoader)>(r1);

        $r2 = new org.springframework.instrument.classloading.WeavingTransformer;

        specialinvoke $r2.<org.springframework.instrument.classloading.WeavingTransformer: void <init>(java.lang.ClassLoader)>(r1);

        r0.<org.springframework.instrument.classloading.SimpleInstrumentableClassLoader: org.springframework.instrument.classloading.WeavingTransformer weavingTransformer> = $r2;

        return;
    }

    public void addTransformer(java.lang.instrument.ClassFileTransformer)
    {
        java.lang.instrument.ClassFileTransformer r1;
        org.springframework.instrument.classloading.SimpleInstrumentableClassLoader r0;
        org.springframework.instrument.classloading.WeavingTransformer $r2;

        r0 := @this: org.springframework.instrument.classloading.SimpleInstrumentableClassLoader;

        r1 := @parameter0: java.lang.instrument.ClassFileTransformer;

        $r2 = r0.<org.springframework.instrument.classloading.SimpleInstrumentableClassLoader: org.springframework.instrument.classloading.WeavingTransformer weavingTransformer>;

        virtualinvoke $r2.<org.springframework.instrument.classloading.WeavingTransformer: void addTransformer(java.lang.instrument.ClassFileTransformer)>(r1);

        return;
    }

    protected byte[] transformIfNecessary(java.lang.String, byte[])
    {
        byte[] r2, $r4;
        org.springframework.instrument.classloading.WeavingTransformer $r3;
        java.lang.String r1;
        org.springframework.instrument.classloading.SimpleInstrumentableClassLoader r0;

        r0 := @this: org.springframework.instrument.classloading.SimpleInstrumentableClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<org.springframework.instrument.classloading.SimpleInstrumentableClassLoader: org.springframework.instrument.classloading.WeavingTransformer weavingTransformer>;

        $r4 = virtualinvoke $r3.<org.springframework.instrument.classloading.WeavingTransformer: byte[] transformIfNecessary(java.lang.String,byte[])>(r1, r2);

        return $r4;
    }
}
