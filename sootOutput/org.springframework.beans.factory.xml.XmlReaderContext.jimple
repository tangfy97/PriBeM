public class org.springframework.beans.factory.xml.XmlReaderContext extends org.springframework.beans.factory.parsing.ReaderContext
{
    private final org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader;
    private final org.springframework.beans.factory.xml.NamespaceHandlerResolver namespaceHandlerResolver;

    public void <init>(org.springframework.core.io.Resource, org.springframework.beans.factory.parsing.ProblemReporter, org.springframework.beans.factory.parsing.ReaderEventListener, org.springframework.beans.factory.parsing.SourceExtractor, org.springframework.beans.factory.xml.XmlBeanDefinitionReader, org.springframework.beans.factory.xml.NamespaceHandlerResolver)
    {
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader r5;
        org.springframework.beans.factory.parsing.SourceExtractor r4;
        org.springframework.beans.factory.xml.NamespaceHandlerResolver r6;
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.parsing.ReaderEventListener r3;
        org.springframework.beans.factory.parsing.ProblemReporter r2;
        org.springframework.core.io.Resource r1;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        r1 := @parameter0: org.springframework.core.io.Resource;

        r2 := @parameter1: org.springframework.beans.factory.parsing.ProblemReporter;

        r3 := @parameter2: org.springframework.beans.factory.parsing.ReaderEventListener;

        r4 := @parameter3: org.springframework.beans.factory.parsing.SourceExtractor;

        r5 := @parameter4: org.springframework.beans.factory.xml.XmlBeanDefinitionReader;

        r6 := @parameter5: org.springframework.beans.factory.xml.NamespaceHandlerResolver;

        specialinvoke r0.<org.springframework.beans.factory.parsing.ReaderContext: void <init>(org.springframework.core.io.Resource,org.springframework.beans.factory.parsing.ProblemReporter,org.springframework.beans.factory.parsing.ReaderEventListener,org.springframework.beans.factory.parsing.SourceExtractor)>(r1, r2, r3, r4);

        r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader> = r5;

        r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.NamespaceHandlerResolver namespaceHandlerResolver> = r6;

        return;
    }

    public final org.springframework.beans.factory.xml.XmlBeanDefinitionReader getReader()
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader>;

        return $r1;
    }

    public final org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r2;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        return $r2;
    }

    public final org.springframework.core.io.ResourceLoader getResourceLoader()
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.core.io.ResourceLoader $r2;
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.core.io.ResourceLoader getResourceLoader()>();

        return $r2;
    }

    public final java.lang.ClassLoader getBeanClassLoader()
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        java.lang.ClassLoader $r2;
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: java.lang.ClassLoader getBeanClassLoader()>();

        return $r2;
    }

    public final org.springframework.beans.factory.xml.NamespaceHandlerResolver getNamespaceHandlerResolver()
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.xml.NamespaceHandlerResolver $r1;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.NamespaceHandlerResolver namespaceHandlerResolver>;

        return $r1;
    }

    public java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;
        org.springframework.beans.factory.support.BeanNameGenerator $r2;
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.config.BeanDefinition r3;
        java.lang.String $r5;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r4;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        r3 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        $r1 = r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader reader>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.beans.factory.support.BeanNameGenerator getBeanNameGenerator()>();

        $r4 = virtualinvoke r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r5 = interfaceinvoke $r2.<org.springframework.beans.factory.support.BeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r3, $r4);

        return $r5;
    }

    public java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.XmlReaderContext r0;
        org.springframework.beans.factory.config.BeanDefinition r1;
        java.lang.String $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r3;

        r0 := @this: org.springframework.beans.factory.xml.XmlReaderContext;

        r1 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        interfaceinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r2, r1);

        return $r2;
    }
}
