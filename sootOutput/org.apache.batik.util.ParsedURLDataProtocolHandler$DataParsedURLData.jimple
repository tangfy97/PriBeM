class org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData extends org.apache.batik.util.ParsedURLData
{
    java.lang.String charset;

    void <init>()
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        specialinvoke r0.<org.apache.batik.util.ParsedURLData: void <init>()>();

        return;
    }

    public boolean complete()
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        $r1 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String path>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getPortStr()
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r7, $r9;
        java.lang.String $r1, $r5, $r8, r10;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        r10 = "data:";

        $r1 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        if $r1 == null goto label1;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("data:");

        $r8 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String host>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r8, $r9, $r10, $r12;
        java.lang.String $r1, $r2, $r3, $r7, $r11, r13;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        $r1 = virtualinvoke r0.<org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData: java.lang.String getPortStr()>();

        r13 = $r1;

        $r2 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String path>;

        if $r2 == null goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r11 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String path>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r3 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String ref>;

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r7 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String ref>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r13 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        return r13;
    }

    public java.lang.String getContentType(java.lang.String)
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.String $r1, r2;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String contentType>;

        return $r1;
    }

    public java.lang.String getContentEncoding(java.lang.String)
    {
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.String $r1, r2;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String contentEncoding>;

        return $r1;
    }

    protected java.io.InputStream openStreamInternal(java.lang.String, java.util.Iterator, java.util.Iterator) throws java.io.IOException
    {
        java.util.Iterator r9, r10;
        org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData r0;
        java.lang.String $r1, $r3, $r4, r8;
        java.io.InputStream $r2, $r5, $r7;
        boolean $z0;
        org.apache.batik.util.Base64DecodeStream $r6;

        r0 := @this: org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.util.Iterator;

        r10 := @parameter2: java.util.Iterator;

        $r1 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String path>;

        $r2 = staticinvoke <org.apache.batik.util.ParsedURLDataProtocolHandler$DataParsedURLData: java.io.InputStream decode(java.lang.String)>($r1);

        r0.<org.apache.batik.util.ParsedURLData: java.io.InputStream stream> = $r2;

        $r4 = "base64";

        $r3 = r0.<org.apache.batik.util.ParsedURLData: java.lang.String contentEncoding>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r6 = new org.apache.batik.util.Base64DecodeStream;

        $r7 = r0.<org.apache.batik.util.ParsedURLData: java.io.InputStream stream>;

        specialinvoke $r6.<org.apache.batik.util.Base64DecodeStream: void <init>(java.io.InputStream)>($r7);

        r0.<org.apache.batik.util.ParsedURLData: java.io.InputStream stream> = $r6;

     label1:
        $r5 = r0.<org.apache.batik.util.ParsedURLData: java.io.InputStream stream>;

        return $r5;
    }

    public static java.io.InputStream decode(java.lang.String)
    {
        byte[] r1;
        byte $b9, $b13, $b16, $b22, b25, $b27, b29;
        java.io.ByteArrayInputStream $r3;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i20, $i21, i23, i24, $i26, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56;
        java.lang.String r0;
        char $c1, $c4, $c28;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r1 = newarray (byte)[$i0];

        i23 = 0;

        i24 = 0;

        goto label11;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i24);

        $i31 = (int) $c1;

        lookupswitch($i31)
        {
            case 37: goto label03;
            default: goto label02;
        };

     label02:
        $i21 = i23;

        i23 = i23 + 1;

        $b22 = (byte) $c1;

        r1[$i21] = $b22;

        goto label10;

     label03:
        $i2 = i24 + 2;

        if $i2 >= $i0 goto label10;

        i24 = i24 + 2;

        $i3 = i24 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i32 = (int) $c4;

        if $i32 < 48 goto label04;

        $i33 = (int) $c4;

        if $i33 > 57 goto label04;

        $i34 = (int) $c4;

        $i20 = $i34 - 48;

        b25 = (byte) $i20;

        goto label06;

     label04:
        $i35 = (int) $c4;

        if $i35 < 97 goto label05;

        $i36 = (int) $c4;

        if $i36 > 122 goto label05;

        $i37 = (int) $c4;

        $i18 = $i37 - 97;

        $i19 = $i18 + 10;

        b25 = (byte) $i19;

        goto label06;

     label05:
        $i38 = (int) $c4;

        if $i38 < 65 goto label10;

        $i39 = (int) $c4;

        if $i39 > 90 goto label10;

        $i40 = (int) $c4;

        $i5 = $i40 - 65;

        $i6 = $i5 + 10;

        b25 = (byte) $i6;

     label06:
        $i41 = (int) b25;

        $i26 = $i41 * 16;

        $b27 = (byte) $i26;

        $c28 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i24);

        $i42 = (int) $c28;

        if $i42 < 48 goto label07;

        $i43 = (int) $c28;

        if $i43 > 57 goto label07;

        $i44 = (int) $c28;

        $i15 = $i44 - 48;

        $b16 = (byte) $i15;

        $i45 = (int) $b27;

        $i46 = (int) $b16;

        $i17 = $i45 + $i46;

        b29 = (byte) $i17;

        goto label09;

     label07:
        $i47 = (int) $c28;

        if $i47 < 97 goto label08;

        $i48 = (int) $c28;

        if $i48 > 122 goto label08;

        $i49 = (int) $c28;

        $i11 = $i49 - 97;

        $i12 = $i11 + 10;

        $b13 = (byte) $i12;

        $i50 = (int) $b27;

        $i51 = (int) $b13;

        $i14 = $i50 + $i51;

        b29 = (byte) $i14;

        goto label09;

     label08:
        $i52 = (int) $c28;

        if $i52 < 65 goto label10;

        $i53 = (int) $c28;

        if $i53 > 90 goto label10;

        $i54 = (int) $c28;

        $i7 = $i54 - 65;

        $i8 = $i7 + 10;

        $b9 = (byte) $i8;

        $i55 = (int) $b27;

        $i56 = (int) $b9;

        $i10 = $i55 + $i56;

        b29 = (byte) $i10;

     label09:
        $i30 = i23;

        i23 = i23 + 1;

        r1[$i30] = b29;

     label10:
        i24 = i24 + 1;

     label11:
        if i24 < $i0 goto label01;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r1, 0, i23);

        return $r3;
    }
}
