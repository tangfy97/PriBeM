public class org.bouncycastle.crypto.engines.CamelliaEngine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private boolean initialised;
    private boolean _keyIs128;
    private static final int BLOCK_SIZE;
    private static final int MASK8;
    private int[] subkey;
    private int[] kw;
    private int[] ke;
    private int[] state;
    private static final int[] SIGMA;
    private static final int[] SBOX1_1110;
    private static final int[] SBOX4_4404;
    private static final int[] SBOX2_0222;
    private static final int[] SBOX3_3033;

    private static int rightRotate(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = i0 >>> i1;

        $i2 = 32 - i1;

        $i3 = i0 << $i2;

        $i5 = $i4 + $i3;

        return $i5;
    }

    private static int leftRotate(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = i0 << i1;

        $i2 = 32 - i1;

        $i3 = i0 >>> $i2;

        $i5 = $i4 + $i3;

        return $i5;
    }

    private static void roldq(int, int[], int, int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50;

        i3 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        r0 := @parameter3: int[];

        i0 := @parameter4: int;

        $i11 = 0 + i0;

        $i2 = 0 + i1;

        $i4 = r1[$i2];

        $i9 = $i4 << i3;

        $i5 = 1 + i1;

        $i7 = r1[$i5];

        $i6 = 32 - i3;

        $i8 = $i7 >>> $i6;

        $i10 = $i9 | $i8;

        r0[$i11] = $i10;

        $i20 = 1 + i0;

        $i12 = 1 + i1;

        $i13 = r1[$i12];

        $i18 = $i13 << i3;

        $i14 = 2 + i1;

        $i16 = r1[$i14];

        $i15 = 32 - i3;

        $i17 = $i16 >>> $i15;

        $i19 = $i18 | $i17;

        r0[$i20] = $i19;

        $i29 = 2 + i0;

        $i21 = 2 + i1;

        $i22 = r1[$i21];

        $i27 = $i22 << i3;

        $i23 = 3 + i1;

        $i25 = r1[$i23];

        $i24 = 32 - i3;

        $i26 = $i25 >>> $i24;

        $i28 = $i27 | $i26;

        r0[$i29] = $i28;

        $i38 = 3 + i0;

        $i30 = 3 + i1;

        $i31 = r1[$i30];

        $i36 = $i31 << i3;

        $i32 = 0 + i1;

        $i34 = r1[$i32];

        $i33 = 32 - i3;

        $i35 = $i34 >>> $i33;

        $i37 = $i36 | $i35;

        r0[$i38] = $i37;

        $i41 = 0 + i1;

        $i39 = 0 + i0;

        $i40 = r0[$i39];

        r1[$i41] = $i40;

        $i44 = 1 + i1;

        $i42 = 1 + i0;

        $i43 = r0[$i42];

        r1[$i44] = $i43;

        $i47 = 2 + i1;

        $i45 = 2 + i0;

        $i46 = r0[$i45];

        r1[$i47] = $i46;

        $i50 = 3 + i1;

        $i48 = 3 + i0;

        $i49 = r0[$i48];

        r1[$i50] = $i49;

        return;
    }

    private static void decroldq(int, int[], int, int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50;

        i3 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        r0 := @parameter3: int[];

        i0 := @parameter4: int;

        $i11 = 2 + i0;

        $i2 = 0 + i1;

        $i4 = r1[$i2];

        $i9 = $i4 << i3;

        $i5 = 1 + i1;

        $i7 = r1[$i5];

        $i6 = 32 - i3;

        $i8 = $i7 >>> $i6;

        $i10 = $i9 | $i8;

        r0[$i11] = $i10;

        $i20 = 3 + i0;

        $i12 = 1 + i1;

        $i13 = r1[$i12];

        $i18 = $i13 << i3;

        $i14 = 2 + i1;

        $i16 = r1[$i14];

        $i15 = 32 - i3;

        $i17 = $i16 >>> $i15;

        $i19 = $i18 | $i17;

        r0[$i20] = $i19;

        $i29 = 0 + i0;

        $i21 = 2 + i1;

        $i22 = r1[$i21];

        $i27 = $i22 << i3;

        $i23 = 3 + i1;

        $i25 = r1[$i23];

        $i24 = 32 - i3;

        $i26 = $i25 >>> $i24;

        $i28 = $i27 | $i26;

        r0[$i29] = $i28;

        $i38 = 1 + i0;

        $i30 = 3 + i1;

        $i31 = r1[$i30];

        $i36 = $i31 << i3;

        $i32 = 0 + i1;

        $i34 = r1[$i32];

        $i33 = 32 - i3;

        $i35 = $i34 >>> $i33;

        $i37 = $i36 | $i35;

        r0[$i38] = $i37;

        $i41 = 0 + i1;

        $i39 = 2 + i0;

        $i40 = r0[$i39];

        r1[$i41] = $i40;

        $i44 = 1 + i1;

        $i42 = 3 + i0;

        $i43 = r0[$i42];

        r1[$i44] = $i43;

        $i47 = 2 + i1;

        $i45 = 0 + i0;

        $i46 = r0[$i45];

        r1[$i47] = $i46;

        $i50 = 3 + i1;

        $i48 = 1 + i0;

        $i49 = r0[$i48];

        r1[$i50] = $i49;

        return;
    }

    private static void roldqo32(int, int[], int, int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;

        i3 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        r0 := @parameter3: int[];

        i0 := @parameter4: int;

        $i12 = 0 + i0;

        $i2 = 1 + i1;

        $i5 = r1[$i2];

        $i4 = i3 - 32;

        $i10 = $i5 << $i4;

        $i6 = 2 + i1;

        $i8 = r1[$i6];

        $i7 = 64 - i3;

        $i9 = $i8 >>> $i7;

        $i11 = $i10 | $i9;

        r0[$i12] = $i11;

        $i22 = 1 + i0;

        $i13 = 2 + i1;

        $i15 = r1[$i13];

        $i14 = i3 - 32;

        $i20 = $i15 << $i14;

        $i16 = 3 + i1;

        $i18 = r1[$i16];

        $i17 = 64 - i3;

        $i19 = $i18 >>> $i17;

        $i21 = $i20 | $i19;

        r0[$i22] = $i21;

        $i32 = 2 + i0;

        $i23 = 3 + i1;

        $i25 = r1[$i23];

        $i24 = i3 - 32;

        $i30 = $i25 << $i24;

        $i26 = 0 + i1;

        $i28 = r1[$i26];

        $i27 = 64 - i3;

        $i29 = $i28 >>> $i27;

        $i31 = $i30 | $i29;

        r0[$i32] = $i31;

        $i42 = 3 + i0;

        $i33 = 0 + i1;

        $i35 = r1[$i33];

        $i34 = i3 - 32;

        $i40 = $i35 << $i34;

        $i36 = 1 + i1;

        $i38 = r1[$i36];

        $i37 = 64 - i3;

        $i39 = $i38 >>> $i37;

        $i41 = $i40 | $i39;

        r0[$i42] = $i41;

        $i45 = 0 + i1;

        $i43 = 0 + i0;

        $i44 = r0[$i43];

        r1[$i45] = $i44;

        $i48 = 1 + i1;

        $i46 = 1 + i0;

        $i47 = r0[$i46];

        r1[$i48] = $i47;

        $i51 = 2 + i1;

        $i49 = 2 + i0;

        $i50 = r0[$i49];

        r1[$i51] = $i50;

        $i54 = 3 + i1;

        $i52 = 3 + i0;

        $i53 = r0[$i52];

        r1[$i54] = $i53;

        return;
    }

    private static void decroldqo32(int, int[], int, int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;

        i3 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        r0 := @parameter3: int[];

        i0 := @parameter4: int;

        $i12 = 2 + i0;

        $i2 = 1 + i1;

        $i5 = r1[$i2];

        $i4 = i3 - 32;

        $i10 = $i5 << $i4;

        $i6 = 2 + i1;

        $i8 = r1[$i6];

        $i7 = 64 - i3;

        $i9 = $i8 >>> $i7;

        $i11 = $i10 | $i9;

        r0[$i12] = $i11;

        $i22 = 3 + i0;

        $i13 = 2 + i1;

        $i15 = r1[$i13];

        $i14 = i3 - 32;

        $i20 = $i15 << $i14;

        $i16 = 3 + i1;

        $i18 = r1[$i16];

        $i17 = 64 - i3;

        $i19 = $i18 >>> $i17;

        $i21 = $i20 | $i19;

        r0[$i22] = $i21;

        $i32 = 0 + i0;

        $i23 = 3 + i1;

        $i25 = r1[$i23];

        $i24 = i3 - 32;

        $i30 = $i25 << $i24;

        $i26 = 0 + i1;

        $i28 = r1[$i26];

        $i27 = 64 - i3;

        $i29 = $i28 >>> $i27;

        $i31 = $i30 | $i29;

        r0[$i32] = $i31;

        $i42 = 1 + i0;

        $i33 = 0 + i1;

        $i35 = r1[$i33];

        $i34 = i3 - 32;

        $i40 = $i35 << $i34;

        $i36 = 1 + i1;

        $i38 = r1[$i36];

        $i37 = 64 - i3;

        $i39 = $i38 >>> $i37;

        $i41 = $i40 | $i39;

        r0[$i42] = $i41;

        $i45 = 0 + i1;

        $i43 = 2 + i0;

        $i44 = r0[$i43];

        r1[$i45] = $i44;

        $i48 = 1 + i1;

        $i46 = 3 + i0;

        $i47 = r0[$i46];

        r1[$i48] = $i47;

        $i51 = 2 + i1;

        $i49 = 0 + i0;

        $i50 = r0[$i49];

        r1[$i51] = $i50;

        $i54 = 3 + i1;

        $i52 = 1 + i0;

        $i53 = r0[$i52];

        r1[$i54] = $i53;

        return;
    }

    private int bytes2int(byte[], int)
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r1;
        byte[] r0;
        short $s3, $s7;
        byte $b2;
        int i0, $i1, $i4, i5, i6, $i8;

        r1 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= 4 goto label2;

        $i4 = i5 << 8;

        $i1 = i6 + i0;

        $b2 = r0[$i1];

        $s7 = (short) $b2;

        $s3 = $s7 & 255;

        $i8 = (int) $s3;

        i5 = $i4 + $i8;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    private void int2bytes(int, byte[], int)
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r1;
        byte[] r0;
        byte $b2;
        int i0, $i1, $i3, i4, i5;

        r1 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        i4 := @parameter0: int;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        i5 = 0;

     label1:
        if i5 >= 4 goto label2;

        $i1 = 3 - i5;

        $i3 = $i1 + i0;

        $b2 = (byte) i4;

        r0[$i3] = $b2;

        i4 = i4 >>> 8;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void camelliaF2(int[], int[], int)
    {
        int[] r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        org.bouncycastle.crypto.engines.CamelliaEngine r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88;

        r18 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        $i3 = r0[0];

        $i1 = 0 + i0;

        $i2 = r1[$i1];

        i69 = $i3 ^ $i2;

        $r2 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX4_4404>;

        $i4 = i69 & 255;

        i70 = $r2[$i4];

        $r3 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX3_3033>;

        $i5 = i69 >>> 8;

        $i6 = $i5 & 255;

        $i7 = $r3[$i6];

        i71 = i70 ^ $i7;

        $r4 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX2_0222>;

        $i8 = i69 >>> 16;

        $i9 = $i8 & 255;

        $i10 = $r4[$i9];

        i72 = i71 ^ $i10;

        $r5 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX1_1110>;

        $i11 = i69 >>> 24;

        $i12 = $i11 & 255;

        $i13 = $r5[$i12];

        i73 = i72 ^ $i13;

        $i16 = r0[1];

        $i14 = 1 + i0;

        $i15 = r1[$i14];

        i74 = $i16 ^ $i15;

        $r6 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX1_1110>;

        $i17 = i74 & 255;

        i75 = $r6[$i17];

        $r7 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX4_4404>;

        $i18 = i74 >>> 8;

        $i19 = $i18 & 255;

        $i20 = $r7[$i19];

        i76 = i75 ^ $i20;

        $r8 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX3_3033>;

        $i21 = i74 >>> 16;

        $i22 = $i21 & 255;

        $i23 = $r8[$i22];

        i77 = i76 ^ $i23;

        $r9 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX2_0222>;

        $i24 = i74 >>> 24;

        $i25 = $i24 & 255;

        $i26 = $r9[$i25];

        i78 = i77 ^ $i26;

        $i28 = r0[2];

        $i27 = i73 ^ i78;

        $i29 = $i28 ^ $i27;

        r0[2] = $i29;

        $i30 = r0[3];

        $i31 = i73 ^ i78;

        $i32 = staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: int rightRotate(int,int)>(i73, 8);

        $i33 = $i31 ^ $i32;

        $i34 = $i30 ^ $i33;

        r0[3] = $i34;

        $i37 = r0[2];

        $i35 = 2 + i0;

        $i36 = r1[$i35];

        i79 = $i37 ^ $i36;

        $r10 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX4_4404>;

        $i38 = i79 & 255;

        i80 = $r10[$i38];

        $r11 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX3_3033>;

        $i39 = i79 >>> 8;

        $i40 = $i39 & 255;

        $i41 = $r11[$i40];

        i81 = i80 ^ $i41;

        $r12 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX2_0222>;

        $i42 = i79 >>> 16;

        $i43 = $i42 & 255;

        $i44 = $r12[$i43];

        i82 = i81 ^ $i44;

        $r13 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX1_1110>;

        $i45 = i79 >>> 24;

        $i46 = $i45 & 255;

        $i47 = $r13[$i46];

        i83 = i82 ^ $i47;

        $i50 = r0[3];

        $i48 = 3 + i0;

        $i49 = r1[$i48];

        i84 = $i50 ^ $i49;

        $r14 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX1_1110>;

        $i51 = i84 & 255;

        i85 = $r14[$i51];

        $r15 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX4_4404>;

        $i52 = i84 >>> 8;

        $i53 = $i52 & 255;

        $i54 = $r15[$i53];

        i86 = i85 ^ $i54;

        $r16 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX3_3033>;

        $i55 = i84 >>> 16;

        $i56 = $i55 & 255;

        $i57 = $r16[$i56];

        i87 = i86 ^ $i57;

        $r17 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX2_0222>;

        $i58 = i84 >>> 24;

        $i59 = $i58 & 255;

        $i60 = $r17[$i59];

        i88 = i87 ^ $i60;

        $i62 = r0[0];

        $i61 = i83 ^ i88;

        $i63 = $i62 ^ $i61;

        r0[0] = $i63;

        $i64 = r0[1];

        $i65 = i83 ^ i88;

        $i66 = staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: int rightRotate(int,int)>(i83, 8);

        $i67 = $i65 ^ $i66;

        $i68 = $i64 ^ $i67;

        r0[1] = $i68;

        return;
    }

    private void camelliaFLs(int[], int[], int)
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r2;
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;

        r2 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        $i5 = r0[1];

        $i3 = r0[0];

        $i1 = 0 + i0;

        $i2 = r1[$i1];

        $i4 = $i3 & $i2;

        $i6 = staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: int leftRotate(int,int)>($i4, 1);

        $i7 = $i5 ^ $i6;

        r0[1] = $i7;

        $i12 = r0[0];

        $i8 = 1 + i0;

        $i10 = r1[$i8];

        $i9 = r0[1];

        $i11 = $i10 | $i9;

        $i13 = $i12 ^ $i11;

        r0[0] = $i13;

        $i18 = r0[2];

        $i14 = 3 + i0;

        $i16 = r1[$i14];

        $i15 = r0[3];

        $i17 = $i16 | $i15;

        $i19 = $i18 ^ $i17;

        r0[2] = $i19;

        $i24 = r0[3];

        $i20 = 2 + i0;

        $i22 = r1[$i20];

        $i21 = r0[2];

        $i23 = $i22 & $i21;

        $i25 = staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: int leftRotate(int,int)>($i23, 1);

        $i26 = $i24 ^ $i25;

        r0[3] = $i26;

        return;
    }

    private void setKey(boolean, byte[])
    {
        byte[] r4;
        int[] r0, r1, r2, r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104;
        org.bouncycastle.crypto.engines.CamelliaEngine r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, i82, i83, i84, $i86, $i88;
        boolean $z0, z1;
        java.lang.IllegalArgumentException $r106;

        r5 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        z1 := @parameter0: boolean;

        r4 := @parameter1: byte[];

        r0 = newarray (int)[8];

        r1 = newarray (int)[4];

        r2 = newarray (int)[4];

        r3 = newarray (int)[4];

        $i0 = lengthof r4;

        lookupswitch($i0)
        {
            case 16: goto label01;
            case 24: goto label02;
            case 32: goto label03;
            default: goto label04;
        };

     label01:
        r5.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean _keyIs128> = 1;

        $i78 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 0);

        r0[0] = $i78;

        $i79 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 4);

        r0[1] = $i79;

        $i80 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 8);

        r0[2] = $i80;

        $i81 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 12);

        r0[3] = $i81;

        r0[7] = 0;

        r0[6] = 0;

        r0[5] = 0;

        r0[4] = 0;

        goto label05;

     label02:
        $i68 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 0);

        r0[0] = $i68;

        $i69 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 4);

        r0[1] = $i69;

        $i70 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 8);

        r0[2] = $i70;

        $i71 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 12);

        r0[3] = $i71;

        $i72 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 16);

        r0[4] = $i72;

        $i73 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 20);

        r0[5] = $i73;

        $i74 = r0[4];

        $i86 = (int) -1;

        $i75 = $i74 ^ $i86;

        r0[6] = $i75;

        $i76 = r0[5];

        $i88 = (int) -1;

        $i77 = $i76 ^ $i88;

        r0[7] = $i77;

        r5.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean _keyIs128> = 0;

        goto label05;

     label03:
        $i1 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 0);

        r0[0] = $i1;

        $i2 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 4);

        r0[1] = $i2;

        $i3 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 8);

        r0[2] = $i3;

        $i4 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 12);

        r0[3] = $i4;

        $i5 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 16);

        r0[4] = $i5;

        $i6 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 20);

        r0[5] = $i6;

        $i7 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 24);

        r0[6] = $i7;

        $i8 = specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r4, 28);

        r0[7] = $i8;

        r5.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean _keyIs128> = 0;

        goto label05;

     label04:
        $r106 = new java.lang.IllegalArgumentException;

        specialinvoke $r106.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key sizes are only 16/24/32 bytes.");

        throw $r106;

     label05:
        i82 = 0;

     label06:
        if i82 >= 4 goto label07;

        $i66 = r0[i82];

        $i64 = i82 + 4;

        $i65 = r0[$i64];

        $i67 = $i66 ^ $i65;

        r1[i82] = $i67;

        i82 = i82 + 1;

        goto label06;

     label07:
        $r6 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SIGMA>;

        specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>(r1, $r6, 0);

        i83 = 0;

     label08:
        if i83 >= 4 goto label09;

        $i62 = r1[i83];

        $i61 = r0[i83];

        $i63 = $i62 ^ $i61;

        r1[i83] = $i63;

        i83 = i83 + 1;

        goto label08;

     label09:
        $r7 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SIGMA>;

        specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>(r1, $r7, 4);

        $z0 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean _keyIs128>;

        if $z0 == 0 goto label11;

        if z1 == 0 goto label10;

        $r83 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i49 = r0[0];

        $r83[0] = $i49;

        $r84 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i50 = r0[1];

        $r84[1] = $i50;

        $r85 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i51 = r0[2];

        $r85[2] = $i51;

        $r86 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i52 = r0[3];

        $r86[3] = $i52;

        $r87 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r0, 0, $r87, 4);

        $r88 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(30, r0, 0, $r88, 12);

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r0, 0, r3, 0);

        $r89 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i53 = r3[2];

        $r89[18] = $i53;

        $r90 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i54 = r3[3];

        $r90[19] = $i54;

        $r91 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r0, 0, $r91, 4);

        $r92 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r0, 0, $r92, 24);

        $r93 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r0, 0, $r93, 32);

        $r94 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i55 = r1[0];

        $r94[0] = $i55;

        $r95 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i56 = r1[1];

        $r95[1] = $i56;

        $r96 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i57 = r1[2];

        $r96[2] = $i57;

        $r97 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i58 = r1[3];

        $r97[3] = $i58;

        $r98 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r1, 0, $r98, 8);

        $r99 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r1, 0, $r99, 0);

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r1, 0, r3, 0);

        $r100 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i59 = r3[0];

        $r100[16] = $i59;

        $r101 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i60 = r3[1];

        $r101[17] = $i60;

        $r102 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r1, 0, $r102, 20);

        $r103 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(34, r1, 0, $r103, 28);

        $r104 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r1, 0, $r104, 4);

        goto label15;

     label10:
        $r61 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i37 = r0[0];

        $r61[4] = $i37;

        $r62 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i38 = r0[1];

        $r62[5] = $i38;

        $r63 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i39 = r0[2];

        $r63[6] = $i39;

        $r64 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i40 = r0[3];

        $r64[7] = $i40;

        $r65 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r0, 0, $r65, 28);

        $r66 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(30, r0, 0, $r66, 20);

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r0, 0, r3, 0);

        $r67 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i41 = r3[0];

        $r67[16] = $i41;

        $r68 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i42 = r3[1];

        $r68[17] = $i42;

        $r69 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(17, r0, 0, $r69, 0);

        $r70 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(17, r0, 0, $r70, 8);

        $r71 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(17, r0, 0, $r71, 0);

        $r72 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i43 = r1[0];

        $r72[34] = $i43;

        $r73 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i44 = r1[1];

        $r73[35] = $i44;

        $r74 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i45 = r1[2];

        $r74[32] = $i45;

        $r75 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i46 = r1[3];

        $r75[33] = $i46;

        $r76 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r1, 0, $r76, 24);

        $r77 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r1, 0, $r77, 4);

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r1, 0, r3, 0);

        $r78 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i47 = r3[2];

        $r78[18] = $i47;

        $r79 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i48 = r3[3];

        $r79[19] = $i48;

        $r80 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r1, 0, $r80, 12);

        $r81 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldqo32(int,int[],int,int[],int)>(34, r1, 0, $r81, 4);

        $r82 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r1, 0, $r82, 0);

        goto label15;

     label11:
        i84 = 0;

     label12:
        if i84 >= 4 goto label13;

        $i35 = r1[i84];

        $i33 = i84 + 4;

        $i34 = r0[$i33];

        $i36 = $i35 ^ $i34;

        r2[i84] = $i36;

        i84 = i84 + 1;

        goto label12;

     label13:
        $r8 = <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SIGMA>;

        specialinvoke r5.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>(r2, $r8, 8);

        if z1 == 0 goto label14;

        $r35 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i21 = r0[0];

        $r35[0] = $i21;

        $r36 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i22 = r0[1];

        $r36[1] = $i22;

        $r37 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i23 = r0[2];

        $r37[2] = $i23;

        $r38 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i24 = r0[3];

        $r38[3] = $i24;

        $r39 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(45, r0, 0, $r39, 16);

        $r40 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r0, 0, $r40, 4);

        $r41 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(17, r0, 0, $r41, 32);

        $r42 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(34, r0, 0, $r42, 44);

        $r43 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r0, 4, $r43, 4);

        $r44 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r0, 4, $r44, 0);

        $r45 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(30, r0, 4, $r45, 24);

        $r46 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(34, r0, 4, $r46, 36);

        $r47 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(15, r1, 0, $r47, 8);

        $r48 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(30, r1, 0, $r48, 20);

        $r49 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i25 = r1[1];

        $r49[8] = $i25;

        $r50 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i26 = r1[2];

        $r50[9] = $i26;

        $r51 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i27 = r1[3];

        $r51[10] = $i27;

        $r52 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i28 = r1[0];

        $r52[11] = $i28;

        $r53 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(49, r1, 0, $r53, 40);

        $r54 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i29 = r2[0];

        $r54[0] = $i29;

        $r55 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i30 = r2[1];

        $r55[1] = $i30;

        $r56 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i31 = r2[2];

        $r56[2] = $i31;

        $r57 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i32 = r2[3];

        $r57[3] = $i32;

        $r58 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(30, r2, 0, $r58, 12);

        $r59 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldq(int,int[],int,int[],int)>(30, r2, 0, $r59, 28);

        $r60 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(51, r2, 0, $r60, 4);

        goto label15;

     label14:
        $r9 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i9 = r0[0];

        $r9[4] = $i9;

        $r10 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i10 = r0[1];

        $r10[5] = $i10;

        $r11 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i11 = r0[2];

        $r11[6] = $i11;

        $r12 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i12 = r0[3];

        $r12[7] = $i12;

        $r13 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldqo32(int,int[],int,int[],int)>(45, r0, 0, $r13, 28);

        $r14 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r0, 0, $r14, 4);

        $r15 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(17, r0, 0, $r15, 12);

        $r16 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldqo32(int,int[],int,int[],int)>(34, r0, 0, $r16, 0);

        $r17 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r0, 4, $r17, 40);

        $r18 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r0, 4, $r18, 8);

        $r19 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(30, r0, 4, $r19, 20);

        $r20 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldqo32(int,int[],int,int[],int)>(34, r0, 4, $r20, 8);

        $r21 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(15, r1, 0, $r21, 36);

        $r22 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(30, r1, 0, $r22, 24);

        $r23 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i13 = r1[1];

        $r23[2] = $i13;

        $r24 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i14 = r1[2];

        $r24[3] = $i14;

        $r25 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i15 = r1[3];

        $r25[0] = $i15;

        $r26 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        $i16 = r1[0];

        $r26[1] = $i16;

        $r27 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldqo32(int,int[],int,int[],int)>(49, r1, 0, $r27, 4);

        $r28 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i17 = r2[0];

        $r28[46] = $i17;

        $r29 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i18 = r2[1];

        $r29[47] = $i18;

        $r30 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i19 = r2[2];

        $r30[44] = $i19;

        $r31 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        $i20 = r2[3];

        $r31[45] = $i20;

        $r32 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(30, r2, 0, $r32, 32);

        $r33 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void decroldq(int,int[],int,int[],int)>(30, r2, 0, $r33, 16);

        $r34 = r5.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        staticinvoke <org.bouncycastle.crypto.engines.CamelliaEngine: void roldqo32(int,int[],int,int[],int)>(51, r2, 0, $r34, 0);

     label15:
        return;
    }

    private int processBlock128(byte[], int, byte[], int)
    {
        byte[] r32, r36;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r37, $r38, $r39;
        org.bouncycastle.crypto.engines.CamelliaEngine r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r36 := @parameter0: byte[];

        i20 := @parameter1: int;

        r32 := @parameter2: byte[];

        i12 := @parameter3: int;

        i27 = 0;

     label1:
        if i27 >= 4 goto label2;

        $r37 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i21 = i27 * 4;

        $i22 = i20 + $i21;

        $i23 = specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r36, $i22);

        $r37[i27] = $i23;

        $r38 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i25 = $r38[i27];

        $r39 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i24 = $r39[i27];

        $i26 = $i25 ^ $i24;

        $r38[i27] = $i26;

        i27 = i27 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r1 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r2, $r1, 0);

        $r4 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r3 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r4, $r3, 4);

        $r6 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r5 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r6, $r5, 8);

        $r8 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r7 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaFLs(int[],int[],int)>($r8, $r7, 0);

        $r10 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r9 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r10, $r9, 12);

        $r12 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r11 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r12, $r11, 16);

        $r14 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r13 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r14, $r13, 20);

        $r16 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r15 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaFLs(int[],int[],int)>($r16, $r15, 4);

        $r18 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r17 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r18, $r17, 24);

        $r20 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r19 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r20, $r19, 28);

        $r22 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r21 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r22, $r21, 32);

        $r23 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i1 = $r23[2];

        $r24 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i0 = $r24[4];

        $i2 = $i1 ^ $i0;

        $r23[2] = $i2;

        $r25 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i4 = $r25[3];

        $r26 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i3 = $r26[5];

        $i5 = $i4 ^ $i3;

        $r25[3] = $i5;

        $r27 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i7 = $r27[0];

        $r28 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i6 = $r28[6];

        $i8 = $i7 ^ $i6;

        $r27[0] = $i8;

        $r29 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i10 = $r29[1];

        $r30 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i9 = $r30[7];

        $i11 = $i10 ^ $i9;

        $r29[1] = $i11;

        $r31 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i13 = $r31[2];

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i13, r32, i12);

        $r33 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i15 = $r33[3];

        $i14 = i12 + 4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i15, r32, $i14);

        $r34 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i17 = $r34[0];

        $i16 = i12 + 8;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i17, r32, $i16);

        $r35 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i19 = $r35[1];

        $i18 = i12 + 12;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i19, r32, $i18);

        return 16;
    }

    private int processBlock192or256(byte[], int, byte[], int)
    {
        byte[] r40, r44;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r46, $r47;
        org.bouncycastle.crypto.engines.CamelliaEngine r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r44 := @parameter0: byte[];

        i20 := @parameter1: int;

        r40 := @parameter2: byte[];

        i12 := @parameter3: int;

        i27 = 0;

     label1:
        if i27 >= 4 goto label2;

        $r45 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i21 = i27 * 4;

        $i22 = i20 + $i21;

        $i23 = specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int bytes2int(byte[],int)>(r44, $i22);

        $r45[i27] = $i23;

        $r46 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i25 = $r46[i27];

        $r47 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i24 = $r47[i27];

        $i26 = $i25 ^ $i24;

        $r46[i27] = $i26;

        i27 = i27 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r1 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r2, $r1, 0);

        $r4 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r3 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r4, $r3, 4);

        $r6 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r5 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r6, $r5, 8);

        $r8 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r7 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaFLs(int[],int[],int)>($r8, $r7, 0);

        $r10 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r9 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r10, $r9, 12);

        $r12 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r11 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r12, $r11, 16);

        $r14 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r13 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r14, $r13, 20);

        $r16 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r15 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaFLs(int[],int[],int)>($r16, $r15, 4);

        $r18 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r17 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r18, $r17, 24);

        $r20 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r19 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r20, $r19, 28);

        $r22 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r21 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r22, $r21, 32);

        $r24 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r23 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaFLs(int[],int[],int)>($r24, $r23, 8);

        $r26 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r25 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r26, $r25, 36);

        $r28 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r27 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r28, $r27, 40);

        $r30 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $r29 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void camelliaF2(int[],int[],int)>($r30, $r29, 44);

        $r31 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i1 = $r31[2];

        $r32 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i0 = $r32[4];

        $i2 = $i1 ^ $i0;

        $r31[2] = $i2;

        $r33 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i4 = $r33[3];

        $r34 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i3 = $r34[5];

        $i5 = $i4 ^ $i3;

        $r33[3] = $i5;

        $r35 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i7 = $r35[0];

        $r36 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i6 = $r36[6];

        $i8 = $i7 ^ $i6;

        $r35[0] = $i8;

        $r37 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i10 = $r37[1];

        $r38 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw>;

        $i9 = $r38[7];

        $i11 = $i10 ^ $i9;

        $r37[1] = $i11;

        $r39 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i13 = $r39[2];

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i13, r40, i12);

        $r41 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i15 = $r41[3];

        $i14 = i12 + 4;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i15, r40, $i14);

        $r42 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i17 = $r42[0];

        $i16 = i12 + 8;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i17, r40, $i16);

        $r43 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state>;

        $i19 = $r43[1];

        $i18 = i12 + 12;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: void int2bytes(int,byte[],int)>($i19, r40, $i18);

        return 16;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r0;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean initialised> = 0;

        $r1 = newarray (int)[96];

        r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] subkey> = $r1;

        $r2 = newarray (int)[8];

        r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] kw> = $r2;

        $r3 = newarray (int)[12];

        r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] ke> = $r3;

        $r4 = newarray (int)[4];

        r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int[] state> = $r4;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r1;
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;
        org.bouncycastle.crypto.params.KeyParameter $r2;
        org.bouncycastle.crypto.CipherParameters r0;
        boolean $z0, z1;

        r1 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only simple KeyParameter expected.");

        throw $r4;

     label1:
        $r2 = (org.bouncycastle.crypto.params.KeyParameter) r0;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        specialinvoke r1.<org.bouncycastle.crypto.engines.CamelliaEngine: void setKey(boolean,byte[])>(z1, $r3);

        r1.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean initialised> = 1;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        return "Camellia";
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        return 16;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r0;
        byte[] r1, r2;
        java.lang.IllegalStateException $r5;
        org.bouncycastle.crypto.DataLengthException $r3, $r4;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i3 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean initialised>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Camellia engine not initialised");

        throw $r5;

     label1:
        $i2 = i0 + 16;

        $i1 = lengthof r1;

        if $i2 <= $i1 goto label2;

        $r4 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r4;

     label2:
        $i5 = i3 + 16;

        $i4 = lengthof r2;

        if $i5 <= $i4 goto label3;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r3;

     label3:
        $z1 = r0.<org.bouncycastle.crypto.engines.CamelliaEngine: boolean _keyIs128>;

        if $z1 == 0 goto label4;

        $i7 = specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int processBlock128(byte[],int,byte[],int)>(r1, i0, r2, i3);

        return $i7;

     label4:
        $i6 = specialinvoke r0.<org.bouncycastle.crypto.engines.CamelliaEngine: int processBlock192or256(byte[],int,byte[],int)>(r1, i0, r2, i3);

        return $i6;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.CamelliaEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CamelliaEngine;

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4;
        int $i1;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int MASK8> = 255;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int BLOCK_SIZE> = 16;

        $r0 = newarray (int)[12];

        $r0[0] = -1600231809;

        $r0[1] = 1003262091;

        $r0[2] = -1233459112;

        $r0[3] = 1286239154;

        $r0[4] = -957401297;

        $r0[5] = -380665154;

        $r0[6] = 1426019237;

        $r0[7] = -237801700;

        $r0[8] = 283453434;

        $r0[9] = -563598051;

        $r0[10] = -1336506174;

        $r0[11] = -1276722691;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SIGMA> = $r0;

        $r1 = newarray (int)[256];

        $r1[0] = 1886416896;

        $r1[1] = -2105376256;

        $r1[2] = 741092352;

        $r1[3] = -320017408;

        $r1[4] = -1280068864;

        $r1[5] = 656877312;

        $r1[6] = -1061109760;

        $r1[7] = -437918464;

        $r1[8] = -454761472;

        $r1[9] = -2054847232;

        $r1[10] = 1465341696;

        $r1[11] = 892679424;

        $r1[12] = -353703424;

        $r1[13] = 202116096;

        $r1[14] = -1364283904;

        $r1[15] = 1094795520;

        $r1[16] = 589505280;

        $r1[17] = -269488384;

        $r1[18] = 1802201856;

        $r1[19] = -1819045120;

        $r1[20] = 1162167552;

        $r1[21] = 421075200;

        $r1[22] = -1515870976;

        $r1[23] = 555819264;

        $r1[24] = -303174400;

        $r1[25] = 235802112;

        $r1[26] = 1330597632;

        $r1[27] = 1313754624;

        $r1[28] = 488447232;

        $r1[29] = 1701143808;

        $r1[30] = -1835888128;

        $r1[31] = -1111638784;

        $r1[32] = -2038004224;

        $r1[33] = -1195853824;

        $r1[34] = -1347440896;

        $r1[35] = -1886417152;

        $r1[36] = 2088532992;

        $r1[37] = -336860416;

        $r1[38] = 522133248;

        $r1[39] = -825307648;

        $r1[40] = 1044266496;

        $r1[41] = 808464384;

        $r1[42] = -589505536;

        $r1[43] = 1600085760;

        $r1[44] = 1583242752;

        $r1[45] = -976894720;

        $r1[46] = 185273088;

        $r1[47] = 437918208;

        $r1[48] = -1499027968;

        $r1[49] = -505290496;

        $r1[50] = 960051456;

        $r1[51] = -892679680;

        $r1[52] = -707406592;

        $r1[53] = 1195853568;

        $r1[54] = 1566399744;

        $r1[55] = 1027423488;

        $r1[56] = -640034560;

        $r1[57] = 16843008;

        $r1[58] = 1515870720;

        $r1[59] = -690563584;

        $r1[60] = 1364283648;

        $r1[61] = 1448498688;

        $r1[62] = 1819044864;

        $r1[63] = 1296911616;

        $r1[64] = -1953789184;

        $r1[65] = 218959104;

        $r1[66] = -1701144064;

        $r1[67] = 1717986816;

        $r1[68] = -67372288;

        $r1[69] = -858993664;

        $r1[70] = -1330597888;

        $r1[71] = 757935360;

        $r1[72] = 1953788928;

        $r1[73] = 303174144;

        $r1[74] = 724249344;

        $r1[75] = 538976256;

        $r1[76] = -252645376;

        $r1[77] = -1313754880;

        $r1[78] = -2071690240;

        $r1[79] = -1717987072;

        $r1[80] = -538976512;

        $r1[81] = 1280068608;

        $r1[82] = -875836672;

        $r1[83] = -1027423744;

        $r1[84] = 875836416;

        $r1[85] = 2122219008;

        $r1[86] = 1987474944;

        $r1[87] = 84215040;

        $r1[88] = 1835887872;

        $r1[89] = -1212696832;

        $r1[90] = -1448498944;

        $r1[91] = 825307392;

        $r1[92] = -774778624;

        $r1[93] = 387389184;

        $r1[94] = 67372032;

        $r1[95] = -673720576;

        $r1[96] = 336860160;

        $r1[97] = 1482184704;

        $r1[98] = 976894464;

        $r1[99] = 1633771776;

        $r1[100] = -555819520;

        $r1[101] = 454761216;

        $r1[102] = 286331136;

        $r1[103] = 471604224;

        $r1[104] = 842150400;

        $r1[105] = 252645120;

        $r1[106] = -1667458048;

        $r1[107] = 370546176;

        $r1[108] = 1397969664;

        $r1[109] = 404232192;

        $r1[110] = -218959360;

        $r1[111] = 572662272;

        $r1[112] = -16843264;

        $r1[113] = 1145324544;

        $r1[114] = -808464640;

        $r1[115] = -1296911872;

        $r1[116] = -1010580736;

        $r1[117] = -1246382848;

        $r1[118] = 2054846976;

        $r1[119] = -1852731136;

        $r1[120] = 606348288;

        $r1[121] = 134744064;

        $r1[122] = -387389440;

        $r1[123] = -1465341952;

        $r1[124] = 1616928768;

        $r1[125] = -50529280;

        $r1[126] = 1768515840;

        $r1[127] = 1347440640;

        $r1[128] = -1431655936;

        $r1[129] = -791621632;

        $r1[130] = -1600086016;

        $r1[131] = 2105376000;

        $r1[132] = -1583243008;

        $r1[133] = -1987475200;

        $r1[134] = 1650614784;

        $r1[135] = -1751673088;

        $r1[136] = 1414812672;

        $r1[137] = 1532713728;

        $r1[138] = 505290240;

        $r1[139] = -1785359104;

        $r1[140] = -522133504;

        $i1 = (int) -256;

        $r1[141] = $i1;

        $r1[142] = 1684300800;

        $r1[143] = -757935616;

        $r1[144] = 269488128;

        $r1[145] = -993737728;

        $r1[146] = 0;

        $r1[147] = 1212696576;

        $r1[148] = -1549556992;

        $r1[149] = -134744320;

        $r1[150] = 1970631936;

        $r1[151] = -606348544;

        $r1[152] = -1970632192;

        $r1[153] = 50529024;

        $r1[154] = -421075456;

        $r1[155] = -623191552;

        $r1[156] = 151587072;

        $r1[157] = 1061109504;

        $r1[158] = -572662528;

        $r1[159] = -1802202112;

        $r1[160] = -2021161216;

        $r1[161] = 1549556736;

        $r1[162] = -2088533248;

        $r1[163] = 33686016;

        $r1[164] = -842150656;

        $r1[165] = 1246382592;

        $r1[166] = -1869574144;

        $r1[167] = 858993408;

        $r1[168] = 1936945920;

        $r1[169] = 1734829824;

        $r1[170] = -151587328;

        $r1[171] = -202116352;

        $r1[172] = -1650615040;

        $r1[173] = 2139062016;

        $r1[174] = -1077952768;

        $r1[175] = -488447488;

        $r1[176] = 1381126656;

        $r1[177] = -1684301056;

        $r1[178] = -656877568;

        $r1[179] = 640034304;

        $r1[180] = -926365696;

        $r1[181] = 926365440;

        $r1[182] = -960051712;

        $r1[183] = 993737472;

        $r1[184] = -2122219264;

        $r1[185] = -1768516096;

        $r1[186] = 1869573888;

        $r1[187] = 1263225600;

        $r1[188] = 320017152;

        $r1[189] = -1094795776;

        $r1[190] = 1667457792;

        $r1[191] = 774778368;

        $r1[192] = -370546432;

        $r1[193] = 2038003968;

        $r1[194] = -1482184960;

        $r1[195] = -1936946176;

        $r1[196] = -1616929024;

        $r1[197] = 1852730880;

        $r1[198] = -1128481792;

        $r1[199] = -1903260160;

        $r1[200] = 690563328;

        $r1[201] = -168430336;

        $r1[202] = -101058304;

        $r1[203] = -1229539840;

        $r1[204] = 791621376;

        $r1[205] = -33686272;

        $r1[206] = -1263225856;

        $r1[207] = 1499027712;

        $r1[208] = 2021160960;

        $r1[209] = -1734830080;

        $r1[210] = 101058048;

        $r1[211] = 1785358848;

        $r1[212] = -404232448;

        $r1[213] = 1179010560;

        $r1[214] = 1903259904;

        $r1[215] = -1162167808;

        $r1[216] = -724249600;

        $r1[217] = 623191296;

        $r1[218] = -1414812928;

        $r1[219] = 1111638528;

        $r1[220] = -2004318208;

        $r1[221] = -1566400000;

        $r1[222] = -1920103168;

        $r1[223] = -84215296;

        $r1[224] = 1920102912;

        $r1[225] = 117901056;

        $r1[226] = -1179010816;

        $r1[227] = 1431655680;

        $r1[228] = -117901312;

        $r1[229] = -286331392;

        $r1[230] = -1397969920;

        $r1[231] = 168430080;

        $r1[232] = 909522432;

        $r1[233] = 1229539584;

        $r1[234] = 707406336;

        $r1[235] = 1751672832;

        $r1[236] = 1010580480;

        $r1[237] = 943208448;

        $r1[238] = -235802368;

        $r1[239] = -1532713984;

        $r1[240] = 1077952512;

        $r1[241] = 673720320;

        $r1[242] = -741092608;

        $r1[243] = 2071689984;

        $r1[244] = -1145324800;

        $r1[245] = -909522688;

        $r1[246] = 1128481536;

        $r1[247] = -1044266752;

        $r1[248] = 353703168;

        $r1[249] = -471604480;

        $r1[250] = -1381126912;

        $r1[251] = -185273344;

        $r1[252] = 2004317952;

        $r1[253] = -943208704;

        $r1[254] = -2139062272;

        $r1[255] = -1633772032;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX1_1110> = $r1;

        $r2 = newarray (int)[256];

        $r2[0] = 1886388336;

        $r2[1] = 741081132;

        $r2[2] = -1280114509;

        $r2[3] = -1061158720;

        $r2[4] = -454819612;

        $r2[5] = 1465319511;

        $r2[6] = -353763094;

        $r2[7] = -1364328274;

        $r2[8] = 589496355;

        $r2[9] = 1802174571;

        $r2[10] = 1162149957;

        $r2[11] = -1515913051;

        $r2[12] = -303234835;

        $r2[13] = 1330577487;

        $r2[14] = 488439837;

        $r2[15] = -1835925358;

        $r2[16] = -2038038394;

        $r2[17] = -1347485521;

        $r2[18] = 2088501372;

        $r2[19] = 522125343;

        $r2[20] = 1044250686;

        $r2[21] = -589561636;

        $r2[22] = 1583218782;

        $r2[23] = 185270283;

        $r2[24] = -1499070298;

        $r2[25] = 960036921;

        $r2[26] = -707460907;

        $r2[27] = 1566376029;

        $r2[28] = -640089895;

        $r2[29] = 1515847770;

        $r2[30] = 1364262993;

        $r2[31] = 1819017324;

        $r2[32] = -1953824629;

        $r2[33] = -1701183334;

        $r2[34] = -67436293;

        $r2[35] = -1330642768;

        $r2[36] = 1953759348;

        $r2[37] = 724238379;

        $r2[38] = -252706576;

        $r2[39] = -2071723900;

        $r2[40] = -539033377;

        $r2[41] = -875888437;

        $r2[42] = 875823156;

        $r2[43] = 1987444854;

        $r2[44] = 1835860077;

        $r2[45] = -1448542039;

        $r2[46] = -774831919;

        $r2[47] = 67371012;

        $r2[48] = 336855060;

        $r2[49] = 976879674;

        $r2[50] = -555876130;

        $r2[51] = 286326801;

        $r2[52] = 842137650;

        $r2[53] = -1667497828;

        $r2[54] = 1397948499;

        $r2[55] = -219021070;

        $r2[56] = -16908034;

        $r2[57] = -808517425;

        $r2[58] = -1010630461;

        $r2[59] = 2054815866;

        $r2[60] = 606339108;

        $r2[61] = -387448600;

        $r2[62] = 1616904288;

        $r2[63] = 1768489065;

        $r2[64] = -1431699286;

        $r2[65] = -1600126816;

        $r2[66] = -1583284063;

        $r2[67] = 1650589794;

        $r2[68] = 1414791252;

        $r2[69] = 505282590;

        $r2[70] = -522190624;

        $r2[71] = 1684275300;

        $r2[72] = 269484048;

        $r2[73] = 0;

        $r2[74] = -1549598557;

        $r2[75] = 1970602101;

        $r2[76] = -1970667382;

        $r2[77] = -421134106;

        $r2[78] = 151584777;

        $r2[79] = -572718883;

        $r2[80] = -2021195641;

        $r2[81] = -2088566653;

        $r2[82] = -842202931;

        $r2[83] = -1869610864;

        $r2[84] = 1936916595;

        $r2[85] = -151650058;

        $r2[86] = -1650655075;

        $r2[87] = -1078001473;

        $r2[88] = 1381105746;

        $r2[89] = -656932648;

        $r2[90] = -926416696;

        $r2[91] = -960102202;

        $r2[92] = -2122252159;

        $r2[93] = 1869545583;

        $r2[94] = 320012307;

        $r2[95] = 1667432547;

        $r2[96] = -370605847;

        $r2[97] = -1482227545;

        $r2[98] = -1616969569;

        $r2[99] = -1128529732;

        $r2[100] = 690552873;

        $r2[101] = -101121799;

        $r2[102] = 791609391;

        $r2[103] = -1263271756;

        $r2[104] = 2021130360;

        $r2[105] = 101056518;

        $r2[106] = -404291353;

        $r2[107] = 1903231089;

        $r2[108] = -724303660;

        $r2[109] = -1414856533;

        $r2[110] = -2004352888;

        $r2[111] = -1920139123;

        $r2[112] = 1920073842;

        $r2[113] = -1179057991;

        $r2[114] = -117964552;

        $r2[115] = -1398013780;

        $r2[116] = 909508662;

        $r2[117] = 707395626;

        $r2[118] = 1010565180;

        $r2[119] = -235863823;

        $r2[120] = 1077936192;

        $r2[121] = -741146413;

        $r2[122] = -1145372485;

        $r2[123] = 1128464451;

        $r2[124] = 353697813;

        $r2[125] = -1381171027;

        $r2[126] = 2004287607;

        $r2[127] = -2139094912;

        $r2[128] = -2105409406;

        $r2[129] = -320077588;

        $r2[130] = 656867367;

        $r2[131] = -437976859;

        $r2[132] = -2054881147;

        $r2[133] = 892665909;

        $r2[134] = 202113036;

        $r2[135] = 1094778945;

        $r2[136] = -269549329;

        $r2[137] = -1819082605;

        $r2[138] = 421068825;

        $r2[139] = 555810849;

        $r2[140] = 235798542;

        $r2[141] = 1313734734;

        $r2[142] = 1701118053;

        $r2[143] = -1111686979;

        $r2[144] = -1195900744;

        $r2[145] = -1886453617;

        $r2[146] = -336920341;

        $r2[147] = -825360178;

        $r2[148] = 808452144;

        $r2[149] = 1600061535;

        $r2[150] = -976944955;

        $r2[151] = 437911578;

        $r2[152] = -505347871;

        $r2[153] = -892731190;

        $r2[154] = 1195835463;

        $r2[155] = 1027407933;

        $r2[156] = 16842753;

        $r2[157] = -690618154;

        $r2[158] = 1448476758;

        $r2[159] = 1296891981;

        $r2[160] = 218955789;

        $r2[161] = 1717960806;

        $r2[162] = -859045684;

        $r2[163] = 757923885;

        $r2[164] = 303169554;

        $r2[165] = 538968096;

        $r2[166] = -1313800015;

        $r2[167] = -1718026087;

        $r2[168] = 1280049228;

        $r2[169] = -1027473214;

        $r2[170] = 2122186878;

        $r2[171] = 84213765;

        $r2[172] = -1212743497;

        $r2[173] = 825294897;

        $r2[174] = 387383319;

        $r2[175] = -673775401;

        $r2[176] = 1482162264;

        $r2[177] = 1633747041;

        $r2[178] = 454754331;

        $r2[179] = 471597084;

        $r2[180] = 252641295;

        $r2[181] = 370540566;

        $r2[182] = 404226072;

        $r2[183] = 572653602;

        $r2[184] = 1145307204;

        $r2[185] = -1296957262;

        $r2[186] = -1246429003;

        $r2[187] = -1852768111;

        $r2[188] = 134742024;

        $r2[189] = -1465384792;

        $r2[190] = -50593540;

        $r2[191] = 1347420240;

        $r2[192] = -791674672;

        $r2[193] = 2105344125;

        $r2[194] = -1987510135;

        $r2[195] = -1751711593;

        $r2[196] = 1532690523;

        $r2[197] = -1785397099;

        $r2[198] = -65281;

        $r2[199] = -757989166;

        $r2[200] = -993787708;

        $r2[201] = 1212678216;

        $r2[202] = -134807305;

        $r2[203] = -606404389;

        $r2[204] = 50528259;

        $r2[205] = -623247142;

        $r2[206] = 1061093439;

        $r2[207] = -1802239852;

        $r2[208] = 1549533276;

        $r2[209] = 33685506;

        $r2[210] = 1246363722;

        $r2[211] = 858980403;

        $r2[212] = 1734803559;

        $r2[213] = -202178317;

        $r2[214] = 2139029631;

        $r2[215] = -488505118;

        $r2[216] = -1684340581;

        $r2[217] = 640024614;

        $r2[218] = 926351415;

        $r2[219] = 993722427;

        $r2[220] = -1768554346;

        $r2[221] = 1263206475;

        $r2[222] = -1094844226;

        $r2[223] = 774766638;

        $r2[224] = 2037973113;

        $r2[225] = -1936981876;

        $r2[226] = 1852702830;

        $r2[227] = -1903296370;

        $r2[228] = -168492811;

        $r2[229] = -1229586250;

        $r2[230] = -33750787;

        $r2[231] = 1499005017;

        $r2[232] = -1734868840;

        $r2[233] = 1785331818;

        $r2[234] = 1178992710;

        $r2[235] = -1162215238;

        $r2[236] = 623181861;

        $r2[237] = 1111621698;

        $r2[238] = -1566441310;

        $r2[239] = -84279046;

        $r2[240] = 117899271;

        $r2[241] = 1431634005;

        $r2[242] = -286392082;

        $r2[243] = 168427530;

        $r2[244] = 1229520969;

        $r2[245] = 1751646312;

        $r2[246] = 943194168;

        $r2[247] = -1532755804;

        $r2[248] = 673710120;

        $r2[249] = 2071658619;

        $r2[250] = -909573943;

        $r2[251] = -1044315967;

        $r2[252] = -471662365;

        $r2[253] = -185335564;

        $r2[254] = -943259449;

        $r2[255] = -1633812322;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX4_4404> = $r2;

        $r3 = newarray (int)[256];

        $r3[0] = 14737632;

        $r3[1] = 328965;

        $r3[2] = 5789784;

        $r3[3] = 14277081;

        $r3[4] = 6776679;

        $r3[5] = 5131854;

        $r3[6] = 8487297;

        $r3[7] = 13355979;

        $r3[8] = 13224393;

        $r3[9] = 723723;

        $r3[10] = 11447982;

        $r3[11] = 6974058;

        $r3[12] = 14013909;

        $r3[13] = 1579032;

        $r3[14] = 6118749;

        $r3[15] = 8553090;

        $r3[16] = 4605510;

        $r3[17] = 14671839;

        $r3[18] = 14079702;

        $r3[19] = 2565927;

        $r3[20] = 9079434;

        $r3[21] = 3289650;

        $r3[22] = 4934475;

        $r3[23] = 4342338;

        $r3[24] = 14408667;

        $r3[25] = 1842204;

        $r3[26] = 10395294;

        $r3[27] = 10263708;

        $r3[28] = 3815994;

        $r3[29] = 13290186;

        $r3[30] = 2434341;

        $r3[31] = 8092539;

        $r3[32] = 855309;

        $r3[33] = 7434609;

        $r3[34] = 6250335;

        $r3[35] = 2039583;

        $r3[36] = 16316664;

        $r3[37] = 14145495;

        $r3[38] = 4079166;

        $r3[39] = 10329501;

        $r3[40] = 8158332;

        $r3[41] = 6316128;

        $r3[42] = 12171705;

        $r3[43] = 12500670;

        $r3[44] = 12369084;

        $r3[45] = 9145227;

        $r3[46] = 1447446;

        $r3[47] = 3421236;

        $r3[48] = 5066061;

        $r3[49] = 12829635;

        $r3[50] = 7500402;

        $r3[51] = 9803157;

        $r3[52] = 11250603;

        $r3[53] = 9342606;

        $r3[54] = 12237498;

        $r3[55] = 8026746;

        $r3[56] = 11776947;

        $r3[57] = 131586;

        $r3[58] = 11842740;

        $r3[59] = 11382189;

        $r3[60] = 10658466;

        $r3[61] = 11316396;

        $r3[62] = 14211288;

        $r3[63] = 10132122;

        $r3[64] = 1513239;

        $r3[65] = 1710618;

        $r3[66] = 3487029;

        $r3[67] = 13421772;

        $r3[68] = 16250871;

        $r3[69] = 10066329;

        $r3[70] = 6381921;

        $r3[71] = 5921370;

        $r3[72] = 15263976;

        $r3[73] = 2368548;

        $r3[74] = 5658198;

        $r3[75] = 4210752;

        $r3[76] = 14803425;

        $r3[77] = 6513507;

        $r3[78] = 592137;

        $r3[79] = 3355443;

        $r3[80] = 12566463;

        $r3[81] = 10000536;

        $r3[82] = 9934743;

        $r3[83] = 8750469;

        $r3[84] = 6842472;

        $r3[85] = 16579836;

        $r3[86] = 15527148;

        $r3[87] = 657930;

        $r3[88] = 14342874;

        $r3[89] = 7303023;

        $r3[90] = 5460819;

        $r3[91] = 6447714;

        $r3[92] = 10724259;

        $r3[93] = 3026478;

        $r3[94] = 526344;

        $r3[95] = 11513775;

        $r3[96] = 2631720;

        $r3[97] = 11579568;

        $r3[98] = 7631988;

        $r3[99] = 12763842;

        $r3[100] = 12434877;

        $r3[101] = 3552822;

        $r3[102] = 2236962;

        $r3[103] = 3684408;

        $r3[104] = 6579300;

        $r3[105] = 1973790;

        $r3[106] = 3750201;

        $r3[107] = 2894892;

        $r3[108] = 10921638;

        $r3[109] = 3158064;

        $r3[110] = 15066597;

        $r3[111] = 4473924;

        $r3[112] = 16645629;

        $r3[113] = 8947848;

        $r3[114] = 10461087;

        $r3[115] = 6645093;

        $r3[116] = 8882055;

        $r3[117] = 7039851;

        $r3[118] = 16053492;

        $r3[119] = 2302755;

        $r3[120] = 4737096;

        $r3[121] = 1052688;

        $r3[122] = 13750737;

        $r3[123] = 5329233;

        $r3[124] = 12632256;

        $r3[125] = 16382457;

        $r3[126] = 13816530;

        $r3[127] = 10526880;

        $r3[128] = 5592405;

        $r3[129] = 10592673;

        $r3[130] = 4276545;

        $r3[131] = 16448250;

        $r3[132] = 4408131;

        $r3[133] = 1250067;

        $r3[134] = 12895428;

        $r3[135] = 3092271;

        $r3[136] = 11053224;

        $r3[137] = 11974326;

        $r3[138] = 3947580;

        $r3[139] = 2829099;

        $r3[140] = 12698049;

        $r3[141] = 16777215;

        $r3[142] = 13158600;

        $r3[143] = 10855845;

        $r3[144] = 2105376;

        $r3[145] = 9013641;

        $r3[146] = 0;

        $r3[147] = 9474192;

        $r3[148] = 4671303;

        $r3[149] = 15724527;

        $r3[150] = 15395562;

        $r3[151] = 12040119;

        $r3[152] = 1381653;

        $r3[153] = 394758;

        $r3[154] = 13487565;

        $r3[155] = 11908533;

        $r3[156] = 1184274;

        $r3[157] = 8289918;

        $r3[158] = 12303291;

        $r3[159] = 2697513;

        $r3[160] = 986895;

        $r3[161] = 12105912;

        $r3[162] = 460551;

        $r3[163] = 263172;

        $r3[164] = 10197915;

        $r3[165] = 9737364;

        $r3[166] = 2171169;

        $r3[167] = 6710886;

        $r3[168] = 15132390;

        $r3[169] = 13553358;

        $r3[170] = 15592941;

        $r3[171] = 15198183;

        $r3[172] = 3881787;

        $r3[173] = 16711422;

        $r3[174] = 8355711;

        $r3[175] = 12961221;

        $r3[176] = 10790052;

        $r3[177] = 3618615;

        $r3[178] = 11645361;

        $r3[179] = 5000268;

        $r3[180] = 9539985;

        $r3[181] = 7237230;

        $r3[182] = 9276813;

        $r3[183] = 7763574;

        $r3[184] = 197379;

        $r3[185] = 2960685;

        $r3[186] = 14606046;

        $r3[187] = 9868950;

        $r3[188] = 2500134;

        $r3[189] = 8224125;

        $r3[190] = 13027014;

        $r3[191] = 6052956;

        $r3[192] = 13882323;

        $r3[193] = 15921906;

        $r3[194] = 5197647;

        $r3[195] = 1644825;

        $r3[196] = 4144959;

        $r3[197] = 14474460;

        $r3[198] = 7960953;

        $r3[199] = 1907997;

        $r3[200] = 5395026;

        $r3[201] = 15461355;

        $r3[202] = 15987699;

        $r3[203] = 7171437;

        $r3[204] = 6184542;

        $r3[205] = 16514043;

        $r3[206] = 6908265;

        $r3[207] = 11711154;

        $r3[208] = 15790320;

        $r3[209] = 3223857;

        $r3[210] = 789516;

        $r3[211] = 13948116;

        $r3[212] = 13619151;

        $r3[213] = 9211020;

        $r3[214] = 14869218;

        $r3[215] = 7697781;

        $r3[216] = 11119017;

        $r3[217] = 4868682;

        $r3[218] = 5723991;

        $r3[219] = 8684676;

        $r3[220] = 1118481;

        $r3[221] = 4539717;

        $r3[222] = 1776411;

        $r3[223] = 16119285;

        $r3[224] = 15000804;

        $r3[225] = 921102;

        $r3[226] = 7566195;

        $r3[227] = 11184810;

        $r3[228] = 15856113;

        $r3[229] = 14540253;

        $r3[230] = 5855577;

        $r3[231] = 1315860;

        $r3[232] = 7105644;

        $r3[233] = 9605778;

        $r3[234] = 5526612;

        $r3[235] = 13684944;

        $r3[236] = 7895160;

        $r3[237] = 7368816;

        $r3[238] = 14935011;

        $r3[239] = 4802889;

        $r3[240] = 8421504;

        $r3[241] = 5263440;

        $r3[242] = 10987431;

        $r3[243] = 16185078;

        $r3[244] = 7829367;

        $r3[245] = 9671571;

        $r3[246] = 8816262;

        $r3[247] = 8618883;

        $r3[248] = 2763306;

        $r3[249] = 13092807;

        $r3[250] = 5987163;

        $r3[251] = 15329769;

        $r3[252] = 15658734;

        $r3[253] = 9408399;

        $r3[254] = 65793;

        $r3[255] = 4013373;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX2_0222> = $r3;

        $r4 = newarray (int)[256];

        $r4[0] = 939538488;

        $r4[1] = 1090535745;

        $r4[2] = 369104406;

        $r4[3] = 1979741814;

        $r4[4] = -654255655;

        $r4[5] = -1828678765;

        $r4[6] = 1610637408;

        $r4[7] = -234818830;

        $r4[8] = 1912631922;

        $r4[9] = -1040137534;

        $r4[10] = -1426019413;

        $r4[11] = -1711236454;

        $r4[12] = 1962964341;

        $r4[13] = 100664838;

        $r4[14] = 1459640151;

        $r4[15] = -1610571616;

        $r4[16] = -1862233711;

        $r4[17] = -150931465;

        $r4[18] = -1258244683;

        $r4[19] = -922695223;

        $r4[20] = -1577016670;

        $r4[21] = -1946121076;

        $r4[22] = -771697966;

        $r4[23] = -1879011184;

        $r4[24] = -167708938;

        $r4[25] = 117442311;

        $r4[26] = -1493129305;

        $r4[27] = 654321447;

        $r4[28] = -1912566130;

        $r4[29] = -1308577102;

        $r4[30] = 1224755529;

        $r4[31] = -570368290;

        $r4[32] = 1124090691;

        $r4[33] = 1543527516;

        $r4[34] = -687810601;

        $r4[35] = -956250169;

        $r4[36] = 1040203326;

        $r4[37] = -184486411;

        $r4[38] = -1895788657;

        $r4[39] = 1728079719;

        $r4[40] = 520101663;

        $r4[41] = 402659352;

        $r4[42] = 1845522030;

        $r4[43] = -1358909521;

        $r4[44] = 788541231;

        $r4[45] = -503258398;

        $r4[46] = -2063563387;

        $r4[47] = 218107149;

        $r4[48] = 1392530259;

        $r4[49] = -268373776;

        $r4[50] = -1677681508;

        $r4[51] = 1694524773;

        $r4[52] = -369038614;

        $r4[53] = -1560239197;

        $r4[54] = -1375686994;

        $r4[55] = -1644126562;

        $r4[56] = -335483668;

        $r4[57] = -2147450752;

        $r4[58] = 754986285;

        $r4[59] = 1795189611;

        $r4[60] = -1476351832;

        $r4[61] = 721431339;

        $r4[62] = 905983542;

        $r4[63] = -1509906778;

        $r4[64] = -989805115;

        $r4[65] = -2046785914;

        $r4[66] = 1291865421;

        $r4[67] = 855651123;

        $r4[68] = -50266627;

        $r4[69] = 1711302246;

        $r4[70] = 1476417624;

        $r4[71] = -1778346346;

        $r4[72] = 973093434;

        $r4[73] = 150997257;

        $r4[74] = -1795123819;

        $r4[75] = 268439568;

        $r4[76] = 2013296760;

        $r4[77] = -671033128;

        $r4[78] = 1107313218;

        $r4[79] = -872362804;

        $r4[80] = -285151249;

        $r4[81] = 637543974;

        $r4[82] = -452925979;

        $r4[83] = 1627414881;

        $r4[84] = 436214298;

        $r4[85] = 1056980799;

        $r4[86] = 989870907;

        $r4[87] = -2113895806;

        $r4[88] = -1241467210;

        $r4[89] = -620700709;

        $r4[90] = -738143020;

        $r4[91] = -1744791400;

        $r4[92] = -402593560;

        $r4[93] = -1962898549;

        $r4[94] = 33554946;

        $r4[95] = -352261141;

        $r4[96] = 167774730;

        $r4[97] = 738208812;

        $r4[98] = 486546717;

        $r4[99] = -1342132048;

        $r4[100] = 1862299503;

        $r4[101] = -1929343603;

        $r4[102] = -2013230968;

        $r4[103] = 234884622;

        $r4[104] = 419436825;

        $r4[105] = -2030008441;

        $r4[106] = 1308642894;

        $r4[107] = 184552203;

        $r4[108] = -1459574359;

        $r4[109] = 201329676;

        $r4[110] = 2030074233;

        $r4[111] = 285217041;

        $r4[112] = 2130739071;

        $r4[113] = 570434082;

        $r4[114] = -419371033;

        $r4[115] = 1493195097;

        $r4[116] = -520035871;

        $r4[117] = -637478182;

        $r4[118] = 1023425853;

        $r4[119] = -939472696;

        $r4[120] = 301994514;

        $r4[121] = 67109892;

        $r4[122] = 1946186868;

        $r4[123] = 1409307732;

        $r4[124] = 805318704;

        $r4[125] = 2113961598;

        $r4[126] = -1275022156;

        $r4[127] = 671098920;

        $r4[128] = 1426085205;

        $r4[129] = 1744857192;

        $r4[130] = 1342197840;

        $r4[131] = -1107247426;

        $r4[132] = -805252912;

        $r4[133] = -1006582588;

        $r4[134] = 822096177;

        $r4[135] = -889140277;

        $r4[136] = 704653866;

        $r4[137] = -1392464467;

        $r4[138] = 251662095;

        $r4[139] = -905917750;

        $r4[140] = 1879076976;

        $r4[141] = -16711681;

        $r4[142] = 838873650;

        $r4[143] = 1761634665;

        $r4[144] = 134219784;

        $r4[145] = 1644192354;

        $r4[146] = 0;

        $r4[147] = 603989028;

        $r4[148] = -788475439;

        $r4[149] = -83821573;

        $r4[150] = -1174357318;

        $r4[151] = -318706195;

        $r4[152] = 1157645637;

        $r4[153] = -2130673279;

        $r4[154] = 1929409395;

        $r4[155] = 1828744557;

        $r4[156] = -2080340860;

        $r4[157] = -1627349089;

        $r4[158] = -301928722;

        $r4[159] = 1241533002;

        $r4[160] = -1023360061;

        $r4[161] = 771763758;

        $r4[162] = -1056915007;

        $r4[163] = 16777473;

        $r4[164] = -436148506;

        $r4[165] = 620766501;

        $r4[166] = 1207978056;

        $r4[167] = -1728013927;

        $r4[168] = -1191134791;

        $r4[169] = -1291799629;

        $r4[170] = 2063629179;

        $r4[171] = -117376519;

        $r4[172] = -838807858;

        $r4[173] = -1090469953;

        $r4[174] = -553590817;

        $r4[175] = 1895854449;

        $r4[176] = 687876393;

        $r4[177] = -855585331;

        $r4[178] = 1811967084;

        $r4[179] = 318771987;

        $r4[180] = 1677747300;

        $r4[181] = -1694458981;

        $r4[182] = 1660969827;

        $r4[183] = -1660904035;

        $r4[184] = -1073692480;

        $r4[185] = 1258310475;

        $r4[186] = -1224689737;

        $r4[187] = -1526684251;

        $r4[188] = -1996453495;

        $r4[189] = 1593859935;

        $r4[190] = -1325354575;

        $r4[191] = 385881879;

        $r4[192] = -201263884;

        $r4[193] = -1140802372;

        $r4[194] = -754920493;

        $r4[195] = 1174423110;

        $r4[196] = -822030385;

        $r4[197] = 922761015;

        $r4[198] = 1577082462;

        $r4[199] = 1191200583;

        $r4[200] = -1811901292;

        $r4[201] = -100599046;

        $r4[202] = -67044100;

        $r4[203] = 1526750043;

        $r4[204] = -1761568873;

        $r4[205] = -33489154;

        $r4[206] = 1509972570;

        $r4[207] = -1409241940;

        $r4[208] = 1006648380;

        $r4[209] = 1275087948;

        $r4[210] = 50332419;

        $r4[211] = 889206069;

        $r4[212] = -218041357;

        $r4[213] = 587211555;

        $r4[214] = -1207912264;

        $r4[215] = 1560304989;

        $r4[216] = 1778412138;

        $r4[217] = -1845456238;

        $r4[218] = -721365547;

        $r4[219] = 553656609;

        $r4[220] = 1140868164;

        $r4[221] = 1358975313;

        $r4[222] = -973027642;

        $r4[223] = 2097184125;

        $r4[224] = 956315961;

        $r4[225] = -2097118333;

        $r4[226] = -603923236;

        $r4[227] = -1442796886;

        $r4[228] = 2080406652;

        $r4[229] = 1996519287;

        $r4[230] = 1442862678;

        $r4[231] = 83887365;

        $r4[232] = 452991771;

        $r4[233] = -1543461724;

        $r4[234] = 352326933;

        $r4[235] = 872428596;

        $r4[236] = 503324190;

        $r4[237] = 469769244;

        $r4[238] = -134153992;

        $r4[239] = 1375752786;

        $r4[240] = 536879136;

        $r4[241] = 335549460;

        $r4[242] = -385816087;

        $r4[243] = -1124024899;

        $r4[244] = -587145763;

        $r4[245] = -469703452;

        $r4[246] = -1593794143;

        $r4[247] = -536813344;

        $r4[248] = -1979676022;

        $r4[249] = -251596303;

        $r4[250] = -704588074;

        $r4[251] = 2046851706;

        $r4[252] = -1157579845;

        $r4[253] = -486480925;

        $r4[254] = 1073758272;

        $r4[255] = 1325420367;

        <org.bouncycastle.crypto.engines.CamelliaEngine: int[] SBOX3_3033> = $r4;

        return;
    }
}
