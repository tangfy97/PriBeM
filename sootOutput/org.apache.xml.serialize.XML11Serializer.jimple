public class org.apache.xml.serialize.XML11Serializer extends org.apache.xml.serialize.XMLSerializer
{
    protected static final boolean DEBUG;
    protected org.apache.xerces.util.NamespaceSupport fNSBinder;
    protected org.apache.xerces.util.NamespaceSupport fLocalNSBinder;
    protected org.apache.xerces.util.SymbolTable fSymbolTable;
    protected boolean fDOML1;
    protected int fNamespaceCounter;
    protected static final java.lang.String PREFIX;
    protected boolean fNamespaces;

    public void <init>()
    {
        org.apache.xml.serialize.OutputFormat $r1;
        org.apache.xml.serialize.XML11Serializer r0;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        specialinvoke r0.<org.apache.xml.serialize.XMLSerializer: void <init>()>();

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fDOML1> = 0;

        r0.<org.apache.xml.serialize.XML11Serializer: int fNamespaceCounter> = 1;

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fNamespaces> = 0;

        $r1 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.OutputFormat _format>;

        virtualinvoke $r1.<org.apache.xml.serialize.OutputFormat: void setVersion(java.lang.String)>("1.1");

        return;
    }

    public void <init>(org.apache.xml.serialize.OutputFormat)
    {
        org.apache.xml.serialize.OutputFormat r1, $r2;
        org.apache.xml.serialize.XML11Serializer r0;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        r1 := @parameter0: org.apache.xml.serialize.OutputFormat;

        specialinvoke r0.<org.apache.xml.serialize.XMLSerializer: void <init>(org.apache.xml.serialize.OutputFormat)>(r1);

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fDOML1> = 0;

        r0.<org.apache.xml.serialize.XML11Serializer: int fNamespaceCounter> = 1;

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fNamespaces> = 0;

        $r2 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.OutputFormat _format>;

        virtualinvoke $r2.<org.apache.xml.serialize.OutputFormat: void setVersion(java.lang.String)>("1.1");

        return;
    }

    public void <init>(java.io.Writer, org.apache.xml.serialize.OutputFormat)
    {
        java.io.Writer r1;
        org.apache.xml.serialize.OutputFormat r2, $r3;
        org.apache.xml.serialize.XML11Serializer r0;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.xml.serialize.OutputFormat;

        specialinvoke r0.<org.apache.xml.serialize.XMLSerializer: void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)>(r1, r2);

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fDOML1> = 0;

        r0.<org.apache.xml.serialize.XML11Serializer: int fNamespaceCounter> = 1;

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fNamespaces> = 0;

        $r3 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.OutputFormat _format>;

        virtualinvoke $r3.<org.apache.xml.serialize.OutputFormat: void setVersion(java.lang.String)>("1.1");

        return;
    }

    public void <init>(java.io.OutputStream, org.apache.xml.serialize.OutputFormat)
    {
        java.io.OutputStream r1;
        org.apache.xml.serialize.OutputFormat r2, $r3, $r4;
        org.apache.xml.serialize.XML11Serializer r0;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.xml.serialize.OutputFormat;

        if r2 == null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = new org.apache.xml.serialize.OutputFormat;

        specialinvoke $r4.<org.apache.xml.serialize.OutputFormat: void <init>(java.lang.String,java.lang.String,boolean)>("xml", null, 0);

     label2:
        specialinvoke r0.<org.apache.xml.serialize.XMLSerializer: void <init>(java.io.OutputStream,org.apache.xml.serialize.OutputFormat)>(r1, $r4);

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fDOML1> = 0;

        r0.<org.apache.xml.serialize.XML11Serializer: int fNamespaceCounter> = 1;

        r0.<org.apache.xml.serialize.XML11Serializer: boolean fNamespaces> = 0;

        $r3 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.OutputFormat _format>;

        virtualinvoke $r3.<org.apache.xml.serialize.OutputFormat: void setVersion(java.lang.String)>("1.1");

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.XML11Serializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r6, $r7, $r9, $r10, $r16, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.xml.sax.SAXException $r25;
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.EncodingInfo $r5;
        java.lang.StringBuffer $r12, $r13, $r14, $r24;
        int $i0, i1, i2, $i5, $i6, $i8, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r8, $r15;
        char c3, $c4, $c7, $c9;
        java.io.IOException $r22;
        char[] r4;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        r4 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.ElementState content()>();

        $z0 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z0 != 0 goto label02;

        $z4 = $r1.<org.apache.xml.serialize.ElementState: boolean doCData>;

        if $z4 == 0 goto label11;

     label02:
        $z1 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z1 != 0 goto label03;

        $r18 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r18.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<![CDATA[");

        $r1.<org.apache.xml.serialize.ElementState: boolean inCData> = 1;

     label03:
        $r2 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $i0 = virtualinvoke $r2.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r3 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        $i10 = i1 + i2;

        i12 = i1;

        goto label10;

     label04:
        c3 = r4[i12];

        $i13 = (int) c3;

        if $i13 != 93 goto label05;

        $i5 = i12 + 2;

        if $i5 >= $i10 goto label05;

        $i6 = i12 + 1;

        $c7 = r4[$i6];

        $i14 = (int) $c7;

        if $i14 != 93 goto label05;

        $i8 = i12 + 2;

        $c9 = r4[$i8];

        $i15 = (int) $c9;

        if $i15 != 62 goto label05;

        $r16 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r16.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]]]><![CDATA[>");

        i12 = i12 + 2;

        goto label09;

     label05:
        $i16 = (int) c3;

        $z8 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i16);

        if $z8 != 0 goto label07;

        i12 = i12 + 1;

        if i12 >= $i10 goto label06;

        $c4 = r4[i12];

        $i17 = (int) c3;

        $i18 = (int) $c4;

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i17, $i18, 1);

        goto label09;

     label06:
        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r15);

        goto label09;

     label07:
        $r5 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $z2 = virtualinvoke $r5.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>(c3);

        if $z2 == 0 goto label08;

        $i19 = (int) c3;

        $z3 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i19);

        if $z3 == 0 goto label08;

        $r10 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(char)>(c3);

        goto label09;

     label08:
        $r6 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r7 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $i20 = (int) c3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r8);

        $r9 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r9.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

     label09:
        i12 = i12 + 1;

     label10:
        if i12 < $i10 goto label04;

        $r17 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r17.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i0);

        goto label13;

     label11:
        $z5 = $r1.<org.apache.xml.serialize.ElementState: boolean preserveSpace>;

        if $z5 == 0 goto label12;

        $r19 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $i11 = virtualinvoke $r19.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r20 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r20.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        $z7 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void printText(char[],int,int,boolean,boolean)>(r4, i1, i2, 1, $z7);

        $r21 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r21.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i11);

        goto label13;

     label12:
        $z6 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void printText(char[],int,int,boolean,boolean)>(r4, i1, i2, 0, $z6);

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;

        $r25 = new org.xml.sax.SAXException;

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r22);

        throw $r25;

     label15:
        return;

        catch java.io.IOException from label01 to label13 with label14;
    }

    protected void printEscaped(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.XML11Serializer r1;
        org.apache.xml.serialize.Printer $r3, $r4, $r5, $r6;
        boolean $z0, $z1;
        org.apache.xml.serialize.EncodingInfo $r2;
        java.lang.StringBuffer $r8, $r9, $r10, $r12;
        int $i0, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r0, $r11;
        char $c1, $c2, $c3, $c4, $c5;

        r1 := @this: org.apache.xml.serialize.XML11Serializer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i6 = 0;

        goto label11;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c1;

        $z0 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i7);

        if $z0 != 0 goto label03;

        i6 = i6 + 1;

        if i6 >= $i0 goto label02;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c1;

        $i9 = (int) $c5;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i8, $i9, 0);

        goto label10;

     label02:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c4 = (char) $c1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r11);

        goto label10;

     label03:
        $i10 = (int) $c1;

        if $i10 == 10 goto label04;

        $i11 = (int) $c1;

        if $i11 == 13 goto label04;

        $i12 = (int) $c1;

        if $i12 == 9 goto label04;

        $i13 = (int) $c1;

        if $i13 == 133 goto label04;

        $i14 = (int) $c1;

        if $i14 != 8232 goto label05;

     label04:
        $i15 = (int) $c1;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printHex(int)>($i15);

        goto label10;

     label05:
        $i16 = (int) $c1;

        if $i16 != 60 goto label06;

        $r6 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&lt;");

        goto label10;

     label06:
        $i17 = (int) $c1;

        if $i17 != 38 goto label07;

        $r5 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&amp;");

        goto label10;

     label07:
        $i18 = (int) $c1;

        if $i18 != 34 goto label08;

        $r4 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&quot;");

        goto label10;

     label08:
        $i19 = (int) $c1;

        if $i19 < 32 goto label09;

        $r2 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $c2 = (char) $c1;

        $z1 = virtualinvoke $r2.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>($c2);

        if $z1 == 0 goto label09;

        $r3 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $c3 = (char) $c1;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>($c3);

        goto label10;

     label09:
        $i20 = (int) $c1;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printHex(int)>($i20);

     label10:
        i6 = i6 + 1;

     label11:
        if i6 < $i0 goto label01;

        return;
    }

    protected final void printCDATAText(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.XML11Serializer r1;
        org.apache.xerces.dom.DOMErrorImpl $r16, $r20;
        org.apache.xml.serialize.Printer $r3, $r4, $r6, $r7, $r23;
        boolean $z0, $z1, $z2, $z3;
        short $s8, $s9, $s10, $s11;
        org.apache.xml.serialize.EncodingInfo $r2;
        java.lang.StringBuffer $r9, $r10, $r11, $r25;
        org.w3c.dom.Node $r15, $r19;
        int $i0, $i3, $i4, $i6, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r0, $r5, $r12, $r14, $r18;
        char $c1, $c2, $c5, $c7;
        java.io.IOException $r24;
        org.w3c.dom.DOMErrorHandler $r13, $r17, $r21;

        r1 := @this: org.apache.xml.serialize.XML11Serializer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i12 = 0;

        goto label9;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i13 = (int) $c1;

        if $i13 != 93 goto label4;

        $i3 = i12 + 2;

        if $i3 >= $i0 goto label4;

        $i4 = i12 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i14 = (int) $c5;

        if $i14 != 93 goto label4;

        $i6 = i12 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i15 = (int) $c7;

        if $i15 != 62 goto label4;

        $r13 = r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        if $r13 == null goto label3;

        $s8 = r1.<org.apache.xml.serialize.XML11Serializer: short features>;

        $s9 = $s8 & 16;

        if $s9 != 0 goto label2;

        $s10 = r1.<org.apache.xml.serialize.XML11Serializer: short features>;

        $s11 = $s10 & 2;

        if $s11 != 0 goto label2;

        $r18 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "EndingCDATA", null);

        $r19 = r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>($r18, 3, null, $r19);

        $r21 = r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r20 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $z2 = interfaceinvoke $r21.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r20);

        if $z2 != 0 goto label3;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>()>();

        throw $r24;

     label2:
        $r14 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "SplittingCDATA", null);

        $r15 = r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>($r14, 1, null, $r15);

        $r17 = r1.<org.apache.xml.serialize.XML11Serializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r16 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        interfaceinvoke $r17.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r16);

     label3:
        $r23 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r23.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]]]><![CDATA[>");

        i12 = i12 + 2;

        goto label8;

     label4:
        $i16 = (int) $c1;

        $z3 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i16);

        if $z3 != 0 goto label6;

        i12 = i12 + 1;

        if i12 >= $i0 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i17 = (int) $c1;

        $i18 = (int) $c2;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i17, $i18, 1);

        goto label8;

     label5:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r12);

        goto label8;

     label6:
        $r2 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $z0 = virtualinvoke $r2.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>($c1);

        if $z0 == 0 goto label7;

        $i19 = (int) $c1;

        $z1 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i19);

        if $z1 == 0 goto label7;

        $r7 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(char)>($c1);

        goto label8;

     label7:
        $r3 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r4 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $i20 = (int) $c1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r5);

        $r6 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

     label8:
        i12 = i12 + 1;

     label9:
        if i12 < $i0 goto label1;

        return;
    }

    protected final void printXMLChar(int) throws java.io.IOException
    {
        char $c1, $c2;
        org.apache.xml.serialize.EncodingInfo $r1;
        int i0;
        org.apache.xml.serialize.XML11Serializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        i0 := @parameter0: int;

        if i0 == 13 goto label1;

        if i0 == 133 goto label1;

        if i0 != 8232 goto label2;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void printHex(int)>(i0);

        goto label7;

     label2:
        if i0 != 60 goto label3;

        $r5 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&lt;");

        goto label7;

     label3:
        if i0 != 38 goto label4;

        $r4 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&amp;");

        goto label7;

     label4:
        if i0 != 62 goto label5;

        $r3 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&gt;");

        goto label7;

     label5:
        $r1 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $c1 = (char) i0;

        $z0 = virtualinvoke $r1.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>($c1);

        if $z0 == 0 goto label6;

        $z1 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>(i0);

        if $z1 == 0 goto label6;

        $r2 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $c2 = (char) i0;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>($c2);

        goto label7;

     label6:
        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void printHex(int)>(i0);

     label7:
        return;
    }

    protected final void surrogates(int, int, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.XML11Serializer r0;
        org.apache.xml.serialize.Printer $r7, $r8, $r10;
        boolean $z0, $z1, $z2, z3, $z4;
        org.apache.xml.serialize.ElementState $r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;
        int i0, i2, $i5;
        java.lang.String $r5, $r9, $r15, $r20;
        char $c1, $c3, $c4, $c6, $c7;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        z3 := @parameter2: boolean;

        $z0 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isHighSurrogate(int)>(i0);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isLowSurrogate(int)>(i2);

        if $z1 != 0 goto label1;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c7 = (char) i2;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r20);

        goto label5;

     label1:
        $c4 = (char) i0;

        $c3 = (char) i2;

        $i5 = staticinvoke <org.apache.xerces.util.XMLChar: int supplemental(char,char)>($c4, $c3);

        $z2 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i5);

        if $z2 != 0 goto label2;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c6 = (char) $i5;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r15);

        goto label5;

     label2:
        if z3 == 0 goto label3;

        $r6 = virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.ElementState content()>();

        $z4 = $r6.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z4 == 0 goto label3;

        $r7 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r8 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r9);

        $r10 = r0.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

        goto label5;

     label3:
        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void printHex(int)>($i5);

        goto label5;

     label4:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c1 = (char) i0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r5);

     label5:
        return;
    }

    protected void printText(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.XML11Serializer r1;
        org.apache.xml.serialize.Printer $r2, $r8;
        boolean z0, $z1, z2, $z3, $z4, $z5;
        java.lang.StringBuffer $r4, $r5, $r6, $r10, $r11, $r12, $r14, $r15;
        int $i0, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r0, $r7, $r13;
        char $c1, $c2, $c3, $c4;

        r1 := @this: org.apache.xml.serialize.XML11Serializer;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if z0 == 0 goto label07;

        i5 = 0;

        goto label06;

     label01:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i7 = (int) $c3;

        $z4 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i7);

        if $z4 != 0 goto label03;

        i5 = i5 + 1;

        if i5 >= $i0 goto label02;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i8 = (int) $c3;

        $i9 = (int) $c4;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i8, $i9, 1);

        goto label05;

     label02:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r13);

        goto label05;

     label03:
        if z2 == 0 goto label04;

        $i10 = (int) $c3;

        $z5 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i10);

        if $z5 == 0 goto label04;

        $r8 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(char)>($c3);

        goto label05;

     label04:
        $i11 = (int) $c3;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printXMLChar(int)>($i11);

     label05:
        i5 = i5 + 1;

     label06:
        if i5 < $i0 goto label01;

        goto label14;

     label07:
        i6 = 0;

        goto label13;

     label08:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i12 = (int) $c1;

        $z1 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i12);

        if $z1 != 0 goto label10;

        i6 = i6 + 1;

        if i6 >= $i0 goto label09;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i13 = (int) $c1;

        $i14 = (int) $c2;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i13, $i14, 1);

        goto label12;

     label09:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r7);

        goto label12;

     label10:
        if z2 == 0 goto label11;

        $i15 = (int) $c1;

        $z3 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i15);

        if $z3 == 0 goto label11;

        $r2 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>($c1);

        goto label12;

     label11:
        $i16 = (int) $c1;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printXMLChar(int)>($i16);

     label12:
        i6 = i6 + 1;

     label13:
        if i6 < $i0 goto label08;

     label14:
        return;
    }

    protected void printText(char[], int, int, boolean, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.XML11Serializer r1;
        org.apache.xml.serialize.Printer $r2, $r8;
        boolean z0, $z1, z2, $z3, $z4, $z5;
        java.lang.StringBuffer $r4, $r5, $r6, $r10, $r11, $r12, $r14, $r15;
        int $i0, $i1, $i2, $i4, $i5, $i6, i8, i9, $i11, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i31;
        java.lang.String $r7, $r13;
        char $c3, $c7, c10, c12;
        char[] r0;

        r1 := @this: org.apache.xml.serialize.XML11Serializer;

        r0 := @parameter0: char[];

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        z0 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        if z0 == 0 goto label10;

        goto label05;

     label01:
        $i4 = i8;

        i8 = i8 + 1;

        c10 = r0[$i4];

        $i14 = (int) c10;

        $z4 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i14);

        if $z4 != 0 goto label03;

        $i5 = i9;

        $i16 = (int) -1;

        i9 = i9 + $i16;

        if $i5 <= 0 goto label02;

        $i6 = i8;

        i8 = i8 + 1;

        $c7 = r0[$i6];

        $i17 = (int) c10;

        $i18 = (int) $c7;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i17, $i18, 1);

        goto label05;

     label02:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r13);

        goto label05;

     label03:
        if z2 == 0 goto label04;

        $i19 = (int) c10;

        $z5 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i19);

        if $z5 == 0 goto label04;

        $r8 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(char)>(c10);

        goto label05;

     label04:
        $i20 = (int) c10;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printXMLChar(int)>($i20);

     label05:
        $i11 = i9;

        $i22 = (int) -1;

        i9 = i9 + $i22;

        if $i11 > 0 goto label01;

        goto label11;

     label06:
        $i0 = i8;

        i8 = i8 + 1;

        c12 = r0[$i0];

        $i23 = (int) c12;

        $z1 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11Valid(int)>($i23);

        if $z1 != 0 goto label08;

        $i1 = i9;

        $i25 = (int) -1;

        i9 = i9 + $i25;

        if $i1 <= 0 goto label07;

        $i2 = i8;

        i8 = i8 + 1;

        $c3 = r0[$i2];

        $i26 = (int) c12;

        $i27 = (int) $c3;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void surrogates(int,int,boolean)>($i26, $i27, 1);

        goto label10;

     label07:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c12);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void fatalError(java.lang.String)>($r7);

        goto label10;

     label08:
        if z2 == 0 goto label09;

        $i28 = (int) c12;

        $z3 = staticinvoke <org.apache.xerces.util.XML11Char: boolean isXML11ValidLiteral(int)>($i28);

        if $z3 == 0 goto label09;

        $r2 = r1.<org.apache.xml.serialize.XML11Serializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>(c12);

        goto label10;

     label09:
        $i29 = (int) c12;

        virtualinvoke r1.<org.apache.xml.serialize.XML11Serializer: void printXMLChar(int)>($i29);

     label10:
        $i13 = i9;

        $i31 = (int) -1;

        i9 = i9 + $i31;

        if $i13 > 0 goto label06;

     label11:
        return;
    }

    public boolean reset()
    {
        org.apache.xml.serialize.XML11Serializer r0;

        r0 := @this: org.apache.xml.serialize.XML11Serializer;

        specialinvoke r0.<org.apache.xml.serialize.XMLSerializer: boolean reset()>();

        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xml.serialize.XML11Serializer: java.lang.String PREFIX> = "NS";

        <org.apache.xml.serialize.XML11Serializer: boolean DEBUG> = 0;

        return;
    }
}
