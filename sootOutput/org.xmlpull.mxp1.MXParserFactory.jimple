public class org.xmlpull.mxp1.MXParserFactory extends org.xmlpull.v1.XmlPullParserFactory
{
    protected static boolean stringCachedParserAvailable;

    public void <init>()
    {
        org.xmlpull.mxp1.MXParserFactory r0;

        r0 := @this: org.xmlpull.mxp1.MXParserFactory;

        specialinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        return;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.Enumeration $r2;
        org.xmlpull.mxp1.MXParserFactory r0;
        java.lang.Exception $r10;
        org.xmlpull.mxp1.MXParserCachingStrings $r9;
        java.lang.Boolean r7;
        java.lang.Object $r3, $r6;
        java.lang.String r4;
        org.xmlpull.mxp1.MXParser $r8, r11;
        java.util.Hashtable $r1, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.xmlpull.mxp1.MXParserFactory;

        r11 = null;

        $z0 = <org.xmlpull.mxp1.MXParserFactory: boolean stringCachedParserAvailable>;

        if $z0 == 0 goto label4;

     label1:
        $r9 = new org.xmlpull.mxp1.MXParserCachingStrings;

        specialinvoke $r9.<org.xmlpull.mxp1.MXParserCachingStrings: void <init>()>();

        r11 = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        <org.xmlpull.mxp1.MXParserFactory: boolean stringCachedParserAvailable> = 0;

     label4:
        if r11 != null goto label5;

        $r8 = new org.xmlpull.mxp1.MXParser;

        specialinvoke $r8.<org.xmlpull.mxp1.MXParser: void <init>()>();

        r11 = $r8;

     label5:
        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label6:
        $z2 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r3;

        $r5 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (java.lang.Boolean) $r6;

        if r7 == null goto label7;

        $z1 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label7;

        interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r4, 1);

     label7:
        goto label6;

     label8:
        return r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.mxp1.MXParserFactory r1;
        org.xmlpull.mxp1_serializer.MXSerializer $r0;

        r1 := @this: org.xmlpull.mxp1.MXParserFactory;

        $r0 = new org.xmlpull.mxp1_serializer.MXSerializer;

        specialinvoke $r0.<org.xmlpull.mxp1_serializer.MXSerializer: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        <org.xmlpull.mxp1.MXParserFactory: boolean stringCachedParserAvailable> = 1;

        return;
    }
}
