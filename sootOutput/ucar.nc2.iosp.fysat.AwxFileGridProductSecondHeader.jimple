public final class ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader extends ucar.nc2.iosp.fysat.AwxFileSecondHeader
{
    java.lang.String satelliteName;
    short gridFeature;
    short byteAmountofData;
    short dataBaseValue;
    short dataScale;
    short timePeriodCode;
    short startYear;
    short startMonth;
    short startDay;
    short startHour;
    short startMinute;
    short endYear;
    short endMonth;
    short endDay;
    short endHour;
    short endMinute;
    float leftTopLat;
    float leftTopLon;
    float rightBottomLat;
    float rightBottomLon;
    short gridSpacingUnit;
    short horizontalSpacing;
    short verticalSpacing;
    short amountofHorizontalSpacing;
    short amountofVerticalSpacing;
    short hasLand;
    short landCode;
    short hasCloud;
    short cloudCode;
    short hasWater;
    short waterCode;
    short hasIce;
    short iceCode;
    short hasQualityControl;
    short qualityControlCeiling;
    short qualityControlFloor;
    short reserved;
    public static short GRID_FEATURE_OCEAN_TEMPERATURE;
    public static short GRID_FEATURE_SEA_ICE_DISTRIBUTION;
    public static short GRID_FEATURE_SEA_ICE_DENSITY;
    public static short GRID_FEATURE_OUTGOING_LONGWAVE_RADIATION;
    public static short GRID_FEATURE_NORMALIZE_VEGETATIOIN_INDEX;
    public static short GRID_FEATURE_RATIO_VEGETATIOIN_INDEX;
    public static short GRID_FEATURE_SNOW_DISTRIBUTION;
    public static short GRID_FEATURE_SOIL_HUMIDITY;
    public static short GRID_FEATURE_SUNLIGHT_DURATION;
    public static short GRID_FEATURE_CLOUD_TOP_HEIGHT;
    public static short GRID_FEATURE_CLOUD_TOP_TEMPERATURE;
    public static short GRID_FEATURE_LOW_CLOUD_AMOUNT;
    public static short GRID_FEATURE_HIGH_CLOUD_AMOUNT;
    public static short GRID_FEATURE_RAIN_INDEX_PER_HOUR;
    public static short GRID_FEATURE_RAIN_INDEX_PER_6HOUR;
    public static short GRID_FEATURE_RAIN_INDEX_PER_12HOUR;
    public static short GRID_FEATURE_RAIN_INDEX_PER_24HOUR;
    public static short GRID_SPACING_UNIT_POINT001DEGREE;
    public static short GRID_SPACING_UNIT_KILOMETER;
    public static short GRID_SPACING_UNIT_METER;

    public void <init>()
    {
        ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader r0;

        r0 := @this: ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader;

        specialinvoke r0.<ucar.nc2.iosp.fysat.AwxFileSecondHeader: void <init>()>();

        return;
    }

    public void fillHeader(ucar.nc2.iosp.fysat.util.EndianByteBuffer)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader r0;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r1;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s18, $s19, $s20, $s21, $s22, $s23, $s24, $s25, $s26, $s27, $s28, $s29, $s30, $s31, $s32, $s33, $s34, $s35;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader;

        r1 := @parameter0: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $r2 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.lang.String getString(int)>(8);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: java.lang.String satelliteName> = $r3;

        $s0 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short gridFeature> = $s0;

        $s1 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short byteAmountofData> = $s1;

        $s2 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short dataBaseValue> = $s2;

        $s3 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short dataScale> = $s3;

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short timePeriodCode> = $s4;

        $s5 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short startYear> = $s5;

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short startMonth> = $s6;

        $s7 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short startDay> = $s7;

        $s8 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short startHour> = $s8;

        $s9 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short startMinute> = $s9;

        $s10 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short endYear> = $s10;

        $s11 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short endMonth> = $s11;

        $s12 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short endDay> = $s12;

        $s13 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short endHour> = $s13;

        $s14 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short endMinute> = $s14;

        $s15 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        $f0 = (float) $s15;

        $f1 = $f0 / 100.0F;

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: float leftTopLat> = $f1;

        $s16 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        $f2 = (float) $s16;

        $f3 = $f2 / 100.0F;

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: float leftTopLon> = $f3;

        $s17 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        $f4 = (float) $s17;

        $f5 = $f4 / 100.0F;

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: float rightBottomLat> = $f5;

        $s18 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        $f6 = (float) $s18;

        $f7 = $f6 / 100.0F;

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: float rightBottomLon> = $f7;

        $s19 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short gridSpacingUnit> = $s19;

        $s20 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short horizontalSpacing> = $s20;

        $s21 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short verticalSpacing> = $s21;

        $s22 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short amountofHorizontalSpacing> = $s22;

        $s23 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short amountofVerticalSpacing> = $s23;

        $s24 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short hasLand> = $s24;

        $s25 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short landCode> = $s25;

        $s26 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short hasCloud> = $s26;

        $s27 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short cloudCode> = $s27;

        $s28 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short hasWater> = $s28;

        $s29 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short waterCode> = $s29;

        $s30 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short hasIce> = $s30;

        $s31 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short iceCode> = $s31;

        $s32 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short hasQualityControl> = $s32;

        $s33 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short qualityControlCeiling> = $s33;

        $s34 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short qualityControlFloor> = $s34;

        $s35 = virtualinvoke r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short getShort()>();

        r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short reserved> = $s35;

        return;
    }

    public java.lang.String getSpacingUnit()
    {
        int $i1;
        short $s0;
        ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader r0;

        r0 := @this: ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader;

        $s0 = r0.<ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short gridSpacingUnit>;

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "0.01degree";

     label2:
        return "kilometer";

     label3:
        return "meter";

     label4:
        return "";
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_OCEAN_TEMPERATURE> = 1;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_SEA_ICE_DISTRIBUTION> = 2;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_SEA_ICE_DENSITY> = 3;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_OUTGOING_LONGWAVE_RADIATION> = 4;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_NORMALIZE_VEGETATIOIN_INDEX> = 5;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_RATIO_VEGETATIOIN_INDEX> = 6;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_SNOW_DISTRIBUTION> = 7;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_SOIL_HUMIDITY> = 8;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_SUNLIGHT_DURATION> = 9;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_CLOUD_TOP_HEIGHT> = 10;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_CLOUD_TOP_TEMPERATURE> = 11;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_LOW_CLOUD_AMOUNT> = 12;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_HIGH_CLOUD_AMOUNT> = 13;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_RAIN_INDEX_PER_HOUR> = 14;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_RAIN_INDEX_PER_6HOUR> = 15;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_RAIN_INDEX_PER_12HOUR> = 16;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_FEATURE_RAIN_INDEX_PER_24HOUR> = 17;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_SPACING_UNIT_POINT001DEGREE> = 0;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_SPACING_UNIT_KILOMETER> = 1;

        <ucar.nc2.iosp.fysat.AwxFileGridProductSecondHeader: short GRID_SPACING_UNIT_METER> = 2;

        return;
    }
}
