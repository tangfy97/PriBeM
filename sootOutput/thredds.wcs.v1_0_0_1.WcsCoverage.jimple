public class thredds.wcs.v1_0_0_1.WcsCoverage extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private ucar.nc2.dt.GridDatatype coverage;
    private thredds.wcs.v1_0_0_1.WcsDataset dataset;
    private ucar.nc2.dt.GridCoordSystem coordSys;
    private java.lang.String nativeCRS;
    private java.lang.String defaultRequestCrs;
    private java.util.List supportedCoverageFormatList;
    private thredds.wcs.v1_0_0_1.WcsRangeField range;
    private static ucar.nc2.util.DiskCache2 diskCache;

    public void <init>(ucar.nc2.dt.GridDatatype, thredds.wcs.v1_0_0_1.WcsDataset)
    {
        ucar.nc2.dt.GridDatatype r3, $r4;
        ucar.unidata.geoloc.ProjectionImpl $r8;
        thredds.wcs.v1_0_0_1.WcsRangeField $r42;
        byte $b2;
        ucar.nc2.dataset.CoordinateAxis1D $r18;
        boolean $z0;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.util.List $r12, $r14, $r16;
        ucar.nc2.dt.GridCoordSystem $r5, $r6, $r7, $r17;
        long $l0, $l1;
        thredds.wcs.v1_0_0_1.WcsDataset r1, $r2;
        java.util.ArrayList $r39, $r40;
        int i3, $i4;
        java.lang.String $r9, $r20, $r21, $r22, $r25, $r26, $r27, $r28;
        org.slf4j.Logger $r29, $r31, $r33;
        java.lang.IllegalArgumentException $r36, $r37, $r38;
        thredds.wcs.v1_0_0_1.WcsRangeField$Axis r35, $r41;
        thredds.wcs.Request$Format $r11, $r13, $r15;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        r3 := @parameter0: ucar.nc2.dt.GridDatatype;

        r1 := @parameter1: thredds.wcs.v1_0_0_1.WcsDataset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsDataset dataset> = r1;

        $r2 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsDataset dataset>;

        if $r2 != null goto label1;

        $r33 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): non-null dataset required.");

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null dataset required.");

        throw $r36;

     label1:
        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage> = r3;

        $r4 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        if $r4 != null goto label2;

        $r31 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): non-null coverage required.");

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null coverage required.");

        throw $r37;

     label2:
        $r5 = interfaceinvoke r3.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys> = $r5;

        $r6 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        if $r6 != null goto label3;

        $r29 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String)>("WcsCoverage(): Coverage must have non-null coordinate system.");

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null coordinate system required.");

        throw $r38;

     label3:
        $r7 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r8 = interfaceinvoke $r7.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r9 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper: java.lang.String getWcs1_0CrsId(ucar.unidata.geoloc.Projection)>($r8);

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String nativeCRS> = $r9;

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String defaultRequestCrs> = "OGC:CRS84";

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList> = $r39;

        $r12 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r11 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format GeoTIFF>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r14 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r13 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format GeoTIFF_Float>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r16 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $r15 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format NetCDF3>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r18 = interfaceinvoke $r17.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r18 == null goto label6;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label4:
        $l0 = (long) i3;

        $l1 = virtualinvoke $r18.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label5;

        $r27 = virtualinvoke $r18.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getCoordName(int)>(i3);

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r28);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r41 = new thredds.wcs.v1_0_0_1.WcsRangeField$Axis;

        $r25 = virtualinvoke $r18.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getName()>();

        $r26 = virtualinvoke $r18.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getDescription()>();

        $z0 = virtualinvoke $r18.<ucar.nc2.dataset.CoordinateAxis1D: boolean isNumeric()>();

        specialinvoke $r41.<thredds.wcs.v1_0_0_1.WcsRangeField$Axis: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.List)>("Vertical", $r25, $r26, $z0, $r40);

        r35 = $r41;

        goto label7;

     label6:
        r35 = null;

     label7:
        $r42 = new thredds.wcs.v1_0_0_1.WcsRangeField;

        $r20 = virtualinvoke r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String getName()>();

        $r21 = virtualinvoke r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String getLabel()>();

        $r22 = virtualinvoke r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String getDescription()>();

        specialinvoke $r42.<thredds.wcs.v1_0_0_1.WcsRangeField: void <init>(java.lang.String,java.lang.String,java.lang.String,thredds.wcs.v1_0_0_1.WcsRangeField$Axis)>($r20, $r21, $r22, r35);

        r0.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsRangeField range> = $r42;

        return;
    }

    ucar.nc2.dt.GridDatatype getGridDatatype()
    {
        ucar.nc2.dt.GridDatatype $r1;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        return $r1;
    }

    public java.lang.String getName()
    {
        ucar.nc2.dt.GridDatatype $r1;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.String $r2;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getLabel()
    {
        ucar.nc2.dt.GridDatatype $r1;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.String $r2;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridDatatype: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dt.GridDatatype $r1;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.String $r2;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridDatatype: java.lang.String getInfo()>();

        return $r2;
    }

    public ucar.nc2.dt.GridCoordSystem getCoordinateSystem()
    {
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        ucar.nc2.dt.GridCoordSystem $r1;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        return $r1;
    }

    public boolean hasMissingData()
    {
        ucar.nc2.dt.GridDatatype $r1;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        boolean $z0;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $z0 = interfaceinvoke $r1.<ucar.nc2.dt.GridDatatype: boolean hasMissingData()>();

        return $z0;
    }

    public java.lang.String getDefaultRequestCrs()
    {
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.String $r1;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String defaultRequestCrs>;

        return $r1;
    }

    public java.lang.String getNativeCrs()
    {
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.String $r1;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.lang.String nativeCRS>;

        return $r1;
    }

    public java.util.List getSupportedCoverageFormatList()
    {
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.util.List $r1;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList>;

        return $r1;
    }

    public boolean isSupportedCoverageFormat(thredds.wcs.Request$Format)
    {
        java.util.List $r2;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        thredds.wcs.Request$Format r1;
        boolean $z0;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        r1 := @parameter0: thredds.wcs.Request$Format;

        $r2 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: java.util.List supportedCoverageFormatList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public thredds.wcs.v1_0_0_1.WcsRangeField getRangeField()
    {
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        thredds.wcs.v1_0_0_1.WcsRangeField $r1;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsRangeField range>;

        return $r1;
    }

    public ucar.ma2.Range getRangeSetAxisRange(double, double)
    {
        byte $b0;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        int $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r11, $r19;
        double d0, d1;
        ucar.ma2.Range $r24;
        org.slf4j.Logger $r5;
        thredds.wcs.v1_0_0_1.WcsCoverage r0;
        java.lang.IllegalArgumentException $r23;
        ucar.ma2.InvalidRangeException $r20;
        ucar.nc2.dt.GridCoordSystem $r1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r21, $r22;

        r0 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label1;

        $r5 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRangeSetAxisRange(): Min is greater than max <");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>($r11);

        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Min is greater than max <");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r23;

     label1:
        $r1 = r0.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r2 == null goto label6;

        $i1 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: int findCoordElement(double)>(d0);

        $i2 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: int findCoordElement(double)>(d1);

        $i5 = (int) -1;

        if $i1 == $i5 goto label2;

        $i7 = (int) -1;

        if $i2 != $i7 goto label3;

     label2:
        return null;

     label3:
        $r24 = new ucar.ma2.Range;

        specialinvoke $r24.<ucar.ma2.Range: void <init>(int,int)>($i1, $i2);

     label4:
        return $r24;

     label5:
        $r20 := @caughtexception;

        return null;

     label6:
        return null;

        catch ucar.ma2.InvalidRangeException from label3 to label4 with label5;
    }

    public static void setDiskCache(ucar.nc2.util.DiskCache2)
    {
        ucar.nc2.util.DiskCache2 r0;

        r0 := @parameter0: ucar.nc2.util.DiskCache2;

        <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache> = r0;

        return;
    }

    private static ucar.nc2.util.DiskCache2 getDiskCache()
    {
        java.lang.IllegalStateException $r3;
        org.slf4j.Logger $r2;
        ucar.nc2.util.DiskCache2 $r0, $r1;

        $r0 = <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache>;

        if $r0 != null goto label1;

        $r2 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>("getDiskCache(): Disk cache has not been set.");

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Disk cache must be set before calling GetCoverage.getDiskCache().");

        throw $r3;

     label1:
        $r1 = <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache>;

        return $r1;
    }

    public java.io.File writeCoverageDataToFile(thredds.wcs.Request$Format, ucar.unidata.geoloc.LatLonRect, thredds.wcs.v1_0_0_1.WcsCoverage$VerticalRange, ucar.nc2.units.DateRange) throws thredds.wcs.v1_0_0_1.WcsException
    {
        ucar.nc2.dt.GridDatatype $r11, $r12, $r49, $r70, $r81, $r90, $r101, $r110, $r121, $r130, $r143, $r152, $r165, $r176, $r189;
        byte $b5, $b9;
        thredds.wcs.v1_0_0_1.WcsCoverage r9;
        java.lang.StringBuilder $r21, $r23, $r29, $r30, $r31, $r36, $r37, $r38, $r54, $r56, $r69, $r72, $r73, $r75, $r80, $r83, $r84, $r89, $r92, $r93, $r95, $r100, $r103, $r104, $r109, $r112, $r113, $r115, $r120, $r123, $r124, $r129, $r132, $r133, $r134, $r135, $r137, $r142, $r145, $r146, $r151, $r154, $r155, $r156, $r157, $r159, $r164, $r167, $r168, $r169, $r170, $r175, $r178, $r179, $r180, $r181, $r183, $r188, $r191, $r192, $r204, $r206, $r207, $r209, $r210, $r211, $r212, $r213, $r214, $r218, $r219, $r223, $r224, $r226, $r227, $r230, $r231, $r234, $r236, $r237, $r239, $r240, $r243, $r245, $r246, $r248, $r249, $r251, $r252;
        long $l2, $l3, $l4, $l6, $l7, $l8;
        ucar.nc2.util.DiskCache2 $r5, $r41;
        java.io.IOException $r66, $r106;
        ucar.ma2.Array $r13;
        ucar.ma2.InvalidRangeException $r86, $r126, $r148, $r172;
        java.util.Date $r62, $r63;
        ucar.nc2.units.DateType $r60, $r61, $r198, $r201;
        thredds.wcs.v1_0_0_1.WcsDataset $r16, $r47;
        int $i0, $i1, $i10, $i11, $i13, $i15;
        org.slf4j.Logger $r8, $r20, $r28, $r44, $r53, $r68, $r88, $r108, $r128, $r150, $r174, $r216;
        ucar.nc2.dt.grid.NetcdfCFWriter $r244;
        ucar.nc2.units.DateRange r1, $r197, $r200;
        ucar.nc2.dt.GridCoordSystem $r58, $r65;
        thredds.wcs.v1_0_0_1.WcsCoverage$VerticalRange r0;
        java.lang.String $r6, $r15, $r22, $r24, $r32, $r39, $r42, $r46, $r50, $r55, $r57, $r71, $r74, $r76, $r82, $r85, $r91, $r94, $r96, $r102, $r105, $r111, $r114, $r116, $r122, $r125, $r131, $r136, $r138, $r144, $r147, $r153, $r158, $r160, $r166, $r171, $r177, $r182, $r184, $r190, $r193, $r199, $r202, $r205, $r208, $r215, $r220;
        ucar.nc2.geotiff.GeotiffWriter $r235;
        java.io.File $r7, $r43, $r233, $r242;
        ucar.unidata.geoloc.LatLonRect r10;
        ucar.nc2.dt.GridDataset $r17, $r48;
        thredds.wcs.v1_0_0_1.WcsException$Code $r35, $r79, $r99, $r119, $r141, $r163, $r187, $r222;
        thredds.wcs.Request$Format r2, $r3, $r18, $r25, $r26;
        boolean $z0, $z1, $z2;
        ucar.nc2.dataset.CoordinateAxis1DTime $r59;
        ucar.ma2.Range $r194, r195, r196, $r229;
        java.util.List $r51;
        thredds.wcs.v1_0_0_1.WcsException $r225, $r228, $r232, $r238, $r241, $r247, $r250, $r253;

        r9 := @this: thredds.wcs.v1_0_0_1.WcsCoverage;

        r2 := @parameter0: thredds.wcs.Request$Format;

        r10 := @parameter1: ucar.unidata.geoloc.LatLonRect;

        r0 := @parameter2: thredds.wcs.v1_0_0_1.WcsCoverage$VerticalRange;

        r1 := @parameter3: ucar.nc2.units.DateRange;

     label01:
        if r0 == null goto label02;

        $r65 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r194 = virtualinvoke r0.<thredds.wcs.v1_0_0_1.WcsCoverage$VerticalRange: ucar.ma2.Range getRange(ucar.nc2.dt.GridCoordSystem)>($r65);

        goto label03;

     label02:
        $r194 = null;

     label03:
        r195 = $r194;

     label04:
        goto label06;

     label05:
        $r172 := @caughtexception;

        $r174 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r223 = new java.lang.StringBuilder;

        specialinvoke $r223.<java.lang.StringBuilder: void <init>()>();

        $r175 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to subset coverage <");

        $r176 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r177 = interfaceinvoke $r176.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r178 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r177);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> along vertical range <");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r182 = virtualinvoke $r172.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r183 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r182);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r174.<org.slf4j.Logger: void error(java.lang.String)>($r184);

        $r225 = new thredds.wcs.v1_0_0_1.WcsException;

        $r187 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code CoverageNotDefined>;

        $r224 = new java.lang.StringBuilder;

        specialinvoke $r224.<java.lang.StringBuilder: void <init>()>();

        $r188 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to subset coverage [");

        $r189 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r190 = interfaceinvoke $r189.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r191 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r190);

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] along vertical range.");

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r225.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r187, "Vertical", $r193);

        throw $r225;

     label06:
        r196 = null;

        if r1 == null goto label11;

        $r58 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridCoordSystem coordSys>;

        $r59 = interfaceinvoke $r58.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $r60 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r61 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r62 = virtualinvoke $r60.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i0 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r62);

        $r63 = virtualinvoke $r61.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i1 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r63);

        if $i0 < 0 goto label07;

        $l2 = (long) $i0;

        $l3 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: long getSize()>();

        $l4 = $l3 - 1L;

        $b5 = $l2 cmp $l4;

        $i10 = (int) $b5;

        if $i10 > 0 goto label07;

        if $i1 < 0 goto label07;

        $l6 = (long) $i1;

        $l7 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: long getSize()>();

        $l8 = $l7 - 1L;

        $b9 = $l6 cmp $l8;

        $i11 = (int) $b9;

        if $i11 <= 0 goto label08;

     label07:
        $r197 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.units.DateRange getDateRange()>();

        $r198 = virtualinvoke $r197.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r199 = virtualinvoke $r198.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r200 = virtualinvoke $r59.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.units.DateRange getDateRange()>();

        $r201 = virtualinvoke $r200.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r202 = virtualinvoke $r201.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r226 = new java.lang.StringBuilder;

        specialinvoke $r226.<java.lang.StringBuilder: void <init>()>();

        $r204 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested temporal range [");

        $r205 = virtualinvoke $r60.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r206 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r205);

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r208 = virtualinvoke $r61.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r209 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r208);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not in available range [");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r199);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r202);

        $r214 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.String toString()>();

        $r216 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r227 = new java.lang.StringBuilder;

        specialinvoke $r227.<java.lang.StringBuilder: void <init>()>();

        $r218 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): ");

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r215);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r216.<org.slf4j.Logger: void debug(java.lang.String)>($r220);

        $r228 = new thredds.wcs.v1_0_0_1.WcsException;

        $r222 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code CoverageNotDefined>;

        specialinvoke $r228.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r222, "Time", $r215);

        throw $r228;

     label08:
        $r229 = new ucar.ma2.Range;

        specialinvoke $r229.<ucar.ma2.Range: void <init>(int,int)>($i0, $i1);

        r196 = $r229;

     label09:
        goto label11;

     label10:
        $r148 := @caughtexception;

        $r150 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r230 = new java.lang.StringBuilder;

        specialinvoke $r230.<java.lang.StringBuilder: void <init>()>();

        $r151 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to subset coverage [");

        $r152 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r153 = interfaceinvoke $r152.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r154 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153);

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] along time axis [");

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r158 = virtualinvoke $r148.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r150.<org.slf4j.Logger: void error(java.lang.String)>($r160);

        $r232 = new thredds.wcs.v1_0_0_1.WcsException;

        $r163 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code CoverageNotDefined>;

        $r231 = new java.lang.StringBuilder;

        specialinvoke $r231.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to subset coverage [");

        $r165 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r166 = interfaceinvoke $r165.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r167 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] along time axis [");

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r232.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r163, "Time", $r171);

        throw $r232;

     label11:
        $r3 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format GeoTIFF>;

        if r2 == $r3 goto label12;

        $r25 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format GeoTIFF_Float>;

        if r2 != $r25 goto label20;

     label12:
        $r233 = new java.io.File;

        $r5 = staticinvoke <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 getDiskCache()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.util.DiskCache2: java.lang.String getRootDirectory()>();

        specialinvoke $r233.<java.io.File: void <init>(java.lang.String)>($r6);

        $r7 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("WCS", ".tif", $r233);

        $r8 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label13;

        $r20 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r234 = new java.lang.StringBuilder;

        specialinvoke $r234.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): tifFile=");

        $r22 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r24);

     label13:
        $r11 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range,ucar.ma2.Range,ucar.unidata.geoloc.LatLonRect,int,int,int)>(r196, r195, r10, 1, 1, 1);

        $i13 = (int) -1;

        $i15 = (int) -1;

        $r13 = interfaceinvoke $r12.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>(0, 0, $i13, $i15);

        $r235 = new ucar.nc2.geotiff.GeotiffWriter;

        $r15 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r235.<ucar.nc2.geotiff.GeotiffWriter: void <init>(java.lang.String)>($r15);

        $r16 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsDataset dataset>;

        $r17 = virtualinvoke $r16.<thredds.wcs.v1_0_0_1.WcsDataset: ucar.nc2.dt.GridDataset getDataset()>();

        $r18 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format GeoTIFF>;

        if r2 != $r18 goto label14;

        $z2 = 1;

        goto label15;

     label14:
        $z2 = 0;

     label15:
        virtualinvoke $r235.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(ucar.nc2.dt.GridDataset,ucar.nc2.dt.GridDatatype,ucar.ma2.Array,boolean)>($r17, $r12, $r13, $z2);

        virtualinvoke $r235.<ucar.nc2.geotiff.GeotiffWriter: void close()>();

     label16:
        goto label19;

     label17:
        $r126 := @caughtexception;

        $r128 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r236 = new java.lang.StringBuilder;

        specialinvoke $r236.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to subset coverage <");

        $r130 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r131 = interfaceinvoke $r130.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r132 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> along time axis <");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r136 = virtualinvoke $r126.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r136);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r128.<org.slf4j.Logger: void error(java.lang.String)>($r138);

        $r238 = new thredds.wcs.v1_0_0_1.WcsException;

        $r141 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code CoverageNotDefined>;

        $r237 = new java.lang.StringBuilder;

        specialinvoke $r237.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to subset coverage [");

        $r143 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r144 = interfaceinvoke $r143.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r145 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144);

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r238.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r141, "", $r147);

        throw $r238;

     label18:
        $r106 := @caughtexception;

        $r108 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r239 = new java.lang.StringBuilder;

        specialinvoke $r239.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to write file for requested coverage <");

        $r110 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r111 = interfaceinvoke $r110.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r112 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r114 = virtualinvoke $r106.<java.io.IOException: java.lang.String getMessage()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r108.<org.slf4j.Logger: void error(java.lang.String)>($r116);

        $r241 = new thredds.wcs.v1_0_0_1.WcsException;

        $r119 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code UNKNOWN>;

        $r240 = new java.lang.StringBuilder;

        specialinvoke $r240.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem creating coverage [");

        $r121 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r122 = interfaceinvoke $r121.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r123 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r241.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r119, "", $r125);

        throw $r241;

     label19:
        return $r7;

     label20:
        $r26 = <thredds.wcs.Request$Format: thredds.wcs.Request$Format NetCDF3>;

        if r2 != $r26 goto label23;

        $r242 = new java.io.File;

        $r41 = staticinvoke <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 getDiskCache()>();

        $r42 = virtualinvoke $r41.<ucar.nc2.util.DiskCache2: java.lang.String getRootDirectory()>();

        specialinvoke $r242.<java.io.File: void <init>(java.lang.String)>($r42);

        $r43 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("WCS", ".nc", $r242);

        $r44 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r44.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label21;

        $r53 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r243 = new java.lang.StringBuilder;

        specialinvoke $r243.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): ncFile=");

        $r55 = virtualinvoke $r43.<java.io.File: java.lang.String getPath()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r53.<org.slf4j.Logger: void debug(java.lang.String)>($r57);

     label21:
        $r244 = new ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke $r244.<ucar.nc2.dt.grid.NetcdfCFWriter: void <init>()>();

        $r46 = virtualinvoke $r43.<java.io.File: java.lang.String getPath()>();

        $r47 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: thredds.wcs.v1_0_0_1.WcsDataset dataset>;

        $r48 = virtualinvoke $r47.<thredds.wcs.v1_0_0_1.WcsDataset: ucar.nc2.dt.GridDataset getDataset()>();

        $r49 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r50 = interfaceinvoke $r49.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r51 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r50);

        virtualinvoke $r244.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,int,ucar.ma2.Range,ucar.nc2.units.DateRange,int,boolean)>($r46, $r48, $r51, r10, 1, r195, r1, 1, 1);

     label22:
        return $r43;

     label23:
        $r28 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r245 = new java.lang.StringBuilder;

        specialinvoke $r245.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Unsupported response encoding format [");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>($r32);

        $r247 = new thredds.wcs.v1_0_0_1.WcsException;

        $r35 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code InvalidFormat>;

        $r246 = new java.lang.StringBuilder;

        specialinvoke $r246.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported response encoding format [");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r247.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r35, "Format", $r39);

        throw $r247;

     label24:
        $r86 := @caughtexception;

        $r88 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r248 = new java.lang.StringBuilder;

        specialinvoke $r248.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to subset coverage <");

        $r90 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r91 = interfaceinvoke $r90.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r94 = virtualinvoke $r86.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r88.<org.slf4j.Logger: void error(java.lang.String)>($r96);

        $r250 = new thredds.wcs.v1_0_0_1.WcsException;

        $r99 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code CoverageNotDefined>;

        $r249 = new java.lang.StringBuilder;

        specialinvoke $r249.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to subset coverage [");

        $r101 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r102 = interfaceinvoke $r101.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r103 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r250.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r99, "", $r105);

        throw $r250;

     label25:
        $r66 := @caughtexception;

        $r68 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        $r251 = new java.lang.StringBuilder;

        specialinvoke $r251.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeCoverageDataToFile(): Failed to create or write temporary file for requested coverage <");

        $r70 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r71 = interfaceinvoke $r70.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r74 = virtualinvoke $r66.<java.io.IOException: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r68.<org.slf4j.Logger: void error(java.lang.String)>($r76);

        $r253 = new thredds.wcs.v1_0_0_1.WcsException;

        $r79 = <thredds.wcs.v1_0_0_1.WcsException$Code: thredds.wcs.v1_0_0_1.WcsException$Code UNKNOWN>;

        $r252 = new java.lang.StringBuilder;

        specialinvoke $r252.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem creating coverage [");

        $r81 = r9.<thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.dt.GridDatatype coverage>;

        $r82 = interfaceinvoke $r81.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r253.<thredds.wcs.v1_0_0_1.WcsException: void <init>(thredds.wcs.v1_0_0_1.WcsException$Code,java.lang.String,java.lang.String)>($r79, "", $r85);

        throw $r253;

        catch ucar.ma2.InvalidRangeException from label01 to label04 with label05;
        catch ucar.ma2.InvalidRangeException from label08 to label09 with label10;
        catch ucar.ma2.InvalidRangeException from label13 to label16 with label17;
        catch java.io.IOException from label13 to label16 with label18;
        catch ucar.ma2.InvalidRangeException from label11 to label19 with label24;
        catch ucar.ma2.InvalidRangeException from label20 to label22 with label24;
        catch ucar.ma2.InvalidRangeException from label23 to label24 with label24;
        catch java.io.IOException from label11 to label19 with label25;
        catch java.io.IOException from label20 to label22 with label25;
        catch java.io.IOException from label23 to label24 with label25;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/wcs/v1_0_0_1/WcsCoverage;");

        <thredds.wcs.v1_0_0_1.WcsCoverage: org.slf4j.Logger log> = $r0;

        <thredds.wcs.v1_0_0_1.WcsCoverage: ucar.nc2.util.DiskCache2 diskCache> = null;

        return;
    }
}
