public class org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator extends org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor
{

    public void <init>(org.apache.tika.parser.ParseContext, org.apache.poi.xslf.extractor.XSLFPowerPointExtractor)
    {
        org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator r0;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor r2;
        org.apache.tika.parser.ParseContext r1;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator;

        r1 := @parameter0: org.apache.tika.parser.ParseContext;

        r2 := @parameter1: org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.POIXMLTextExtractor)>(r1, r2);

        return;
    }

    protected void buildXHTML(org.apache.tika.sax.XHTMLContentHandler) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.poi.xslf.usermodel.XSLFComments $r8;
        org.apache.poi.xslf.usermodel.XSLFSlide[] $r4;
        org.apache.poi.xslf.usermodel.XSLFSheet $r16, $r31;
        org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator r0;
        org.apache.poi.xslf.usermodel.XSLFSlideLayout $r29;
        org.apache.poi.openxml4j.opc.PackagePart $r6, $r18, $r20;
        boolean $z0;
        org.apache.poi.openxml4j.opc.PackagePartName $r19, $r21;
        org.apache.poi.POIXMLTextExtractor $r1;
        java.util.List $r10;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList $r9;
        java.lang.StringBuilder $r24, $r25, $r26;
        org.apache.poi.xslf.usermodel.XSLFSlide r5;
        org.openxmlformats.schemas.presentationml.x2006.main.CTComment r13;
        org.apache.poi.POIXMLDocument $r2;
        int i0, i1;
        java.lang.String $r14, $r22, $r23, r27;
        org.apache.poi.xslf.usermodel.XSLFShape[] $r15, $r17, $r28, $r30, $r32;
        java.util.Iterator $r11;
        org.apache.tika.sax.XHTMLContentHandler r7;
        org.apache.poi.xslf.usermodel.XMLSlideShow r3;
        org.apache.poi.xslf.usermodel.XSLFNotes $r33;
        java.lang.Object $r12;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator;

        r7 := @parameter0: org.apache.tika.sax.XHTMLContentHandler;

        $r1 = r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: org.apache.poi.POIXMLTextExtractor extractor>;

        $r2 = virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: org.apache.poi.POIXMLDocument getDocument()>();

        r3 = (org.apache.poi.xslf.usermodel.XMLSlideShow) $r2;

        $r4 = virtualinvoke r3.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.apache.poi.xslf.usermodel.XSLFSlide[] getSlides()>();

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r5 = $r4[i1];

        $r6 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        if $r6 == null goto label2;

        $r18 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r19 = virtualinvoke $r18.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        if $r19 == null goto label2;

        $r20 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r21 = virtualinvoke $r20.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r22 = virtualinvoke $r21.<org.apache.poi.openxml4j.opc.PackagePartName: java.lang.String toString()>();

        $r23 = virtualinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: java.lang.String getJustFileName(java.lang.String)>($r22);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        r27 = null;

     label3:
        $r28 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r28, 0, r7, r27);

        $r29 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFSlideLayout getMasterSheet()>();

        $r30 = virtualinvoke $r29.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r30, 1, r7, null);

        $r31 = virtualinvoke $r29.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()>();

        $r32 = virtualinvoke $r31.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r32, 1, r7, null);

        $r33 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFNotes getNotes()>();

        if $r33 == null goto label4;

        $r15 = virtualinvoke $r33.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r15, 0, r7, r27);

        $r16 = virtualinvoke $r33.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()>();

        $r17 = virtualinvoke $r16.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r0.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r17, 1, r7, null);

     label4:
        $r8 = virtualinvoke r5.<org.apache.poi.xslf.usermodel.XSLFSlide: org.apache.poi.xslf.usermodel.XSLFComments getComments()>();

        if $r8 == null goto label6;

        $r9 = virtualinvoke $r8.<org.apache.poi.xslf.usermodel.XSLFComments: org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList getCTCommentsList()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.presentationml.x2006.main.CTCommentList: java.util.List getCmList()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.openxmlformats.schemas.presentationml.x2006.main.CTComment) $r12;

        $r14 = interfaceinvoke r13.<org.openxmlformats.schemas.presentationml.x2006.main.CTComment: java.lang.String getText()>();

        virtualinvoke r7.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("p", $r14);

        goto label5;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;
    }

    private void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[], boolean, org.apache.tika.sax.XHTMLContentHandler, java.lang.String) throws org.xml.sax.SAXException
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTPicture r43;
        org.apache.poi.xslf.usermodel.XSLFGraphicFrame r41;
        org.apache.poi.xslf.usermodel.XSLFTable r39;
        org.apache.poi.xslf.usermodel.XSLFGroupShape r38;
        org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator r30;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7;
        org.xml.sax.helpers.AttributesImpl $r11, $r23;
        java.util.List $r29;
        org.apache.xmlbeans.XmlObject[] $r17;
        java.lang.StringBuilder $r13, $r14, $r15, $r24, $r25, $r26;
        javax.xml.namespace.QName $r19;
        org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame $r16;
        java.lang.Object[] $r32;
        org.apache.poi.xslf.usermodel.XSLFShape r1;
        org.w3c.dom.Node $r21;
        int i0, $i1, i2, i3, i4;
        org.apache.xmlbeans.XmlObject $r2, $r3, r18, $r20;
        java.lang.String $r9, r10, $r22, $r36, r42, r44;
        org.apache.poi.xslf.usermodel.XSLFTextShape r37;
        org.apache.poi.xslf.usermodel.XSLFTableCell[] $r31;
        org.apache.poi.xslf.usermodel.XSLFShape[] r0, $r33, $r34;
        org.apache.poi.xslf.usermodel.Placeholder $r35;
        java.util.Iterator $r27;
        org.apache.tika.sax.XHTMLContentHandler r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r4, $r5, $r7;
        org.apache.poi.xslf.usermodel.XSLFTableRow r40;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r6, $r8;
        java.lang.Object $r28;

        r30 := @this: org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator;

        r0 := @parameter0: org.apache.poi.xslf.usermodel.XSLFShape[];

        z5 := @parameter1: boolean;

        r12 := @parameter2: org.apache.tika.sax.XHTMLContentHandler;

        r10 := @parameter3: java.lang.String;

        i0 = lengthof r0;

        i2 = 0;

     label01:
        if i2 >= i0 goto label15;

        r1 = r0[i2];

        $z0 = r1 instanceof org.apache.poi.xslf.usermodel.XSLFTextShape;

        if $z0 == 0 goto label03;

        r37 = (org.apache.poi.xslf.usermodel.XSLFTextShape) r1;

        $r35 = virtualinvoke r37.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.poi.xslf.usermodel.Placeholder getTextType()>();

        if z5 == 0 goto label02;

        if $r35 == null goto label02;

        goto label14;

     label02:
        $r36 = virtualinvoke r37.<org.apache.poi.xslf.usermodel.XSLFTextShape: java.lang.String getText()>();

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("p", $r36);

        goto label14;

     label03:
        $z1 = r1 instanceof org.apache.poi.xslf.usermodel.XSLFGroupShape;

        if $z1 == 0 goto label04;

        r38 = (org.apache.poi.xslf.usermodel.XSLFGroupShape) r1;

        $r34 = virtualinvoke r38.<org.apache.poi.xslf.usermodel.XSLFGroupShape: org.apache.poi.xslf.usermodel.XSLFShape[] getShapes()>();

        specialinvoke r30.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r34, z5, r12, r10);

        goto label14;

     label04:
        $z2 = r1 instanceof org.apache.poi.xslf.usermodel.XSLFTable;

        if $z2 == 0 goto label07;

        r39 = (org.apache.poi.xslf.usermodel.XSLFTable) r1;

        $r27 = virtualinvoke r39.<org.apache.poi.xslf.usermodel.XSLFTable: java.util.Iterator iterator()>();

     label05:
        $z7 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label06;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.apache.poi.xslf.usermodel.XSLFTableRow) $r28;

        $r29 = virtualinvoke r40.<org.apache.poi.xslf.usermodel.XSLFTableRow: java.util.List getCells()>();

        $i1 = interfaceinvoke $r29.<java.util.List: int size()>();

        $r31 = newarray (org.apache.poi.xslf.usermodel.XSLFTableCell)[$i1];

        $r32 = interfaceinvoke $r29.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r31);

        $r33 = (org.apache.poi.xslf.usermodel.XSLFShape[]) $r32;

        specialinvoke r30.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void extractContent(org.apache.poi.xslf.usermodel.XSLFShape[],boolean,org.apache.tika.sax.XHTMLContentHandler,java.lang.String)>($r33, z5, r12, r10);

        goto label05;

     label06:
        goto label14;

     label07:
        $z3 = r1 instanceof org.apache.poi.xslf.usermodel.XSLFGraphicFrame;

        if $z3 == 0 goto label12;

        r41 = (org.apache.poi.xslf.usermodel.XSLFGraphicFrame) r1;

        $r16 = virtualinvoke r41.<org.apache.poi.xslf.usermodel.XSLFGraphicFrame: org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame getXmlObject()>();

        $r17 = interfaceinvoke $r16.<org.openxmlformats.schemas.presentationml.x2006.main.CTGraphicalObjectFrame: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace p=\'http://schemas.openxmlformats.org/presentationml/2006/main\' .//*/p:oleObj");

        if $r17 == null goto label11;

        i3 = lengthof $r17;

        i4 = 0;

     label08:
        if i4 >= i3 goto label11;

        r18 = $r17[i4];

        $r19 = new javax.xml.namespace.QName;

        specialinvoke $r19.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "id");

        $r20 = interfaceinvoke r18.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject selectAttribute(javax.xml.namespace.QName)>($r19);

        if $r20 == null goto label10;

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: org.w3c.dom.Node getDomNode()>();

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r42 = $r22;

        if r10 == null goto label09;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r42 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r23 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r23.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        virtualinvoke $r23.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "class", "class", "CDATA", "embedded");

        virtualinvoke $r23.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "id", "id", "CDATA", r42);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl)>("div", $r23);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("div");

     label10:
        i4 = i4 + 1;

        goto label08;

     label11:
        goto label14;

     label12:
        $z4 = r1 instanceof org.apache.poi.xslf.usermodel.XSLFPictureShape;

        if $z4 == 0 goto label14;

        if z5 != 0 goto label14;

        $r2 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        $z6 = $r2 instanceof org.openxmlformats.schemas.presentationml.x2006.main.CTPicture;

        if $z6 == 0 goto label14;

        $r3 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        r43 = (org.openxmlformats.schemas.presentationml.x2006.main.CTPicture) $r3;

        $r4 = interfaceinvoke r43.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        if $r4 == null goto label14;

        $r5 = interfaceinvoke r43.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        if $r6 == null goto label14;

        $r7 = interfaceinvoke r43.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: java.lang.String getEmbed()>();

        r44 = $r9;

        if $r9 == null goto label14;

        if r10 == null goto label13;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r44 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $r11 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r11.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        virtualinvoke $r11.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "class", "class", "CDATA", "embedded");

        virtualinvoke $r11.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "id", "id", "CDATA", r44);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl)>("div", $r11);

        virtualinvoke r12.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("div");

     label14:
        i2 = i2 + 1;

        goto label01;

     label15:
        return;
    }

    protected java.util.List getMainDocumentParts() throws org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator r1;
        org.apache.poi.xslf.XSLFSlideShow $r5;
        org.apache.poi.openxml4j.opc.PackagePart $r11, $r23;
        java.net.URI $r20;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r24;
        org.apache.poi.openxml4j.opc.PackagePartName $r21;
        java.lang.Exception $r30;
        org.apache.poi.POIXMLTextExtractor $r2;
        java.util.List $r7;
        org.apache.poi.openxml4j.opc.OPCPackage $r22;
        org.apache.poi.openxml4j.opc.PackageRelationship r17;
        java.util.ArrayList $r0;
        org.apache.poi.xslf.usermodel.XSLFRelation $r12;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r14;
        org.apache.tika.exception.TikaException $r25, $r27, $r29, $r31;
        org.apache.poi.POIXMLDocument $r3;
        java.lang.String $r13, $r32;
        java.util.Iterator $r8, $r15;
        org.apache.poi.xslf.usermodel.XMLSlideShow r4;
        java.io.IOException $r28;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdList $r6;
        org.apache.poi.openxml4j.opc.TargetMode $r18, $r19;
        org.apache.xmlbeans.XmlException $r26;
        java.lang.Object $r9, $r16;
        org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdListEntry r10;

        r1 := @this: org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: org.apache.poi.POIXMLTextExtractor extractor>;

        $r3 = virtualinvoke $r2.<org.apache.poi.POIXMLTextExtractor: org.apache.poi.POIXMLDocument getDocument()>();

        r4 = (org.apache.poi.xslf.usermodel.XMLSlideShow) $r3;

     label01:
        $r5 = virtualinvoke r4.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.apache.poi.xslf.XSLFSlideShow _getXSLFSlideShow()>();

     label02:
        goto label04;

     label03:
        $r30 := @caughtexception;

        $r31 = new org.apache.tika.exception.TikaException;

        $r32 = virtualinvoke $r30.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r31.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r32);

        throw $r31;

     label04:
        $r6 = virtualinvoke $r5.<org.apache.poi.xslf.XSLFSlideShow: org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdList getSlideReferences()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdList: java.util.List getSldIdList()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdListEntry) $r9;

     label06:
        $r11 = virtualinvoke $r5.<org.apache.poi.xslf.XSLFSlideShow: org.apache.poi.openxml4j.opc.PackagePart getSlidePart(org.openxmlformats.schemas.presentationml.x2006.main.CTSlideIdListEntry)>(r10);

     label07:
        goto label10;

     label08:
        $r28 := @caughtexception;

        $r29 = new org.apache.tika.exception.TikaException;

        specialinvoke $r29.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Broken OOXML file", $r28);

        throw $r29;

     label09:
        $r26 := @caughtexception;

        $r27 = new org.apache.tika.exception.TikaException;

        specialinvoke $r27.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Broken OOXML file", $r26);

        throw $r27;

     label10:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

     label11:
        $r12 = <org.apache.poi.xslf.usermodel.XSLFRelation: org.apache.poi.xslf.usermodel.XSLFRelation VML_DRAWING>;

        $r13 = virtualinvoke $r12.<org.apache.poi.xslf.usermodel.XSLFRelation: java.lang.String getRelation()>();

        $r14 = virtualinvoke $r11.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r16;

        $r18 = virtualinvoke r17.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r19 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode INTERNAL>;

        if $r18 != $r19 goto label13;

        $r20 = virtualinvoke r17.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r21 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r20);

        $r22 = virtualinvoke r17.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r23 = virtualinvoke $r22.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r21);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

     label13:
        goto label12;

     label14:
        goto label16;

     label15:
        $r24 := @caughtexception;

        $r25 = new org.apache.tika.exception.TikaException;

        specialinvoke $r25.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Broken OOXML file", $r24);

        throw $r25;

     label16:
        goto label05;

     label17:
        return $r0;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label08;
        catch org.apache.xmlbeans.XmlException from label06 to label07 with label09;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label11 to label14 with label15;
    }
}
