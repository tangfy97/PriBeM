public abstract class org.joda.time.DurationField extends java.lang.Object implements java.lang.Comparable
{

    public void <init>()
    {
        org.joda.time.DurationField r0;

        r0 := @this: org.joda.time.DurationField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.joda.time.DurationFieldType getType();

    public abstract java.lang.String getName();

    public abstract boolean isSupported();

    public abstract boolean isPrecise();

    public abstract long getUnitMillis();

    public abstract int getValue(long);

    public abstract long getValueAsLong(long);

    public abstract int getValue(long, long);

    public abstract long getValueAsLong(long, long);

    public abstract long getMillis(int);

    public abstract long getMillis(long);

    public abstract long getMillis(int, long);

    public abstract long getMillis(long, long);

    public abstract long add(long, int);

    public abstract long add(long, long);

    public long subtract(long, int)
    {
        org.joda.time.DurationField r0;
        int i0, $i2;
        long l1, $l3, $l4, $l5;

        r0 := @this: org.joda.time.DurationField;

        l1 := @parameter0: long;

        i0 := @parameter1: int;

        if i0 != -2147483648 goto label1;

        $l4 = (long) i0;

        $l5 = virtualinvoke r0.<org.joda.time.DurationField: long subtract(long,long)>(l1, $l4);

        return $l5;

     label1:
        $i2 = neg i0;

        $l3 = virtualinvoke r0.<org.joda.time.DurationField: long add(long,int)>(l1, $i2);

        return $l3;
    }

    public long subtract(long, long)
    {
        byte $b1;
        org.joda.time.DurationField r0;
        long l0, l2, $l3, $l4;
        java.lang.ArithmeticException $r1;

        r0 := @this: org.joda.time.DurationField;

        l2 := @parameter0: long;

        l0 := @parameter1: long;

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        $r1 = new java.lang.ArithmeticException;

        specialinvoke $r1.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Long.MIN_VALUE cannot be negated");

        throw $r1;

     label1:
        $l3 = neg l0;

        $l4 = virtualinvoke r0.<org.joda.time.DurationField: long add(long,long)>(l2, $l3);

        return $l4;
    }

    public abstract int getDifference(long, long);

    public abstract long getDifferenceAsLong(long, long);

    public abstract int compareTo(java.lang.Object);

    public abstract java.lang.String toString();
}
