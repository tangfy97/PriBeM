public class org.apache.cxf.jaxrs.impl.HttpHeadersImpl extends java.lang.Object implements javax.ws.rs.core.HttpHeaders
{
    private static final java.lang.String HEADER_SPLIT_PROPERTY;
    private static final java.lang.String COOKIE_SEPARATOR_PROPERTY;
    private static final java.lang.String COOKIE_SEPARATOR_CRLF;
    private static final java.lang.String DEFAULT_SEPARATOR;
    private static final java.lang.String DEFAULT_COOKIE_SEPARATOR;
    private static final java.lang.String COMPLEX_HEADER_EXPRESSION;
    private static final java.util.regex.Pattern COMPLEX_HEADER_PATTERN;
    private static final java.lang.String QUOTE;
    private static final java.util.Set HEADERS_WITH_POSSIBLE_QUOTES;
    private org.apache.cxf.message.Message message;
    private java.util.Map headers;

    public void <init>(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r4, $r5, $r6, $r7;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: org.apache.cxf.message.Message message> = r1;

        $r2 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r4);

        r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers> = $r5;

        $r6 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        if $r6 != null goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers> = $r7;

     label1:
        return;
    }

    public java.util.List getAcceptableMediaTypes()
    {
        java.util.Iterator $r6;
        java.util.List r3, $r9, $r11;
        javax.ws.rs.core.MediaType $r10;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r1;
        java.lang.Object $r2, $r4, $r7;
        java.lang.String r8;
        java.util.LinkedList $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Accept");

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        if $r4 != null goto label2;

     label1:
        $r10 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        return $r11;

     label2:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>(r8);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label3;

     label4:
        specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void sortMediaTypesUsingQualityFactor(java.util.List)>($r5);

        return $r5;
    }

    public java.util.Map getCookies()
    {
        java.util.HashMap $r5;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r1, $r4;
        java.lang.String r8, $r9, r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6, $r10;
        javax.ws.rs.core.Cookie $r13;
        java.util.List r3, $r15;
        java.lang.Object $r2, $r7, $r11;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cookie");

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r4;

     label2:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        if r8 != null goto label4;

        goto label3;

     label4:
        $z1 = virtualinvoke r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("$");

        if $z1 == 0 goto label5;

        $r15 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r8);

        goto label6;

     label5:
        $r9 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String getCookieSeparator()>();

        $r15 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)>("Cookie", r8, $r9);

     label6:
        $r10 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $r13 = staticinvoke <javax.ws.rs.core.Cookie: javax.ws.rs.core.Cookie valueOf(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<javax.ws.rs.core.Cookie: java.lang.String getName()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        goto label7;

     label8:
        goto label3;

     label9:
        return $r5;
    }

    private java.lang.String getCookieSeparator()
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        org.apache.cxf.message.Message $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.http.cookie.separator");

        if $r2 == null goto label3;

        $r3 = "crlf";

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = "\r\n";

        goto label2;

     label1:
        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r5;

     label3:
        return ";";
    }

    public java.util.Locale getLanguage()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Locale $r5;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getListValues(java.lang.String)>("Content-Language");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.util.Locale getLocale(java.lang.String)>($r4);

     label2:
        return $r5;
    }

    public javax.ws.rs.core.MediaType getMediaType()
    {
        java.util.List $r1;
        javax.ws.rs.core.MediaType $r4;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getListValues(java.lang.String)>("Content-Type");

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r3);

     label2:
        return $r4;
    }

    public javax.ws.rs.core.MultivaluedMap getRequestHeaders()
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r3, $r11;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r4, $r5, $r8, $r12;
        java.lang.String $r17;
        boolean $z0, $z1;
        java.util.Map$Entry r14;
        java.util.Iterator $r10;
        org.apache.cxf.message.Message $r1;
        java.util.Set $r9;
        java.util.List $r18;
        java.util.TreeMap $r6;
        java.lang.Object $r2, $r13, $r15, $r16;
        java.util.Comparator $r7;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.http.header.split");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r6 = new java.util.TreeMap;

        $r7 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r6.<java.util.TreeMap: void <init>(java.util.Comparator)>($r7);

        $r8 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getRequestHeader(java.lang.String)>($r17);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        goto label1;

     label2:
        $r11 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r12 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r6);

        specialinvoke $r11.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map,boolean)>($r12, 0);

        return $r11;

     label3:
        $r3 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r5 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map,boolean)>($r5, 0);

        return $r3;
    }

    public java.util.List getAcceptableLanguages()
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator $r5;
        java.lang.Float $r12, $r15, $r18;
        java.util.HashMap $r3;
        java.lang.String[] $r8, $r14;
        java.util.ArrayList $r2;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Locale $r11, $r19;
        int $i0, $i1, $i2;
        java.lang.String r7, $r9, $r10, $r13, $r16, $r17;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.List $r1, $r20;
        float $f0;
        java.lang.Object $r6;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getListValues(java.lang.String)>("Accept-Language");

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r19 = new java.util.Locale;

        specialinvoke $r19.<java.util.Locale: void <init>(java.lang.String)>("*");

        $r20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r19);

        return $r20;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r7, ";");

        $r9 = $r8[0];

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.util.Locale getLocale(java.lang.String)>($r10);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        $i1 = lengthof $r8;

        if $i1 <= 1 goto label5;

        $r13 = $r8[1];

        $r14 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r13, "=");

        $i2 = lengthof $r14;

        if $i2 <= 1 goto label3;

        $r16 = $r14[1];

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: float getMediaTypeQualityFactor(java.lang.String)>($r17);

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r18);

        goto label4;

     label3:
        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r15);

     label4:
        goto label6;

     label5:
        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label6:
        goto label2;

     label7:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 1 goto label8;

        return $r2;

     label8:
        $r5 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator;

        specialinvoke $r5.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator: void <init>(java.util.Map)>($r3);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r5);

        return $r2;
    }

    public java.util.List getRequestHeader(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r2;
        java.lang.String r1, r11, $r12, $r15;
        java.util.LinkedList $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r9;
        org.apache.cxf.message.Message $r6;
        java.util.List r4, $r13, $r14;
        java.lang.Object $r3, $r5, $r7, $r10;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        if $r5 != null goto label2;

     label1:
        $r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r14;

     label2:
        $r6 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: org.apache.cxf.message.Message message>;

        $r7 = interfaceinvoke $r6.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.http.header.split");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: boolean isDateRelatedHeader(java.lang.String)>(r1);

        if $z2 == 0 goto label4;

     label3:
        return r4;

     label4:
        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        $r9 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        if r11 != null goto label6;

        goto label5;

     label6:
        $r12 = "Cookie";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z3 == 0 goto label7;

        $r15 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String getCookieSeparator()>();

        goto label8;

     label7:
        $r15 = ",";

     label8:
        $r13 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)>(r1, r11, $r15);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        goto label5;

     label9:
        return $r8;
    }

    private java.util.List getListValues(java.lang.String)
    {
        java.util.Iterator $r7;
        java.util.List r4, $r10, $r11;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r2;
        java.lang.Object $r3, $r5, $r8;
        java.lang.String r1, r9;
        java.util.LinkedList $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        if $r5 != null goto label2;

     label1:
        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

     label2:
        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: boolean isDateRelatedHeader(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        return r4;

     label3:
        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        $r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getHeaderValues(java.lang.String,java.lang.String)>(r1, r9);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        goto label4;

     label5:
        return $r6;
    }

    private java.util.List getHeaderValues(java.lang.String, java.lang.String)
    {
        java.util.List $r3;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, ",");

        return $r3;
    }

    private java.util.List getHeaderValues(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r2;
        java.util.ArrayList $r3, $r11;
        java.util.regex.Matcher $r13;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r17;
        int $i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r0, r1, r4, $r5, $r6, $r7, r9, $r14, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r10;
        java.util.List $r8, $r16;
        java.util.regex.Pattern $r12;

        r17 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\"");

        if $z0 == 0 goto label01;

        $r10 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        $z1 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>(r9);

        if $z1 == 0 goto label05;

     label01:
        $r2 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, r1);

        $i0 = lengthof $r2;

        if $i0 != 1 goto label02;

        $r6 = $r2[0];

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r7);

        return $r8;

     label02:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i1 = lengthof $r2;

        i6 = 0;

     label03:
        if i6 >= i1 goto label04;

        r4 = $r2[i6];

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        i6 = i6 + 1;

        goto label03;

     label04:
        return $r3;

     label05:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z2 == 0 goto label08;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z3 == 0 goto label08;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 2 goto label06;

        $r18 = "";

        goto label07;

     label06:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

     label07:
        $r16 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r18);

        return $r16;

     label08:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(4);

        $r12 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.regex.Pattern COMPLEX_HEADER_PATTERN>;

        $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label09:
        $z4 = virtualinvoke $r13.<java.util.regex.Matcher: boolean find()>();

        if $z4 == 0 goto label11;

        $r14 = virtualinvoke $r13.<java.util.regex.Matcher: java.lang.String group()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i2 <= 0 goto label10;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15);

     label10:
        goto label09;

     label11:
        return $r11;
    }

    private void sortMediaTypesUsingQualityFactor(java.util.List)
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1 $r1;
        java.util.List r0;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r2;
        int $i0;

        r2 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r1 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1: void <init>(org.apache.cxf.jaxrs.impl.HttpHeadersImpl)>(r2);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

     label1:
        return;
    }

    public java.util.Date getDate()
    {
        java.util.Date $r8;
        java.util.List r3;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r1;
        java.lang.Object $r2, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Date");

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.util.Date getHttpDate(java.lang.String)>($r7);

        return $r8;
    }

    public java.lang.String getHeaderString(java.lang.String)
    {
        java.util.List $r4;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getHeaderString(java.util.List)>($r4);

        return $r5;
    }

    public int getLength()
    {
        java.util.List r3;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl r0;
        java.util.Map $r1;
        int $i0, $i1, $i3;
        java.lang.Object $r2, $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map headers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Content-Length");

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 == 1 goto label2;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $i1 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: int getContentLength(java.lang.String)>($r5);

        return $i1;
    }

    static void <clinit>()
    {
        java.util.Set $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.util.HashSet $r1;
        java.util.regex.Pattern $r0;

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String QUOTE> = "\"";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String COMPLEX_HEADER_EXPRESSION> = "(([\\w]+=\"[^\"]*\")|([\\w]+=[\\w]+)|([\\w]+))(;(([\\w]+=\"[^\"]*\")|([\\w]+=[\\w]+)|([\\w]+)))?";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String DEFAULT_COOKIE_SEPARATOR> = ";";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String DEFAULT_SEPARATOR> = ",";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String COOKIE_SEPARATOR_CRLF> = "crlf";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String COOKIE_SEPARATOR_PROPERTY> = "org.apache.cxf.http.cookie.separator";

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.lang.String HEADER_SPLIT_PROPERTY> = "org.apache.cxf.http.header.split";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(([\\w]+=\"[^\"]*\")|([\\w]+=[\\w]+)|([\\w]+))(;(([\\w]+=\"[^\"]*\")|([\\w]+=[\\w]+)|([\\w]+)))?");

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.regex.Pattern COMPLEX_HEADER_PATTERN> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES> = $r1;

        $r2 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("Content-Type");

        $r3 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("Cache-Control");

        $r4 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("ETag");

        $r5 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("If-Match");

        $r6 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("If-None-Match");

        $r7 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("Cookie");

        $r8 = <org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Set HEADERS_WITH_POSSIBLE_QUOTES>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("Set-Cookie");

        return;
    }
}
