public class org.junit.internal.builders.SuiteMethodBuilder extends org.junit.runners.model.RunnerBuilder
{

    public void <init>()
    {
        org.junit.internal.builders.SuiteMethodBuilder r0;

        r0 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        specialinvoke r0.<org.junit.runners.model.RunnerBuilder: void <init>()>();

        return;
    }

    public org.junit.runner.Runner runnerForClass(java.lang.Class) throws java.lang.Throwable
    {
        org.junit.internal.builders.SuiteMethodBuilder r0;
        org.junit.internal.runners.SuiteMethod $r2;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<org.junit.internal.builders.SuiteMethodBuilder: boolean hasSuiteMethod(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new org.junit.internal.runners.SuiteMethod;

        specialinvoke $r2.<org.junit.internal.runners.SuiteMethod: void <init>(java.lang.Class)>(r1);

        return $r2;

     label1:
        return null;
    }

    public boolean hasSuiteMethod(java.lang.Class)
    {
        org.junit.internal.builders.SuiteMethodBuilder r3;
        java.lang.NoSuchMethodException $r2;
        java.lang.Class[] $r1;
        java.lang.Class r0;

        r3 := @this: org.junit.internal.builders.SuiteMethodBuilder;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = newarray (java.lang.Class)[0];

        virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("suite", $r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }
}
