public interface  org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat extends java.lang.Object implements org.apache.xmlbeans.XmlString
{
    public static final org.apache.xmlbeans.SchemaType type;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum UPPER_ROMAN;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum LOWER_ROMAN;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum UPPER_LETTER;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum LOWER_LETTER;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ORDINAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CARDINAL_TEXT;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ORDINAL_TEXT;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEX;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHICAGO;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_DIGITAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum AIUEO;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IROHA;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_FULL_WIDTH;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_HALF_WIDTH;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_LEGAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_DIGITAL_TEN_THOUSAND;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_CIRCLE;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_FULL_WIDTH_2;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum AIUEO_FULL_WIDTH;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IROHA_FULL_WIDTH;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ZERO;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum BULLET;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum GANADA;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHOSUNG;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_FULLSTOP;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_PAREN;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_CIRCLE_CHINESE;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ENCLOSED_CIRCLE;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_TRADITIONAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ZODIAC;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ZODIAC_TRADITIONAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_LEGAL_TRADITIONAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_COUNTING_THOUSAND;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_DIGITAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_LEGAL_SIMPLIFIED;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_COUNTING_THOUSAND;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_DIGITAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_LEGAL;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_DIGITAL_2;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum VIETNAMESE_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum RUSSIAN_LOWER;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum RUSSIAN_UPPER;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum NONE;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum NUMBER_IN_DASH;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEBREW_1;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEBREW_2;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ARABIC_ALPHA;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ARABIC_ABJAD;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_VOWELS;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_CONSONANTS;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_NUMBERS;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_COUNTING;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_LETTERS;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_NUMBERS;
    public static final org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_COUNTING;
    public static final int INT_DECIMAL;
    public static final int INT_UPPER_ROMAN;
    public static final int INT_LOWER_ROMAN;
    public static final int INT_UPPER_LETTER;
    public static final int INT_LOWER_LETTER;
    public static final int INT_ORDINAL;
    public static final int INT_CARDINAL_TEXT;
    public static final int INT_ORDINAL_TEXT;
    public static final int INT_HEX;
    public static final int INT_CHICAGO;
    public static final int INT_IDEOGRAPH_DIGITAL;
    public static final int INT_JAPANESE_COUNTING;
    public static final int INT_AIUEO;
    public static final int INT_IROHA;
    public static final int INT_DECIMAL_FULL_WIDTH;
    public static final int INT_DECIMAL_HALF_WIDTH;
    public static final int INT_JAPANESE_LEGAL;
    public static final int INT_JAPANESE_DIGITAL_TEN_THOUSAND;
    public static final int INT_DECIMAL_ENCLOSED_CIRCLE;
    public static final int INT_DECIMAL_FULL_WIDTH_2;
    public static final int INT_AIUEO_FULL_WIDTH;
    public static final int INT_IROHA_FULL_WIDTH;
    public static final int INT_DECIMAL_ZERO;
    public static final int INT_BULLET;
    public static final int INT_GANADA;
    public static final int INT_CHOSUNG;
    public static final int INT_DECIMAL_ENCLOSED_FULLSTOP;
    public static final int INT_DECIMAL_ENCLOSED_PAREN;
    public static final int INT_DECIMAL_ENCLOSED_CIRCLE_CHINESE;
    public static final int INT_IDEOGRAPH_ENCLOSED_CIRCLE;
    public static final int INT_IDEOGRAPH_TRADITIONAL;
    public static final int INT_IDEOGRAPH_ZODIAC;
    public static final int INT_IDEOGRAPH_ZODIAC_TRADITIONAL;
    public static final int INT_TAIWANESE_COUNTING;
    public static final int INT_IDEOGRAPH_LEGAL_TRADITIONAL;
    public static final int INT_TAIWANESE_COUNTING_THOUSAND;
    public static final int INT_TAIWANESE_DIGITAL;
    public static final int INT_CHINESE_COUNTING;
    public static final int INT_CHINESE_LEGAL_SIMPLIFIED;
    public static final int INT_CHINESE_COUNTING_THOUSAND;
    public static final int INT_KOREAN_DIGITAL;
    public static final int INT_KOREAN_COUNTING;
    public static final int INT_KOREAN_LEGAL;
    public static final int INT_KOREAN_DIGITAL_2;
    public static final int INT_VIETNAMESE_COUNTING;
    public static final int INT_RUSSIAN_LOWER;
    public static final int INT_RUSSIAN_UPPER;
    public static final int INT_NONE;
    public static final int INT_NUMBER_IN_DASH;
    public static final int INT_HEBREW_1;
    public static final int INT_HEBREW_2;
    public static final int INT_ARABIC_ALPHA;
    public static final int INT_ARABIC_ABJAD;
    public static final int INT_HINDI_VOWELS;
    public static final int INT_HINDI_CONSONANTS;
    public static final int INT_HINDI_NUMBERS;
    public static final int INT_HINDI_COUNTING;
    public static final int INT_THAI_LETTERS;
    public static final int INT_THAI_NUMBERS;
    public static final int INT_THAI_COUNTING;

    public abstract org.apache.xmlbeans.StringEnumAbstractBase enumValue();

    public abstract void set(org.apache.xmlbeans.StringEnumAbstractBase);

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaType $r4;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaComponent $r3;
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64;
        java.lang.Class $r0;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_THAI_COUNTING> = 60;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_THAI_NUMBERS> = 59;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_THAI_LETTERS> = 58;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HINDI_COUNTING> = 57;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HINDI_NUMBERS> = 56;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HINDI_CONSONANTS> = 55;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HINDI_VOWELS> = 54;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_ARABIC_ABJAD> = 53;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_ARABIC_ALPHA> = 52;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HEBREW_2> = 51;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HEBREW_1> = 50;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_NUMBER_IN_DASH> = 49;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_NONE> = 48;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_RUSSIAN_UPPER> = 47;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_RUSSIAN_LOWER> = 46;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_VIETNAMESE_COUNTING> = 45;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_KOREAN_DIGITAL_2> = 44;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_KOREAN_LEGAL> = 43;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_KOREAN_COUNTING> = 42;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_KOREAN_DIGITAL> = 41;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CHINESE_COUNTING_THOUSAND> = 40;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CHINESE_LEGAL_SIMPLIFIED> = 39;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CHINESE_COUNTING> = 38;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_TAIWANESE_DIGITAL> = 37;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_TAIWANESE_COUNTING_THOUSAND> = 36;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_LEGAL_TRADITIONAL> = 35;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_TAIWANESE_COUNTING> = 34;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_ZODIAC_TRADITIONAL> = 33;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_ZODIAC> = 32;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_TRADITIONAL> = 31;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_ENCLOSED_CIRCLE> = 30;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_ENCLOSED_CIRCLE_CHINESE> = 29;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_ENCLOSED_PAREN> = 28;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_ENCLOSED_FULLSTOP> = 27;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CHOSUNG> = 26;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_GANADA> = 25;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_BULLET> = 24;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_ZERO> = 23;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IROHA_FULL_WIDTH> = 22;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_AIUEO_FULL_WIDTH> = 21;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_FULL_WIDTH_2> = 20;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_ENCLOSED_CIRCLE> = 19;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_JAPANESE_DIGITAL_TEN_THOUSAND> = 18;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_JAPANESE_LEGAL> = 17;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_HALF_WIDTH> = 16;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL_FULL_WIDTH> = 15;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IROHA> = 14;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_AIUEO> = 13;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_JAPANESE_COUNTING> = 12;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_IDEOGRAPH_DIGITAL> = 11;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CHICAGO> = 10;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_HEX> = 9;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_ORDINAL_TEXT> = 8;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_CARDINAL_TEXT> = 7;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_ORDINAL> = 6;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_LOWER_LETTER> = 5;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_UPPER_LETTER> = 4;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_LOWER_ROMAN> = 3;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_UPPER_ROMAN> = 2;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: int INT_DECIMAL> = 1;

        $r0 = class "Lorg/openxmlformats/schemas/wordprocessingml/x2006/main/STNumberFormat;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("stnumberformat0fb8type");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.apache.xmlbeans.SchemaType type> = $r4;

        $r5 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimal");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL> = $r5;

        $r6 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("upperRoman");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum UPPER_ROMAN> = $r6;

        $r7 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("lowerRoman");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum LOWER_ROMAN> = $r7;

        $r8 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("upperLetter");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum UPPER_LETTER> = $r8;

        $r9 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("lowerLetter");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum LOWER_LETTER> = $r9;

        $r10 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ordinal");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ORDINAL> = $r10;

        $r11 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("cardinalText");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CARDINAL_TEXT> = $r11;

        $r12 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ordinalText");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ORDINAL_TEXT> = $r12;

        $r13 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hex");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEX> = $r13;

        $r14 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("chicago");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHICAGO> = $r14;

        $r15 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographDigital");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_DIGITAL> = $r15;

        $r16 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("japaneseCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_COUNTING> = $r16;

        $r17 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("aiueo");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum AIUEO> = $r17;

        $r18 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("iroha");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IROHA> = $r18;

        $r19 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalFullWidth");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_FULL_WIDTH> = $r19;

        $r20 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalHalfWidth");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_HALF_WIDTH> = $r20;

        $r21 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("japaneseLegal");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_LEGAL> = $r21;

        $r22 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("japaneseDigitalTenThousand");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum JAPANESE_DIGITAL_TEN_THOUSAND> = $r22;

        $r23 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalEnclosedCircle");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_CIRCLE> = $r23;

        $r24 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalFullWidth2");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_FULL_WIDTH_2> = $r24;

        $r25 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("aiueoFullWidth");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum AIUEO_FULL_WIDTH> = $r25;

        $r26 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("irohaFullWidth");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IROHA_FULL_WIDTH> = $r26;

        $r27 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalZero");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ZERO> = $r27;

        $r28 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("bullet");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum BULLET> = $r28;

        $r29 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ganada");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum GANADA> = $r29;

        $r30 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("chosung");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHOSUNG> = $r30;

        $r31 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalEnclosedFullstop");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_FULLSTOP> = $r31;

        $r32 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalEnclosedParen");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_PAREN> = $r32;

        $r33 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("decimalEnclosedCircleChinese");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum DECIMAL_ENCLOSED_CIRCLE_CHINESE> = $r33;

        $r34 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographEnclosedCircle");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ENCLOSED_CIRCLE> = $r34;

        $r35 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographTraditional");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_TRADITIONAL> = $r35;

        $r36 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographZodiac");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ZODIAC> = $r36;

        $r37 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographZodiacTraditional");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_ZODIAC_TRADITIONAL> = $r37;

        $r38 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("taiwaneseCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_COUNTING> = $r38;

        $r39 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("ideographLegalTraditional");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum IDEOGRAPH_LEGAL_TRADITIONAL> = $r39;

        $r40 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("taiwaneseCountingThousand");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_COUNTING_THOUSAND> = $r40;

        $r41 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("taiwaneseDigital");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum TAIWANESE_DIGITAL> = $r41;

        $r42 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("chineseCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_COUNTING> = $r42;

        $r43 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("chineseLegalSimplified");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_LEGAL_SIMPLIFIED> = $r43;

        $r44 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("chineseCountingThousand");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum CHINESE_COUNTING_THOUSAND> = $r44;

        $r45 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("koreanDigital");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_DIGITAL> = $r45;

        $r46 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("koreanCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_COUNTING> = $r46;

        $r47 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("koreanLegal");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_LEGAL> = $r47;

        $r48 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("koreanDigital2");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum KOREAN_DIGITAL_2> = $r48;

        $r49 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("vietnameseCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum VIETNAMESE_COUNTING> = $r49;

        $r50 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("russianLower");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum RUSSIAN_LOWER> = $r50;

        $r51 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("russianUpper");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum RUSSIAN_UPPER> = $r51;

        $r52 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("none");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum NONE> = $r52;

        $r53 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("numberInDash");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum NUMBER_IN_DASH> = $r53;

        $r54 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hebrew1");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEBREW_1> = $r54;

        $r55 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hebrew2");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HEBREW_2> = $r55;

        $r56 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("arabicAlpha");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ARABIC_ALPHA> = $r56;

        $r57 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("arabicAbjad");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum ARABIC_ABJAD> = $r57;

        $r58 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hindiVowels");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_VOWELS> = $r58;

        $r59 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hindiConsonants");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_CONSONANTS> = $r59;

        $r60 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hindiNumbers");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_NUMBERS> = $r60;

        $r61 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("hindiCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum HINDI_COUNTING> = $r61;

        $r62 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("thaiLetters");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_LETTERS> = $r62;

        $r63 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("thaiNumbers");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_NUMBERS> = $r63;

        $r64 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum forString(java.lang.String)>("thaiCounting");

        <org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum THAI_COUNTING> = $r64;

        return;
    }
}
