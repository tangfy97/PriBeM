public class org.apache.log4j.lf5.viewer.LogBrokerMonitor extends java.lang.Object
{
    public static final java.lang.String DETAILED_VIEW;
    protected javax.swing.JFrame _logMonitorFrame;
    protected int _logMonitorFrameWidth;
    protected int _logMonitorFrameHeight;
    protected org.apache.log4j.lf5.viewer.LogTable _table;
    protected org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree _categoryExplorerTree;
    protected java.lang.String _searchText;
    protected java.lang.String _NDCTextFilter;
    protected org.apache.log4j.lf5.LogLevel _leastSevereDisplayedLogLevel;
    protected javax.swing.JScrollPane _logTableScrollPane;
    protected javax.swing.JLabel _statusLabel;
    protected java.lang.Object _lock;
    protected javax.swing.JComboBox _fontSizeCombo;
    protected int _fontSize;
    protected java.lang.String _fontName;
    protected java.lang.String _currentView;
    protected boolean _loadSystemFonts;
    protected boolean _trackTableScrollPane;
    protected java.awt.Dimension _lastTableViewportSize;
    protected boolean _callSystemExitOnClose;
    protected java.util.List _displayedLogBrokerProperties;
    protected java.util.Map _logLevelMenuItems;
    protected java.util.Map _logTableColumnMenuItems;
    protected java.util.List _levels;
    protected java.util.List _columns;
    protected boolean _isDisposed;
    protected org.apache.log4j.lf5.viewer.configure.ConfigurationManager _configurationManager;
    protected org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager;
    protected java.io.File _fileLocation;

    public void <init>(java.util.List)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor $r11;
        java.util.HashMap $r4, $r5;
        org.apache.log4j.lf5.LogLevel $r1;
        java.util.List r6, $r7;
        java.util.Vector $r3;
        java.lang.Object $r2;
        java.lang.String $r8, $r9, $r10, r13;
        javax.swing.JFrame $r12;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r6 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameWidth> = 550;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameHeight> = 500;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter> = "";

        $r1 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG>;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogLevel _leastSevereDisplayedLogLevel> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.Object _lock> = $r2;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _fontSize> = 10;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _fontName> = "Dialog";

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _currentView> = "Detailed";

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _loadSystemFonts> = 0;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _trackTableScrollPane> = 1;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose> = 0;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _displayedLogBrokerProperties> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logLevelMenuItems> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logTableColumnMenuItems> = $r5;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _levels> = null;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _columns> = null;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _isDisposed> = 0;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.ConfigurationManager _configurationManager> = null;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager> = null;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.io.File _fileLocation> = null;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _levels> = r6;

        $r7 = staticinvoke <org.apache.log4j.lf5.viewer.LogTableColumn: java.util.List getLogTableColumns()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _columns> = $r7;

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("monitor.exit");

        r13 = $r8;

        if $r8 != null goto label1;

        r13 = "false";

     label1:
        $r9 = virtualinvoke r13.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label2;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose> = 1;

     label2:
        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void initComponents()>();

        $r12 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r11 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor;

        specialinvoke $r11.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r0, r0);

        virtualinvoke $r12.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r11);

        return;
    }

    public void show(int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$1 $r2;
        int i0;
        javax.swing.JFrame $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $z0 = virtualinvoke $r1.<java.awt.Component: boolean isVisible()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$1;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$1: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,int)>(r0, i0);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r2);

        return;
    }

    public void show()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show(int)>(0);

        return;
    }

    public void dispose()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JFrame $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        virtualinvoke $r1.<java.awt.Window: void dispose()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _isDisposed> = 1;

        $z0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose>;

        if $z0 != 1 goto label1;

        staticinvoke <java.lang.System: void exit(int)>(0);

     label1:
        return;
    }

    public void hide()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JFrame $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        virtualinvoke $r1.<java.awt.Window: void setVisible(boolean)>(0);

        return;
    }

    public org.apache.log4j.lf5.util.DateFormatManager getDateFormatManager()
    {
        org.apache.log4j.lf5.viewer.LogTable $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.util.DateFormatManager $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.util.DateFormatManager getDateFormatManager()>();

        return $r2;
    }

    public void setDateFormatManager(org.apache.log4j.lf5.util.DateFormatManager)
    {
        org.apache.log4j.lf5.viewer.LogTable $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.util.DateFormatManager r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.util.DateFormatManager;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        virtualinvoke $r2.<org.apache.log4j.lf5.viewer.LogTable: void setDateFormatManager(org.apache.log4j.lf5.util.DateFormatManager)>(r1);

        return;
    }

    public boolean getCallSystemExitOnClose()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $z0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose>;

        return $z0;
    }

    public void setCallSystemExitOnClose(boolean)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        boolean z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose> = z0;

        return;
    }

    public void addMessage(org.apache.log4j.lf5.LogRecord)
    {
        org.apache.log4j.lf5.LogRecord r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$2 $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r2 := @parameter0: org.apache.log4j.lf5.LogRecord;

        $z0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _isDisposed>;

        if $z0 != 1 goto label1;

        return;

     label1:
        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$2;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$2: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.LogRecord)>(r0, r2);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r1);

        return;
    }

    public void setMaxNumberOfLogRecords(int)
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogTable $r1;
        int i0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        virtualinvoke $r2.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void setMaxNumberOfLogRecords(int)>(i0);

        return;
    }

    public javax.swing.JFrame getBaseFrame()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JFrame $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.StringBuffer $r1, $r4, $r5;
        java.lang.String r3, $r6;
        javax.swing.JFrame $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r3 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - LogFactor5");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.awt.Frame: void setTitle(java.lang.String)>($r6);

        return;
    }

    public void setFrameSize(int, int)
    {
        java.awt.Dimension $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        int i0, i1, $i2, $i3;
        java.awt.Toolkit $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        if 0 >= i0 goto label1;

        $i3 = $r1.<java.awt.Dimension: int width>;

        if i0 >= $i3 goto label1;

        r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameWidth> = i0;

     label1:
        if 0 >= i1 goto label2;

        $i2 = $r1.<java.awt.Dimension: int height>;

        if i1 >= $i2 goto label2;

        r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameHeight> = i1;

     label2:
        virtualinvoke r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>();

        return;
    }

    public void setFontSize(int)
    {
        int i0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JComboBox $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JComboBox _fontSizeCombo>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int changeFontSizeCombo(javax.swing.JComboBox,int)>($r1, i0);

        return;
    }

    public void addDisplayedProperty(java.lang.Object)
    {
        java.lang.Object r1;
        java.util.List $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _displayedLogBrokerProperties>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.Map getLogLevelMenuItems()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Map $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logLevelMenuItems>;

        return $r1;
    }

    public java.util.Map getLogTableColumnMenuItems()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Map $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logTableColumnMenuItems>;

        return $r1;
    }

    public javax.swing.JCheckBoxMenuItem getTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogTableColumn r1;
        javax.swing.JCheckBoxMenuItem $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r2 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)>(r1);

        return $r2;
    }

    public org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree getCategoryExplorerTree()
    {
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree _categoryExplorerTree>;

        return $r1;
    }

    public java.lang.String getNDCTextFilter()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter>;

        return $r1;
    }

    public void setNDCLogRecordFilter(java.lang.String)
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.LogRecordFilter $r4;
        org.apache.log4j.lf5.viewer.LogTable $r1;
        java.lang.String r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogRecordFilter createNDCLogRecordFilter(java.lang.String)>(r3);

        virtualinvoke $r2.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void setLogRecordFilter(org.apache.log4j.lf5.LogRecordFilter)>($r4);

        return;
    }

    protected void setSearchText(java.lang.String)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _searchText> = r1;

        return;
    }

    protected void setNDCTextFilter(java.lang.String)
    {
        java.lang.String r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter> = "";

        goto label2;

     label1:
        r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter> = r0;

     label2:
        return;
    }

    protected void sortByNDC()
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r3;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.LogRecordFilter $r4;
        int $i0;
        org.apache.log4j.lf5.viewer.LogTable $r2;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogRecordFilter createNDCLogRecordFilter(java.lang.String)>(r1);

        virtualinvoke $r3.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void setLogRecordFilter(org.apache.log4j.lf5.LogRecordFilter)>($r4);

        return;
    }

    protected void findSearchText()
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r3;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.List $r4;
        int $i0, $i1, $i2;
        org.apache.log4j.lf5.viewer.LogTable $r2;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _searchText>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $i1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int getFirstSelectedRow()>();

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $r4 = virtualinvoke $r3.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: java.util.List getFilteredRecords()>();

        $i2 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int findRecord(int,java.lang.String,java.util.List)>($i1, r1, $r4);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void selectRow(int)>($i2);

        return;
    }

    protected int getFirstSelectedRow()
    {
        javax.swing.ListSelectionModel $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogTable $r1;
        int $i0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.ListSelectionModel: int getMinSelectionIndex()>();

        return $i0;
    }

    protected void selectRow(int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JScrollPane $r1;
        java.lang.StringBuffer $r5, $r6, $r9;
        int i0, $i2;
        org.apache.log4j.lf5.viewer.LogTable $r2;
        java.lang.String $r4, $r7;
        javax.swing.JFrame $r8;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _searchText>;

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r8, $r7, "Text not found", 1);

        return;

     label1:
        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JScrollPane _logTableScrollPane>;

        staticinvoke <org.apache.log4j.lf5.viewer.LF5SwingUtils: void selectRow(int,javax.swing.JTable,javax.swing.JScrollPane)>(i0, $r2, $r1);

        return;
    }

    protected int findRecord(int, java.lang.String, java.util.List)
    {
        org.apache.log4j.lf5.LogRecord $r4, $r6;
        int $i0, i1, i2, i3, i4, i5, $i7;
        java.lang.String r3;
        boolean $z0, $z1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.List r0;
        java.lang.Object $r2, $r5;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i1 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.List;

        if i1 >= 0 goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = i1 + 1;

     label2:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i3 = i2;

     label3:
        if i3 >= $i0 goto label5;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (org.apache.log4j.lf5.LogRecord) $r5;

        $z1 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean matches(org.apache.log4j.lf5.LogRecord,java.lang.String)>($r6, r3);

        if $z1 == 0 goto label4;

        return i3;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        i4 = i2;

        i5 = 0;

     label6:
        if i5 >= i4 goto label8;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $r4 = (org.apache.log4j.lf5.LogRecord) $r2;

        $z0 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean matches(org.apache.log4j.lf5.LogRecord,java.lang.String)>($r4, r3);

        if $z0 == 0 goto label7;

        return i5;

     label7:
        i5 = i5 + 1;

        goto label6;

     label8:
        $i7 = (int) -1;

        return $i7;
    }

    protected boolean matches(org.apache.log4j.lf5.LogRecord, java.lang.String)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r8;
        org.apache.log4j.lf5.LogRecord r0;
        int $i0, $i1, $i3, $i5;
        java.lang.String $r1, $r2, r3, $r4, $r5, $r6, $r7;

        r8 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: org.apache.log4j.lf5.LogRecord;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.LogRecord: java.lang.String getMessage()>();

        $r2 = virtualinvoke r0.<org.apache.log4j.lf5.LogRecord: java.lang.String getNDC()>();

        if $r1 != null goto label1;

        if $r2 == null goto label2;

     label1:
        if r3 != null goto label3;

     label2:
        return 0;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>($r5);

        $i3 = (int) -1;

        if $i0 != $i3 goto label4;

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>($r7);

        $i5 = (int) -1;

        if $i1 != $i5 goto label4;

        return 0;

     label4:
        return 1;
    }

    protected void refresh(javax.swing.JTextArea)
    {
        javax.swing.JTextArea r0;
        java.lang.String $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: javax.swing.JTextArea;

        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setText(java.lang.String)>("");

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setText(java.lang.String)>($r1);

        return;
    }

    protected void refreshDetailTextArea()
    {
        org.apache.log4j.lf5.viewer.LogTable $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JTextArea $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = $r1.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.JTextArea _detailTextArea>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void refresh(javax.swing.JTextArea)>($r2);

        return;
    }

    protected void clearDetailTextArea()
    {
        org.apache.log4j.lf5.viewer.LogTable $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JTextArea $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = $r1.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.JTextArea _detailTextArea>;

        virtualinvoke $r2.<javax.swing.text.JTextComponent: void setText(java.lang.String)>("");

        return;
    }

    protected int changeFontSizeCombo(javax.swing.JComboBox, int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r5;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r1, $r3, r6;
        java.lang.String $r2, $r4;
        javax.swing.JComboBox r0;

        r5 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: javax.swing.JComboBox;

        i2 := @parameter1: int;

        $i0 = virtualinvoke r0.<javax.swing.JComboBox: int getItemCount()>();

        $r1 = virtualinvoke r0.<javax.swing.JComboBox: java.lang.Object getItemAt(int)>(0);

        r6 = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $r3 = virtualinvoke r0.<javax.swing.JComboBox: java.lang.Object getItemAt(int)>(i4);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        if i3 >= $i1 goto label2;

        if $i1 > i2 goto label2;

        i3 = $i1;

        r6 = $r3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>(r6);

        return i3;
    }

    protected void setFontSizeSilently(int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        int i0;
        org.apache.log4j.lf5.viewer.LogTable $r1, $r3;
        javax.swing.JTextArea $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _fontSize> = i0;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = $r1.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.JTextArea _detailTextArea>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFontSize(java.awt.Component,int)>($r2, i0);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void selectRow(int)>(0);

        $r3 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFontSize(java.awt.Component,int)>($r3, i0);

        return;
    }

    protected void setFontSize(java.awt.Component, int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r4;
        java.awt.Font $r1, $r2;
        int $i0, i1;
        java.lang.String $r3;
        java.awt.Component r0;

        r4 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: java.awt.Component;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.awt.Component: java.awt.Font getFont()>();

        $r2 = new java.awt.Font;

        $r3 = virtualinvoke $r1.<java.awt.Font: java.lang.String getFontName()>();

        $i0 = virtualinvoke $r1.<java.awt.Font: int getStyle()>();

        specialinvoke $r2.<java.awt.Font: void <init>(java.lang.String,int,int)>($r3, $i0, i1);

        virtualinvoke r0.<java.awt.Component: void setFont(java.awt.Font)>($r2);

        return;
    }

    protected void updateFrameSize()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        int $i0, $i1;
        javax.swing.JFrame $r1, $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $i1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameWidth>;

        $i0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _logMonitorFrameHeight>;

        virtualinvoke $r1.<java.awt.Window: void setSize(int,int)>($i1, $i0);

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void centerFrame(javax.swing.JFrame)>($r2);

        return;
    }

    protected void pause(int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.lang.InterruptedException $r0;
        int i0;
        long $l1;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

     label1:
        $l1 = (long) i0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    protected void initComponents()
    {
        org.apache.log4j.lf5.LogRecordFilter $r20;
        java.net.URL $r4;
        org.apache.log4j.lf5.viewer.LogTable $r7, $r8, $r12, $r14, $r18, $r38;
        org.apache.log4j.lf5.viewer.configure.ConfigurationManager $r37;
        javax.swing.JFrame $r1, $r2, $r26, $r29, $r31, $r34, $r43;
        boolean $z0;
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r19;
        javax.swing.JMenuBar $r28;
        javax.swing.JToolBar $r33;
        java.awt.Image $r44;
        java.awt.Font $r10;
        java.awt.Dimension $r23;
        org.apache.log4j.lf5.viewer.TrackingAdjustmentListener $r41;
        javax.swing.JPanel $r36;
        javax.swing.JSplitPane $r15, $r25;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree $r17, $r22;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r24;
        int $i0;
        javax.swing.ImageIcon $r42;
        java.lang.String $r9, $r11;
        java.awt.Container $r30, $r32, $r35;
        javax.swing.JRootPane $r27;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JScrollPane $r6, $r13, $r16, $r21, $r39;
        javax.swing.JScrollBar $r40;
        java.lang.Class $r3;
        javax.swing.JTextArea $r5;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = new javax.swing.JFrame;

        specialinvoke $r1.<javax.swing.JFrame: void <init>(java.lang.String)>("LogFactor5");

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame> = $r1;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        virtualinvoke $r2.<javax.swing.JFrame: void setDefaultCloseOperation(int)>(0);

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/org/apache/log4j/lf5/viewer/images/lf5_small_icon.gif");

        if $r4 == null goto label1;

        $r43 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r42 = new javax.swing.ImageIcon;

        specialinvoke $r42.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r4);

        $r44 = virtualinvoke $r42.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        virtualinvoke $r43.<javax.swing.JFrame: void setIconImage(java.awt.Image)>($r44);

     label1:
        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateFrameSize()>();

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JTextArea createDetailTextArea()>();

        $r6 = new javax.swing.JScrollPane;

        specialinvoke $r6.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r5);

        $r7 = new org.apache.log4j.lf5.viewer.LogTable;

        specialinvoke $r7.<org.apache.log4j.lf5.viewer.LogTable: void <init>(javax.swing.JTextArea)>($r5);

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table> = $r7;

        $r9 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _currentView>;

        $r8 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setView(java.lang.String,org.apache.log4j.lf5.viewer.LogTable)>($r9, $r8);

        $r12 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r10 = new java.awt.Font;

        $r11 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _fontName>;

        $i0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _fontSize>;

        specialinvoke $r10.<java.awt.Font: void <init>(java.lang.String,int,int)>($r11, 0, $i0);

        virtualinvoke $r12.<org.apache.log4j.lf5.viewer.LogTable: void setFont(java.awt.Font)>($r10);

        $r13 = new javax.swing.JScrollPane;

        $r14 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        specialinvoke $r13.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r14);

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JScrollPane _logTableScrollPane> = $r13;

        $z0 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _trackTableScrollPane>;

        if $z0 == 0 goto label2;

        $r39 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JScrollPane _logTableScrollPane>;

        $r40 = virtualinvoke $r39.<javax.swing.JScrollPane: javax.swing.JScrollBar getVerticalScrollBar()>();

        $r41 = new org.apache.log4j.lf5.viewer.TrackingAdjustmentListener;

        specialinvoke $r41.<org.apache.log4j.lf5.viewer.TrackingAdjustmentListener: void <init>()>();

        virtualinvoke $r40.<javax.swing.JScrollBar: void addAdjustmentListener(java.awt.event.AdjustmentListener)>($r41);

     label2:
        $r15 = new javax.swing.JSplitPane;

        specialinvoke $r15.<javax.swing.JSplitPane: void <init>()>();

        virtualinvoke $r15.<javax.swing.JSplitPane: void setOneTouchExpandable(boolean)>(1);

        virtualinvoke $r15.<javax.swing.JSplitPane: void setOrientation(int)>(0);

        $r16 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JScrollPane _logTableScrollPane>;

        virtualinvoke $r15.<javax.swing.JSplitPane: void setLeftComponent(java.awt.Component)>($r16);

        virtualinvoke $r15.<javax.swing.JSplitPane: void setRightComponent(java.awt.Component)>($r6);

        virtualinvoke $r15.<javax.swing.JSplitPane: void setDividerLocation(int)>(350);

        $r17 = new org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree;

        specialinvoke $r17.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree _categoryExplorerTree> = $r17;

        $r18 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r19 = virtualinvoke $r18.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $r20 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogRecordFilter createLogRecordFilter()>();

        virtualinvoke $r19.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void setLogRecordFilter(org.apache.log4j.lf5.LogRecordFilter)>($r20);

        $r21 = new javax.swing.JScrollPane;

        $r22 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree _categoryExplorerTree>;

        specialinvoke $r21.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r22);

        $r23 = new java.awt.Dimension;

        specialinvoke $r23.<java.awt.Dimension: void <init>(int,int)>(130, 400);

        virtualinvoke $r21.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r23);

        $r24 = new org.apache.log4j.lf5.viewer.configure.MRUFileManager;

        specialinvoke $r24.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager> = $r24;

        $r25 = new javax.swing.JSplitPane;

        specialinvoke $r25.<javax.swing.JSplitPane: void <init>()>();

        virtualinvoke $r25.<javax.swing.JSplitPane: void setOneTouchExpandable(boolean)>(1);

        virtualinvoke $r25.<javax.swing.JSplitPane: void setRightComponent(java.awt.Component)>($r15);

        virtualinvoke $r25.<javax.swing.JSplitPane: void setLeftComponent(java.awt.Component)>($r21);

        virtualinvoke $r25.<javax.swing.JSplitPane: void setDividerLocation(int)>(130);

        $r26 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r27 = virtualinvoke $r26.<javax.swing.JFrame: javax.swing.JRootPane getRootPane()>();

        $r28 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuBar createMenuBar()>();

        virtualinvoke $r27.<javax.swing.JRootPane: void setJMenuBar(javax.swing.JMenuBar)>($r28);

        $r29 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r30 = virtualinvoke $r29.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        virtualinvoke $r30.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r25, "Center");

        $r31 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r32 = virtualinvoke $r31.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        $r33 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JToolBar createToolBar()>();

        virtualinvoke $r32.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r33, "North");

        $r34 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r35 = virtualinvoke $r34.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        $r36 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JPanel createStatusArea()>();

        virtualinvoke $r35.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r36, "South");

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void makeLogTableListenToCategoryExplorer()>();

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void addTableModelProperties()>();

        $r37 = new org.apache.log4j.lf5.viewer.configure.ConfigurationManager;

        $r38 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        specialinvoke $r37.<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable)>(r0, $r38);

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.ConfigurationManager _configurationManager> = $r37;

        return;
    }

    protected org.apache.log4j.lf5.LogRecordFilter createLogRecordFilter()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$3 $r0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$3;

        specialinvoke $r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$3: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r1);

        return $r0;
    }

    protected org.apache.log4j.lf5.LogRecordFilter createNDCLogRecordFilter(java.lang.String)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$4 $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _NDCTextFilter> = r1;

        $r2 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$4;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$4: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r0);

        return $r2;
    }

    protected void updateStatusLabel()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.String $r2;
        javax.swing.JLabel $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JLabel _statusLabel>;

        $r2 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String getRecordsDisplayedMessage()>();

        virtualinvoke $r1.<javax.swing.JLabel: void setText(java.lang.String)>($r2);

        return;
    }

    protected java.lang.String getRecordsDisplayedMessage()
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogTable $r1;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $i0 = virtualinvoke $r2.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: int getRowCount()>();

        $i1 = virtualinvoke $r2.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: int getTotalRowCount()>();

        $r3 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String getStatusText(int,int)>($i0, $i1);

        return $r3;
    }

    protected void addTableModelProperties()
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$6 $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$5 $r3;
        org.apache.log4j.lf5.viewer.LogTable $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        $r3 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$5;

        specialinvoke $r3.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$5: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r0);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void addDisplayedProperty(java.lang.Object)>($r3);

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$6;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$6: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.FilteredLogTableModel)>(r0, $r2);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void addDisplayedProperty(java.lang.Object)>($r4);

        return;
    }

    protected java.lang.String getStatusText(int, int)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.String $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Displaying: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" records out of a total of: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" records.");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    protected void makeLogTableListenToCategoryExplorer()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$7 $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree $r2;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel $r3;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$7;

        specialinvoke $r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$7: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r1);

        $r2 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree _categoryExplorerTree>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel getExplorerModel()>();

        virtualinvoke $r3.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: void addActionListener(java.awt.event.ActionListener)>($r0);

        return;
    }

    protected javax.swing.JPanel createStatusArea()
    {
        java.awt.FlowLayout $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JLabel $r1;
        javax.swing.JPanel $r0;
        javax.swing.border.Border $r3;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.JLabel;

        specialinvoke $r1.<javax.swing.JLabel: void <init>(java.lang.String)>("No log records to display.");

        r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JLabel _statusLabel> = $r1;

        virtualinvoke $r1.<javax.swing.JLabel: void setHorizontalAlignment(int)>(2);

        $r3 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        virtualinvoke $r0.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r3);

        $r4 = new java.awt.FlowLayout;

        specialinvoke $r4.<java.awt.FlowLayout: void <init>(int,int,int)>(0, 0, 0);

        virtualinvoke $r0.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r4);

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r1);

        return $r0;
    }

    protected javax.swing.JTextArea createDetailTextArea()
    {
        javax.swing.JTextArea $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        java.awt.Font $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JTextArea;

        specialinvoke $r0.<javax.swing.JTextArea: void <init>()>();

        $r1 = new java.awt.Font;

        specialinvoke $r1.<java.awt.Font: void <init>(java.lang.String,int,int)>("Monospaced", 0, 14);

        virtualinvoke $r0.<javax.swing.JTextArea: void setFont(java.awt.Font)>($r1);

        virtualinvoke $r0.<javax.swing.JTextArea: void setTabSize(int)>(3);

        virtualinvoke $r0.<javax.swing.JTextArea: void setLineWrap(boolean)>(1);

        virtualinvoke $r0.<javax.swing.JTextArea: void setWrapStyleWord(boolean)>(0);

        return $r0;
    }

    protected javax.swing.JMenuBar createMenuBar()
    {
        javax.swing.JMenuBar $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        javax.swing.JMenu $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuBar;

        specialinvoke $r0.<javax.swing.JMenuBar: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createFileMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r2);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createEditMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r3);

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createLogLevelMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r4);

        $r5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createViewMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r5);

        $r6 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createConfigureMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r6);

        $r7 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createHelpMenu()>();

        virtualinvoke $r0.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r7);

        return $r0;
    }

    protected javax.swing.JMenu createLogLevelMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.Iterator $r2;
        javax.swing.JMenu $r0, $r5;
        org.apache.log4j.lf5.LogLevel $r8;
        javax.swing.JCheckBoxMenuItem $r9;
        javax.swing.JMenuItem $r3, $r4, $r6;
        java.lang.Object $r7;
        boolean $z0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("Log Level");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(108);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogLevels()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.log4j.lf5.LogLevel) $r7;

        $r9 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getMenuItem(org.apache.log4j.lf5.LogLevel)>($r8);

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r9);

        goto label1;

     label2:
        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createAllLogLevelsMenuItem()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createNoLogLevelsMenuItem()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenu createLogLevelColorMenu()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        $r6 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createResetLogLevelColorMenuItem()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r6);

        return $r0;
    }

    protected javax.swing.JMenuItem createAllLogLevelsMenuItem()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$8 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Show all LogLevels");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(115);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$8;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$8: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createNoLogLevelsMenuItem()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$9 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Hide all LogLevels");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(104);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$9;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$9: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenu createLogLevelColorMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.Iterator $r2;
        javax.swing.JMenuItem $r5;
        javax.swing.JMenu $r0;
        java.lang.Object $r3;
        boolean $z0;
        org.apache.log4j.lf5.LogLevel $r4;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("Configure LogLevel Colors");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(99);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogLevels()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.apache.log4j.lf5.LogLevel) $r3;

        $r5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createSubMenuItem(org.apache.log4j.lf5.LogLevel)>($r4);

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        goto label1;

     label2:
        return $r0;
    }

    protected javax.swing.JMenuItem createResetLogLevelColorMenuItem()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$10 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Reset LogLevel Colors");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(114);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$10;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$10: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected void selectAllLogLevels(boolean)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0, z1;
        org.apache.log4j.lf5.LogLevel $r3;
        javax.swing.JCheckBoxMenuItem $r4;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        z1 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogLevels()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.apache.log4j.lf5.LogLevel) $r2;

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getMenuItem(org.apache.log4j.lf5.LogLevel)>($r3);

        virtualinvoke $r4.<javax.swing.AbstractButton: void setSelected(boolean)>(z1);

        goto label1;

     label2:
        return;
    }

    protected javax.swing.JCheckBoxMenuItem getMenuItem(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.LogLevel r1;
        javax.swing.JCheckBoxMenuItem $r4, $r5, r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.LogLevel;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logLevelMenuItems>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.JCheckBoxMenuItem) $r3;

        r7 = (javax.swing.JCheckBoxMenuItem) $r4;

        if r7 != null goto label1;

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem createMenuItem(org.apache.log4j.lf5.LogLevel)>(r1);

        r7 = $r5;

        $r6 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logLevelMenuItems>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r7;
    }

    protected javax.swing.JMenuItem createSubMenuItem(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$11 $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r5;
        javax.swing.JMenuItem $r0;
        char $c0;
        java.lang.String $r2, $r3;
        org.apache.log4j.lf5.LogLevel r1;

        r5 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.LogLevel;

        $r0 = new javax.swing.JMenuItem;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: java.lang.String toString()>();

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: java.lang.String toString()>();

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>($c0);

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$11;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$11: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,javax.swing.JMenuItem,org.apache.log4j.lf5.LogLevel)>(r5, $r0, r1);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r4);

        return $r0;
    }

    protected void showLogLevelColorChangeDialog(javax.swing.JMenuItem, org.apache.log4j.lf5.LogLevel)
    {
        java.awt.Color $r3, $r4;
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r7;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        org.apache.log4j.lf5.LogLevel r5;
        javax.swing.JMenuItem r0;
        org.apache.log4j.lf5.viewer.LogTable $r6;
        javax.swing.JFrame $r2;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: javax.swing.JMenuItem;

        r5 := @parameter1: org.apache.log4j.lf5.LogLevel;

        $r2 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r3 = virtualinvoke r0.<java.awt.Component: java.awt.Color getForeground()>();

        $r4 = staticinvoke <javax.swing.JColorChooser: java.awt.Color showDialog(java.awt.Component,java.lang.String,java.awt.Color)>($r2, "Choose LogLevel Color", $r3);

        if $r4 == null goto label1;

        virtualinvoke r5.<org.apache.log4j.lf5.LogLevel: void setLogLevelColorMap(org.apache.log4j.lf5.LogLevel,java.awt.Color)>(r5, $r4);

        $r6 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r7 = virtualinvoke $r6.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        virtualinvoke $r7.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void refresh()>();

     label1:
        return;
    }

    protected javax.swing.JCheckBoxMenuItem createMenuItem(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$12 $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r5;
        char $c0;
        java.lang.String $r2, $r3;
        javax.swing.JCheckBoxMenuItem $r0;
        org.apache.log4j.lf5.LogLevel r1;

        r5 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.LogLevel;

        $r0 = new javax.swing.JCheckBoxMenuItem;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: java.lang.String toString()>();

        specialinvoke $r0.<javax.swing.JCheckBoxMenuItem: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setSelected(boolean)>(1);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: java.lang.String toString()>();

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>($c0);

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$12;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$12: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r5);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r4);

        return $r0;
    }

    protected javax.swing.JMenu createViewMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.Iterator $r2;
        javax.swing.JMenu $r0;
        org.apache.log4j.lf5.viewer.LogTableColumn $r6;
        javax.swing.JCheckBoxMenuItem $r7;
        javax.swing.JMenuItem $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("View");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(118);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogTableColumns()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.log4j.lf5.viewer.LogTableColumn) $r5;

        $r7 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)>($r6);

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r7);

        goto label1;

     label2:
        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createAllLogTableColumnsMenuItem()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createNoLogTableColumnsMenuItem()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        return $r0;
    }

    protected javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogTableColumn r1;
        javax.swing.JCheckBoxMenuItem $r4, $r5, r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logTableColumnMenuItems>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.JCheckBoxMenuItem) $r3;

        r7 = (javax.swing.JCheckBoxMenuItem) $r4;

        if r7 != null goto label1;

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem createLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)>(r1);

        r7 = $r5;

        $r6 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Map _logTableColumnMenuItems>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r7;
    }

    protected javax.swing.JCheckBoxMenuItem createLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$13 $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r5;
        char $c0;
        java.lang.String $r2, $r3;
        javax.swing.JCheckBoxMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogTableColumn r1;

        r5 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r0 = new javax.swing.JCheckBoxMenuItem;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String toString()>();

        specialinvoke $r0.<javax.swing.JCheckBoxMenuItem: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setSelected(boolean)>(1);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String toString()>();

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>($c0);

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$13;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$13: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r5);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r4);

        return $r0;
    }

    protected java.util.List updateView()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.Iterator $r3;
        java.util.ArrayList $r0;
        org.apache.log4j.lf5.viewer.LogTableColumn r5;
        javax.swing.JCheckBoxMenuItem $r6;
        java.util.List $r2;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _columns>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.log4j.lf5.viewer.LogTableColumn) $r4;

        $r6 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)>(r5);

        $z1 = virtualinvoke $r6.<javax.swing.AbstractButton: boolean isSelected()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    protected javax.swing.JMenuItem createAllLogTableColumnsMenuItem()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$14 $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Show all Columns");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(115);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$14;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$14: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createNoLogTableColumnsMenuItem()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$15 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Hide all Columns");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(104);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$15;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$15: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected void selectAllLogTableColumns(boolean)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0, z1;
        org.apache.log4j.lf5.viewer.LogTableColumn $r3;
        javax.swing.JCheckBoxMenuItem $r4;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        z1 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogTableColumns()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.apache.log4j.lf5.viewer.LogTableColumn) $r2;

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn)>($r3);

        virtualinvoke $r4.<javax.swing.AbstractButton: void setSelected(boolean)>(z1);

        goto label1;

     label2:
        return;
    }

    protected javax.swing.JMenu createFileMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        javax.swing.JMenuItem $r2, $r3, $r4, $r5;
        javax.swing.JMenu $r0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("File");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(102);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createOpenMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r2);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createOpenURLMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createCloseMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void createMRUFileListMI(javax.swing.JMenu)>($r0);

        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createExitMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        return $r0;
    }

    protected javax.swing.JMenuItem createOpenMI()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$16 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Open...");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(111);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$16;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$16: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createOpenURLMI()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$17 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Open URL...");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(117);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$17;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$17: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createCloseMI()
    {
        javax.swing.KeyStroke $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r3;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$18 $r2;

        r3 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Close");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(99);

        $r1 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("control Q");

        virtualinvoke $r0.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>($r1);

        $r2 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$18;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$18: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r3);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r2);

        return $r0;
    }

    protected void createMRUFileListMI(javax.swing.JMenu)
    {
        java.lang.String[] $r2;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r1;
        javax.swing.JMenuItem $r4;
        java.lang.StringBuffer $r5, $r6, $r7, $r9;
        int $i0, $i1, $i2, i3;
        java.lang.String $r8, $r10;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$19 $r11;
        javax.swing.JMenu r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r3 := @parameter0: javax.swing.JMenu;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>();

        if $r2 == null goto label2;

        virtualinvoke r3.<javax.swing.JMenu: void addSeparator()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label2;

        $r4 = new javax.swing.JMenuItem;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i1 = i3 + 1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = $r2[i3];

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r10);

        $i2 = i3 + 1;

        virtualinvoke $r4.<javax.swing.AbstractButton: void setMnemonic(int)>($i2);

        $r11 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$19;

        specialinvoke $r11.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$19: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r0);

        virtualinvoke $r4.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r11);

        virtualinvoke r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected javax.swing.JMenuItem createExitMI()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$20 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Exit");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(120);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$20;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$20: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenu createConfigureMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        javax.swing.JMenuItem $r2, $r3, $r4;
        javax.swing.JMenu $r0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("Configure");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(99);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createConfigureSave()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r2);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createConfigureReset()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createConfigureMaxRecords()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        return $r0;
    }

    protected javax.swing.JMenuItem createConfigureSave()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$21 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Save");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(115);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$21;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$21: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createConfigureReset()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$22 $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Reset");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(114);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$22;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$22: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createConfigureMaxRecords()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$23 $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Set Max Number of Records");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(109);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$23;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$23: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected void saveConfiguration()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.configure.ConfigurationManager $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.ConfigurationManager _configurationManager>;

        virtualinvoke $r1.<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void save()>();

        return;
    }

    protected void resetConfiguration()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        org.apache.log4j.lf5.viewer.configure.ConfigurationManager $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.ConfigurationManager _configurationManager>;

        virtualinvoke $r1.<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: void reset()>();

        return;
    }

    protected void setMaxRecordConfiguration()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        int $i0;
        org.apache.log4j.lf5.viewer.LogFactor5InputDialog $r0;
        java.lang.String $r3, $r11;
        javax.swing.JFrame $r2, $r6;
        org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog $r5;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new org.apache.log4j.lf5.viewer.LogFactor5InputDialog;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        specialinvoke $r0.<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: void <init>(javax.swing.JFrame,java.lang.String,java.lang.String,int)>($r2, "Set Max Number of Records", "", 10);

        $r3 = virtualinvoke $r0.<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: java.lang.String getText()>();

        if $r3 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setMaxNumberOfLogRecords(int)>($i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog;

        $r6 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid parameter.\nPlease try again.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>($r6, $r11);

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setMaxRecordConfiguration()>();

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected javax.swing.JMenu createHelpMenu()
    {
        javax.swing.JMenu $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        javax.swing.JMenuItem $r2;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("Help");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(104);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createHelpProperties()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r2);

        return $r0;
    }

    protected javax.swing.JMenuItem createHelpProperties()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$24 $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("LogFactor5 Properties");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(108);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$24;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$24: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected void showPropertiesDialog(java.lang.String)
    {
        java.util.List $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.lang.Object[] $r3;
        int $i1;
        java.lang.String r4;
        javax.swing.JFrame $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _displayedLogBrokerProperties>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        $i1 = (int) -1;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r2, $r3, r4, $i1);

        return;
    }

    protected javax.swing.JMenu createEditMenu()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        javax.swing.JMenuItem $r2, $r3, $r4, $r5;
        javax.swing.JMenu $r0;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenu;

        specialinvoke $r0.<javax.swing.JMenu: void <init>(java.lang.String)>("Edit");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(101);

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createEditFindMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r2);

        $r3 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createEditFindNextMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r3);

        virtualinvoke $r0.<javax.swing.JMenu: void addSeparator()>();

        $r4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createEditSortNDCMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        $r5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createEditRestoreAllNDCMI()>();

        virtualinvoke $r0.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        return $r0;
    }

    protected javax.swing.JMenuItem createEditFindNextMI()
    {
        javax.swing.KeyStroke $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$25 $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r3;
        javax.swing.JMenuItem $r0;

        r3 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Find Next");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(110);

        $r1 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("F3");

        virtualinvoke $r0.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>($r1);

        $r2 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$25;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$25: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r3);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r2);

        return $r0;
    }

    protected javax.swing.JMenuItem createEditFindMI()
    {
        javax.swing.KeyStroke $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r3;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$26 $r2;

        r3 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Find");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(102);

        $r1 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("control F");

        virtualinvoke $r0.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>($r1);

        $r2 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$26;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$26: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r3);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r2);

        return $r0;
    }

    protected javax.swing.JMenuItem createEditSortNDCMI()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$27 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Sort by NDC");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(115);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$27;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$27: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JMenuItem createEditRestoreAllNDCMI()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        javax.swing.JMenuItem $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$28 $r1;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JMenuItem;

        specialinvoke $r0.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Restore all NDCs");

        virtualinvoke $r0.<javax.swing.AbstractButton: void setMnemonic(char)>(114);

        $r1 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$28;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$28: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r1);

        return $r0;
    }

    protected javax.swing.JToolBar createToolBar()
    {
        java.net.URL $r7;
        java.lang.String[] r23;
        java.awt.GraphicsEnvironment $r19;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$29 $r9;
        int $i0, i1, $i2;
        java.lang.Boolean $r1;
        javax.swing.ImageIcon $r20, r22;
        java.lang.String $r11, $r13, $r18;
        javax.swing.JComboBox $r2, $r3;
        boolean $z0;
        javax.swing.JToolBar $r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r4;
        javax.swing.JButton $r8;
        java.awt.Dimension $r16, $r17;
        javax.swing.JLabel $r15;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6, r21;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$30 $r12;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$31 $r14;
        java.awt.Toolkit $r10;

        r4 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JToolBar;

        specialinvoke $r0.<javax.swing.JToolBar: void <init>()>();

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r0.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("JToolBar.isRollover", $r1);

        $r2 = new javax.swing.JComboBox;

        specialinvoke $r2.<javax.swing.JComboBox: void <init>()>();

        $r3 = new javax.swing.JComboBox;

        specialinvoke $r3.<javax.swing.JComboBox: void <init>()>();

        r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JComboBox _fontSizeCombo> = $r3;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r21 = $r6;

        if $r6 != null goto label1;

        r21 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label1:
        $r7 = virtualinvoke r21.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("org/apache/log4j/lf5/viewer/images/channelexplorer_new.gif");

        r22 = null;

        if $r7 == null goto label2;

        $r20 = new javax.swing.ImageIcon;

        specialinvoke $r20.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r7);

        r22 = $r20;

     label2:
        $r8 = new javax.swing.JButton;

        specialinvoke $r8.<javax.swing.JButton: void <init>(java.lang.String)>("Clear Log Table");

        if r22 == null goto label3;

        virtualinvoke $r8.<javax.swing.AbstractButton: void setIcon(javax.swing.Icon)>(r22);

     label3:
        virtualinvoke $r8.<javax.swing.JComponent: void setToolTipText(java.lang.String)>("Clear Log Table.");

        $r9 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$29;

        specialinvoke $r9.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$29: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r4);

        virtualinvoke $r8.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r9);

        $r10 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $z0 = r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _loadSystemFonts>;

        if $z0 == 0 goto label4;

        $r19 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        r23 = virtualinvoke $r19.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        goto label5;

     label4:
        r23 = virtualinvoke $r10.<java.awt.Toolkit: java.lang.String[] getFontList()>();

     label5:
        i1 = 0;

     label6:
        $i2 = lengthof r23;

        if i1 >= $i2 goto label7;

        $r18 = r23[i1];

        virtualinvoke $r2.<javax.swing.JComboBox: void addItem(java.lang.Object)>($r18);

        i1 = i1 + 1;

        goto label6;

     label7:
        $r11 = r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _fontName>;

        virtualinvoke $r2.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r11);

        $r12 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$30;

        specialinvoke $r12.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$30: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r4);

        virtualinvoke $r2.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r12);

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("8");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("9");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("10");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("12");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("14");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("16");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("18");

        virtualinvoke $r3.<javax.swing.JComboBox: void addItem(java.lang.Object)>("24");

        $i0 = r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: int _fontSize>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r3.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r13);

        $r14 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$31;

        specialinvoke $r14.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$31: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r4);

        virtualinvoke $r3.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r14);

        $r15 = new javax.swing.JLabel;

        specialinvoke $r15.<javax.swing.JLabel: void <init>(java.lang.String)>(" Font: ");

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r15);

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r2);

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r3);

        virtualinvoke $r0.<javax.swing.JToolBar: void addSeparator()>();

        virtualinvoke $r0.<javax.swing.JToolBar: void addSeparator()>();

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r8);

        virtualinvoke $r8.<javax.swing.JComponent: void setAlignmentY(float)>(0.5F);

        virtualinvoke $r8.<javax.swing.JComponent: void setAlignmentX(float)>(0.5F);

        $r16 = virtualinvoke $r2.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r2.<javax.swing.JComponent: void setMaximumSize(java.awt.Dimension)>($r16);

        $r17 = virtualinvoke $r3.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r3.<javax.swing.JComponent: void setMaximumSize(java.awt.Dimension)>($r17);

        return $r0;
    }

    protected void setView(java.lang.String, org.apache.log4j.lf5.viewer.LogTable)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r8;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuffer $r2, $r3, $r4;
        org.apache.log4j.lf5.viewer.LogTable r7;
        java.lang.String r0, $r1, $r5;
        boolean $z0;

        r8 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.log4j.lf5.viewer.LogTable;

        $r1 = "Detailed";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r7.<org.apache.log4j.lf5.viewer.LogTable: void setDetailedView()>();

        goto label2;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("does not match a supported view.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label2:
        r8.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String _currentView> = r0;

        return;
    }

    protected javax.swing.JComboBox createLogLevelCombo()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.util.Iterator $r2;
        org.apache.log4j.lf5.LogLevel $r3;
        java.awt.Dimension $r5;
        java.lang.Object $r6;
        javax.swing.JComboBox $r0;
        boolean $z0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor$32 $r4;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new javax.swing.JComboBox;

        specialinvoke $r0.<javax.swing.JComboBox: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.Iterator getLogLevels()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<javax.swing.JComboBox: void addItem(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r3 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogLevel _leastSevereDisplayedLogLevel>;

        virtualinvoke $r0.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r3);

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor$32;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor$32: void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r1);

        virtualinvoke $r0.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r4);

        $r5 = virtualinvoke $r0.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r0.<javax.swing.JComponent: void setMaximumSize(java.awt.Dimension)>($r5);

        return $r0;
    }

    protected void setLeastSevereDisplayedLogLevel(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r4;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        org.apache.log4j.lf5.viewer.LogTable $r3;
        org.apache.log4j.lf5.LogLevel r0, $r2;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogLevel _leastSevereDisplayedLogLevel>;

        if $r2 != r0 goto label2;

     label1:
        return;

     label2:
        r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.LogLevel _leastSevereDisplayedLogLevel> = r0;

        $r3 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.LogTable _table>;

        $r4 = virtualinvoke $r3.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        virtualinvoke $r4.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void refresh()>();

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateStatusLabel()>();

        return;
    }

    protected void trackTableScrollPane()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        return;
    }

    protected void centerFrame(javax.swing.JFrame)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r4;
        java.awt.Dimension $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javax.swing.JFrame r2;
        java.awt.Toolkit $r0;

        r4 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r2 := @parameter0: javax.swing.JFrame;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $r3 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i1 = $r1.<java.awt.Dimension: int width>;

        $i0 = $r3.<java.awt.Dimension: int width>;

        $i2 = $i1 - $i0;

        $i7 = $i2 / 2;

        $i4 = $r1.<java.awt.Dimension: int height>;

        $i3 = $r3.<java.awt.Dimension: int height>;

        $i5 = $i4 - $i3;

        $i6 = $i5 / 2;

        virtualinvoke r2.<java.awt.Component: void setLocation(int,int)>($i7, $i6);

        return;
    }

    protected void requestOpen()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.io.File $r1, $r3, $r5, $r6;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r7;
        int $i0;
        javax.swing.JFileChooser $r2, $r8, r9;
        javax.swing.JFrame $r4;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.io.File _fileLocation>;

        if $r1 != null goto label1;

        $r8 = new javax.swing.JFileChooser;

        specialinvoke $r8.<javax.swing.JFileChooser: void <init>()>();

        r9 = $r8;

        goto label2;

     label1:
        $r2 = new javax.swing.JFileChooser;

        $r3 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.io.File _fileLocation>;

        specialinvoke $r2.<javax.swing.JFileChooser: void <init>(java.io.File)>($r3);

        r9 = $r2;

     label2:
        $r4 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $i0 = virtualinvoke r9.<javax.swing.JFileChooser: int showOpenDialog(java.awt.Component)>($r4);

        if $i0 != 0 goto label3;

        $r5 = virtualinvoke r9.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        $z0 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean loadLogFile(java.io.File)>($r5);

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r9.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.io.File _fileLocation> = $r6;

        $r7 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        virtualinvoke $r7.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void set(java.io.File)>($r5);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateMRUList()>();

     label3:
        return;
    }

    protected void requestOpenURL()
    {
        java.net.URL $r15;
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r5;
        java.lang.StringBuffer $r7, $r8, $r14;
        int $i0, $i2;
        java.lang.String $r3, r12;
        org.apache.log4j.lf5.viewer.LogFactor5InputDialog $r13;
        javax.swing.JFrame $r2, $r11;
        org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog $r16;
        boolean $z0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.net.MalformedURLException $r9;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r13 = new org.apache.log4j.lf5.viewer.LogFactor5InputDialog;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        specialinvoke $r13.<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: void <init>(javax.swing.JFrame,java.lang.String,java.lang.String)>($r2, "Open URL", "URL:");

        $r3 = virtualinvoke $r13.<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: java.lang.String getText()>();

        r12 = $r3;

        if $r3 == null goto label4;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("://");

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("http://");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r15 = new java.net.URL;

        specialinvoke $r15.<java.net.URL: void <init>(java.lang.String)>(r12);

        $z0 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean loadLogFile(java.net.URL)>($r15);

        if $z0 == 0 goto label2;

        $r5 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        virtualinvoke $r5.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void set(java.net.URL)>($r15);

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateMRUList()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r16 = new org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog;

        $r11 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        specialinvoke $r16.<org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>($r11, "Error reading URL.");

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    protected void updateMRUList()
    {
        javax.swing.JMenuBar $r2;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        javax.swing.JMenu $r3;
        javax.swing.JMenuItem $r4, $r5, $r6, $r7;
        javax.swing.JFrame $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r2 = virtualinvoke $r1.<javax.swing.JFrame: javax.swing.JMenuBar getJMenuBar()>();

        $r3 = virtualinvoke $r2.<javax.swing.JMenuBar: javax.swing.JMenu getMenu(int)>(0);

        virtualinvoke $r3.<javax.swing.JMenu: void removeAll()>();

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createOpenMI()>();

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r4);

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createOpenURLMI()>();

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        virtualinvoke $r3.<javax.swing.JMenu: void addSeparator()>();

        $r6 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createCloseMI()>();

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r6);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void createMRUFileListMI(javax.swing.JMenu)>($r3);

        virtualinvoke $r3.<javax.swing.JMenu: void addSeparator()>();

        $r7 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JMenuItem createExitMI()>();

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r7);

        return;
    }

    protected void requestClose()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setCallSystemExitOnClose(boolean)>(0);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void closeAfterConfirm()>();

        return;
    }

    protected void requestOpenMRU(java.awt.event.ActionEvent)
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r7, $r10;
        java.util.StringTokenizer $r2;
        java.lang.StringBuffer $r14, $r15, $r16;
        int $i0, i1;
        java.lang.String $r1, $r3, $r4, $r5, $r17;
        org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog $r12;
        javax.swing.JFrame $r13;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r6;
        java.awt.event.ActionEvent r0;
        java.lang.Exception $r11;
        java.io.InputStream $r8;
        org.apache.log4j.lf5.util.LogFileParser $r9;

        r6 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r5 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>("\n");

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        i1 = $i0 - 1;

        $r7 = r6.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        $r8 = virtualinvoke $r7.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.io.InputStream getInputStream(int)>(i1);

        $r9 = new org.apache.log4j.lf5.util.LogFileParser;

        specialinvoke $r9.<org.apache.log4j.lf5.util.LogFileParser: void <init>(java.io.InputStream)>($r8);

        virtualinvoke $r9.<org.apache.log4j.lf5.util.LogFileParser: void parse(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r6);

        $r10 = r6.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        virtualinvoke $r10.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void moveToTop(int)>(i1);

        virtualinvoke r6.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void updateMRUList()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog;

        $r13 = virtualinvoke r6.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to load file ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>($r13, $r17);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void requestExit()
    {
        org.apache.log4j.lf5.viewer.configure.MRUFileManager $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: org.apache.log4j.lf5.viewer.configure.MRUFileManager _mruFileManager>;

        virtualinvoke $r1.<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void save()>();

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setCallSystemExitOnClose(boolean)>(1);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void closeAfterConfirm()>();

        return;
    }

    protected void closeAfterConfirm()
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r1;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r3, r4;
        javax.swing.JFrame $r2;
        boolean $z0, $z1;

        r1 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $z0 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose>;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Are you sure you want to close the logging ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("console?\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(Note: This will not shut down the Virtual Machine,\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("or the Swing event thread.)");

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Are you sure you want to exit?\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This will shut down the Virtual Machine.\n");

     label2:
        r4 = "Are you sure you want to dispose of the Logging Console?";

        $z1 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: boolean _callSystemExitOnClose>;

        if $z1 != 1 goto label3;

        r4 = "Are you sure you want to exit?";

     label3:
        $r2 = r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame _logMonitorFrame>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon)>($r2, $r3, r4, 2, 3, null);

        if $i0 != 0 goto label4;

        virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void dispose()>();

     label4:
        return;
    }

    protected java.util.Iterator getLogLevels()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _levels>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    protected java.util.Iterator getLogTableColumns()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.util.List _columns>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    protected boolean loadLogFile(java.io.File)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r2;
        java.io.IOException $r3;
        java.io.File r1;
        java.lang.StringBuffer $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog $r4;
        javax.swing.JFrame $r5;
        org.apache.log4j.lf5.util.LogFileParser $r0;
        boolean z0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: java.io.File;

        z0 = 0;

     label1:
        $r0 = new org.apache.log4j.lf5.util.LogFileParser;

        specialinvoke $r0.<org.apache.log4j.lf5.util.LogFileParser: void <init>(java.io.File)>(r1);

        virtualinvoke $r0.<org.apache.log4j.lf5.util.LogFileParser: void parse(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r2);

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog;

        $r5 = virtualinvoke r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading ");

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>($r5, $r10);

     label4:
        return z0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected boolean loadLogFile(java.net.URL)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor r3;
        java.net.URL r1;
        java.io.IOException $r4;
        java.lang.StringBuffer $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog $r5;
        javax.swing.JFrame $r6;
        org.apache.log4j.lf5.util.LogFileParser $r0;
        java.io.InputStream $r2;
        boolean z0;

        r3 := @this: org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        r1 := @parameter0: java.net.URL;

        z0 = 0;

     label1:
        $r0 = new org.apache.log4j.lf5.util.LogFileParser;

        $r2 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r0.<org.apache.log4j.lf5.util.LogFileParser: void <init>(java.io.InputStream)>($r2);

        virtualinvoke $r0.<org.apache.log4j.lf5.util.LogFileParser: void parse(org.apache.log4j.lf5.viewer.LogBrokerMonitor)>(r3);

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog;

        $r6 = virtualinvoke r3.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: javax.swing.JFrame getBaseFrame()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading URL:");

        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog: void <init>(javax.swing.JFrame,java.lang.String)>($r6, $r11);

     label4:
        return z0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String DETAILED_VIEW> = "Detailed";

        return;
    }
}
