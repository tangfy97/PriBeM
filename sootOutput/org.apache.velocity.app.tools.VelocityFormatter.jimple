public class org.apache.velocity.app.tools.VelocityFormatter extends java.lang.Object
{
    org.apache.velocity.context.Context context;

    public void <init>(org.apache.velocity.context.Context)
    {
        org.apache.velocity.context.Context r1;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: org.apache.velocity.context.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context> = null;

        r0.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context> = r1;

        return;
    }

    public java.lang.String formatShortDate(java.util.Date)
    {
        java.util.Date r1;
        java.lang.String $r2;
        java.text.DateFormat $r0;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(3);

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r2;
    }

    public java.lang.String formatLongDate(java.util.Date)
    {
        java.util.Date r1;
        java.lang.String $r2;
        java.text.DateFormat $r0;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(1);

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r2;
    }

    public java.lang.String formatShortDateTime(java.util.Date)
    {
        java.util.Date r1;
        java.lang.String $r2;
        java.text.DateFormat $r0;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 3);

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r2;
    }

    public java.lang.String formatLongDateTime(java.util.Date)
    {
        java.util.Date r1;
        java.lang.String $r2;
        java.text.DateFormat $r0;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(1, 1);

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r2;
    }

    public java.lang.String formatArray(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.velocity.app.tools.VelocityFormatter: java.lang.String formatArray(java.lang.Object,java.lang.String,java.lang.String)>(r1, ", ", " and ");

        return $r2;
    }

    public java.lang.String formatArray(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        java.lang.String r2, $r3;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.velocity.app.tools.VelocityFormatter: java.lang.String formatArray(java.lang.Object,java.lang.String,java.lang.String)>(r1, r2, r2);

        return $r3;
    }

    public java.lang.String formatArray(java.lang.Object, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object r1, $r3;
        java.lang.String $r2, $r4, r5, r6;
        org.apache.velocity.app.tools.VelocityFormatter r7;

        r7 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        i3 = 0;

     label1:
        if i3 >= $i0 goto label4;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i3);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i1 = $i0 - 2;

        if i3 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        goto label3;

     label2:
        $i2 = $i0 - 1;

        if i3 >= $i2 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String formatVector(java.util.List)
    {
        java.util.List r1;
        java.lang.String $r2;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<org.apache.velocity.app.tools.VelocityFormatter: java.lang.String formatVector(java.util.List,java.lang.String,java.lang.String)>(r1, ", ", " and ");

        return $r2;
    }

    public java.lang.String formatVector(java.util.List, java.lang.String)
    {
        java.util.List r1;
        java.lang.String r2, $r3;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.velocity.app.tools.VelocityFormatter: java.lang.String formatVector(java.util.List,java.lang.String,java.lang.String)>(r1, r2, r2);

        return $r3;
    }

    public java.lang.String formatVector(java.util.List, java.lang.String, java.lang.String)
    {
        java.util.List r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        java.lang.String $r2, r4, r5;
        org.apache.velocity.app.tools.VelocityFormatter r6;

        r6 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $i1 = $i0 - 2;

        if i3 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        goto label3;

     label2:
        $i2 = $i0 - 1;

        if i3 >= $i2 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String limitLen(int, java.lang.String)
    {
        int i0;
        java.lang.String r1, $r2;
        org.apache.velocity.app.tools.VelocityFormatter r0;

        r0 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.velocity.app.tools.VelocityFormatter: java.lang.String limitLen(int,java.lang.String,java.lang.String)>(i0, r1, "...");

        return $r2;
    }

    public java.lang.String limitLen(int, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r4, $r5;
        int $i0, i1, $i2, $i3;
        java.lang.String r0, r2, $r3, r7;
        org.apache.velocity.app.tools.VelocityFormatter r6;

        r6 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        i1 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r7 = r0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= i1 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = i1 - $i2;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r7;
    }

    public java.lang.String makeAlternator(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.velocity.context.Context $r6;
        java.lang.String[] $r0;
        java.lang.String r1, r2, r4;
        org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator $r5;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r6 = r3.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context>;

        $r5 = new org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator;

        specialinvoke $r5.<org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator: void <init>(org.apache.velocity.app.tools.VelocityFormatter,java.lang.String[])>(r3, $r0);

        interfaceinvoke $r6.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r4, $r5);

        return "";
    }

    public java.lang.String makeAlternator(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r0;
        org.apache.velocity.context.Context $r7;
        java.lang.String r1, r2, r3, r5;
        org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator $r6;
        org.apache.velocity.app.tools.VelocityFormatter r4;

        r4 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        $r7 = r4.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context>;

        $r6 = new org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator;

        specialinvoke $r6.<org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator: void <init>(org.apache.velocity.app.tools.VelocityFormatter,java.lang.String[])>(r4, $r0);

        interfaceinvoke $r7.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r5, $r6);

        return "";
    }

    public java.lang.String makeAlternator(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r0;
        org.apache.velocity.context.Context $r8;
        java.lang.String r1, r2, r3, r4, r6;
        org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator $r7;
        org.apache.velocity.app.tools.VelocityFormatter r5;

        r5 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        $r0[3] = r4;

        $r8 = r5.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context>;

        $r7 = new org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator;

        specialinvoke $r7.<org.apache.velocity.app.tools.VelocityFormatter$VelocityAlternator: void <init>(org.apache.velocity.app.tools.VelocityFormatter,java.lang.String[])>(r5, $r0);

        interfaceinvoke $r8.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r6, $r7);

        return "";
    }

    public java.lang.String makeAutoAlternator(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.velocity.context.Context $r6;
        java.lang.String[] $r0;
        org.apache.velocity.app.tools.VelocityFormatter$VelocityAutoAlternator $r5;
        java.lang.String r1, r2, r4;
        org.apache.velocity.app.tools.VelocityFormatter r3;

        r3 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r6 = r3.<org.apache.velocity.app.tools.VelocityFormatter: org.apache.velocity.context.Context context>;

        $r5 = new org.apache.velocity.app.tools.VelocityFormatter$VelocityAutoAlternator;

        specialinvoke $r5.<org.apache.velocity.app.tools.VelocityFormatter$VelocityAutoAlternator: void <init>(org.apache.velocity.app.tools.VelocityFormatter,java.lang.String[])>(r3, $r0);

        interfaceinvoke $r6.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r4, $r5);

        return "";
    }

    public java.lang.Object isNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        org.apache.velocity.app.tools.VelocityFormatter r2;

        r2 := @this: org.apache.velocity.app.tools.VelocityFormatter;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return r1;

     label1:
        return r0;
    }
}
