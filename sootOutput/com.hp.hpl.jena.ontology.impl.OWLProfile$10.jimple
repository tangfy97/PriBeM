final class com.hp.hpl.jena.ontology.impl.OWLProfile$10 extends com.hp.hpl.jena.ontology.impl.OWLProfile$SupportsCheck
{

    void <init>()
    {
        com.hp.hpl.jena.ontology.impl.OWLProfile$10 r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OWLProfile$10;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OWLProfile$SupportsCheck: void <init>()>();

        return;
    }

    public boolean doCheck(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.impl.OWLProfile$10 r7;
        com.hp.hpl.jena.graph.Node r2, $r4, $r6;
        com.hp.hpl.jena.rdf.model.Resource $r5;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0;

        r7 := @this: com.hp.hpl.jena.ontology.impl.OWLProfile$10;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Ontology>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, $r4, $r6);

        return $z0;
    }
}
