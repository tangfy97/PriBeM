public class com.jidesoft.plaf.eclipse.EclipseWindowsUtils extends com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension
{

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseWindowsUtils;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension: void <init>()>();

        return;
    }

    public static void initClassDefaultsWithMenu(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r0);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        return;
    }

    public static void initClassDefaults(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        int $i0, $i1;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseLookAndFeelExtension: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JidePopupMenuUI", "com.jidesoft.plaf.windows.WindowsJidePopupMenuUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("RangeSliderUI", "com.jidesoft.plaf.windows.WindowsRangeSliderUI");

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("CellStyleTableHeaderUI", "com.jidesoft.plaf.windows.WindowsCellStyleTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("SortableTableHeaderUI", "com.jidesoft.plaf.windows.WindowsSortableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("NestedTableHeaderUI", "com.jidesoft.plaf.windows.WindowsNestedTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("EditableTableHeaderUI", "com.jidesoft.plaf.windows.WindowsEditableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("AutoFilterTableHeaderUI", "com.jidesoft.plaf.windows.WindowsAutoFilterTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("GroupTableHeaderUI", "com.jidesoft.plaf.windows.WindowsGroupTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExComboBoxUI", "com.jidesoft.plaf.windows.WindowsExComboBoxUI");

     label1:
        return;
    }

    public static void initComponentDefaults(javax.swing.UIDefaults)
    {
        java.awt.Color $r32, $r33, $r35, $r110, $r171, $r182, $r183;
        java.lang.Integer $r67, $r68, $r72, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r107, $r111, $r114, $r119, $r121, $r122, $r123, $r126, $r175, $r178, $r179, $r184, $r190, $r202, $r208, $r209, $r245, $r246, $r247, $r248, $r249, $r252, $r253, $r273, $r274, $r275, $r279;
        javax.swing.border.Border $r36, $r74, $r149, $r151, $r166, $r168, $r172, $r173, $r189, $r192, $r194, $r196, $r200, $r255, $r258, $r260, $r262;
        javax.swing.plaf.BorderUIResource $r73, $r102, $r120, $r148, $r150, $r165, $r167, $r169, $r188, $r191, $r193, $r195, $r199, $r204, $r254, $r257, $r259, $r261;
        java.awt.Toolkit $r0;
        java.awt.Insets $r34, $r201;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Boolean $r101, $r105, $r112, $r113, $r125, $r147, $r160, $r185, $r207, $r250, $r251, $r271, $r272, $r276, $r280;
        com.jidesoft.plaf.ExtWindowsDesktopProperty $r38, $r46, $r51, $r56, $r210, $r218, $r226, $r234;
        javax.swing.border.CompoundBorder $r37, $r174;
        javax.swing.plaf.ColorUIResource $r100, $r108, $r109, $r155, $r156, $r157, $r158, $r203, $r278;
        com.jidesoft.plaf.WindowsDesktopProperty $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r61;
        com.jidesoft.plaf.basic.ThemePainter $r152;
        boolean $z0;
        javax.swing.UIDefaults r27;
        javax.swing.plaf.InsetsUIResource $r66, $r103, $r104, $r106, $r124, $r244, $r277;
        java.lang.Object[] $r40, $r48, $r53, $r58, $r65, $r70, $r116, $r118, $r128, $r153, $r154, $r159, $r163, $r164, $r177, $r187, $r212, $r220, $r228, $r236, $r243;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r64;
        com.jidesoft.plaf.vsnet.HeaderCellBorder $r161;
        javax.swing.UIDefaults$LazyInputMap $r69, $r115, $r117, $r127, $r162, $r176;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r29, $r30, $r41, $r42, $r43, $r44, $r49, $r54, $r59, $r62, $r170, $r213, $r214, $r215, $r216, $r221, $r222, $r223, $r224, $r229, $r230, $r231, $r232, $r237, $r238, $r239, $r240;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$9 $r241;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$8 $r233;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$7 $r225;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$6 $r217;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$5 $r63;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$4 $r60;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$3 $r55;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$2 $r50;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$1 $r45;
        javax.swing.ImageIcon $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r186, $r197, $r198, $r205, $r206, $r242, $r256, $r263, $r264, $r265, $r266, $r267, $r268, $r269, $r270;
        javax.swing.plaf.DimensionUIResource $r180, $r181;
        javax.swing.Icon $r71;
        java.lang.String[] $r39, $r47, $r52, $r57, $r211, $r219, $r227, $r235;
        com.jidesoft.plaf.eclipse.ShadowBorder $r31;

        r27 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        specialinvoke $r1.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.button.textColor", $r2, $r0);

        $r3 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        specialinvoke $r3.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.backgroundColor", $r4, $r0);

        $r5 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        specialinvoke $r5.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.lightColor", $r6, $r0);

        $r7 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        specialinvoke $r7.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.highlightColor", $r8, $r0);

        $r9 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r9.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.shadowColor", $r10, $r0);

        $r11 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        specialinvoke $r11.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.darkShadowColor", $r12, $r0);

        $r13 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaptionText");

        specialinvoke $r13.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.captionTextColor", $r14, $r0);

        $r15 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaption");

        specialinvoke $r15.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.activeCaptionColor", $r16, $r0);

        $r17 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r18 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaption");

        specialinvoke $r17.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.activeCaptionGradientColor", $r18, $r0);

        $r19 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        specialinvoke $r19.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.inactiveCaptionTextColor", $r20, $r0);

        $r21 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r22 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r21.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.shadowColor", $r22, $r0);

        $r23 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r24 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r23.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.mdi.backgroundColor", $r24, $r0);

        $r25 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r26 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("highContrast");

        specialinvoke $r25.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.highContrast.on", $r26, $r0);

        $r28 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getControlFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r27);

        $r29 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r27);

        $r30 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getBoldFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r27);

        $r31 = new com.jidesoft.plaf.eclipse.ShadowBorder;

        $r32 = new java.awt.Color;

        specialinvoke $r32.<java.awt.Color: void <init>(int,int,int)>(171, 168, 165);

        $r33 = new java.awt.Color;

        specialinvoke $r33.<java.awt.Color: void <init>(int,int,int)>(143, 141, 138);

        $r34 = new java.awt.Insets;

        specialinvoke $r34.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 2, 2);

        specialinvoke $r31.<com.jidesoft.plaf.eclipse.ShadowBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>(null, null, $r32, $r33, $r34);

        $r35 = <java.awt.Color: java.awt.Color gray>;

        $r36 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r35);

        $r37 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r31, $r36);

        $r38 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r39 = newarray (java.lang.String)[4];

        $r39[0] = "win.3d.lightColor";

        $r39[1] = "win.3d.highlightColor";

        $r39[2] = "win.3d.shadowColor";

        $r39[3] = "win.3d.darkShadowColor";

        $r40 = newarray (java.lang.Object)[4];

        $r41 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r40[0] = $r41;

        $r42 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r40[1] = $r42;

        $r43 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r40[2] = $r43;

        $r44 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r40[3] = $r44;

        $r45 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$1;

        specialinvoke $r45.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$1: void <init>()>();

        specialinvoke $r38.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r39, $r40, $r0, $r45);

        $r46 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r47 = newarray (java.lang.String)[1];

        $r47[0] = "win.item.highlightColor";

        $r48 = newarray (java.lang.Object)[1];

        $r49 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r48[0] = $r49;

        $r50 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$2;

        specialinvoke $r50.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$2: void <init>()>();

        specialinvoke $r46.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r47, $r48, $r0, $r50);

        $r51 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r52 = newarray (java.lang.String)[1];

        $r52[0] = "win.item.highlightColor";

        $r53 = newarray (java.lang.Object)[1];

        $r54 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r53[0] = $r54;

        $r55 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$3;

        specialinvoke $r55.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$3: void <init>()>();

        specialinvoke $r51.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r52, $r53, $r0, $r55);

        $r56 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r57 = newarray (java.lang.String)[1];

        $r57[0] = "win.item.highlightColor";

        $r58 = newarray (java.lang.Object)[1];

        $r59 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r58[0] = $r59;

        $r60 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$4;

        specialinvoke $r60.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$4: void <init>()>();

        specialinvoke $r56.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r57, $r58, $r0, $r60);

        $r61 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r62 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r61.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.item.highlightColor", $r62, $r0);

        $r63 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$5;

        specialinvoke $r63.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$5: void <init>()>();

        $r64 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r64.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        $r65 = newarray (java.lang.Object)[248];

        $r65[0] = "Theme.highContrast";

        $r65[1] = $r25;

        $r65[2] = "Content.background";

        $r65[3] = $r3;

        $r65[4] = "JideLabel.font";

        $r65[5] = $r28;

        $r65[6] = "JideLabel.background";

        $r65[7] = $r3;

        $r65[8] = "JideLabel.foreground";

        $r65[9] = $r1;

        $r65[10] = "JideButton.selectedAndFocusedBackground";

        $r65[11] = $r51;

        $r65[12] = "JideButton.focusedBackground";

        $r65[13] = $r46;

        $r65[14] = "JideButton.selectedBackground";

        $r65[15] = $r56;

        $r65[16] = "JideButton.borderColor";

        $r65[17] = $r61;

        $r65[18] = "JideButton.font";

        $r65[19] = $r28;

        $r65[20] = "JideButton.background";

        $r65[21] = $r3;

        $r65[22] = "JideButton.foreground";

        $r65[23] = $r1;

        $r65[24] = "JideButton.shadow";

        $r65[25] = $r9;

        $r65[26] = "JideButton.darkShadow";

        $r65[27] = $r11;

        $r65[28] = "JideButton.light";

        $r65[29] = $r5;

        $r65[30] = "JideButton.highlight";

        $r65[31] = $r7;

        $r65[32] = "JideButton.border";

        $r65[33] = $r64;

        $r65[34] = "JideButton.margin";

        $r66 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r66.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 3);

        $r65[35] = $r66;

        $r65[36] = "JideButton.textIconGap";

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r65[37] = $r67;

        $r65[38] = "JideButton.textShiftOffset";

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r65[39] = $r68;

        $r65[40] = "JideButton.focusInputMap";

        $r69 = new javax.swing.UIDefaults$LazyInputMap;

        $r70 = newarray (java.lang.Object)[8];

        $r70[0] = "SPACE";

        $r70[1] = "pressed";

        $r70[2] = "released SPACE";

        $r70[3] = "released";

        $r70[4] = "ENTER";

        $r70[5] = "pressed";

        $r70[6] = "released ENTER";

        $r70[7] = "released";

        specialinvoke $r69.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r70);

        $r65[41] = $r69;

        $r65[42] = "TristateCheckBox.icon";

        $r71 = staticinvoke <com.jidesoft.plaf.windows.WindowsIconFactory: javax.swing.Icon getCheckBoxIcon()>();

        $r65[43] = $r71;

        $r65[44] = "JideSplitPane.dividerSize";

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r65[45] = $r72;

        $r65[46] = "JideSplitPaneDivider.border";

        $r73 = new javax.swing.plaf.BorderUIResource;

        $r74 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r73.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r74);

        $r65[47] = $r73;

        $r65[48] = "JideSplitPaneDivider.background";

        $r65[49] = $r3;

        $r65[50] = "JideSplitPaneDivider.gripperPainter";

        $r65[51] = $r63;

        $r65[52] = "JideTabbedPane.defaultTabShape";

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r65[53] = $r75;

        $r65[54] = "JideTabbedPane.defaultTabColorTheme";

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r65[55] = $r76;

        $r65[56] = "JideTabbedPane.tabRectPadding";

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[57] = $r77;

        $r65[58] = "JideTabbedPane.closeButtonMarginHorizonal";

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r65[59] = $r78;

        $r65[60] = "JideTabbedPane.closeButtonMarginVertical";

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r65[61] = $r79;

        $r65[62] = "JideTabbedPane.textMarginVertical";

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r65[63] = $r80;

        $r65[64] = "JideTabbedPane.noIconMargin";

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[65] = $r81;

        $r65[66] = "JideTabbedPane.iconMargin";

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r65[67] = $r82;

        $r65[68] = "JideTabbedPane.textPadding";

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r65[69] = $r83;

        $r65[70] = "JideTabbedPane.buttonSize";

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r65[71] = $r84;

        $r65[72] = "JideTabbedPane.buttonMargin";

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r65[73] = $r85;

        $r65[74] = "JideTabbedPane.fitStyleBoundSize";

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r65[75] = $r86;

        $r65[76] = "JideTabbedPane.fitStyleFirstTabMargin";

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r65[77] = $r87;

        $r65[78] = "JideTabbedPane.fitStyleIconMinWidth";

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r65[79] = $r88;

        $r65[80] = "JideTabbedPane.fitStyleTextMinWidth";

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r65[81] = $r89;

        $r65[82] = "JideTabbedPane.compressedStyleNoIconRectSize";

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r65[83] = $r90;

        $r65[84] = "JideTabbedPane.compressedStyleIconMargin";

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r65[85] = $r91;

        $r65[86] = "JideTabbedPane.compressedStyleCloseButtonMarginHorizontal";

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r65[87] = $r92;

        $r65[88] = "JideTabbedPane.compressedStyleCloseButtonMarginVertical";

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r65[89] = $r93;

        $r65[90] = "JideTabbedPane.fixedStyleRectSize";

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        $r65[91] = $r94;

        $r65[92] = "JideTabbedPane.closeButtonMargin";

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[93] = $r95;

        $r65[94] = "JideTabbedPane.gripLeftMargin";

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r65[95] = $r96;

        $r65[96] = "JideTabbedPane.closeButtonMarginSize";

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r65[97] = $r97;

        $r65[98] = "JideTabbedPane.closeButtonLeftMargin";

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[99] = $r98;

        $r65[100] = "JideTabbedPane.closeButtonRightMargin";

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[101] = $r99;

        $r65[102] = "JideTabbedPane.defaultTabBorderShadowColor";

        $r100 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r100.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(115, 109, 99);

        $r65[103] = $r100;

        $r65[104] = "JideTabbedPane.showFocusIndicator";

        $r101 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r65[105] = $r101;

        $r65[106] = "JideTabbedPane.gripperPainter";

        $r65[107] = $r63;

        $r65[108] = "JideTabbedPane.border";

        $r102 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r102.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r37);

        $r65[109] = $r102;

        $r65[110] = "JideTabbedPane.background";

        $r65[111] = $r3;

        $r65[112] = "JideTabbedPane.foreground";

        $r65[113] = $r1;

        $r65[114] = "JideTabbedPane.light";

        $r65[115] = $r5;

        $r65[116] = "JideTabbedPane.highlight";

        $r65[117] = $r7;

        $r65[118] = "JideTabbedPane.shadow";

        $r65[119] = $r9;

        $r65[120] = "JideTabbedPane.tabInsets";

        $r103 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r103.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 4, 1, 4);

        $r65[121] = $r103;

        $r65[122] = "JideTabbedPane.contentBorderInsets";

        $r104 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r104.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 0, 0, 0);

        $r65[123] = $r104;

        $r65[124] = "JideTabbedPane.ignoreContentBorderInsetsIfNoTabs";

        $r105 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r65[125] = $r105;

        $r65[126] = "JideTabbedPane.tabAreaInsets";

        $r106 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r106.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r65[127] = $r106;

        $r65[128] = "JideTabbedPane.tabAreaBackground";

        $r65[129] = $r3;

        $r65[130] = "JideTabbedPane.tabAreaBackgroundLt";

        $r65[131] = $r7;

        $r65[132] = "JideTabbedPane.tabAreaBackgroundDk";

        $r65[133] = $r3;

        $r65[134] = "JideTabbedPane.tabRunOverlay";

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r65[135] = $r107;

        $r65[136] = "JideTabbedPane.font";

        $r65[137] = $r28;

        $r65[138] = "JideTabbedPane.selectedTabFont";

        $r65[139] = $r28;

        $r65[140] = "JideTabbedPane.darkShadow";

        $r65[141] = $r1;

        $r65[142] = "JideTabbedPane.selectedTabTextForeground";

        $r65[143] = $r13;

        $r65[144] = "JideTabbedPane.unselectedTabTextForeground";

        $r65[145] = $r1;

        $r65[146] = "JideTabbedPane.selectedTabBackground";

        $r65[147] = $r3;

        $r65[148] = "JideTabbedPane.selectedTabBackgroundLt";

        $r108 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r108.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r65[149] = $r108;

        $r65[150] = "JideTabbedPane.selectedTabBackgroundDk";

        $r109 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r109.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r65[151] = $r109;

        $r65[152] = "JideTabbedPane.tabListBackground";

        $r110 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("List.background");

        $r65[153] = $r110;

        $r65[154] = "JideTabbedPane.textIconGap";

        $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r65[155] = $r111;

        $r65[156] = "JideTabbedPane.showIconOnTab";

        $r112 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r65[157] = $r112;

        $r65[158] = "JideTabbedPane.showCloseButtonOnTab";

        $r113 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r65[159] = $r113;

        $r65[160] = "JideTabbedPane.closeButtonAlignment";

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r65[161] = $r114;

        $r65[162] = "JideTabbedPane.focusInputMap";

        $r115 = new javax.swing.UIDefaults$LazyInputMap;

        $r116 = newarray (java.lang.Object)[20];

        $r116[0] = "RIGHT";

        $r116[1] = "navigateRight";

        $r116[2] = "KP_RIGHT";

        $r116[3] = "navigateRight";

        $r116[4] = "LEFT";

        $r116[5] = "navigateLeft";

        $r116[6] = "KP_LEFT";

        $r116[7] = "navigateLeft";

        $r116[8] = "UP";

        $r116[9] = "navigateUp";

        $r116[10] = "KP_UP";

        $r116[11] = "navigateUp";

        $r116[12] = "DOWN";

        $r116[13] = "navigateDown";

        $r116[14] = "KP_DOWN";

        $r116[15] = "navigateDown";

        $r116[16] = "ctrl DOWN";

        $r116[17] = "requestFocusForVisibleComponent";

        $r116[18] = "ctrl KP_DOWN";

        $r116[19] = "requestFocusForVisibleComponent";

        specialinvoke $r115.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r116);

        $r65[163] = $r115;

        $r65[164] = "JideTabbedPane.ancestorInputMap";

        $r117 = new javax.swing.UIDefaults$LazyInputMap;

        $r118 = newarray (java.lang.Object)[8];

        $r118[0] = "ctrl PAGE_DOWN";

        $r118[1] = "navigatePageDown";

        $r118[2] = "ctrl PAGE_UP";

        $r118[3] = "navigatePageUp";

        $r118[4] = "ctrl UP";

        $r118[5] = "requestFocus";

        $r118[6] = "ctrl KP_UP";

        $r118[7] = "requestFocus";

        specialinvoke $r117.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r118);

        $r65[165] = $r117;

        $r65[166] = "DockableFrame.activeTitleBackground2";

        $r65[167] = $r17;

        $r65[168] = "DockableFrame.activeTitleBackground";

        $r65[169] = $r15;

        $r65[170] = "Gripper.size";

        $r119 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r65[171] = $r119;

        $r65[172] = "Gripper.painter";

        $r65[173] = $r63;

        $r65[174] = "Resizable.resizeBorder";

        $r120 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r120.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r37);

        $r65[175] = $r120;

        $r65[176] = "ButtonPanel.order";

        $r65[177] = "ACO";

        $r65[178] = "ButtonPanel.oppositeOrder";

        $r65[179] = "H";

        $r65[180] = "ButtonPanel.buttonGap";

        $r121 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r65[181] = $r121;

        $r65[182] = "ButtonPanel.groupGap";

        $r122 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r65[183] = $r122;

        $r65[184] = "ButtonPanel.minButtonWidth";

        $r123 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(75);

        $r65[185] = $r123;

        $r65[186] = "JideSplitButton.font";

        $r65[187] = $r28;

        $r65[188] = "JideSplitButton.margin";

        $r124 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r124.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 7);

        $r65[189] = $r124;

        $r65[190] = "JideSplitButton.border";

        $r65[191] = $r64;

        $r65[192] = "JideSplitButton.borderPainted";

        $r125 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r65[193] = $r125;

        $r65[194] = "JideSplitButton.textIconGap";

        $r126 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r65[195] = $r126;

        $r65[196] = "JideSplitButton.selectionBackground";

        $r65[197] = $r61;

        $r65[198] = "JideSplitButton.selectionForeground";

        $r65[199] = $r1;

        $r65[200] = "JideSplitButton.focusInputMap";

        $r127 = new javax.swing.UIDefaults$LazyInputMap;

        $r128 = newarray (java.lang.Object)[12];

        $r128[0] = "SPACE";

        $r128[1] = "pressed";

        $r128[2] = "released SPACE";

        $r128[3] = "released";

        $r128[4] = "ENTER";

        $r128[5] = "pressed";

        $r128[6] = "released ENTER";

        $r128[7] = "released";

        $r128[8] = "DOWN";

        $r128[9] = "downPressed";

        $r128[10] = "released DOWN";

        $r128[11] = "downReleased";

        specialinvoke $r127.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r128);

        $r65[201] = $r127;

        $r65[202] = "Cursor.hsplit";

        $r129 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_h_split.gif");

        $r65[203] = $r129;

        $r65[204] = "Cursor.vsplit";

        $r130 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_v_split.gif");

        $r65[205] = $r130;

        $r65[206] = "Cursor.north";

        $r131 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_north.gif");

        $r65[207] = $r131;

        $r65[208] = "Cursor.south";

        $r132 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_south.gif");

        $r65[209] = $r132;

        $r65[210] = "Cursor.east";

        $r133 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_east.gif");

        $r65[211] = $r133;

        $r65[212] = "Cursor.west";

        $r134 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_west.gif");

        $r65[213] = $r134;

        $r65[214] = "Cursor.tab";

        $r135 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_tab.gif");

        $r65[215] = $r135;

        $r65[216] = "Cursor.float";

        $r136 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_float.gif");

        $r65[217] = $r136;

        $r65[218] = "Cursor.vertical";

        $r137 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_vertical.gif");

        $r65[219] = $r137;

        $r65[220] = "Cursor.horizontal";

        $r138 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_horizontal.gif");

        $r65[221] = $r138;

        $r65[222] = "Cursor.delete";

        $r139 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_delete.gif");

        $r65[223] = $r139;

        $r65[224] = "Cursor.drag";

        $r140 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag.gif");

        $r65[225] = $r140;

        $r65[226] = "Cursor.dragStop";

        $r141 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_stop.gif");

        $r65[227] = $r141;

        $r65[228] = "Cursor.dragText";

        $r142 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text.gif");

        $r65[229] = $r142;

        $r65[230] = "Cursor.dragTextStop";

        $r143 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text_stop.gif");

        $r65[231] = $r143;

        $r65[232] = "Cursor.percentage";

        $r144 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_percentage.gif");

        $r65[233] = $r144;

        $r65[234] = "Cursor.moveEast";

        $r145 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_east.gif");

        $r65[235] = $r145;

        $r65[236] = "Cursor.moveWest";

        $r146 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_west.gif");

        $r65[237] = $r146;

        $r65[238] = "HeaderBox.background";

        $r65[239] = $r3;

        $r65[240] = "Icon.floating";

        $r147 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r65[241] = $r147;

        $r65[242] = "JideScrollPane.border";

        $r148 = new javax.swing.plaf.BorderUIResource;

        $r149 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r148.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r149);

        $r65[243] = $r148;

        $r65[244] = "MenuBar.border";

        $r150 = new javax.swing.plaf.BorderUIResource;

        $r151 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        specialinvoke $r150.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r151);

        $r65[245] = $r150;

        $r65[246] = "TextArea.font";

        $r65[247] = $r28;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r65);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r210 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r211 = newarray (java.lang.String)[4];

        $r211[0] = "win.3d.lightColor";

        $r211[1] = "win.3d.highlightColor";

        $r211[2] = "win.3d.shadowColor";

        $r211[3] = "win.3d.darkShadowColor";

        $r212 = newarray (java.lang.Object)[4];

        $r213 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r212[0] = $r213;

        $r214 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r212[1] = $r214;

        $r215 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r212[2] = $r215;

        $r216 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r212[3] = $r216;

        $r217 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$6;

        specialinvoke $r217.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$6: void <init>()>();

        specialinvoke $r210.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r211, $r212, $r0, $r217);

        $r218 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r219 = newarray (java.lang.String)[4];

        $r219[0] = "win.3d.lightColor";

        $r219[1] = "win.3d.highlightColor";

        $r219[2] = "win.3d.shadowColor";

        $r219[3] = "win.3d.darkShadowColor";

        $r220 = newarray (java.lang.Object)[4];

        $r221 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r220[0] = $r221;

        $r222 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r220[1] = $r222;

        $r223 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r220[2] = $r223;

        $r224 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r220[3] = $r224;

        $r225 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$7;

        specialinvoke $r225.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$7: void <init>()>();

        specialinvoke $r218.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r219, $r220, $r0, $r225);

        $r226 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r227 = newarray (java.lang.String)[4];

        $r227[0] = "win.3d.lightColor";

        $r227[1] = "win.3d.highlightColor";

        $r227[2] = "win.3d.shadowColor";

        $r227[3] = "win.3d.darkShadowColor";

        $r228 = newarray (java.lang.Object)[4];

        $r229 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r228[0] = $r229;

        $r230 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r228[1] = $r230;

        $r231 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r228[2] = $r231;

        $r232 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r228[3] = $r232;

        $r233 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$8;

        specialinvoke $r233.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$8: void <init>()>();

        specialinvoke $r226.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r227, $r228, $r0, $r233);

        $r234 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r235 = newarray (java.lang.String)[4];

        $r235[0] = "win.3d.lightColor";

        $r235[1] = "win.3d.highlightColor";

        $r235[2] = "win.3d.shadowColor";

        $r235[3] = "win.3d.darkShadowColor";

        $r236 = newarray (java.lang.Object)[4];

        $r237 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r236[0] = $r237;

        $r238 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r236[1] = $r238;

        $r239 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r236[2] = $r239;

        $r240 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r236[3] = $r240;

        $r241 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$9;

        specialinvoke $r241.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$9: void <init>()>();

        specialinvoke $r234.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r235, $r236, $r0, $r241);

        $r242 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/eclipse/Eclipse3xWindowsUtils;", "icons/title_buttons_eclipse.gif");

        $r243 = newarray (java.lang.Object)[106];

        $r243[0] = "Workspace.background";

        $r243[1] = $r23;

        $r243[2] = "SidePane.margin";

        $r244 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r244.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 1, 1, 1);

        $r243[3] = $r244;

        $r243[4] = "SidePane.iconTextGap";

        $r245 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r243[5] = $r245;

        $r243[6] = "SidePane.textBorderGap";

        $r246 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r243[7] = $r246;

        $r243[8] = "SidePane.itemGap";

        $r247 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r243[9] = $r247;

        $r243[10] = "SidePane.groupGap";

        $r248 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r243[11] = $r248;

        $r243[12] = "SidePane.foreground";

        $r243[13] = $r11;

        $r243[14] = "SidePane.background";

        $r243[15] = $r3;

        $r243[16] = "SidePane.lineColor";

        $r243[17] = $r9;

        $r243[18] = "SidePane.buttonBackground";

        $r243[19] = $r3;

        $r243[20] = "SidePane.font";

        $r243[21] = $r28;

        $r243[22] = "SidePane.orientation";

        $r249 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r243[23] = $r249;

        $r243[24] = "SidePane.showSelectedTabText";

        $r250 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r243[25] = $r250;

        $r243[26] = "SidePane.alwaysShowTabText";

        $r251 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r243[27] = $r251;

        $r243[28] = "ContentContainer.background";

        $r243[29] = $r3;

        $r243[30] = "ContentContainer.vgap";

        $r252 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r243[31] = $r252;

        $r243[32] = "ContentContainer.hgap";

        $r253 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r243[33] = $r253;

        $r243[34] = "MainContainer.border";

        $r254 = new javax.swing.plaf.BorderUIResource;

        $r255 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r254.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r255);

        $r243[35] = $r254;

        $r243[36] = "DockableFrame.defaultIcon";

        $r256 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/dockableframe_blank.gif");

        $r243[37] = $r256;

        $r243[38] = "DockableFrame.background";

        $r243[39] = $r3;

        $r243[40] = "DockableFrame.border";

        $r257 = new javax.swing.plaf.BorderUIResource;

        $r258 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r257.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r258);

        $r243[41] = $r257;

        $r243[42] = "DockableFrame.floatingBorder";

        $r259 = new javax.swing.plaf.BorderUIResource;

        $r260 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r259.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r260);

        $r243[43] = $r259;

        $r243[44] = "DockableFrame.slidingEastBorder";

        $r243[45] = $r210;

        $r243[46] = "DockableFrame.slidingWestBorder";

        $r243[47] = $r218;

        $r243[48] = "DockableFrame.slidingNorthBorder";

        $r243[49] = $r226;

        $r243[50] = "DockableFrame.slidingSouthBorder";

        $r243[51] = $r234;

        $r243[52] = "DockableFrame.activeTitleForeground";

        $r243[53] = $r13;

        $r243[54] = "DockableFrame.inactiveTitleBackground";

        $r243[55] = $r21;

        $r243[56] = "DockableFrame.inactiveTitleForeground";

        $r243[57] = $r1;

        $r243[58] = "DockableFrame.activeTitleBorderColor";

        $r243[59] = $r15;

        $r243[60] = "DockableFrame.inactiveTitleBorderColor";

        $r243[61] = $r19;

        $r243[62] = "DockableFrame.titleBorder";

        $r261 = new javax.swing.plaf.BorderUIResource;

        $r262 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r261.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r262);

        $r243[63] = $r261;

        $r243[64] = "DockableFrame.font";

        $r243[65] = $r28;

        $r243[66] = "DockableFrameTitlePane.gripperPainter";

        $r243[67] = $r63;

        $r243[68] = "DockableFrameTitlePane.font";

        $r243[69] = $r28;

        $r243[70] = "DockableFrameTitlePane.hideIcon";

        $r263 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 0, 16, 16);

        $r243[71] = $r263;

        $r243[72] = "DockableFrameTitlePane.unfloatIcon";

        $r264 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 16, 16, 16);

        $r243[73] = $r264;

        $r243[74] = "DockableFrameTitlePane.floatIcon";

        $r265 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 32, 16, 16);

        $r243[75] = $r265;

        $r243[76] = "DockableFrameTitlePane.autohideIcon";

        $r266 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 48, 16, 16);

        $r243[77] = $r266;

        $r243[78] = "DockableFrameTitlePane.stopAutohideIcon";

        $r267 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 64, 16, 16);

        $r243[79] = $r267;

        $r243[80] = "DockableFrameTitlePane.hideAutohideIcon";

        $r268 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 80, 16, 16);

        $r243[81] = $r268;

        $r243[82] = "DockableFrameTitlePane.maximizeIcon";

        $r269 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 96, 16, 16);

        $r243[83] = $r269;

        $r243[84] = "DockableFrameTitlePane.restoreIcon";

        $r270 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r242, 0, 112, 16, 16);

        $r243[85] = $r270;

        $r243[86] = "DockableFrameTitlePane.titleBarComponent";

        $r271 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r243[87] = $r271;

        $r243[88] = "DockableFrameTitlePane.alwaysShowAllButtons";

        $r272 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r243[89] = $r272;

        $r243[90] = "DockableFrameTitlePane.buttonsAlignment";

        $r273 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r243[91] = $r273;

        $r243[92] = "DockableFrameTitlePane.titleAlignment";

        $r274 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r243[93] = $r274;

        $r243[94] = "DockableFrameTitlePane.buttonGap";

        $r275 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r243[95] = $r275;

        $r243[96] = "DockableFrameTitlePane.showIcon";

        $r276 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r243[97] = $r276;

        $r243[98] = "DockableFrameTitlePane.margin";

        $r277 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r277.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 6, 0, 0);

        $r243[99] = $r277;

        $r243[100] = "Contour.color";

        $r278 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r278.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(136, 136, 136);

        $r243[101] = $r278;

        $r243[102] = "Contour.thickness";

        $r279 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r243[103] = $r279;

        $r243[104] = "DockingFramework.changeCursor";

        $r280 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r243[105] = $r280;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r243);

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label2;

        $r186 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/eclipse/Eclipse3xWindowsUtils;", "icons/collapsible_pane_eclipse.gif");

        $r187 = newarray (java.lang.Object)[54];

        $r187[0] = "CollapsiblePanes.border";

        $r188 = new javax.swing.plaf.BorderUIResource;

        $r189 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(12, 12, 12, 12);

        specialinvoke $r188.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r189);

        $r187[1] = $r188;

        $r187[2] = "CollapsiblePanes.gap";

        $r190 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r187[3] = $r190;

        $r187[4] = "CollapsiblePane.background";

        $r187[5] = $r3;

        $r187[6] = "CollapsiblePane.contentBackground";

        $r187[7] = $r7;

        $r187[8] = "CollapsiblePane.foreground";

        $r187[9] = $r1;

        $r187[10] = "CollapsiblePane.emphasizedBackground";

        $r187[11] = $r15;

        $r187[12] = "CollapsiblePane.emphasizedForeground";

        $r187[13] = $r13;

        $r187[14] = "CollapsiblePane.border";

        $r191 = new javax.swing.plaf.BorderUIResource;

        $r192 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r191.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r192);

        $r187[15] = $r191;

        $r187[16] = "CollapsiblePane.font";

        $r187[17] = $r28;

        $r187[18] = "CollapsiblePane.contentBorder";

        $r193 = new javax.swing.plaf.BorderUIResource;

        $r194 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(8, 10, 8, 10);

        specialinvoke $r193.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r194);

        $r187[19] = $r193;

        $r187[20] = "CollapsiblePane.titleBorder";

        $r195 = new javax.swing.plaf.BorderUIResource;

        $r196 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        specialinvoke $r195.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r196);

        $r187[21] = $r195;

        $r187[22] = "CollapsiblePane.titleFont";

        $r187[23] = $r30;

        $r187[24] = "CollapsiblePane.downIcon";

        $r197 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r186, 0, 0, 11, 11);

        $r187[25] = $r197;

        $r187[26] = "CollapsiblePane.upIcon";

        $r198 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r186, 0, 11, 11, 11);

        $r187[27] = $r198;

        $r187[28] = "StatusBarItem.border";

        $r187[29] = $r38;

        $r187[30] = "StatusBar.border";

        $r199 = new javax.swing.plaf.BorderUIResource;

        $r200 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r199.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r200);

        $r187[31] = $r199;

        $r187[32] = "StatusBar.margin";

        $r201 = new java.awt.Insets;

        specialinvoke $r201.<java.awt.Insets: void <init>(int,int,int,int)>(2, 0, 0, 0);

        $r187[33] = $r201;

        $r187[34] = "StatusBar.gap";

        $r202 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r187[35] = $r202;

        $r187[36] = "StatusBar.background";

        $r187[37] = $r3;

        $r187[38] = "StatusBar.font";

        $r187[39] = $r28;

        $r187[40] = "MemoryStatusBarItem.fillColor";

        $r203 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r203.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(236, 233, 176);

        $r187[41] = $r203;

        $r187[42] = "DocumentPane.groupBorder";

        $r204 = new javax.swing.plaf.BorderUIResource;

        specialinvoke $r204.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r37);

        $r187[43] = $r204;

        $r187[44] = "DocumentPane.newHorizontalGroupIcon";

        $r205 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_horizontal_tab_group.png");

        $r187[45] = $r205;

        $r187[46] = "DocumentPane.newVerticalGroupIcon";

        $r206 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_vertical_tab_group.png");

        $r187[47] = $r206;

        $r187[48] = "DocumentPane.boldActiveTab";

        $r207 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r187[49] = $r207;

        $r187[50] = "OutlookTabbedPane.buttonStyle";

        $r208 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r187[51] = $r208;

        $r187[52] = "FloorTabbedPane.buttonStyle";

        $r209 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r187[53] = $r209;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r187);

     label2:
        $i3 = $i0 & 16;

        if $i3 == 0 goto label3;

        $r164 = newarray (java.lang.Object)[46];

        $r164[0] = "CommandBar.font";

        $r164[1] = $r29;

        $r164[2] = "CommandBar.background";

        $r164[3] = $r3;

        $r164[4] = "CommandBar.foreground";

        $r164[5] = $r1;

        $r164[6] = "CommandBar.shadow";

        $r164[7] = $r9;

        $r164[8] = "CommandBar.darkShadow";

        $r164[9] = $r11;

        $r164[10] = "CommandBar.light";

        $r164[11] = $r5;

        $r164[12] = "CommandBar.highlight";

        $r164[13] = $r7;

        $r164[14] = "CommandBar.border";

        $r165 = new javax.swing.plaf.BorderUIResource;

        $r166 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 1, 2, 1);

        specialinvoke $r165.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r166);

        $r164[15] = $r165;

        $r164[16] = "CommandBar.borderVert";

        $r167 = new javax.swing.plaf.BorderUIResource;

        $r168 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 1, 2, 1);

        specialinvoke $r167.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r168);

        $r164[17] = $r167;

        $r164[18] = "CommandBar.borderFloating";

        $r169 = new javax.swing.plaf.BorderUIResource;

        $r170 = virtualinvoke $r15.<com.jidesoft.plaf.WindowsDesktopProperty: java.lang.Object createValue(javax.swing.UIDefaults)>(r27);

        $r171 = (java.awt.Color) $r170;

        $r172 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r171, 2);

        $r173 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        $r174 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r172, $r173);

        specialinvoke $r169.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r174);

        $r164[19] = $r169;

        $r164[20] = "CommandBar.separatorSize";

        $r175 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r164[21] = $r175;

        $r164[22] = "CommandBar.ancestorInputMap";

        $r176 = new javax.swing.UIDefaults$LazyInputMap;

        $r177 = newarray (java.lang.Object)[16];

        $r177[0] = "UP";

        $r177[1] = "navigateUp";

        $r177[2] = "KP_UP";

        $r177[3] = "navigateUp";

        $r177[4] = "DOWN";

        $r177[5] = "navigateDown";

        $r177[6] = "KP_DOWN";

        $r177[7] = "navigateDown";

        $r177[8] = "LEFT";

        $r177[9] = "navigateLeft";

        $r177[10] = "KP_LEFT";

        $r177[11] = "navigateLeft";

        $r177[12] = "RIGHT";

        $r177[13] = "navigateRight";

        $r177[14] = "KP_RIGHT";

        $r177[15] = "navigateRight";

        specialinvoke $r176.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r177);

        $r164[23] = $r176;

        $r164[24] = "CommandBar.titleBarSize";

        $r178 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r164[25] = $r178;

        $r164[26] = "CommandBar.titleBarButtonGap";

        $r179 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r164[27] = $r179;

        $r164[28] = "CommandBar.titleBarBackground";

        $r164[29] = $r15;

        $r164[30] = "CommandBar.titleBarForeground";

        $r164[31] = $r13;

        $r164[32] = "CommandBar.titleBarFont";

        $r164[33] = $r30;

        $r164[34] = "CommandBar.minimumSize";

        $r180 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r180.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(20, 20);

        $r164[35] = $r180;

        $r164[36] = "CommandBar.separatorSize";

        $r181 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r181.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(5, 20);

        $r164[37] = $r181;

        $r164[38] = "CommandBarSeparator.background";

        $r182 = new java.awt.Color;

        specialinvoke $r182.<java.awt.Color: void <init>(int,int,int)>(219, 216, 209);

        $r164[39] = $r182;

        $r164[40] = "CommandBarSeparator.foreground";

        $r183 = new java.awt.Color;

        specialinvoke $r183.<java.awt.Color: void <init>(int,int,int)>(166, 166, 166);

        $r164[41] = $r183;

        $r164[42] = "Chevron.size";

        $r184 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r164[43] = $r184;

        $r164[44] = "Chevron.alwaysVisible";

        $r185 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r164[45] = $r185;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r164);

     label3:
        $i4 = $i0 & 4;

        if $i4 == 0 goto label4;

        $r159 = newarray (java.lang.Object)[6];

        $r159[0] = "AbstractComboBox.useJButton";

        $r160 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r159[1] = $r160;

        $r159[2] = "NestedTableHeader.cellBorder";

        $r161 = new com.jidesoft.plaf.vsnet.HeaderCellBorder;

        specialinvoke $r161.<com.jidesoft.plaf.vsnet.HeaderCellBorder: void <init>()>();

        $r159[3] = $r161;

        $r159[4] = "GroupList.ancestorInputMap";

        $r162 = new javax.swing.UIDefaults$LazyInputMap;

        $r163 = newarray (java.lang.Object)[4];

        $r163[0] = "TAB";

        $r163[1] = "selectNextGroup";

        $r163[2] = "shift TAB";

        $r163[3] = "selectPreviousGroup";

        specialinvoke $r162.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r163);

        $r159[5] = $r162;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r159);

     label4:
        $i5 = $i0 & 16384;

        if $i5 == 0 goto label5;

        $r154 = newarray (java.lang.Object)[8];

        $r154[0] = "DiffMerge.changed";

        $r155 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r155.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 196, 255);

        $r154[1] = $r155;

        $r154[2] = "DiffMerge.deleted";

        $r156 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r156.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(200, 200, 200);

        $r154[3] = $r156;

        $r154[4] = "DiffMerge.inserted";

        $r157 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r157.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 255, 196);

        $r154[5] = $r157;

        $r154[6] = "DiffMerge.conflicted";

        $r158 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r158.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 153, 153);

        $r154[7] = $r158;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r154);

     label5:
        $z0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean shouldUseSystemFont()>();

        if $z0 != 0 goto label6;

        $r153 = newarray (java.lang.Object)[28];

        $r153[0] = "TabbedPane.font";

        $r153[1] = $r28;

        $r153[2] = "TitledBorder.font";

        $r153[3] = $r28;

        $r153[4] = "TableHeader.font";

        $r153[5] = $r28;

        $r153[6] = "Table.font";

        $r153[7] = $r28;

        $r153[8] = "List.font";

        $r153[9] = $r28;

        $r153[10] = "Tree.font";

        $r153[11] = $r28;

        $r153[12] = "ToolTip.font";

        $r153[13] = $r28;

        $r153[14] = "CheckBox.font";

        $r153[15] = $r28;

        $r153[16] = "RadioButton.font";

        $r153[17] = $r28;

        $r153[18] = "Label.font";

        $r153[19] = $r28;

        $r153[20] = "Panel.font";

        $r153[21] = $r28;

        $r153[22] = "TextField.font";

        $r153[23] = $r28;

        $r153[24] = "ComboBox.font";

        $r153[25] = $r28;

        $r153[26] = "Button.font";

        $r153[27] = $r28;

        virtualinvoke r27.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r153);

     label6:
        $r152 = staticinvoke <com.jidesoft.plaf.eclipse.EclipsePainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r27, "Theme.painter", $r152);

        return;
    }

    public static void initComponentDefaultsWithMenu(javax.swing.UIDefaults)
    {
        java.awt.Color $r25, $r31;
        java.lang.Integer $r41, $r46, $r47, $r48;
        javax.swing.border.Border $r26, $r32, $r35, $r37, $r39;
        boolean $z0;
        javax.swing.UIDefaults r1;
        com.jidesoft.plaf.eclipse.EclipseWindowsUtils$10 $r19;
        com.jidesoft.icons.MenuCheckIcon $r22, $r28, $r42, $r44;
        com.jidesoft.plaf.WindowsDesktopProperty $r2, $r4, $r6, $r8, $r10;
        javax.swing.plaf.InsetsUIResource $r27, $r33, $r40, $r49;
        java.awt.Toolkit $r0;
        java.lang.Object[] $r14, $r21;
        javax.swing.plaf.BorderUIResource $r24, $r30, $r34, $r36, $r38;
        java.lang.String[] $r13;
        javax.swing.ImageIcon $r23, $r29, $r43, $r45;
        com.jidesoft.plaf.ExtWindowsDesktopProperty $r12;
        java.lang.Object $r3, $r5, $r7, $r9, $r11, $r15, $r16, $r17, $r18, $r20;

        r1 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r1);

        $z0 = staticinvoke <java.beans.Beans: boolean isDesignTime()>();

        if $z0 != 0 goto label1;

        $r2 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        specialinvoke $r2.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.lightColor", $r3, $r0);

        $r4 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        specialinvoke $r4.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.highlightColor", $r5, $r0);

        $r6 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlightText");

        specialinvoke $r6.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.item.highlightTextColor", $r7, $r0);

        $r8 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r8.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.item.highlightColor", $r9, $r0);

        $r10 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r11 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r10.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.shadowColor", $r11, $r0);

        $r12 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r13 = newarray (java.lang.String)[4];

        $r13[0] = "win.3d.lightColor";

        $r13[1] = "win.3d.highlightColor";

        $r13[2] = "win.3d.shadowColor";

        $r13[3] = "win.3d.darkShadowColor";

        $r14 = newarray (java.lang.Object)[4];

        $r15 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r14[0] = $r15;

        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r14[1] = $r16;

        $r17 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r14[2] = $r17;

        $r18 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r14[3] = $r18;

        $r19 = new com.jidesoft.plaf.eclipse.EclipseWindowsUtils$10;

        specialinvoke $r19.<com.jidesoft.plaf.eclipse.EclipseWindowsUtils$10: void <init>()>();

        specialinvoke $r12.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r13, $r14, $r0, $r19);

        $r20 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r1);

        $r21 = newarray (java.lang.Object)[88];

        $r21[0] = "PopupMenuSeparator.foreground";

        $r21[1] = $r4;

        $r21[2] = "PopupMenuSeparator.background";

        $r21[3] = $r10;

        $r21[4] = "CheckBoxMenuItem.checkIcon";

        $r22 = new com.jidesoft.icons.MenuCheckIcon;

        $r23 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_eclipse.gif");

        specialinvoke $r22.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r23);

        $r21[5] = $r22;

        $r21[6] = "CheckBoxMenuItem.selectionBackground";

        $r21[7] = $r8;

        $r21[8] = "CheckBoxMenuItem.selectionForeground";

        $r21[9] = $r6;

        $r21[10] = "CheckBoxMenuItem.acceleratorSelectionForeground";

        $r21[11] = $r6;

        $r21[12] = "CheckBoxMenuItem.mouseHoverBackground";

        $r21[13] = $r4;

        $r21[14] = "CheckBoxMenuItem.mouseHoverBorder";

        $r24 = new javax.swing.plaf.BorderUIResource;

        $r25 = new java.awt.Color;

        specialinvoke $r25.<java.awt.Color: void <init>(int,int,int)>(10, 36, 106);

        $r26 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r25);

        specialinvoke $r24.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r26);

        $r21[15] = $r24;

        $r21[16] = "CheckBoxMenuItem.margin";

        $r27 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r27.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r21[17] = $r27;

        $r21[18] = "CheckBoxMenuItem.font";

        $r21[19] = $r20;

        $r21[20] = "CheckBoxMenuItem.acceleratorFont";

        $r21[21] = $r20;

        $r21[22] = "RadioButtonMenuItem.checkIcon";

        $r28 = new com.jidesoft.icons.MenuCheckIcon;

        $r29 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_radiobutton_eclipse.gif");

        specialinvoke $r28.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r29);

        $r21[23] = $r28;

        $r21[24] = "RadioButtonMenuItem.selectionBackground";

        $r21[25] = $r8;

        $r21[26] = "RadioButtonMenuItem.selectionForeground";

        $r21[27] = $r6;

        $r21[28] = "RadioButtonMenuItem.acceleratorSelectionForeground";

        $r21[29] = $r6;

        $r21[30] = "RadioButtonMenuItem.mouseHoverBackground";

        $r21[31] = $r4;

        $r21[32] = "RadioButtonMenuItem.mouseHoverBorder";

        $r30 = new javax.swing.plaf.BorderUIResource;

        $r31 = new java.awt.Color;

        specialinvoke $r31.<java.awt.Color: void <init>(int,int,int)>(10, 36, 106);

        $r32 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r31);

        specialinvoke $r30.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r32);

        $r21[33] = $r30;

        $r21[34] = "RadioButtonMenuItem.margin";

        $r33 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r33.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r21[35] = $r33;

        $r21[36] = "RadioButtonMenuItem.font";

        $r21[37] = $r20;

        $r21[38] = "RadioButtonMenuItem.acceleratorFont";

        $r21[39] = $r20;

        $r21[40] = "MenuBar.border";

        $r34 = new javax.swing.plaf.BorderUIResource;

        $r35 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 4, 2);

        specialinvoke $r34.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r35);

        $r21[41] = $r34;

        $r21[42] = "Menu.selectionBackground";

        $r21[43] = $r8;

        $r21[44] = "Menu.selectionForeground";

        $r21[45] = $r6;

        $r21[46] = "Menu.mouseHoverBackground";

        $r21[47] = $r8;

        $r21[48] = "Menu.mouseHoverBorder";

        $r36 = new javax.swing.plaf.BorderUIResource;

        $r37 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r36.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r37);

        $r21[49] = $r36;

        $r21[50] = "Menu.mouseSelectedBorder";

        $r38 = new javax.swing.plaf.BorderUIResource;

        $r39 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r38.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r39);

        $r21[51] = $r38;

        $r21[52] = "Menu.margin";

        $r40 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r40.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(4, 6, 2, 6);

        $r21[53] = $r40;

        $r21[54] = "Menu.textIconGap";

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r21[55] = $r41;

        $r21[56] = "Menu.checkIcon";

        $r42 = new com.jidesoft.icons.MenuCheckIcon;

        $r43 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r42.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r43);

        $r21[57] = $r42;

        $r21[58] = "Menu.font";

        $r21[59] = $r20;

        $r21[60] = "Menu.acceleratorFont";

        $r21[61] = $r20;

        $r21[62] = "PopupMenu.border";

        $r21[63] = $r12;

        $r21[64] = "MenuItem.checkIcon";

        $r44 = new com.jidesoft.icons.MenuCheckIcon;

        $r45 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r44.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r45);

        $r21[65] = $r44;

        $r21[66] = "MenuItem.selectionBackground";

        $r21[67] = $r8;

        $r21[68] = "MenuItem.selectionForeground";

        $r21[69] = $r6;

        $r21[70] = "MenuItem.acceleratorSelectionForeground";

        $r21[71] = $r6;

        $r21[72] = "MenuItem.selectionBorderColor";

        $r21[73] = $r8;

        $r21[74] = "MenuItem.shadowWidth";

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r21[75] = $r46;

        $r21[76] = "MenuItem.shadowColor";

        $r21[77] = $r2;

        $r21[78] = "MenuItem.textIconGap";

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r21[79] = $r47;

        $r21[80] = "MenuItem.accelEndGap";

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r21[81] = $r48;

        $r21[82] = "MenuItem.margin";

        $r49 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r49.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r21[83] = $r49;

        $r21[84] = "MenuItem.font";

        $r21[85] = $r20;

        $r21[86] = "MenuItem.acceleratorFont";

        $r21[87] = $r20;

        virtualinvoke r1.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r21);

     label1:
        return;
    }
}
