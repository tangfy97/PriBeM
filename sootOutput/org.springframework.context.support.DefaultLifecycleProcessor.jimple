public class org.springframework.context.support.DefaultLifecycleProcessor extends java.lang.Object implements org.springframework.context.LifecycleProcessor, org.springframework.beans.factory.BeanFactoryAware
{
    private final org.apache.commons.logging.Log logger;
    private volatile long timeoutPerShutdownPhase;
    private volatile boolean running;
    private volatile org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory;

    public void <init>()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger> = $r2;

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: long timeoutPerShutdownPhase> = 30000L;

        return;
    }

    public void setTimeoutPerShutdownPhase(long)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        long l0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        l0 := @parameter0: long;

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: long timeoutPerShutdownPhase> = l0;

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r1;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r2;
        org.springframework.beans.factory.BeanFactory r0;

        r1 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        staticinvoke <org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object)>(class "Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;", r0);

        $r2 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) r0;

        r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory> = $r2;

        return;
    }

    public void start()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void startBeans(boolean)>(0);

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: boolean running> = 1;

        return;
    }

    public void stop()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void stopBeans()>();

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: boolean running> = 0;

        return;
    }

    public void onRefresh()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void startBeans(boolean)>(1);

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: boolean running> = 1;

        return;
    }

    public void onClose()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void stopBeans()>();

        r0.<org.springframework.context.support.DefaultLifecycleProcessor: boolean running> = 0;

        return;
    }

    public boolean isRunning()
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        $z0 = r0.<org.springframework.context.support.DefaultLifecycleProcessor: boolean running>;

        return $z0;
    }

    private void startBeans(boolean)
    {
        java.lang.Integer $r7, $r12, r25;
        org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup $r11, $r14, $r21, r24;
        java.util.Map $r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r17;
        java.util.Set $r3, $r16;
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        java.util.HashMap $r2;
        long $l1;
        java.util.ArrayList $r15;
        int $i0, $i2;
        java.lang.String $r10;
        java.util.Map$Entry r22;
        java.util.Iterator $r4, $r18;
        org.springframework.context.SmartLifecycle $r13;
        org.springframework.context.Lifecycle r23;
        java.lang.Object $r5, $r6, $r8, $r9, $r19, $r20;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (org.springframework.context.Lifecycle) $r6;

        if z0 == 0 goto label2;

        $z1 = r23 instanceof org.springframework.context.SmartLifecycle;

        if $z1 == 0 goto label4;

        $r13 = (org.springframework.context.SmartLifecycle) r23;

        $z2 = interfaceinvoke $r13.<org.springframework.context.SmartLifecycle: boolean isAutoStartup()>();

        if $z2 == 0 goto label4;

     label2:
        $i0 = virtualinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: int getPhase(org.springframework.context.Lifecycle)>(r23);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r14 = (org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup) $r8;

        r24 = $r14;

        if $r14 != null goto label3;

        $r11 = new org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup;

        $l1 = r0.<org.springframework.context.support.DefaultLifecycleProcessor: long timeoutPerShutdownPhase>;

        specialinvoke $r11.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,int,long,java.util.Map)>(r0, $i0, $l1, $r1);

        r24 = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r11);

     label3:
        $r9 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r24.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void add(java.lang.String,org.springframework.context.Lifecycle)>($r10, r23);

     label4:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label1;

        $i2 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i2 <= 0 goto label7;

        $r15 = new java.util.ArrayList;

        $r16 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r17 = (java.util.Collection) $r16;

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r17);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r15);

        $r18 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.Integer) $r19;

        $r20 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        $r21 = (org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup) $r20;

        virtualinvoke $r21.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void start()>();

     label6:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label5;

     label7:
        return;
    }

    private void doStart(java.util.Map, java.lang.String)
    {
        org.springframework.context.ApplicationContextException $r23;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r5;
        java.util.Map r0;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.context.support.DefaultLifecycleProcessor r4;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r16, $r17, $r19, $r20, $r24, $r25, $r26;
        java.lang.Throwable $r22;
        java.lang.String[] $r6;
        int i0, i1;
        java.lang.String r1, $r13, $r21, $r27, r28;
        org.springframework.context.Lifecycle r3;
        java.lang.Object $r2;
        org.apache.commons.logging.Log $r7, $r8, $r10, $r15;
        java.lang.Class $r18;

        r4 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (org.springframework.context.Lifecycle) $r2;

        if r3 == null goto label7;

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label7;

        $r5 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r6 = interfaceinvoke $r5.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.String[] getDependenciesForBean(java.lang.String)>(r1);

        i0 = lengthof $r6;

        i1 = 0;

        goto label2;

     label1:
        r28 = $r6[i1];

        specialinvoke r4.<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>(r0, r28);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        $z1 = interfaceinvoke r3.<org.springframework.context.Lifecycle: boolean isRunning()>();

        if $z1 != 0 goto label7;

        $r7 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label3;

        $r15 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Starting bean \'");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of type [");

        $r18 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label3:
        interfaceinvoke r3.<org.springframework.context.Lifecycle: void start()>();

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        $r23 = new org.springframework.context.ApplicationContextException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to start bean \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.springframework.context.ApplicationContextException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r22);

        throw $r23;

     label6:
        $r8 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label7;

        $r10 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Successfully started bean \'");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void stopBeans()
    {
        java.util.HashMap $r2;
        long $l1;
        java.lang.Integer $r7, $r12, r24;
        org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup $r11, $r20, r23;
        java.util.ArrayList $r13;
        java.util.Map $r1;
        int $i0, $i2;
        java.lang.String $r10;
        boolean $z0, $z1;
        java.util.Map$Entry r21;
        java.util.Iterator $r4, $r17;
        java.util.Collection $r15;
        java.util.Set $r3, $r14;
        org.springframework.context.Lifecycle r22;
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        java.lang.Object $r5, $r6, $r8, $r9, $r18, $r19;
        java.util.Comparator $r16;

        r0 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        $r1 = virtualinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (org.springframework.context.Lifecycle) $r6;

        $i0 = virtualinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: int getPhase(org.springframework.context.Lifecycle)>(r22);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r23 = (org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup) $r8;

        if r23 != null goto label2;

        $r11 = new org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup;

        $l1 = r0.<org.springframework.context.support.DefaultLifecycleProcessor: long timeoutPerShutdownPhase>;

        specialinvoke $r11.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,int,long,java.util.Map)>(r0, $i0, $l1, $r1);

        r23 = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r11);

     label2:
        $r9 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r23.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void add(java.lang.String,org.springframework.context.Lifecycle)>($r10, r22);

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $i2 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i2 <= 0 goto label6;

        $r13 = new java.util.ArrayList;

        $r14 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r15 = (java.util.Collection) $r14;

        specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r15);

        $r16 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r13, $r16);

        $r17 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.Integer) $r18;

        $r19 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        $r20 = (org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup) $r19;

        virtualinvoke $r20.<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void stop()>();

     label5:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

     label6:
        return;
    }

    private void doStop(java.util.Map, java.lang.String, java.util.concurrent.CountDownLatch, java.util.Set)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r5;
        java.util.Map r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set r8;
        org.springframework.context.support.DefaultLifecycleProcessor$1 $r25;
        org.springframework.context.support.DefaultLifecycleProcessor r4;
        java.util.concurrent.CountDownLatch r7;
        java.lang.StringBuilder $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r22, $r27, $r29, $r30, $r32, $r33, $r37, $r39, $r40;
        java.lang.Throwable $r35;
        java.lang.String[] $r6;
        int i0, i1;
        java.lang.String r1, $r15, $r23, $r34, $r41, r42;
        org.springframework.context.Lifecycle r3;
        org.springframework.context.SmartLifecycle $r26;
        java.lang.Object $r2;
        org.apache.commons.logging.Log $r9, $r10, $r12, $r17, $r24, $r28, $r36, $r38;
        java.lang.Class $r20, $r31;

        r4 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.util.concurrent.CountDownLatch;

        r8 := @parameter3: java.util.Set;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (org.springframework.context.Lifecycle) $r2;

        if r3 == null goto label10;

        $r5 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r6 = interfaceinvoke $r5.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.String[] getDependentBeans(java.lang.String)>(r1);

        i0 = lengthof $r6;

        i1 = 0;

        goto label02;

     label01:
        r42 = $r6[i1];

        specialinvoke r4.<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>(r0, r42, r7, r8);

        i1 = i1 + 1;

     label02:
        if i1 < i0 goto label01;

     label03:
        $z0 = interfaceinvoke r3.<org.springframework.context.Lifecycle: boolean isRunning()>();

        if $z0 == 0 goto label07;

        $z2 = r3 instanceof org.springframework.context.SmartLifecycle;

        if $z2 == 0 goto label05;

        $r24 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z5 = interfaceinvoke $r24.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label04;

        $r28 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Asking bean \'");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of type [");

        $r31 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to stop");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r34);

     label04:
        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r26 = (org.springframework.context.SmartLifecycle) r3;

        $r25 = new org.springframework.context.support.DefaultLifecycleProcessor$1;

        specialinvoke $r25.<org.springframework.context.support.DefaultLifecycleProcessor$1: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,java.util.concurrent.CountDownLatch,java.util.Set,java.lang.String)>(r4, r7, r8, r1);

        interfaceinvoke $r26.<org.springframework.context.SmartLifecycle: void stop(java.lang.Runnable)>($r25);

        goto label10;

     label05:
        $r9 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label06;

        $r17 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Stopping bean \'");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of type [");

        $r20 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

     label06:
        interfaceinvoke r3.<org.springframework.context.Lifecycle: void stop()>();

        $r10 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label10;

        $r12 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Successfully stopped bean \'");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

        goto label10;

     label07:
        $z1 = r3 instanceof org.springframework.context.SmartLifecycle;

        if $z1 == 0 goto label10;

        virtualinvoke r7.<java.util.concurrent.CountDownLatch: void countDown()>();

     label08:
        goto label10;

     label09:
        $r35 := @caughtexception;

        $r36 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $z6 = interfaceinvoke $r36.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z6 == 0 goto label10;

        $r38 = r4.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to stop bean \'");

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r41, $r35);

     label10:
        return;

        catch java.lang.Throwable from label03 to label08 with label09;
    }

    protected java.util.Map getLifecycleBeans()
    {
        java.lang.String[] $r3;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r2, $r6, $r8, $r9, $r12, $r18;
        java.util.LinkedHashMap $r0;
        int i0, i1;
        java.lang.String r4, $r5, r7, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.context.Lifecycle $r20;
        org.springframework.context.support.DefaultLifecycleProcessor r1;
        java.lang.Class $r10, $r11, $r13, $r14;
        java.lang.StringBuilder $r15, $r16;
        java.lang.Object $r19;

        r1 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r3 = interfaceinvoke $r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>(class "Lorg/springframework/context/Lifecycle;", 0, 0);

        i0 = lengthof $r3;

        i1 = 0;

        goto label7;

     label1:
        r4 = $r3[i1];

        $r5 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>(r4);

        $r6 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $z0 = interfaceinvoke $r6.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean isFactoryBean(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r17 = r4;

     label3:
        r7 = $r17;

        $r8 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $z1 = interfaceinvoke $r8.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsSingleton(java.lang.String)>($r5);

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label5;

        $r13 = class "Lorg/springframework/context/Lifecycle;";

        $r12 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r14 = interfaceinvoke $r12.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Class getType(java.lang.String)>($r17);

        $z3 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z3 != 0 goto label5;

     label4:
        $r10 = class "Lorg/springframework/context/SmartLifecycle;";

        $r9 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r11 = interfaceinvoke $r9.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Class getType(java.lang.String)>(r7);

        $z2 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        if $z2 == 0 goto label6;

     label5:
        $r18 = r1.<org.springframework.context.support.DefaultLifecycleProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r19 = interfaceinvoke $r18.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r7, class "Lorg/springframework/context/Lifecycle;");

        $r20 = (org.springframework.context.Lifecycle) $r19;

        if $r20 == r1 goto label6;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r20);

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label1;

        return $r0;
    }

    protected int getPhase(org.springframework.context.Lifecycle)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r2;
        int $i0;
        org.springframework.context.Phased $r1;
        org.springframework.context.Lifecycle r0;
        boolean $z0;

        r2 := @this: org.springframework.context.support.DefaultLifecycleProcessor;

        r0 := @parameter0: org.springframework.context.Lifecycle;

        $z0 = r0 instanceof org.springframework.context.Phased;

        if $z0 == 0 goto label1;

        $r1 = (org.springframework.context.Phased) r0;

        $i0 = interfaceinvoke $r1.<org.springframework.context.Phased: int getPhase()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    static org.apache.commons.logging.Log access$0(org.springframework.context.support.DefaultLifecycleProcessor)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        org.apache.commons.logging.Log $r1;

        r0 := @parameter0: org.springframework.context.support.DefaultLifecycleProcessor;

        $r1 = r0.<org.springframework.context.support.DefaultLifecycleProcessor: org.apache.commons.logging.Log logger>;

        return $r1;
    }

    static void access$1(org.springframework.context.support.DefaultLifecycleProcessor, java.util.Map, java.lang.String)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        java.lang.String r2;
        java.util.Map r1;

        r0 := @parameter0: org.springframework.context.support.DefaultLifecycleProcessor;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>(r1, r2);

        return;
    }

    static void access$2(org.springframework.context.support.DefaultLifecycleProcessor, java.util.Map, java.lang.String, java.util.concurrent.CountDownLatch, java.util.Set)
    {
        org.springframework.context.support.DefaultLifecycleProcessor r0;
        java.util.concurrent.CountDownLatch r3;
        java.util.Map r1;
        java.util.Set r4;
        java.lang.String r2;

        r0 := @parameter0: org.springframework.context.support.DefaultLifecycleProcessor;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.concurrent.CountDownLatch;

        r4 := @parameter4: java.util.Set;

        specialinvoke r0.<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>(r1, r2, r3, r4);

        return;
    }
}
