public final class com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    protected final java.util.List movedKeys;
    int index;
    final int initialChanges;
    final com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container;
    final com.hp.hpl.jena.mem.HashCommon this$0;

    protected void <init>(com.hp.hpl.jena.mem.HashCommon, int, com.hp.hpl.jena.mem.HashCommon$NotifyEmpty, java.util.List)
    {
        com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator r0;
        java.util.List r2;
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty r3;
        int i0;
        com.hp.hpl.jena.mem.HashCommon r1;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator;

        r1 := @parameter0: com.hp.hpl.jena.mem.HashCommon;

        i0 := @parameter1: int;

        r3 := @parameter2: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty;

        r2 := @parameter3: java.util.List;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index> = 0;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: java.util.List movedKeys> = r2;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int initialChanges> = i0;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container> = r3;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator r0;
        java.lang.Object[] $r5;
        com.hp.hpl.jena.mem.HashCommon $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.lang.Object $r6;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label1:
        $i3 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i2 = $r2.<com.hp.hpl.jena.mem.HashCommon: int capacity>;

        if $i3 >= $i2 goto label2;

        $r4 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $r5 = $r4.<com.hp.hpl.jena.mem.HashCommon: java.lang.Object[] keys>;

        $i6 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $r6 = $r5[$i6];

        if $r6 != null goto label2;

        $i7 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $i8 = $i7 + 1;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index> = $i8;

        goto label1;

     label2:
        $i5 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $r3 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i4 = $r3.<com.hp.hpl.jena.mem.HashCommon: int capacity>;

        if $i5 >= $i4 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator r0;
        java.lang.Object[] $r3;
        com.hp.hpl.jena.mem.HashCommon $r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.util.ConcurrentModificationException $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: java.lang.Object noElements(java.lang.String)>("HashCommon keys");

     label2:
        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $r3 = $r2.<com.hp.hpl.jena.mem.HashCommon: java.lang.Object[] keys>;

        $i2 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index> = $i3;

        $r4 = $r3[$i2];

        return $r4;
    }

    public void remove()
    {
        com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator r0;
        com.hp.hpl.jena.mem.HashCommon $r1, $r2, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.hp.hpl.jena.shared.BrokenException $r7;
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty $r8;
        java.util.List $r9;
        java.lang.Object $r3;
        java.util.ConcurrentModificationException $r10;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r10 = new java.util.ConcurrentModificationException;

        specialinvoke $r10.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r10;

     label1:
        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i2 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: int index>;

        $i3 = $i2 - 1;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.mem.HashCommon: java.lang.Object removeFrom(int)>($i3);

        if $r3 == null goto label2;

        $r9 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: java.util.List movedKeys>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $r4 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i4 = $r4.<com.hp.hpl.jena.mem.HashCommon: int size>;

        if $i4 != 0 goto label3;

        $r8 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container>;

        interfaceinvoke $r8.<com.hp.hpl.jena.mem.HashCommon$NotifyEmpty: void emptied()>();

     label3:
        $r5 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i5 = $r5.<com.hp.hpl.jena.mem.HashCommon: int size>;

        if $i5 >= 0 goto label4;

        $r7 = new com.hp.hpl.jena.shared.BrokenException;

        specialinvoke $r7.<com.hp.hpl.jena.shared.BrokenException: void <init>(java.lang.String)>("BROKEN");

        throw $r7;

     label4:
        $r6 = r0.<com.hp.hpl.jena.mem.HashCommon$BasicKeyIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        virtualinvoke $r6.<com.hp.hpl.jena.mem.HashCommon: void showkeys()>();

        return;
    }
}
