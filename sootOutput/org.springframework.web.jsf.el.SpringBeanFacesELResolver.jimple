public class org.springframework.web.jsf.el.SpringBeanFacesELResolver extends org.springframework.beans.factory.access.el.SpringBeanELResolver
{

    public void <init>()
    {
        org.springframework.web.jsf.el.SpringBeanFacesELResolver r0;

        r0 := @this: org.springframework.web.jsf.el.SpringBeanFacesELResolver;

        specialinvoke r0.<org.springframework.beans.factory.access.el.SpringBeanELResolver: void <init>()>();

        return;
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory(javax.el.ELContext)
    {
        org.springframework.web.jsf.el.SpringBeanFacesELResolver r0;
        org.springframework.web.context.WebApplicationContext $r2;
        javax.el.ELContext r1;

        r0 := @this: org.springframework.web.jsf.el.SpringBeanFacesELResolver;

        r1 := @parameter0: javax.el.ELContext;

        $r2 = virtualinvoke r0.<org.springframework.web.jsf.el.SpringBeanFacesELResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)>(r1);

        return $r2;
    }

    protected org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)
    {
        org.springframework.web.jsf.el.SpringBeanFacesELResolver r2;
        javax.faces.context.FacesContext $r0;
        org.springframework.web.context.WebApplicationContext $r1;
        javax.el.ELContext r3;

        r2 := @this: org.springframework.web.jsf.el.SpringBeanFacesELResolver;

        r3 := @parameter0: javax.el.ELContext;

        $r0 = staticinvoke <javax.faces.context.FacesContext: javax.faces.context.FacesContext getCurrentInstance()>();

        $r1 = staticinvoke <org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.faces.context.FacesContext)>($r0);

        return $r1;
    }
}
