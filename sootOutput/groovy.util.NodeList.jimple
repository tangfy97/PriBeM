public class groovy.util.NodeList extends java.util.ArrayList
{
    static java.lang.Class class$groovy$util$NodeList;

    public void <init>()
    {
        groovy.util.NodeList r0;

        r0 := @this: groovy.util.NodeList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }

    public void <init>(java.util.Collection)
    {
        groovy.util.NodeList r0;
        java.util.Collection r1;

        r0 := @this: groovy.util.NodeList;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        groovy.util.NodeList r0;

        r0 := @this: groovy.util.NodeList;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        return;
    }

    private static void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.util.NodeList$1 $r0;
        groovy.lang.MetaClass r1;
        groovy.lang.MetaClassRegistry $r2;
        java.lang.Class $r3, $r4;

        r1 := @parameter0: groovy.lang.MetaClass;

        $r0 = new groovy.util.NodeList$1;

        specialinvoke $r0.<groovy.util.NodeList$1: void <init>(groovy.lang.MetaClass)>(r1);

        $r2 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $r3 = <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <groovy.util.NodeList: java.lang.Class class$(java.lang.String)>("groovy.util.NodeList");

        <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList>;

     label2:
        interfaceinvoke $r2.<groovy.lang.MetaClassRegistry: void setMetaClass(java.lang.Class,groovy.lang.MetaClass)>($r4, $r0);

        return;
    }

    public groovy.util.NodeList getAt(java.lang.String)
    {
        groovy.util.NodeList $r0, r1;
        java.util.Iterator $r2;
        java.util.Collection $r7;
        groovy.util.Node r4;
        java.lang.Object $r3, $r6;
        java.lang.String r5;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.util.NodeList;

        r5 := @parameter0: java.lang.String;

        $r0 = new groovy.util.NodeList;

        specialinvoke $r0.<groovy.util.NodeList: void <init>()>();

        $r2 = virtualinvoke r1.<groovy.util.NodeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof groovy.util.Node;

        if $z1 == 0 goto label3;

        r4 = (groovy.util.Node) $r3;

        $r6 = virtualinvoke r4.<groovy.util.Node: java.lang.Object get(java.lang.String)>(r5);

        $z2 = $r6 instanceof java.util.Collection;

        if $z2 == 0 goto label2;

        $r7 = (java.util.Collection) $r6;

        virtualinvoke $r0.<groovy.util.NodeList: boolean addAll(java.util.Collection)>($r7);

        goto label3;

     label2:
        virtualinvoke $r0.<groovy.util.NodeList: boolean add(java.lang.Object)>($r6);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public groovy.util.NodeList getAt(groovy.xml.QName)
    {
        groovy.util.NodeList $r0, r1, $r6;
        java.util.Iterator $r2;
        groovy.util.Node r4;
        java.lang.Object $r3;
        groovy.xml.QName r5;
        boolean $z0, $z1;

        r1 := @this: groovy.util.NodeList;

        r5 := @parameter0: groovy.xml.QName;

        $r0 = new groovy.util.NodeList;

        specialinvoke $r0.<groovy.util.NodeList: void <init>()>();

        $r2 = virtualinvoke r1.<groovy.util.NodeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof groovy.util.Node;

        if $z1 == 0 goto label2;

        r4 = (groovy.util.Node) $r3;

        $r6 = virtualinvoke r4.<groovy.util.Node: groovy.util.NodeList getAt(groovy.xml.QName)>(r5);

        virtualinvoke $r0.<groovy.util.NodeList: boolean addAll(java.util.Collection)>($r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.lang.String text()
    {
        groovy.util.NodeList r0;
        java.util.Iterator $r1;
        groovy.util.Node $r5;
        java.lang.StringBuffer $r4, r7;
        java.lang.Object $r3;
        java.lang.String $r2, r6, r8;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.util.NodeList;

        r6 = null;

        r7 = null;

        $r1 = virtualinvoke r0.<groovy.util.NodeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r8 = null;

        $z1 = $r3 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        r8 = (java.lang.String) $r3;

        goto label3;

     label2:
        $z2 = $r3 instanceof groovy.util.Node;

        if $z2 == 0 goto label3;

        $r5 = (groovy.util.Node) $r3;

        r8 = virtualinvoke $r5.<groovy.util.Node: java.lang.String text()>();

     label3:
        if r8 == null goto label6;

        if r6 != null goto label4;

        r6 = r8;

        goto label6;

     label4:
        if r7 != null goto label5;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r7 = $r4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

     label5:
        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

     label6:
        goto label1;

     label7:
        if r7 == null goto label8;

        $r2 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label8:
        if r6 == null goto label9;

        return r6;

     label9:
        return "";
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        groovy.lang.MetaClass $r2;
        groovy.lang.MetaClassRegistry $r0;
        java.lang.Class $r1, $r3;

        $r0 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $r1 = <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <groovy.util.NodeList: java.lang.Class class$(java.lang.String)>("groovy.util.NodeList");

        <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.util.NodeList: java.lang.Class class$groovy$util$NodeList>;

     label2:
        $r2 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r3);

        staticinvoke <groovy.util.NodeList: void setMetaClass(groovy.lang.MetaClass)>($r2);

        return;
    }
}
