final class com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.ref.WeakReference mapReference;

    public void <init>(com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap)
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap r2;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask;

        r2 := @parameter0: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask: java.lang.ref.WeakReference mapReference> = $r1;

        return;
    }

    public void run()
    {
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$Segment[] r4;
        java.util.concurrent.CancellationException $r6;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap r3;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask r0;
        com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$Segment r5;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$CleanupMapTask: java.lang.ref.WeakReference mapReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap) $r2;

        if r3 != null goto label1;

        $r6 = new java.util.concurrent.CancellationException;

        specialinvoke $r6.<java.util.concurrent.CancellationException: void <init>()>();

        throw $r6;

     label1:
        r4 = r3.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap: com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$Segment[] segments>;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        virtualinvoke r5.<com.mycila.inject.internal.guava.collect.CustomConcurrentHashMap$Segment: void runCleanup()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }
}
