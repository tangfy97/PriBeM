public abstract class org.apache.poi.ss.format.CellFormatter extends java.lang.Object
{
    protected final java.lang.String format;
    public static final java.util.Locale LOCALE;
    static final java.util.logging.Logger logger;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.ss.format.CellFormatter r0;

        r0 := @this: org.apache.poi.ss.format.CellFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.format.CellFormatter: java.lang.String format> = r1;

        return;
    }

    public abstract void formatValue(java.lang.StringBuffer, java.lang.Object);

    public abstract void simpleValue(java.lang.StringBuffer, java.lang.Object);

    public java.lang.String format(java.lang.Object)
    {
        java.lang.StringBuffer $r0;
        java.lang.Object r2;
        java.lang.String $r3;
        org.apache.poi.ss.format.CellFormatter r1;

        r1 := @this: org.apache.poi.ss.format.CellFormatter;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<org.apache.poi.ss.format.CellFormatter: void formatValue(java.lang.StringBuffer,java.lang.Object)>($r0, r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String simpleFormat(java.lang.Object)
    {
        java.lang.StringBuffer $r0;
        java.lang.Object r2;
        java.lang.String $r3;
        org.apache.poi.ss.format.CellFormatter r1;

        r1 := @this: org.apache.poi.ss.format.CellFormatter;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<org.apache.poi.ss.format.CellFormatter: void simpleValue(java.lang.StringBuffer,java.lang.Object)>($r0, r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    static java.lang.String quote(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.util.Locale $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;

        $r0 = <java.util.Locale: java.util.Locale US>;

        <org.apache.poi.ss.format.CellFormatter: java.util.Locale LOCALE> = $r0;

        $r1 = class "Lorg/apache/poi/ss/format/CellFormatter;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <org.apache.poi.ss.format.CellFormatter: java.util.logging.Logger logger> = $r3;

        return;
    }
}
