public class org.dom4j.dom.DOMAttributeNodeMap extends java.lang.Object implements org.w3c.dom.NamedNodeMap
{
    private org.dom4j.dom.DOMElement element;

    public void <init>(org.dom4j.dom.DOMElement)
    {
        org.dom4j.dom.DOMAttributeNodeMap r0;
        org.dom4j.dom.DOMElement r1;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r1 := @parameter0: org.dom4j.dom.DOMElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element> = r1;

        return;
    }

    public void foo() throws org.w3c.dom.DOMException
    {
        org.dom4j.dom.DOMAttributeNodeMap r0;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        staticinvoke <org.dom4j.dom.DOMNodeHelper: void notSupported()>();

        return;
    }

    public org.w3c.dom.Node getNamedItem(java.lang.String)
    {
        org.dom4j.dom.DOMAttributeNodeMap r0;
        java.lang.String r1;
        org.w3c.dom.Attr $r3;
        org.dom4j.dom.DOMElement $r2;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r3 = virtualinvoke $r2.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(r1);

        return $r3;
    }

    public org.w3c.dom.Node setNamedItem(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Attr $r7, $r9;
        java.lang.StringBuffer $r2, $r3, $r4;
        org.w3c.dom.Node r0;
        org.w3c.dom.DOMException $r1;
        org.dom4j.dom.DOMAttributeNodeMap r6;
        java.lang.String $r5;
        org.dom4j.dom.DOMElement $r8;
        boolean $z0;

        r6 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.w3c.dom.Attr;

        if $z0 == 0 goto label1;

        $r8 = r6.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r7 = (org.w3c.dom.Attr) r0;

        $r9 = virtualinvoke $r8.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>($r7);

        return $r9;

     label1:
        $r1 = new org.w3c.dom.DOMException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Node is not an Attr: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r5);

        throw $r1;
    }

    public org.w3c.dom.Node removeNamedItem(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Attr $r3, $r5;
        java.lang.StringBuffer $r7, $r8, $r9;
        org.w3c.dom.DOMException $r6;
        org.dom4j.dom.DOMAttributeNodeMap r0;
        java.lang.String r1, $r10;
        org.dom4j.dom.DOMElement $r2, $r4;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r3 = virtualinvoke $r2.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r6 = new org.w3c.dom.DOMException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No attribute named ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, $r10);

        throw $r6;

     label1:
        $r4 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r5 = virtualinvoke $r4.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)>($r3);

        return $r5;
    }

    public org.w3c.dom.Node item(int)
    {
        int i0;
        org.dom4j.dom.DOMAttributeNodeMap r0;
        org.w3c.dom.Attr $r3;
        org.dom4j.dom.DOMElement $r1;
        org.dom4j.Attribute $r2;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r2 = virtualinvoke $r1.<org.dom4j.dom.DOMElement: org.dom4j.Attribute attribute(int)>(i0);

        $r3 = staticinvoke <org.dom4j.dom.DOMNodeHelper: org.w3c.dom.Attr asDOMAttr(org.dom4j.Node)>($r2);

        return $r3;
    }

    public int getLength()
    {
        int $i0;
        org.dom4j.dom.DOMAttributeNodeMap r0;
        org.dom4j.dom.DOMElement $r1;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        $r1 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $i0 = virtualinvoke $r1.<org.dom4j.dom.DOMElement: int attributeCount()>();

        return $i0;
    }

    public org.w3c.dom.Node getNamedItemNS(java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMAttributeNodeMap r0;
        java.lang.String r1, r2;
        org.w3c.dom.Attr $r4;
        org.dom4j.dom.DOMElement $r3;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r4 = virtualinvoke $r3.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Attr $r7, $r9;
        java.lang.StringBuffer $r2, $r3, $r4;
        org.w3c.dom.Node r0;
        org.w3c.dom.DOMException $r1;
        org.dom4j.dom.DOMAttributeNodeMap r6;
        java.lang.String $r5;
        org.dom4j.dom.DOMElement $r8;
        boolean $z0;

        r6 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.w3c.dom.Attr;

        if $z0 == 0 goto label1;

        $r8 = r6.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r7 = (org.w3c.dom.Attr) r0;

        $r9 = virtualinvoke $r8.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r7);

        return $r9;

     label1:
        $r1 = new org.w3c.dom.DOMException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Node is not an Attr: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r5);

        throw $r1;
    }

    public org.w3c.dom.Node removeNamedItemNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.dom4j.dom.DOMAttributeNodeMap r0;
        java.lang.String r1, r2;
        org.w3c.dom.Attr $r4, $r6;
        org.dom4j.dom.DOMElement $r3, $r5;

        r0 := @this: org.dom4j.dom.DOMAttributeNodeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r4 = virtualinvoke $r3.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(r1, r2);

        if $r4 == null goto label1;

        $r5 = r0.<org.dom4j.dom.DOMAttributeNodeMap: org.dom4j.dom.DOMElement element>;

        $r6 = virtualinvoke $r5.<org.dom4j.dom.DOMElement: org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)>($r4);

        return $r6;

     label1:
        return $r4;
    }
}
