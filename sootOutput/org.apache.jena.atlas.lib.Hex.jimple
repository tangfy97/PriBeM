public class org.apache.jena.atlas.lib.Hex extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.atlas.lib.Hex r0;

        r0 := @this: org.apache.jena.atlas.lib.Hex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int formatUnsignedLongHex(byte[], int, long, int)
    {
        byte[] r0, $r2;
        long l3, $l5, l11;
        byte $b4, b7, $b8;
        int i0, i1, $i2, i6, i9, i10, $i13, $i15, $i17, $i19;
        org.apache.jena.atlas.AtlasException $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l3 := @parameter2: long;

        i1 := @parameter3: int;

        $i2 = i0 + i1;

        i9 = $i2 - 1;

        i10 = i1;

        l11 = l3;

     label1:
        if i10 <= 0 goto label3;

        $l5 = l11 & 15L;

        i6 = (int) $l5;

        l11 = l11 >>> 4;

        $r2 = <org.apache.jena.atlas.lib.Bytes: byte[] hexDigitsUC>;

        b7 = $r2[i6];

        r0[i9] = b7;

        $i13 = (int) -1;

        i10 = i10 + $i13;

        $i15 = (int) -1;

        i9 = i9 + $i15;

        $b8 = l11 cmp 0L;

        if $b8 != 0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        $b4 = l11 cmp 0L;

        if $b4 == 0 goto label4;

        $r3 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r3.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>("formatUnsignedLongHex: overflow");

        throw $r3;

     label4:
        if i10 <= 0 goto label5;

        r0[i9] = 48;

        $i17 = (int) -1;

        i9 = i9 + $i17;

        $i19 = (int) -1;

        i10 = i10 + $i19;

        goto label4;

     label5:
        return i1;
    }

    public static long getLong(byte[], int)
    {
        byte[] r0;
        long $l2, $l3, l5;
        byte b0;
        int $i1, i4, i6, $i7;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        l5 = 0L;

        i6 = 0;

     label1:
        if i6 >= 16 goto label2;

        b0 = r0[i4];

        $i7 = (int) b0;

        $i1 = staticinvoke <org.apache.jena.atlas.lib.Hex: int hexByteToInt(int)>($i7);

        $l3 = l5 << 4;

        $l2 = (long) $i1;

        l5 = $l3 | $l2;

        i4 = i4 + 1;

        i6 = i6 + 1;

        goto label1;

     label2:
        return l5;
    }

    public static int hexByteToInt(int)
    {
        java.lang.IllegalArgumentException $r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if 48 > i0 goto label1;

        if i0 > 57 goto label1;

        $i5 = i0 - 48;

        return $i5;

     label1:
        if 65 > i0 goto label2;

        if i0 > 70 goto label2;

        $i3 = i0 - 65;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if 97 > i0 goto label3;

        if i0 > 102 goto label3;

        $i1 = i0 - 97;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad index char : ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static int hexByteToInt(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if 48 > i0 goto label1;

        if i0 > 57 goto label1;

        $i6 = i0 - 48;

        return $i6;

     label1:
        if 65 > i0 goto label2;

        if i0 > 70 goto label2;

        $i4 = i0 - 65;

        $i5 = $i4 + 10;

        return $i5;

     label2:
        if 97 > i0 goto label3;

        if i0 > 102 goto label3;

        $i2 = i0 - 97;

        $i3 = $i2 + 10;

        return $i3;

     label3:
        return i1;
    }
}
