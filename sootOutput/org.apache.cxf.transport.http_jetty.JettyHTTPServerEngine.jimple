public class org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine extends java.lang.Object implements org.apache.cxf.transport.http_jetty.ServerEngine
{
    private static final java.util.logging.Logger LOG;
    private int port;
    private java.lang.String host;
    private java.lang.String protocol;
    private java.lang.Boolean isSessionSupport;
    private java.lang.Boolean isReuseAddress;
    private java.lang.Boolean continuationsEnabled;
    private int maxIdleTime;
    private java.lang.Boolean sendServerVersion;
    private int servantCount;
    private org.eclipse.jetty.server.Server server;
    private org.eclipse.jetty.server.Connector connector;
    private java.util.List handlers;
    private org.apache.cxf.transport.http_jetty.JettyConnectorFactory connectorFactory;
    private org.eclipse.jetty.server.handler.ContextHandlerCollection contexts;
    private org.eclipse.jetty.util.component.Container$Listener mBeanContainer;
    private org.eclipse.jetty.server.SessionManager sessionManager;
    private org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters;
    private org.apache.cxf.transport.http_jetty.ThreadingParameters threadingParameters;
    private boolean configFinalized;

    public void <init>(org.eclipse.jetty.util.component.Container$Listener, java.lang.String, int)
    {
        org.eclipse.jetty.util.component.Container$Listener r6;
        int i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1, $r2, $r3, $r4;
        java.lang.String r5;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r6 := @parameter0: org.eclipse.jetty.util.component.Container$Listener;

        r5 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol> = "http";

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isSessionSupport> = $r1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isReuseAddress> = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean continuationsEnabled> = $r3;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int maxIdleTime> = 200000;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean sendServerVersion> = $r4;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String host> = r5;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port> = i0;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.util.component.Container$Listener mBeanContainer> = r6;

        return;
    }

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol> = "http";

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isSessionSupport> = $r1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isReuseAddress> = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean continuationsEnabled> = $r3;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int maxIdleTime> = 200000;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean sendServerVersion> = $r4;

        return;
    }

    public void setPort(int)
    {
        int i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port> = i0;

        return;
    }

    public void setHost(java.lang.String)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String host> = r1;

        return;
    }

    public void setContinuationsEnabled(boolean)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean continuationsEnabled> = $r1;

        return;
    }

    public boolean getContinuationsEnabled()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean continuationsEnabled>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.String getProtocol()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        return $i0;
    }

    public java.lang.String getHost()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String host>;

        return $r1;
    }

    public void shutdown()
    {
        java.util.logging.Logger $r1;
        java.lang.Integer $r3;
        java.util.logging.Level $r2;
        int $i0, $i1, $i2;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $z0 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean shouldDestroyPort()>();

        if $z0 == 0 goto label2;

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int servantCount>;

        if $i0 != 0 goto label1;

        $i2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        staticinvoke <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void destroyForPort(int)>($i2);

        goto label2;

     label1:
        $r1 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $i1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r1.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r2, "FAILED_TO_SHUTDOWN_ENGINE_MSG", $r3);

     label2:
        return;
    }

    private boolean shouldDestroyPort()
    {
        int $i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r2;
        java.lang.Boolean $r6;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r4, $r5, r7;
        boolean $z0, $z1;

        r2 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.cxf.transports.http_jetty.DontClosePort.");

        $i0 = r2.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>($r4);

        r7 = $r5;

        if $r5 != null goto label1;

        r7 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("org.apache.cxf.transports.http_jetty.DontClosePort");

     label1:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r7);

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public org.eclipse.jetty.server.Server getServer()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.eclipse.jetty.server.Server $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        return $r1;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.eclipse.jetty.server.Server r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: org.eclipse.jetty.server.Server;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server> = r1;

        return;
    }

    public void setConnector(org.eclipse.jetty.server.Connector)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.eclipse.jetty.server.Connector r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: org.eclipse.jetty.server.Connector;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector> = r1;

        return;
    }

    public void setHandlers(java.util.List)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers> = r1;

        return;
    }

    public void setSessionSupport(boolean)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isSessionSupport> = $r1;

        return;
    }

    public boolean isSessionSupport()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isSessionSupport>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.util.List getHandlers()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        return $r1;
    }

    public org.eclipse.jetty.server.Connector getConnector()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.eclipse.jetty.server.Connector $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        return $r1;
    }

    public boolean isReuseAddress()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isReuseAddress>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setReuseAddress(boolean)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isReuseAddress> = $r1;

        return;
    }

    public int getMaxIdleTime()
    {
        int $i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int maxIdleTime>;

        return $i0;
    }

    public void setMaxIdleTime(int)
    {
        int i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int maxIdleTime> = i0;

        return;
    }

    public synchronized void addServant(java.net.URL, org.apache.cxf.transport.http_jetty.JettyHTTPHandler)
    {
        java.lang.Integer $r75, $r89, $r95;
        org.eclipse.jetty.security.SecurityHandler $r31, $r33, r98;
        java.lang.StringBuilder $r42, $r44, $r47, $r49, $r50, $r53, $r54, $r55, $r57, $r59;
        org.eclipse.jetty.server.Handler $r23, $r32, r106;
        java.lang.Object[] $r15, $r65, $r72, $r81, $r86, $r91;
        org.eclipse.jetty.server.session.HashSessionManager $r9;
        java.lang.Class[] $r13, $r79;
        org.eclipse.jetty.server.AbstractConnector $r39;
        org.eclipse.jetty.server.handler.ContextHandlerCollection $r24, $r26, $r107, $r112, $r116;
        org.eclipse.jetty.util.component.Container $r62;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r113;
        java.lang.reflect.Method $r14, $r80;
        org.eclipse.jetty.util.component.Container$Listener $r20, $r63;
        java.util.logging.Level $r40, $r67, $r93;
        org.apache.cxf.interceptor.Fault $r70, $r84;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9;
        java.lang.Boolean $r6, $r19;
        org.apache.cxf.transport.http_jetty.JettyHTTPHandler r7;
        java.lang.Class $r12, $r78;
        java.lang.Object $r30;
        org.eclipse.jetty.server.Connector $r21, $r45, $r51, $r58, $r102, $r108;
        org.eclipse.jetty.server.handler.DefaultHandler r99;
        org.eclipse.jetty.server.Server $r1, $r17, $r18, $r22, $r25, $r35, $r61, $r96, $r97, $r101, $r109;
        java.lang.Exception $r64, $r69, $r76, $r83, $r90;
        java.lang.String $r3, $r4, $r38, $r46, $r48, $r52, $r60, $r68, $r74, $r88, $r94, $r100, $r114, $r115;
        org.eclipse.jetty.server.session.HashSessionIdManager $r10;
        org.apache.cxf.transport.http_jetty.JettyConnectorFactory $r37;
        org.eclipse.jetty.server.SessionManager $r8, $r11, $r16, $r77, $r82, $r111;
        org.eclipse.jetty.server.handler.HandlerCollection $r34, r104;
        java.net.URL r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.logging.Logger $r41, $r43, $r56, $r66, $r73, $r87, $r92;
        java.util.List $r27, $r28, $r36, $r103, $r105;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.common.i18n.Message $r71, $r85;
        java.util.Iterator $r29;
        org.eclipse.jetty.server.handler.ContextHandler $r5;
        org.eclipse.jetty.server.session.SessionHandler $r110;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r2 := @parameter0: java.net.URL;

        r7 := @parameter1: org.apache.cxf.transport.http_jetty.JettyHTTPHandler;

        r98 = null;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        if $r1 != null goto label23;

        r99 = null;

        $r17 = new org.eclipse.jetty.server.Server;

        specialinvoke $r17.<org.eclipse.jetty.server.Server: void <init>()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server> = $r17;

        $r18 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r19 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean getSendServerVersion()>();

        $z1 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r18.<org.eclipse.jetty.server.Server: void setSendServerVersion(boolean)>($z1);

        $r20 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.util.component.Container$Listener mBeanContainer>;

        if $r20 == null goto label01;

        $r61 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r62 = virtualinvoke $r61.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r63 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.util.component.Container$Listener mBeanContainer>;

        virtualinvoke $r62.<org.eclipse.jetty.util.component.Container: void addEventListener(org.eclipse.jetty.util.component.Container$Listener)>($r63);

     label01:
        $r21 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        if $r21 != null goto label04;

        $r37 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyConnectorFactory connectorFactory>;

        $r38 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String getHost()>();

        $i2 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int getPort()>();

        $r39 = interfaceinvoke $r37.<org.apache.cxf.transport.http_jetty.JettyConnectorFactory: org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)>($r38, $i2);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector> = $r39;

        $r41 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r40 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $z6 = virtualinvoke $r41.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r40);

        if $z6 == 0 goto label04;

        $r43 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connector.host: ");

        $r45 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $r46 = interfaceinvoke $r45.<org.eclipse.jetty.server.Connector: java.lang.String getHost()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r48 != null goto label02;

        $r100 = "null";

        goto label03;

     label02:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r51 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $r52 = interfaceinvoke $r51.<org.eclipse.jetty.server.Connector: java.lang.String getHost()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r100 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        virtualinvoke $r43.<java.util.logging.Logger: void finer(java.lang.String)>($r100);

        $r56 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connector.port: ");

        $r58 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $i3 = interfaceinvoke $r58.<org.eclipse.jetty.server.Connector: int getPort()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<java.util.logging.Logger: void finer(java.lang.String)>($r60);

     label04:
        $r101 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r102 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        virtualinvoke $r101.<org.eclipse.jetty.server.Server: void addConnector(org.eclipse.jetty.server.Connector)>($r102);

        i7 = 1;

        $r103 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        if $r103 == null goto label05;

        $r36 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        $i1 = interfaceinvoke $r36.<java.util.List: int size()>();

        i7 = 1 + $i1;

     label05:
        $r22 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r23 = virtualinvoke $r22.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Handler getHandler()>();

        r104 = null;

        $z5 = $r23 instanceof org.eclipse.jetty.server.handler.HandlerCollection;

        if $z5 == 0 goto label06;

        r104 = (org.eclipse.jetty.server.handler.HandlerCollection) $r23;

     label06:
        if $z5 != 0 goto label09;

        if $r23 != null goto label07;

        if i7 <= 1 goto label09;

     label07:
        $r34 = new org.eclipse.jetty.server.handler.HandlerCollection;

        specialinvoke $r34.<org.eclipse.jetty.server.handler.HandlerCollection: void <init>()>();

        r104 = $r34;

        if $r23 == null goto label08;

        virtualinvoke $r34.<org.eclipse.jetty.server.handler.HandlerCollection: void addHandler(org.eclipse.jetty.server.Handler)>($r23);

     label08:
        $r35 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r35.<org.eclipse.jetty.server.Server: void setHandler(org.eclipse.jetty.server.Handler)>($r34);

     label09:
        $r105 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        if $r105 == null goto label14;

        $r27 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        $i0 = interfaceinvoke $r27.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $r28 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.List handlers>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r106 = (org.eclipse.jetty.server.Handler) $r30;

        $z3 = r106 instanceof org.eclipse.jetty.server.handler.DefaultHandler;

        if $z3 == 0 goto label11;

        r99 = (org.eclipse.jetty.server.handler.DefaultHandler) r106;

        goto label13;

     label11:
        $z4 = r106 instanceof org.eclipse.jetty.security.SecurityHandler;

        if $z4 == 0 goto label12;

        $r31 = (org.eclipse.jetty.security.SecurityHandler) r106;

        $r32 = virtualinvoke $r31.<org.eclipse.jetty.security.SecurityHandler: org.eclipse.jetty.server.Handler getHandler()>();

        if $r32 != null goto label12;

        $r33 = (org.eclipse.jetty.security.SecurityHandler) r106;

        virtualinvoke $r33.<org.eclipse.jetty.security.SecurityHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r7);

        r98 = (org.eclipse.jetty.security.SecurityHandler) r106;

        goto label13;

     label12:
        virtualinvoke r104.<org.eclipse.jetty.server.handler.HandlerCollection: void addHandler(org.eclipse.jetty.server.Handler)>(r106);

     label13:
        goto label10;

     label14:
        $r107 = new org.eclipse.jetty.server.handler.ContextHandlerCollection;

        specialinvoke $r107.<org.eclipse.jetty.server.handler.ContextHandlerCollection: void <init>()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts> = $r107;

        if r104 == null goto label15;

        $r26 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        virtualinvoke r104.<org.eclipse.jetty.server.handler.HandlerCollection: void addHandler(org.eclipse.jetty.server.Handler)>($r26);

        if r99 == null goto label16;

        virtualinvoke r104.<org.eclipse.jetty.server.handler.HandlerCollection: void addHandler(org.eclipse.jetty.server.Handler)>(r99);

        goto label16;

     label15:
        $r25 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r24 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        virtualinvoke $r25.<org.eclipse.jetty.server.Server: void setHandler(org.eclipse.jetty.server.Handler)>($r24);

     label16:
        $r108 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setReuseAddress(org.eclipse.jetty.server.Connector)>($r108);

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setupThreadPool()>();

        $r109 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r109.<org.eclipse.jetty.server.Server: void start()>();

     label17:
        goto label23;

     label18:
        $r90 := @caughtexception;

        $r92 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r93 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r91 = newarray (java.lang.Object)[2];

        $r94 = virtualinvoke $r90.<java.lang.Exception: java.lang.String getMessage()>();

        $r91[0] = $r94;

        $i6 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r91[1] = $r95;

        virtualinvoke $r92.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r93, "START_UP_SERVER_FAILED_MSG", $r91);

     label19:
        $r96 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r96.<org.eclipse.jetty.server.Server: void stop()>();

        $r97 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r97.<org.eclipse.jetty.server.Server: void destroy()>();

     label20:
        goto label22;

     label21:
        $r83 := @caughtexception;

     label22:
        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server> = null;

        $r84 = new org.apache.cxf.interceptor.Fault;

        $r85 = new org.apache.cxf.common.i18n.Message;

        $r87 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r86 = newarray (java.lang.Object)[2];

        $r88 = virtualinvoke $r90.<java.lang.Exception: java.lang.String getMessage()>();

        $r86[0] = $r88;

        $i5 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r86[1] = $r89;

        specialinvoke $r85.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("START_UP_SERVER_FAILED_MSG", $r87, $r86);

        specialinvoke $r84.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r85, $r90);

        throw $r84;

     label23:
        $r3 = virtualinvoke r2.<java.net.URL: java.lang.String getPath()>();

        $r4 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getContextName(java.lang.String)>($r3);

        $r5 = new org.eclipse.jetty.server.handler.ContextHandler;

        specialinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void <init>()>();

        virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void setContextPath(java.lang.String)>($r4);

        $r6 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean isSessionSupport>;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label33;

        $r8 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        if $r8 != null goto label30;

        $r9 = new org.eclipse.jetty.server.session.HashSessionManager;

        specialinvoke $r9.<org.eclipse.jetty.server.session.HashSessionManager: void <init>()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager> = $r9;

        $r10 = new org.eclipse.jetty.server.session.HashSessionIdManager;

        specialinvoke $r10.<org.eclipse.jetty.server.session.HashSessionIdManager: void <init>()>();

     label24:
        $r11 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = newarray (java.lang.Class)[1];

        $r13[0] = class "Lorg/eclipse/jetty/server/SessionIdManager;";

        $r14 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setSessionIdManager", $r13);

        $r16 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = $r10;

        virtualinvoke $r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r16, $r15);

     label25:
        goto label30;

     label26:
        $r76 := @caughtexception;

     label27:
        $r77 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        $r78 = virtualinvoke $r77.<java.lang.Object: java.lang.Class getClass()>();

        $r79 = newarray (java.lang.Class)[1];

        $r79[0] = class "Lorg/eclipse/jetty/server/SessionIdManager;";

        $r80 = virtualinvoke $r78.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setIdManager", $r79);

        $r82 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        $r81 = newarray (java.lang.Object)[1];

        $r81[0] = $r10;

        virtualinvoke $r80.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r82, $r81);

     label28:
        goto label30;

     label29:
        $r69 := @caughtexception;

        $r70 = new org.apache.cxf.interceptor.Fault;

        $r71 = new org.apache.cxf.common.i18n.Message;

        $r73 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r72 = newarray (java.lang.Object)[2];

        $r74 = virtualinvoke $r76.<java.lang.Exception: java.lang.String getMessage()>();

        $r72[0] = $r74;

        $i4 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r72[1] = $r75;

        specialinvoke $r71.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("START_UP_SERVER_FAILED_MSG", $r73, $r72);

        specialinvoke $r70.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r71, $r76);

        throw $r70;

     label30:
        $r110 = new org.eclipse.jetty.server.session.SessionHandler;

        $r111 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.SessionManager sessionManager>;

        specialinvoke $r110.<org.eclipse.jetty.server.session.SessionHandler: void <init>(org.eclipse.jetty.server.SessionManager)>($r111);

        if r98 == null goto label31;

        virtualinvoke $r110.<org.eclipse.jetty.server.session.SessionHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r98);

        goto label32;

     label31:
        virtualinvoke $r110.<org.eclipse.jetty.server.session.SessionHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r7);

     label32:
        virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void setHandler(org.eclipse.jetty.server.Handler)>($r110);

        goto label35;

     label33:
        if r98 == null goto label34;

        virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r98);

        goto label35;

     label34:
        virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r7);

     label35:
        $r112 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        virtualinvoke $r112.<org.eclipse.jetty.server.handler.ContextHandlerCollection: void addHandler(org.eclipse.jetty.server.Handler)>($r5);

        $r113 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        virtualinvoke r7.<org.apache.cxf.transport.http_jetty.JettyHTTPHandler: void setServletContext(javax.servlet.ServletContext)>($r113);

        $r114 = virtualinvoke r2.<java.net.URL: java.lang.String getPath()>();

        $r115 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getResourceBase(java.lang.String)>($r114);

        virtualinvoke r7.<org.apache.cxf.transport.http_jetty.JettyHTTPHandler: void setName(java.lang.String)>($r115);

        $r116 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        $z7 = virtualinvoke $r116.<org.eclipse.jetty.server.handler.ContextHandlerCollection: boolean isStarted()>();

        if $z7 == 0 goto label39;

     label36:
        virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: void start()>();

     label37:
        goto label39;

     label38:
        $r64 := @caughtexception;

        $r66 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r67 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r65 = newarray (java.lang.Object)[1];

        $r68 = virtualinvoke $r64.<java.lang.Exception: java.lang.String getMessage()>();

        $r65[0] = $r68;

        virtualinvoke $r66.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r67, "ADD_HANDLER_FAILED_MSG", $r65);

     label39:
        $i8 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int servantCount>;

        $i9 = $i8 + 1;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int servantCount> = $i9;

        return;

        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Exception from label36 to label37 with label38;
    }

    protected void setupThreadPool()
    {
        org.eclipse.jetty.server.AbstractConnector r2;
        java.lang.Integer $r13, $r20, $r30, $r31, $r33, $r34;
        org.eclipse.jetty.util.thread.QueuedThreadPool $r35, r40;
        java.lang.reflect.Method $r10, $r17;
        org.eclipse.jetty.server.Server $r36, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.logging.Logger $r29;
        org.eclipse.jetty.util.thread.ThreadPool $r3, r39;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Throwable $r38;
        java.lang.Object[] $r11, $r18, $r28;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r4, $r5, $r6, $r12, $r19, $r21, $r22, $r23, $r24, $r25, $r32;
        org.apache.cxf.common.i18n.Message $r27;
        org.apache.cxf.interceptor.Fault $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Class[] $r8, $r15;
        java.lang.Class $r7, $r9, $r14, $r16;
        org.eclipse.jetty.server.Connector $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        r2 = (org.eclipse.jetty.server.AbstractConnector) $r1;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean isSetThreadingParameters()>();

        if $z0 == 0 goto label10;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.server.AbstractConnector: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        r39 = $r3;

        if $r3 != null goto label01;

        $r37 = virtualinvoke r2.<org.eclipse.jetty.server.AbstractConnector: org.eclipse.jetty.server.Server getServer()>();

        r39 = virtualinvoke $r37.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

     label01:
        if r39 != null goto label02;

        $r35 = new org.eclipse.jetty.util.thread.QueuedThreadPool;

        specialinvoke $r35.<org.eclipse.jetty.util.thread.QueuedThreadPool: void <init>()>();

        r39 = $r35;

        $r36 = virtualinvoke r2.<org.eclipse.jetty.server.AbstractConnector: org.eclipse.jetty.server.Server getServer()>();

        virtualinvoke $r36.<org.eclipse.jetty.server.Server: void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)>($r35);

        virtualinvoke r2.<org.eclipse.jetty.server.AbstractConnector: void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)>($r35);

     label02:
        $i0 = virtualinvoke r2.<org.eclipse.jetty.server.AbstractConnector: int getAcceptors()>();

        $i9 = $i0 * 2;

        $r4 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $z1 = virtualinvoke $r4.<org.apache.cxf.transport.http_jetty.ThreadingParameters: boolean isSetMaxThreads()>();

        if $z1 == 0 goto label03;

        $r25 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i5 = virtualinvoke $r25.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMaxThreads()>();

        if $i5 > $i9 goto label03;

        $r26 = new org.apache.cxf.interceptor.Fault;

        $r27 = new org.apache.cxf.common.i18n.Message;

        $r29 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r28 = newarray (java.lang.Object)[4];

        $i6 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r28[0] = $r30;

        $i7 = $i9 + 1;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r28[1] = $r31;

        $r32 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i8 = virtualinvoke $r32.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMaxThreads()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r28[2] = $r33;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r28[3] = $r34;

        specialinvoke $r27.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NOT_ENOUGH_THREADS", $r29, $r28);

        specialinvoke $r26.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r27);

        throw $r26;

     label03:
        $z2 = r39 instanceof org.eclipse.jetty.util.thread.QueuedThreadPool;

        if $z2 == 0 goto label06;

        r40 = (org.eclipse.jetty.util.thread.QueuedThreadPool) r39;

        $r21 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $z5 = virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.ThreadingParameters: boolean isSetMinThreads()>();

        if $z5 == 0 goto label04;

        $r24 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i4 = virtualinvoke $r24.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMinThreads()>();

        virtualinvoke r40.<org.eclipse.jetty.util.thread.QueuedThreadPool: void setMinThreads(int)>($i4);

     label04:
        $r22 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $z6 = virtualinvoke $r22.<org.apache.cxf.transport.http_jetty.ThreadingParameters: boolean isSetMaxThreads()>();

        if $z6 == 0 goto label05;

        $r23 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i3 = virtualinvoke $r23.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMaxThreads()>();

        virtualinvoke r40.<org.eclipse.jetty.util.thread.QueuedThreadPool: void setMaxThreads(int)>($i3);

     label05:
        goto label10;

     label06:
        $r5 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $z3 = virtualinvoke $r5.<org.apache.cxf.transport.http_jetty.ThreadingParameters: boolean isSetMinThreads()>();

        if $z3 == 0 goto label07;

        $r14 = virtualinvoke r39.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = newarray (java.lang.Class)[1];

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        $r15[0] = $r16;

        $r17 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setMinThreads", $r15);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i2 = virtualinvoke $r19.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMinThreads()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r18[0] = $r20;

        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r39, $r18);

     label07:
        $r6 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $z4 = virtualinvoke $r6.<org.apache.cxf.transport.http_jetty.ThreadingParameters: boolean isSetMaxThreads()>();

        if $z4 == 0 goto label08;

        $r7 = virtualinvoke r39.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = newarray (java.lang.Class)[1];

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r10 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setMaxThreads", $r8);

        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()>();

        $i1 = virtualinvoke $r12.<org.apache.cxf.transport.http_jetty.ThreadingParameters: int getMaxThreads()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[0] = $r13;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r39, $r11);

     label08:
        goto label10;

     label09:
        $r38 := @caughtexception;

     label10:
        return;

        catch java.lang.Throwable from label06 to label08 with label09;
    }

    private void setReuseAddress(org.eclipse.jetty.server.Connector) throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractConnector $r5;
        java.lang.Object[] $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r4;
        org.eclipse.jetty.server.Connector r0;
        boolean $z0, $z1;

        r4 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r0 := @parameter0: org.eclipse.jetty.server.Connector;

        $z0 = r0 instanceof org.eclipse.jetty.server.AbstractConnector;

        if $z0 == 0 goto label1;

        $r5 = (org.eclipse.jetty.server.AbstractConnector) r0;

        $z1 = virtualinvoke r4.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean isReuseAddress()>();

        virtualinvoke $r5.<org.eclipse.jetty.server.AbstractConnector: void setReuseAddress(boolean)>($z1);

        goto label2;

     label1:
        $r3 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r2, "UNKNOWN_CONNECTOR_MSG", $r1);

     label2:
        return;
    }

    public synchronized void removeServant(java.net.URL)
    {
        java.net.URL r0;
        org.eclipse.jetty.server.handler.ContextHandlerCollection $r11, $r18;
        org.eclipse.jetty.server.Server $r6, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.logging.Logger $r9, $r21;
        java.lang.Exception $r19;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r5;
        org.eclipse.jetty.server.Handler r13, $r14;
        java.lang.Object[] $r7, $r20;
        java.util.logging.Level $r8, $r22;
        int $i0, $i1, i2, i3;
        java.lang.String $r1, $r2, $r3, $r4, $r15, $r17, $r23;
        org.apache.cxf.transport.http_jetty.JettyHTTPHandler $r16;
        org.eclipse.jetty.server.handler.ContextHandler r24;
        org.eclipse.jetty.server.Handler[] $r12;

        r5 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $r2 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getContextName(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $r4 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getResourceBase(java.lang.String)>($r3);

        z5 = 0;

        $r6 = r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        if $r6 == null goto label7;

        $r10 = r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $z0 = virtualinvoke $r10.<org.eclipse.jetty.server.Server: boolean isRunning()>();

        if $z0 == 0 goto label7;

        $r11 = r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.server.handler.ContextHandlerCollection: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ContextHandler;");

        i2 = lengthof $r12;

        i3 = 0;

     label1:
        if i3 >= i2 goto label7;

        r13 = $r12[i3];

        $z1 = r13 instanceof org.eclipse.jetty.server.handler.ContextHandler;

        if $z1 == 0 goto label6;

        r24 = (org.eclipse.jetty.server.handler.ContextHandler) r13;

        $r14 = virtualinvoke r24.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.Handler getHandler()>();

        $z2 = $r14 instanceof org.apache.cxf.transport.http_jetty.JettyHTTPHandler;

        if $z2 == 0 goto label6;

        $r15 = virtualinvoke r24.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String getContextPath()>();

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z3 == 0 goto label6;

        $r16 = (org.apache.cxf.transport.http_jetty.JettyHTTPHandler) $r14;

        $r17 = virtualinvoke $r16.<org.apache.cxf.transport.http_jetty.JettyHTTPHandler: java.lang.String getName()>();

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label6;

     label2:
        $r18 = r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.handler.ContextHandlerCollection contexts>;

        virtualinvoke $r18.<org.eclipse.jetty.server.handler.ContextHandlerCollection: void removeHandler(org.eclipse.jetty.server.Handler)>(r13);

        interfaceinvoke r13.<org.eclipse.jetty.server.Handler: void stop()>();

        interfaceinvoke r13.<org.eclipse.jetty.server.Handler: void destroy()>();

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

        $r21 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r22 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r20 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke $r19.<java.lang.Exception: java.lang.String getMessage()>();

        $r20[0] = $r23;

        virtualinvoke $r21.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r22, "REMOVE_HANDLER_FAILED_MSG", $r20);

     label5:
        z5 = 1;

        goto label7;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        if z5 != 0 goto label8;

        $r9 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r8, "CAN_NOT_FIND_HANDLER_MSG", $r7);

     label8:
        $i0 = r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int servantCount>;

        $i1 = $i0 - 1;

        r5.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int servantCount> = $i1;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public synchronized org.eclipse.jetty.server.Handler getServant(java.net.URL)
    {
        org.eclipse.jetty.server.Handler r7, r9;
        java.net.URL r0;
        org.eclipse.jetty.server.handler.ContextHandler r10;
        org.eclipse.jetty.server.Handler[] $r6;
        int i0, i1;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r3;
        java.lang.String $r1, $r2, $r8;
        org.eclipse.jetty.server.Server $r4, $r5;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $r2 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getContextName(java.lang.String)>($r1);

        r9 = null;

        $r4 = r3.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        if $r4 == null goto label3;

        $r5 = r3.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ContextHandler;");

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r7 = $r6[i1];

        $z0 = r7 instanceof org.eclipse.jetty.server.handler.ContextHandler;

        if $z0 == 0 goto label2;

        r10 = (org.eclipse.jetty.server.handler.ContextHandler) r7;

        $r8 = virtualinvoke r10.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String getContextPath()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        r9 = virtualinvoke r10.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.Handler getHandler()>();

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r9;
    }

    public synchronized org.eclipse.jetty.server.handler.ContextHandler getContextHandler(java.net.URL)
    {
        org.eclipse.jetty.server.Handler r7;
        java.net.URL r0;
        org.eclipse.jetty.server.handler.ContextHandler r9, r10;
        org.eclipse.jetty.server.Handler[] $r6;
        int i0, i1;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r3;
        java.lang.String $r1, $r2, $r8;
        org.eclipse.jetty.server.Server $r4, $r5;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $r2 = staticinvoke <org.apache.cxf.transport.HttpUriMapper: java.lang.String getContextName(java.lang.String)>($r1);

        r9 = null;

        $r4 = r3.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        if $r4 == null goto label3;

        $r5 = r3.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ContextHandler;");

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r7 = $r6[i1];

        $z0 = r7 instanceof org.eclipse.jetty.server.handler.ContextHandler;

        if $z0 == 0 goto label2;

        r10 = (org.eclipse.jetty.server.handler.ContextHandler) r7;

        $r8 = virtualinvoke r10.<org.eclipse.jetty.server.handler.ContextHandler: java.lang.String getContextPath()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        r9 = r10;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r9;
    }

    protected void retrieveListenerFactory()
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r1, $r23;
        boolean $z0, $z1;
        java.util.logging.Logger $r5, $r27;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r10, $r11, $r14, $r15, $r17, $r18, $r19, $r20, $r26, $r28, $r30, $r31, $r32, $r33;
        int $i0, $i1, $i2;
        java.lang.String $r9, $r12, $r21, $r34;
        org.apache.cxf.transport.http_jetty.JettyConnectorFactory $r3, $r24;
        java.lang.RuntimeException $r13;
        org.eclipse.jetty.server.Connector $r2, $r16, $r22, $r25, $r29;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        if $r1 == null goto label2;

        $r22 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        if null == $r22 goto label1;

        $r25 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $z1 = $r25 instanceof org.eclipse.jetty.server.ssl.SslConnector;

        if $z1 != 0 goto label1;

        $r27 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connector ");

        $r29 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for JettyServerEngine Port ");

        $i2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support SSL connections.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.util.logging.Logger: void warning(java.lang.String)>($r34);

        return;

     label1:
        $r23 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r24 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyConnectorFactory getHTTPSConnectorFactory(org.apache.cxf.configuration.jsse.TLSServerParameters)>($r23);

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyConnectorFactory connectorFactory> = $r24;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol> = "https";

        goto label4;

     label2:
        $r2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $z0 = $r2 instanceof org.eclipse.jetty.server.ssl.SslConnector;

        if $z0 == 0 goto label3;

        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connector ");

        $r16 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for JettyServerEngine Port ");

        $i1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support non-SSL connections.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label3:
        $r3 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyConnectorFactory getHTTPConnectorFactory()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.JettyConnectorFactory connectorFactory> = $r3;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol> = "http";

     label4:
        $r5 = <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configured port ");

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for \"");

        $r9 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String protocol>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

        return;
    }

    protected org.apache.cxf.transport.http_jetty.JettyConnectorFactory getHTTPConnectorFactory()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1 $r0;

        r1 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r0 = new org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1;

        specialinvoke $r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1: void <init>(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine)>(r1);

        return $r0;
    }

    protected org.apache.cxf.transport.http_jetty.JettyConnectorFactory getHTTPSConnectorFactory(org.apache.cxf.configuration.jsse.TLSServerParameters)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters r1;
        int $i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r2;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory $r0;

        r2 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        $r0 = new org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        $i0 = virtualinvoke r2.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int getMaxIdleTime()>();

        specialinvoke $r0.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: void <init>(org.apache.cxf.configuration.jsse.TLSServerParameters,int)>(r1, $i0);

        return $r0;
    }

    public void finalizeConfig() throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void retrieveListenerFactory()>();

        specialinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void checkConnectorPort()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean configFinalized> = 1;

        return;
    }

    private void checkConnectorPort() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11;
        java.io.IOException $r3;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10;
        org.eclipse.jetty.server.Connector $r1, $r2, $r6;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        if null == $r1 goto label1;

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $i1 = interfaceinvoke $r2.<org.eclipse.jetty.server.Connector: int getPort()>();

        if $i0 == $i1 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Connector port ");

        $r6 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        $i2 = interfaceinvoke $r6.<org.eclipse.jetty.server.Connector: int getPort()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with the server engine port ");

        $i3 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label1:
        return;
    }

    protected void stop() throws java.lang.Exception
    {
        java.lang.Throwable $r6;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.eclipse.jetty.server.Connector $r2, $r3;
        org.eclipse.jetty.server.Server $r1, $r4, $r5, $r7, $r8;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        if $r1 == null goto label5;

     label1:
        $r2 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        interfaceinvoke $r2.<org.eclipse.jetty.server.Connector: void stop()>();

        $r3 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Connector connector>;

        interfaceinvoke $r3.<org.eclipse.jetty.server.Connector: void close()>();

     label2:
        $r4 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r4.<org.eclipse.jetty.server.Server: void stop()>();

        $r5 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r5.<org.eclipse.jetty.server.Server: void destroy()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server> = null;

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        $r7 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r7.<org.eclipse.jetty.server.Server: void stop()>();

        $r8 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server>;

        virtualinvoke $r8.<org.eclipse.jetty.server.Server: void destroy()>();

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.eclipse.jetty.server.Server server> = null;

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.configuration.jsse.TLSServerParameters r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters> = r1;

        $z0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: boolean configFinalized>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void retrieveListenerFactory()>();

     label1:
        return;
    }

    public org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.configuration.jsse.TLSServerParameters $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        return $r1;
    }

    public void setThreadingParameters(org.apache.cxf.transport.http_jetty.ThreadingParameters)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.transport.http_jetty.ThreadingParameters r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: org.apache.cxf.transport.http_jetty.ThreadingParameters;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters threadingParameters> = r1;

        return;
    }

    public boolean isSetThreadingParameters()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters threadingParameters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: org.apache.cxf.transport.http_jetty.ThreadingParameters threadingParameters>;

        return $r1;
    }

    public void setSendServerVersion(java.lang.Boolean)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter0: java.lang.Boolean;

        r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean sendServerVersion> = r1;

        return;
    }

    public java.lang.Boolean getSendServerVersion()
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.Boolean sendServerVersion>;

        return $r1;
    }

    static int access$000(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine)
    {
        int $i0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;

        r0 := @parameter0: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $i0 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int port>;

        return $i0;
    }

    static java.lang.String access$100(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine)
    {
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String host>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/JettyHTTPServerEngine;");

        <org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
