class org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1 extends java.lang.Object implements org.waveprotocol.wave.client.scheduler.Scheduler$Task
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0;

    void <init>(org.waveprotocol.wave.client.editor.event.CompositionEventHandler)
    {
        org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1 r0;
        org.waveprotocol.wave.client.editor.event.CompositionEventHandler r1;

        r0 := @this: org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.event.CompositionEventHandler;

        r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1 r0;
        java.lang.AssertionError $r7;
        org.waveprotocol.wave.client.editor.event.CompositionEventHandler$CompositionListener $r5;
        org.waveprotocol.wave.client.editor.event.CompositionEventHandler $r1, $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0>;

        $r1.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler: boolean delayAfterTextInput> = 0;

        $r2 = r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0>;

        $z0 = staticinvoke <org.waveprotocol.wave.client.editor.event.CompositionEventHandler: boolean access$000(org.waveprotocol.wave.client.editor.event.CompositionEventHandler)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = <org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0>;

        $z2 = staticinvoke <org.waveprotocol.wave.client.editor.event.CompositionEventHandler: boolean access$100(org.waveprotocol.wave.client.editor.event.CompositionEventHandler)>($r6);

        if $z2 == 1 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r3 = r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.event.CompositionEventHandler: boolean access$102(org.waveprotocol.wave.client.editor.event.CompositionEventHandler,boolean)>($r3, 0);

        $r4 = r0.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: org.waveprotocol.wave.client.editor.event.CompositionEventHandler this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.client.editor.event.CompositionEventHandler: org.waveprotocol.wave.client.editor.event.CompositionEventHandler$CompositionListener access$200(org.waveprotocol.wave.client.editor.event.CompositionEventHandler)>($r4);

        interfaceinvoke $r5.<org.waveprotocol.wave.client.editor.event.CompositionEventHandler$CompositionListener: void compositionEnd()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/event/CompositionEventHandler;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.event.CompositionEventHandler$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
