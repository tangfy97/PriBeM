public class com.sun.syndication.io.impl.DateParser extends java.lang.Object
{
    private static java.lang.String[] ADDITIONAL_MASKS;
    private static final java.lang.String[] RFC822_MASKS;
    private static final java.lang.String[] W3CDATETIME_MASKS;
    private static final java.lang.String[] masks;

    private void <init>()
    {
        com.sun.syndication.io.impl.DateParser r0;

        r0 := @this: com.sun.syndication.io.impl.DateParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.Date parseUsingMask(java.lang.String[], java.lang.String)
    {
        java.util.Date r9;
        java.text.ParsePosition $r4;
        java.text.SimpleDateFormat $r1;
        java.lang.String[] r0;
        java.lang.Exception $r5;
        java.util.Locale $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, r6, $r7, r8;

        r0 := @parameter0: java.lang.String[];

        r6 := @parameter1: java.lang.String;

        if r6 == null goto label1;

        $r7 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        r8 = $r7;

        r9 = null;

        i3 = 0;

     label3:
        if r9 != null goto label8;

        $i0 = lengthof r0;

        if i3 >= $i0 goto label8;

        $r1 = new java.text.SimpleDateFormat;

        $r3 = r0[i3];

        $r2 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r3, $r2);

        virtualinvoke $r1.<java.text.DateFormat: void setLenient(boolean)>(1);

     label4:
        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r9 = virtualinvoke $r1.<java.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r8, $r4);

        $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>();

        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i1 == $i2 goto label5;

        r9 = null;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

     label7:
        i3 = i3 + 1;

        goto label3;

     label8:
        return r9;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static java.util.Date parseRFC822(java.lang.String)
    {
        java.util.Date $r1;
        java.lang.String[] $r0;
        java.lang.StringBuffer $r5, $r6, $r7, $r9;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, r8;

        r8 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>(" UT");

        $i3 = (int) -1;

        if $i0 <= $i3 goto label1;

        $r2 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 3;

        $r3 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i1);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GMT");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r0 = <com.sun.syndication.io.impl.DateParser: java.lang.String[] RFC822_MASKS>;

        $r1 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseUsingMask(java.lang.String[],java.lang.String)>($r0, r8);

        return $r1;
    }

    public static java.util.Date parseW3CDateTime(java.lang.String)
    {
        java.util.Date $r4;
        java.lang.String[] $r3;
        java.lang.StringBuffer $r1, $r2, $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r19;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i9, $i11, $i13;
        java.lang.String $r5, $r6, $r12, r15, r16;
        boolean $z0;

        r15 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>("T");

        $i7 = (int) -1;

        if $i0 <= $i7 goto label5;

        $z0 = virtualinvoke r15.<java.lang.String: boolean endsWith(java.lang.String)>("Z");

        if $z0 == 0 goto label1;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $i3 = virtualinvoke r15.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $r12 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r13 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("+00:00");

        r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $i1 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String,int)>("+", $i0);

        i5 = $i1;

        $i9 = (int) -1;

        if $i1 != $i9 goto label2;

        i5 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String,int)>("-", $i0);

     label2:
        $i11 = (int) -1;

        if i5 <= $i11 goto label4;

        $r5 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        r16 = $r5;

        $i2 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>(",");

        $i13 = (int) -1;

        if $i2 <= $i13 goto label3;

        r16 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label3:
        $r6 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(i5);

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GMT");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r15 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        goto label6;

     label5:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T00:00GMT");

        r15 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $r3 = <com.sun.syndication.io.impl.DateParser: java.lang.String[] W3CDATETIME_MASKS>;

        $r4 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseUsingMask(java.lang.String[],java.lang.String)>($r3, r15);

        return $r4;
    }

    public static java.util.Date parseDate(java.lang.String)
    {
        java.util.Date $r1, $r2, r5;
        int $i0;
        java.lang.String[] $r3, $r4;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseW3CDateTime(java.lang.String)>(r0);

        r5 = $r1;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseRFC822(java.lang.String)>(r0);

        r5 = $r2;

        if $r2 != null goto label1;

        $r3 = <com.sun.syndication.io.impl.DateParser: java.lang.String[] ADDITIONAL_MASKS>;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label1;

        $r4 = <com.sun.syndication.io.impl.DateParser: java.lang.String[] ADDITIONAL_MASKS>;

        r5 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseUsingMask(java.lang.String[],java.lang.String)>($r4, r0);

     label1:
        return r5;
    }

    public static java.lang.String formatRFC822(java.util.Date)
    {
        java.util.Locale $r1;
        java.util.TimeZone $r2;
        java.util.Date r3;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r4;

        r3 := @parameter0: java.util.Date;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss \'GMT\'", $r1);

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r4 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        return $r4;
    }

    public static java.lang.String formatW3CDateTime(java.util.Date)
    {
        java.util.Locale $r1;
        java.util.TimeZone $r2;
        java.util.Date r3;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r4;

        r3 := @parameter0: java.util.Date;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'", $r1);

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r4 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1, $r2, $r3, $r4;
        com.sun.syndication.io.impl.PropertiesLoader $r0;

        $r0 = staticinvoke <com.sun.syndication.io.impl.PropertiesLoader: com.sun.syndication.io.impl.PropertiesLoader getPropertiesLoader()>();

        $r1 = virtualinvoke $r0.<com.sun.syndication.io.impl.PropertiesLoader: java.lang.String[] getTokenizedProperty(java.lang.String,java.lang.String)>("datetime.extra.masks", "|");

        <com.sun.syndication.io.impl.DateParser: java.lang.String[] ADDITIONAL_MASKS> = $r1;

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "EEE, dd MMM yy HH:mm:ss z";

        $r2[1] = "EEE, dd MMM yy HH:mm z";

        $r2[2] = "dd MMM yy HH:mm:ss z";

        $r2[3] = "dd MMM yy HH:mm z";

        <com.sun.syndication.io.impl.DateParser: java.lang.String[] RFC822_MASKS> = $r2;

        $r3 = newarray (java.lang.String)[19];

        $r3[0] = "yyyy-MM-dd\'T\'HH:mm:ss.SSSz";

        $r3[1] = "yyyy-MM-dd\'t\'HH:mm:ss.SSSz";

        $r3[2] = "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'";

        $r3[3] = "yyyy-MM-dd\'t\'HH:mm:ss.SSS\'z\'";

        $r3[4] = "yyyy-MM-dd\'T\'HH:mm:ssz";

        $r3[5] = "yyyy-MM-dd\'t\'HH:mm:ssz";

        $r3[6] = "yyyy-MM-dd\'T\'HH:mm:ssZ";

        $r3[7] = "yyyy-MM-dd\'t\'HH:mm:ssZ";

        $r3[8] = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

        $r3[9] = "yyyy-MM-dd\'t\'HH:mm:ss\'z\'";

        $r3[10] = "yyyy-MM-dd\'T\'HH:mmz";

        $r3[11] = "yyyy-MM\'T\'HH:mmz";

        $r3[12] = "yyyy\'T\'HH:mmz";

        $r3[13] = "yyyy-MM-dd\'t\'HH:mmz";

        $r3[14] = "yyyy-MM-dd\'T\'HH:mm\'Z\'";

        $r3[15] = "yyyy-MM-dd\'t\'HH:mm\'z\'";

        $r3[16] = "yyyy-MM-dd";

        $r3[17] = "yyyy-MM";

        $r3[18] = "yyyy";

        <com.sun.syndication.io.impl.DateParser: java.lang.String[] W3CDATETIME_MASKS> = $r3;

        $r4 = newarray (java.lang.String)[15];

        $r4[0] = "yyyy-MM-dd\'T\'HH:mm:ss.SSSz";

        $r4[1] = "yyyy-MM-dd\'t\'HH:mm:ss.SSSz";

        $r4[2] = "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'";

        $r4[3] = "yyyy-MM-dd\'t\'HH:mm:ss.SSS\'z\'";

        $r4[4] = "yyyy-MM-dd\'T\'HH:mm:ssz";

        $r4[5] = "yyyy-MM-dd\'t\'HH:mm:ssz";

        $r4[6] = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

        $r4[7] = "yyyy-MM-dd\'t\'HH:mm:ss\'z\'";

        $r4[8] = "yyyy-MM-dd\'T\'HH:mmz";

        $r4[9] = "yyyy-MM-dd\'t\'HH:mmz";

        $r4[10] = "yyyy-MM-dd\'T\'HH:mm\'Z\'";

        $r4[11] = "yyyy-MM-dd\'t\'HH:mm\'z\'";

        $r4[12] = "yyyy-MM-dd";

        $r4[13] = "yyyy-MM";

        $r4[14] = "yyyy";

        <com.sun.syndication.io.impl.DateParser: java.lang.String[] masks> = $r4;

        return;
    }
}
