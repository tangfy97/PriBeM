public abstract class com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin extends java.lang.Object implements com.hp.hpl.jena.reasoner.rulesys.Builtin
{
    public static final java.lang.String BASE_URI;

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getURI()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;

        r2 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://jena.hpl.hp.com/2003/RuleBuiltin/");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int getArgLength()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        return 0;
    }

    public void checkArgs(int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r2;
        com.hp.hpl.jena.reasoner.rulesys.BuiltinException $r1;
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r0;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r5, $r11;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        i1 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: int getArgLength()>();

        if $i0 <= 0 goto label1;

        if $i0 == i1 goto label1;

        $r1 = new com.hp.hpl.jena.reasoner.rulesys.BuiltinException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("builtin ");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments but saw ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.BuiltinException: void <init>(com.hp.hpl.jena.reasoner.rulesys.Builtin,com.hp.hpl.jena.reasoner.rulesys.RuleContext,java.lang.String)>(r0, r2, $r11);

        throw $r1;

     label1:
        return;
    }

    public boolean bodyCall(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r2;
        com.hp.hpl.jena.graph.Node[] r9;
        com.hp.hpl.jena.reasoner.rulesys.BuiltinException $r0;
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r1;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        r9 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r2 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.BuiltinException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("builtin ");

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not usable in rule bodies");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.BuiltinException: void <init>(com.hp.hpl.jena.reasoner.rulesys.Builtin,com.hp.hpl.jena.reasoner.rulesys.RuleContext,java.lang.String)>(r1, r2, $r8);

        throw $r0;
    }

    public void headAction(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r2;
        com.hp.hpl.jena.graph.Node[] r9;
        com.hp.hpl.jena.reasoner.rulesys.BuiltinException $r0;
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r1;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        r9 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r2 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.BuiltinException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("builtin ");

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not usable in rule heads");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.BuiltinException: void <init>(com.hp.hpl.jena.reasoner.rulesys.Builtin,com.hp.hpl.jena.reasoner.rulesys.RuleContext,java.lang.String)>(r1, r2, $r8);

        throw $r0;
    }

    public boolean isSafe()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        return 1;
    }

    public boolean isMonotonic()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        return 1;
    }

    public com.hp.hpl.jena.graph.Node getArg(int, com.hp.hpl.jena.graph.Node[], com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r0;
        com.hp.hpl.jena.graph.Node[] r2;
        com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin r5;
        int i0;
        com.hp.hpl.jena.graph.Node $r3, $r4;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r1;

        r5 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin;

        i0 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node[];

        r0 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.RuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment getEnv()>();

        $r3 = r2[i0];

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment: com.hp.hpl.jena.graph.Node getGroundVersion(com.hp.hpl.jena.graph.Node)>($r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: java.lang.String BASE_URI> = "http://jena.hpl.hp.com/2003/RuleBuiltin/";

        return;
    }
}
