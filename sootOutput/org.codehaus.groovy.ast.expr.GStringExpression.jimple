public class org.codehaus.groovy.ast.expr.GStringExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private java.lang.String verbatimText;
    private java.util.List strings;
    private java.util.List values;

    public void <init>(java.lang.String)
    {
        org.codehaus.groovy.ast.ClassNode $r4;
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.lang.String r3;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values> = $r2;

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.lang.String verbatimText> = r3;

        $r4 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode GSTRING_TYPE>;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void setType(org.codehaus.groovy.ast.ClassNode)>($r4);

        return;
    }

    public void <init>(java.lang.String, java.util.List, java.util.List)
    {
        java.util.List r4, r5;
        org.codehaus.groovy.ast.ClassNode $r6;
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.lang.String r3;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.List;

        r5 := @parameter2: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values> = $r2;

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.lang.String verbatimText> = r3;

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings> = r4;

        r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values> = r5;

        $r6 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode GSTRING_TYPE>;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void setType(org.codehaus.groovy.ast.ClassNode)>($r6);

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.GStringExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitGStringExpression(org.codehaus.groovy.ast.expr.GStringExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        java.util.List $r3, $r5, $r6, $r7;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r2;
        org.codehaus.groovy.ast.expr.GStringExpression $r0, r1;
        java.lang.String $r4;

        r1 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r2 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        $r0 = new org.codehaus.groovy.ast.expr.GStringExpression;

        $r4 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.lang.String verbatimText>;

        $r3 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        $r5 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List transformExpressions(java.util.List,org.codehaus.groovy.ast.expr.ExpressionTransformer)>($r3, r2);

        $r6 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        $r7 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List transformExpressions(java.util.List,org.codehaus.groovy.ast.expr.ExpressionTransformer)>($r6, r2);

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.GStringExpression: void <init>(java.lang.String,java.util.List,java.util.List)>($r4, $r5, $r7);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.Expression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.util.List $r5, $r8;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7, $r9, $r10;
        org.codehaus.groovy.ast.expr.GStringExpression r1;
        java.lang.String $r2, $r11;

        r1 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[strings: ");

        $r5 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" values: ");

        $r8 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String getText()
    {
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.lang.String verbatimText>;

        return $r1;
    }

    public java.util.List getStrings()
    {
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        return $r1;
    }

    public java.util.List getValues()
    {
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        return $r1;
    }

    public void addString(org.codehaus.groovy.ast.expr.ConstantExpression)
    {
        java.util.List $r2;
        org.codehaus.groovy.ast.expr.GStringExpression r1;
        org.codehaus.groovy.ast.expr.ConstantExpression r0;
        java.lang.NullPointerException $r3;

        r1 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.expr.ConstantExpression;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot add a null text expression");

        throw $r3;

     label1:
        $r2 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void addValue(org.codehaus.groovy.ast.expr.Expression)
    {
        java.util.List $r1, $r3, $r5;
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        int $i0;
        org.codehaus.groovy.ast.expr.Expression r2;
        org.codehaus.groovy.ast.expr.ConstantExpression $r4;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        r2 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        $r4 = <org.codehaus.groovy.ast.expr.ConstantExpression: org.codehaus.groovy.ast.expr.ConstantExpression EMPTY_STRING>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        $r3 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression getValue(int)
    {
        java.util.List $r1;
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        int i0;
        java.lang.Object $r2;
        org.codehaus.groovy.ast.expr.Expression $r3;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.codehaus.groovy.ast.expr.Expression) $r2;

        return $r3;
    }

    public boolean isConstantString()
    {
        org.codehaus.groovy.ast.expr.GStringExpression r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List values>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public org.codehaus.groovy.ast.expr.Expression asConstantString()
    {
        java.util.Iterator $r3;
        org.codehaus.groovy.ast.expr.ConstantExpression $r4, r7;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        org.codehaus.groovy.ast.expr.GStringExpression r1;
        java.lang.Object $r6, $r8;
        java.lang.String $r5;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.ast.expr.GStringExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.codehaus.groovy.ast.expr.GStringExpression: java.util.List strings>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.codehaus.groovy.ast.expr.ConstantExpression) $r6;

        $r8 = virtualinvoke r7.<org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.Object getValue()>();

        if $r8 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        $r4 = new org.codehaus.groovy.ast.expr.ConstantExpression;

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.codehaus.groovy.ast.expr.ConstantExpression: void <init>(java.lang.Object)>($r5);

        return $r4;
    }
}
