public class com.hp.hpl.jena.tdb.index.TupleIndexRecord extends com.hp.hpl.jena.tdb.index.TupleIndexBase
{
    private static final boolean Check;
    private com.hp.hpl.jena.tdb.index.RangeIndex index;
    private com.hp.hpl.jena.tdb.base.record.RecordFactory factory;
    private org.apache.jena.atlas.iterator.Transform transformToTuple;

    public void <init>(int, org.apache.jena.atlas.lib.ColumnMap, java.lang.String, com.hp.hpl.jena.tdb.base.record.RecordFactory, com.hp.hpl.jena.tdb.index.RangeIndex)
    {
        com.hp.hpl.jena.tdb.TDBException $r6;
        java.lang.Object[] $r7;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord$1 $r3;
        com.hp.hpl.jena.tdb.index.RangeIndex r5;
        java.lang.Integer $r8, $r9;
        int i0, $i1, $i2, $i3;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r4;
        java.lang.String r2, $r10;
        org.apache.jena.atlas.lib.ColumnMap r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.jena.atlas.lib.ColumnMap;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        r5 := @parameter4: com.hp.hpl.jena.tdb.index.RangeIndex;

        specialinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: void <init>(int,org.apache.jena.atlas.lib.ColumnMap,java.lang.String)>(i0, r1, r2);

        $r3 = new com.hp.hpl.jena.tdb.index.TupleIndexRecord$1;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.index.TupleIndexRecord$1: void <init>(com.hp.hpl.jena.tdb.index.TupleIndexRecord)>(r0);

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.iterator.Transform transformToTuple> = $r3;

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.base.record.RecordFactory factory> = r4;

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index> = r5;

        $i1 = virtualinvoke r4.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int keyLength()>();

        $i2 = i0 * 8;

        if $i1 == $i2 goto label1;

        $r6 = new com.hp.hpl.jena.tdb.TDBException;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        $i3 = virtualinvoke r4.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int keyLength()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Mismatch: TupleIndex of length %d is not comparative with a factory for key length %d", $r7);

        specialinvoke $r6.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        return;
    }

    protected boolean performAdd(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        com.hp.hpl.jena.tdb.base.record.Record $r4;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r3;
        com.hp.hpl.jena.tdb.index.RangeIndex $r5;
        org.apache.jena.atlas.lib.ColumnMap $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r3 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r2 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.tdb.base.record.Record record(com.hp.hpl.jena.tdb.base.record.RecordFactory,org.apache.jena.atlas.lib.Tuple,org.apache.jena.atlas.lib.ColumnMap)>($r3, r1, $r2);

        $r5 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.index.RangeIndex: boolean add(com.hp.hpl.jena.tdb.base.record.Record)>($r4);

        return $z0;
    }

    protected boolean performDelete(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        com.hp.hpl.jena.tdb.base.record.Record $r4;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r3;
        com.hp.hpl.jena.tdb.index.RangeIndex $r5;
        org.apache.jena.atlas.lib.ColumnMap $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r3 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r2 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: com.hp.hpl.jena.tdb.base.record.Record record(com.hp.hpl.jena.tdb.base.record.RecordFactory,org.apache.jena.atlas.lib.Tuple,org.apache.jena.atlas.lib.ColumnMap)>($r3, r1, $r2);

        $r5 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.index.RangeIndex: boolean delete(com.hp.hpl.jena.tdb.base.record.Record)>($r4);

        return $z0;
    }

    protected java.util.Iterator performFind(org.apache.jena.atlas.lib.Tuple)
    {
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: java.util.Iterator findOrScan(org.apache.jena.atlas.lib.Tuple)>(r1);

        return $r2;
    }

    final java.util.Iterator findOrScan(org.apache.jena.atlas.lib.Tuple)
    {
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: java.util.Iterator findWorker(org.apache.jena.atlas.lib.Tuple,boolean,boolean)>(r1, 1, 1);

        return $r2;
    }

    final java.util.Iterator findOrPartialScan(org.apache.jena.atlas.lib.Tuple)
    {
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: java.util.Iterator findWorker(org.apache.jena.atlas.lib.Tuple,boolean,boolean)>(r1, 1, 0);

        return $r2;
    }

    final java.util.Iterator findByIndex(org.apache.jena.atlas.lib.Tuple)
    {
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: java.util.Iterator findWorker(org.apache.jena.atlas.lib.Tuple,boolean,boolean)>(r1, 0, 0);

        return $r2;
    }

    private java.util.Iterator findWorker(org.apache.jena.atlas.lib.Tuple, boolean, boolean)
    {
        byte[] $r9, $r18, $r19;
        com.hp.hpl.jena.tdb.index.RangeIndex $r10, $r13, $r14;
        org.apache.jena.atlas.iterator.Transform $r11;
        org.apache.jena.atlas.iterator.NullIterator $r25;
        com.hp.hpl.jena.tdb.base.record.Record $r5, $r7;
        boolean z0, z1, $z2, $z3, z4;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r4, $r6;
        org.apache.jena.atlas.lib.Tuple r1, $r3;
        long $l2, $l3, $l6, $l8;
        com.hp.hpl.jena.tdb.store.NodeId r20, r22;
        int $i0, $i1, $i4, $i5, $i7, $i9, i10, i11, i12, $i14;
        java.util.Iterator $r12, r21, r23;
        org.apache.jena.atlas.iterator.SingletonIterator $r24;
        java.lang.Object $r8, $r17;
        org.apache.jena.atlas.lib.ColumnMap $r2;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r3 = virtualinvoke $r2.<org.apache.jena.atlas.lib.ColumnMap: org.apache.jena.atlas.lib.Tuple map(org.apache.jena.atlas.lib.Tuple)>(r1);

        i10 = 0;

        $i14 = (int) -2;

        i11 = $i14;

        z4 = 1;

        $r4 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.base.record.RecordFactory: com.hp.hpl.jena.tdb.base.record.Record createKeyOnly()>();

        $r6 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.tdb.base.record.RecordFactory: com.hp.hpl.jena.tdb.base.record.Record createKeyOnly()>();

        i12 = 0;

     label01:
        $i0 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if i12 >= $i0 goto label04;

        $r17 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i12);

        r20 = (com.hp.hpl.jena.tdb.store.NodeId) $r17;

        $z3 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)>(r20);

        if $z3 == 0 goto label02;

        z4 = 0;

        goto label03;

     label02:
        i10 = i10 + 1;

        if z4 == 0 goto label03;

        i11 = i12;

        $l6 = virtualinvoke r20.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $r18 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i7 = i12 * 8;

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setLong(long,byte[],int)>($l6, $r18, $i7);

        $l8 = virtualinvoke r20.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $r19 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i9 = i12 * 8;

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setLong(long,byte[],int)>($l8, $r19, $i9);

     label03:
        i12 = i12 + 1;

        goto label01;

     label04:
        $i1 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if i10 != $i1 goto label06;

        $r14 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $z2 = interfaceinvoke $r14.<com.hp.hpl.jena.tdb.index.RangeIndex: boolean contains(com.hp.hpl.jena.tdb.base.record.Record)>($r5);

        if $z2 == 0 goto label05;

        $r24 = new org.apache.jena.atlas.iterator.SingletonIterator;

        specialinvoke $r24.<org.apache.jena.atlas.iterator.SingletonIterator: void <init>(java.lang.Object)>($r3);

        return $r24;

     label05:
        $r25 = new org.apache.jena.atlas.iterator.NullIterator;

        specialinvoke $r25.<org.apache.jena.atlas.iterator.NullIterator: void <init>()>();

        return $r25;

     label06:
        if i11 >= 0 goto label08;

        if z1 != 0 goto label07;

        return null;

     label07:
        $r13 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        r21 = interfaceinvoke $r13.<com.hp.hpl.jena.tdb.index.RangeIndex: java.util.Iterator iterator()>();

        goto label09;

     label08:
        $r8 = virtualinvoke $r3.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i11);

        r22 = (com.hp.hpl.jena.tdb.store.NodeId) $r8;

        $l2 = virtualinvoke r22.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $l3 = $l2 + 1L;

        $r9 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getKey()>();

        $i4 = i11 * 8;

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setLong(long,byte[],int)>($l3, $r9, $i4);

        $r10 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        r21 = interfaceinvoke $r10.<com.hp.hpl.jena.tdb.index.RangeIndex: java.util.Iterator iterator(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>($r5, $r7);

     label09:
        $r11 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.iterator.Transform transformToTuple>;

        $r12 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>(r21, $r11);

        r23 = $r12;

        $i5 = i10 - 1;

        if i11 >= $i5 goto label11;

        if z0 != 0 goto label10;

        return null;

     label10:
        r23 = specialinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: java.util.Iterator scan(java.util.Iterator,org.apache.jena.atlas.lib.Tuple)>($r12, r1);

     label11:
        return r23;
    }

    public java.util.Iterator all()
    {
        org.apache.jena.atlas.iterator.Transform $r3;
        java.util.Iterator $r2, $r4;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: java.util.Iterator iterator()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: org.apache.jena.atlas.iterator.Transform transformToTuple>;

        $r4 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>($r2, $r3);

        return $r4;
    }

    private java.util.Iterator scan(java.util.Iterator, org.apache.jena.atlas.lib.Tuple)
    {
        java.util.Iterator r3, $r4;
        org.apache.jena.atlas.lib.Tuple r2;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord$2 $r0;

        r1 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        r3 := @parameter0: java.util.Iterator;

        r2 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $r0 = new com.hp.hpl.jena.tdb.index.TupleIndexRecord$2;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord$2: void <init>(com.hp.hpl.jena.tdb.index.TupleIndexRecord,org.apache.jena.atlas.lib.Tuple)>(r1, r2);

        $r4 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator filter(java.util.Iterator,org.apache.jena.atlas.iterator.Filter)>(r3, $r0);

        return $r4;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: void close()>();

        return;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: void sync()>();

        return;
    }

    public final com.hp.hpl.jena.tdb.index.RangeIndex getRangeIndex()
    {
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        return $r1;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: boolean isEmpty()>();

        return $z0;
    }

    public void clear()
    {
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: void clear()>();

        return;
    }

    public long size()
    {
        long $l0;
        com.hp.hpl.jena.tdb.index.RangeIndex $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: com.hp.hpl.jena.tdb.index.RangeIndex index>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.RangeIndex: long size()>();

        return $l0;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.index.TupleIndexRecord: boolean Check> = 0;

        return;
    }
}
