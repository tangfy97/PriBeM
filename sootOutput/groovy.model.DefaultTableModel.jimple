public class groovy.model.DefaultTableModel extends javax.swing.table.AbstractTableModel
{
    private groovy.model.ValueModel rowModel;
    private groovy.model.ValueModel rowsModel;
    private groovy.model.DefaultTableModel$MyTableColumnModel columnModel;

    public void <init>(groovy.model.ValueModel)
    {
        groovy.model.ValueModel r1;
        groovy.model.ValueHolder $r2;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: groovy.model.ValueModel;

        $r2 = new groovy.model.ValueHolder;

        specialinvoke $r2.<groovy.model.ValueHolder: void <init>()>();

        specialinvoke r0.<groovy.model.DefaultTableModel: void <init>(groovy.model.ValueModel,groovy.model.ValueModel)>(r1, $r2);

        return;
    }

    public void <init>(groovy.model.ValueModel, groovy.model.ValueModel)
    {
        groovy.model.ValueModel r2, r3;
        groovy.model.DefaultTableModel r0;
        groovy.model.DefaultTableModel$MyTableColumnModel $r1;

        r0 := @this: groovy.model.DefaultTableModel;

        r3 := @parameter0: groovy.model.ValueModel;

        r2 := @parameter1: groovy.model.ValueModel;

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        $r1 = new groovy.model.DefaultTableModel$MyTableColumnModel;

        specialinvoke $r1.<groovy.model.DefaultTableModel$MyTableColumnModel: void <init>()>();

        r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel> = $r1;

        r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel> = r2;

        r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowsModel> = r3;

        return;
    }

    public java.util.List getColumnList()
    {
        groovy.model.DefaultTableModel$MyTableColumnModel $r1;
        java.util.List $r2;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $r2 = virtualinvoke $r1.<groovy.model.DefaultTableModel$MyTableColumnModel: java.util.List getColumnList()>();

        return $r2;
    }

    public javax.swing.table.TableColumnModel getColumnModel()
    {
        groovy.model.DefaultTableModel$MyTableColumnModel $r1;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        return $r1;
    }

    public groovy.model.DefaultTableColumn addPropertyColumn(java.lang.Object, java.lang.String, java.lang.Class)
    {
        groovy.model.ValueModel $r5;
        groovy.model.DefaultTableModel r0;
        groovy.model.DefaultTableColumn $r6;
        java.lang.Object r1;
        java.lang.Class r4;
        java.lang.String r3;
        groovy.model.PropertyModel $r2;

        r0 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class;

        $r2 = new groovy.model.PropertyModel;

        $r5 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        specialinvoke $r2.<groovy.model.PropertyModel: void <init>(groovy.model.ValueModel,java.lang.String,java.lang.Class)>($r5, r3, r4);

        $r6 = virtualinvoke r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableColumn addColumn(java.lang.Object,groovy.model.ValueModel)>(r1, $r2);

        return $r6;
    }

    public groovy.model.DefaultTableColumn addPropertyColumn(java.lang.Object, java.lang.String, java.lang.Class, boolean)
    {
        groovy.model.ValueModel $r5;
        groovy.model.DefaultTableColumn $r6;
        groovy.model.PropertyModel $r2;
        groovy.model.DefaultTableModel r0;
        java.lang.Object r1;
        java.lang.Class r4;
        java.lang.String r3;
        boolean z0;

        r0 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        $r2 = new groovy.model.PropertyModel;

        $r5 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        specialinvoke $r2.<groovy.model.PropertyModel: void <init>(groovy.model.ValueModel,java.lang.String,java.lang.Class,boolean)>($r5, r3, r4, z0);

        $r6 = virtualinvoke r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableColumn addColumn(java.lang.Object,groovy.model.ValueModel)>(r1, $r2);

        return $r6;
    }

    public groovy.model.DefaultTableColumn addClosureColumn(java.lang.Object, groovy.lang.Closure, groovy.lang.Closure, java.lang.Class)
    {
        groovy.model.ValueModel $r6;
        groovy.model.ClosureModel $r2;
        groovy.model.DefaultTableColumn $r7;
        groovy.lang.Closure r3, r4;
        groovy.model.DefaultTableModel r0;
        java.lang.Object r1;
        java.lang.Class r5;

        r0 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: groovy.lang.Closure;

        r4 := @parameter2: groovy.lang.Closure;

        r5 := @parameter3: java.lang.Class;

        $r2 = new groovy.model.ClosureModel;

        $r6 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        specialinvoke $r2.<groovy.model.ClosureModel: void <init>(groovy.model.ValueModel,groovy.lang.Closure,groovy.lang.Closure,java.lang.Class)>($r6, r3, r4, r5);

        $r7 = virtualinvoke r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableColumn addColumn(java.lang.Object,groovy.model.ValueModel)>(r1, $r2);

        return $r7;
    }

    public groovy.model.DefaultTableColumn addColumn(java.lang.Object, groovy.model.ValueModel)
    {
        groovy.model.ValueModel r2;
        groovy.model.DefaultTableModel r3;
        groovy.model.DefaultTableColumn $r0;
        java.lang.Object r1;

        r3 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: groovy.model.ValueModel;

        $r0 = new groovy.model.DefaultTableColumn;

        specialinvoke $r0.<groovy.model.DefaultTableColumn: void <init>(java.lang.Object,groovy.model.ValueModel)>(r1, r2);

        virtualinvoke r3.<groovy.model.DefaultTableModel: void addColumn(groovy.model.DefaultTableColumn)>($r0);

        return $r0;
    }

    public void addColumn(groovy.model.DefaultTableColumn)
    {
        groovy.model.DefaultTableModel r1;
        groovy.model.DefaultTableColumn r0;
        int $i0;
        groovy.model.DefaultTableModel$MyTableColumnModel $r2, $r3;

        r1 := @this: groovy.model.DefaultTableModel;

        r0 := @parameter0: groovy.model.DefaultTableColumn;

        $r2 = r1.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $i0 = virtualinvoke $r2.<groovy.model.DefaultTableModel$MyTableColumnModel: int getColumnCount()>();

        virtualinvoke r0.<groovy.model.DefaultTableColumn: void setModelIndex(int)>($i0);

        $r3 = r1.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        virtualinvoke $r3.<groovy.model.DefaultTableModel$MyTableColumnModel: void addColumn(javax.swing.table.TableColumn)>(r0);

        return;
    }

    public void removeColumn(groovy.model.DefaultTableColumn)
    {
        groovy.model.DefaultTableModel$MyTableColumnModel $r2;
        groovy.model.DefaultTableModel r0;
        groovy.model.DefaultTableColumn r1;

        r0 := @this: groovy.model.DefaultTableModel;

        r1 := @parameter0: groovy.model.DefaultTableColumn;

        $r2 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        virtualinvoke $r2.<groovy.model.DefaultTableModel$MyTableColumnModel: void removeColumn(javax.swing.table.TableColumn)>(r1);

        return;
    }

    public int getRowCount()
    {
        int $i0;
        java.util.List $r1;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = virtualinvoke r0.<groovy.model.DefaultTableModel: java.util.List getRows()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int getColumnCount()
    {
        int $i0;
        groovy.model.DefaultTableModel$MyTableColumnModel $r1;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $i0 = virtualinvoke $r1.<groovy.model.DefaultTableModel$MyTableColumnModel: int getColumnCount()>();

        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        javax.swing.table.TableColumn $r3;
        groovy.model.DefaultTableModel r0;
        int i0, $i1;
        groovy.model.DefaultTableModel$MyTableColumnModel $r1, $r2;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: groovy.model.DefaultTableModel;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $i1 = virtualinvoke $r1.<groovy.model.DefaultTableModel$MyTableColumnModel: int getColumnCount()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $r3 = virtualinvoke $r2.<groovy.model.DefaultTableModel$MyTableColumnModel: javax.swing.table.TableColumn getColumn(int)>(i0);

        $r4 = virtualinvoke $r3.<javax.swing.table.TableColumn: java.lang.Object getHeaderValue()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label3:
        return null;
    }

    public java.lang.Class getColumnClass(int)
    {
        groovy.model.ValueModel $r1;
        groovy.model.DefaultTableModel r0;
        int i0;
        java.lang.Class $r2;

        r0 := @this: groovy.model.DefaultTableModel;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel getColumnModel(int)>(i0);

        $r2 = interfaceinvoke $r1.<groovy.model.ValueModel: java.lang.Class getType()>();

        return $r2;
    }

    public boolean isCellEditable(int, int)
    {
        groovy.model.ValueModel $r1;
        groovy.model.DefaultTableModel r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: groovy.model.DefaultTableModel;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel getColumnModel(int)>(i0);

        $z0 = interfaceinvoke $r1.<groovy.model.ValueModel: boolean isEditable()>();

        return $z0;
    }

    public java.lang.Object getValueAt(int, int)
    {
        groovy.model.ValueModel $r5;
        javax.swing.table.TableColumn $r7;
        groovy.model.DefaultTableColumn r8;
        java.util.List $r1, $r3;
        groovy.model.DefaultTableModel r0;
        int i0, $i1, i2, $i3;
        groovy.model.DefaultTableModel$MyTableColumnModel $r2, $r6;
        java.lang.Object $r4, $r9;

        r0 := @this: groovy.model.DefaultTableModel;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<groovy.model.DefaultTableModel: java.util.List getRows()>();

        if i0 < 0 goto label1;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        if i2 < 0 goto label3;

        $r2 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $i3 = virtualinvoke $r2.<groovy.model.DefaultTableModel$MyTableColumnModel: int getColumnCount()>();

        if i2 < $i3 goto label4;

     label3:
        return null;

     label4:
        $r3 = virtualinvoke r0.<groovy.model.DefaultTableModel: java.util.List getRows()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        interfaceinvoke $r5.<groovy.model.ValueModel: void setValue(java.lang.Object)>($r4);

        $r6 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $r7 = virtualinvoke $r6.<groovy.model.DefaultTableModel$MyTableColumnModel: javax.swing.table.TableColumn getColumn(int)>(i2);

        r8 = (groovy.model.DefaultTableColumn) $r7;

        if $r4 == null goto label5;

        if r8 != null goto label6;

     label5:
        return null;

     label6:
        $r9 = virtualinvoke r8.<groovy.model.DefaultTableColumn: java.lang.Object getValue(java.lang.Object,int,int)>($r4, i0, i2);

        return $r9;
    }

    public void setValueAt(java.lang.Object, int, int)
    {
        groovy.model.ValueModel $r5;
        javax.swing.table.TableColumn $r7;
        groovy.model.DefaultTableColumn r8;
        java.util.List $r1, $r3;
        groovy.model.DefaultTableModel r0;
        int i0, $i1, i2, $i3;
        groovy.model.DefaultTableModel$MyTableColumnModel $r2, $r6;
        java.lang.Object $r4, r9;

        r0 := @this: groovy.model.DefaultTableModel;

        r9 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<groovy.model.DefaultTableModel: java.util.List getRows()>();

        if i0 < 0 goto label1;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return;

     label2:
        if i2 < 0 goto label3;

        $r2 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $i3 = virtualinvoke $r2.<groovy.model.DefaultTableModel$MyTableColumnModel: int getColumnCount()>();

        if i2 < $i3 goto label4;

     label3:
        return;

     label4:
        $r3 = virtualinvoke r0.<groovy.model.DefaultTableModel: java.util.List getRows()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        interfaceinvoke $r5.<groovy.model.ValueModel: void setValue(java.lang.Object)>($r4);

        $r6 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $r7 = virtualinvoke $r6.<groovy.model.DefaultTableModel$MyTableColumnModel: javax.swing.table.TableColumn getColumn(int)>(i2);

        r8 = (groovy.model.DefaultTableColumn) $r7;

        if $r4 == null goto label5;

        if r8 != null goto label6;

     label5:
        return;

     label6:
        virtualinvoke r8.<groovy.model.DefaultTableColumn: void setValue(java.lang.Object,java.lang.Object,int,int)>($r4, r9, i0, i2);

        return;
    }

    protected groovy.model.ValueModel getColumnModel(int)
    {
        groovy.model.ValueModel $r4;
        groovy.model.DefaultTableModel r0;
        javax.swing.table.TableColumn $r2;
        groovy.model.DefaultTableColumn r3;
        int i0;
        groovy.model.DefaultTableModel$MyTableColumnModel $r1;

        r0 := @this: groovy.model.DefaultTableModel;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.DefaultTableModel$MyTableColumnModel columnModel>;

        $r2 = virtualinvoke $r1.<groovy.model.DefaultTableModel$MyTableColumnModel: javax.swing.table.TableColumn getColumn(int)>(i0);

        r3 = (groovy.model.DefaultTableColumn) $r2;

        $r4 = virtualinvoke r3.<groovy.model.DefaultTableColumn: groovy.model.ValueModel getValueModel()>();

        return $r4;
    }

    protected java.util.List getRows()
    {
        groovy.model.ValueModel $r1;
        java.util.List $r3, $r4;
        groovy.model.DefaultTableModel r0;
        java.lang.Object $r2;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowsModel>;

        $r2 = interfaceinvoke $r1.<groovy.model.ValueModel: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r4;

     label1:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.util.List asList(java.lang.Object)>($r2);

        return $r3;
    }

    public groovy.model.ValueModel getRowModel()
    {
        groovy.model.ValueModel $r1;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowModel>;

        return $r1;
    }

    public groovy.model.ValueModel getRowsModel()
    {
        groovy.model.ValueModel $r1;
        groovy.model.DefaultTableModel r0;

        r0 := @this: groovy.model.DefaultTableModel;

        $r1 = r0.<groovy.model.DefaultTableModel: groovy.model.ValueModel rowsModel>;

        return $r1;
    }
}
