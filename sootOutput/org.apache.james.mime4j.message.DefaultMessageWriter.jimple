public class org.apache.james.mime4j.message.DefaultMessageWriter extends java.lang.Object implements org.apache.james.mime4j.dom.MessageWriter
{
    private static final byte[] CRLF;
    private static final byte[] DASHES;

    public void <init>()
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r0;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeBody(org.apache.james.mime4j.dom.Body, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.apache.james.mime4j.message.DefaultMessageWriter r4;
        org.apache.james.mime4j.dom.Message $r6;
        org.apache.james.mime4j.dom.Body r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.james.mime4j.dom.Multipart $r5;
        org.apache.james.mime4j.dom.SingleBody $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.dom.Body;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.james.mime4j.dom.Message;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.james.mime4j.dom.Message) r0;

        virtualinvoke r4.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>($r6, r2);

        goto label4;

     label1:
        $z1 = r0 instanceof org.apache.james.mime4j.dom.Multipart;

        if $z1 == 0 goto label2;

        $r5 = (org.apache.james.mime4j.dom.Multipart) r0;

        virtualinvoke r4.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeMultipart(org.apache.james.mime4j.dom.Multipart,java.io.OutputStream)>($r5, r2);

        goto label4;

     label2:
        $z2 = r0 instanceof org.apache.james.mime4j.dom.SingleBody;

        if $z2 == 0 goto label3;

        $r3 = (org.apache.james.mime4j.dom.SingleBody) r0;

        virtualinvoke $r3.<org.apache.james.mime4j.dom.SingleBody: void writeTo(java.io.OutputStream)>(r2);

        goto label4;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported body class");

        throw $r1;

     label4:
        return;
    }

    public void writeEntity(org.apache.james.mime4j.dom.Entity, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3, $r6;
        org.apache.james.mime4j.message.DefaultMessageWriter r2;
        org.apache.james.mime4j.dom.Body $r4;
        java.lang.IllegalArgumentException $r7, $r8;
        org.apache.james.mime4j.dom.Entity r0;
        java.lang.String $r5;
        org.apache.james.mime4j.dom.Header $r1;
        boolean z0;

        r2 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.dom.Entity;

        r3 := @parameter1: java.io.OutputStream;

        $r1 = interfaceinvoke r0.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Header getHeader()>();

        if $r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing header");

        throw $r8;

     label1:
        virtualinvoke r2.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeHeader(org.apache.james.mime4j.dom.Header,java.io.OutputStream)>($r1, r3);

        $r4 = interfaceinvoke r0.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Body getBody()>();

        if $r4 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing body");

        throw $r7;

     label2:
        z0 = $r4 instanceof org.apache.james.mime4j.dom.BinaryBody;

        $r5 = interfaceinvoke r0.<org.apache.james.mime4j.dom.Entity: java.lang.String getContentTransferEncoding()>();

        $r6 = virtualinvoke r2.<org.apache.james.mime4j.message.DefaultMessageWriter: java.io.OutputStream encodeStream(java.io.OutputStream,java.lang.String,boolean)>(r3, $r5, z0);

        virtualinvoke r2.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBody(org.apache.james.mime4j.dom.Body,java.io.OutputStream)>($r4, $r6);

        if $r6 == r3 goto label3;

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label3:
        return;
    }

    public void writeMessage(org.apache.james.mime4j.dom.Message, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        org.apache.james.mime4j.dom.Message r1;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r1 := @parameter0: org.apache.james.mime4j.dom.Message;

        r2 := @parameter1: java.io.OutputStream;

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>(r1, r2);

        return;
    }

    public void writeMultipart(org.apache.james.mime4j.dom.Multipart, java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r9, $r10, $r11, $r14, $r15, $r16, $r17;
        org.apache.james.mime4j.util.ByteSequence $r3, r22, r23, $r24, $r25;
        org.apache.james.mime4j.dom.Multipart r1;
        java.lang.String $r4, $r5, $r18, $r19;
        org.apache.james.mime4j.dom.field.ContentTypeField $r2;
        boolean $z0, $z1;
        java.io.OutputStream r8;
        java.util.Iterator $r7;
        org.apache.james.mime4j.message.DefaultMessageWriter r0;
        java.util.List $r6;
        org.apache.james.mime4j.message.MultipartImpl $r20, $r21;
        java.lang.Object $r12;
        org.apache.james.mime4j.dom.Entity r13;

        r0 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r1 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        r8 := @parameter1: java.io.OutputStream;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: org.apache.james.mime4j.dom.field.ContentTypeField getContentType(org.apache.james.mime4j.dom.Multipart)>(r1);

        $r3 = specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: org.apache.james.mime4j.util.ByteSequence getBoundary(org.apache.james.mime4j.dom.field.ContentTypeField)>($r2);

        $z0 = r1 instanceof org.apache.james.mime4j.message.MultipartImpl;

        if $z0 == 0 goto label01;

        $r20 = (org.apache.james.mime4j.message.MultipartImpl) r1;

        r22 = virtualinvoke $r20.<org.apache.james.mime4j.message.MultipartImpl: org.apache.james.mime4j.util.ByteSequence getPreambleRaw()>();

        $r21 = (org.apache.james.mime4j.message.MultipartImpl) r1;

        r23 = virtualinvoke $r21.<org.apache.james.mime4j.message.MultipartImpl: org.apache.james.mime4j.util.ByteSequence getEpilogueRaw()>();

        goto label06;

     label01:
        $r4 = interfaceinvoke r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getPreamble()>();

        if $r4 == null goto label02;

        $r19 = interfaceinvoke r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getPreamble()>();

        $r24 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r19);

        goto label03;

     label02:
        $r24 = null;

     label03:
        r22 = $r24;

        $r5 = interfaceinvoke r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getEpilogue()>();

        if $r5 == null goto label04;

        $r18 = interfaceinvoke r1.<org.apache.james.mime4j.dom.Multipart: java.lang.String getEpilogue()>();

        $r25 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r18);

        goto label05;

     label04:
        $r25 = null;

     label05:
        r23 = $r25;

     label06:
        if r22 == null goto label07;

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>(r22, r8);

        $r17 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r17);

     label07:
        $r6 = interfaceinvoke r1.<org.apache.james.mime4j.dom.Multipart: java.util.List getBodyParts()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r12 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.james.mime4j.dom.Entity) $r12;

        $r14 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r14);

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r3, r8);

        $r15 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r15);

        virtualinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeEntity(org.apache.james.mime4j.dom.Entity,java.io.OutputStream)>(r13, r8);

        $r16 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r16);

        goto label08;

     label09:
        $r9 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r9);

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>($r3, r8);

        $r10 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r10);

        $r11 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r11);

        if r23 == null goto label10;

        specialinvoke r0.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>(r23, r8);

     label10:
        return;
    }

    public void writeField(org.apache.james.mime4j.stream.Field, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r10;
        org.apache.james.mime4j.util.ByteSequence $r1, r9;
        org.apache.james.mime4j.message.DefaultMessageWriter r2;
        org.apache.james.mime4j.stream.Field r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r6, $r7, $r8;

        r2 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.stream.Field;

        r3 := @parameter1: java.io.OutputStream;

        $r1 = interfaceinvoke r0.<org.apache.james.mime4j.stream.Field: org.apache.james.mime4j.util.ByteSequence getRaw()>();

        r9 = $r1;

        if $r1 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r0.<org.apache.james.mime4j.stream.Field: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = interfaceinvoke r0.<org.apache.james.mime4j.stream.Field: java.lang.String getBody()>();

        if $r6 == null goto label1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String fold(java.lang.String,int)>($r7, 0);

        r9 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r8);

     label2:
        specialinvoke r2.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream)>(r9, r3);

        $r10 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r10);

        return;
    }

    public void writeHeader(org.apache.james.mime4j.dom.Header, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r3;
        java.util.Iterator $r1;
        org.apache.james.mime4j.message.DefaultMessageWriter r6;
        org.apache.james.mime4j.stream.Field r5;
        java.lang.Object $r4;
        org.apache.james.mime4j.dom.Header r0;
        boolean $z0;

        r6 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.dom.Header;

        r2 := @parameter1: java.io.OutputStream;

        $r1 = interfaceinvoke r0.<org.apache.james.mime4j.dom.Header: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.james.mime4j.stream.Field) $r4;

        virtualinvoke r6.<org.apache.james.mime4j.message.DefaultMessageWriter: void writeField(org.apache.james.mime4j.stream.Field,java.io.OutputStream)>(r5, r2);

        goto label1;

     label2:
        $r3 = <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    protected java.io.OutputStream encodeStream(java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException
    {
        java.io.OutputStream r1, $r2, $r3;
        org.apache.james.mime4j.message.DefaultMessageWriter r4;
        java.lang.String r0;
        boolean $z0, $z1, z2;

        r4 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r1 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        $z0 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isBase64Encoding(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.james.mime4j.codec.CodecUtil: java.io.OutputStream wrapBase64(java.io.OutputStream)>(r1);

        return $r3;

     label1:
        $z1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: boolean isQuotedPrintableEncoded(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <org.apache.james.mime4j.codec.CodecUtil: java.io.OutputStream wrapQuotedPrintable(java.io.OutputStream,boolean)>(r1, z2);

        return $r2;

     label2:
        return r1;
    }

    private org.apache.james.mime4j.dom.field.ContentTypeField getContentType(org.apache.james.mime4j.dom.Multipart)
    {
        org.apache.james.mime4j.message.DefaultMessageWriter r8;
        org.apache.james.mime4j.stream.Field $r3;
        java.lang.IllegalArgumentException $r5, $r6, $r7;
        org.apache.james.mime4j.dom.Multipart r0;
        org.apache.james.mime4j.dom.Entity $r1;
        org.apache.james.mime4j.dom.Header $r2;
        org.apache.james.mime4j.dom.field.ContentTypeField r4;

        r8 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.dom.Multipart;

        $r1 = interfaceinvoke r0.<org.apache.james.mime4j.dom.Multipart: org.apache.james.mime4j.dom.Entity getParent()>();

        if $r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing parent entity in multipart");

        throw $r7;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.james.mime4j.dom.Entity: org.apache.james.mime4j.dom.Header getHeader()>();

        if $r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing header in parent entity");

        throw $r6;

     label2:
        $r3 = interfaceinvoke $r2.<org.apache.james.mime4j.dom.Header: org.apache.james.mime4j.stream.Field getField(java.lang.String)>("Content-Type");

        r4 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r3;

        if r4 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content-Type field not specified");

        throw $r5;

     label3:
        return r4;
    }

    private org.apache.james.mime4j.util.ByteSequence getBoundary(org.apache.james.mime4j.dom.field.ContentTypeField)
    {
        org.apache.james.mime4j.util.ByteSequence $r2;
        org.apache.james.mime4j.message.DefaultMessageWriter r12;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r1, $r6, $r9, $r11;
        org.apache.james.mime4j.dom.field.ContentTypeField r0;

        r12 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.dom.field.ContentTypeField;

        $r1 = interfaceinvoke r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getBoundary()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multipart boundary not specified. Mime-Type: ");

        $r6 = interfaceinvoke r0.<org.apache.james.mime4j.dom.field.ContentTypeField: java.lang.String getMimeType()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Raw: ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label1:
        $r2 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r1);

        return $r2;
    }

    private void writeBytes(org.apache.james.mime4j.util.ByteSequence, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2, $r4;
        org.apache.james.mime4j.util.ByteSequence r0;
        org.apache.james.mime4j.message.DefaultMessageWriter r5;
        int $i0;
        org.apache.james.mime4j.util.ByteArrayBuffer r3;
        boolean $z0;

        r5 := @this: org.apache.james.mime4j.message.DefaultMessageWriter;

        r0 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        r1 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.james.mime4j.util.ByteArrayBuffer;

        if $z0 == 0 goto label1;

        r3 = (org.apache.james.mime4j.util.ByteArrayBuffer) r0;

        $r4 = virtualinvoke r3.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        $i0 = virtualinvoke r3.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.james.mime4j.util.ByteSequence: byte[] toByteArray()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

     label2:
        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;

        $r0 = newarray (byte)[2];

        $r0[0] = 13;

        $r0[1] = 10;

        <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] CRLF> = $r0;

        $r1 = newarray (byte)[2];

        $r1[0] = 45;

        $r1[1] = 45;

        <org.apache.james.mime4j.message.DefaultMessageWriter: byte[] DASHES> = $r1;

        return;
    }
}
