public class org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration extends org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
{
    public org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall;
    public org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters;

    public void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r1;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.CompilationResult;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r1);

        return;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r2;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,int)>(r1, r2, r3, 0);

        return;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r43;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r24, $r25, $r39;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r4, $r10, $r13, $r26, $r28, $r31, $r32, $r34, $r46, $r59;
        byte $b6, $b18;
        org.eclipse.jdt.internal.compiler.flow.FlowContext $r12;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] $r23, $r38;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r2, $r8, $r14, $r21, $r36, $r45, $r49, $r60;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r53;
        long $l4, $l5, $l16, $l17;
        java.util.ArrayList r54;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r52;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r16, $r17, $r18, $r33, $r35, $r48;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r9, $r19, $r20;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r29, $r30, $r56;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r5, $r27, $r47;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r11, $r44;
        org.eclipse.jdt.internal.compiler.ast.Statement r57;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r40, $r41, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        org.eclipse.jdt.internal.compiler.ast.Argument $r42;
        org.eclipse.jdt.internal.compiler.ast.ASTNode $r58;
        int $i0, i1, $i2, $i3, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i19, i20, i21, i22, i23, i24, i25, i26;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r15, $r22, $r37, $r50;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r51;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r7;
        org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r52 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r53 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        i1 := @parameter3: int;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int reachMode()>();

        virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(i1);

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r1 != null goto label02;

        goto label07;

     label02:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i3 = $i2 & 128;

        if $i3 == 0 goto label03;

        goto label07;

     label03:
        $z1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isUsed()>();

        if $z1 == 0 goto label04;

        goto label07;

     label04:
        $z2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z2 == 0 goto label05;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $l16 = $r50.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l17 = $l16 & 4503599627370496L;

        $b18 = $l17 cmp 0L;

        if $b18 != 0 goto label06;

        goto label07;

     label05:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $l4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l5 = $l4 & 48L;

        $b6 = $l5 cmp 16L;

        if $b6 == 0 goto label06;

        goto label07;

     label06:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedPrivateConstructor(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)>(r0);

     label07:
        $z9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean isRecursive(java.util.ArrayList)>(null);

        if $z9 == 0 goto label08;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void recursiveConstructorInvocation(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall)>($r48);

     label08:
        $r6 = new org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext;

        $r12 = r7.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowContext parent>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r9 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r12, r0, $r11, $r10, $r9);

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke r7.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: void checkInitializerExceptions(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r13, $r6, r53);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAnonymousType()>();

        if $z3 == 0 goto label09;

        r54 = $r6.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: java.util.ArrayList extendedExceptions>;

        if r54 == null goto label09;

        $i15 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        if $i15 <= 0 goto label09;

        $r44 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[$i15];

        virtualinvoke r54.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r44);

        $r45 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions> = $r44;

     label09:
        $r55 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r55 == null goto label12;

        i19 = 0;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        i20 = lengthof $r40;

        goto label11;

     label10:
        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r42 = $r41[i19];

        $r43 = $r42.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r43);

        i19 = i19 + 1;

     label11:
        if i19 < i20 goto label10;

     label12:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r16 == null goto label17;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i14 = $r33.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i14 != 3 goto label16;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r38 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] fields()>();

        i21 = 0;

        i22 = lengthof $r38;

        goto label15;

     label13:
        $r39 = $r38[i21];

        $z8 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z8 != 0 goto label14;

        virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r39);

     label14:
        i21 = i21 + 1;

     label15:
        if i21 < i22 goto label13;

     label16:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        r53 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r34, $r6, r53);

     label17:
        virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>($i0);

        $r56 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r56 == null goto label22;

        z10 = 0;

        i23 = 0;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i24 = lengthof $r29;

        goto label21;

     label18:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        r57 = $r30[i23];

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $z7 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r53, $r31, z10);

        if $z7 != 0 goto label19;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        r53 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r32, $r6, r53);

        goto label20;

     label19:
        z10 = 1;

     label20:
        i23 = i23 + 1;

     label21:
        if i23 < i24 goto label18;

     label22:
        $i7 = r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i8 = $i7 & 1;

        if $i8 != 0 goto label23;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i13 = $i12 | 64;

        r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits> = $i13;

     label23:
        virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(i1);

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r17 == null goto label29;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i9 = $r18.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i9 == 3 goto label29;

        $r19 = $r6.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnReturn>;

        $r20 = virtualinvoke r53.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r19);

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] fields()>();

        i25 = 0;

        i26 = lengthof $r23;

        goto label28;

     label24:
        $r24 = $r23[i25];

        $z4 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z4 != 0 goto label27;

        $z5 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z5 == 0 goto label27;

        $r25 = $r23[i25];

        $z6 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r25);

        if $z6 != 0 goto label27;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i11 = $i10 & 128;

        if $i11 == 0 goto label25;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r58 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        goto label26;

     label25:
        $r58 = r0;

     label26:
        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r24, $r58);

     label27:
        i25 = i25 + 1;

     label28:
        if i25 < i26 goto label24;

     label29:
        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void complainIfUnusedExceptionHandlers(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

        $r59 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r60 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r59.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void checkUnusedParameters(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r60);

     label30:
        goto label32;

     label31:
        $r51 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label32:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label08 to label30 with label31;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r4, $r10, $r18;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r3, $r8, $r14, $r22;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.ClassFile r1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r6, $r12, $r16, $r17, $r20;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r5, $r11, $r19;
        org.eclipse.jdt.core.compiler.CategorizedProblem[] $r7, $r13, $r21, r24, r25, r26;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream $r23;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r9, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.core.compiler.CategorizedProblem[] getProblems()>();

        $i0 = lengthof $r7;

        r24 = newarray (org.eclipse.jdt.core.compiler.CategorizedProblem)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r24, 0, $i0);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ClassFile: void addProblemConstructor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.core.compiler.CategorizedProblem[])>(r0, $r8, r24);

        return;

     label2:
        i5 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void internalGenerateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile)>(r2, r1);

     label3:
        goto label9;

     label4:
        $r15 := @caughtexception;

        $r17 = $r15.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r16 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE>;

        if $r17 != $r16 goto label8;

     label5:
        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset> = i5;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount>;

        $i4 = $i3 - 1;

        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount> = $i4;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resetInWideMode()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void internalGenerateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile)>(r2, r1);

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.core.compiler.CategorizedProblem[] getAllProblems()>();

        $i1 = lengthof $r13;

        r25 = newarray (org.eclipse.jdt.core.compiler.CategorizedProblem)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r25, 0, $i1);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ClassFile: void addProblemConstructor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.core.compiler.CategorizedProblem[],int)>(r0, $r14, r25, i5);

        goto label9;

     label8:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.core.compiler.CategorizedProblem[] getAllProblems()>();

        $i2 = lengthof $r21;

        r26 = newarray (org.eclipse.jdt.core.compiler.CategorizedProblem)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r26, 0, $i2);

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ClassFile: void addProblemConstructor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.core.compiler.CategorizedProblem[],int)>(r0, $r22, r26, i5);

     label9:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label2 to label3 with label4;
        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label5 to label6 with label7;
    }

    public void generateSyntheticFieldInitializationsIfNecessary(org.eclipse.jdt.internal.compiler.lookup.MethodScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r4, $r6, $r9, $r10;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r3, $r8;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r12;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r2, $r7;
        int i0, $i1, i2, i3, $i4, i5;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r1;

        r11 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r12 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r0;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticEnclosingInstances()>();

        i0 = 0;

        if $r2 != null goto label02;

        $i1 = 0;

        goto label03;

     label02:
        $i1 = lengthof $r2;

     label03:
        i2 = $i1;

        goto label06;

     label04:
        $r3 = $r2[i0];

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding matchingField>;

        if $r4 == null goto label05;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r3);

        $r6 = $r3.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding matchingField>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r6);

     label05:
        i0 = i0 + 1;

     label06:
        if i0 < i2 goto label04;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        i3 = 0;

        if $r7 != null goto label07;

        $i4 = 0;

        goto label08;

     label07:
        $i4 = lengthof $r7;

     label08:
        i5 = $i4;

        goto label11;

     label09:
        $r8 = $r7[i3];

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding matchingField>;

        if $r9 == null goto label10;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r8);

        $r10 = $r8.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding matchingField>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r10);

     label10:
        i3 = i3 + 1;

     label11:
        if i3 < i5 goto label09;

        return;
    }

    private void internalGenerateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r37;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r11, $r14, $r18, $r23, $r29, $r30, $r32, $r41, $r42, $r44, $r46;
        byte $b21, $b26, $b27, $b28;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r38;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2, $r3, $r4, $r5, $r9;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r20;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r45;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r47;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r19;
        long $l20;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r6;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r8;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r13, $r31, $r33, $r48;
        org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream $r16;
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r21, $r22, $r49;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r15, $r25, $r26, $r27;
        org.eclipse.jdt.internal.compiler.ast.Statement $r24;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r12, $r34, $r35;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z10, $z11, $z12;
        org.eclipse.jdt.internal.compiler.ast.Argument $r36;
        org.eclipse.jdt.internal.compiler.ClassFile r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r7;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r43;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i16, i17, i18, i19, i22, i23, i24, i25, $i29;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r10;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r39, $r40;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r50;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void generateMethodInfoHeader(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r2);

        i0 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: int generateMethodInfoAttribute(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r3);

        i14 = $i1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isNative()>();

        if $z0 != 0 goto label27;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z1 != 0 goto label27;

        r7 = r6.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        i2 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void generateCodeAttributeHeader()>();

        r8 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void reset(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.ClassFile)>(r1, r0);

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        r10 = $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z2 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z2 == 0 goto label01;

        $b28 = 2;

        $b27 = 2;

        $b26 = 2;

        goto label02;

     label01:
        $b28 = 0;

        $b27 = 0;

        $b26 = 0;

     label02:
        $i13 = 1 + $b26;

        i16 = $i13;

        $z3 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z3 == 0 goto label03;

        r45 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r10;

        $r42 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r43 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        $r42.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] extraSyntheticArguments> = $r43;

        $r44 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $i8 = r45.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: int enclosingInstancesSlotSize>;

        $i9 = $i8 + 1;

        $i10 = $i9 + $b28;

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void computeLocalVariablePositions(int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($i10, r8);

        $i11 = r45.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: int enclosingInstancesSlotSize>;

        i17 = $i13 + $i11;

        $i12 = r45.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: int outerLocalVariablesSlotSize>;

        i16 = i17 + $i12;

        goto label04;

     label03:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $i3 = 1 + $b27;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void computeLocalVariablePositions(int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($i3, r8);

     label04:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r12 == null goto label10;

        i18 = 0;

        $r34 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        i19 = lengthof $r34;

        goto label09;

     label05:
        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r36 = $r35[i18];

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addVisibleLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r37);

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationStartPC(int)>(0);

        $r38 = $r37.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r39 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r38 == $r39 goto label06;

        $r40 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r38 != $r40 goto label07;

     label06:
        i16 = i16 + 2;

        goto label08;

     label07:
        i16 = i16 + 1;

     label08:
        i18 = i18 + 1;

     label09:
        if i18 < i19 goto label05;

     label10:
        $r41 = r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void computeLocalVariablePositions(int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(i16, r8);

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r13 == null goto label11;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i7 = $r33.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i7 != 3 goto label11;

        $z7 = 0;

        goto label12;

     label11:
        $z7 = 1;

     label12:
        z8 = $z7;

        $r46 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l20 = $r47.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long targetJDK>;

        $b21 = $l20 cmp 3145728L;

        $i29 = (int) $b21;

        if $i29 < 0 goto label13;

        $z12 = 1;

        $z11 = 1;

        goto label14;

     label13:
        $z12 = 0;

        $z11 = 0;

     label14:
        z10 = $z11;

        if z8 == 0 goto label15;

        if $z12 == 0 goto label15;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void generateSyntheticFieldInitializationsIfNecessary(org.eclipse.jdt.internal.compiler.lookup.MethodScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r32, r8, r10);

     label15:
        $r48 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r48 == null goto label16;

        $r31 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r30 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r30, r8);

     label16:
        if z8 == 0 goto label21;

        if z10 != 0 goto label17;

        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void generateSyntheticFieldInitializationsIfNecessary(org.eclipse.jdt.internal.compiler.lookup.MethodScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r29, r8, r10);

     label17:
        $r25 = r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r25 == null goto label21;

        i22 = 0;

        $r26 = r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i23 = lengthof $r26;

        goto label20;

     label18:
        $r27 = r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r28 = $r27[i22];

        $z6 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z6 != 0 goto label19;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r41, r8);

     label19:
        i22 = i22 + 1;

     label20:
        if i22 < i23 goto label18;

     label21:
        $r49 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r49 == null goto label24;

        i24 = 0;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i25 = lengthof $r21;

        goto label23;

     label22:
        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r24 = $r22[i24];

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r23, r8);

        i24 = i24 + 1;

     label23:
        if i24 < i25 goto label22;

     label24:
        $z4 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean ignoreFurtherInvestigation>;

        if $z4 == 0 goto label25;

        $r50 = new org.eclipse.jdt.internal.compiler.problem.AbortMethod;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r50.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r20, null);

        throw $r50;

     label25:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i5 = $i4 & 64;

        if $i5 == 0 goto label26;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

     label26:
        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r14);

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bodyEnd>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(0, $i6);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void completeCodeAttribute(int)>(i2);

        i14 = $i1 + 1;

        $z5 = r8 instanceof org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream;

        if $z5 == 0 goto label27;

        if z8 == 0 goto label27;

        $r15 = r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r15 == null goto label27;

        $r16 = (org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream) r8;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream: void resetSecretLocals()>();

     label27:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void completeMethodInfo(int,int)>(i0, i14);

        return;
    }

    public boolean isConstructor()
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        return 1;
    }

    public boolean isDefaultConstructor()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isInitializationMethod()
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        return 1;
    }

    public boolean isRecursive(java.util.ArrayList)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r8;
        java.util.ArrayList $r15, r16;
        int $i0;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r4, $r7, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0, r14;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r2, $r3, $r5, $r6, $r10;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r13;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r16 := @parameter0: java.util.ArrayList;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r2 == null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r4 == null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: boolean isSuperAccess()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r13 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration declarationOf(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r12);

        r14 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r13;

        if r0 != r14 goto label3;

        return 1;

     label3:
        if r16 != null goto label4;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>(1);

        r16 = $r15;

        goto label6;

     label4:
        $i0 = virtualinvoke r16.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

        if $i0 < 0 goto label6;

        if $i0 != 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $z2 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean isRecursive(java.util.ArrayList)>(r16);

        return $z2;
    }

    public void parseStatements(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.parser.Parser r1;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.SuperReference: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall implicitSuperConstructorCall()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = $r4;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart>;

        $r5.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart> = $i2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd>;

        $r6.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceEnd> = $i3;

        return;

     label1:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.Parser: void parse(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration,boolean)>(r0, r2, 0);

        return;
    }

    public java.lang.StringBuffer printBody(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r3, $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r2, $r8;
        org.eclipse.jdt.internal.compiler.ast.Statement $r7;
        java.lang.StringBuffer r0, $r4;
        int i0, $i1, i2, $i3;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r2 == null goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>(i0, r0);

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r3 == null goto label4;

        i2 = 0;

        goto label3;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r7 = $r6[i2];

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>(i0, r0);

        i2 = i2 + 1;

     label3:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $i1 = lengthof $r5;

        if i2 < $i1 goto label2;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        if i0 != 0 goto label5;

        $i3 = 0;

        goto label6;

     label5:
        $i3 = i0 - 1;

     label6:
        $r4 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i3, r0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return r0;
    }

    public void resolveJavadoc()
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r8, $r10;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11, $i13;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r3, $r5, $r7, $r12;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r2 == null goto label2;

     label1:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void resolveJavadoc()>();

        goto label4;

     label2:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i1 = $i0 & 128;

        if $i1 != 0 goto label4;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r4 == null goto label4;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z0 != 0 goto label4;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i2 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        i9 = $i2 & 7;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.ClassScope classScope()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i3 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612250);

        $i11 = (int) -1;

        if $i3 == $i11 goto label4;

        if $r9 == null goto label3;

        $r13 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        i9 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int computeOuterMostVisibility(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>($r13, i9);

     label3:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i4 = $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i13 = (int) -8;

        $i5 = $i4 & $i13;

        $i8 = $i5 | i9;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissing(int,int,int,int)>($i7, $i6, $i3, $i8);

     label4:
        return;
    }

    public void resolveStatements()
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r8, $r14, $r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r1, $r7, $r9, $r13, $r19, $r21;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r6, $r16;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r20;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        long $l3, $l4;
        int $i0, $i1, $i2, i5, i6, $i7, $i8;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r5, $r17, $r18;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r10, $r11, $r12, $r15, $r23;
        char[] $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r4 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: char[] selector>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r3);

        if $z0 != 0 goto label1;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingReturnType(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

     label1:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r5 == null goto label4;

        i6 = 0;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i5 = lengthof $r17;

        goto label3;

     label2:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r20 = $r18[i6];

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r19);

        i6 = i6 + 1;

     label3:
        if i6 < i5 goto label2;

     label4:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r6 == null goto label5;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z1 != 0 goto label5;

        $l3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: long tagBits>;

        $l4 = $l3 | 4503599627370496L;

        $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: long tagBits> = $l4;

     label5:
        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r23 == null goto label8;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int id>;

        if $i0 != 1 goto label7;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i1 = $r11.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i1 == 3 goto label7;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i2 = $r12.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i2 != 2 goto label6;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotUseSuperInJavaLangObject(org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r15);

     label6:
        r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = null;

        goto label8;

     label7:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r9);

     label8:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int modifiers>;

        $i8 = $i7 & 16777216;

        if $i8 == 0 goto label9;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void methodNeedBody(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r0);

     label9:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void resolveStatements()>();

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r9, $r10, $r11;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r3, $r33;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r12, $r14, $r18, $r22, $r26, $r30, $r32;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r13;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r6, $r20, $r21;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r7, $r16, $r17;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.ast.Argument $r23;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r19;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r27;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r31;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r5, $r24, $r25;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r8, $r15;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label17;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r3 == null goto label01;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r32);

     label01:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r4 == null goto label04;

        $r28 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r28;

        i1 = 0;

        goto label03;

     label02:
        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r31 = $r29[i1];

        $r30 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r30);

        i1 = i1 + 1;

     label03:
        if i1 < i0 goto label02;

     label04:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r5 == null goto label07;

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i2 = lengthof $r24;

        i3 = 0;

        goto label06;

     label05:
        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r27 = $r25[i3];

        $r26 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r26);

        i3 = i3 + 1;

     label06:
        if i3 < i2 goto label05;

     label07:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if $r6 == null goto label10;

        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        i4 = lengthof $r20;

        i5 = 0;

        goto label09;

     label08:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r23 = $r21[i5];

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.Argument: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r22);

        i5 = i5 + 1;

     label09:
        if i5 < i4 goto label08;

     label10:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        if $r7 == null goto label13;

        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        i6 = lengthof $r16;

        i7 = 0;

        goto label12;

     label11:
        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r19 = $r17[i7];

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r18);

        i7 = i7 + 1;

     label12:
        if i7 < i6 goto label11;

     label13:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r8 == null goto label14;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r14);

     label14:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r9 == null goto label17;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i8 = lengthof $r10;

        i9 = 0;

        goto label16;

     label15:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r13 = $r11[i9];

        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r12);

        i9 = i9 + 1;

     label16:
        if i9 < i8 goto label15;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters()
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        return $r1;
    }
}
