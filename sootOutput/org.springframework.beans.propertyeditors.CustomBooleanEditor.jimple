public class org.springframework.beans.propertyeditors.CustomBooleanEditor extends java.beans.PropertyEditorSupport
{
    public static final java.lang.String VALUE_TRUE;
    public static final java.lang.String VALUE_FALSE;
    public static final java.lang.String VALUE_ON;
    public static final java.lang.String VALUE_OFF;
    public static final java.lang.String VALUE_YES;
    public static final java.lang.String VALUE_NO;
    public static final java.lang.String VALUE_1;
    public static final java.lang.String VALUE_0;
    private final java.lang.String trueString;
    private final java.lang.String falseString;
    private final boolean allowEmpty;

    public void <init>(boolean)
    {
        org.springframework.beans.propertyeditors.CustomBooleanEditor r0;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomBooleanEditor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void <init>(java.lang.String,java.lang.String,boolean)>(null, null, z0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r1, r2;
        org.springframework.beans.propertyeditors.CustomBooleanEditor r0;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomBooleanEditor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString> = r1;

        r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString> = r2;

        r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: boolean allowEmpty> = z0;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Boolean $r13, $r15, $r17, $r18;
        java.lang.String r0, r1, $r3, $r4, $r5, $r6, $r11, $r12, $r14, $r16;
        org.springframework.beans.propertyeditors.CustomBooleanEditor r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r2 := @this: org.springframework.beans.propertyeditors.CustomBooleanEditor;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        goto label02;

     label01:
        $r16 = null;

     label02:
        r1 = $r16;

        $z0 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: boolean allowEmpty>;

        if $z0 == 0 goto label03;

        $z11 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r16);

        if $z11 != 0 goto label03;

        virtualinvoke r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setValue(java.lang.Object)>(null);

        goto label10;

     label03:
        $r3 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString>;

        if $r3 == null goto label04;

        $r14 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString>;

        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);

        if $z10 == 0 goto label04;

        $r15 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setValue(java.lang.Object)>($r15);

        goto label10;

     label04:
        $r4 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString>;

        if $r4 == null goto label05;

        $r12 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString>;

        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z9 == 0 goto label05;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setValue(java.lang.Object)>($r13);

        goto label10;

     label05:
        $r5 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString>;

        if $r5 != null goto label07;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("on");

        if $z6 != 0 goto label06;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yes");

        if $z7 != 0 goto label06;

        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z8 == 0 goto label07;

     label06:
        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setValue(java.lang.Object)>($r17);

        goto label10;

     label07:
        $r6 = r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString>;

        if $r6 != null goto label09;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z1 != 0 goto label08;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("off");

        if $z2 != 0 goto label08;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");

        if $z3 != 0 goto label08;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z4 == 0 goto label09;

     label08:
        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setValue(java.lang.Object)>($r18);

        goto label10;

     label09:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid boolean value [");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label10:
        return;
    }

    public java.lang.String getAsText()
    {
        java.lang.Boolean $r1, $r3;
        java.lang.Object $r2, $r4;
        java.lang.String $r5, $r6, $r7, $r8;
        org.springframework.beans.propertyeditors.CustomBooleanEditor r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.propertyeditors.CustomBooleanEditor;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r6 = r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString>;

        if $r6 == null goto label1;

        $r7 = r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String trueString>;

        goto label2;

     label1:
        $r7 = "true";

     label2:
        return $r7;

     label3:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r4 = virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.Object getValue()>();

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label6;

        $r5 = r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString>;

        if $r5 == null goto label4;

        $r8 = r0.<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String falseString>;

        goto label5;

     label4:
        $r8 = "false";

     label5:
        return $r8;

     label6:
        return "";
    }

    public static void <clinit>()
    {
        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_0> = "0";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_1> = "1";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_NO> = "no";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_YES> = "yes";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_OFF> = "off";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_ON> = "on";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_FALSE> = "false";

        <org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String VALUE_TRUE> = "true";

        return;
    }
}
