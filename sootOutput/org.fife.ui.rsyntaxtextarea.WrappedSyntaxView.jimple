public class org.fife.ui.rsyntaxtextarea.WrappedSyntaxView extends javax.swing.text.BoxView implements javax.swing.text.TabExpander, org.fife.ui.rsyntaxtextarea.RSTAView
{
    boolean widthChanging;
    int tabBase;
    int tabSize;
    private javax.swing.text.Segment s;
    private javax.swing.text.Segment drawSeg;
    private java.awt.Rectangle tempRect;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host;
    private java.awt.FontMetrics metrics;
    private static final int MIN_WIDTH;

    public void <init>(javax.swing.text.Element)
    {
        java.awt.Rectangle $r4;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.Segment $r2, $r3;
        javax.swing.text.Element r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: javax.swing.text.Element;

        specialinvoke r0.<javax.swing.text.BoxView: void <init>(javax.swing.text.Element,int)>(r1, 1);

        $r2 = new javax.swing.text.Segment;

        specialinvoke $r2.<javax.swing.text.Segment: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment s> = $r2;

        $r3 = new javax.swing.text.Segment;

        specialinvoke $r3.<javax.swing.text.Segment: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment drawSeg> = $r3;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect> = $r4;

        return;
    }

    protected int calculateBreakPosition(int, org.fife.ui.rsyntaxtextarea.Token, float)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        byte $b2, $b4;
        int i0, $i1, $i3, $i5, $i6, $i7, i8, $i9, $i10;
        java.awt.Container $r1;
        boolean $z0, $z1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        float $f0, f1, f2, f3;
        org.fife.ui.rsyntaxtextarea.Token r3, r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        r3 := @parameter1: org.fife.ui.rsyntaxtextarea.Token;

        f1 := @parameter2: float;

        i8 = i0;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getWidth()>();

        f2 = (float) $i1;

        $b2 = f2 cmpl 2.14748365E9F;

        if $b2 != 0 goto label1;

        f2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: float getPreferredSpan(int)>(0);

     label1:
        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f2, 20.0F);

        r4 = r3;

     label2:
        if r4 == null goto label7;

        $z0 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label7;

        $f0 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Token: float getWidth(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float)>(r2, r0, f1);

        $b4 = $f0 cmpl f3;

        $i10 = (int) $b4;

        if $i10 <= 0 goto label6;

        if i8 != i0 goto label3;

        $i7 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Token: int getOffsetBeforeX(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float,float)>(r2, r0, 0.0F, f3);

        return $i7;

     label3:
        $z1 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Token: boolean isWhitespace()>();

        if $z1 == 0 goto label4;

        $i6 = r4.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i9 = i8 + $i6;

        goto label5;

     label4:
        $i9 = i8;

     label5:
        return $i9;

     label6:
        f3 = f3 - $f0;

        f1 = f1 + $f0;

        $i5 = r4.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        i8 = i8 + $i5;

        r4 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label2;

     label7:
        $i3 = i8 + 1;

        return $i3;
    }

    public void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        javax.swing.text.ViewFactory r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateChildren(javax.swing.event.DocumentEvent,java.awt.Shape)>(r1, r2);

        return;
    }

    private void childAllocation2(int, int, java.awt.Rectangle)
    {
        java.awt.Rectangle r0;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r1;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;

        r1 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        r0 := @parameter2: java.awt.Rectangle;

        $i1 = r0.<java.awt.Rectangle: int x>;

        $i2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getOffset(int,int)>(0, i0);

        $i3 = $i1 + $i2;

        r0.<java.awt.Rectangle: int x> = $i3;

        $i5 = r0.<java.awt.Rectangle: int y>;

        $i6 = $i5 + i4;

        r0.<java.awt.Rectangle: int y> = $i6;

        $i7 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(0, i0);

        r0.<java.awt.Rectangle: int width> = $i7;

        $i8 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(1, i0);

        r0.<java.awt.Rectangle: int height> = $i8;

        return;
    }

    protected void drawView(java.awt.Graphics2D, java.awt.Rectangle, javax.swing.text.View, int, int)
    {
        java.awt.Color $r15;
        org.fife.ui.rsyntaxtextarea.DefaultToken $r19;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Font $r17;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r12, $r14, $r16, $r18, $r21, $r22, $r23;
        javax.swing.text.Highlighter $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r6;
        javax.swing.text.View r8;
        float $f0, $f1, $f2, f3;
        javax.swing.text.Document $r5;
        java.awt.Rectangle r0;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r1;
        java.awt.Graphics2D r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24;
        javax.swing.text.LayeredHighlighter r4;
        javax.swing.text.Segment $r9, $r10, $r20;
        javax.swing.text.Element $r7;
        org.fife.ui.rsyntaxtextarea.Token $r11, r24;

        r1 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r13 := @parameter0: java.awt.Graphics2D;

        r0 := @parameter1: java.awt.Rectangle;

        r8 := @parameter2: javax.swing.text.View;

        i7 := @parameter3: int;

        i22 := @parameter4: int;

        $i0 = r0.<java.awt.Rectangle: int x>;

        f3 = (float) $i0;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Highlighter getHighlighter()>();

        r4 = (javax.swing.text.LayeredHighlighter) $r3;

        $r5 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Document getDocument()>();

        r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r5;

        $r7 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Element getElement()>();

        $i1 = virtualinvoke r8.<javax.swing.text.View: int getStartOffset()>();

        i23 = $i1;

        $i2 = interfaceinvoke $r7.<javax.swing.text.Element: int getElementIndex(int)>($i1);

        $i3 = virtualinvoke r8.<javax.swing.text.View: int getEndOffset()>();

        $i4 = $i3 - 1;

        $r9 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment drawSeg>;

        specialinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void setSegment(int,int,javax.swing.text.Document,javax.swing.text.Segment)>($i1, $i4, r6, $r9);

        $r10 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment drawSeg>;

        $i5 = $r10.<javax.swing.text.Segment: int offset>;

        i6 = $i1 - $i5;

        $r11 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i2);

        r24 = $r11;

        if $r11 == null goto label1;

        $i21 = $r11.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i21 != 0 goto label1;

        $r23 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        virtualinvoke r4.<javax.swing.text.LayeredHighlighter: void paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)>(r13, $i1, $i3, r0, $r23, r1);

        return;

     label1:
        if r24 == null goto label7;

        $z1 = virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z1 == 0 goto label7;

        $i9 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int calculateBreakPosition(int,org.fife.ui.rsyntaxtextarea.Token,float)>(i23, r24, f3);

        $i10 = r0.<java.awt.Rectangle: int x>;

        f3 = (float) $i10;

        $r18 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        virtualinvoke r4.<javax.swing.text.LayeredHighlighter: void paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)>(r13, i23, $i9, r0, $r18, r1);

     label2:
        if r24 == null goto label3;

        $z3 = virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z3 == 0 goto label3;

        $i18 = r24.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i17 = r24.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i19 = $i18 + $i17;

        $i20 = $i19 - 1;

        if $i20 >= $i9 goto label3;

        $f2 = (float) i22;

        $r22 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        f3 = virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: float paint(java.awt.Graphics2D,float,float,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander)>(r13, f3, $f2, $r22, r1);

        r24 = virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label2;

     label3:
        if r24 == null goto label4;

        $z2 = virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z2 == 0 goto label4;

        $i11 = r24.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        if $i11 >= $i9 goto label4;

        i12 = r24.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $r19 = new org.fife.ui.rsyntaxtextarea.DefaultToken;

        $r20 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment drawSeg>;

        $i16 = i12 - i6;

        $i13 = $i9 - 1;

        $i15 = $i13 - i6;

        $i14 = r24.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        specialinvoke $r19.<org.fife.ui.rsyntaxtextarea.DefaultToken: void <init>(javax.swing.text.Segment,int,int,int,int)>($r20, $i16, $i15, i12, $i14);

        $f1 = (float) i22;

        $r21 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        virtualinvoke $r19.<org.fife.ui.rsyntaxtextarea.Token: float paint(java.awt.Graphics2D,float,float,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander)>(r13, f3, $f1, $r21, r1);

        virtualinvoke r24.<org.fife.ui.rsyntaxtextarea.Token: void makeStartAt(int)>($i9);

     label4:
        if $i9 != i23 goto label5;

        $i24 = $i3;

        goto label6;

     label5:
        $i24 = $i9;

     label6:
        i23 = $i24;

        i22 = i22 + i7;

        goto label1;

     label7:
        $r12 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z0 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getEOLMarkersVisible()>();

        if $z0 == 0 goto label8;

        $r14 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r15 = virtualinvoke $r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getForegroundForTokenType(int)>(21);

        virtualinvoke r13.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15);

        $r16 = r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r17 = virtualinvoke $r16.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getFontForTokenType(int)>(21);

        virtualinvoke r13.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r17);

        $i8 = i22 - i7;

        $f0 = (float) $i8;

        virtualinvoke r13.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>("\u00b6", f3, $f0);

     label8:
        return;
    }

    public java.awt.Shape getChildAllocation(int, java.awt.Shape)
    {
        java.awt.Shape r0, $r2;
        java.awt.Rectangle $r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        r0 := @parameter1: java.awt.Shape;

        if r0 == null goto label4;

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape getChildAllocationImpl(int,java.awt.Shape)>(i0, r0);

        if $r2 == null goto label3;

        $z0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 != 0 goto label3;

        $z1 = $r2 instanceof java.awt.Rectangle;

        if $z1 == 0 goto label1;

        $r3 = (java.awt.Rectangle) $r2;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label2:
        $i1 = $r3.<java.awt.Rectangle: int width>;

        if $i1 != 0 goto label3;

        $i2 = $r3.<java.awt.Rectangle: int height>;

        if $i2 != 0 goto label3;

        return null;

     label3:
        return $r2;

     label4:
        return null;
    }

    public java.awt.Shape getChildAllocationImpl(int, java.awt.Shape)
    {
        java.awt.Shape r1;
        java.awt.Rectangle $r2;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r7;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r4, $r5;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r6;
        int i0, $i1, $i2, i3, i4;
        java.awt.Container $r3;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Shape;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle getInsideAllocation(java.awt.Shape)>(r1);

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        $r4 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r3;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r4;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r6 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        i3 = $r2.<java.awt.Rectangle: int y>;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(1, i4);

        i3 = i3 + $i1;

        $r7 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>(i4);

        if $r7 == null goto label2;

        $z0 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getCollapsedLineCount()>();

        i4 = i4 + $i2;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void childAllocation2(int,int,java.awt.Rectangle)>(i0, i3, $r2);

        return $r2;
    }

    public float getMaximumSpan(int)
    {
        java.awt.FontMetrics $r1;
        int i0, $i1;
        float $f0, $f1, f2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateMetrics()>();

        $f0 = specialinvoke r0.<javax.swing.text.BoxView: float getPreferredSpan(int)>(i0);

        f2 = $f0;

        if i0 != 0 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.FontMetrics metrics>;

        $i1 = virtualinvoke $r1.<java.awt.FontMetrics: int charWidth(char)>(182);

        $f1 = (float) $i1;

        f2 = $f0 + $f1;

     label1:
        return f2;
    }

    public float getMinimumSpan(int)
    {
        java.awt.FontMetrics $r1;
        int i0, $i1;
        float $f0, $f1, f2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateMetrics()>();

        $f0 = specialinvoke r0.<javax.swing.text.BoxView: float getPreferredSpan(int)>(i0);

        f2 = $f0;

        if i0 != 0 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.FontMetrics metrics>;

        $i1 = virtualinvoke $r1.<java.awt.FontMetrics: int charWidth(char)>(182);

        $f1 = (float) $i1;

        f2 = $f0 + $f1;

     label1:
        return f2;
    }

    public float getPreferredSpan(int)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int i0, $i1, $i2, $i3, i4;
        java.awt.Container $r1;
        boolean $z0, $z1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r3, $r4, $r5;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r6;
        java.awt.FontMetrics $r7;
        float $f0, $f1, $f2, f3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateMetrics()>();

        if i0 != 0 goto label1;

        $f1 = specialinvoke r0.<javax.swing.text.BoxView: float getPreferredSpan(int)>(i0);

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.FontMetrics metrics>;

        $i3 = virtualinvoke $r7.<java.awt.FontMetrics: int charWidth(char)>(182);

        $f2 = (float) $i3;

        f3 = $f1 + $f2;

        goto label4;

     label1:
        f3 = specialinvoke r0.<javax.swing.text.BoxView: float getPreferredSpan(int)>(i0);

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        $r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z0 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i1 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r6 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        i4 = 0;

     label2:
        if i4 >= $i1 goto label4;

        $z1 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHidden(int)>(i4);

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(1, i4);

        $f0 = (float) $i2;

        f3 = f3 - $f0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return f3;
    }

    protected int getTabSize()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        java.lang.Object $r2;
        javax.swing.text.Document $r1;
        java.lang.Integer r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Document getDocument()>();

        $r2 = interfaceinvoke $r1.<javax.swing.text.Document: java.lang.Object getProperty(java.lang.Object)>("tabSize");

        r3 = (java.lang.Integer) $r2;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 5;

     label2:
        return $i0;
    }

    protected javax.swing.text.View getViewAtPoint(int, int, java.awt.Rectangle)
    {
        java.awt.Rectangle r1;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        java.awt.Container $r2;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r7;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r3, $r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r5;
        javax.swing.text.View $r6, $r8;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i13 := @parameter0: int;

        i7 := @parameter1: int;

        r1 := @parameter2: java.awt.Rectangle;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewCount()>();

        $i1 = r1.<java.awt.Rectangle: int y>;

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getOffset(int,int)>(1, 0);

        i14 = $i1 + $i2;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        $r3 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r2;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r3;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r5 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        i15 = 1;

     label1:
        if i15 >= $i0 goto label4;

        $i5 = i15 - 1;

        $i6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(1, $i5);

        $i8 = i14 + $i6;

        if i7 >= $i8 goto label2;

        $i11 = i15 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void childAllocation2(int,int,java.awt.Rectangle)>($i11, i14, r1);

        $i12 = i15 - 1;

        $r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>($i12);

        return $r8;

     label2:
        i14 = i14 + $i6;

        $i9 = i15 - 1;

        $r7 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>($i9);

        if $r7 == null goto label3;

        $z0 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z0 == 0 goto label3;

        $i10 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getCollapsedLineCount()>();

        i15 = i15 + $i10;

     label3:
        i15 = i15 + 1;

        goto label1;

     label4:
        $i3 = $i0 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void childAllocation2(int,int,java.awt.Rectangle)>($i3, i14, r1);

        $i4 = $i0 - 1;

        $r6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>($i4);

        return $r6;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        java.awt.Rectangle $r4;
        javax.swing.text.ViewFactory r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int $i0;
        javax.swing.text.View $r5;
        javax.swing.event.DocumentEvent r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateChildren(javax.swing.event.DocumentEvent,java.awt.Shape)>(r1, r2);

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle getInsideAllocation(java.awt.Shape)>(r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        $i0 = interfaceinvoke r1.<javax.swing.event.DocumentEvent: int getOffset()>();

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getViewAtPosition(int,java.awt.Rectangle)>($i0, $r4);

        if $r5 == null goto label3;

        virtualinvoke $r5.<javax.swing.text.View: void insertUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, $r4, r3);

     label3:
        return;
    }

    protected void loadChildren(javax.swing.text.ViewFactory)
    {
        javax.swing.text.ViewFactory r5;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.View[] r2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine $r3;
        int $i0, i1;
        javax.swing.text.Element $r1, $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r5 := @parameter0: javax.swing.text.ViewFactory;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Element getElement()>();

        $i0 = interfaceinvoke $r1.<javax.swing.text.Element: int getElementCount()>();

        if $i0 <= 0 goto label3;

        r2 = newarray (javax.swing.text.View)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = new org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        $r4 = interfaceinvoke $r1.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i1);

        specialinvoke $r3.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: void <init>(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView,javax.swing.text.Element)>(r0, $r4);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void replace(int,int,javax.swing.text.View[])>(0, 0, r2);

     label3:
        return;
    }

    public java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.Position$Bias r1, $r2;
        boolean $z0, z2, $z3, $z4;
        java.awt.Shape r4, $r5, $r6, $r8, r10;
        javax.swing.text.BadLocationException $r12;
        javax.swing.text.View $r3, $r7;
        float $f0, $f1;
        java.awt.Rectangle $r9;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        r4 := @parameter1: java.awt.Shape;

        r1 := @parameter2: javax.swing.text.Position$Bias;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 != 0 goto label1;

        $r9 = interfaceinvoke r4.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i10 = $r9.<java.awt.Rectangle: int width>;

        $f1 = (float) $i10;

        $i11 = $r9.<java.awt.Rectangle: int height>;

        $f0 = (float) $i11;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void setSize(float,float)>($f1, $f0);

     label1:
        $r2 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Backward>;

        if r1 != $r2 goto label2;

        $z4 = 1;

        $z3 = 1;

        goto label3;

     label2:
        $z4 = 0;

        $z3 = 0;

     label3:
        z2 = $z3;

        if $z4 == 0 goto label4;

        $i9 = i0 - 1;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        goto label5;

     label4:
        $i12 = i0;

     label5:
        i1 = $i12;

        if z2 == 0 goto label6;

        $i8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getStartOffset()>();

        if $i12 >= $i8 goto label6;

        return null;

     label6:
        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewIndexAtPosition(int)>(i1);

        $i15 = (int) -1;

        if $i2 == $i15 goto label9;

        $i3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewCount()>();

        if $i2 >= $i3 goto label9;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>($i2);

        if $r3 == null goto label9;

        $i4 = virtualinvoke $r3.<javax.swing.text.View: int getStartOffset()>();

        if i1 < $i4 goto label9;

        $i5 = virtualinvoke $r3.<javax.swing.text.View: int getEndOffset()>();

        if i1 >= $i5 goto label9;

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape getChildAllocation(int,java.awt.Shape)>($i2, r4);

        if $r5 != null goto label7;

        return null;

     label7:
        $r6 = virtualinvoke $r3.<javax.swing.text.View: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, $r5, r1);

        r10 = $r6;

        if $r6 != null goto label8;

        $i6 = virtualinvoke $r3.<javax.swing.text.View: int getEndOffset()>();

        if $i6 != i0 goto label8;

        i13 = $i2 + 1;

        $i7 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewCount()>();

        if i13 >= $i7 goto label8;

        $r7 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>(i13);

        $r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape getChildAllocation(int,java.awt.Shape)>(i13, r4);

        r10 = virtualinvoke $r7.<javax.swing.text.View: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, $r8, r1);

     label8:
        return r10;

     label9:
        $r12 = new javax.swing.text.BadLocationException;

        specialinvoke $r12.<javax.swing.text.BadLocationException: void <init>(java.lang.String,int)>("Position not represented by view", i0);

        throw $r12;
    }

    public java.awt.Shape modelToView(int, javax.swing.text.Position$Bias, int, javax.swing.text.Position$Bias, java.awt.Shape) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.Position$Bias r2, r4;
        boolean $z0, $z1, $z2;
        java.awt.Shape r1, $r3, r8;
        javax.swing.text.BadLocationException $r7;
        java.awt.Rectangle r5, $r6, $r9, $r10, $r11, $r12;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        r2 := @parameter1: javax.swing.text.Position$Bias;

        i1 := @parameter2: int;

        r4 := @parameter3: javax.swing.text.Position$Bias;

        r1 := @parameter4: java.awt.Shape;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, r1, r2);

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getEndOffset()>();

        if i1 != $i2 goto label07;

     label01:
        r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i1, r1, r4);

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        r8 = null;

     label04:
        if r8 != null goto label08;

        $z1 = r1 instanceof java.awt.Rectangle;

        if $z1 == 0 goto label05;

        $r9 = (java.awt.Rectangle) r1;

        goto label06;

     label05:
        $r9 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label06:
        $r6 = new java.awt.Rectangle;

        $i11 = $r9.<java.awt.Rectangle: int x>;

        $i10 = $r9.<java.awt.Rectangle: int width>;

        $i12 = $i11 + $i10;

        $i15 = $i12 - 1;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        $i13 = $r9.<java.awt.Rectangle: int height>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i15, $i14, 1, $i13);

        r8 = $r6;

        goto label08;

     label07:
        r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i1, r1, r4);

     label08:
        $r10 = interfaceinvoke $r3.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $z2 = r8 instanceof java.awt.Rectangle;

        if $z2 == 0 goto label09;

        $r11 = (java.awt.Rectangle) r8;

        goto label10;

     label09:
        $r11 = interfaceinvoke r8.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label10:
        r5 = $r11;

        $i4 = $r10.<java.awt.Rectangle: int y>;

        $i3 = $r11.<java.awt.Rectangle: int y>;

        if $i4 == $i3 goto label13;

        $z0 = r1 instanceof java.awt.Rectangle;

        if $z0 == 0 goto label11;

        $r12 = (java.awt.Rectangle) r1;

        goto label12;

     label11:
        $r12 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label12:
        $i8 = $r12.<java.awt.Rectangle: int x>;

        $r10.<java.awt.Rectangle: int x> = $i8;

        $i9 = $r12.<java.awt.Rectangle: int width>;

        $r10.<java.awt.Rectangle: int width> = $i9;

     label13:
        virtualinvoke $r10.<java.awt.Rectangle: void add(java.awt.Rectangle)>(r5);

        if i1 <= i0 goto label14;

        $i6 = $r10.<java.awt.Rectangle: int width>;

        $i5 = r5.<java.awt.Rectangle: int width>;

        $i7 = $i6 - $i5;

        $r10.<java.awt.Rectangle: int width> = $i7;

     label14:
        return $r10;

        catch javax.swing.text.BadLocationException from label01 to label02 with label03;
    }

    public float nextTabStop(float, int)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11;
        float f0, $f1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        f0 := @parameter0: float;

        i11 := @parameter1: int;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabSize>;

        if $i0 != 0 goto label1;

        return f0;

     label1:
        $i2 = (int) f0;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabBase>;

        $i4 = $i2 - $i1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabSize>;

        i5 = $i4 / $i3;

        $i9 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabBase>;

        $i7 = i5 + 1;

        $i6 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabSize>;

        $i8 = $i7 * $i6;

        $i10 = $i9 + $i8;

        $f1 = (float) $i10;

        return $f1;
    }

    public void paint(java.awt.Graphics, java.awt.Shape)
    {
        java.awt.Color $r20;
        boolean $z0, $z1, $z2;
        java.awt.Shape r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r5, $r6, $r7, $r8, $r19;
        java.awt.Graphics r3;
        javax.swing.text.View $r23;
        java.awt.Rectangle r1, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r22, $r24, $r26;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r2;
        short $s5, $s7;
        java.awt.Graphics2D $r25;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27;
        java.awt.Container $r4;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r18;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r9;

        r2 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r3 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: java.awt.Shape;

        $z0 = r0 instanceof java.awt.Rectangle;

        if $z0 == 0 goto label1;

        $r26 = (java.awt.Rectangle) r0;

        goto label2;

     label1:
        $r26 = interfaceinvoke r0.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label2:
        r1 = $r26;

        $i0 = $r26.<java.awt.Rectangle: int x>;

        r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabBase> = $i0;

        $r25 = (java.awt.Graphics2D) r3;

        $r4 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        $r5 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r4;

        r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r5;

        $r6 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i1 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getMaxAscent()>();

        $r7 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i2 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        $r8 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r9 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewCount()>();

        $i4 = $r26.<java.awt.Rectangle: int x>;

        $s5 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: short getLeftInset()>();

        $i26 = (int) $s5;

        $i24 = $i4 + $i26;

        $r10 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i6 = $r26.<java.awt.Rectangle: int y>;

        $s7 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: short getTopInset()>();

        $i27 = (int) $s7;

        $i8 = $i6 + $i27;

        $r10.<java.awt.Rectangle: int y> = $i8;

        $r11 = virtualinvoke r3.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        i25 = 0;

     label3:
        if i25 >= $i3 goto label6;

        $r12 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i9 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getOffset(int,int)>(0, i25);

        $i10 = $i24 + $i9;

        $r12.<java.awt.Rectangle: int x> = $i10;

        $r13 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i11 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(0, i25);

        $r13.<java.awt.Rectangle: int width> = $i11;

        $r14 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i12 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getSpan(int,int)>(1, i25);

        $r14.<java.awt.Rectangle: int height> = $i12;

        $r15 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $z1 = virtualinvoke $r15.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r11);

        if $z1 == 0 goto label4;

        $r23 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>(i25);

        $r24 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i22 = $r24.<java.awt.Rectangle: int y>;

        $i23 = $i22 + $i1;

        virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void drawView(java.awt.Graphics2D,java.awt.Rectangle,javax.swing.text.View,int,int)>($r25, r1, $r23, $i2, $i23);

     label4:
        $r16 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i14 = $r16.<java.awt.Rectangle: int y>;

        $r17 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i13 = $r17.<java.awt.Rectangle: int height>;

        $i15 = $i14 + $i13;

        $r16.<java.awt.Rectangle: int y> = $i15;

        $r18 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>(i25);

        if $r18 == null goto label5;

        $z2 = virtualinvoke $r18.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z2 == 0 goto label5;

        $i16 = virtualinvoke $r18.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getCollapsedLineCount()>();

        i25 = i25 + $i16;

        $r19 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r20 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: java.awt.Color getFoldedLineBottomColor(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)>($r19);

        if $r20 == null goto label5;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $r21 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i17 = $r21.<java.awt.Rectangle: int y>;

        $i21 = $i17 - 1;

        $i20 = r1.<java.awt.Rectangle: int width>;

        $r22 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle tempRect>;

        $i18 = $r22.<java.awt.Rectangle: int y>;

        $i19 = $i18 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i24, $i21, $i20, $i19);

     label5:
        i25 = i25 + 1;

        goto label3;

     label6:
        return;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        java.awt.Rectangle $r4;
        javax.swing.text.ViewFactory r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int $i0;
        javax.swing.text.View $r5;
        javax.swing.event.DocumentEvent r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateChildren(javax.swing.event.DocumentEvent,java.awt.Shape)>(r1, r2);

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle getInsideAllocation(java.awt.Shape)>(r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        $i0 = interfaceinvoke r1.<javax.swing.event.DocumentEvent: int getOffset()>();

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getViewAtPosition(int,java.awt.Rectangle)>($i0, $r4);

        if $r5 == null goto label3;

        virtualinvoke $r5.<javax.swing.text.View: void removeUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, $r4, r3);

     label3:
        return;
    }

    private void setSegment(int, int, javax.swing.text.Document, javax.swing.text.Segment)
    {
        int i0, i1, $i2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r3;
        javax.swing.text.Document r0;
        javax.swing.text.Segment r1;
        javax.swing.text.BadLocationException $r2;

        r3 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: javax.swing.text.Document;

        r1 := @parameter3: javax.swing.text.Segment;

     label1:
        $i2 = i1 - i0;

        interfaceinvoke r0.<javax.swing.text.Document: void getText(int,int,javax.swing.text.Segment)>(i0, $i2, r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label4:
        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public void setSize(float, float)
    {
        int $i0, $i1;
        float f0, f1;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateMetrics()>();

        $i0 = (int) f0;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getWidth()>();

        if $i0 == $i1 goto label1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 1);

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean widthChanging> = 1;

     label1:
        specialinvoke r0.<javax.swing.text.BoxView: void setSize(float,float)>(f0, f1);

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean widthChanging> = 0;

        return;
    }

    void updateChildren(javax.swing.event.DocumentEvent, java.awt.Shape)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.View[] r8;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine $r11;
        int $i0, $i1, $i2, $i3, i4;
        java.awt.Container $r10, $r13;
        javax.swing.event.DocumentEvent r2;
        java.awt.Shape r9;
        javax.swing.text.Element[] $r6, $r7;
        javax.swing.event.DocumentEvent$ElementChange $r3;
        javax.swing.event.DocumentEvent$EventType $r4, $r5;
        javax.swing.text.Element $r1, $r12;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r2 := @parameter0: javax.swing.event.DocumentEvent;

        r9 := @parameter1: java.awt.Shape;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Element getElement()>();

        $r3 = interfaceinvoke r2.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$ElementChange getChange(javax.swing.text.Element)>($r1);

        $r4 = interfaceinvoke r2.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$EventType getType()>();

        $r5 = <javax.swing.event.DocumentEvent$EventType: javax.swing.event.DocumentEvent$EventType CHANGE>;

        if $r4 != $r5 goto label1;

        $r13 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        virtualinvoke $r13.<java.awt.Container: void repaint()>();

        goto label4;

     label1:
        if $r3 == null goto label4;

        $r6 = interfaceinvoke $r3.<javax.swing.event.DocumentEvent$ElementChange: javax.swing.text.Element[] getChildrenRemoved()>();

        $r7 = interfaceinvoke $r3.<javax.swing.event.DocumentEvent$ElementChange: javax.swing.text.Element[] getChildrenAdded()>();

        $i0 = lengthof $r7;

        r8 = newarray (javax.swing.text.View)[$i0];

        i4 = 0;

     label2:
        $i1 = lengthof $r7;

        if i4 >= $i1 goto label3;

        $r11 = new org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        $r12 = $r7[i4];

        specialinvoke $r11.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: void <init>(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView,javax.swing.text.Element)>(r0, $r12);

        r8[i4] = $r11;

        i4 = i4 + 1;

        goto label2;

     label3:
        $i2 = interfaceinvoke $r3.<javax.swing.event.DocumentEvent$ElementChange: int getIndex()>();

        $i3 = lengthof $r6;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void replace(int,int,javax.swing.text.View[])>($i2, $i3, r8);

        if r9 == null goto label4;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 1);

        $r10 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        virtualinvoke $r10.<java.awt.Container: void repaint()>();

     label4:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void updateMetrics()>();

        return;
    }

    final void updateMetrics()
    {
        java.awt.Font $r2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        java.awt.FontMetrics $r3, $r4;
        int $i0, $i1, $i2;
        java.awt.Container $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Container getContainer()>();

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Font getFont()>();

        $r3 = virtualinvoke $r1.<java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r2);

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.FontMetrics metrics> = $r3;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getTabSize()>();

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.FontMetrics metrics>;

        $i1 = virtualinvoke $r4.<java.awt.FontMetrics: int charWidth(char)>(109);

        $i2 = $i0 * $i1;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int tabSize> = $i2;

        return;
    }

    public int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position$Bias[])
    {
        java.awt.Rectangle $r2, $r8;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10;
        boolean $z0, $z1;
        java.awt.Shape r1;
        javax.swing.text.Position$Bias[] r7;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r4, $r6;
        float f0, f1, $f2, $f3;
        javax.swing.text.View $r3, $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: java.awt.Shape;

        r7 := @parameter3: javax.swing.text.Position$Bias[];

        $i10 = (int) -1;

        i8 = $i10;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 != 0 goto label1;

        $r8 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i6 = $r8.<java.awt.Rectangle: int width>;

        $f3 = (float) $i6;

        $i7 = $r8.<java.awt.Rectangle: int height>;

        $f2 = (float) $i7;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void setSize(float,float)>($f3, $f2);

     label1:
        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Rectangle getInsideAllocation(java.awt.Shape)>(r1);

        $i1 = (int) f0;

        $i0 = (int) f1;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getViewAtPoint(int,int,java.awt.Rectangle)>($i1, $i0, $r2);

        if $r3 == null goto label2;

        i8 = virtualinvoke $r3.<javax.swing.text.View: int viewToModel(float,float,java.awt.Shape,javax.swing.text.Position$Bias[])>(f0, f1, $r2, r7);

     label2:
        $r4 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z1 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getViewCount()>();

        $i3 = $i2 - 1;

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.View getView(int)>($i3);

        if $r3 != $r5 goto label3;

        $i4 = virtualinvoke $r3.<javax.swing.text.View: int getEndOffset()>();

        $i5 = $i4 - 1;

        if i8 != $i5 goto label3;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        i8 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLastVisibleOffset()>();

     label3:
        return i8;
    }

    public int yForLine(java.awt.Rectangle, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle r1;
        int i0, $i1, $i2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.Element $r2, $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: java.awt.Rectangle;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Element getElement()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i0);

        $i1 = interfaceinvoke $r3.<javax.swing.text.Element: int getStartOffset()>();

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int yForLineContaining(java.awt.Rectangle,int)>(r1, $i1);

        return $i2;
    }

    public int yForLineContaining(java.awt.Rectangle, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle r1, r4;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.Position$Bias $r2;
        int i0, $i1, $i2, $i4, $i6;
        boolean $z0, $z1, $z2;
        java.awt.Shape $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r5, $r6, $r7;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r8;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r1 := @parameter0: java.awt.Rectangle;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean isAllocationValid()>();

        if $z0 == 0 goto label2;

        $r2 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, r1, $r2);

        r4 = (java.awt.Rectangle) $r3;

        if r4 == null goto label2;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z1 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i2 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineOfOffset(int)>(i0);

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r8 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $z2 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHidden(int)>($i2);

        if $z2 == 0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $i1 = r4.<java.awt.Rectangle: int y>;

        return $i1;

     label2:
        $i6 = (int) -1;

        return $i6;
    }

    static javax.swing.text.Segment access$000(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r0;
        javax.swing.text.Segment $r1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment s>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int MIN_WIDTH> = 20;

        return;
    }
}
