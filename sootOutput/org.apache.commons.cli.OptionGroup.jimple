public class org.apache.commons.cli.OptionGroup extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Map optionMap;
    private java.lang.String selected;
    private boolean required;

    public void <init>()
    {
        org.apache.commons.cli.OptionGroup r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.cli.OptionGroup: java.util.Map optionMap> = $r1;

        return;
    }

    public org.apache.commons.cli.OptionGroup addOption(org.apache.commons.cli.Option)
    {
        java.util.Map $r2;
        org.apache.commons.cli.OptionGroup r0;
        java.lang.String $r3;
        org.apache.commons.cli.Option r1;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        r1 := @parameter0: org.apache.commons.cli.Option;

        $r2 = r0.<org.apache.commons.cli.OptionGroup: java.util.Map optionMap>;

        $r3 = virtualinvoke r1.<org.apache.commons.cli.Option: java.lang.String getKey()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return r0;
    }

    public java.util.Collection getNames()
    {
        org.apache.commons.cli.OptionGroup r0;
        java.util.Set $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        $r1 = r0.<org.apache.commons.cli.OptionGroup: java.util.Map optionMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Collection getOptions()
    {
        org.apache.commons.cli.OptionGroup r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        $r1 = r0.<org.apache.commons.cli.OptionGroup: java.util.Map optionMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public void setSelected(org.apache.commons.cli.Option) throws org.apache.commons.cli.AlreadySelectedException
    {
        org.apache.commons.cli.AlreadySelectedException $r6;
        org.apache.commons.cli.OptionGroup r0;
        java.lang.String $r1, $r3, $r4, $r5;
        org.apache.commons.cli.Option r2;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        r2 := @parameter0: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.OptionGroup: java.lang.String selected>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.commons.cli.OptionGroup: java.lang.String selected>;

        $r5 = virtualinvoke r2.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        r0.<org.apache.commons.cli.OptionGroup: java.lang.String selected> = $r3;

        goto label3;

     label2:
        $r6 = new org.apache.commons.cli.AlreadySelectedException;

        specialinvoke $r6.<org.apache.commons.cli.AlreadySelectedException: void <init>(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)>(r0, r2);

        throw $r6;

     label3:
        return;
    }

    public java.lang.String getSelected()
    {
        org.apache.commons.cli.OptionGroup r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        $r1 = r0.<org.apache.commons.cli.OptionGroup: java.lang.String selected>;

        return $r1;
    }

    public void setRequired(boolean)
    {
        org.apache.commons.cli.OptionGroup r0;
        boolean z0;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.cli.OptionGroup: boolean required> = z0;

        return;
    }

    public boolean isRequired()
    {
        org.apache.commons.cli.OptionGroup r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.OptionGroup;

        $z0 = r0.<org.apache.commons.cli.OptionGroup: boolean required>;

        return $z0;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.lang.StringBuffer $r0;
        org.apache.commons.cli.OptionGroup r1;
        java.lang.Object $r5;
        java.lang.String $r4, $r7, $r8, $r9, $r10;
        org.apache.commons.cli.Option r6;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.cli.OptionGroup;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.cli.OptionGroup: java.util.Collection getOptions()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.cli.Option) $r5;

        $r7 = virtualinvoke r6.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        if $r7 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r10 = virtualinvoke r6.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--");

        $r8 = virtualinvoke r6.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = virtualinvoke r6.<org.apache.commons.cli.Option: java.lang.String getDescription()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label4:
        goto label1;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.commons.cli.OptionGroup: long serialVersionUID> = 1L;

        return;
    }
}
