public class org.apache.batik.svggen.ImageCacher$External extends org.apache.batik.svggen.ImageCacher
{
    private java.lang.String imageDir;
    private java.lang.String prefix;
    private java.lang.String suffix;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.svggen.ImageCacher$External r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.batik.svggen.ImageCacher$External;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.svggen.ImageCacher: void <init>()>();

        r0.<org.apache.batik.svggen.ImageCacher$External: java.lang.String imageDir> = r1;

        r0.<org.apache.batik.svggen.ImageCacher$External: java.lang.String prefix> = r2;

        r0.<org.apache.batik.svggen.ImageCacher$External: java.lang.String suffix> = r3;

        return;
    }

    java.lang.Object getCacheableData(java.io.ByteArrayOutputStream)
    {
        org.apache.batik.svggen.ImageCacher$External r1;
        java.io.ByteArrayOutputStream r0;

        r1 := @this: org.apache.batik.svggen.ImageCacher$External;

        r0 := @parameter0: java.io.ByteArrayOutputStream;

        return r0;
    }

    boolean imagesMatch(java.lang.Object, java.lang.Object) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        byte[] r3, $r6;
        org.apache.batik.svggen.ImageCacher$External r15;
        java.io.ByteArrayOutputStream $r5;
        java.lang.StringBuffer $r9, $r10, $r13;
        int $i0, $i1, $i2, i3;
        java.lang.String $r12, $r14;
        boolean $z0;
        org.apache.batik.svggen.SVGGraphics2DIOException $r8;
        java.io.IOException $r7;
        java.io.FileInputStream $r0;
        java.io.File $r2, $r11;
        java.lang.Object r1, r4;

        r15 := @this: org.apache.batik.svggen.ImageCacher$External;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

     label1:
        $r0 = new java.io.FileInputStream;

        $r2 = (java.io.File) r1;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $i0 = virtualinvoke $r0.<java.io.FileInputStream: int available()>();

        r3 = newarray (byte)[$i0];

        $r5 = (java.io.ByteArrayOutputStream) r4;

        $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        i3 = 0;

        goto label3;

     label2:
        $i1 = $i0 - i3;

        $i2 = virtualinvoke $r0.<java.io.FileInputStream: int read(byte[],int,int)>(r3, i3, $i1);

        i3 = i3 + $i2;

     label3:
        if i3 != $i0 goto label2;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r3, $r6);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not read image File ");

        $r11 = (java.io.File) r1;

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label6:
        return $z0;

        catch java.io.IOException from label1 to label4 with label5;
    }

    org.apache.batik.svggen.ImageCacher$ImageCacheEntry createEntry(int, java.lang.Object, int, int, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        org.apache.batik.svggen.ImageCacher$External r1;
        java.io.ByteArrayOutputStream $r14, $r15;
        org.apache.batik.svggen.ImageCacher$ImageCacheEntry $r16;
        java.lang.StringBuffer $r6, $r8, $r10, $r20, $r21, $r23;
        int i0, i1, i2;
        java.lang.String $r2, $r4, $r7, $r9, $r11, $r17, $r22, $r24;
        org.apache.batik.svggen.SVGIDGenerator $r3;
        boolean $z0;
        org.apache.batik.svggen.SVGGraphics2DIOException $r19;
        java.io.FileOutputStream $r12;
        java.io.IOException $r18;
        java.io.File $r5, r25;
        org.apache.batik.svggen.SVGGeneratorContext r0;
        java.lang.Object r13;

        r1 := @this: org.apache.batik.svggen.ImageCacher$External;

        i0 := @parameter0: int;

        r13 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: org.apache.batik.svggen.SVGGeneratorContext;

        r25 = null;

     label1:
        goto label3;

     label2:
        $r3 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r2 = r1.<org.apache.batik.svggen.ImageCacher$External: java.lang.String prefix>;

        $r4 = virtualinvoke $r3.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>($r2);

        $r5 = new java.io.File;

        $r7 = r1.<org.apache.batik.svggen.ImageCacher$External: java.lang.String imageDir>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r9 = r1.<org.apache.batik.svggen.ImageCacher$External: java.lang.String suffix>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, $r11);

        r25 = $r5;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        r25 = null;

     label3:
        if r25 == null goto label2;

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r25);

        $r14 = (java.io.ByteArrayOutputStream) r13;

        virtualinvoke $r14.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r12);

        $r15 = (java.io.ByteArrayOutputStream) r13;

        virtualinvoke $r15.<java.io.ByteArrayOutputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        $r19 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not write image File ");

        $r22 = virtualinvoke r25.<java.io.File: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label6:
        $r16 = new org.apache.batik.svggen.ImageCacher$ImageCacheEntry;

        $r17 = virtualinvoke r25.<java.io.File: java.lang.String getName()>();

        specialinvoke $r16.<org.apache.batik.svggen.ImageCacher$ImageCacheEntry: void <init>(int,java.lang.Object,java.lang.String)>(i0, r25, $r17);

        return $r16;

        catch java.io.IOException from label1 to label4 with label5;
    }
}
