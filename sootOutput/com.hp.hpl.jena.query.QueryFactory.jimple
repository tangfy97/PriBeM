public class com.hp.hpl.jena.query.QueryFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.query.QueryFactory r0;

        r0 := @this: com.hp.hpl.jena.query.QueryFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.query.Query create(java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultQuerySyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Query create(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Query create(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r0, $r4;
        com.hp.hpl.jena.query.Syntax $r3;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.query.Query;

        specialinvoke $r0.<com.hp.hpl.jena.query.Query: void <init>()>();

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultQuerySyntax>;

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query parse(com.hp.hpl.jena.query.Query,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r0, r1, r2, $r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.Query create(java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r0, $r4;
        com.hp.hpl.jena.query.Syntax r3;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r0 = new com.hp.hpl.jena.query.Query;

        specialinvoke $r0.<com.hp.hpl.jena.query.Query: void <init>()>();

        $r4 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query parse(com.hp.hpl.jena.query.Query,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r0, r1, r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.query.Query create()
    {
        com.hp.hpl.jena.query.Query $r0;

        $r0 = new com.hp.hpl.jena.query.Query;

        specialinvoke $r0.<com.hp.hpl.jena.query.Query: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.query.Query make()
    {
        com.hp.hpl.jena.query.Query $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create()>();

        return $r0;
    }

    public static com.hp.hpl.jena.query.Query create(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0, $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.query.Query cloneQuery()>();

        return $r1;
    }

    public static com.hp.hpl.jena.query.Query parse(com.hp.hpl.jena.query.Query, java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.UnsupportedOperationException $r5;
        com.hp.hpl.jena.query.Query r0, $r14;
        com.hp.hpl.jena.query.Syntax r12;
        com.hp.hpl.jena.n3.IRIResolver $r2, $r4;
        com.hp.hpl.jena.sparql.lang.SPARQLParser $r1;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r3, $r9, r11, r13;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        r3 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r12 := @parameter3: com.hp.hpl.jena.query.Syntax;

        if r12 != null goto label1;

        r12 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.query.Syntax getSyntax()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.query.Query: void setSyntax(com.hp.hpl.jena.query.Syntax)>(r12);

     label2:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.lang.SPARQLParser: com.hp.hpl.jena.sparql.lang.SPARQLParser createParser(com.hp.hpl.jena.query.Syntax)>(r12);

        if $r1 != null goto label3;

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized syntax for parsing: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.n3.IRIResolver getResolver()>();

        if $r2 != null goto label8;

     label4:
        r13 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String chooseBaseURI(java.lang.String)>(r11);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        r13 = "http://localhost/defaultBase#";

     label7:
        $r4 = new com.hp.hpl.jena.n3.IRIResolver;

        specialinvoke $r4.<com.hp.hpl.jena.n3.IRIResolver: void <init>(java.lang.String)>(r13);

        virtualinvoke r0.<com.hp.hpl.jena.query.Query: void setResolver(com.hp.hpl.jena.n3.IRIResolver)>($r4);

     label8:
        $r14 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.lang.SPARQLParser: com.hp.hpl.jena.query.Query parse(com.hp.hpl.jena.query.Query,java.lang.String)>(r0, r3);

        return $r14;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    static boolean knownParserSyntax(com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.sparql.lang.SPARQLParserRegistry $r0;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.query.Syntax;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.lang.SPARQLParserRegistry: com.hp.hpl.jena.sparql.lang.SPARQLParserRegistry get()>();

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.SPARQLParserRegistry: boolean containsFactory(com.hp.hpl.jena.query.Syntax)>(r1);

        return $z0;
    }

    public static com.hp.hpl.jena.query.Query read(java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query read(java.lang.String,com.hp.hpl.jena.util.FileManager,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, null, null);

        return $r1;
    }

    public static com.hp.hpl.jena.query.Query read(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query read(java.lang.String,com.hp.hpl.jena.util.FileManager,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1, null);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Query read(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query read(java.lang.String,com.hp.hpl.jena.util.FileManager,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, null, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Query read(java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r3;
        com.hp.hpl.jena.query.Syntax r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query read(java.lang.String,com.hp.hpl.jena.util.FileManager,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.query.Query read(java.lang.String, com.hp.hpl.jena.util.FileManager, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.query.Syntax r5;
        com.hp.hpl.jena.util.FileManager r3;
        java.lang.String r0, $r1, r4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.util.FileManager;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: com.hp.hpl.jena.query.Syntax;

        if r3 != null goto label1;

        r3 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

     label1:
        $r1 = virtualinvoke r3.<com.hp.hpl.jena.util.FileManager: java.lang.String readWholeFileAsUTF8(java.lang.String)>(r0);

        if r4 != null goto label2;

        r4 = r0;

     label2:
        if r5 != null goto label3;

        r5 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String)>(r0);

     label3:
        $r2 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r1, r4, r5);

        return $r2;
    }

    public static com.hp.hpl.jena.sparql.syntax.Element createElement(java.lang.String)
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.lang.ParserARQ: com.hp.hpl.jena.sparql.syntax.Element parseElement(java.lang.String)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.syntax.Template createTemplate(java.lang.String)
    {
        com.hp.hpl.jena.sparql.syntax.Template $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.lang.ParserARQ: com.hp.hpl.jena.sparql.syntax.Template parseTemplate(java.lang.String)>(r0);

        return $r1;
    }
}
