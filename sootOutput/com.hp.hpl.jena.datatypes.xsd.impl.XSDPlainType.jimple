public class com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType extends com.hp.hpl.jena.datatypes.xsd.XSDDatatype
{

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType r0;
        java.lang.Class r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void <init>(java.lang.String,java.lang.Class)>(r1, r2);

        return;
    }

    public boolean isEqual(com.hp.hpl.jena.graph.impl.LiteralLabel, com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType r2;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0, r1;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        r1 := @parameter1: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $z0 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType: boolean isEqualPlain(com.hp.hpl.jena.graph.impl.LiteralLabel,com.hp.hpl.jena.graph.impl.LiteralLabel)>(r0, r1);

        return $z0;
    }
}
