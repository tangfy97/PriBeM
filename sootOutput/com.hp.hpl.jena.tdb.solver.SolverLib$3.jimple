final class com.hp.hpl.jena.tdb.solver.SolverLib$3 extends java.lang.Object implements org.apache.jena.atlas.iterator.Transform
{
    final com.hp.hpl.jena.tdb.nodetable.NodeTable val$nodeTable;

    void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.tdb.solver.SolverLib$3 r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;

        r0 := @this: com.hp.hpl.jena.tdb.solver.SolverLib$3;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r0.<com.hp.hpl.jena.tdb.solver.SolverLib$3: com.hp.hpl.jena.tdb.nodetable.NodeTable val$nodeTable> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.tdb.solver.BindingNodeId convert(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r1, $r10;
        com.hp.hpl.jena.sparql.core.Var r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r0;
        com.hp.hpl.jena.tdb.solver.SolverLib$3 r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r7;
        com.hp.hpl.jena.tdb.store.NodeId $r8;
        com.hp.hpl.jena.tdb.solver.BindingTDB $r9;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r6 := @this: com.hp.hpl.jena.tdb.solver.SolverLib$3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $z0 = r0 instanceof com.hp.hpl.jena.tdb.solver.BindingTDB;

        if $z0 == 0 goto label1;

        $r9 = (com.hp.hpl.jena.tdb.solver.BindingTDB) r0;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.tdb.solver.BindingTDB: com.hp.hpl.jena.tdb.solver.BindingNodeId getBindingId()>();

        return $r10;

     label1:
        $r1 = new com.hp.hpl.jena.tdb.solver.BindingNodeId;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0);

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.core.Var) $r3;

        $r5 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r4);

        if $r5 != null goto label3;

        goto label2;

     label3:
        $r7 = r6.<com.hp.hpl.jena.tdb.solver.SolverLib$3: com.hp.hpl.jena.tdb.nodetable.NodeTable val$nodeTable>;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>($r5);

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void put(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.tdb.store.NodeId)>(r4, $r8);

        goto label2;

     label4:
        return $r1;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.tdb.solver.SolverLib$3 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId $r3;

        r0 := @this: com.hp.hpl.jena.tdb.solver.SolverLib$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.sparql.engine.binding.Binding) r1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.SolverLib$3: com.hp.hpl.jena.tdb.solver.BindingNodeId convert(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2);

        return $r3;
    }
}
