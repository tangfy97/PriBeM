public class org.codehaus.groovy.bsf.CachingGroovyEngine extends org.codehaus.groovy.bsf.GroovyEngine
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.Object[] EMPTY_ARGS;
    private java.util.Map evalScripts;
    private java.util.Map execScripts;
    private groovy.lang.Binding context;
    private groovy.lang.GroovyClassLoader loader;
    static java.lang.Class class$org$codehaus$groovy$bsf$CachingGroovyEngine;
    static java.lang.Class class$groovy$lang$GroovyShell;

    public void <init>()
    {
        org.codehaus.groovy.bsf.CachingGroovyEngine r0;

        r0 := @this: org.codehaus.groovy.bsf.CachingGroovyEngine;

        specialinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: void <init>()>();

        return;
    }

    public java.lang.Object eval(java.lang.String, int, int, java.lang.Object) throws org.apache.bsf.BSFException
    {
        java.lang.Throwable $r25;
        byte[] $r11;
        org.apache.bsf.BSFException $r24;
        groovy.lang.Script $r6;
        org.codehaus.groovy.bsf.CachingGroovyEngine r0;
        java.io.ByteArrayInputStream $r22;
        java.lang.StringBuffer $r18, $r19, $r23;
        java.util.Map $r2, $r14;
        int i0, i1;
        java.lang.String $r10, r12, $r20;
        groovy.lang.Binding $r5;
        java.util.logging.Logger $r4;
        java.lang.Exception $r15;
        java.lang.Object r1, $r3, $r7;
        java.lang.Class $r13, r21;
        groovy.lang.GroovyClassLoader $r9;

        r0 := @this: org.codehaus.groovy.bsf.CachingGroovyEngine;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

     label1:
        $r2 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map evalScripts>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r21 = (java.lang.Class) $r3;

        if r21 != null goto label2;

        $r9 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.GroovyClassLoader loader>;

        $r22 = new java.io.ByteArrayInputStream;

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r22.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        $r13 = virtualinvoke $r9.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.InputStream,java.lang.String)>($r22, r12);

        r21 = $r13;

        $r14 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map evalScripts>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        goto label3;

     label2:
        $r4 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.logging.Logger LOG>;

        virtualinvoke $r4.<java.util.logging.Logger: void fine(java.lang.String)>("eval() - Using cached script...");

     label3:
        $r5 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.Binding context>;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.Script createScript(java.lang.Class,groovy.lang.Binding)>(r21, $r5);

        $r7 = virtualinvoke $r6.<groovy.lang.Script: java.lang.Object run()>();

     label4:
        return $r7;

     label5:
        $r15 := @caughtexception;

        $r24 = new org.apache.bsf.BSFException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception from Groovy: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.bsf.BSFException: void <init>(int,java.lang.String,java.lang.Throwable)>(100, $r20, $r15);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void exec(java.lang.String, int, int, java.lang.Object) throws org.apache.bsf.BSFException
    {
        java.lang.Throwable $r25;
        byte[] $r9;
        java.lang.Object[] $r5;
        org.apache.bsf.BSFException $r24;
        java.util.logging.Level $r14;
        org.codehaus.groovy.bsf.CachingGroovyEngine r0;
        java.io.ByteArrayInputStream $r22;
        java.lang.StringBuffer $r18, $r19, $r23;
        java.util.Map $r2, $r12;
        int i0, i1;
        java.lang.String $r8, r10, $r20;
        java.util.logging.Logger $r4, $r15;
        java.lang.Exception $r13;
        java.lang.Object r1, $r3;
        java.lang.Class $r11, r21;
        groovy.lang.GroovyClassLoader $r7;

        r0 := @this: org.codehaus.groovy.bsf.CachingGroovyEngine;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

     label1:
        $r2 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map execScripts>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r21 = (java.lang.Class) $r3;

        if r21 != null goto label2;

        $r7 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.GroovyClassLoader loader>;

        $r22 = new java.io.ByteArrayInputStream;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r22.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        $r11 = virtualinvoke $r7.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.InputStream,java.lang.String)>($r22, r10);

        r21 = $r11;

        $r12 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map execScripts>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

        goto label3;

     label2:
        $r4 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.logging.Logger LOG>;

        virtualinvoke $r4.<java.util.logging.Logger: void fine(java.lang.String)>("exec() - Using cached version of class...");

     label3:
        $r5 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Object[] EMPTY_ARGS>;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r21, "main", $r5);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r15 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.logging.Logger LOG>;

        $r14 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r14, "BSF trace", $r13);

        $r24 = new org.apache.bsf.BSFException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception from Groovy: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.bsf.BSFException: void <init>(int,java.lang.String,java.lang.Throwable)>(100, $r20, $r13);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void initialize(org.apache.bsf.BSFManager, java.lang.String, java.util.Vector) throws org.apache.bsf.BSFException
    {
        org.apache.bsf.BSFEngine $r23;
        java.util.HashMap $r20, $r21;
        org.codehaus.groovy.bsf.CachingGroovyEngine r0;
        java.util.Vector r3;
        int $i0, i1;
        java.lang.String r2;
        groovy.lang.Binding $r16, $r17;
        org.apache.bsf.BSFDeclaredBean $r6;
        org.codehaus.groovy.bsf.CachingGroovyEngine$1 $r19;
        org.apache.bsf.BSFManager r1;
        groovy.lang.GroovyShell $r15;
        java.lang.Object $r5, $r11;
        java.lang.Class $r7, $r9;
        java.lang.ClassLoader $r4, r8;
        groovy.lang.GroovyClassLoader $r12;
        org.apache.bsf.util.BSFFunctions $r22;

        r0 := @this: org.codehaus.groovy.bsf.CachingGroovyEngine;

        r1 := @parameter0: org.apache.bsf.BSFManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Vector;

        specialinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: void initialize(org.apache.bsf.BSFManager,java.lang.String,java.util.Vector)>(r1, r2, r3);

        $r4 = virtualinvoke r1.<org.apache.bsf.BSFManager: java.lang.ClassLoader getClassLoader()>();

        r8 = $r4;

        if $r4 != null goto label3;

        $r7 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r7 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$groovy$lang$GroovyShell> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$groovy$lang$GroovyShell>;

     label2:
        r8 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label3:
        $r19 = new org.codehaus.groovy.bsf.CachingGroovyEngine$1;

        specialinvoke $r19.<org.codehaus.groovy.bsf.CachingGroovyEngine$1: void <init>(org.codehaus.groovy.bsf.CachingGroovyEngine,org.apache.bsf.BSFManager,java.lang.ClassLoader)>(r0, r1, r8);

        $r11 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r19);

        $r12 = (groovy.lang.GroovyClassLoader) $r11;

        r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.GroovyClassLoader loader> = $r12;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map execScripts> = $r20;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.Map evalScripts> = $r21;

        $r15 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.GroovyShell shell>;

        $r16 = virtualinvoke $r15.<groovy.lang.GroovyShell: groovy.lang.Binding getContext()>();

        r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.Binding context> = $r16;

        $r17 = r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: groovy.lang.Binding context>;

        $r22 = new org.apache.bsf.util.BSFFunctions;

        $r23 = (org.apache.bsf.BSFEngine) r0;

        specialinvoke $r22.<org.apache.bsf.util.BSFFunctions: void <init>(org.apache.bsf.BSFManager,org.apache.bsf.BSFEngine)>(r1, $r23);

        virtualinvoke $r17.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>("bsf", $r22);

        $i0 = virtualinvoke r3.<java.util.Vector: int size()>();

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        $r5 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r6 = (org.apache.bsf.BSFDeclaredBean) $r5;

        virtualinvoke r0.<org.codehaus.groovy.bsf.CachingGroovyEngine: void declareBean(org.apache.bsf.BSFDeclaredBean)>($r6);

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r3;
        java.lang.Class $r0, $r5;
        java.lang.String[] $r4;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$org$codehaus$groovy$bsf$CachingGroovyEngine>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.bsf.CachingGroovyEngine");

        <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$org$codehaus$groovy$bsf$CachingGroovyEngine> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Class class$org$codehaus$groovy$bsf$CachingGroovyEngine>;

     label2:
        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.codehaus.groovy.bsf.CachingGroovyEngine: java.util.logging.Logger LOG> = $r2;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = newarray (java.lang.String)[0];

        $r3[0] = $r4;

        <org.codehaus.groovy.bsf.CachingGroovyEngine: java.lang.Object[] EMPTY_ARGS> = $r3;

        return;
    }
}
