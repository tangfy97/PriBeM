public abstract class com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader extends java.lang.Object
{
    protected static java.util.Map uuidRegistry;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.util.Map uuidRegistry> = $r0;

        return;
    }

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r0;

        r0 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.util.UUID getSystemId();

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.RuntimeException $r0;
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r1;

        r1 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("somebody called equals on me but that\'s not supposed to happen.");

        throw $r0;
    }

    public static com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader createFor(java.util.UUID, java.nio.ByteBuffer)
    {
        java.lang.IllegalAccessException $r7;
        java.util.UUID r0;
        java.lang.RuntimeException $r8, $r10;
        java.nio.ByteBuffer r4;
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r11;
        com.googlecode.mp4parser.contentprotection.GenericHeader $r5;
        java.util.Map $r1;
        java.lang.InstantiationException $r9;
        java.lang.Object $r2, $r6;
        java.lang.Class r3;

        r0 := @parameter0: java.util.UUID;

        r4 := @parameter1: java.nio.ByteBuffer;

        $r1 = <com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.util.Map uuidRegistry>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Class) $r2;

        r11 = null;

        if r3 == null goto label5;

     label1:
        $r6 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();

        r11 = (com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader) $r6;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label5:
        if r11 != null goto label6;

        $r5 = new com.googlecode.mp4parser.contentprotection.GenericHeader;

        specialinvoke $r5.<com.googlecode.mp4parser.contentprotection.GenericHeader: void <init>()>();

        r11 = $r5;

     label6:
        virtualinvoke r11.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: void parse(java.nio.ByteBuffer)>(r4);

        return r11;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public abstract void parse(java.nio.ByteBuffer);

    public abstract java.nio.ByteBuffer getData();

    public java.lang.String toString()
    {
        byte[] r4;
        com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader r1;
        java.nio.ByteBuffer $r2, $r3;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r5, $r6;

        r1 := @this: com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProtectionSpecificHeader");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{data=");

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.boxes.piff.ProtectionSpecificHeader: java.nio.ByteBuffer getData()>();

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int limit()>();

        r4 = newarray (byte)[$i0];

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r4);

        $r5 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[])>(r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
