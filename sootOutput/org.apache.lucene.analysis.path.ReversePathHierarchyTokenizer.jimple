public class org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    private static final int DEFAULT_BUFFER_SIZE;
    public static final char DEFAULT_DELIMITER;
    public static final int DEFAULT_SKIP;
    private final char delimiter;
    private final char replacement;
    private final int skip;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt;
    private int endPosition;
    private int finalOffset;
    private int skipped;
    private java.lang.StringBuilder resultToken;
    private java.util.List delimiterPositions;
    private int delimitersCount;
    private char[] resultTokenBuffer;

    public void <init>(java.io.Reader)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, 47, 47, 0);

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        int i0;
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, 47, 47, i0);

        return;
    }

    public void <init>(java.io.Reader, int, char)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        int i0;
        char c1;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, i0, c1, c1, 0);

        return;
    }

    public void <init>(java.io.Reader, char, char)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        char c0, c1;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, c0, c1, 0);

        return;
    }

    public void <init>(java.io.Reader, int, char, char)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        int i0;
        char c1, c2;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        c2 := @parameter3: char;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, i0, c1, c2, 0);

        return;
    }

    public void <init>(java.io.Reader, char, int)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        int i1;
        char c0;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, c0, c0, i1);

        return;
    }

    public void <init>(java.io.Reader, char, char, int)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        int i2;
        char c0, c1;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        i2 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, c0, c1, i2);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, char, char, int)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        int i2;
        char c0, c1;
        java.io.Reader r2;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        c0 := @parameter2: char;

        c1 := @parameter3: char;

        i2 := @parameter4: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader,int,char,char,int)>(r1, r2, 1024, c0, c1, i2);

        return;
    }

    public void <init>(java.io.Reader, int, char, char, int)
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r2;
        int i0, i3;
        char c1, c2;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        c2 := @parameter3: char;

        i3 := @parameter4: int;

        $r2 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader,int,char,char,int)>($r2, r1, i0, c1, c2, i3);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, int, char, char, int)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        java.util.ArrayList $r18;
        int i0, i1, $i4, $i6;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4, $r9;
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r8;
        char c2, c3;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        java.lang.IllegalArgumentException $r15, $r16;
        char[] $r11;
        java.lang.StringBuilder $r17;
        org.apache.lucene.util.Attribute $r3, $r5, $r7;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        i0 := @parameter2: int;

        c2 := @parameter3: char;

        c3 := @parameter4: char;

        i1 := @parameter5: int;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r8 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r7;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt> = $r8;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int endPosition> = 0;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int finalOffset> = 0;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped> = 0;

        $i6 = (int) -1;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount> = $i6;

        if i0 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize cannot be negative");

        throw $r15;

     label1:
        if i1 >= 0 goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("skip cannot be negative");

        throw $r16;

     label2:
        $r9 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(i0);

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char delimiter> = c2;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char replacement> = c3;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skip> = i1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>(i0);

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken> = $r17;

        $r11 = newarray (char)[i0];

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char[] resultTokenBuffer> = $r11;

        $r18 = new java.util.ArrayList;

        $i4 = i0 / 10;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i4);

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions> = $r18;

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        java.lang.Integer $r4, $r9, $r13, $r18, $r28, $r32;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r1, $r25;
        java.io.Reader $r10;
        java.lang.StringBuilder $r11, $r14, $r20, $r21, $r22, $r24, $r29;
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        char[] $r5, $r19, $r23, $r30;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r7;
        java.util.List $r2, $r8, $r12, $r15, $r16, $r26, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i37, $i38;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r6;
        char $c16, $c17, $c18;
        java.lang.Object $r3, $r17, $r27;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: void clearAttributes()>();

        $i0 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount>;

        $i37 = (int) -1;

        if $i0 != $i37 goto label09;

        i35 = 0;

        $r8 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label01:
        $r10 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.io.Reader input>;

        $i15 = virtualinvoke $r10.<java.io.Reader: int read()>();

        if $i15 >= 0 goto label02;

        goto label05;

     label02:
        i35 = i35 + 1;

        $c16 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char delimiter>;

        $i38 = (int) $c16;

        if $i15 != $i38 goto label03;

        $r12 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i35);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $c18 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char replacement>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c18);

        goto label04;

     label03:
        $r11 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $c17 = (char) $i15;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c17);

     label04:
        goto label01;

     label05:
        $r15 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $i19 = interfaceinvoke $r15.<java.util.List: int size()>();

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount> = $i19;

        $r16 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $i20 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount>;

        $i21 = $i20 - 1;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i21);

        $r18 = (java.lang.Integer) $r17;

        $i22 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        if $i22 >= i35 goto label06;

        $r31 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i35);

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r32);

        $i33 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount>;

        $i34 = $i33 + 1;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount> = $i34;

     label06:
        $r19 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char[] resultTokenBuffer>;

        $i23 = lengthof $r19;

        $r20 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i24 = virtualinvoke $r20.<java.lang.StringBuilder: int length()>();

        if $i23 >= $i24 goto label07;

        $r29 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i31 = virtualinvoke $r29.<java.lang.StringBuilder: int length()>();

        $r30 = newarray (char)[$i31];

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char[] resultTokenBuffer> = $r30;

     label07:
        $r22 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $r21 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i25 = virtualinvoke $r21.<java.lang.StringBuilder: int length()>();

        $r23 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char[] resultTokenBuffer>;

        virtualinvoke $r22.<java.lang.StringBuilder: void getChars(int,int,char[],int)>(0, $i25, $r23, 0);

        $r24 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        virtualinvoke $r24.<java.lang.StringBuilder: void setLength(int)>(0);

        $i26 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount>;

        $i28 = $i26 - 1;

        $i27 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skip>;

        $i32 = $i28 - $i27;

        if $i32 < 0 goto label08;

        $r26 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>($i32);

        $r28 = (java.lang.Integer) $r27;

        $i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int endPosition> = $i30;

     label08:
        $i29 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int correctOffset(int)>(i35);

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int finalOffset> = $i29;

        $r25 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt>;

        interfaceinvoke $r25.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>(1);

        goto label10;

     label09:
        $r1 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>(0);

     label10:
        $i5 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped>;

        $i2 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount>;

        $i1 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skip>;

        $i3 = $i2 - $i1;

        $i4 = $i3 - 1;

        if $i5 >= $i4 goto label11;

        $r2 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        $i6 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i6);

        $r4 = (java.lang.Integer) $r3;

        $i7 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r6 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r5 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char[] resultTokenBuffer>;

        $i8 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int endPosition>;

        $i9 = $i8 - $i7;

        interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: void copyBuffer(char[],int,int)>($r5, $i7, $i9);

        $r7 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i10 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int correctOffset(int)>($i7);

        $i11 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int endPosition>;

        $i12 = virtualinvoke r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int correctOffset(int)>($i11);

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i10, $i12);

        $i13 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped>;

        $i14 = $i13 + 1;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped> = $i14;

        return 1;

     label11:
        return 0;
    }

    public final void end()
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        int $i0, $i1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i1 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int finalOffset>;

        $i0 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int finalOffset>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i0);

        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer r0;
        java.util.List $r2;
        int $i1;
        java.lang.StringBuilder $r1;

        r0 := @this: org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void reset()>();

        $r1 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int finalOffset> = 0;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int endPosition> = 0;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int skipped> = 0;

        $i1 = (int) -1;

        r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int delimitersCount> = $i1;

        $r2 = r0.<org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: java.util.List delimiterPositions>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int DEFAULT_SKIP> = 0;

        <org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: char DEFAULT_DELIMITER> = 47;

        <org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer: int DEFAULT_BUFFER_SIZE> = 1024;

        return;
    }
}
