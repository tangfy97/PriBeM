class org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement extends org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$LookupElement
{
    private java.lang.Class elementType;
    private java.lang.String wsdlLocation;
    final org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor this$0;

    public void <init>(org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor, java.lang.reflect.Member, java.beans.PropertyDescriptor)
    {
        java.beans.PropertyDescriptor r3;
        org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor r1;
        java.lang.reflect.Member r2;
        org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement r0;

        r0 := @this: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement;

        r1 := @parameter0: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor;

        r2 := @parameter1: java.lang.reflect.Member;

        r3 := @parameter2: java.beans.PropertyDescriptor;

        r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor this$0> = r1;

        specialinvoke r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$LookupElement: void <init>(org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor,java.lang.reflect.Member,java.beans.PropertyDescriptor)>(r1, r2, r3);

        return;
    }

    protected void initAnnotation(java.lang.reflect.AnnotatedElement)
    {
        org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement r5;
        int $i0;
        java.lang.String $r3, $r10, $r12, r13, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.reflect.Member $r9, $r11;
        javax.xml.ws.WebServiceRef r2;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Class $r4, $r6, $r7, $r8, r14, $r15, $r16;
        java.lang.reflect.AnnotatedElement r0;

        r5 := @this: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        $r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/ws/WebServiceRef;");

        r2 = (javax.xml.ws.WebServiceRef) $r1;

        $r3 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.String name()>();

        r13 = $r3;

        $r4 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.Class type()>();

        r14 = $r4;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $z6 = 0;

        goto label2;

     label1:
        $z6 = 1;

     label2:
        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: boolean isDefaultName> = $z6;

        $z1 = r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: boolean isDefaultName>;

        if $z1 == 0 goto label3;

        $r9 = r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.reflect.Member member>;

        $r10 = interfaceinvoke $r9.<java.lang.reflect.Member: java.lang.String getName()>();

        r13 = $r10;

        $r11 = r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.reflect.Member member>;

        $z4 = $r11 instanceof java.lang.reflect.Method;

        if $z4 == 0 goto label3;

        $z5 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z5 == 0 goto label3;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= 3 goto label3;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(3);

        r13 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r12);

     label3:
        if $r4 == null goto label4;

        $r8 = class "Ljava/lang/Object;";

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z3 != 0 goto label4;

        virtualinvoke r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: void checkResourceType(java.lang.Class)>($r4);

        goto label5;

     label4:
        r14 = virtualinvoke r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class getResourceType()>();

     label5:
        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String name> = r13;

        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class elementType> = r14;

        $r15 = class "Ljavax/xml/ws/Service;";

        $z7 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r14);

        if $z7 == 0 goto label6;

        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType> = r14;

        goto label9;

     label6:
        $r6 = class "Ljava/lang/Object;";

        $r7 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.Class value()>();

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label7;

        $r16 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.Class value()>();

        goto label8;

     label7:
        $r16 = class "Ljavax/xml/ws/Service;";

     label8:
        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType> = $r16;

     label9:
        $r17 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.String mappedName()>();

        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String mappedName> = $r17;

        $r18 = interfaceinvoke r2.<javax.xml.ws.WebServiceRef: java.lang.String wsdlLocation()>();

        r5.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String wsdlLocation> = $r18;

        return;
    }

    protected java.lang.Object getResourceToInject(java.lang.Object, java.lang.String)
    {
        java.lang.IllegalStateException $r12, $r41, $r48;
        java.lang.NoSuchMethodException $r11;
        java.net.URL $r35;
        javax.xml.ws.Service r58;
        javax.xml.ws.WebServiceClient r33;
        org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor $r2;
        org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement r0;
        boolean $z0, $z1;
        java.lang.'annotation'.Annotation $r32;
        java.lang.StringBuilder $r6, $r8, $r9, $r13, $r16, $r17, $r19, $r20, $r42, $r45, $r46, $r49, $r51, $r52, $r53, $r54, $r55;
        javax.xml.namespace.QName $r37;
        java.lang.Object[] $r34;
        java.lang.reflect.Constructor $r30;
        java.lang.String r1, $r7, $r10, $r15, $r18, $r21, $r25, $r36, $r38, $r39, $r44, $r47, $r50, $r56;
        java.net.MalformedURLException $r4;
        java.lang.Class[] $r28;
        java.lang.IllegalArgumentException $r5;
        org.springframework.beans.factory.NoSuchBeanDefinitionException $r22;
        java.lang.Object $r3, $r27, $r40, r57, $r60;
        java.lang.Class $r14, $r23, $r24, $r26, $r29, $r31, $r43, $r59;

        r0 := @this: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement;

        r57 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

     label01:
        $r2 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor this$0>;

        $r3 = virtualinvoke $r2.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor: java.lang.Object getResource(org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$LookupElement,java.lang.String)>(r0, r1);

        r58 = (javax.xml.ws.Service) $r3;

     label02:
        goto label11;

     label03:
        $r22 := @caughtexception;

        $r24 = class "Ljavax/xml/ws/Service;";

        $r23 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $z0 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z0 == 0 goto label04;

        $r48 = new java.lang.IllegalStateException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>("No resource with name \'");

        $r50 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String name>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found in context, ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and no specific JAX-WS Service subclass specified. The typical solution is to either specify ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a LocalJaxWsServiceFactoryBean with the given name or to specify the (generated) Service ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subclass as @WebServiceRef(...) value.");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r56);

        throw $r48;

     label04:
        $r25 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String wsdlLocation>;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r25);

        if $z1 == 0 goto label10;

     label05:
        $r29 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $r28 = newarray (java.lang.Class)[2];

        $r28[0] = class "Ljava/net/URL;";

        $r28[1] = class "Ljavax/xml/namespace/QName;";

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r28);

        $r31 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/ws/WebServiceClient;");

        r33 = (javax.xml.ws.WebServiceClient) $r32;

        if r33 != null goto label06;

        $r41 = new java.lang.IllegalStateException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("JAX-WS Service class [");

        $r43 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $r44 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>();

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not carry a WebServiceClient annotation");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r47);

        throw $r41;

     label06:
        $r34 = newarray (java.lang.Object)[2];

        $r35 = new java.net.URL;

        $r36 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String wsdlLocation>;

        specialinvoke $r35.<java.net.URL: void <init>(java.lang.String)>($r36);

        $r34[0] = $r35;

        $r37 = new javax.xml.namespace.QName;

        $r38 = interfaceinvoke r33.<javax.xml.ws.WebServiceClient: java.lang.String targetNamespace()>();

        $r39 = interfaceinvoke r33.<javax.xml.ws.WebServiceClient: java.lang.String name()>();

        specialinvoke $r37.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r38, $r39);

        $r34[1] = $r37;

        $r40 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])>($r30, $r34);

        r58 = (javax.xml.ws.Service) $r40;

     label07:
        goto label11;

     label08:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("JAX-WS Service class [");

        $r14 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not have a (URL, QName) constructor. Cannot apply specified WSDL location [");

        $r18 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String wsdlLocation>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label09:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Specified WSDL location [");

        $r7 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.String wsdlLocation>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] isn\'t a valid URL");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label10:
        $r26 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class lookupType>;

        $r27 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>($r26);

        r58 = (javax.xml.ws.Service) $r27;

     label11:
        $r59 = r0.<org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$WebServiceRefElement: java.lang.Class elementType>;

        $r60 = virtualinvoke r58.<javax.xml.ws.Service: java.lang.Object getPort(java.lang.Class)>($r59);

        return $r60;

        catch org.springframework.beans.factory.NoSuchBeanDefinitionException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label05 to label07 with label08;
        catch java.net.MalformedURLException from label05 to label07 with label09;
    }
}
