public class org.jdesktop.swingx.painter.TextPainter extends org.jdesktop.swingx.painter.AbstractAreaPainter
{
    private java.lang.String text;
    private java.awt.Font font;

    public void <init>()
    {
        org.jdesktop.swingx.painter.TextPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void <init>(java.lang.String)>("");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(r1, null, null);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.lang.String r1;
        java.awt.Font r2;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.awt.Font;

        specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.awt.Paint)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.lang.String r1;
        java.awt.Paint r2;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.awt.Paint;

        specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(r1, null, r2);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.awt.Paint r3;
        java.awt.Font r2;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.awt.Font;

        r3 := @parameter2: java.awt.Paint;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractAreaPainter: void <init>()>();

        r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String text> = "";

        r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font font> = null;

        r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String text> = r1;

        r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font font> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void setFillPaint(java.awt.Paint)>(r3);

        return;
    }

    public void setFont(java.awt.Font)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.awt.Font $r1, r2, $r3;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r2 := @parameter0: java.awt.Font;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font getFont()>();

        r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font font> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void setDirty(boolean)>(1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font getFont()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("font", $r1, $r3);

        return;
    }

    public java.awt.Font getFont()
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.awt.Font $r1;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font font>;

        return $r1;
    }

    public void setText(java.lang.String)
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.lang.String $r1, r2, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String getText()>();

        if r2 != null goto label1;

        $r4 = "";

        goto label2;

     label1:
        $r4 = r2;

     label2:
        r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String text> = $r4;

        virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void setDirty(boolean)>(1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String getText()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("text", $r1, $r3);

        return;
    }

    public java.lang.String getText()
    {
        org.jdesktop.swingx.painter.TextPainter r0;
        java.lang.String $r1;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String text>;

        return $r1;
    }

    protected void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        org.jdesktop.swingx.painter.effects.AreaEffect[] $r5, $r7;
        org.jdesktop.swingx.painter.TextPainter r0;
        boolean $z0, $z1;
        java.awt.Shape $r6;
        java.awt.Font $r2, $r12;
        org.jdesktop.swingx.painter.effects.AreaEffect r8;
        java.awt.Paint $r3, r10;
        java.awt.Rectangle $r14;
        java.awt.Graphics2D r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.String $r11;
        javax.swing.JComponent $r9;
        java.awt.FontMetrics $r13;
        java.lang.Object r1;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r4 := @parameter0: java.awt.Graphics2D;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font calculateFont(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        virtualinvoke r4.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r2);

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Paint getFillPaint()>();

        r10 = $r3;

        if $r3 != null goto label2;

        $z0 = r1 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label2;

        $r9 = (javax.swing.JComponent) r1;

        r10 = virtualinvoke $r9.<javax.swing.JComponent: java.awt.Color getForeground()>();

     label2:
        $r11 = specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String calculateText(java.lang.Object)>(r1);

        $r12 = virtualinvoke r4.<java.awt.Graphics2D: java.awt.Font getFont()>();

        $r13 = virtualinvoke r4.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r12);

        $i11 = virtualinvoke $r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r11);

        $i12 = virtualinvoke $r13.<java.awt.FontMetrics: int getHeight()>();

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Rectangle calculateLayout(int,int,int,int)>($i11, $i12, i0, i1);

        $i13 = $r14.<java.awt.Rectangle: int x>;

        $i14 = $r14.<java.awt.Rectangle: int y>;

        virtualinvoke r4.<java.awt.Graphics2D: void translate(int,int)>($i13, $i14);

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: boolean isPaintStretched()>();

        if $z1 == 0 goto label3;

        $i10 = $r14.<java.awt.Rectangle: int width>;

        $i9 = $r14.<java.awt.Rectangle: int height>;

        r10 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Paint calculateSnappedPaint(java.awt.Paint,int,int)>(r10, $i10, $i9);

     label3:
        if r10 == null goto label4;

        virtualinvoke r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10);

     label4:
        $i2 = virtualinvoke $r13.<java.awt.FontMetrics: int getAscent()>();

        $i3 = 0 + $i2;

        virtualinvoke r4.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>($r11, 0, $i3);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: org.jdesktop.swingx.painter.effects.AreaEffect[] getAreaEffects()>();

        if $r5 == null goto label6;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)>(r4, r1, i0, i1);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: org.jdesktop.swingx.painter.effects.AreaEffect[] getAreaEffects()>();

        i8 = lengthof $r7;

        i15 = 0;

     label5:
        if i15 >= i8 goto label6;

        r8 = $r7[i15];

        interfaceinvoke r8.<org.jdesktop.swingx.painter.effects.AreaEffect: void apply(java.awt.Graphics2D,java.awt.Shape,int,int)>(r4, $r6, i0, i1);

        i15 = i15 + 1;

        goto label5;

     label6:
        $i4 = $r14.<java.awt.Rectangle: int x>;

        $i7 = neg $i4;

        $i5 = $r14.<java.awt.Rectangle: int y>;

        $i6 = neg $i5;

        virtualinvoke r4.<java.awt.Graphics2D: void translate(int,int)>($i7, $i6);

        return;
    }

    private java.lang.String calculateText(java.lang.Object)
    {
        javax.swing.text.JTextComponent $r5;
        org.jdesktop.swingx.painter.TextPainter r0;
        javax.swing.JLabel $r4;
        java.lang.Object r2;
        java.lang.String $r1, $r6, r7;
        javax.swing.AbstractButton $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String getText()>();

        r7 = $r1;

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 != 0 goto label1;

        return $r1;

     label1:
        $z0 = r2 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label2;

        $r5 = (javax.swing.text.JTextComponent) r2;

        r7 = virtualinvoke $r5.<javax.swing.text.JTextComponent: java.lang.String getText()>();

     label2:
        $z1 = r2 instanceof javax.swing.JLabel;

        if $z1 == 0 goto label3;

        $r4 = (javax.swing.JLabel) r2;

        r7 = virtualinvoke $r4.<javax.swing.JLabel: java.lang.String getText()>();

     label3:
        $z2 = r2 instanceof javax.swing.AbstractButton;

        if $z2 == 0 goto label4;

        $r3 = (javax.swing.AbstractButton) r2;

        r7 = virtualinvoke $r3.<javax.swing.AbstractButton: java.lang.String getText()>();

     label4:
        return r7;
    }

    private java.awt.Font calculateFont(java.lang.Object)
    {
        javax.swing.JComponent $r4;
        org.jdesktop.swingx.painter.TextPainter r0;
        java.awt.Font $r1, $r2, r5;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r3 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font getFont()>();

        r5 = $r1;

        if $r1 != null goto label1;

        $z0 = r3 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label1;

        $r4 = (javax.swing.JComponent) r3;

        r5 = virtualinvoke $r4.<javax.swing.JComponent: java.awt.Font getFont()>();

     label1:
        if r5 != null goto label2;

        $r2 = new java.awt.Font;

        specialinvoke $r2.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 0, 18);

        r5 = $r2;

     label2:
        return r5;
    }

    protected java.awt.Shape provideShape(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.awt.Shape $r8;
        java.awt.Font $r2;
        java.awt.font.GlyphVector $r7;
        org.jdesktop.swingx.painter.TextPainter r0;
        java.awt.FontMetrics $r5;
        java.awt.font.FontRenderContext $r6;
        java.awt.Graphics2D r4;
        int $i0, i1, i2;
        float $f0, $f1;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.jdesktop.swingx.painter.TextPainter;

        r4 := @parameter0: java.awt.Graphics2D;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.awt.Font calculateFont(java.lang.Object)>(r1);

        $r3 = specialinvoke r0.<org.jdesktop.swingx.painter.TextPainter: java.lang.String calculateText(java.lang.Object)>(r1);

        $r5 = virtualinvoke r4.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r2);

        $r6 = virtualinvoke r4.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        $r7 = virtualinvoke $r2.<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)>($r6, $r3);

        $i0 = virtualinvoke $r5.<java.awt.FontMetrics: int getAscent()>();

        $f0 = (float) $i0;

        $f1 = 0.0F + $f0;

        $r8 = virtualinvoke $r7.<java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>(0.0F, $f1);

        return $r8;
    }
}
