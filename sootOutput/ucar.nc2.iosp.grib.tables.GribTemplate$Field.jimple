public class ucar.nc2.iosp.grib.tables.GribTemplate$Field extends java.lang.Object implements java.lang.Comparable
{
    public java.lang.String octet;
    public java.lang.String content;
    public int start;
    public int nbytes;
    final ucar.nc2.iosp.grib.tables.GribTemplate this$0;

    void <init>(ucar.nc2.iosp.grib.tables.GribTemplate, java.lang.String, java.lang.String)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate r1;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.String r2, r3, $r4, $r5;
        java.lang.Exception $r6, $r7;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r1 := @parameter0: ucar.nc2.iosp.grib.tables.GribTemplate;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: ucar.nc2.iosp.grib.tables.GribTemplate this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String octet> = r2;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content> = r3;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45);

        if $i0 <= 0 goto label6;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start> = $i2;

        $i3 = $i0 + 1;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $i5 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i6 = $i4 - $i5;

        $i7 = $i6 + 1;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes> = $i7;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        goto label7;

     label6:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start> = $i1;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes> = 1;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

        $i9 = (int) -1;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start> = $i9;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes> = 0;

     label9:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    void <init>(ucar.nc2.iosp.grib.tables.GribTemplate, int, int, java.lang.String)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate r1;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r2, $r7;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r1 := @parameter0: ucar.nc2.iosp.grib.tables.GribTemplate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: ucar.nc2.iosp.grib.tables.GribTemplate this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start> = i0;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes> = i1;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content> = r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String octet> = $r7;

        return;
    }

    public int compareTo(ucar.nc2.iosp.grib.tables.GribTemplate$Field)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r1 := @parameter0: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        $i1 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i0 = r1.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    int value(byte[])
    {
        byte[] r1;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r1 := @parameter0: byte[];

        $i0 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        $i19 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i20 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i19);

        return $i20;

     label2:
        $i13 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i14 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i13);

        $i15 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i16 = $i15 + 1;

        $i17 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i16);

        $i18 = staticinvoke <ucar.grib.GribNumbers: int int2(int,int)>($i14, $i17);

        return $i18;

     label3:
        $i1 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i2 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i1);

        $i3 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i4 = $i3 + 1;

        $i5 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i4);

        $i6 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i7 = $i6 + 2;

        $i8 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i7);

        $i9 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i10 = $i9 + 3;

        $i11 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int get(byte[],int)>(r1, $i10);

        $i12 = staticinvoke <ucar.grib.GribNumbers: int int4(int,int,int,int)>($i2, $i5, $i8, $i11);

        return $i12;

     label4:
        $i22 = (int) -9999;

        return $i22;
    }

    int get(byte[], int)
    {
        byte[] r0;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r1;
        short $s3, $s4;
        byte $b2;
        int i0, $i1, $i5;

        r1 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 - 1;

        $b2 = r0[$i1];

        $s4 = (short) $b2;

        $s3 = $s4 & 255;

        $i5 = (int) $s3;

        return $i5;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grib.tables.GribTemplate$Field) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int compareTo(ucar.nc2.iosp.grib.tables.GribTemplate$Field)>($r2);

        return $i0;
    }
}
