public class org.apache.zookeeper.Shell$ShellCommandExecutor extends org.apache.zookeeper.Shell
{
    private java.lang.String[] command;
    private java.lang.StringBuffer output;

    public void <init>(java.lang.String[])
    {
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void <init>(java.lang.String[],java.io.File)>(r1, null);

        return;
    }

    public void <init>(java.lang.String[], java.io.File)
    {
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String[] r1;
        java.io.File r2;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void <init>(java.lang.String[],java.io.File,java.util.Map)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String[], java.io.File, java.util.Map)
    {
        java.util.Map r3;
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String[] r1;
        java.io.File r2;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void <init>(java.lang.String[],java.io.File,java.util.Map,long)>(r1, r2, r3, 0L);

        return;
    }

    public void <init>(java.lang.String[], java.io.File, java.util.Map, long)
    {
        java.util.Map r5;
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;
        long l0;
        java.io.File r4;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        r1 := @parameter0: java.lang.String[];

        r4 := @parameter1: java.io.File;

        r5 := @parameter2: java.util.Map;

        l0 := @parameter3: long;

        specialinvoke r0.<org.apache.zookeeper.Shell: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.String[] command> = $r3;

        if r4 == null goto label1;

        virtualinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void setWorkingDirectory(java.io.File)>(r4);

     label1:
        if r5 == null goto label2;

        virtualinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void setEnvironment(java.util.Map)>(r5);

     label2:
        r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: long timeOutInterval> = l0;

        return;
    }

    public void execute() throws java.io.IOException
    {
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        virtualinvoke r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: void run()>();

        return;
    }

    protected java.lang.String[] getExecString()
    {
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        $r1 = r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.String[] command>;

        return $r1;
    }

    protected void parseExecResult(java.io.BufferedReader) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r4;
        int $i0, $i1;
        char[] r2;
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.io.BufferedReader r3;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        r3 := @parameter0: java.io.BufferedReader;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.StringBuffer output> = $r1;

        r2 = newarray (char)[512];

     label1:
        $i0 = lengthof r2;

        $i1 = virtualinvoke r3.<java.io.BufferedReader: int read(char[],int,int)>(r2, 0, $i0);

        if $i1 <= 0 goto label2;

        $r4 = r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.StringBuffer output>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r2, 0, $i1);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getOutput()
    {
        java.lang.StringBuffer $r1, $r2;
        org.apache.zookeeper.Shell$ShellCommandExecutor r0;
        java.lang.String $r3;

        r0 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        $r1 = r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.StringBuffer output>;

        if $r1 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r2 = r0.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.StringBuffer output>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.zookeeper.Shell$ShellCommandExecutor r1;
        java.lang.String[] $r2;
        int i0, $i1, i2;
        java.lang.StringBuilder $r0, $r5, $r6;
        java.lang.String $r3, r4;

        r1 := @this: org.apache.zookeeper.Shell$ShellCommandExecutor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.zookeeper.Shell$ShellCommandExecutor: java.lang.String[] getExecString()>();

        i0 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r4 = $r2[i2];

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(32);

        if $i1 < 0 goto label2;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
