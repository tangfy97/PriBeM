public class org.eclipse.jdt.internal.compiler.ClassFilePool extends java.lang.Object
{
    public static final int POOL_SIZE;
    org.eclipse.jdt.internal.compiler.ClassFile[] classFiles;

    private void <init>()
    {
        org.eclipse.jdt.internal.compiler.ClassFilePool r0;
        org.eclipse.jdt.internal.compiler.ClassFile[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ClassFilePool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.eclipse.jdt.internal.compiler.ClassFile)[25];

        r0.<org.eclipse.jdt.internal.compiler.ClassFilePool: org.eclipse.jdt.internal.compiler.ClassFile[] classFiles> = $r1;

        return;
    }

    public static org.eclipse.jdt.internal.compiler.ClassFilePool newInstance()
    {
        org.eclipse.jdt.internal.compiler.ClassFilePool $r0;

        $r0 = new org.eclipse.jdt.internal.compiler.ClassFilePool;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ClassFilePool: void <init>()>();

        return $r0;
    }

    public synchronized org.eclipse.jdt.internal.compiler.ClassFile acquire(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r3;
        org.eclipse.jdt.internal.compiler.ClassFile r2, $r4, $r6;
        org.eclipse.jdt.internal.compiler.ClassFilePool r0;
        org.eclipse.jdt.internal.compiler.ClassFile[] $r1, $r5;
        int i0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ClassFilePool;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        i0 = 0;

        goto label4;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ClassFilePool: org.eclipse.jdt.internal.compiler.ClassFile[] classFiles>;

        r2 = $r1[i0];

        if r2 != null goto label2;

        $r4 = new org.eclipse.jdt.internal.compiler.ClassFile;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.ClassFile: void <init>(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)>(r3);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ClassFilePool: org.eclipse.jdt.internal.compiler.ClassFile[] classFiles>;

        $r5[i0] = $r4;

        $r4.<org.eclipse.jdt.internal.compiler.ClassFile: boolean isShared> = 1;

        return $r4;

     label2:
        $z0 = r2.<org.eclipse.jdt.internal.compiler.ClassFile: boolean isShared>;

        if $z0 != 0 goto label3;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ClassFile: void reset(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)>(r3);

        r2.<org.eclipse.jdt.internal.compiler.ClassFile: boolean isShared> = 1;

        return r2;

     label3:
        i0 = i0 + 1;

     label4:
        if i0 < 25 goto label1;

        $r6 = new org.eclipse.jdt.internal.compiler.ClassFile;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.ClassFile: void <init>(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)>(r3);

        return $r6;
    }

    public synchronized void release(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.ClassFilePool r1;
        org.eclipse.jdt.internal.compiler.ClassFile r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ClassFilePool;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        r0.<org.eclipse.jdt.internal.compiler.ClassFile: boolean isShared> = 0;

        return;
    }

    public void reset()
    {
        org.eclipse.jdt.internal.compiler.ClassFilePool r0;
        org.eclipse.jdt.internal.compiler.ClassFile[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ClassFilePool;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ClassFilePool: org.eclipse.jdt.internal.compiler.ClassFile[] classFiles>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        return;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.ClassFilePool: int POOL_SIZE> = 25;

        return;
    }
}
