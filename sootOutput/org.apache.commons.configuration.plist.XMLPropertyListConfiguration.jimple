public class org.apache.commons.configuration.plist.XMLPropertyListConfiguration extends org.apache.commons.configuration.AbstractHierarchicalFileConfiguration
{
    private static final long serialVersionUID;
    private static final int INDENT_SIZE;

    public void <init>()
    {
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>()>();

        return;
    }

    public void <init>(org.apache.commons.configuration.HierarchicalConfiguration)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String r1;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.io.File)>(r1);

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.net.URL)>(r1);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r3;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r1;
        java.lang.Object r0;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label6;

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r2, r0, 1);

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void setDetailEvents(boolean)>(0);

     label1:
        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void clearProperty(java.lang.String)>(r2);

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r2, r0);

     label2:
        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void setDetailEvents(boolean)>(1);

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void setDetailEvents(boolean)>(1);

        throw $r3;

     label5:
        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r2, r0, 0);

        goto label7;

     label6:
        specialinvoke r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r2, r0);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r1;
        java.lang.Object r0;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(1, r2, r0, 1);

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r2, r0);

        virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(1, r2, r0, 0);

        goto label2;

     label1:
        specialinvoke r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void addProperty(java.lang.String,java.lang.Object)>(r2, r0);

     label2:
        return;
    }

    public void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration$XMLPropertyListHandler $r2;
        org.xml.sax.InputSource $r9;
        javax.xml.parsers.SAXParserFactory $r4;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3;
        java.io.Reader r10;
        java.lang.Exception $r11;
        org.xml.sax.XMLReader $r6, $r7, $r8;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration$1 $r0;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r1;
        javax.xml.parsers.SAXParser $r5;
        org.apache.commons.configuration.ConfigurationException $r12;

        r1 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r10 := @parameter0: java.io.Reader;

        $r0 = new org.apache.commons.configuration.plist.XMLPropertyListConfiguration$1;

        specialinvoke $r0.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration$1: void <init>(org.apache.commons.configuration.plist.XMLPropertyListConfiguration)>(r1);

        $r2 = new org.apache.commons.configuration.plist.XMLPropertyListConfiguration$XMLPropertyListHandler;

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        specialinvoke $r2.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration$XMLPropertyListHandler: void <init>(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r3);

     label1:
        $r4 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(1);

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r0);

        $r7 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r2);

        $r8 = virtualinvoke $r5.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r9 = new org.xml.sax.InputSource;

        specialinvoke $r9.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r10);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r9);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r12.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse the configuration file", $r11);

        throw $r12;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        java.io.PrintWriter $r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r4;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r2;
        java.lang.StringBuffer $r5, $r6, $r8, $r9;
        java.io.Writer r1;
        java.lang.String $r3, $r7, $r10;

        r2 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r1 := @parameter0: java.io.Writer;

        $r0 = new java.io.PrintWriter;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: java.lang.String getEncoding()>();

        if $r3 == null goto label1;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        $r7 = virtualinvoke r2.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: java.lang.String getEncoding()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"?>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        goto label2;

     label1:
        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<?xml version=\"1.0\"?>");

     label2:
        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<!DOCTYPE plist SYSTEM \"file://localhost/System/Library/DTDs/PropertyList.dtd\">");

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<plist version=\"1.0\">");

        $r4 = virtualinvoke r2.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        specialinvoke r2.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r0, 1, $r4);

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("</plist>");

        virtualinvoke $r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    private void printNode(java.io.PrintWriter, int, org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        boolean $z0, $z1, $z2;
        java.io.PrintWriter r6;
        java.util.List $r3;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20, $r23, $r24;
        int i0, $i1, $i2;
        java.lang.String $r0, $r2, $r10, $r15, $r21, $r22, $r25;
        java.util.Iterator $r11;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r1, r17;
        java.lang.Object $r4, $r16;

        r5 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r6 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $i1 = i0 * 4;

        $r0 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String repeat(java.lang.String,int)>(" ", $i1);

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        if $r2 == null goto label1;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<key>");

        $r21 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        $r22 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</key>");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label1:
        $r3 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getChildren()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<dict>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r16;

        $i2 = i0 + 1;

        specialinvoke r5.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r6, $i2, r17);

        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        virtualinvoke r6.<java.io.PrintWriter: void println()>();

     label3:
        goto label2;

     label4:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</dict>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        goto label6;

     label5:
        $r4 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        specialinvoke r5.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r6, i0, $r4);

     label6:
        return;
    }

    private void printValue(java.io.PrintWriter, int, java.lang.Object)
    {
        byte[] $r12, $r13;
        java.util.Map r86;
        org.apache.commons.configuration.MapConfiguration $r22;
        java.io.PrintWriter r2;
        java.lang.Throwable $r77;
        org.apache.commons.configuration.Configuration r85;
        java.util.Calendar $r65;
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r14, $r15, $r16, $r18, $r19, $r23, $r24, $r25, $r28, $r29, $r30, $r38, $r39, $r40, $r44, $r45, $r46, $r50, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r62, $r63, $r68, $r69, $r70, $r74, $r75, $r78, $r79, $r80, $r82, $r83;
        org.apache.commons.configuration.plist.XMLPropertyListConfiguration r21;
        java.lang.String $r0, $r6, $r7, $r10, $r11, $r17, $r20, $r26, $r31, r33, $r41, $r47, $r53, $r57, $r61, $r64, $r73, $r76, $r81, $r84;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r34, $r37;
        java.util.Date $r66, $r72;
        java.text.DateFormat $r67, $r71;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.apache.commons.configuration.HierarchicalConfiguration $r36;
        java.util.List $r42;
        int i0, $i1, $i2, $i3;
        java.lang.Boolean $r49;
        java.util.Iterator $r27, $r43;
        java.lang.Object r1, $r32, $r35, $r48;

        r21 := @this: org.apache.commons.configuration.plist.XMLPropertyListConfiguration;

        r2 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $i1 = i0 * 4;

        $r0 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String repeat(java.lang.String,int)>(" ", $i1);

        $z0 = r1 instanceof java.util.Date;

        if $z0 == 0 goto label05;

        $r67 = staticinvoke <org.apache.commons.configuration.plist.XMLPropertyListConfiguration$PListNode: java.text.DateFormat access$000()>();

        entermonitor $r67;

     label01:
        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<date>");

        $r71 = staticinvoke <org.apache.commons.configuration.plist.XMLPropertyListConfiguration$PListNode: java.text.DateFormat access$000()>();

        $r72 = (java.util.Date) r1;

        $r73 = virtualinvoke $r71.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r72);

        $r74 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</date>");

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r76);

        exitmonitor $r67;

     label02:
        goto label22;

     label03:
        $r77 := @caughtexception;

        exitmonitor $r67;

     label04:
        throw $r77;

     label05:
        $z1 = r1 instanceof java.util.Calendar;

        if $z1 == 0 goto label06;

        $r65 = (java.util.Calendar) r1;

        $r66 = virtualinvoke $r65.<java.util.Calendar: java.util.Date getTime()>();

        specialinvoke r21.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r2, i0, $r66);

        goto label22;

     label06:
        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label09;

        $z13 = r1 instanceof java.lang.Double;

        if $z13 != 0 goto label07;

        $z14 = r1 instanceof java.lang.Float;

        if $z14 != 0 goto label07;

        $z15 = r1 instanceof java.math.BigDecimal;

        if $z15 == 0 goto label08;

     label07:
        $r78 = new java.lang.StringBuffer;

        specialinvoke $r78.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<real>");

        $r81 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r82 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</real>");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r84);

        goto label22;

     label08:
        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<integer>");

        $r61 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</integer>");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        goto label22;

     label09:
        $z3 = r1 instanceof java.lang.Boolean;

        if $z3 == 0 goto label11;

        $r49 = (java.lang.Boolean) r1;

        $z12 = virtualinvoke $r49.<java.lang.Boolean: boolean booleanValue()>();

        if $z12 == 0 goto label10;

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<true/>");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        goto label22;

     label10:
        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<false/>");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        goto label22;

     label11:
        $z4 = r1 instanceof java.util.List;

        if $z4 == 0 goto label14;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<array>");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r42 = (java.util.List) r1;

        $r43 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z11 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label13;

        $i3 = i0 + 1;

        $r48 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r21.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r2, $i3, $r48);

        goto label12;

     label13:
        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</array>");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        goto label22;

     label14:
        $z5 = r1 instanceof org.apache.commons.configuration.HierarchicalConfiguration;

        if $z5 == 0 goto label15;

        $r36 = (org.apache.commons.configuration.HierarchicalConfiguration) r1;

        $r37 = virtualinvoke $r36.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        specialinvoke r21.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2, i0, $r37);

        goto label22;

     label15:
        $z6 = r1 instanceof org.apache.commons.configuration.Configuration;

        if $z6 == 0 goto label19;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<dict>");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        r85 = (org.apache.commons.configuration.Configuration) r1;

        $r27 = interfaceinvoke r85.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys()>();

     label16:
        $z9 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label18;

        $r32 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.String) $r32;

        $r34 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke $r34.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>(java.lang.String)>(r33);

        $r35 = interfaceinvoke r85.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r33);

        virtualinvoke $r34.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r35);

        $i2 = i0 + 1;

        specialinvoke r21.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2, $i2, $r34);

        $z10 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label17;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label17:
        goto label16;

     label18:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</dict>");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        goto label22;

     label19:
        $z7 = r1 instanceof java.util.Map;

        if $z7 == 0 goto label20;

        r86 = (java.util.Map) r1;

        $r22 = new org.apache.commons.configuration.MapConfiguration;

        specialinvoke $r22.<org.apache.commons.configuration.MapConfiguration: void <init>(java.util.Map)>(r86);

        specialinvoke r21.<org.apache.commons.configuration.plist.XMLPropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r2, i0, $r22);

        goto label22;

     label20:
        $z8 = r1 instanceof byte[];

        if $z8 == 0 goto label21;

        $r11 = new java.lang.String;

        $r12 = (byte[]) r1;

        $r13 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>($r12);

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r13);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<data>");

        $r17 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>($r11);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</data>");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        goto label22;

     label21:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<string>");

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r7 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</string>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label22:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.plist.XMLPropertyListConfiguration: int INDENT_SIZE> = 4;

        <org.apache.commons.configuration.plist.XMLPropertyListConfiguration: long serialVersionUID> = -3162063751042475985L;

        return;
    }
}
