public class javax.activation.MimeType extends java.lang.Object implements java.io.Externalizable
{
    private static final java.lang.String SPECIALS;
    private java.lang.String primaryType;
    private java.lang.String subType;
    private final javax.activation.MimeTypeParameterList parameterList;

    static boolean isSpecial(char)
    {
        char c0;
        int $i1, $i2, $i4;
        java.lang.String $r0;
        boolean $z0, $z1, $z2;

        c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z1 != 0 goto label1;

        $r0 = "()<>@,;:\\\"/[]?=";

        $i2 = (int) c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i2);

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void <init>()
    {
        javax.activation.MimeTypeParameterList $r1;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.activation.MimeType: java.lang.String primaryType> = "application";

        r0.<javax.activation.MimeType: java.lang.String subType> = "*";

        $r1 = new javax.activation.MimeTypeParameterList;

        specialinvoke $r1.<javax.activation.MimeTypeParameterList: void <init>()>();

        r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList> = $r1;

        return;
    }

    public void <init>(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        java.lang.String r2;
        javax.activation.MimeTypeParameterList $r1;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.activation.MimeType: java.lang.String primaryType> = "application";

        r0.<javax.activation.MimeType: java.lang.String subType> = "*";

        $r1 = new javax.activation.MimeTypeParameterList;

        specialinvoke $r1.<javax.activation.MimeTypeParameterList: void <init>()>();

        r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList> = $r1;

        specialinvoke r0.<javax.activation.MimeType: void parseMimeType(java.lang.String)>(r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws javax.activation.MimeTypeParseException
    {
        javax.activation.MimeTypeParameterList $r1;
        javax.activation.MimeType r0;
        java.lang.String r2, r3;

        r0 := @this: javax.activation.MimeType;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.activation.MimeType: java.lang.String primaryType> = "application";

        r0.<javax.activation.MimeType: java.lang.String subType> = "*";

        $r1 = new javax.activation.MimeTypeParameterList;

        specialinvoke $r1.<javax.activation.MimeTypeParameterList: void <init>()>();

        r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList> = $r1;

        virtualinvoke r0.<javax.activation.MimeType: void setPrimaryType(java.lang.String)>(r2);

        virtualinvoke r0.<javax.activation.MimeType: void setSubType(java.lang.String)>(r3);

        return;
    }

    public java.lang.String getPrimaryType()
    {
        java.lang.String $r1;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        $r1 = r0.<javax.activation.MimeType: java.lang.String primaryType>;

        return $r1;
    }

    public void setPrimaryType(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        java.lang.String r1, $r2;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <javax.activation.MimeType: java.lang.String parseToken(java.lang.String)>(r1);

        r0.<javax.activation.MimeType: java.lang.String primaryType> = $r2;

        return;
    }

    public java.lang.String getSubType()
    {
        java.lang.String $r1;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        $r1 = r0.<javax.activation.MimeType: java.lang.String subType>;

        return $r1;
    }

    public void setSubType(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        java.lang.String r1, $r2;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <javax.activation.MimeType: java.lang.String parseToken(java.lang.String)>(r1);

        r0.<javax.activation.MimeType: java.lang.String subType> = $r2;

        return;
    }

    public javax.activation.MimeTypeParameterList getParameters()
    {
        javax.activation.MimeTypeParameterList $r1;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        $r1 = r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        javax.activation.MimeTypeParameterList $r2;
        javax.activation.MimeType r0;
        java.lang.String r1, $r3;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        $r3 = virtualinvoke $r2.<javax.activation.MimeTypeParameterList: java.lang.String get(java.lang.String)>(r1);

        return $r3;
    }

    public void setParameter(java.lang.String, java.lang.String)
    {
        javax.activation.MimeTypeParameterList $r3;
        javax.activation.MimeType r0;
        java.lang.String r1, r2;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        virtualinvoke $r3.<javax.activation.MimeTypeParameterList: void set(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void removeParameter(java.lang.String)
    {
        java.lang.String r1;
        javax.activation.MimeTypeParameterList $r2;
        javax.activation.MimeType r0;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        virtualinvoke $r2.<javax.activation.MimeTypeParameterList: void remove(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        javax.activation.MimeTypeParameterList $r4;
        javax.activation.MimeType r1;
        java.lang.StringBuilder $r0, $r3, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: javax.activation.MimeType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<javax.activation.MimeType: java.lang.String getBaseType()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r1.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        $r5 = virtualinvoke $r4.<javax.activation.MimeTypeParameterList: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getBaseType()
    {
        javax.activation.MimeType r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: javax.activation.MimeType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<javax.activation.MimeType: java.lang.String getPrimaryType()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke r1.<javax.activation.MimeType: java.lang.String getSubType()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean match(javax.activation.MimeType)
    {
        javax.activation.MimeType r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: javax.activation.MimeType;

        $r3 = r0.<javax.activation.MimeType: java.lang.String primaryType>;

        $r2 = r1.<javax.activation.MimeType: java.lang.String primaryType>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = "*";

        $r4 = r0.<javax.activation.MimeType: java.lang.String subType>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r7 = "*";

        $r6 = r1.<javax.activation.MimeType: java.lang.String subType>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $r9 = r0.<javax.activation.MimeType: java.lang.String subType>;

        $r8 = r1.<javax.activation.MimeType: java.lang.String subType>;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        return $z3;
    }

    public boolean match(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        javax.activation.MimeType r0, $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: javax.activation.MimeType;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.activation.MimeType;

        specialinvoke $r1.<javax.activation.MimeType: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<javax.activation.MimeType: boolean match(javax.activation.MimeType)>($r1);

        return $z0;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        java.lang.String $r2;
        java.io.ObjectOutput r0;
        javax.activation.MimeType r1;

        r1 := @this: javax.activation.MimeType;

        r0 := @parameter0: java.io.ObjectOutput;

        $r2 = virtualinvoke r1.<javax.activation.MimeType: java.lang.String toString()>();

        interfaceinvoke r0.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r2);

        interfaceinvoke r0.<java.io.ObjectOutput: void flush()>();

        return;
    }

    public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        javax.activation.MimeTypeParseException $r3;
        javax.activation.MimeType r0;
        java.io.ObjectInput r1;
        java.io.IOException $r4;
        java.lang.String $r2, $r5;

        r0 := @this: javax.activation.MimeType;

        r1 := @parameter0: java.io.ObjectInput;

     label1:
        $r2 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        specialinvoke r0.<javax.activation.MimeType: void parseMimeType(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke $r3.<javax.activation.MimeTypeParseException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        return;

        catch javax.activation.MimeTypeParseException from label1 to label2 with label3;
    }

    private void parseMimeType(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        javax.activation.MimeTypeParseException $r8;
        javax.activation.MimeTypeParameterList $r4;
        javax.activation.MimeType r1;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String r0, $r2, $r3, $r5, $r6;

        r1 := @this: javax.activation.MimeType;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $r8 = new javax.activation.MimeTypeParseException;

        specialinvoke $r8.<javax.activation.MimeTypeParseException: void <init>(java.lang.String)>("Expected \'/\'");

        throw $r8;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke r1.<javax.activation.MimeType: void setPrimaryType(java.lang.String)>($r2);

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, $i1);

        $i8 = (int) -1;

        if $i2 != $i8 goto label2;

        $i4 = $i0 + 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        virtualinvoke r1.<javax.activation.MimeType: void setSubType(java.lang.String)>($r6);

        goto label3;

     label2:
        $i3 = $i0 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        virtualinvoke r1.<javax.activation.MimeType: void setSubType(java.lang.String)>($r3);

        $r4 = r1.<javax.activation.MimeType: javax.activation.MimeTypeParameterList parameterList>;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke $r4.<javax.activation.MimeTypeParameterList: void parse(java.lang.String)>($r5);

     label3:
        return;
    }

    private static java.lang.String parseToken(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        char $c1;
        javax.activation.MimeTypeParseException $r1;
        int $i0, i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r0, $r6, r7;
        boolean $z0;

        r7 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <javax.activation.MimeType: boolean isSpecial(char)>($c1);

        if $z0 == 0 goto label2;

        $r1 = new javax.activation.MimeTypeParseException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Special \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed in token");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javax.activation.MimeTypeParseException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static void <clinit>()
    {
        <javax.activation.MimeType: java.lang.String SPECIALS> = "()<>@,;:\\\"/[]?=";

        return;
    }
}
