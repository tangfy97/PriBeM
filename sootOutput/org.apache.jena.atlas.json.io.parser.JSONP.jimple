public class org.apache.jena.atlas.json.io.parser.JSONP extends org.apache.jena.atlas.json.io.parser.ParserBase
{
    private org.apache.jena.atlas.json.io.JSONHandler handler;

    public void <init>(org.apache.jena.atlas.json.io.parser.TokenizerJSON, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.parser.TokenizerJSON r1;
        org.apache.jena.atlas.json.io.JSONHandler r2;
        org.apache.jena.atlas.json.io.parser.JSONP r0;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONP;

        r1 := @parameter0: org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        r2 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        specialinvoke r0.<org.apache.jena.atlas.json.io.parser.ParserBase: void <init>(org.apache.jena.riot.tokens.Tokenizer)>(r1);

        r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler> = r2;

        return;
    }

    public void parse()
    {
        java.lang.Object[] $r8;
        org.apache.jena.riot.tokens.Token $r1, $r5;
        org.apache.jena.riot.tokens.TokenType $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;
        org.apache.jena.atlas.json.io.parser.JSONP r0;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONP;

        $r1 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LBRACE>;

        $z0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a JSON object START: ");

        $r5 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r7, $r8);

     label1:
        specialinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseObject()>();

        return;
    }

    private void parseObject()
    {
        org.apache.jena.atlas.json.io.parser.JSONP r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r10, $r11, $r13, $r16, $r17, $r19, $r22, $r23, $r25;
        java.lang.Object[] $r15, $r21, $r27;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        org.apache.jena.riot.tokens.Token $r12, $r18, $r24, $r29;
        org.apache.jena.atlas.json.io.JSONHandler $r1, $r3, $r5, $r6, $r9, $r28, $r31;
        java.lang.String $r14, $r20, $r26, $r30;
        org.apache.jena.riot.tokens.TokenType $r2, $r4, $r7, $r8, $r32;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONP;

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r1 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l1 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l0 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r1.<org.apache.jena.atlas.json.io.JSONHandler: void startObject(long,long)>($l1, $l0);

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACE>;

        $z0 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r28 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l11 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l10 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r28.<org.apache.jena.atlas.json.io.JSONHandler: void finishObject(long,long)>($l11, $l10);

        return;

     label1:
        $r3 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l3 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l2 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r3.<org.apache.jena.atlas.json.io.JSONHandler: void startPair(long,long)>($l3, $l2);

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        $z1 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r4);

        if $z1 != 0 goto label2;

        $z4 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAtString()>();

        if $z4 != 0 goto label2;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a key for a JSON object: ");

        $r24 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r26, $r27);

     label2:
        $r29 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r30 = virtualinvoke $r29.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r31 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l12 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l13 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r31.<org.apache.jena.atlas.json.io.JSONHandler: void valueString(java.lang.String,long,long)>($r30, $l12, $l13);

        $r32 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType COLON>;

        $z5 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r32);

        if $z5 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a colon: ");

        $r18 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r20, $r21);

     label3:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r5 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l5 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l4 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r5.<org.apache.jena.atlas.json.io.JSONHandler: void keyPair(long,long)>($l5, $l4);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseAny()>();

        $r6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l7 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r6.<org.apache.jena.atlas.json.io.JSONHandler: void finishPair(long,long)>($l7, $l6);

        $r7 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType COMMA>;

        $z2 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r7);

        if $z2 != 0 goto label4;

        goto label5;

     label4:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        goto label1;

     label5:
        $r8 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACE>;

        $z3 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r8);

        if $z3 != 0 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal: ");

        $r12 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r14, $r15);

     label6:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r9 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l9 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l8 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r9.<org.apache.jena.atlas.json.io.JSONHandler: void finishObject(long,long)>($l9, $l8);

        return;
    }

    public void parseAny()
    {
        int[] $r1;
        org.apache.jena.atlas.json.io.parser.JSONP r0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r22, $r23, $r25;
        java.lang.Object[] $r27;
        long $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17;
        org.apache.jena.riot.tokens.Token $r2, $r4, $r11, $r14, $r17, $r20, $r24;
        org.apache.jena.atlas.json.io.JSONHandler $r6, $r7, $r8, $r9, $r10, $r13, $r16, $r19;
        int $i0, $i1;
        java.lang.String $r5, $r12, $r15, $r18, $r21, $r26;
        org.apache.jena.riot.tokens.TokenType $r3;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONP;

        $r1 = <org.apache.jena.atlas.json.io.parser.JSONP$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r2 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $i0 = virtualinvoke $r3.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label06;
            case 9: goto label06;
            case 10: goto label07;
            default: goto label11;
        };

     label01:
        specialinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseObject()>();

        return;

     label02:
        specialinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseArray()>();

        return;

     label03:
        $r19 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $r20 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r21 = virtualinvoke $r20.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $l17 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l16 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r19.<org.apache.jena.atlas.json.io.JSONHandler: void valueInteger(java.lang.String,long,long)>($r21, $l17, $l16);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label04:
        $r16 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $r17 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r18 = virtualinvoke $r17.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $l15 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l14 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r16.<org.apache.jena.atlas.json.io.JSONHandler: void valueDecimal(java.lang.String,long,long)>($r18, $l15, $l14);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label05:
        $r13 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $r14 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r15 = virtualinvoke $r14.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $l13 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l12 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r13.<org.apache.jena.atlas.json.io.JSONHandler: void valueDouble(java.lang.String,long,long)>($r15, $l13, $l12);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label06:
        $r10 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $r11 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r12 = virtualinvoke $r11.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $l11 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l10 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r10.<org.apache.jena.atlas.json.io.JSONHandler: void valueString(java.lang.String,long,long)>($r12, $l11, $l10);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label07:
        $r4 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label08;

        $r9 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l9 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l8 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r9.<org.apache.jena.atlas.json.io.JSONHandler: void valueBoolean(boolean,long,long)>(1, $l9, $l8);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label08:
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z1 == 0 goto label09;

        $r8 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l7 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r8.<org.apache.jena.atlas.json.io.JSONHandler: void valueBoolean(boolean,long,long)>(0, $l7, $l6);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label09:
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z2 == 0 goto label10;

        $r7 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l5 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l4 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r7.<org.apache.jena.atlas.json.io.JSONHandler: void valueNull(long,long)>($l5, $l4);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        return;

     label10:
        $r6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l3 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l2 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r6.<org.apache.jena.atlas.json.io.JSONHandler: void valueString(java.lang.String,long,long)>($r5, $l3, $l2);

        goto label12;

     label11:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized token: ");

        $r24 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r26, $r27);

     label12:
        return;
    }

    private void parseArray()
    {
        java.lang.Object[] $r12;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7;
        org.apache.jena.riot.tokens.Token $r9;
        org.apache.jena.atlas.json.io.JSONHandler $r1, $r3, $r6, $r13;
        java.lang.String $r11;
        org.apache.jena.atlas.json.io.parser.JSONP r0;
        boolean $z0, $z1, $z2;
        org.apache.jena.riot.tokens.TokenType $r2, $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONP;

        $r1 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l1 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l0 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r1.<org.apache.jena.atlas.json.io.JSONHandler: void startArray(long,long)>($l1, $l0);

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACKET>;

        $z0 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r13 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l7 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r13.<org.apache.jena.atlas.json.io.JSONHandler: void finishArray(long,long)>($l7, $l6);

        return;

     label1:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseAny()>();

        $r3 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l3 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l2 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r3.<org.apache.jena.atlas.json.io.JSONHandler: void element(long,long)>($l3, $l2);

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType COMMA>;

        $z1 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r4);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        goto label1;

     label3:
        $r5 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACKET>;

        $z2 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>($r5);

        if $z2 != 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal: ");

        $r9 = virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token peekToken()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: void exception(java.lang.String,java.lang.Object[])>($r11, $r12);

     label4:
        virtualinvoke r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.riot.tokens.Token nextToken()>();

        $r6 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: org.apache.jena.atlas.json.io.JSONHandler handler>;

        $l5 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currLine>;

        $l4 = r0.<org.apache.jena.atlas.json.io.parser.JSONP: long currCol>;

        interfaceinvoke $r6.<org.apache.jena.atlas.json.io.JSONHandler: void finishArray(long,long)>($l5, $l4);

        return;
    }
}
