public class com.jidesoft.converter.ByteConverter extends com.jidesoft.converter.NumberConverter
{

    public void <init>()
    {
        com.jidesoft.converter.ByteConverter r0;
        java.text.NumberFormat $r1;

        r0 := @this: com.jidesoft.converter.ByteConverter;

        $r1 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getIntegerInstance()>();

        specialinvoke r0.<com.jidesoft.converter.ByteConverter: void <init>(java.text.NumberFormat)>($r1);

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        com.jidesoft.converter.ByteConverter r0;
        java.text.NumberFormat r1;

        r0 := @this: com.jidesoft.converter.ByteConverter;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<com.jidesoft.converter.NumberConverter: void <init>(java.text.NumberFormat)>(r1);

        return;
    }

    public java.lang.Object fromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        byte $b0;
        com.jidesoft.converter.ByteConverter r0;
        com.jidesoft.converter.ConverterContext r3;
        java.lang.String r1;
        java.lang.Number $r2;
        java.lang.Byte $r4;

        r0 := @this: com.jidesoft.converter.ByteConverter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.jidesoft.converter.ConverterContext;

        $r2 = virtualinvoke r0.<com.jidesoft.converter.ByteConverter: java.lang.Number parseNumber(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $b0 = virtualinvoke $r2.<java.lang.Number: byte byteValue()>();

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public boolean supportFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        java.lang.String r1;
        com.jidesoft.converter.ByteConverter r0;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.ByteConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }
}
