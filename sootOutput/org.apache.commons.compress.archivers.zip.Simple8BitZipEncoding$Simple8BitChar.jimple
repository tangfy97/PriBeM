final class org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar extends java.lang.Object implements java.lang.Comparable
{
    public final char unicode;
    public final byte code;

    void <init>(byte, char)
    {
        char c1;
        byte b0;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        b0 := @parameter0: byte;

        c1 := @parameter1: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: byte code> = b0;

        r0.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode> = c1;

        return;
    }

    public int compareTo(org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar)
    {
        int $i2, $i3, $i4;
        char $c0, $c1;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r0, r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        $c1 = r0.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $c0 = r1.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $i3 = (int) $c1;

        $i4 = (int) $c0;

        $i2 = $i3 - $i4;

        return $i2;
    }

    public java.lang.String toString()
    {
        short $s3, $s5;
        byte $b2;
        int $i4, $i6;
        java.lang.String $r3, $r6, $r8;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r2;
        char $c0, $c1;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r9;

        r2 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $c0 = r2.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $c1 = 65535 & $c0;

        $i4 = (int) $c1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->0x");

        $b2 = r2.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: byte code>;

        $s5 = (short) $b2;

        $s3 = 255 & $s5;

        $i6 = (int) $s3;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        char $c0, $c1;
        byte $b2, $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.Object r0;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r1, r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        if $z0 == 0 goto label3;

        r1 = (org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar) r0;

        $c1 = r2.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $c0 = r1.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $i4 = (int) $c1;

        $i5 = (int) $c0;

        if $i4 != $i5 goto label1;

        $b3 = r2.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: byte code>;

        $b2 = r1.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: byte code>;

        $i6 = (int) $b3;

        $i7 = (int) $b2;

        if $i6 != $i7 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i1;
        char $c0;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        $c0 = r0.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: char unicode>;

        $i1 = (int) $c0;

        return $i1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar r0, $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar) r1;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar: int compareTo(org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar)>($r2);

        return $i0;
    }
}
