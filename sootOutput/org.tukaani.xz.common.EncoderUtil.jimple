public class org.tukaani.xz.common.EncoderUtil extends org.tukaani.xz.common.Util
{

    public void <init>()
    {
        org.tukaani.xz.common.EncoderUtil r0;

        r0 := @this: org.tukaani.xz.common.EncoderUtil;

        specialinvoke r0.<org.tukaani.xz.common.Util: void <init>()>();

        return;
    }

    public static void writeCRC32(java.io.OutputStream, byte[]) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r1;
        long $l0, $l2;
        byte $b4;
        int $i1, $i3, i5, $i6;
        java.util.zip.CRC32 $r3;

        r2 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: byte[];

        $r3 = new java.util.zip.CRC32;

        specialinvoke $r3.<java.util.zip.CRC32: void <init>()>();

        virtualinvoke $r3.<java.util.zip.CRC32: void update(byte[])>(r1);

        $l0 = virtualinvoke $r3.<java.util.zip.CRC32: long getValue()>();

        i5 = 0;

     label1:
        if i5 >= 4 goto label2;

        $i1 = i5 * 8;

        $l2 = $l0 >>> $i1;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $i6 = (int) $b4;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i6);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public static void encodeVLI(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r0;
        long $l3, l6;
        byte $b0, $b2, $b5;
        int $i1, $i4, $i7, $i8, $i9;

        r0 := @parameter0: java.io.OutputStream;

        l6 := @parameter1: long;

     label1:
        $b0 = l6 cmp 128L;

        $i7 = (int) $b0;

        if $i7 < 0 goto label2;

        $l3 = l6 | 128L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $i8 = (int) $b5;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i8);

        l6 = l6 >>> 7;

        goto label1;

     label2:
        $i1 = (int) l6;

        $b2 = (byte) $i1;

        $i9 = (int) $b2;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i9);

        return;
    }
}
