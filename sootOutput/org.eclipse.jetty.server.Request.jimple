public class org.eclipse.jetty.server.Request extends java.lang.Object implements javax.servlet.http.HttpServletRequest
{
    public static final java.lang.String __MULTIPART_CONFIG_ELEMENT;
    public static final java.lang.String __MULTIPART_INPUT_STREAM;
    public static final java.lang.String __MULTIPART_CONTEXT;
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final java.lang.String __ASYNC_FWD;
    private static final java.util.Collection __defaultLocale;
    private static final int __NONE;
    private static final int _STREAM;
    private static final int __READER;
    protected final org.eclipse.jetty.server.AsyncContinuation _async;
    private boolean _asyncSupported;
    private volatile org.eclipse.jetty.util.Attributes _attributes;
    private org.eclipse.jetty.server.Authentication _authentication;
    private org.eclipse.jetty.util.MultiMap _baseParameters;
    private java.lang.String _characterEncoding;
    protected org.eclipse.jetty.server.AbstractHttpConnection _connection;
    private org.eclipse.jetty.server.handler.ContextHandler$Context _context;
    private boolean _newContext;
    private java.lang.String _contextPath;
    private org.eclipse.jetty.server.CookieCutter _cookies;
    private boolean _cookiesExtracted;
    private javax.servlet.DispatcherType _dispatcherType;
    private boolean _dns;
    private org.eclipse.jetty.io.EndPoint _endp;
    private boolean _handled;
    private int _inputState;
    private java.lang.String _method;
    private org.eclipse.jetty.util.MultiMap _parameters;
    private boolean _paramsExtracted;
    private java.lang.String _pathInfo;
    private int _port;
    private java.lang.String _protocol;
    private java.lang.String _queryEncoding;
    private java.lang.String _queryString;
    private java.io.BufferedReader _reader;
    private java.lang.String _readerEncoding;
    private java.lang.String _remoteAddr;
    private java.lang.String _remoteHost;
    private java.lang.Object _requestAttributeListeners;
    private java.lang.String _requestedSessionId;
    private boolean _requestedSessionIdFromCookie;
    private java.lang.String _requestURI;
    private java.util.Map _savedNewSessions;
    private java.lang.String _scheme;
    private org.eclipse.jetty.server.UserIdentity$Scope _scope;
    private java.lang.String _serverName;
    private java.lang.String _servletPath;
    private javax.servlet.http.HttpSession _session;
    private org.eclipse.jetty.server.SessionManager _sessionManager;
    private long _timeStamp;
    private long _dispatchTime;
    private org.eclipse.jetty.io.Buffer _timeStampBuffer;
    private org.eclipse.jetty.http.HttpURI _uri;
    private org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream;

    public static org.eclipse.jetty.server.Request getRequest(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.Request $r2, $r3;
        javax.servlet.http.HttpServletRequest r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        boolean $z0;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $z0 = r0 instanceof org.eclipse.jetty.server.Request;

        if $z0 == 0 goto label1;

        $r3 = (org.eclipse.jetty.server.Request) r0;

        return $r3;

     label1:
        $r1 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

        return $r2;
    }

    public void <init>()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AsyncContinuation $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.eclipse.jetty.server.AsyncContinuation;

        specialinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async> = $r1;

        r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported> = 1;

        r0.<org.eclipse.jetty.server.Request: boolean _cookiesExtracted> = 0;

        r0.<org.eclipse.jetty.server.Request: boolean _dns> = 0;

        r0.<org.eclipse.jetty.server.Request: boolean _handled> = 0;

        r0.<org.eclipse.jetty.server.Request: int _inputState> = 0;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _protocol> = "HTTP/1.1";

        r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie> = 0;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _scheme> = "http";

        return;
    }

    public void <init>(org.eclipse.jetty.server.AbstractHttpConnection)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection r2;
        org.eclipse.jetty.server.AsyncContinuation $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.eclipse.jetty.server.AsyncContinuation;

        specialinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async> = $r1;

        r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported> = 1;

        r0.<org.eclipse.jetty.server.Request: boolean _cookiesExtracted> = 0;

        r0.<org.eclipse.jetty.server.Request: boolean _dns> = 0;

        r0.<org.eclipse.jetty.server.Request: boolean _handled> = 0;

        r0.<org.eclipse.jetty.server.Request: int _inputState> = 0;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _protocol> = "HTTP/1.1";

        r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie> = 0;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _scheme> = "http";

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setConnection(org.eclipse.jetty.server.AbstractHttpConnection)>(r2);

        return;
    }

    public void addEventListener(java.util.EventListener)
    {
        org.eclipse.jetty.server.Request r7;
        java.lang.IllegalArgumentException $r1, $r4;
        java.util.EventListener r0;
        java.lang.Class $r2, $r5;
        java.lang.Object $r8, $r9;
        java.lang.String $r3, $r6;
        boolean $z0, $z1, $z2;

        r7 := @this: org.eclipse.jetty.server.Request;

        r0 := @parameter0: java.util.EventListener;

        $z0 = r0 instanceof javax.servlet.ServletRequestAttributeListener;

        if $z0 == 0 goto label1;

        $r8 = r7.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $r9 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r8, r0);

        r7.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners> = $r9;

     label1:
        $z1 = r0 instanceof org.eclipse.jetty.continuation.ContinuationListener;

        if $z1 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $z2 = r0 instanceof javax.servlet.AsyncListener;

        if $z2 == 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label3:
        return;
    }

    public void extractParameters()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.Integer $r34, $r40;
        org.eclipse.jetty.server.Server $r31, $r37;
        java.util.Set $r7;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r81;
        java.lang.Throwable $r57;
        java.lang.Object[] $r64, $r70;
        java.lang.String $r15, $r16, $r17, $r18, $r28, $r33, $r39, $r45, $r46, $r48, $r49, $r63, $r69, $r72, $r73, r78;
        java.lang.Number r74, r75;
        java.util.Map$Entry r77;
        org.eclipse.jetty.util.MultiMap $r1, $r3, $r4, $r5, $r6, $r12, $r14, $r21, $r50, $r52, $r54, $r55, $r58, $r59, $r76, $r79, $r80;
        java.io.IOException $r60;
        java.lang.IllegalStateException $r82;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r19, $r41, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.UnsupportedEncodingException $r66;
        javax.servlet.ServletInputStream $r20;
        org.eclipse.jetty.server.AbstractHttpConnection $r29, $r35;
        org.eclipse.jetty.http.HttpURI $r2, $r47, $r51, $r53;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, $i9, $i11, $i13;
        java.util.Iterator $r8;
        org.eclipse.jetty.server.handler.ContextHandler $r42, $r44;
        java.lang.Object $r9, $r10, $r11, $r13, $r32, $r38;
        org.eclipse.jetty.util.log.Logger $r61, $r62, $r65, $r67, $r68, $r71;
        org.eclipse.jetty.server.Connector $r30, $r36;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        if $r1 != null goto label01;

        $r80 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r80.<org.eclipse.jetty.util.MultiMap: void <init>(int)>(16);

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters> = $r80;

     label01:
        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 == 0 goto label03;

        $r54 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r54 != null goto label02;

        $r55 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = $r55;

     label02:
        return;

     label03:
        r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted> = 1;

     label04:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        if $r2 == null goto label09;

        $r47 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $z9 = virtualinvoke $r47.<org.eclipse.jetty.http.HttpURI: boolean hasQuery()>();

        if $z9 == 0 goto label09;

        $r48 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding>;

        if $r48 != null goto label05;

        $r53 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r52 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        virtualinvoke $r53.<org.eclipse.jetty.http.HttpURI: void decodeQueryTo(org.eclipse.jetty.util.MultiMap)>($r52);

        goto label09;

     label05:
        $r51 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r50 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        $r49 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding>;

        virtualinvoke $r51.<org.eclipse.jetty.http.HttpURI: void decodeQueryTo(org.eclipse.jetty.util.MultiMap,java.lang.String)>($r50, $r49);

     label06:
        goto label09;

     label07:
        $r66 := @caughtexception;

        $r67 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        $z11 = interfaceinvoke $r67.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z11 == 0 goto label08;

        $r71 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r71.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r66);

        goto label09;

     label08:
        $r68 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        $r69 = virtualinvoke $r66.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        $r70 = newarray (java.lang.Object)[0];

        interfaceinvoke $r68.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r69, $r70);

     label09:
        $r72 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getCharacterEncoding()>();

        $r73 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        if $r73 == null goto label25;

        $i1 = virtualinvoke $r73.<java.lang.String: int length()>();

        if $i1 <= 0 goto label25;

        $r15 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String valueParameters(java.lang.String,java.util.Map)>($r73, null);

        $r16 = "application/x-www-form-urlencoded";

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);

        if $z2 == 0 goto label25;

        $i2 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i2 != 0 goto label25;

        $r17 = "POST";

        $r18 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 != 0 goto label10;

        $r45 = "PUT";

        $r46 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getMethod()>();

        $z8 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z8 == 0 goto label25;

     label10:
        $i3 = virtualinvoke r0.<org.eclipse.jetty.server.Request: int getContentLength()>();

        if $i3 == 0 goto label25;

     label11:
        $i9 = (int) -1;

        i4 = $i9;

        $i11 = (int) -1;

        i5 = $i11;

        $r19 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r19 == null goto label12;

        $r41 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r42 = virtualinvoke $r41.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        i4 = virtualinvoke $r42.<org.eclipse.jetty.server.handler.ContextHandler: int getMaxFormContentSize()>();

        $r43 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r44 = virtualinvoke $r43.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        i5 = virtualinvoke $r44.<org.eclipse.jetty.server.handler.ContextHandler: int getMaxFormKeys()>();

     label12:
        if i4 >= 0 goto label15;

        $r35 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r36 = virtualinvoke $r35.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Connector getConnector()>();

        $r37 = interfaceinvoke $r36.<org.eclipse.jetty.server.Connector: org.eclipse.jetty.server.Server getServer()>();

        $r38 = virtualinvoke $r37.<org.eclipse.jetty.server.Server: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.server.Request.maxFormContentSize");

        if $r38 != null goto label13;

        i4 = 200000;

        goto label15;

     label13:
        $z6 = $r38 instanceof java.lang.Number;

        if $z6 == 0 goto label14;

        r74 = (java.lang.Number) $r38;

        i4 = virtualinvoke r74.<java.lang.Number: int intValue()>();

        goto label15;

     label14:
        $z7 = $r38 instanceof java.lang.String;

        if $z7 == 0 goto label15;

        $r39 = (java.lang.String) $r38;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r39);

        i4 = virtualinvoke $r40.<java.lang.Integer: int intValue()>();

     label15:
        if i5 >= 0 goto label18;

        $r29 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r30 = virtualinvoke $r29.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Connector getConnector()>();

        $r31 = interfaceinvoke $r30.<org.eclipse.jetty.server.Connector: org.eclipse.jetty.server.Server getServer()>();

        $r32 = virtualinvoke $r31.<org.eclipse.jetty.server.Server: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.server.Request.maxFormKeys");

        if $r32 != null goto label16;

        i5 = 1000;

        goto label18;

     label16:
        $z4 = $r32 instanceof java.lang.Number;

        if $z4 == 0 goto label17;

        r75 = (java.lang.Number) $r32;

        i5 = virtualinvoke r75.<java.lang.Number: int intValue()>();

        goto label18;

     label17:
        $z5 = $r32 instanceof java.lang.String;

        if $z5 == 0 goto label18;

        $r33 = (java.lang.String) $r32;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r33);

        i5 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

     label18:
        if $i3 <= i4 goto label19;

        if i4 <= 0 goto label19;

        $r82 = new java.lang.IllegalStateException;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Form too large ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r82.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r82;

     label19:
        $r20 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletInputStream getInputStream()>();

        $r21 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        if $i3 >= 0 goto label20;

        $i6 = i4;

        goto label21;

     label20:
        $i13 = (int) -1;

        $i6 = $i13;

     label21:
        staticinvoke <org.eclipse.jetty.util.UrlEncoded: void decodeTo(java.io.InputStream,org.eclipse.jetty.util.MultiMap,java.lang.String,int,int)>($r20, $r21, $r72, $i6, i5);

     label22:
        goto label25;

     label23:
        $r60 := @caughtexception;

        $r61 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        $z10 = interfaceinvoke $r61.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z10 == 0 goto label24;

        $r65 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r65.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r60);

        goto label25;

     label24:
        $r62 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        $r63 = virtualinvoke $r60.<java.io.IOException: java.lang.String toString()>();

        $r64 = newarray (java.lang.Object)[0];

        interfaceinvoke $r62.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r63, $r64);

     label25:
        $r76 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r76 != null goto label26;

        $r14 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = $r14;

        goto label30;

     label26:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        if $r4 == $r3 goto label30;

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.util.MultiMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label30;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r77 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r77.<java.util.Map$Entry: java.lang.Object getKey()>();

        r78 = (java.lang.String) $r10;

        $r11 = interfaceinvoke r77.<java.util.Map$Entry: java.lang.Object getValue()>();

        i7 = 0;

     label28:
        $i0 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r11);

        if i7 >= $i0 goto label29;

        $r12 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r13 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r11, i7);

        virtualinvoke $r12.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r78, $r13);

        i7 = i7 + 1;

        goto label28;

     label29:
        goto label27;

     label30:
        $r79 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r79 != null goto label34;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = $r5;

        goto label34;

     label31:
        $r57 := @caughtexception;

     label32:
        $r58 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r58 != null goto label33;

        $r59 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = $r59;

     label33:
        throw $r57;

     label34:
        return;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
        catch java.io.IOException from label11 to label22 with label23;
        catch java.lang.Throwable from label04 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

    public javax.servlet.AsyncContext getAsyncContext()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r4;
        java.lang.String $r6;
        org.eclipse.jetty.server.AsyncContinuation $r1, $r2, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        $z0 = virtualinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        $z1 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isAsyncStarted()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.AsyncContinuation: java.lang.String getStatusString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        return $r2;
    }

    public org.eclipse.jetty.server.AsyncContinuation getAsyncContinuation()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AsyncContinuation $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        return $r1;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.eclipse.jetty.server.Request r2;
        org.eclipse.jetty.util.Attributes $r3, $r4;
        org.eclipse.jetty.io.EndPoint $r10;
        org.eclipse.jetty.server.AbstractHttpConnection $r9;
        long $l1;
        java.lang.Long $r8;
        int $i0;
        java.lang.String r0, $r1, $r6;
        boolean $z0, $z1;
        java.lang.Object r5, $r11;
        org.eclipse.jetty.server.AsyncContinuation $r7;

        r2 := @this: org.eclipse.jetty.server.Request;

        r0 := @parameter0: java.lang.String;

        $r1 = "org.eclipse.jetty.io.EndPoint.maxIdleTime";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.Long;

        $r9 = virtualinvoke r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection getConnection()>();

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $i0 = interfaceinvoke $r10.<org.eclipse.jetty.io.EndPoint: int getMaxIdleTime()>();

        $l1 = (long) $i0;

        specialinvoke $r8.<java.lang.Long: void <init>(long)>($l1);

        return $r8;

     label1:
        $r3 = r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r3 != null goto label2;

        $r11 = null;

        goto label3;

     label2:
        $r4 = r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        $r11 = interfaceinvoke $r4.<org.eclipse.jetty.util.Attributes: java.lang.Object getAttribute(java.lang.String)>(r0);

     label3:
        r5 = $r11;

        if $r11 != null goto label4;

        $r6 = "org.eclipse.jetty.continuation";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label4;

        $r7 = r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        return $r7;

     label4:
        return r5;
    }

    public java.util.Enumeration getAttributeNames()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.List $r4;
        org.eclipse.jetty.util.Attributes $r1, $r2;
        java.util.Enumeration $r3, $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r1 != null goto label1;

        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r5 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r4);

        return $r5;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        $r3 = staticinvoke <org.eclipse.jetty.util.AttributesMap: java.util.Enumeration getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)>($r2);

        return $r3;
    }

    public org.eclipse.jetty.util.Attributes getAttributes()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.AttributesMap $r3;
        org.eclipse.jetty.util.Attributes $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r1 != null goto label1;

        $r3 = new org.eclipse.jetty.util.AttributesMap;

        specialinvoke $r3.<org.eclipse.jetty.util.AttributesMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes> = $r3;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        return $r2;
    }

    public org.eclipse.jetty.server.Authentication getAuthentication()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        return $r1;
    }

    public java.lang.String getAuthType()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication$Deferred $r7;
        org.eclipse.jetty.server.Authentication $r1, $r2, $r3, $r6, $r8;
        org.eclipse.jetty.server.Authentication$User $r4;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r7 = (org.eclipse.jetty.server.Authentication$Deferred) $r6;

        $r8 = interfaceinvoke $r7.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication authenticate(javax.servlet.ServletRequest)>(r0);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r8);

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z1 = $r2 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r4 = (org.eclipse.jetty.server.Authentication$User) $r3;

        $r5 = interfaceinvoke $r4.<org.eclipse.jetty.server.Authentication$User: java.lang.String getAuthMethod()>();

        return $r5;

     label2:
        return null;
    }

    public java.lang.String getCharacterEncoding()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _characterEncoding>;

        return $r1;
    }

    public org.eclipse.jetty.server.AbstractHttpConnection getConnection()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        return $r1;
    }

    public int getContentLength()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        int $i1;
        long $l0;
        org.eclipse.jetty.http.HttpFields $r2;
        org.eclipse.jetty.io.Buffer $r3;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CONTENT_LENGTH_BUFFER>;

        $l0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: long getLongField(org.eclipse.jetty.io.Buffer)>($r3);

        $i1 = (int) $l0;

        return $i1;
    }

    public long getContentRead()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1, $r2, $r4;
        org.eclipse.jetty.http.Parser $r3, $r5;
        long $l0;
        org.eclipse.jetty.http.HttpParser $r6;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        if $r3 != null goto label2;

     label1:
        return -1L;

     label2:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        $r6 = (org.eclipse.jetty.http.HttpParser) $r5;

        $l0 = virtualinvoke $r6.<org.eclipse.jetty.http.HttpParser: long getContentRead()>();

        return $l0;
    }

    public java.lang.String getContentType()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.lang.String $r4;
        org.eclipse.jetty.http.HttpFields $r2;
        org.eclipse.jetty.io.Buffer $r3;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CONTENT_TYPE_BUFFER>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.lang.String getStringField(org.eclipse.jetty.io.Buffer)>($r3);

        return $r4;
    }

    public org.eclipse.jetty.server.handler.ContextHandler$Context getContext()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        return $r1;
    }

    public java.lang.String getContextPath()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _contextPath>;

        return $r1;
    }

    public javax.servlet.http.Cookie[] getCookies()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Enumeration $r4;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        javax.servlet.http.Cookie[] $r14, $r15;
        java.lang.String r9;
        org.eclipse.jetty.http.HttpFields $r2;
        org.eclipse.jetty.io.Buffer $r3;
        boolean $z0, $z1;
        org.eclipse.jetty.server.CookieCutter $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        java.lang.Object $r8;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _cookiesExtracted>;

        if $z0 == 0 goto label3;

        $r12 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        if $r12 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r13 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        $r14 = virtualinvoke $r13.<org.eclipse.jetty.server.CookieCutter: javax.servlet.http.Cookie[] getCookies()>();

     label2:
        return $r14;

     label3:
        r0.<org.eclipse.jetty.server.Request: boolean _cookiesExtracted> = 1;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer COOKIE_BUFFER>;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(org.eclipse.jetty.io.Buffer)>($r3);

        if $r4 == null goto label5;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        if $r7 != null goto label4;

        $r11 = new org.eclipse.jetty.server.CookieCutter;

        specialinvoke $r11.<org.eclipse.jetty.server.CookieCutter: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies> = $r11;

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (java.lang.String) $r8;

        $r10 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        virtualinvoke $r10.<org.eclipse.jetty.server.CookieCutter: void addCookieField(java.lang.String)>(r9);

        goto label4;

     label5:
        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        if $r5 != null goto label6;

        $r15 = null;

        goto label7;

     label6:
        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        $r15 = virtualinvoke $r6.<org.eclipse.jetty.server.CookieCutter: javax.servlet.http.Cookie[] getCookies()>();

     label7:
        return $r15;
    }

    public long getDateHeader(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        long $l0;
        java.lang.String r3;
        org.eclipse.jetty.http.HttpFields $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $l0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: long getDateField(java.lang.String)>(r3);

        return $l0;
    }

    public javax.servlet.DispatcherType getDispatcherType()
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.DispatcherType $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType _dispatcherType>;

        return $r1;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.lang.String r3, $r4;
        org.eclipse.jetty.http.HttpFields $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.lang.String getStringField(java.lang.String)>(r3);

        return $r4;
    }

    public java.util.Enumeration getHeaderNames()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Enumeration $r3;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        org.eclipse.jetty.http.HttpFields $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getFieldNames()>();

        return $r3;
    }

    public java.util.Enumeration getHeaders(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.util.List $r5;
        java.util.Enumeration $r4, $r6;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.lang.String r3;
        org.eclipse.jetty.http.HttpFields $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(java.lang.String)>(r3);

        if $r4 != null goto label1;

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r6 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r5);

        return $r6;

     label1:
        return $r4;
    }

    public int getInputState()
    {
        org.eclipse.jetty.server.Request r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        return $i0;
    }

    public javax.servlet.ServletInputStream getInputStream() throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r3;
        javax.servlet.ServletInputStream $r2;
        int $i0, $i1;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i0 == 0 goto label1;

        $i1 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i1 == 1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READER");

        throw $r3;

     label1:
        r0.<org.eclipse.jetty.server.Request: int _inputState> = 1;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: javax.servlet.ServletInputStream getInputStream()>();

        return $r2;
    }

    public int getIntHeader(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        int $i1;
        long $l0;
        java.lang.String r3;
        org.eclipse.jetty.http.HttpFields $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $l0 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: long getLongField(java.lang.String)>(r3);

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.String getLocalAddr()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: java.lang.String getLocalAddr()>();

     label2:
        return $r3;
    }

    public java.util.Locale getLocale()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Enumeration $r3;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.util.Locale $r4, $r6, $r12, $r16;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r8, $r10, $r11, r13, r14, r15;
        org.eclipse.jetty.http.HttpFields $r2;
        boolean $z0;
        java.util.List $r5;
        java.lang.Object $r7;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(java.lang.String,java.lang.String)>("Accept-Language", ", \t");

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

     label1:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r4;

     label2:
        $r5 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.util.List qualityList(java.util.Enumeration)>($r3);

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        $r12 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r12;

     label3:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r13 = (java.lang.String) $r7;

        $r8 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String valueParameters(java.lang.String,java.util.Map)>(r13, null);

        r14 = $r8;

        r15 = "";

        $i2 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(45);

        $i5 = (int) -1;

        if $i2 <= $i5 goto label4;

        $i3 = $i2 + 1;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i3);

        r15 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        r14 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

     label4:
        $r16 = new java.util.Locale;

        specialinvoke $r16.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r14, r15);

        return $r16;

     label5:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r6;
    }

    public java.util.Enumeration getLocales()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Enumeration $r3, $r5, $r8, $r10, $r18;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.util.Locale $r23;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.String $r12, $r15, $r16, r20, r21, r22;
        org.eclipse.jetty.http.HttpFields $r2;
        boolean $z0;
        java.util.Collection $r4, $r9, $r17;
        java.util.List $r6, $r7;
        java.lang.Object $r11, $r13, r19;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: java.util.Enumeration getValues(java.lang.String,java.lang.String)>("Accept-Language", ", \t");

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

     label1:
        $r4 = <org.eclipse.jetty.server.Request: java.util.Collection __defaultLocale>;

        $r5 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r4);

        return $r5;

     label2:
        $r6 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.util.List qualityList(java.util.Enumeration)>($r3);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        $r17 = <org.eclipse.jetty.server.Request: java.util.Collection __defaultLocale>;

        $r18 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r17);

        return $r18;

     label3:
        r19 = null;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        i5 = 0;

     label4:
        if i5 >= $i1 goto label6;

        $r11 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i5);

        r20 = (java.lang.String) $r11;

        $r12 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String valueParameters(java.lang.String,java.util.Map)>(r20, null);

        r21 = $r12;

        r22 = "";

        $i3 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(45);

        $i7 = (int) -1;

        if $i3 <= $i7 goto label5;

        $i4 = $i3 + 1;

        $r15 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i4);

        r22 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $r16 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        r21 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

     label5:
        $r13 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object ensureSize(java.lang.Object,int)>(r19, $i1);

        $r23 = new java.util.Locale;

        specialinvoke $r23.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r21, r22);

        r19 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r13, $r23);

        i5 = i5 + 1;

        goto label4;

     label6:
        $i2 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>(r19);

        if $i2 != 0 goto label7;

        $r9 = <org.eclipse.jetty.server.Request: java.util.Collection __defaultLocale>;

        $r10 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r9);

        return $r10;

     label7:
        $r7 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object)>(r19);

        $r8 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r7);

        return $r8;
    }

    public java.lang.String getLocalName()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r1, $r2, $r8;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r3, $r9, r10;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r1 != null goto label1;

        return null;

     label1:
        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _dns>;

        if $z0 == 0 goto label2;

        $r8 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.io.EndPoint: java.lang.String getLocalHost()>();

        return $r9;

     label2:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: java.lang.String getLocalAddr()>();

        r10 = $r3;

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r10;
    }

    public int getLocalPort()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r1, $r2;
        int $i0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $i0 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: int getLocalPort()>();

     label2:
        return $i0;
    }

    public java.lang.String getMethod()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _method>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.MultiMap $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void extractParameters()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.MultiMap: java.lang.Object getValue(java.lang.Object,int)>(r1, 0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.Map getParameterMap()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.MultiMap $r1;
        java.util.Map $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void extractParameters()>();

     label1:
        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.util.MultiMap: java.util.Map toStringArrayMap()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        return $r3;
    }

    public java.util.Enumeration getParameterNames()
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Enumeration $r3;
        org.eclipse.jetty.util.MultiMap $r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void extractParameters()>();

     label1:
        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.util.MultiMap: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);

        return $r3;
    }

    public org.eclipse.jetty.util.MultiMap getParameters()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.MultiMap $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        return $r1;
    }

    public java.lang.String[] getParameterValues(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.Object[] $r5;
        org.eclipse.jetty.util.MultiMap $r2;
        java.lang.String[] $r4, $r6;
        java.util.List $r3;
        int $i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void extractParameters()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.MultiMap: java.util.List getValues(java.lang.Object)>(r1);

        if $r3 != null goto label2;

        return null;

     label2:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    public java.lang.String getPathInfo()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo>;

        return $r1;
    }

    public java.lang.String getPathTranslated()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r2, $r4;
        java.lang.String $r1, $r3, $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r2 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r3 = r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getRealPath(java.lang.String)>($r3);

        return $r5;
    }

    public java.lang.String getProtocol()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _protocol>;

        return $r1;
    }

    public java.lang.String getQueryEncoding()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding>;

        return $r1;
    }

    public java.lang.String getQueryString()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.http.HttpURI $r2, $r5, $r7;
        java.lang.String $r1, $r3, $r4, $r6, $r8, $r9;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        if $r1 != null goto label2;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding>;

        if $r3 != null goto label1;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.http.HttpURI: java.lang.String getQuery()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString> = $r8;

        goto label2;

     label1:
        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r4 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpURI: java.lang.String getQuery(java.lang.String)>($r4);

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString> = $r6;

     label2:
        $r9 = r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        return $r9;
    }

    public java.io.BufferedReader getReader() throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r8;
        javax.servlet.ServletInputStream $r3;
        java.io.InputStreamReader $r5;
        org.eclipse.jetty.server.Request$1 $r4;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r6, r9;
        java.io.BufferedReader $r2, $r7, $r10;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i0 == 0 goto label1;

        $i2 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i2 == 2 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("STREAMED");

        throw $r8;

     label1:
        $i1 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i1 != 2 goto label2;

        $r7 = r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader>;

        return $r7;

     label2:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getCharacterEncoding()>();

        r9 = $r1;

        if $r1 != null goto label3;

        r9 = "ISO-8859-1";

     label3:
        $r2 = r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader>;

        if $r2 == null goto label4;

        $r6 = r0.<org.eclipse.jetty.server.Request: java.lang.String _readerEncoding>;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 != 0 goto label5;

     label4:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletInputStream getInputStream()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _readerEncoding> = r9;

        $r4 = new org.eclipse.jetty.server.Request$1;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, r9);

        specialinvoke $r4.<org.eclipse.jetty.server.Request$1: void <init>(org.eclipse.jetty.server.Request,java.io.Reader,javax.servlet.ServletInputStream)>(r0, $r5, $r3);

        r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader> = $r4;

     label5:
        r0.<org.eclipse.jetty.server.Request: int _inputState> = 2;

        $r10 = r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader>;

        return $r10;
    }

    public java.lang.String getRealPath(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1, $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getRealPath(java.lang.String)>(r2);

        return $r4;
    }

    public java.lang.String getRemoteAddr()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r2, $r3;
        java.lang.String $r1, $r4, $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteAddr>;

        if $r1 == null goto label1;

        $r4 = r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteAddr>;

        return $r4;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r2 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $r5 = interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: java.lang.String getRemoteAddr()>();

     label3:
        return $r5;
    }

    public java.lang.String getRemoteHost()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r3, $r4;
        java.lang.String $r1, $r2, $r5, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _dns>;

        if $z0 == 0 goto label4;

        $r2 = r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteHost>;

        if $r2 == null goto label1;

        $r5 = r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteHost>;

        return $r5;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r3 != null goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $r6 = interfaceinvoke $r4.<org.eclipse.jetty.io.EndPoint: java.lang.String getRemoteHost()>();

     label3:
        return $r6;

     label4:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getRemoteAddr()>();

        return $r1;
    }

    public int getRemotePort()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r1, $r2;
        int $i0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $i0 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: int getRemotePort()>();

     label2:
        return $i0;
    }

    public java.lang.String getRemoteUser()
    {
        org.eclipse.jetty.server.Request r0;
        java.security.Principal $r1;
        java.lang.String $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.security.Principal getUserPrincipal()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.security.Principal: java.lang.String getName()>();

        return $r2;
    }

    public javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.RequestDispatcher $r8;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1, $r7;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, r5, r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label1;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r1 != null goto label2;

     label1:
        return null;

     label2:
        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label5;

        $r3 = r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath>;

        $r2 = r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo>;

        $r4 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r3, $r2);

        $i0 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if $i0 <= 1 goto label3;

        $i1 = $i0 + 1;

        r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label4;

     label3:
        r6 = "/";

     label4:
        r5 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>(r6, r5);

     label5:
        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.server.handler.ContextHandler$Context: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>(r5);

        return $r8;
    }

    public java.lang.String getRequestedSessionId()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        return $r1;
    }

    public java.lang.String getRequestURI()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.http.HttpURI $r2, $r3;
        java.lang.String $r1, $r4, $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestURI>;

        if $r1 != null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        if $r2 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpURI: java.lang.String getPathAndParam()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _requestURI> = $r4;

     label1:
        $r5 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestURI>;

        return $r5;
    }

    public java.lang.StringBuffer getRequestURL()
    {
        org.eclipse.jetty.server.Request r1;
        java.lang.Throwable $r4;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r5;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.server.Request;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(48);

        entermonitor $r0;

     label1:
        $r2 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getScheme()>();

        $i0 = virtualinvoke r1.<org.eclipse.jetty.server.Request: int getServerPort()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        $r3 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getServerName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i1 = r1.<org.eclipse.jetty.server.Request: int _port>;

        if $i1 <= 0 goto label4;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http");

        if $z0 == 0 goto label2;

        if $i0 != 80 goto label3;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https");

        if $z1 == 0 goto label4;

        if $i0 == 443 goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i2 = r1.<org.eclipse.jetty.server.Request: int _port>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label4:
        $r5 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getRequestURI()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        exitmonitor $r0;

     label5:
        return $r0;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.eclipse.jetty.server.Response getResponse()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        org.eclipse.jetty.server.Response $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response _response>;

        return $r2;
    }

    public java.lang.StringBuilder getRootURL()
    {
        org.eclipse.jetty.server.Request r1;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.server.Request;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(48);

        $r2 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getScheme()>();

        $i0 = virtualinvoke r1.<org.eclipse.jetty.server.Request: int getServerPort()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r3 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getServerName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        if $i0 <= 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http");

        if $z0 == 0 goto label1;

        if $i0 != 80 goto label2;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https");

        if $z1 == 0 goto label3;

        if $i0 == 443 goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label3:
        return $r0;
    }

    public java.lang.String getScheme()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _scheme>;

        return $r1;
    }

    public java.lang.String getServerName()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r38;
        org.eclipse.jetty.http.Generator $r34;
        java.net.InetAddress $r36;
        byte $b5;
        org.eclipse.jetty.io.Buffer $r9, $r10, $r20, $r22;
        boolean $z0;
        org.eclipse.jetty.server.AbstractHttpConnection $r7, $r11, $r32, $r33;
        short $s6, $s19;
        org.eclipse.jetty.http.HttpURI $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i18, $i20;
        java.lang.String $r1, $r4, $r6, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r23, $r24, $r26, $r35, $r37;
        org.eclipse.jetty.http.HttpFields $r8;
        char c7;
        java.io.IOException $r29;
        java.lang.NumberFormatException $r31;
        java.lang.RuntimeException $r39;
        java.net.UnknownHostException $r27;
        org.eclipse.jetty.util.log.Logger $r28;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r1 == null goto label01;

        $r26 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r26;

     label01:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        if $r2 != null goto label02;

        $r38 = new java.lang.IllegalStateException;

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No uri");

        throw $r38;

     label02:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.http.HttpURI: java.lang.String getHost()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = $r4;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpURI: int getPort()>();

        r0.<org.eclipse.jetty.server.Request: int _port> = $i0;

        $r6 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r6 == null goto label03;

        $r24 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r24;

     label03:
        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r9 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer HOST_BUFFER>;

        $r10 = virtualinvoke $r8.<org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.Buffer get(org.eclipse.jetty.io.Buffer)>($r9);

        if $r10 == null goto label18;

        i16 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: int putIndex()>();

     label04:
        $i2 = i16;

        $i18 = (int) -1;

        i16 = i16 + $i18;

        $i3 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        if $i2 <= $i3 goto label15;

        $b5 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: byte peek(int)>(i16);

        $s19 = (short) $b5;

        $s6 = 255 & $s19;

        c7 = (char) $s6;

        $i20 = (int) c7;

        lookupswitch($i20)
        {
            case 58: goto label06;
            case 93: goto label05;
            default: goto label14;
        };

     label05:
        goto label15;

     label06:
        $i8 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i9 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i10 = i16 - $i9;

        $r20 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i8, $i10);

        $r21 = staticinvoke <org.eclipse.jetty.io.BufferUtil: java.lang.String to8859_1_String(org.eclipse.jetty.io.Buffer)>($r20);

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = $r21;

     label07:
        $i11 = i16 + 1;

        $i12 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        $i13 = $i12 - i16;

        $i14 = $i13 - 1;

        $r22 = interfaceinvoke $r10.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i11, $i14);

        $i15 = staticinvoke <org.eclipse.jetty.io.BufferUtil: int toInt(org.eclipse.jetty.io.Buffer)>($r22);

        r0.<org.eclipse.jetty.server.Request: int _port> = $i15;

     label08:
        goto label13;

     label09:
        $r31 := @caughtexception;

     label10:
        $r32 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        if $r32 == null goto label11;

        $r33 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r34 = $r33.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Generator _generator>;

        interfaceinvoke $r34.<org.eclipse.jetty.http.Generator: void sendError(int,java.lang.String,java.lang.String,boolean)>(400, "Bad Host header", null, 1);

     label11:
        goto label13;

     label12:
        $r29 := @caughtexception;

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r29);

        throw $r39;

     label13:
        $r23 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r23;

     label14:
        goto label04;

     label15:
        $r18 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r18 == null goto label16;

        $i4 = r0.<org.eclipse.jetty.server.Request: int _port>;

        if $i4 >= 0 goto label17;

     label16:
        $r19 = staticinvoke <org.eclipse.jetty.io.BufferUtil: java.lang.String to8859_1_String(org.eclipse.jetty.io.Buffer)>($r10);

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = $r19;

        r0.<org.eclipse.jetty.server.Request: int _port> = 0;

     label17:
        $r35 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r35;

     label18:
        $r11 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        if $r11 == null goto label19;

        $r13 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getLocalName()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = $r13;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: int getLocalPort()>();

        r0.<org.eclipse.jetty.server.Request: int _port> = $i1;

        $r14 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r14 == null goto label19;

        $r16 = "0.0.0.0";

        $r15 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label19;

        $r17 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r17;

     label19:
        $r36 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r37 = virtualinvoke $r36.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = $r37;

     label20:
        goto label22;

     label21:
        $r27 := @caughtexception;

        $r28 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r28.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r27);

     label22:
        $r12 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        return $r12;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.net.UnknownHostException from label19 to label20 with label21;
    }

    public int getServerPort()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r4, $r5;
        org.eclipse.jetty.http.HttpURI $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _port>;

        if $i0 > 0 goto label5;

        $r2 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r2 != null goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getServerName()>();

     label1:
        $i2 = r0.<org.eclipse.jetty.server.Request: int _port>;

        if $i2 > 0 goto label5;

        $r3 = r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName>;

        if $r3 == null goto label2;

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        if $r6 == null goto label2;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $i3 = virtualinvoke $r7.<org.eclipse.jetty.http.HttpURI: int getPort()>();

        r0.<org.eclipse.jetty.server.Request: int _port> = $i3;

        goto label5;

     label2:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        if $r4 != null goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp>;

        $i4 = interfaceinvoke $r5.<org.eclipse.jetty.io.EndPoint: int getLocalPort()>();

     label4:
        r0.<org.eclipse.jetty.server.Request: int _port> = $i4;

     label5:
        $i5 = r0.<org.eclipse.jetty.server.Request: int _port>;

        if $i5 > 0 goto label7;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https");

        if $z0 == 0 goto label6;

        return 443;

     label6:
        return 80;

     label7:
        $i1 = r0.<org.eclipse.jetty.server.Request: int _port>;

        return $i1;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        return $r1;
    }

    public java.lang.String getServletName()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r3;
        org.eclipse.jetty.server.UserIdentity$Scope $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jetty.server.UserIdentity$Scope: java.lang.String getName()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getServletPath()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath>;

        if $r1 != null goto label1;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath> = "";

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath>;

        return $r2;
    }

    public javax.servlet.ServletResponse getServletResponse()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        org.eclipse.jetty.server.Response $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response getResponse()>();

        return $r2;
    }

    public javax.servlet.http.HttpSession getSession()
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpSession $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession getSession(boolean)>(1);

        return $r1;
    }

    public javax.servlet.http.HttpSession getSession(boolean)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Response $r11;
        java.lang.IllegalStateException $r12;
        org.eclipse.jetty.server.AbstractHttpConnection $r10;
        java.lang.String $r7;
        boolean z0, $z1, $z2;
        javax.servlet.http.HttpSession $r1, $r4, $r6, $r9, $r14, $r15;
        org.eclipse.jetty.http.HttpCookie $r8;
        org.eclipse.jetty.server.SessionManager $r2, $r3, $r5, $r13, $r16;

        r0 := @this: org.eclipse.jetty.server.Request;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session>;

        if $r1 == null goto label2;

        $r13 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        if $r13 == null goto label1;

        $r16 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        $r15 = r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session>;

        $z2 = interfaceinvoke $r16.<org.eclipse.jetty.server.SessionManager: boolean isValid(javax.servlet.http.HttpSession)>($r15);

        if $z2 != 0 goto label1;

        r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session> = null;

        goto label2;

     label1:
        $r14 = r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session>;

        return $r14;

     label2:
        if z0 != 0 goto label3;

        return null;

     label3:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        if $r2 != null goto label4;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No SessionManager");

        throw $r12;

     label4:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.server.SessionManager: javax.servlet.http.HttpSession newHttpSession(javax.servlet.http.HttpServletRequest)>(r0);

        r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session> = $r4;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        $r6 = r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session>;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContextPath()>();

        $z1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: boolean isSecure()>();

        $r8 = interfaceinvoke $r5.<org.eclipse.jetty.server.SessionManager: org.eclipse.jetty.http.HttpCookie getSessionCookie(javax.servlet.http.HttpSession,java.lang.String,boolean)>($r6, $r7, $z1);

        if $r8 == null goto label5;

        $r10 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response getResponse()>();

        virtualinvoke $r11.<org.eclipse.jetty.server.Response: void addCookie(org.eclipse.jetty.http.HttpCookie)>($r8);

     label5:
        $r9 = r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session>;

        return $r9;
    }

    public org.eclipse.jetty.server.SessionManager getSessionManager()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.SessionManager $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        return $r1;
    }

    public long getTimeStamp()
    {
        org.eclipse.jetty.server.Request r0;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $l0 = r0.<org.eclipse.jetty.server.Request: long _timeStamp>;

        return $l0;
    }

    public org.eclipse.jetty.io.Buffer getTimeStampBuffer()
    {
        org.eclipse.jetty.server.Request r0;
        long $l0, $l2;
        org.eclipse.jetty.io.BufferDateCache $r2;
        byte $b1;
        int $i3;
        org.eclipse.jetty.io.Buffer $r1, $r3, $r4;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.Buffer _timeStampBuffer>;

        if $r1 != null goto label1;

        $l0 = r0.<org.eclipse.jetty.server.Request: long _timeStamp>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r2 = <org.eclipse.jetty.http.HttpFields: org.eclipse.jetty.io.BufferDateCache __dateCache>;

        $l2 = r0.<org.eclipse.jetty.server.Request: long _timeStamp>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.io.BufferDateCache: org.eclipse.jetty.io.Buffer formatBuffer(long)>($l2);

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.Buffer _timeStampBuffer> = $r3;

     label1:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.Buffer _timeStampBuffer>;

        return $r4;
    }

    public org.eclipse.jetty.http.HttpURI getUri()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.http.HttpURI $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        return $r1;
    }

    public org.eclipse.jetty.server.UserIdentity getUserIdentity()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.UserIdentity $r5;
        org.eclipse.jetty.server.Authentication$Deferred $r7;
        org.eclipse.jetty.server.Authentication $r1, $r2, $r3, $r6, $r8;
        org.eclipse.jetty.server.Authentication$User $r4;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r7 = (org.eclipse.jetty.server.Authentication$Deferred) $r6;

        $r8 = interfaceinvoke $r7.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication authenticate(javax.servlet.ServletRequest)>(r0);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r8);

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z1 = $r2 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r4 = (org.eclipse.jetty.server.Authentication$User) $r3;

        $r5 = interfaceinvoke $r4.<org.eclipse.jetty.server.Authentication$User: org.eclipse.jetty.server.UserIdentity getUserIdentity()>();

        return $r5;

     label2:
        return null;
    }

    public org.eclipse.jetty.server.UserIdentity getResolvedUserIdentity()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication $r1, $r2;
        org.eclipse.jetty.server.Authentication$User $r3;
        boolean $z0;
        org.eclipse.jetty.server.UserIdentity $r4;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r3 = (org.eclipse.jetty.server.Authentication$User) $r2;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.server.Authentication$User: org.eclipse.jetty.server.UserIdentity getUserIdentity()>();

        return $r4;

     label1:
        return null;
    }

    public org.eclipse.jetty.server.UserIdentity$Scope getUserIdentityScope()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.UserIdentity$Scope $r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope>;

        return $r1;
    }

    public java.security.Principal getUserPrincipal()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.UserIdentity $r5;
        org.eclipse.jetty.server.Authentication$Deferred $r8;
        org.eclipse.jetty.server.Authentication $r1, $r2, $r3, $r7, $r9;
        java.security.Principal $r6;
        org.eclipse.jetty.server.Authentication$User $r4;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r8 = (org.eclipse.jetty.server.Authentication$Deferred) $r7;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication authenticate(javax.servlet.ServletRequest)>(r0);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r9);

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z1 = $r2 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r4 = (org.eclipse.jetty.server.Authentication$User) $r3;

        $r5 = interfaceinvoke $r4.<org.eclipse.jetty.server.Authentication$User: org.eclipse.jetty.server.UserIdentity getUserIdentity()>();

        $r6 = interfaceinvoke $r5.<org.eclipse.jetty.server.UserIdentity: java.security.Principal getUserPrincipal()>();

        return $r6;

     label2:
        return null;
    }

    public long getDispatchTime()
    {
        org.eclipse.jetty.server.Request r0;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $l0 = r0.<org.eclipse.jetty.server.Request: long _dispatchTime>;

        return $l0;
    }

    public boolean isHandled()
    {
        org.eclipse.jetty.server.Request r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _handled>;

        return $z0;
    }

    public boolean isAsyncStarted()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AsyncContinuation $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        $z0 = virtualinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: boolean isAsyncStarted()>();

        return $z0;
    }

    public boolean isAsyncSupported()
    {
        org.eclipse.jetty.server.Request r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported>;

        return $z0;
    }

    public boolean isRequestedSessionIdFromCookie()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        if $r1 == null goto label1;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRequestedSessionIdFromUrl()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        if $r1 == null goto label1;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRequestedSessionIdFromURL()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        if $r1 == null goto label1;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRequestedSessionIdValid()
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpSession $r2;
        org.eclipse.jetty.server.SessionIdManager $r4;
        org.eclipse.jetty.server.SessionManager $r3, $r7;
        java.lang.String $r1, $r5, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession getSession(boolean)>(0);

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.server.SessionManager: org.eclipse.jetty.server.SessionIdManager getSessionIdManager()>();

        $r5 = r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId>;

        $r6 = interfaceinvoke $r4.<org.eclipse.jetty.server.SessionIdManager: java.lang.String getClusterId(java.lang.String)>($r5);

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager>;

        $r8 = interfaceinvoke $r7.<org.eclipse.jetty.server.SessionManager: java.lang.String getClusterId(javax.servlet.http.HttpSession)>($r2);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isSecure()
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $z0 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: boolean isConfidential(org.eclipse.jetty.server.Request)>(r0);

        return $z0;
    }

    public boolean isUserInRole(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication$Deferred $r8;
        org.eclipse.jetty.server.Authentication $r1, $r2, $r3, $r7, $r9;
        org.eclipse.jetty.server.Authentication$User $r6;
        java.lang.String r4;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.server.UserIdentity$Scope $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r8 = (org.eclipse.jetty.server.Authentication$Deferred) $r7;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication authenticate(javax.servlet.ServletRequest)>(r0);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r9);

     label1:
        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z1 = $r2 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r6 = (org.eclipse.jetty.server.Authentication$User) $r3;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope>;

        $z2 = interfaceinvoke $r6.<org.eclipse.jetty.server.Authentication$User: boolean isUserInRole(org.eclipse.jetty.server.UserIdentity$Scope,java.lang.String)>($r5, r4);

        return $z2;

     label2:
        return 0;
    }

    public javax.servlet.http.HttpSession recoverNewSession(java.lang.Object)
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpSession $r5;
        java.util.Map $r1, $r3;
        java.lang.Object r2, $r4;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (javax.servlet.http.HttpSession) $r4;

        return $r5;
    }

    protected void recycle()
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r17;
        org.eclipse.jetty.util.Attributes $r1, $r8;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r16;
        java.util.Map $r4, $r5;
        int $i0, i1, $i3;
        org.eclipse.jetty.util.MultiMap $r3, $r6;
        java.lang.Exception $r12;
        org.eclipse.jetty.server.Authentication $r14;
        org.eclipse.jetty.server.CookieCutter $r2, $r7;
        java.io.BufferedReader $r10, $r11;
        org.eclipse.jetty.util.log.Logger $r13;
        org.eclipse.jetty.server.AsyncContinuation $r15;

        r0 := @this: org.eclipse.jetty.server.Request;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i0 != 2 goto label05;

     label01:
        $r10 = r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader>;

        i1 = virtualinvoke $r10.<java.io.BufferedReader: int read()>();

     label02:
        $i3 = (int) -1;

        if i1 == $i3 goto label03;

        $r11 = r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader>;

        i1 = virtualinvoke $r11.<java.io.BufferedReader: int read()>();

        goto label02;

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        $r13 = <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r12);

        r0.<org.eclipse.jetty.server.Request: java.io.BufferedReader _reader> = null;

     label05:
        $r14 = <org.eclipse.jetty.server.Authentication: org.eclipse.jetty.server.Authentication NOT_CHECKED>;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r14);

        $r15 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        virtualinvoke $r15.<org.eclipse.jetty.server.AsyncContinuation: void recycle()>();

        r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported> = 1;

        r0.<org.eclipse.jetty.server.Request: boolean _handled> = 0;

        $r16 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r16 == null goto label06;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request in context!");

        throw $r17;

     label06:
        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r1 == null goto label07;

        $r8 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        interfaceinvoke $r8.<org.eclipse.jetty.util.Attributes: void clearAttributes()>();

     label07:
        r0.<org.eclipse.jetty.server.Request: java.lang.String _characterEncoding> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _contextPath> = null;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        if $r2 == null goto label08;

        $r7 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        virtualinvoke $r7.<org.eclipse.jetty.server.CookieCutter: void reset()>();

     label08:
        r0.<org.eclipse.jetty.server.Request: boolean _cookiesExtracted> = 0;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _method> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo> = null;

        r0.<org.eclipse.jetty.server.Request: int _port> = 0;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _protocol> = "HTTP/1.1";

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId> = null;

        r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie> = 0;

        r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session> = null;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _requestURI> = null;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope> = null;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _scheme> = "http";

        r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath> = null;

        r0.<org.eclipse.jetty.server.Request: long _timeStamp> = 0L;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.Buffer _timeStampBuffer> = null;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri> = null;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        if $r3 == null goto label09;

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        virtualinvoke $r6.<org.eclipse.jetty.util.MultiMap: void clear()>();

     label09:
        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = null;

        r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted> = 0;

        r0.<org.eclipse.jetty.server.Request: int _inputState> = 0;

        $r4 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        if $r4 == null goto label10;

        $r5 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

     label10:
        r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions> = null;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream> = null;

        return;

        catch java.lang.Exception from label01 to label03 with label04;
    }

    public void removeAttribute(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.Attributes $r1, $r3, $r5, $r14;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r8;
        int $i0, i1;
        java.lang.String r2;
        boolean $z0;
        javax.servlet.ServletRequestAttributeEvent $r7;
        javax.servlet.ServletRequestAttributeListener r12, r13;
        java.lang.Object r4, $r6, $r9, $r10, $r11, $r15;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r1 != null goto label1;

        $r15 = null;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        $r15 = interfaceinvoke $r3.<org.eclipse.jetty.util.Attributes: java.lang.Object getAttribute(java.lang.String)>(r2);

     label2:
        r4 = $r15;

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r5 == null goto label3;

        $r14 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        interfaceinvoke $r14.<org.eclipse.jetty.util.Attributes: void removeAttribute(java.lang.String)>(r2);

     label3:
        if r4 == null goto label6;

        $r6 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        if $r6 == null goto label6;

        $r7 = new javax.servlet.ServletRequestAttributeEvent;

        $r8 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        specialinvoke $r7.<javax.servlet.ServletRequestAttributeEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest,java.lang.String,java.lang.Object)>($r8, r0, r2, r4);

        $r9 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $i0 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r9);

        i1 = 0;

     label4:
        if i1 >= $i0 goto label6;

        $r10 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $r11 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r10, i1);

        r12 = (javax.servlet.ServletRequestAttributeListener) $r11;

        $z0 = r12 instanceof javax.servlet.ServletRequestAttributeListener;

        if $z0 == 0 goto label5;

        r13 = (javax.servlet.ServletRequestAttributeListener) r12;

        interfaceinvoke r13.<javax.servlet.ServletRequestAttributeListener: void attributeRemoved(javax.servlet.ServletRequestAttributeEvent)>($r7);

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return;
    }

    public void removeEventListener(java.util.EventListener)
    {
        org.eclipse.jetty.server.Request r0;
        java.util.EventListener r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.util.EventListener;

        $r2 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object remove(java.lang.Object,java.lang.Object)>($r2, r1);

        r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners> = $r3;

        return;
    }

    public void saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpSession r3;
        java.util.Map $r1, $r4;
        java.lang.Object r2;
        java.util.HashMap $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.servlet.http.HttpSession;

        $r1 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions> = $r5;

     label1:
        $r4 = r0.<org.eclipse.jetty.server.Request: java.util.Map _savedNewSessions>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public void setAsyncSupported(boolean)
    {
        org.eclipse.jetty.server.Request r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported> = z0;

        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.Attributes $r1, $r3, $r6, $r41;
        org.eclipse.jetty.io.EndPoint $r20;
        java.lang.Integer $r22;
        java.nio.ByteBuffer r39;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.servlet.ServletRequestAttributeEvent $r50;
        javax.servlet.ServletRequestAttributeListener r13, r43;
        javax.servlet.ServletResponse $r23, $r27;
        java.lang.Throwable $r34;
        org.eclipse.jetty.util.AttributesMap $r49;
        org.eclipse.jetty.server.AbstractHttpConnection $r19;
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r46;
        javax.servlet.ServletOutputStream $r24, $r28;
        org.eclipse.jetty.io.nio.NIOBuffer $r26;
        int $i0, $i1, i2;
        java.lang.String r2, $r15, $r16, $r17, $r18, $r21, $r38;
        org.eclipse.jetty.io.AbstractBuffer $r40;
        java.io.IOException $r30, $r32, $r35;
        java.lang.RuntimeException $r44, $r47, $r48;
        java.lang.Object r4, r5, $r7, $r10, $r11, $r12, $r37, $r42;
        org.eclipse.jetty.server.AbstractHttpConnection$Output $r25, $r29;
        org.eclipse.jetty.io.nio.DirectNIOBuffer $r45;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r1 != null goto label01;

        $r37 = null;

        goto label02;

     label01:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        $r37 = interfaceinvoke $r3.<org.eclipse.jetty.util.Attributes: java.lang.Object getAttribute(java.lang.String)>(r2);

     label02:
        r4 = $r37;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("org.eclipse.jetty.");

        if $z0 == 0 goto label23;

        $r15 = "org.eclipse.jetty.server.Request.queryEncoding";

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label05;

        if r5 != null goto label03;

        $r38 = null;

        goto label04;

     label03:
        $r38 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

     label04:
        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setQueryEncoding(java.lang.String)>($r38);

        goto label23;

     label05:
        $r16 = "org.eclipse.jetty.server.sendContent";

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label09;

     label06:
        $r27 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletResponse getServletResponse()>();

        $r28 = interfaceinvoke $r27.<javax.servlet.ServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r29 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) $r28;

        virtualinvoke $r29.<org.eclipse.jetty.server.AbstractHttpConnection$Output: void sendContent(java.lang.Object)>(r5);

     label07:
        goto label23;

     label08:
        $r35 := @caughtexception;

        $r44 = new java.lang.RuntimeException;

        specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r35);

        throw $r44;

     label09:
        $r17 = "org.eclipse.jetty.server.ResponseBuffer";

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label19;

     label10:
        r39 = (java.nio.ByteBuffer) r5;

        entermonitor r39;

     label11:
        $z6 = virtualinvoke r39.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z6 == 0 goto label12;

        $r45 = new org.eclipse.jetty.io.nio.DirectNIOBuffer;

        $r40 = $r45;

        specialinvoke $r45.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void <init>(java.nio.ByteBuffer,boolean)>(r39, 1);

        goto label13;

     label12:
        $r46 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        $r40 = $r46;

        specialinvoke $r46.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(java.nio.ByteBuffer,boolean)>(r39, 1);

     label13:
        $r26 = (org.eclipse.jetty.io.nio.NIOBuffer) $r40;

        $r23 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletResponse getServletResponse()>();

        $r24 = interfaceinvoke $r23.<javax.servlet.ServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r25 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) $r24;

        virtualinvoke $r25.<org.eclipse.jetty.server.AbstractHttpConnection$Output: void sendResponse(org.eclipse.jetty.io.Buffer)>($r26);

        exitmonitor r39;

     label14:
        goto label17;

     label15:
        $r34 := @caughtexception;

        exitmonitor r39;

     label16:
        throw $r34;

     label17:
        goto label23;

     label18:
        $r32 := @caughtexception;

        $r47 = new java.lang.RuntimeException;

        specialinvoke $r47.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r32);

        throw $r47;

     label19:
        $r18 = "org.eclipse.jetty.io.EndPoint.maxIdleTime";

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z5 == 0 goto label23;

     label20:
        $r19 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection getConnection()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $r21 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r21);

        $i1 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r20.<org.eclipse.jetty.io.EndPoint: void setMaxIdleTime(int)>($i1);

     label21:
        goto label23;

     label22:
        $r30 := @caughtexception;

        $r48 = new java.lang.RuntimeException;

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        throw $r48;

     label23:
        $r41 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        if $r41 != null goto label24;

        $r49 = new org.eclipse.jetty.util.AttributesMap;

        specialinvoke $r49.<org.eclipse.jetty.util.AttributesMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes> = $r49;

     label24:
        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes>;

        interfaceinvoke $r6.<org.eclipse.jetty.util.Attributes: void setAttribute(java.lang.String,java.lang.Object)>(r2, r5);

        $r7 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        if $r7 == null goto label31;

        $r50 = new javax.servlet.ServletRequestAttributeEvent;

        $r9 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if r4 != null goto label25;

        $r42 = r5;

        goto label26;

     label25:
        $r42 = r4;

     label26:
        specialinvoke $r50.<javax.servlet.ServletRequestAttributeEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest,java.lang.String,java.lang.Object)>($r9, r0, r2, $r42);

        $r10 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $i0 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r10);

        i2 = 0;

     label27:
        if i2 >= $i0 goto label31;

        $r11 = r0.<org.eclipse.jetty.server.Request: java.lang.Object _requestAttributeListeners>;

        $r12 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r11, i2);

        r43 = (javax.servlet.ServletRequestAttributeListener) $r12;

        $z1 = r43 instanceof javax.servlet.ServletRequestAttributeListener;

        if $z1 == 0 goto label30;

        r13 = (javax.servlet.ServletRequestAttributeListener) r43;

        if r4 != null goto label28;

        interfaceinvoke r13.<javax.servlet.ServletRequestAttributeListener: void attributeAdded(javax.servlet.ServletRequestAttributeEvent)>($r50);

        goto label30;

     label28:
        if r5 != null goto label29;

        interfaceinvoke r13.<javax.servlet.ServletRequestAttributeListener: void attributeRemoved(javax.servlet.ServletRequestAttributeEvent)>($r50);

        goto label30;

     label29:
        interfaceinvoke r13.<javax.servlet.ServletRequestAttributeListener: void attributeReplaced(javax.servlet.ServletRequestAttributeEvent)>($r50);

     label30:
        i2 = i2 + 1;

        goto label27;

     label31:
        return;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.io.IOException from label10 to label17 with label18;
        catch java.io.IOException from label20 to label21 with label22;
    }

    public void setAttributes(org.eclipse.jetty.util.Attributes)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.util.Attributes r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.util.Attributes;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.Attributes _attributes> = r1;

        return;
    }

    public void setAuthentication(org.eclipse.jetty.server.Authentication)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.server.Authentication;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication> = r1;

        return;
    }

    public void setCharacterEncoding(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.eclipse.jetty.server.Request r0;
        int $i0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.eclipse.jetty.server.Request: int _inputState>;

        if $i0 == 0 goto label1;

        return;

     label1:
        r0.<org.eclipse.jetty.server.Request: java.lang.String _characterEncoding> = r1;

        $z0 = staticinvoke <org.eclipse.jetty.util.StringUtil: boolean isUTF8(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r2 = "";

        virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

     label2:
        return;
    }

    public void setCharacterEncodingUnchecked(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _characterEncoding> = r1;

        return;
    }

    protected final void setConnection(org.eclipse.jetty.server.AbstractHttpConnection)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EndPoint $r3;
        org.eclipse.jetty.server.AbstractHttpConnection r1;
        org.eclipse.jetty.server.AsyncContinuation $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection> = r1;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        virtualinvoke $r2.<org.eclipse.jetty.server.AsyncContinuation: void setConnection(org.eclipse.jetty.server.AbstractHttpConnection)>(r1);

        $r3 = virtualinvoke r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.io.EndPoint _endp> = $r3;

        $z0 = virtualinvoke r1.<org.eclipse.jetty.server.AbstractHttpConnection: boolean getResolveNames()>();

        r0.<org.eclipse.jetty.server.Request: boolean _dns> = $z0;

        return;
    }

    public void setContentType(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        java.lang.String r3;
        org.eclipse.jetty.http.HttpFields $r2;
        org.eclipse.jetty.io.Buffer $r4;

        r0 := @this: org.eclipse.jetty.server.Request;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection _connection>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.HttpFields getRequestFields()>();

        $r4 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CONTENT_TYPE_BUFFER>;

        virtualinvoke $r2.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,java.lang.String)>($r4, r3);

        return;
    }

    public void setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context r1, $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ContextHandler$Context;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r2 == r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.eclipse.jetty.server.Request: boolean _newContext> = $z0;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context> = r1;

        return;
    }

    public boolean takeNewContext()
    {
        org.eclipse.jetty.server.Request r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        z0 = r0.<org.eclipse.jetty.server.Request: boolean _newContext>;

        r0.<org.eclipse.jetty.server.Request: boolean _newContext> = 0;

        return z0;
    }

    public void setContextPath(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _contextPath> = r1;

        return;
    }

    public void setCookies(javax.servlet.http.Cookie[])
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.CookieCutter $r1, $r3, $r4;
        javax.servlet.http.Cookie[] r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: javax.servlet.http.Cookie[];

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        if $r1 != null goto label1;

        $r4 = new org.eclipse.jetty.server.CookieCutter;

        specialinvoke $r4.<org.eclipse.jetty.server.CookieCutter: void <init>()>();

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies> = $r4;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.CookieCutter _cookies>;

        virtualinvoke $r3.<org.eclipse.jetty.server.CookieCutter: void setCookies(javax.servlet.http.Cookie[])>(r2);

        return;
    }

    public void setDispatcherType(javax.servlet.DispatcherType)
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.DispatcherType r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: javax.servlet.DispatcherType;

        r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType _dispatcherType> = r1;

        return;
    }

    public void setHandled(boolean)
    {
        org.eclipse.jetty.server.Request r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Request: boolean _handled> = z0;

        return;
    }

    public void setMethod(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _method> = r1;

        return;
    }

    public void setParameters(org.eclipse.jetty.util.MultiMap)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r3;
        org.eclipse.jetty.util.MultiMap r1, $r2, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.util.MultiMap;

        if r1 != null goto label1;

        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _baseParameters>;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters> = $r4;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r2 != null goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label3:
        return;
    }

    public void setPathInfo(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _pathInfo> = r1;

        return;
    }

    public void setProtocol(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _protocol> = r1;

        return;
    }

    public void setQueryEncoding(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding> = r1;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString> = null;

        return;
    }

    public void setQueryString(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryString> = r1;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _queryEncoding> = null;

        return;
    }

    public void setRemoteAddr(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteAddr> = r1;

        return;
    }

    public void setRemoteHost(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _remoteHost> = r1;

        return;
    }

    public void setRequestedSessionId(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _requestedSessionId> = r1;

        return;
    }

    public void setRequestedSessionIdFromCookie(boolean)
    {
        org.eclipse.jetty.server.Request r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Request: boolean _requestedSessionIdFromCookie> = z0;

        return;
    }

    public void setRequestURI(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _requestURI> = r1;

        return;
    }

    public void setScheme(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _scheme> = r1;

        return;
    }

    public void setServerName(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _serverName> = r1;

        return;
    }

    public void setServerPort(int)
    {
        org.eclipse.jetty.server.Request r0;
        int i0;

        r0 := @this: org.eclipse.jetty.server.Request;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.Request: int _port> = i0;

        return;
    }

    public void setServletPath(java.lang.String)
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.Request: java.lang.String _servletPath> = r1;

        return;
    }

    public void setSession(javax.servlet.http.HttpSession)
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpSession r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: javax.servlet.http.HttpSession;

        r0.<org.eclipse.jetty.server.Request: javax.servlet.http.HttpSession _session> = r1;

        return;
    }

    public void setSessionManager(org.eclipse.jetty.server.SessionManager)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.SessionManager r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.server.SessionManager;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.SessionManager _sessionManager> = r1;

        return;
    }

    public void setTimeStamp(long)
    {
        org.eclipse.jetty.server.Request r0;
        long l0;

        r0 := @this: org.eclipse.jetty.server.Request;

        l0 := @parameter0: long;

        r0.<org.eclipse.jetty.server.Request: long _timeStamp> = l0;

        return;
    }

    public void setUri(org.eclipse.jetty.http.HttpURI)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.http.HttpURI r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.http.HttpURI;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri> = r1;

        return;
    }

    public void setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.UserIdentity$Scope r1;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: org.eclipse.jetty.server.UserIdentity$Scope;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope _scope> = r1;

        return;
    }

    public void setDispatchTime(long)
    {
        org.eclipse.jetty.server.Request r0;
        long l0;

        r0 := @this: org.eclipse.jetty.server.Request;

        l0 := @parameter0: long;

        r0.<org.eclipse.jetty.server.Request: long _dispatchTime> = l0;

        return;
    }

    public javax.servlet.AsyncContext startAsync() throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r3;
        boolean $z0;
        org.eclipse.jetty.server.AsyncContinuation $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.Request;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!asyncSupported");

        throw $r3;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        virtualinvoke $r1.<org.eclipse.jetty.server.AsyncContinuation: void startAsync()>();

        $r2 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        return $r2;
    }

    public javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.Request r0;
        java.lang.IllegalStateException $r6;
        javax.servlet.ServletRequest r1;
        javax.servlet.ServletResponse r2;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r3;
        boolean $z0;
        org.eclipse.jetty.server.AsyncContinuation $r4, $r5;

        r0 := @this: org.eclipse.jetty.server.Request;

        r1 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        $z0 = r0.<org.eclipse.jetty.server.Request: boolean _asyncSupported>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!asyncSupported");

        throw $r6;

     label1:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        virtualinvoke $r4.<org.eclipse.jetty.server.AsyncContinuation: void startAsync(javax.servlet.ServletContext,javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r3, r1, r2);

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation _async>;

        return $r5;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.server.Request r1;
        org.eclipse.jetty.http.HttpURI $r6;
        int $i0;
        java.lang.String $r3, $r11, $r13, $r14, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12;

        r1 := @this: org.eclipse.jetty.server.Request;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = r1.<org.eclipse.jetty.server.Request: boolean _handled>;

        if $z0 == 0 goto label1;

        $r14 = "[";

        goto label2;

     label1:
        $r14 = "(";

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r3 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getMethod()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r1.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI _uri>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $z1 = r1.<org.eclipse.jetty.server.Request: boolean _handled>;

        if $z1 == 0 goto label3;

        $r15 = "]@";

        goto label4;

     label3:
        $r15 = ")@";

     label4:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public boolean authenticate(javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.http.HttpServletResponse r2;
        org.eclipse.jetty.server.Authentication$Deferred $r4;
        org.eclipse.jetty.server.Authentication $r1, $r3, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.server.Request;

        r2 := @parameter0: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label3;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r4 = (org.eclipse.jetty.server.Authentication$Deferred) $r3;

        $r5 = interfaceinvoke $r4.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication authenticate(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r2);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAuthentication(org.eclipse.jetty.server.Authentication)>($r5);

        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z1 = $r6 instanceof org.eclipse.jetty.server.Authentication$ResponseSent;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int)>(401);

        return 0;
    }

    public javax.servlet.http.Part getPart(java.lang.String) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        byte[] $r26;
        java.lang.IllegalStateException $r33;
        javax.servlet.ServletException $r2;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r13, $r15, $r31;
        boolean $z0, $z1;
        java.util.Collection $r17;
        javax.servlet.MultipartConfigElement r9;
        org.eclipse.jetty.util.MultiPartInputStream $r4, $r6, $r10, $r14, $r16;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r21;
        javax.servlet.ServletInputStream $r11;
        org.eclipse.jetty.io.ByteArrayBuffer $r29;
        java.lang.String $r1, $r3, r5, $r12, $r22, $r24, $r25, $r28, $r30, r35, $r36;
        java.util.Iterator $r18;
        org.eclipse.jetty.util.MultiMap $r27;
        java.io.File $r23, $r34;
        javax.servlet.http.Part $r7, r20;
        java.lang.Object $r8, $r19, $r32;

        r0 := @this: org.eclipse.jetty.server.Request;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        if $r1 == null goto label01;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/form-data");

        if $z0 != 0 goto label02;

     label01:
        $r2 = new javax.servlet.ServletException;

        specialinvoke $r2.<javax.servlet.ServletException: void <init>(java.lang.String)>("Content-Type != multipart/form-data");

        throw $r2;

     label02:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        if $r4 != null goto label11;

        $r8 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.multipartConfig");

        r9 = (javax.servlet.MultipartConfigElement) $r8;

        if r9 != null goto label03;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No multipart config for servlet");

        throw $r33;

     label03:
        $r10 = new org.eclipse.jetty.util.MultiPartInputStream;

        $r11 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletInputStream getInputStream()>();

        $r12 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        $r13 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r13 == null goto label04;

        $r31 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r32 = virtualinvoke $r31.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.context.tempdir");

        $r34 = (java.io.File) $r32;

        goto label05;

     label04:
        $r34 = null;

     label05:
        specialinvoke $r10.<org.eclipse.jetty.util.MultiPartInputStream: void <init>(java.io.InputStream,java.lang.String,javax.servlet.MultipartConfigElement,java.io.File)>($r11, $r12, r9, $r34);

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream> = $r10;

        $r14 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.multiPartInputStream", $r14);

        $r15 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.multiPartContext", $r15);

        $r16 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        $r17 = virtualinvoke $r16.<org.eclipse.jetty.util.MultiPartInputStream: java.util.Collection getParts()>();

        $r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (javax.servlet.http.Part) $r19;

        r21 = (org.eclipse.jetty.util.MultiPartInputStream$MultiPart) r20;

        $r22 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentDispositionFilename()>();

        if $r22 != null goto label10;

        $r23 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File getFile()>();

        if $r23 != null goto label10;

        r35 = null;

        $r24 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        if $r24 == null goto label07;

        $r29 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r30 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        specialinvoke $r29.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r30);

        r35 = staticinvoke <org.eclipse.jetty.http.MimeTypes: java.lang.String getCharsetFromContentType(org.eclipse.jetty.io.Buffer)>($r29);

     label07:
        $r25 = new java.lang.String;

        $r26 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: byte[] getBytes()>();

        if r35 != null goto label08;

        $r36 = "UTF-8";

        goto label09;

     label08:
        $r36 = r35;

     label09:
        specialinvoke $r25.<java.lang.String: void <init>(byte[],java.lang.String)>($r26, $r36);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getParameter(java.lang.String)>("");

        $r27 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap getParameters()>();

        $r28 = virtualinvoke r21.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getName()>();

        virtualinvoke $r27.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r28, $r25);

     label10:
        goto label06;

     label11:
        $r6 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.http.Part getPart(java.lang.String)>(r5);

        return $r7;
    }

    public java.util.Collection getParts() throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        byte[] $r25;
        java.lang.IllegalStateException $r32;
        javax.servlet.ServletException $r2;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r12, $r14, $r30;
        boolean $z0, $z1;
        java.util.Collection $r6, $r16;
        javax.servlet.MultipartConfigElement r8;
        org.eclipse.jetty.util.MultiPartInputStream $r4, $r5, $r9, $r13, $r15;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r20;
        javax.servlet.ServletInputStream $r10;
        org.eclipse.jetty.io.ByteArrayBuffer $r28;
        java.lang.String $r1, $r3, $r11, $r21, $r23, $r24, $r27, $r29, r34, $r35;
        java.util.Iterator $r17;
        org.eclipse.jetty.util.MultiMap $r26;
        java.io.File $r22, $r33;
        javax.servlet.http.Part r19;
        java.lang.Object $r7, $r18, $r31;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        if $r1 == null goto label01;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/form-data");

        if $z0 != 0 goto label02;

     label01:
        $r2 = new javax.servlet.ServletException;

        specialinvoke $r2.<javax.servlet.ServletException: void <init>(java.lang.String)>("Content-Type != multipart/form-data");

        throw $r2;

     label02:
        $r4 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        if $r4 != null goto label11;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.multipartConfig");

        r8 = (javax.servlet.MultipartConfigElement) $r7;

        if r8 != null goto label03;

        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No multipart config for servlet");

        throw $r32;

     label03:
        $r9 = new org.eclipse.jetty.util.MultiPartInputStream;

        $r10 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.ServletInputStream getInputStream()>();

        $r11 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContentType()>();

        $r12 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r12 == null goto label04;

        $r30 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r31 = virtualinvoke $r30.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.context.tempdir");

        $r33 = (java.io.File) $r31;

        goto label05;

     label04:
        $r33 = null;

     label05:
        specialinvoke $r9.<org.eclipse.jetty.util.MultiPartInputStream: void <init>(java.io.InputStream,java.lang.String,javax.servlet.MultipartConfigElement,java.io.File)>($r10, $r11, r8, $r33);

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream> = $r9;

        $r13 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.multiPartInputStream", $r13);

        $r14 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.multiPartContext", $r14);

        $r15 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        $r16 = virtualinvoke $r15.<org.eclipse.jetty.util.MultiPartInputStream: java.util.Collection getParts()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (javax.servlet.http.Part) $r18;

        r20 = (org.eclipse.jetty.util.MultiPartInputStream$MultiPart) r19;

        $r21 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentDispositionFilename()>();

        if $r21 != null goto label10;

        $r22 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File getFile()>();

        if $r22 != null goto label10;

        r34 = null;

        $r23 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        if $r23 == null goto label07;

        $r28 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r29 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        specialinvoke $r28.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r29);

        r34 = staticinvoke <org.eclipse.jetty.http.MimeTypes: java.lang.String getCharsetFromContentType(org.eclipse.jetty.io.Buffer)>($r28);

     label07:
        $r24 = new java.lang.String;

        $r25 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: byte[] getBytes()>();

        if r34 != null goto label08;

        $r35 = "UTF-8";

        goto label09;

     label08:
        $r35 = r34;

     label09:
        specialinvoke $r24.<java.lang.String: void <init>(byte[],java.lang.String)>($r25, $r35);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getParameter(java.lang.String)>("");

        $r26 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap getParameters()>();

        $r27 = virtualinvoke r20.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getName()>();

        virtualinvoke $r26.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r27, $r24);

     label10:
        goto label06;

     label11:
        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiPartInputStream _multiPartInputStream>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.util.MultiPartInputStream: java.util.Collection getParts()>();

        return $r6;
    }

    public void login(java.lang.String, java.lang.String) throws javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        javax.servlet.ServletException $r2, $r14;
        java.lang.String $r7, r9, r10;
        boolean $z0;
        org.eclipse.jetty.server.Authentication$Deferred $r11;
        org.eclipse.jetty.server.Authentication $r1, $r5, $r8, $r12, $r13;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: org.eclipse.jetty.server.Request;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$Deferred;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r11 = (org.eclipse.jetty.server.Authentication$Deferred) $r8;

        $r12 = interfaceinvoke $r11.<org.eclipse.jetty.server.Authentication$Deferred: org.eclipse.jetty.server.Authentication login(java.lang.String,java.lang.Object,javax.servlet.ServletRequest)>(r9, r10, r0);

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication> = $r12;

        $r13 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        if $r13 != null goto label2;

        $r14 = new javax.servlet.ServletException;

        specialinvoke $r14.<javax.servlet.ServletException: void <init>()>();

        throw $r14;

     label1:
        $r2 = new javax.servlet.ServletException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authenticated as ");

        $r5 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.servlet.ServletException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        return;
    }

    public void logout() throws javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Authentication $r1, $r2, $r3;
        org.eclipse.jetty.server.Authentication$User $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Request;

        $r1 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $z0 = $r1 instanceof org.eclipse.jetty.server.Authentication$User;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication>;

        $r4 = (org.eclipse.jetty.server.Authentication$User) $r3;

        interfaceinvoke $r4.<org.eclipse.jetty.server.Authentication$User: void logout()>();

     label1:
        $r2 = <org.eclipse.jetty.server.Authentication: org.eclipse.jetty.server.Authentication UNAUTHENTICATED>;

        r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Authentication _authentication> = $r2;

        return;
    }

    public void mergeQueryString(java.lang.String)
    {
        org.eclipse.jetty.server.Request r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.Set $r14, $r29;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r16, $r17, $r18, $r23, $r24, $r25;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r3, $r7, $r11, $r12, r21, r35, r37, $r38;
        java.util.Map$Entry r36, r39;
        java.util.Iterator $r15, $r30;
        org.eclipse.jetty.util.MultiMap $r0, $r2, $r10, $r13, $r27, $r28;
        java.lang.Object $r19, $r20, $r22, $r26, $r31, $r32, $r33, $r34;

        r1 := @this: org.eclipse.jetty.server.Request;

        r35 := @parameter0: java.lang.String;

        $r0 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r0.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        staticinvoke <org.eclipse.jetty.util.UrlEncoded: void decodeTo(java.lang.String,org.eclipse.jetty.util.MultiMap,java.lang.String)>(r35, $r0, "UTF-8");

        z5 = 0;

        $z0 = r1.<org.eclipse.jetty.server.Request: boolean _paramsExtracted>;

        if $z0 != 0 goto label01;

        virtualinvoke r1.<org.eclipse.jetty.server.Request: void extractParameters()>();

     label01:
        $r2 = r1.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        if $r2 == null goto label06;

        $r27 = r1.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $i2 = virtualinvoke $r27.<org.eclipse.jetty.util.MultiMap: int size()>();

        if $i2 <= 0 goto label06;

        $r28 = r1.<org.eclipse.jetty.server.Request: org.eclipse.jetty.util.MultiMap _parameters>;

        $r29 = virtualinvoke $r28.<org.eclipse.jetty.util.MultiMap: java.util.Set entrySet()>();

        $r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r31;

        $r32 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        r37 = (java.lang.String) $r32;

        $z4 = virtualinvoke $r0.<org.eclipse.jetty.util.MultiMap: boolean containsKey(java.lang.Object)>(r37);

        if $z4 == 0 goto label03;

        z5 = 1;

     label03:
        $r33 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        i3 = 0;

     label04:
        $i4 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r33);

        if i3 >= $i4 goto label05;

        $r34 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r33, i3);

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r37, $r34);

        i3 = i3 + 1;

        goto label04;

     label05:
        goto label02;

     label06:
        $r38 = r1.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        if $r38 == null goto label12;

        $r3 = r1.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label12;

        if z5 == 0 goto label11;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r10.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        $r11 = r1.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        $r12 = virtualinvoke r1.<org.eclipse.jetty.server.Request: java.lang.String getQueryEncoding()>();

        staticinvoke <org.eclipse.jetty.util.UrlEncoded: void decodeTo(java.lang.String,org.eclipse.jetty.util.MultiMap,java.lang.String)>($r11, $r10, $r12);

        $r13 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r13.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        staticinvoke <org.eclipse.jetty.util.UrlEncoded: void decodeTo(java.lang.String,org.eclipse.jetty.util.MultiMap,java.lang.String)>(r35, $r13, "UTF-8");

        $r14 = virtualinvoke $r10.<org.eclipse.jetty.util.MultiMap: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r19 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();

        r21 = (java.lang.String) $r20;

        $z2 = virtualinvoke $r13.<org.eclipse.jetty.util.MultiMap: boolean containsKey(java.lang.Object)>(r21);

        if $z2 != 0 goto label09;

        $r22 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        i5 = 0;

     label08:
        $i1 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r22);

        if i5 >= $i1 goto label09;

        $r23 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r26 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r22, i5);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label07;

     label10:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        r35 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = r1.<org.eclipse.jetty.server.Request: java.lang.String _queryString>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r35 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        virtualinvoke r1.<org.eclipse.jetty.server.Request: void setParameters(org.eclipse.jetty.util.MultiMap)>($r0);

        virtualinvoke r1.<org.eclipse.jetty.server.Request: void setQueryString(java.lang.String)>(r35);

        return;
    }

    static void <clinit>()
    {
        java.util.Set $r2;
        org.eclipse.jetty.util.log.Logger $r0;
        java.util.Locale $r1;

        <org.eclipse.jetty.server.Request: int __READER> = 2;

        <org.eclipse.jetty.server.Request: int _STREAM> = 1;

        <org.eclipse.jetty.server.Request: int __NONE> = 0;

        <org.eclipse.jetty.server.Request: java.lang.String __ASYNC_FWD> = "org.eclipse.asyncfwd";

        <org.eclipse.jetty.server.Request: java.lang.String __MULTIPART_CONTEXT> = "org.eclipse.multiPartContext";

        <org.eclipse.jetty.server.Request: java.lang.String __MULTIPART_INPUT_STREAM> = "org.eclipse.multiPartInputStream";

        <org.eclipse.jetty.server.Request: java.lang.String __MULTIPART_CONFIG_ELEMENT> = "org.eclipse.multipartConfig";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/Request;");

        <org.eclipse.jetty.server.Request: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        <org.eclipse.jetty.server.Request: java.util.Collection __defaultLocale> = $r2;

        return;
    }
}
