public class ucar.nc2.util.TableParser extends java.lang.Object
{
    private java.util.List fields;
    static java.lang.String testName;
    static java.lang.String testName3;
    static java.lang.String testRepeat;

    public static java.util.List readTable(java.lang.String, java.lang.String, int) throws java.io.IOException, java.lang.NumberFormatException
    {
        java.net.URL $r4;
        java.io.FileInputStream $r1;
        java.util.List $r3;
        int i0;
        java.lang.String r0, r2;
        boolean $z0;
        java.io.InputStream r5;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z0 == 0 goto label1;

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r0);

        r5 = virtualinvoke $r4.<java.net.URL: java.io.InputStream openStream()>();

        goto label2;

     label1:
        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r5 = $r1;

     label2:
        $r3 = staticinvoke <ucar.nc2.util.TableParser: java.util.List readTable(java.io.InputStream,java.lang.String,int)>(r5, r2, i0);

        return $r3;
    }

    public static java.util.List readTable(java.io.InputStream, java.lang.String, int) throws java.io.IOException, java.lang.NumberFormatException
    {
        java.util.List $r3;
        ucar.nc2.util.TableParser $r0;
        int i0;
        java.lang.String r1;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new ucar.nc2.util.TableParser;

        specialinvoke $r0.<ucar.nc2.util.TableParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r0.<ucar.nc2.util.TableParser: java.util.List readAllRecords(java.io.InputStream,int)>(r2, i0);

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return $r3;
    }

    public void <init>(java.lang.String) throws java.io.IOException, java.lang.NumberFormatException
    {
        ucar.nc2.util.TableParser$Field $r11;
        java.util.ArrayList $r9;
        java.util.StringTokenizer $r10;
        int $i0, $i1, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        java.lang.String r3, $r4, r7;
        boolean $z0;
        ucar.nc2.util.TableParser r0;
        char $c2;
        java.util.List $r6;
        java.lang.Class r8;

        r0 := @this: ucar.nc2.util.TableParser;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.util.TableParser: java.util.List fields> = $r9;

        i6 = 0;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, " ,");

     label1:
        $z0 = virtualinvoke $r10.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label6;

        $r4 = virtualinvoke $r10.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r7 = $r4;

        r8 = class "Ljava/lang/String;";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i1);

        $i7 = (int) $c2;

        if $i7 != 105 goto label2;

        r8 = <java.lang.Integer: java.lang.Class TYPE>;

     label2:
        $i8 = (int) $c2;

        if $i8 != 100 goto label3;

        r8 = <java.lang.Double: java.lang.Class TYPE>;

     label3:
        $i9 = (int) $c2;

        if $i9 != 76 goto label4;

        r8 = <java.lang.Long: java.lang.Class TYPE>;

     label4:
        if r8 == class "Ljava/lang/String;" goto label5;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        r7 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

     label5:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

        $r6 = r0.<ucar.nc2.util.TableParser: java.util.List fields>;

        $r11 = new ucar.nc2.util.TableParser$Field;

        specialinvoke $r11.<ucar.nc2.util.TableParser$Field: void <init>(ucar.nc2.util.TableParser,int,int,java.lang.Class)>(r0, i6, $i3, r8);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r11);

        i6 = $i3;

        goto label1;

     label6:
        return;
    }

    public ucar.nc2.util.TableParser$Field getField(int)
    {
        java.util.List $r1;
        ucar.nc2.util.TableParser r0;
        int i0;
        java.lang.Object $r2;
        ucar.nc2.util.TableParser$Field $r3;

        r0 := @this: ucar.nc2.util.TableParser;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.util.TableParser: java.util.List fields>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (ucar.nc2.util.TableParser$Field) $r2;

        return $r3;
    }

    public int getNumberOfFields()
    {
        ucar.nc2.util.TableParser r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.util.TableParser;

        $r1 = r0.<ucar.nc2.util.TableParser: java.util.List fields>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List readAllRecords(java.io.InputStream, int) throws java.io.IOException, java.lang.NumberFormatException
    {
        ucar.nc2.util.TableParser r6;
        java.io.InputStreamReader $r2;
        java.util.ArrayList $r0;
        java.util.List $r7;
        int i0, $i1, i2;
        java.io.BufferedReader $r1;
        java.lang.String $r4, $r5;
        ucar.nc2.util.TableParser$Record $r8;
        java.io.InputStream r3;
        boolean $z0;

        r6 := @this: ucar.nc2.util.TableParser;

        r3 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

        i2 = 0;

     label1:
        if i0 < 0 goto label2;

        if i2 >= i0 goto label7;

     label2:
        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 != null goto label3;

        goto label7;

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

        goto label1;

     label5:
        $r7 = r6.<ucar.nc2.util.TableParser: java.util.List fields>;

        $r8 = staticinvoke <ucar.nc2.util.TableParser$Record: ucar.nc2.util.TableParser$Record make(java.lang.String,java.util.List)>($r4, $r7);

        if $r8 == null goto label6;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        return $r0;
    }

    public ucar.nc2.util.TableParser$Record readRecord(java.lang.String) throws java.io.IOException, java.lang.NumberFormatException
    {
        java.util.List $r3;
        int $i0;
        ucar.nc2.util.TableParser r2;
        java.lang.String r0, $r1;
        ucar.nc2.util.TableParser$Record $r4;
        boolean $z0;

        r2 := @this: ucar.nc2.util.TableParser;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        return null;

     label3:
        $r3 = r2.<ucar.nc2.util.TableParser: java.util.List fields>;

        $r4 = staticinvoke <ucar.nc2.util.TableParser$Record: ucar.nc2.util.TableParser$Record make(java.lang.String,java.util.List)>(r0, $r3);

        return $r4;
    }

    public ucar.nc2.util.TableParser$DerivedField addDerivedField(ucar.nc2.util.TableParser$Field, ucar.nc2.util.TableParser$Transform, java.lang.Class)
    {
        java.util.List $r5;
        ucar.nc2.util.TableParser r1;
        java.lang.Class r4;
        ucar.nc2.util.TableParser$DerivedField $r0;
        ucar.nc2.util.TableParser$Field r2;
        ucar.nc2.util.TableParser$Transform r3;

        r1 := @this: ucar.nc2.util.TableParser;

        r2 := @parameter0: ucar.nc2.util.TableParser$Field;

        r3 := @parameter1: ucar.nc2.util.TableParser$Transform;

        r4 := @parameter2: java.lang.Class;

        $r0 = new ucar.nc2.util.TableParser$DerivedField;

        specialinvoke $r0.<ucar.nc2.util.TableParser$DerivedField: void <init>(ucar.nc2.util.TableParser,ucar.nc2.util.TableParser$Field,ucar.nc2.util.TableParser$Transform,java.lang.Class)>(r1, r2, r3, r4);

        $r5 = r1.<ucar.nc2.util.TableParser: java.util.List fields>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r16;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String $r1, $r13, $r15;
        ucar.nc2.util.TableParser$Record r5;
        java.io.PrintStream $r7, $r11;
        java.util.List $r3, $r6, $r8;
        java.lang.Class r0;
        java.lang.Object $r4, $r9;
        java.lang.StringBuilder $r12, $r14, $r17;
        java.io.InputStream $r2;

        r16 := @parameter0: java.lang.String[];

        r0 = class "Lucar/nc2/util/TableParser;";

        $r1 = <ucar.nc2.util.TableParser: java.lang.String testName3>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        $i5 = (int) 50000;

        $r3 = staticinvoke <ucar.nc2.util.TableParser: java.util.List readTable(java.io.InputStream,java.lang.String,int)>($r2, "3,15,54,60d,67d,73d", $i5);

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (ucar.nc2.util.TableParser$Record) $r4;

        i3 = 0;

     label2:
        $r6 = staticinvoke <ucar.nc2.util.TableParser$Record: java.util.List access$000(ucar.nc2.util.TableParser$Record)>(r5);

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i3 >= $i1 goto label3;

        $r8 = staticinvoke <ucar.nc2.util.TableParser$Record: java.util.List access$000(ucar.nc2.util.TableParser$Record)>(r5);

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r15);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println()>();

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r14;
        int $i0, $i1, i2, i3;
        java.lang.String $r0, $r11, $r13;
        ucar.nc2.util.TableParser$Record r3;
        java.io.PrintStream $r5, $r9;
        java.util.List $r1, $r4, $r6;
        java.lang.Object $r2, $r7;
        java.lang.StringBuilder $r8, $r10, $r12;

        r14 := @parameter0: java.lang.String[];

        $r0 = <ucar.nc2.util.TableParser: java.lang.String testRepeat>;

        $r1 = staticinvoke <ucar.nc2.util.TableParser: java.util.List readTable(java.lang.String,java.lang.String,int)>($r0, "11L,15i,19,(24i,25,26,27)*10", 5);

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (ucar.nc2.util.TableParser$Record) $r2;

        i3 = 0;

     label2:
        $r4 = staticinvoke <ucar.nc2.util.TableParser$Record: java.util.List access$000(ucar.nc2.util.TableParser$Record)>(r3);

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i3 >= $i1 goto label3;

        $r6 = staticinvoke <ucar.nc2.util.TableParser$Record: java.util.List access$000(ucar.nc2.util.TableParser$Record)>(r3);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r11 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>($r13);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println()>();

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.util.TableParser: java.lang.String testName> = "/optional/nj22/tables/STNDB.TXT";

        <ucar.nc2.util.TableParser: java.lang.String testName3> = "/resources/nj22/tables/nexrad.tbl";

        <ucar.nc2.util.TableParser: java.lang.String testRepeat> = "C:\\data\\ghcnm\\ghcnm.v3.0.0-beta1.20101207.qae.dat";

        return;
    }
}
