public class org.apache.lucene.index.SnapshotDeletionPolicy extends org.apache.lucene.index.IndexDeletionPolicy
{
    private java.util.Map idToSnapshot;
    private java.util.Map segmentsFileToIDs;
    private org.apache.lucene.index.IndexDeletionPolicy primary;
    protected org.apache.lucene.index.IndexCommit lastCommit;

    public void <init>(org.apache.lucene.index.IndexDeletionPolicy)
    {
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.HashMap $r1, $r2;
        org.apache.lucene.index.IndexDeletionPolicy r3;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r3 := @parameter0: org.apache.lucene.index.IndexDeletionPolicy;

        specialinvoke r0.<org.apache.lucene.index.IndexDeletionPolicy: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs> = $r2;

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy primary> = r3;

        return;
    }

    public void <init>(org.apache.lucene.index.IndexDeletionPolicy, java.util.Map)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.Set $r3;
        java.util.Map r2;
        java.lang.Object $r5, $r7, $r9;
        org.apache.lucene.index.IndexDeletionPolicy r1;
        java.lang.String $r8, $r10;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: org.apache.lucene.index.IndexDeletionPolicy;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void <init>(org.apache.lucene.index.IndexDeletionPolicy)>(r1);

        if r2 == null goto label2;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void registerSnapshotInfo(java.lang.String,java.lang.String,org.apache.lucene.index.IndexCommit)>($r8, $r10, null);

        goto label1;

     label2:
        return;
    }

    protected void checkSnapshotted(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r1, $r7;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: boolean isSnapshotted(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshot ID ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already used - must be unique");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    protected void registerSnapshotInfo(java.lang.String, java.lang.String, org.apache.lucene.index.IndexCommit)
    {
        org.apache.lucene.index.IndexCommit r4;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo $r2;
        java.util.Set r10;
        java.util.HashSet $r8;
        java.util.Map $r5, $r6, $r9;
        java.lang.Object $r7;
        java.lang.String r1, r3;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.lucene.index.IndexCommit;

        $r5 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r2 = new org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo;

        specialinvoke $r2.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: void <init>(java.lang.String,java.lang.String,org.apache.lucene.index.IndexCommit)>(r1, r3, r4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        $r6 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r10 = (java.util.Set) $r7;

        if r10 != null goto label1;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r10 = $r8;

        $r9 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

     label1:
        interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected java.util.List wrapCommits(java.util.List)
    {
        org.apache.lucene.index.IndexCommit r4;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint $r5;
        java.util.Iterator $r2;
        org.apache.lucene.index.SnapshotDeletionPolicy r6;
        java.util.ArrayList $r0;
        java.util.List r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r6 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.IndexCommit) $r3;

        $r5 = new org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        specialinvoke $r5.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: void <init>(org.apache.lucene.index.SnapshotDeletionPolicy,org.apache.lucene.index.IndexCommit)>(r6, r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r0;
    }

    public synchronized org.apache.lucene.index.IndexCommit getSnapshot(java.lang.String)
    {
        org.apache.lucene.index.IndexCommit $r5;
        java.lang.IllegalStateException $r6;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, $r10;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r3;

        if r4 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No snapshot exists by ID: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r5 = r4.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: org.apache.lucene.index.IndexCommit commit>;

        return $r5;
    }

    public synchronized java.util.Map getSnapshots()
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        org.apache.lucene.index.SnapshotDeletionPolicy r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo $r9;
        java.util.Set $r3;
        java.util.HashMap $r0;
        java.util.Map $r2;
        java.lang.Object $r5, $r7, $r8;
        java.lang.String $r10;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r8;

        $r10 = $r9.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: java.lang.String segmentsFileName>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        goto label1;

     label2:
        return $r0;
    }

    public boolean isSnapshotted(java.lang.String)
    {
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public synchronized void onCommit(java.util.List) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r5;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.List r1, $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        org.apache.lucene.index.IndexDeletionPolicy $r2;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy primary>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.List wrapCommits(java.util.List)>(r1);

        virtualinvoke $r2.<org.apache.lucene.index.IndexDeletionPolicy: void onCommit(java.util.List)>($r3);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (org.apache.lucene.index.IndexCommit) $r4;

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit> = $r5;

        return;
    }

    public synchronized void onInit(java.util.List) throws java.io.IOException
    {
        java.util.Map $r7, $r12, $r15, $r23, $r29;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r8, r33;
        java.util.List r1, $r3;
        org.apache.lucene.index.IndexCommit $r5, $r19, r32;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo $r18, $r31, r37;
        java.util.ArrayList $r21, r34;
        int $i0, $i1;
        org.apache.lucene.index.IndexDeletionPolicy $r2;
        java.lang.String $r14, $r24, r28, r36;
        java.util.Map$Entry r35;
        java.util.Iterator $r6, $r9, $r10, $r26;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.lang.Object $r4, $r11, $r13, $r16, $r17, $r20, $r22, $r25, $r27, $r30;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy primary>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.List wrapCommits(java.util.List)>(r1);

        virtualinvoke $r2.<org.apache.lucene.index.IndexDeletionPolicy: void onInit(java.util.List)>($r3);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (org.apache.lucene.index.IndexCommit) $r4;

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit> = $r5;

        $r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r22 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.lucene.index.IndexCommit) $r22;

        $r23 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        $r24 = virtualinvoke r32.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        r33 = (java.util.Set) $r25;

        if r33 == null goto label03;

        $r26 = interfaceinvoke r33.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label03;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r27;

        $r29 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        $r31 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r30;

        $r31.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: org.apache.lucene.index.IndexCommit commit> = r32;

        goto label02;

     label03:
        goto label01;

     label04:
        r34 = null;

        $r7 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r16 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r35.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r17;

        $r19 = $r18.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: org.apache.lucene.index.IndexCommit commit>;

        if $r19 != null goto label07;

        if r34 != null goto label06;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r34 = $r21;

     label06:
        $r20 = interfaceinvoke r35.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label07:
        goto label05;

     label08:
        if r34 == null goto label10;

        $r10 = virtualinvoke r34.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.lang.String) $r11;

        $r12 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r36);

        r37 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r13;

        $r15 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        $r14 = r37.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: java.lang.String segmentsFileName>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14);

        goto label09;

     label10:
        return;
    }

    public synchronized void release(java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r11;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo r4;
        java.util.Map $r2, $r6, $r10;
        int $i0;
        java.lang.String r1, $r5, $r9, $r15;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.Set r8;
        java.lang.Object $r3, $r7;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo) $r3;

        if r4 != null goto label1;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshot doesn\'t exist: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r6 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        $r5 = r4.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: java.lang.String segmentsFileName>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.util.Set) $r7;

        if r8 == null goto label2;

        interfaceinvoke r8.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $i0 = interfaceinvoke r8.<java.util.Set: int size()>();

        if $i0 != 0 goto label2;

        $r10 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        $r9 = r4.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotInfo: java.lang.String segmentsFileName>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

     label2:
        return;
    }

    public synchronized org.apache.lucene.index.IndexCommit snapshot(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r1, $r3, $r5, $r6;
        java.lang.IllegalStateException $r7;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit>;

        if $r1 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No index commit to snapshot");

        throw $r7;

     label1:
        virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void checkSnapshotted(java.lang.String)>(r2);

        $r3 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();

        $r5 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit>;

        virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: void registerSnapshotInfo(java.lang.String,java.lang.String,org.apache.lucene.index.IndexCommit)>(r2, $r4, $r5);

        $r6 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit>;

        return $r6;
    }

    public org.apache.lucene.index.IndexDeletionPolicy clone()
    {
        org.apache.lucene.index.SnapshotDeletionPolicy r0, r2;
        java.util.HashMap $r5, $r7;
        java.util.Map $r6, $r8;
        org.apache.lucene.index.IndexDeletionPolicy $r1, $r3, $r4;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        $r1 = specialinvoke r0.<org.apache.lucene.index.IndexDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy clone()>();

        r2 = (org.apache.lucene.index.SnapshotDeletionPolicy) $r1;

        $r3 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy primary>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.IndexDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy clone()>();

        r2.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy primary> = $r4;

        r2.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexCommit lastCommit> = null;

        $r5 = new java.util.HashMap;

        $r6 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6);

        r2.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs> = $r5;

        $r7 = new java.util.HashMap;

        $r8 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot>;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8);

        r2.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map idToSnapshot> = $r7;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.index.IndexDeletionPolicy $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy: org.apache.lucene.index.IndexDeletionPolicy clone()>();

        return $r1;
    }

    static java.util.Map access$000(org.apache.lucene.index.SnapshotDeletionPolicy)
    {
        org.apache.lucene.index.SnapshotDeletionPolicy r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.lucene.index.SnapshotDeletionPolicy;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map segmentsFileToIDs>;

        return $r1;
    }
}
