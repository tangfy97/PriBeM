public class org.apache.tika.Tika extends java.lang.Object
{
    private final org.apache.tika.detect.Detector detector;
    private final org.apache.tika.parser.Parser parser;
    private final org.apache.tika.language.translate.Translator translator;
    private int maxStringLength;

    public void <init>(org.apache.tika.detect.Detector, org.apache.tika.parser.Parser)
    {
        org.apache.tika.language.translate.Translator $r4;
        org.apache.tika.parser.Parser r2;
        org.apache.tika.Tika r0;
        org.apache.tika.config.TikaConfig $r3;
        org.apache.tika.detect.Detector r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        r2 := @parameter1: org.apache.tika.parser.Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.Tika: int maxStringLength> = 100000;

        r0.<org.apache.tika.Tika: org.apache.tika.detect.Detector detector> = r1;

        r0.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser> = r2;

        $r3 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.tika.config.TikaConfig: org.apache.tika.language.translate.Translator getTranslator()>();

        r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator> = $r4;

        return;
    }

    public void <init>(org.apache.tika.detect.Detector, org.apache.tika.parser.Parser, org.apache.tika.language.translate.Translator)
    {
        org.apache.tika.language.translate.Translator r3;
        org.apache.tika.parser.Parser r2;
        org.apache.tika.Tika r0;
        org.apache.tika.detect.Detector r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        r2 := @parameter1: org.apache.tika.parser.Parser;

        r3 := @parameter2: org.apache.tika.language.translate.Translator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.Tika: int maxStringLength> = 100000;

        r0.<org.apache.tika.Tika: org.apache.tika.detect.Detector detector> = r1;

        r0.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser> = r2;

        r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator> = r3;

        return;
    }

    public void <init>(org.apache.tika.config.TikaConfig)
    {
        org.apache.tika.language.translate.Translator $r4;
        org.apache.tika.Tika r0;
        org.apache.tika.config.TikaConfig r1;
        org.apache.tika.detect.Detector $r2;
        org.apache.tika.parser.AutoDetectParser $r3;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: org.apache.tika.config.TikaConfig;

        $r2 = virtualinvoke r1.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        $r3 = new org.apache.tika.parser.AutoDetectParser;

        specialinvoke $r3.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.config.TikaConfig)>(r1);

        $r4 = virtualinvoke r1.<org.apache.tika.config.TikaConfig: org.apache.tika.language.translate.Translator getTranslator()>();

        specialinvoke r0.<org.apache.tika.Tika: void <init>(org.apache.tika.detect.Detector,org.apache.tika.parser.Parser,org.apache.tika.language.translate.Translator)>($r2, $r3, $r4);

        return;
    }

    public void <init>()
    {
        org.apache.tika.Tika r0;
        org.apache.tika.config.TikaConfig $r1;

        r0 := @this: org.apache.tika.Tika;

        $r1 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        specialinvoke r0.<org.apache.tika.Tika: void <init>(org.apache.tika.config.TikaConfig)>($r1);

        return;
    }

    public void <init>(org.apache.tika.detect.Detector)
    {
        org.apache.tika.Tika r0;
        org.apache.tika.detect.Detector r1;
        org.apache.tika.parser.AutoDetectParser $r2;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        $r2 = new org.apache.tika.parser.AutoDetectParser;

        specialinvoke $r2.<org.apache.tika.parser.AutoDetectParser: void <init>(org.apache.tika.detect.Detector)>(r1);

        specialinvoke r0.<org.apache.tika.Tika: void <init>(org.apache.tika.detect.Detector,org.apache.tika.parser.Parser)>(r1, $r2);

        return;
    }

    public java.lang.String detect(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        java.io.BufferedInputStream $r6;
        org.apache.tika.detect.Detector $r3, $r7;
        org.apache.tika.mime.MediaType $r4, $r8;
        org.apache.tika.metadata.Metadata r2;
        org.apache.tika.Tika r1;
        java.lang.String $r5, $r9;
        java.io.InputStream r0;
        boolean $z0;

        r1 := @this: org.apache.tika.Tika;

        r0 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.tika.metadata.Metadata;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.io.InputStream: boolean markSupported()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = r1.<org.apache.tika.Tika: org.apache.tika.detect.Detector detector>;

        $r4 = interfaceinvoke $r3.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r0, r2);

        $r5 = virtualinvoke $r4.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        return $r5;

     label2:
        $r7 = r1.<org.apache.tika.Tika: org.apache.tika.detect.Detector detector>;

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r0);

        $r8 = interfaceinvoke $r7.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r6, r2);

        $r9 = virtualinvoke $r8.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String detect(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r0;
        org.apache.tika.Tika r2;
        java.lang.String r1, $r4;
        java.io.InputStream r3;

        r2 := @this: org.apache.tika.Tika;

        r3 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        virtualinvoke $r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", r1);

        $r4 = virtualinvoke r2.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r3, $r0);

        return $r4;
    }

    public java.lang.String detect(java.io.InputStream) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.Tika r0;
        java.lang.String $r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r1, $r2);

        return $r3;
    }

    public java.lang.String detect(byte[], java.lang.String)
    {
        java.lang.Throwable $r7;
        byte[] r0;
        java.lang.IllegalStateException $r6;
        java.io.IOException $r5;
        org.apache.tika.io.TikaInputStream $r1;
        org.apache.tika.Tika r2;
        java.lang.String r3, $r4;

        r2 := @this: org.apache.tika.Tika;

        r0 := @parameter0: byte[];

        r3 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>(r0);

     label2:
        $r4 = virtualinvoke r2.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream,java.lang.String)>($r1, r3);

     label3:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label4:
        return $r4;

     label5:
        $r7 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r7;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected IOException", $r5);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label7 with label7;
    }

    public java.lang.String detect(byte[])
    {
        java.lang.Throwable $r6;
        byte[] r0;
        java.lang.IllegalStateException $r5;
        org.apache.tika.io.TikaInputStream $r1;
        org.apache.tika.Tika r2;
        java.io.IOException $r4;
        java.lang.String $r3;

        r2 := @this: org.apache.tika.Tika;

        r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>(r0);

     label2:
        $r3 = virtualinvoke r2.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream)>($r1);

     label3:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label4:
        return $r3;

     label5:
        $r6 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r6;

     label7:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected IOException", $r4);

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label7 with label7;
    }

    public java.lang.String detect(java.io.File) throws java.io.IOException
    {
        java.net.URL $r3;
        org.apache.tika.Tika r0;
        java.net.URI $r2;
        java.lang.String $r4;
        java.io.File r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        $r4 = virtualinvoke r0.<org.apache.tika.Tika: java.lang.String detect(java.net.URL)>($r3);

        return $r4;
    }

    public java.lang.String detect(java.net.URL) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        org.apache.tika.metadata.Metadata $r0;
        java.net.URL r1;
        org.apache.tika.io.TikaInputStream $r2;
        org.apache.tika.Tika r3;
        java.lang.String $r4;

        r3 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.net.URL;

        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata)>(r1, $r0);

     label1:
        $r4 = virtualinvoke r3.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r2, $r0);

     label2:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String detect(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        org.apache.tika.Tika r0;
        java.io.IOException $r3;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<org.apache.tika.Tika: java.lang.String detect(java.io.InputStream,java.lang.String)>(null, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected IOException", $r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String translate(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r7;
        java.lang.Exception $r6;
        org.apache.tika.language.translate.Translator $r4;
        org.apache.tika.Tika r0;
        java.lang.String r1, r2, r3, $r5;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

     label1:
        $r4 = r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator>;

        $r5 = interfaceinvoke $r4.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error translating data.", $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String translate(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r6;
        org.apache.tika.language.translate.Translator $r3;
        org.apache.tika.Tika r0;
        java.lang.String r1, r2, $r4;
        java.lang.Exception $r5;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r3 = r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator>;

        $r4 = interfaceinvoke $r3.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error translating data.", $r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String translate(java.io.InputStream, java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        java.lang.Exception $r7;
        org.apache.tika.language.translate.Translator $r2;
        org.apache.tika.Tika r0;
        java.lang.String $r3, r4, r5, $r6;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

     label1:
        $r2 = r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator>;

        $r3 = staticinvoke <org.apache.tika.io.IOUtils: java.lang.String toString(java.io.InputStream)>(r1);

        $r6 = interfaceinvoke $r2.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String,java.lang.String)>($r3, r4, r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error translating data.", $r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String translate(java.io.InputStream, java.lang.String)
    {
        java.lang.IllegalStateException $r7;
        java.lang.Exception $r6;
        org.apache.tika.language.translate.Translator $r2;
        org.apache.tika.Tika r0;
        java.lang.String $r3, r4, $r5;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

     label1:
        $r2 = r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator>;

        $r3 = staticinvoke <org.apache.tika.io.IOUtils: java.lang.String toString(java.io.InputStream)>(r1);

        $r5 = interfaceinvoke $r2.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String)>($r3, r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Error translating data.", $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.io.Reader parse(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata r5;
        org.apache.tika.parser.Parser $r2, $r6;
        org.apache.tika.parser.ParseContext $r0;
        org.apache.tika.Tika r1;
        org.apache.tika.parser.ParsingReader $r3;
        java.io.InputStream r4;

        r1 := @this: org.apache.tika.Tika;

        r4 := @parameter0: java.io.InputStream;

        r5 := @parameter1: org.apache.tika.metadata.Metadata;

        $r0 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r0.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r2 = r1.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        virtualinvoke $r0.<org.apache.tika.parser.ParseContext: void set(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", $r2);

        $r3 = new org.apache.tika.parser.ParsingReader;

        $r6 = r1.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        specialinvoke $r3.<org.apache.tika.parser.ParsingReader: void <init>(org.apache.tika.parser.Parser,java.io.InputStream,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r6, r4, r5, $r0);

        return $r3;
    }

    public java.io.Reader parse(java.io.InputStream) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.Tika r0;
        java.io.Reader $r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.tika.Tika: java.io.Reader parse(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r1, $r2);

        return $r3;
    }

    public java.io.Reader parse(java.io.File) throws java.io.IOException
    {
        java.net.URL $r3;
        org.apache.tika.Tika r0;
        java.net.URI $r2;
        java.io.Reader $r4;
        java.io.File r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        $r4 = virtualinvoke r0.<org.apache.tika.Tika: java.io.Reader parse(java.net.URL)>($r3);

        return $r4;
    }

    public java.io.Reader parse(java.net.URL) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r0;
        java.net.URL r1;
        org.apache.tika.io.TikaInputStream $r2;
        org.apache.tika.Tika r3;
        java.io.Reader $r4;

        r3 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.net.URL;

        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata)>(r1, $r0);

        $r4 = virtualinvoke r3.<org.apache.tika.Tika: java.io.Reader parse(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r2, $r0);

        return $r4;
    }

    public java.lang.String parseToString(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r9;
        org.apache.tika.sax.BodyContentHandler $r5;
        org.apache.tika.parser.Parser $r3, $r6;
        org.apache.tika.sax.WriteOutContentHandler $r0;
        org.apache.tika.metadata.Metadata r7;
        org.apache.tika.exception.TikaException $r11;
        org.apache.tika.parser.ParseContext $r2;
        org.xml.sax.SAXException $r10;
        int $i0;
        org.apache.tika.Tika r1;
        java.lang.String $r8;
        java.io.InputStream r4;
        boolean $z0;

        r1 := @this: org.apache.tika.Tika;

        r4 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        $r0 = new org.apache.tika.sax.WriteOutContentHandler;

        $i0 = r1.<org.apache.tika.Tika: int maxStringLength>;

        specialinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(int)>($i0);

     label1:
        $r2 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r2.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r3 = r1.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        virtualinvoke $r2.<org.apache.tika.parser.ParseContext: void set(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", $r3);

        $r6 = r1.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        $r5 = new org.apache.tika.sax.BodyContentHandler;

        specialinvoke $r5.<org.apache.tika.sax.BodyContentHandler: void <init>(org.xml.sax.ContentHandler)>($r0);

        interfaceinvoke $r6.<org.apache.tika.parser.Parser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r4, $r5, r7, $r2);

     label2:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        goto label7;

     label3:
        $r10 := @caughtexception;

        $z0 = virtualinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: boolean isWriteLimitReached(java.lang.Throwable)>($r10);

        if $z0 != 0 goto label4;

        $r11 = new org.apache.tika.exception.TikaException;

        specialinvoke $r11.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected SAX processing failure", $r10);

        throw $r11;

     label4:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

     label6:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        throw $r9;

     label7:
        $r8 = virtualinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: java.lang.String toString()>();

        return $r8;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String parseToString(java.io.InputStream, org.apache.tika.metadata.Metadata, int) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r9;
        org.apache.tika.sax.BodyContentHandler $r5;
        org.apache.tika.parser.Parser $r3, $r6;
        org.apache.tika.sax.WriteOutContentHandler $r0;
        org.apache.tika.metadata.Metadata r7;
        org.apache.tika.exception.TikaException $r11;
        org.apache.tika.parser.ParseContext $r1;
        org.xml.sax.SAXException $r10;
        int i0;
        org.apache.tika.Tika r2;
        java.lang.String $r8;
        java.io.InputStream r4;
        boolean $z0;

        r2 := @this: org.apache.tika.Tika;

        r4 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        i0 := @parameter2: int;

        $r0 = new org.apache.tika.sax.WriteOutContentHandler;

        specialinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(int)>(i0);

     label1:
        $r1 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r1.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r3 = r2.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        virtualinvoke $r1.<org.apache.tika.parser.ParseContext: void set(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/Parser;", $r3);

        $r6 = r2.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        $r5 = new org.apache.tika.sax.BodyContentHandler;

        specialinvoke $r5.<org.apache.tika.sax.BodyContentHandler: void <init>(org.xml.sax.ContentHandler)>($r0);

        interfaceinvoke $r6.<org.apache.tika.parser.Parser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r4, $r5, r7, $r1);

     label2:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        goto label7;

     label3:
        $r10 := @caughtexception;

        $z0 = virtualinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: boolean isWriteLimitReached(java.lang.Throwable)>($r10);

        if $z0 != 0 goto label4;

        $r11 = new org.apache.tika.exception.TikaException;

        specialinvoke $r11.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected SAX processing failure", $r10);

        throw $r11;

     label4:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

     label6:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        throw $r9;

     label7:
        $r8 = virtualinvoke $r0.<org.apache.tika.sax.WriteOutContentHandler: java.lang.String toString()>();

        return $r8;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String parseToString(java.io.InputStream) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.Tika r0;
        java.lang.String $r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r1, $r2);

        return $r3;
    }

    public java.lang.String parseToString(java.io.File) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        java.net.URL $r3;
        org.apache.tika.Tika r0;
        java.net.URI $r2;
        java.lang.String $r4;
        java.io.File r1;

        r0 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        $r4 = virtualinvoke r0.<org.apache.tika.Tika: java.lang.String parseToString(java.net.URL)>($r3);

        return $r4;
    }

    public java.lang.String parseToString(java.net.URL) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata $r0;
        java.net.URL r1;
        org.apache.tika.io.TikaInputStream $r2;
        org.apache.tika.Tika r3;
        java.lang.String $r4;

        r3 := @this: org.apache.tika.Tika;

        r1 := @parameter0: java.net.URL;

        $r0 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r0.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata)>(r1, $r0);

        $r4 = virtualinvoke r3.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r2, $r0);

        return $r4;
    }

    public int getMaxStringLength()
    {
        int $i0;
        org.apache.tika.Tika r0;

        r0 := @this: org.apache.tika.Tika;

        $i0 = r0.<org.apache.tika.Tika: int maxStringLength>;

        return $i0;
    }

    public void setMaxStringLength(int)
    {
        int i0;
        org.apache.tika.Tika r0;

        r0 := @this: org.apache.tika.Tika;

        i0 := @parameter0: int;

        r0.<org.apache.tika.Tika: int maxStringLength> = i0;

        return;
    }

    public org.apache.tika.parser.Parser getParser()
    {
        org.apache.tika.Tika r0;
        org.apache.tika.parser.Parser $r1;

        r0 := @this: org.apache.tika.Tika;

        $r1 = r0.<org.apache.tika.Tika: org.apache.tika.parser.Parser parser>;

        return $r1;
    }

    public org.apache.tika.detect.Detector getDetector()
    {
        org.apache.tika.Tika r0;
        org.apache.tika.detect.Detector $r1;

        r0 := @this: org.apache.tika.Tika;

        $r1 = r0.<org.apache.tika.Tika: org.apache.tika.detect.Detector detector>;

        return $r1;
    }

    public org.apache.tika.language.translate.Translator getTranslator()
    {
        org.apache.tika.Tika r0;
        org.apache.tika.language.translate.Translator $r1;

        r0 := @this: org.apache.tika.Tika;

        $r1 = r0.<org.apache.tika.Tika: org.apache.tika.language.translate.Translator translator>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r8;
        java.util.Properties $r6;
        java.lang.Exception $r7;
        java.lang.Class $r0;
        java.lang.StringBuilder $r2, $r3, $r4;
        org.apache.tika.Tika r9;
        java.lang.String $r5, r10;
        java.io.InputStream $r1;

        r9 := @this: org.apache.tika.Tika;

        r10 = null;

     label1:
        $r0 = class "Lorg/apache/tika/Tika;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/maven/org.apache.tika/tika-core/pom.properties");

        if $r1 == null goto label6;

     label2:
        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>($r1);

        r10 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("version");

     label3:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r8;

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

     label8:
        if r10 == null goto label9;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Apache Tika ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label9:
        return "Apache Tika";

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label6 with label7;
    }
}
