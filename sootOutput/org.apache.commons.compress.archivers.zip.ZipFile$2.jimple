class org.apache.commons.compress.archivers.zip.ZipFile$2 extends java.lang.Object implements java.util.Comparator
{
    final org.apache.commons.compress.archivers.zip.ZipFile this$0;

    void <init>(org.apache.commons.compress.archivers.zip.ZipFile)
    {
        org.apache.commons.compress.archivers.zip.ZipFile$2 r0;
        org.apache.commons.compress.archivers.zip.ZipFile r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipFile$2;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipFile;

        r0.<org.apache.commons.compress.archivers.zip.ZipFile$2: org.apache.commons.compress.archivers.zip.ZipFile this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveEntry)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry r0, r1;
        long $l0, $l1, l2;
        byte $b3, $b4, $b5;
        int $i7, $i8;
        org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry $r3, $r4;
        boolean $z0, $z1;
        org.apache.commons.compress.archivers.zip.ZipFile$2 r5;
        org.apache.commons.compress.archivers.zip.ZipFile$Entry r2, $r6, $r7;

        r5 := @this: org.apache.commons.compress.archivers.zip.ZipFile$2;

        r0 := @parameter0: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        r1 := @parameter1: org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

        if r0 != r1 goto label01;

        return 0;

     label01:
        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.ZipFile$Entry;

        if $z0 == 0 goto label02;

        $r6 = (org.apache.commons.compress.archivers.zip.ZipFile$Entry) r0;

        goto label03;

     label02:
        $r6 = null;

     label03:
        r2 = $r6;

        $z1 = r1 instanceof org.apache.commons.compress.archivers.zip.ZipFile$Entry;

        if $z1 == 0 goto label04;

        $r7 = (org.apache.commons.compress.archivers.zip.ZipFile$Entry) r1;

        goto label05;

     label04:
        $r7 = null;

     label05:
        if r2 != null goto label06;

        return 1;

     label06:
        if $r7 != null goto label07;

        $i7 = (int) -1;

        return $i7;

     label07:
        $r3 = virtualinvoke r2.<org.apache.commons.compress.archivers.zip.ZipFile$Entry: org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry getOffsetEntry()>();

        $l0 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry: long access$200(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry)>($r3);

        $r4 = virtualinvoke $r7.<org.apache.commons.compress.archivers.zip.ZipFile$Entry: org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry getOffsetEntry()>();

        $l1 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry: long access$200(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry)>($r4);

        l2 = $l0 - $l1;

        $b3 = l2 cmp 0L;

        if $b3 != 0 goto label08;

        $b5 = 0;

        goto label10;

     label08:
        $b4 = l2 cmp 0L;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label09;

        $b5 = -1;

        goto label10;

     label09:
        $b5 = 1;

     label10:
        return $b5;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry $r3, $r4;
        org.apache.commons.compress.archivers.zip.ZipFile$2 r0;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipFile$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.compress.archivers.zip.ZipArchiveEntry) r1;

        $r3 = (org.apache.commons.compress.archivers.zip.ZipArchiveEntry) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.ZipFile$2: int compare(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r4, $r3);

        return $i0;
    }
}
