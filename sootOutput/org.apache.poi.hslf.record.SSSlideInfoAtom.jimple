public class org.apache.poi.hslf.record.SSSlideInfoAtom extends org.apache.poi.hslf.record.RecordAtom
{
    public static final int MANUAL_ADVANCE_BIT;
    public static final int HIDDEN_BIT;
    public static final int SOUND_BIT;
    public static final int LOOP_SOUND_BIT;
    public static final int STOP_SOUND_BIT;
    public static final int AUTO_ADVANCE_BIT;
    public static final int CURSOR_VISIBLE_BIT;
    private static final long _type;
    private byte[] _header;
    private int _slideTime;
    private int _soundIdRef;
    private short _effectDirection;
    private short _effectType;
    private short _effectTransitionFlags;
    private short _speed;
    private byte[] _unused;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;
        long $l0;
        short $s2;
        int $i1;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed> = 0;

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, 0, 0);

        $r3 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.SSSlideInfoAtom: long _type>;

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r3, 2, $s2);

        $r4 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r4, 4, 16);

        $r5 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r5, 6, 0);

        $r6 = newarray (byte)[3];

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _unused> = $r6;

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] r1, $r2, $r3, $r4, $r6, $r8, $r10, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;
        java.lang.AssertionError $r16, $r17, $r18, $r19, $r20, $r21;
        short $s4, $s5, $s6, $s7, $s10, $s11, $s12, $s14;
        int i0, $i1, $i2, $i3, $i8, $i9, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, $i25, $i26;
        org.apache.poi.hslf.record.RecordTypes$Type $r11;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i18 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = 0;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed> = 0;

        if i18 == 24 goto label1;

        i18 = 24;

     label1:
        $z0 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i16 = lengthof r1;

        $i15 = i0 + i18;

        if $i16 >= $i15 goto label2;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label2:
        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, i0, 8);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $i1 = lengthof $r3;

        $i17 = i0 + $i1;

        $z1 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r13 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $s14 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r13, 0);

        if $s14 == 0 goto label3;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label3:
        $z2 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r10 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $s12 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r10, 2);

        $r11 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type SSSlideInfoAtom>;

        $i13 = $r11.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $i25 = (int) $s12;

        if $i25 == $i13 goto label4;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label4:
        $z3 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        $r8 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $s11 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r8, 4);

        $i26 = (int) $s11;

        if $i26 == 16 goto label5;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label5:
        $z4 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z4 != 0 goto label6;

        $r6 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        $s10 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r6, 6);

        if $s10 == 0 goto label6;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label6:
        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i17);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime> = $i2;

        $z5 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z5 != 0 goto label8;

        $i8 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime>;

        if 0 > $i8 goto label7;

        $i9 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime>;

        if $i9 <= 86399000 goto label8;

     label7:
        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label8:
        i19 = $i17 + 4;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i19);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef> = $i3;

        i20 = i19 + 4;

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, i20);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection> = $s4;

        i21 = i20 + 1;

        $s5 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, i21);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType> = $s5;

        i22 = i21 + 1;

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, i22);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = $s6;

        i23 = i22 + 2;

        $s7 = staticinvoke <org.apache.poi.util.LittleEndian: short getUByte(byte[],int)>(r1, i23);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed> = $s7;

        i24 = i23 + 1;

        $r4 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, i24, 3);

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _unused> = $r4;

        return;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, r3, $r4, $r5;
        org.apache.poi.hslf.record.SSSlideInfoAtom r1;
        java.lang.AssertionError $r6;
        short $s2, $s3, $s4, $s5;
        int $i0, $i1, $i6;
        boolean $z0;

        r1 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $i0 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime>;

        staticinvoke <org.apache.poi.hslf.record.SSSlideInfoAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        $i1 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef>;

        staticinvoke <org.apache.poi.hslf.record.SSSlideInfoAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        r3 = newarray (byte)[1];

        $s2 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUByte(byte[],int,short)>(r3, 0, $s2);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>(r3);

        $s3 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUByte(byte[],int,short)>(r3, 0, $s3);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>(r3);

        $s4 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags>;

        staticinvoke <org.apache.poi.hslf.record.SSSlideInfoAtom: void writeLittleEndian(short,java.io.OutputStream)>($s4, r0);

        $s5 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUByte(byte[],int,short)>(r3, 0, $s5);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>(r3);

        $z0 = <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _unused>;

        $i6 = lengthof $r5;

        if $i6 == 3 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r4 = r1.<org.apache.poi.hslf.record.SSSlideInfoAtom: byte[] _unused>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $l0 = <org.apache.poi.hslf.record.SSSlideInfoAtom: long _type>;

        return $l0;
    }

    public int getSlideTime()
    {
        int $i0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime>;

        return $i0;
    }

    public void setSlideTime(int)
    {
        int i0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _slideTime> = i0;

        return;
    }

    public int getSoundIdRef()
    {
        int $i0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef>;

        return $i0;
    }

    public void setSoundIdRef(int)
    {
        int i0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: int _soundIdRef> = i0;

        return;
    }

    public short getEffectDirection()
    {
        short $s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $s0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection>;

        return $s0;
    }

    public void setEffectDirection(short)
    {
        short s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectDirection> = s0;

        return;
    }

    public short getEffectType()
    {
        short $s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $s0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType>;

        return $s0;
    }

    public void setEffectType(short)
    {
        short s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectType> = s0;

        return;
    }

    public short getEffectTransitionFlags()
    {
        short $s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $s0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags>;

        return $s0;
    }

    public void setEffectTransitionFlags(short)
    {
        short s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = s0;

        return;
    }

    public void setEffectTransitionFlagByBit(int, boolean)
    {
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;
        short $s2, $s4, $s5, $s7;
        int i0, $i1, $i3, $i6, $i8, $i10, $i11;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $s5 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags>;

        $i8 = (int) $s5;

        $i6 = $i8 | i0;

        $s7 = (short) $i6;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = $s7;

        goto label2;

     label1:
        $s2 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags>;

        $i10 = (int) 65535;

        $i1 = $i10 ^ i0;

        $i11 = (int) $s2;

        $i3 = $i11 & $i1;

        $s4 = (short) $i3;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags> = $s4;

     label2:
        return;
    }

    public boolean getEffectTransitionFlagByBit(int)
    {
        short $s1;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;
        int i0, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        i0 := @parameter0: int;

        $s1 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _effectTransitionFlags>;

        $i3 = (int) $s1;

        $i2 = $i3 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public short getSpeed()
    {
        short $s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        $s0 = r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed>;

        return $s0;
    }

    public void setSpeed(short)
    {
        short s0;
        org.apache.poi.hslf.record.SSSlideInfoAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SSSlideInfoAtom;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hslf.record.SSSlideInfoAtom: short _speed> = s0;

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r1;
        int $i0;
        java.lang.Class $r0;
        long $l1;
        boolean $z0, $z1;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int CURSOR_VISIBLE_BIT> = 4096;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int AUTO_ADVANCE_BIT> = 1024;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int STOP_SOUND_BIT> = 256;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int LOOP_SOUND_BIT> = 64;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int SOUND_BIT> = 16;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int HIDDEN_BIT> = 4;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: int MANUAL_ADVANCE_BIT> = 1;

        $r0 = class "Lorg/apache/poi/hslf/record/SSSlideInfoAtom;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.poi.hslf.record.SSSlideInfoAtom: boolean $assertionsDisabled> = $z1;

        $r1 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type SSSlideInfoAtom>;

        $i0 = $r1.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        <org.apache.poi.hslf.record.SSSlideInfoAtom: long _type> = $l1;

        return;
    }
}
