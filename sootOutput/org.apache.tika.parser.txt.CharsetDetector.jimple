public class org.apache.tika.parser.txt.CharsetDetector extends java.lang.Object
{
    private static final int kBufSize;
    private static final int MAX_CONFIDENCE;
    byte[] fInputBytes;
    int fInputLen;
    short[] fByteStats;
    boolean fC1Bytes;
    java.lang.String fDeclaredEncoding;
    byte[] fRawInput;
    int fRawLength;
    java.io.InputStream fInputStream;
    boolean fStripTags;
    private static java.util.ArrayList fCSRecognizers;
    private static java.lang.String[] fCharsetNames;

    public void <init>()
    {
        byte[] $r1;
        short[] $r2;
        org.apache.tika.parser.txt.CharsetDetector r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[12000];

        r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes> = $r1;

        $r2 = newarray (short)[256];

        r0.<org.apache.tika.parser.txt.CharsetDetector: short[] fByteStats> = $r2;

        r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fC1Bytes> = 0;

        r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fStripTags> = 0;

        return;
    }

    public org.apache.tika.parser.txt.CharsetDetector setDeclaredEncoding(java.lang.String)
    {
        java.lang.String r1;
        org.apache.tika.parser.txt.CharsetDetector r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: void setCanonicalDeclaredEncoding(java.lang.String)>(r1);

        return r0;
    }

    public org.apache.tika.parser.txt.CharsetDetector setText(byte[])
    {
        int $i0;
        byte[] r1;
        org.apache.tika.parser.txt.CharsetDetector r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fRawInput> = r1;

        $i0 = lengthof r1;

        r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength> = $i0;

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: void MungeInput()>();

        return r0;
    }

    public org.apache.tika.parser.txt.CharsetDetector setText(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r3, $r5;
        org.apache.tika.parser.txt.CharsetDetector r0;
        int $i0, $i1, $i2, $i3, i4;
        java.io.InputStream r1, $r2, $r4, $r6;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r1 := @parameter0: java.io.InputStream;

        r0.<org.apache.tika.parser.txt.CharsetDetector: java.io.InputStream fInputStream> = r1;

        $r2 = r0.<org.apache.tika.parser.txt.CharsetDetector: java.io.InputStream fInputStream>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(12000);

        $r3 = newarray (byte)[12000];

        r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fRawInput> = $r3;

        r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength> = 0;

        i4 = 12000;

     label1:
        if i4 <= 0 goto label3;

        $r6 = r0.<org.apache.tika.parser.txt.CharsetDetector: java.io.InputStream fInputStream>;

        $r5 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fRawInput>;

        $i0 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength>;

        $i1 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r5, $i0, i4);

        if $i1 > 0 goto label2;

        goto label3;

     label2:
        $i2 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength>;

        $i3 = $i2 + $i1;

        r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength> = $i3;

        i4 = i4 - $i1;

        goto label1;

     label3:
        $r4 = r0.<org.apache.tika.parser.txt.CharsetDetector: java.io.InputStream fInputStream>;

        virtualinvoke $r4.<java.io.InputStream: void reset()>();

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: void MungeInput()>();

        return r0;
    }

    public org.apache.tika.parser.txt.CharsetMatch detect()
    {
        org.apache.tika.parser.txt.CharsetMatch[] $r1;
        int $i0;
        org.apache.tika.parser.txt.CharsetMatch $r2;
        org.apache.tika.parser.txt.CharsetDetector r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetMatch[] detectAll()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r1[0];

        return $r2;
    }

    public org.apache.tika.parser.txt.CharsetMatch[] detectAll()
    {
        java.lang.Object[] $r2;
        org.apache.tika.parser.txt.CharsetDetector r6;
        java.util.ArrayList $r0, $r1, $r3;
        org.apache.tika.parser.txt.CharsetMatch[] r11, r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.lang.String $r7, $r8, $r9;
        boolean $z0;
        org.apache.tika.parser.txt.CharsetRecognizer r5;
        org.apache.tika.parser.txt.CharsetMatch $r10;
        java.lang.Object $r4;

        r6 := @this: org.apache.tika.parser.txt.CharsetDetector;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i6 = 0;

     label1:
        $r1 = <org.apache.tika.parser.txt.CharsetDetector: java.util.ArrayList fCSRecognizers>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i6 >= $i0 goto label4;

        $r3 = <org.apache.tika.parser.txt.CharsetDetector: java.util.ArrayList fCSRecognizers>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r5 = (org.apache.tika.parser.txt.CharsetRecognizer) $r4;

        $i2 = virtualinvoke r5.<org.apache.tika.parser.txt.CharsetRecognizer: int match(org.apache.tika.parser.txt.CharsetDetector)>(r6);

        i7 = $i2 & 255;

        if i7 <= 0 goto label3;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i7, 100);

        i8 = $i3;

        $r7 = r6.<org.apache.tika.parser.txt.CharsetDetector: java.lang.String fDeclaredEncoding>;

        if $r7 == null goto label2;

        $r8 = r6.<org.apache.tika.parser.txt.CharsetDetector: java.lang.String fDeclaredEncoding>;

        $r9 = virtualinvoke r5.<org.apache.tika.parser.txt.CharsetRecognizer: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label2;

        $i4 = 100 - $i3;

        $i5 = $i4 / 2;

        i8 = $i3 + $i5;

     label2:
        $r10 = new org.apache.tika.parser.txt.CharsetMatch;

        specialinvoke $r10.<org.apache.tika.parser.txt.CharsetMatch: void <init>(org.apache.tika.parser.txt.CharsetDetector,org.apache.tika.parser.txt.CharsetRecognizer,int)>(r6, r5, i8);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        r11 = newarray (org.apache.tika.parser.txt.CharsetMatch)[$i1];

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r11);

        r12 = (org.apache.tika.parser.txt.CharsetMatch[]) $r2;

        return r12;
    }

    public java.io.Reader getReader(java.io.InputStream, java.lang.String)
    {
        org.apache.tika.parser.txt.CharsetMatch $r3;
        java.io.IOException $r5;
        java.lang.String r1;
        java.io.Reader $r4;
        org.apache.tika.parser.txt.CharsetDetector r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r2 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: void setCanonicalDeclaredEncoding(java.lang.String)>(r1);

     label1:
        virtualinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetDetector setText(java.io.InputStream)>(r2);

        $r3 = virtualinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetMatch detect()>();

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = virtualinvoke $r3.<org.apache.tika.parser.txt.CharsetMatch: java.io.Reader getReader()>();

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public java.lang.String getString(byte[], java.lang.String)
    {
        byte[] r2;
        org.apache.tika.parser.txt.CharsetMatch $r3;
        int $i1;
        java.io.IOException $r5;
        java.lang.String r1, $r4;
        org.apache.tika.parser.txt.CharsetDetector r0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r2 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: void setCanonicalDeclaredEncoding(java.lang.String)>(r1);

     label1:
        virtualinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetDetector setText(byte[])>(r2);

        $r3 = virtualinvoke r0.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetMatch detect()>();

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $i1 = (int) -1;

        $r4 = virtualinvoke $r3.<org.apache.tika.parser.txt.CharsetMatch: java.lang.String getString(int)>($i1);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public static java.lang.String[] getAllDetectableCharsets()
    {
        java.lang.String[] $r0;

        $r0 = <org.apache.tika.parser.txt.CharsetDetector: java.lang.String[] fCharsetNames>;

        return $r0;
    }

    public boolean inputFilterEnabled()
    {
        org.apache.tika.parser.txt.CharsetDetector r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        $z0 = r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fStripTags>;

        return $z0;
    }

    public boolean enableInputFilter(boolean)
    {
        org.apache.tika.parser.txt.CharsetDetector r0;
        boolean z0, z1;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        z1 := @parameter0: boolean;

        z0 = r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fStripTags>;

        r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fStripTags> = z1;

        return z0;
    }

    private void setCanonicalDeclaredEncoding(java.lang.String)
    {
        java.nio.charset.Charset $r1;
        java.lang.String r0, $r3;
        org.apache.tika.parser.txt.CharsetDetector r2;
        boolean $z0;

        r2 := @this: org.apache.tika.parser.txt.CharsetDetector;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);

        if $r1 == null goto label3;

        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        r2.<org.apache.tika.parser.txt.CharsetDetector: java.lang.String fDeclaredEncoding> = $r3;

     label3:
        return;
    }

    private void MungeInput()
    {
        byte[] $r2, $r4, $r5, $r6, $r7, $r8;
        byte $b1, $b5, b11;
        boolean $z0, z1, z2, z3;
        short[] $r1, $r3, $r9;
        org.apache.tika.parser.txt.CharsetDetector r0;
        short $s0, $s2, $s4, s22, $s26;
        int $i3, $i6, $i7, $i8, $i9, $i10, $i12, i13, i14, i15, i16, $i17, i18, i19, i20, $i21, i23, $i24, $i25, $i27, $i28, $i29;

        r0 := @this: org.apache.tika.parser.txt.CharsetDetector;

        i13 = 0;

        z1 = 0;

        z3 = 0;

        z2 = 0;

        i14 = 0;

        i15 = 0;

        $z0 = r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fStripTags>;

        if $z0 == 0 goto label07;

        i16 = 0;

     label01:
        $i9 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength>;

        if i16 >= $i9 goto label06;

        $r6 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes>;

        $i10 = lengthof $r6;

        if i13 >= $i10 goto label06;

        $r7 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fRawInput>;

        b11 = $r7[i16];

        $i24 = (int) b11;

        if $i24 != 60 goto label03;

        if z2 == 0 goto label02;

        i15 = i15 + 1;

     label02:
        z1 = 1;

        z3 = 1;

        z2 = 1;

        i14 = i14 + 1;

     label03:
        if z3 != 0 goto label04;

        $r8 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes>;

        $i12 = i13;

        i13 = i13 + 1;

        $r8[$i12] = b11;

     label04:
        $i25 = (int) b11;

        if $i25 != 62 goto label05;

        z1 = 0;

        z3 = 0;

        z2 = 0;

     label05:
        i16 = i16 + 1;

        goto label01;

     label06:
        r0.<org.apache.tika.parser.txt.CharsetDetector: int fInputLen> = i13;

     label07:
        if i14 < 5 goto label08;

        $i6 = i14 / 5;

        if $i6 < i15 goto label08;

        $i7 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fInputLen>;

        if $i7 >= 100 goto label12;

        $i8 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength>;

        if $i8 <= 600 goto label12;

     label08:
        $i17 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fRawLength>;

        i18 = $i17;

        if $i17 <= 12000 goto label09;

        i18 = 12000;

     label09:
        i19 = 0;

     label10:
        if i19 >= i18 goto label11;

        $r5 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes>;

        $r4 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fRawInput>;

        $b5 = $r4[i19];

        $r5[i19] = $b5;

        i19 = i19 + 1;

        goto label10;

     label11:
        r0.<org.apache.tika.parser.txt.CharsetDetector: int fInputLen> = i19;

     label12:
        $r9 = r0.<org.apache.tika.parser.txt.CharsetDetector: short[] fByteStats>;

        staticinvoke <java.util.Arrays: void fill(short[],short)>($r9, 0);

        i20 = 0;

     label13:
        $i21 = r0.<org.apache.tika.parser.txt.CharsetDetector: int fInputLen>;

        if i20 >= $i21 goto label14;

        $r2 = r0.<org.apache.tika.parser.txt.CharsetDetector: byte[] fInputBytes>;

        $b1 = $r2[i20];

        $s26 = (short) $b1;

        s22 = $s26 & 255;

        $r3 = r0.<org.apache.tika.parser.txt.CharsetDetector: short[] fByteStats>;

        $i27 = (int) s22;

        $s2 = $r3[$i27];

        $i28 = (int) $s2;

        $i3 = $i28 + 1;

        $s4 = (short) $i3;

        $i29 = (int) s22;

        $r3[$i29] = $s4;

        i20 = i20 + 1;

        goto label13;

     label14:
        r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fC1Bytes> = 0;

        i23 = 128;

     label15:
        if i23 > 159 goto label17;

        $r1 = r0.<org.apache.tika.parser.txt.CharsetDetector: short[] fByteStats>;

        $s0 = $r1[i23];

        if $s0 == 0 goto label16;

        r0.<org.apache.tika.parser.txt.CharsetDetector: boolean fC1Bytes> = 1;

        goto label17;

     label16:
        i23 = i23 + 1;

        goto label15;

     label17:
        return;
    }

    private static java.util.ArrayList createRecognizers()
    {
        org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_jp $r11;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_ro $r27;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_rtl $r39;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_ltr $r40;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM866_ru $r47;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_es $r17;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_en $r16;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_it $r19;
        org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_gb_18030 $r10;
        boolean $z0, $z1;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_no $r21;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_5_ru $r28;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_de $r42;
        org.apache.tika.parser.txt.CharsetRecog_UTF8 $r1;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_nl $r20;
        org.apache.tika.parser.txt.CharsetRecognizer r53;
        org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_BE $r2;
        org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_BE $r4;
        org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_big5 $r13;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_I_he $r31;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_fr $r18;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_cs $r24;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1251 $r33;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1256 $r34;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_en $r41;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_it $r45;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_sv $r23;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_es $r43;
        java.lang.String[] r48, $r50, $r51;
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP $r7;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_pl $r26;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_9_tr $r36;
        java.util.ArrayList $r0;
        org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_sjis $r6;
        int $i0, $i1, $i2, i3;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_hu $r25;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_7_el $r30;
        java.lang.String $r54, $r55;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_pt $r22;
        org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_LE $r3;
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022CN $r8;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_de $r15;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_fr $r44;
        java.util.Iterator $r49;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_da $r14;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_rtl $r37;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_ltr $r38;
        org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_kr $r12;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_he $r32;
        org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022KR $r9;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_KOI8_R $r35;
        org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_LE $r5;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_nl $r46;
        java.lang.Object $r52;
        org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_6_ar $r29;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new org.apache.tika.parser.txt.CharsetRecog_UTF8;

        specialinvoke $r1.<org.apache.tika.parser.txt.CharsetRecog_UTF8: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = new org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_BE;

        specialinvoke $r2.<org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_BE: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = new org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_LE;

        specialinvoke $r3.<org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_16_LE: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r4 = new org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_BE;

        specialinvoke $r4.<org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_BE: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = new org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_LE;

        specialinvoke $r5.<org.apache.tika.parser.txt.CharsetRecog_Unicode$CharsetRecog_UTF_32_LE: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = new org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_sjis;

        specialinvoke $r6.<org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_sjis: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = new org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP;

        specialinvoke $r7.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022JP: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = new org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022CN;

        specialinvoke $r8.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022CN: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r9 = new org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022KR;

        specialinvoke $r9.<org.apache.tika.parser.txt.CharsetRecog_2022$CharsetRecog_2022KR: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_gb_18030;

        specialinvoke $r10.<org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_gb_18030: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = new org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_jp;

        specialinvoke $r11.<org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_jp: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_kr;

        specialinvoke $r12.<org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_kr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = new org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_big5;

        specialinvoke $r13.<org.apache.tika.parser.txt.CharsetRecog_mbcs$CharsetRecog_big5: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_da;

        specialinvoke $r14.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_da: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_de;

        specialinvoke $r15.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_de: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_en;

        specialinvoke $r16.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_en: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r17 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_es;

        specialinvoke $r17.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_es: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r18 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_fr;

        specialinvoke $r18.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_fr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r19 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_it;

        specialinvoke $r19.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_it: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $r20 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_nl;

        specialinvoke $r20.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_nl: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r21 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_no;

        specialinvoke $r21.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_no: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        $r22 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_pt;

        specialinvoke $r22.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_pt: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        $r23 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_sv;

        specialinvoke $r23.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_1_sv: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        $r24 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_cs;

        specialinvoke $r24.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_cs: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        $r25 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_hu;

        specialinvoke $r25.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_hu: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        $r26 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_pl;

        specialinvoke $r26.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_pl: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        $r27 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_ro;

        specialinvoke $r27.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_2_ro: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        $r28 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_5_ru;

        specialinvoke $r28.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_5_ru: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        $r29 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_6_ar;

        specialinvoke $r29.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_6_ar: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        $r30 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_7_el;

        specialinvoke $r30.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_7_el: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

        $r31 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_I_he;

        specialinvoke $r31.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_I_he: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        $r32 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_he;

        specialinvoke $r32.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_8_he: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        $r33 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1251;

        specialinvoke $r33.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1251: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        $r34 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1256;

        specialinvoke $r34.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_windows_1256: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        $r35 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_KOI8_R;

        specialinvoke $r35.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_KOI8_R: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

        $r36 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_9_tr;

        specialinvoke $r36.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_8859_9_tr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        $r37 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_rtl;

        specialinvoke $r37.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_rtl: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        $r38 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_ltr;

        specialinvoke $r38.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM424_he_ltr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r38);

        $r39 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_rtl;

        specialinvoke $r39.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_rtl: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        $r40 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_ltr;

        specialinvoke $r40.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_ltr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

        $r41 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_en;

        specialinvoke $r41.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_en: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        $r42 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_de;

        specialinvoke $r42.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_de: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

        $r43 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_es;

        specialinvoke $r43.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_es: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);

        $r44 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_fr;

        specialinvoke $r44.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_fr: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r44);

        $r45 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_it;

        specialinvoke $r45.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_it: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

        $r46 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_nl;

        specialinvoke $r46.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_EBCDIC_500_nl: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        $r47 = new org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM866_ru;

        specialinvoke $r47.<org.apache.tika.parser.txt.CharsetRecog_sbcs$CharsetRecog_IBM866_ru: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        r48 = newarray (java.lang.String)[$i0];

        i3 = 0;

        $r49 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r52 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.apache.tika.parser.txt.CharsetRecognizer) $r52;

        $r54 = virtualinvoke r53.<org.apache.tika.parser.txt.CharsetRecognizer: java.lang.String getName()>();

        if i3 == 0 goto label2;

        $i2 = i3 - 1;

        $r55 = r48[$i2];

        $z1 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>($r55);

        if $z1 != 0 goto label3;

     label2:
        $i1 = i3;

        i3 = i3 + 1;

        r48[$i1] = $r54;

     label3:
        goto label1;

     label4:
        $r50 = newarray (java.lang.String)[i3];

        <org.apache.tika.parser.txt.CharsetDetector: java.lang.String[] fCharsetNames> = $r50;

        $r51 = <org.apache.tika.parser.txt.CharsetDetector: java.lang.String[] fCharsetNames>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r48, 0, $r51, 0, i3);

        return $r0;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <org.apache.tika.parser.txt.CharsetDetector: int MAX_CONFIDENCE> = 100;

        <org.apache.tika.parser.txt.CharsetDetector: int kBufSize> = 12000;

        $r0 = staticinvoke <org.apache.tika.parser.txt.CharsetDetector: java.util.ArrayList createRecognizers()>();

        <org.apache.tika.parser.txt.CharsetDetector: java.util.ArrayList fCSRecognizers> = $r0;

        return;
    }
}
