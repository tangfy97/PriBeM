public abstract class org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader extends java.io.Reader
{
    private java.lang.String xmlVersion;
    private boolean xmlStandaloneDeclared;
    private boolean xmlStandalone;
    private java.lang.String xmlDeclaredEncoding;
    private org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser;

    public void <init>()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandaloneDeclared> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlDeclaredEncoding> = null;

        $r1 = new org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser;

        specialinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser> = $r1;

        return;
    }

    protected void resetInput()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlDeclaredEncoding> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlVersion> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandalone> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandaloneDeclared> = 0;

        return;
    }

    protected int parseXMLDeclaration(char[], int, int) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        int i0, i1, $i2, $i3;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser $r2, $r3, $r4, $r6, $r7, $r8, $r10;
        char[] r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: void reset(char[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $i2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int parse()>();

        if $i2 != 1 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String getXMLVersion()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlVersion> = $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $z0 = virtualinvoke $r6.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean isXMLStandalone()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandalone> = $z0;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $z1 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: boolean isXMLStandaloneDeclared()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandaloneDeclared> = $z1;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: java.lang.String getXMLEncoding()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlDeclaredEncoding> = $r9;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser parser>;

        $i3 = virtualinvoke $r10.<org.apache.xmlbeans.impl.piccolo.xml.XMLDeclParser: int getCharsRead()>();

        return $i3;

     label1:
        return 0;
    }

    public java.lang.String getXMLVersion()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlVersion>;

        return $r1;
    }

    public boolean isXMLStandalone()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandalone>;

        return $z0;
    }

    public boolean isXMLStandaloneDeclared()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: boolean xmlStandaloneDeclared>;

        return $z0;
    }

    public java.lang.String getXMLDeclaredEncoding()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: java.lang.String xmlDeclaredEncoding>;

        return $r1;
    }
}
