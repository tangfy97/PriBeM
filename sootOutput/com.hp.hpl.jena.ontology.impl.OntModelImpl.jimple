public class com.hp.hpl.jena.ontology.impl.OntModelImpl extends com.hp.hpl.jena.rdf.model.impl.ModelCom implements com.hp.hpl.jena.ontology.OntModel
{
    public static java.lang.String owlSyntaxCheckerClassName;
    private static org.slf4j.Logger s_log;
    private static java.lang.Class owlSyntaxCheckerClass;
    protected com.hp.hpl.jena.ontology.OntModelSpec m_spec;
    protected java.util.Set m_imported;
    protected boolean m_strictMode;
    protected com.hp.hpl.jena.graph.compose.MultiUnion m_union;
    protected com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener;
    private com.hp.hpl.jena.rdf.model.Model m_deductionsModel;

    public void <init>(com.hp.hpl.jena.ontology.OntModelSpec, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r2, $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntModelSpec r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $r3 = staticinvoke <com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model makeBaseModel(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model)>(r1, r2);

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void <init>(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, $r3, 1);

        return;
    }

    public void <init>(com.hp.hpl.jena.ontology.OntModelSpec)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntModelSpec r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.rdf.model.Model createBaseModel()>();

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void <init>(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, $r2, 1);

        return;
    }

    private void <init>(com.hp.hpl.jena.ontology.OntModelSpec, com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        java.lang.String[] r14;
        com.hp.hpl.jena.reasoner.InfGraph $r10;
        java.util.HashSet $r6;
        com.hp.hpl.jena.enhanced.Personality $r5;
        int $i0, i1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String $r15, $r16;
        com.hp.hpl.jena.graph.Graph $r3, $r4, $r8, $r9, $r11, $r17;
        boolean $z0, z1;
        com.hp.hpl.jena.ontology.OntModelSpec r1;
        java.lang.Exception $r18;
        com.hp.hpl.jena.graph.compose.MultiUnion $r7, $r19;
        com.hp.hpl.jena.rdf.model.Model r2;
        java.lang.String[][] $r12, $r13;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        z1 := @parameter2: boolean;

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = staticinvoke <com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph generateGraph(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.graph.Graph)>(r1, $r3);

        $r5 = <com.hp.hpl.jena.enhanced.BuiltinPersonalities: com.hp.hpl.jena.enhanced.Personality model>;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.enhanced.Personality)>($r4, $r5);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set m_imported> = $r6;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean m_strictMode> = 1;

        $r7 = new com.hp.hpl.jena.graph.compose.MultiUnion;

        specialinvoke $r7.<com.hp.hpl.jena.graph.compose.MultiUnion: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion m_union> = $r7;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener> = null;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model m_deductionsModel> = null;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec> = r1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r8 instanceof com.hp.hpl.jena.graph.compose.MultiUnion;

        if $z0 == 0 goto label1;

        $r17 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r19 = (com.hp.hpl.jena.graph.compose.MultiUnion) $r17;

        goto label2;

     label1:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r10 = (com.hp.hpl.jena.reasoner.InfGraph) $r9;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.graph.Graph getRawGraph()>();

        $r19 = (com.hp.hpl.jena.graph.compose.MultiUnion) $r11;

     label2:
        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion m_union> = $r19;

        if z1 == 0 goto label3;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

     label3:
        if r1 == null goto label8;

        $r12 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntModelSpec: java.lang.String[][] getKnownPrefixes()>();

        if $r12 == null goto label8;

     label4:
        $r13 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntModelSpec: java.lang.String[][] getKnownPrefixes()>();

        i1 = 0;

     label5:
        $i0 = lengthof $r13;

        if i1 >= $i0 goto label6;

        r14 = $r13[i1];

        $r16 = r14[0];

        $r15 = r14[1];

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>($r16, $r15);

        i1 = i1 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

     label8:
        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    public com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntDocumentManager $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        return $r2;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listOntologies()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ONTOLOGY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/Ontology;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listOntProperties()
    {
        com.hp.hpl.jena.reasoner.Reasoner $r5;
        com.hp.hpl.jena.ontology.Profile $r6, $r9;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r3;
        com.hp.hpl.jena.rdf.model.Resource $r1;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r4, $r10, r11;
        com.hp.hpl.jena.ontology.ProfileRegistry $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Property>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r1, class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r3.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r3);

        r11 = $r4;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r7 = staticinvoke <com.hp.hpl.jena.ontology.ProfileRegistry: com.hp.hpl.jena.ontology.ProfileRegistry getInstance()>();

        $r8 = <com.hp.hpl.jena.ontology.ProfileRegistry: java.lang.String OWL_LANG>;

        $r9 = virtualinvoke $r7.<com.hp.hpl.jena.ontology.ProfileRegistry: com.hp.hpl.jena.ontology.Profile getProfile(java.lang.String)>($r8);

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAnnotationProperties()>();

        r11 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r10);

     label1:
        return r11;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listAllOntProperties()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r15;
        com.hp.hpl.jena.rdf.model.Resource $r1;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Property>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r1, class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listObjectProperties()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDatatypeProperties()>();

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r5);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAnnotationProperties()>();

        $r8 = interfaceinvoke $r6.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r7);

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listFunctionalProperties()>();

        $r10 = interfaceinvoke $r8.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r9);

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listTransitiveProperties()>();

        $r12 = interfaceinvoke $r10.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r11);

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSymmetricProperties()>();

        $r14 = interfaceinvoke $r12.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r13);

        $r15 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r15.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r16 = interfaceinvoke $r14.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r15);

        return $r16;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listObjectProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "OBJECT_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/ObjectProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDatatypeProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "DATATYPE_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/DatatypeProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listFunctionalProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "FUNCTIONAL_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/FunctionalProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listTransitiveProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "TRANSITIVE_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/TransitiveProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSymmetricProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "SYMMETRIC_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/SymmetricProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listInverseFunctionalProperties()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "INVERSE_FUNCTIONAL_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/InverseFunctionalProperty;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listIndividuals()
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r28;
        com.hp.hpl.jena.rdf.model.Property $r24, $r25, $r27;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean $z0, $z1, $z2, z3, $z4;
        com.hp.hpl.jena.rdf.model.RDFNode $r7, $r9;
        com.hp.hpl.jena.reasoner.Reasoner $r22;
        com.hp.hpl.jena.reasoner.InfGraph $r21;
        java.util.HashSet $r26;
        com.hp.hpl.jena.graph.Graph $r1, $r20;
        java.util.Iterator $r2;
        com.hp.hpl.jena.ontology.Profile $r10, $r12, $r15;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r18;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource $r6, $r11, $r13, $r14, $r16;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r17, $r19;
        com.hp.hpl.jena.rdf.model.Model $r23;
        java.lang.Object $r4;
        com.hp.hpl.jena.ontology.OntResource r8;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z3 = 0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r21 = (com.hp.hpl.jena.reasoner.InfGraph) $r20;

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $r23 = interfaceinvoke $r22.<com.hp.hpl.jena.reasoner.Reasoner: com.hp.hpl.jena.rdf.model.Model getReasonerCapabilities()>();

        $r25 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property supportsP>;

        $r24 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property individualAsThingP>;

        z3 = interfaceinvoke $r23.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r25, $r24);

     label1:
        if z3 == 0 goto label2;

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        if $r11 == null goto label2;

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r14 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $z2 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label6;

     label2:
        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>()>();

        $r27 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r28 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r27, null);

     label3:
        $z4 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r4 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.hp.hpl.jena.rdf.model.Statement) $r4;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntResource;");

        r8 = (com.hp.hpl.jena.ontology.OntResource) $r7;

        $z1 = interfaceinvoke r8.<com.hp.hpl.jena.ontology.OntResource: boolean isIndividual()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r8.<com.hp.hpl.jena.ontology.OntResource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Individual;");

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label4:
        goto label3;

     label5:
        $r2 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r2);

        return $r3;

     label6:
        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        $r17 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r16, class "Lcom/hp/hpl/jena/ontology/Individual;");

        $r18 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r18.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r19 = interfaceinvoke $r17.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r18);

        return $r19;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listIndividuals(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/Individual;");

        $r3 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r3.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r3);

        return $r4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listClasses()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r5;
        java.util.Iterator $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: java.util.Iterator getClassDescriptionTypes()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)>($r2, class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r4 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r4.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r4);

        return $r5;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r11;
        com.hp.hpl.jena.rdf.model.Property $r4, $r5, $r8;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean $z0;
        com.hp.hpl.jena.reasoner.Reasoner $r1, $r2;
        com.hp.hpl.jena.ontology.Profile $r6, $r9;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper $r12;
        com.hp.hpl.jena.rdf.model.Resource $r7, $r10;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r13, $r14, $r16, $r18;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$2 $r15;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$1 $r17;
        com.hp.hpl.jena.rdf.model.Model $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.Reasoner: com.hp.hpl.jena.rdf.model.Model getReasonerCapabilities()>();

        if $r3 == null goto label1;

        $r5 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property supportsP>;

        $r4 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property directSubClassOf>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r5, $r4);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        if $r7 == null goto label1;

        $r8 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property directSubClassOf>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r8, $r10);

        $r12 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper;

        specialinvoke $r12.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r13 = interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r12);

        return $r13;

     label1:
        $r14 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listClasses()>();

        $r15 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$2;

        specialinvoke $r15.<com.hp.hpl.jena.ontology.impl.OntModelImpl$2: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl)>(r0);

        $r16 = interfaceinvoke $r14.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r15);

        $r17 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$1;

        specialinvoke $r17.<com.hp.hpl.jena.ontology.impl.OntModelImpl$1: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl)>(r0);

        $r18 = interfaceinvoke $r16.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r17);

        return $r18;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listEnumeratedClasses()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ONE_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(com.hp.hpl.jena.rdf.model.Property,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/EnumeratedClass;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listUnionClasses()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "UNION_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(com.hp.hpl.jena.rdf.model.Property,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/UnionClass;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listComplementClasses()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "COMPLEMENT_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(com.hp.hpl.jena.rdf.model.Property,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/ComplementClass;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listIntersectionClasses()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "INTERSECTION_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(com.hp.hpl.jena.rdf.model.Property,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/IntersectionClass;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listNamedClasses()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1, $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$3 $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listClasses()>();

        $r2 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$3;

        specialinvoke $r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl$3: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl)>(r0);

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listRestrictions()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/Restriction;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listAllDifferent()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ALL_DIFFERENT()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ALL_DIFFERENT");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ALL_DIFFERENT()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/AllDifferent;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDataRanges()
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATARANGE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "DATARANGE");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATARANGE()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/ontology/DataRange;");

        $r6 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listAnnotationProperties()
    {
        com.hp.hpl.jena.util.iterator.NullIterator $r10;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r8;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7, $r9;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs $r6;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ANNOTATION_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        if $r4 != null goto label1;

        $r10 = new com.hp.hpl.jena.util.iterator.NullIterator;

        specialinvoke $r10.<com.hp.hpl.jena.util.iterator.NullIterator: void <init>()>();

        return $r10;

     label1:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource)>($r4);

        $r6 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,java.lang.Class)>(r0, class "Lcom/hp/hpl/jena/ontology/AnnotationProperty;");

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r6);

        $r8 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r8.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r9 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r8);

        return $r9;
    }

    public com.hp.hpl.jena.ontology.Ontology getOntology(java.lang.String)
    {
        com.hp.hpl.jena.ontology.Ontology $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/Ontology;");

        $r3 = (com.hp.hpl.jena.ontology.Ontology) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.Individual getIndividual(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        com.hp.hpl.jena.ontology.Individual $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/Individual;");

        $r3 = (com.hp.hpl.jena.ontology.Individual) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.OntProperty getOntProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = (com.hp.hpl.jena.ontology.OntProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.ObjectProperty getObjectProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.ObjectProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/ObjectProperty;");

        $r3 = (com.hp.hpl.jena.ontology.ObjectProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.TransitiveProperty getTransitiveProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.TransitiveProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/TransitiveProperty;");

        $r3 = (com.hp.hpl.jena.ontology.TransitiveProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.SymmetricProperty getSymmetricProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.SymmetricProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/SymmetricProperty;");

        $r3 = (com.hp.hpl.jena.ontology.SymmetricProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.InverseFunctionalProperty getInverseFunctionalProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.InverseFunctionalProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/InverseFunctionalProperty;");

        $r3 = (com.hp.hpl.jena.ontology.InverseFunctionalProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.DatatypeProperty getDatatypeProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.DatatypeProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/DatatypeProperty;");

        $r3 = (com.hp.hpl.jena.ontology.DatatypeProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.AnnotationProperty getAnnotationProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.AnnotationProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/AnnotationProperty;");

        $r3 = (com.hp.hpl.jena.ontology.AnnotationProperty) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.OntClass getOntClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1, $r5, $r8;
        com.hp.hpl.jena.ontology.OntClass r11;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.model.RDFNode $r7, $r10;
        com.hp.hpl.jena.ontology.Profile $r3, $r12;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r6, $r9, $r13;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/OntClass;");

        r11 = (com.hp.hpl.jena.ontology.OntClass) $r2;

        if r11 != null goto label2;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource THING()>();

        if $r4 == null goto label1;

        $r8 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r9 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>(r0);

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        r11 = (com.hp.hpl.jena.ontology.OntClass) $r10;

     label1:
        $r12 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource NOTHING()>();

        if $r13 == null goto label2;

        $r5 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>(r0);

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        r11 = (com.hp.hpl.jena.ontology.OntClass) $r7;

     label2:
        return r11;
    }

    public com.hp.hpl.jena.ontology.ComplementClass getComplementClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.ComplementClass $r3;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/ComplementClass;");

        $r3 = (com.hp.hpl.jena.ontology.ComplementClass) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.EnumeratedClass getEnumeratedClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.EnumeratedClass $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/EnumeratedClass;");

        $r3 = (com.hp.hpl.jena.ontology.EnumeratedClass) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.UnionClass getUnionClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.ontology.UnionClass $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/UnionClass;");

        $r3 = (com.hp.hpl.jena.ontology.UnionClass) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.IntersectionClass getIntersectionClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.IntersectionClass $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/IntersectionClass;");

        $r3 = (com.hp.hpl.jena.ontology.IntersectionClass) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.Restriction getRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.ontology.Restriction $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/Restriction;");

        $r3 = (com.hp.hpl.jena.ontology.Restriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.HasValueRestriction getHasValueRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.HasValueRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/HasValueRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.HasValueRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.SomeValuesFromRestriction getSomeValuesFromRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.SomeValuesFromRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/SomeValuesFromRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.SomeValuesFromRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.AllValuesFromRestriction getAllValuesFromRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.AllValuesFromRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/AllValuesFromRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.AllValuesFromRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.CardinalityRestriction getCardinalityRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.CardinalityRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/CardinalityRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.CardinalityRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.MinCardinalityRestriction getMinCardinalityRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.MinCardinalityRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/MinCardinalityRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.MinCardinalityRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.MaxCardinalityRestriction getMaxCardinalityRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.MaxCardinalityRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/MaxCardinalityRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.MaxCardinalityRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.QualifiedRestriction getQualifiedRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.QualifiedRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/QualifiedRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.QualifiedRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.CardinalityQRestriction getCardinalityQRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.ontology.CardinalityQRestriction $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/CardinalityQRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.CardinalityQRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.MinCardinalityQRestriction getMinCardinalityQRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.MinCardinalityQRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/MinCardinalityQRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.MinCardinalityQRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.MaxCardinalityQRestriction getMaxCardinalityQRestriction(java.lang.String)
    {
        com.hp.hpl.jena.ontology.MaxCardinalityQRestriction $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/ontology/MaxCardinalityQRestriction;");

        $r3 = (com.hp.hpl.jena.ontology.MaxCardinalityQRestriction) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.Ontology createOntology(java.lang.String)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.Ontology $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ONTOLOGY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Ontology;", $r4, r5);

        $r7 = (com.hp.hpl.jena.ontology.Ontology) $r6;

        return $r7;
    }

    public com.hp.hpl.jena.ontology.Individual createIndividual(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.ontology.OntResource $r2;
        com.hp.hpl.jena.ontology.Individual $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Individual;", r1, null);

        $r3 = (com.hp.hpl.jena.ontology.Individual) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.ontology.Individual createIndividual(java.lang.String, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.ontology.OntResource $r3;
        com.hp.hpl.jena.ontology.Individual $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Individual;", r1, r2);

        $r4 = (com.hp.hpl.jena.ontology.Individual) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.OntProperty createOntProperty(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.ontology.OntProperty $r7;
        com.hp.hpl.jena.ontology.Profile $r4;
        com.hp.hpl.jena.rdf.model.Resource $r5;
        com.hp.hpl.jena.rdf.model.Property $r2, $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>(r1);

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource PROPERTY()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, $r5);

        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r7 = (com.hp.hpl.jena.ontology.OntProperty) $r6;

        return $r7;
    }

    public com.hp.hpl.jena.ontology.ObjectProperty createObjectProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.ObjectProperty $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.ontology.ObjectProperty createObjectProperty(java.lang.String, boolean)
    {
        com.hp.hpl.jena.ontology.ObjectProperty r7;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r9, $r12;
        com.hp.hpl.jena.rdf.model.Property $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "OBJECT_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/ObjectProperty;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.ObjectProperty) $r6;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "FUNCTIONAL_PROPERTY");

        $r10 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.ObjectProperty: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.TransitiveProperty $r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String, boolean)
    {
        com.hp.hpl.jena.ontology.TransitiveProperty r7;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r9, $r12;
        com.hp.hpl.jena.rdf.model.Property $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "TRANSITIVE_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/TransitiveProperty;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.TransitiveProperty) $r6;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "FUNCTIONAL_PROPERTY");

        $r10 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.TransitiveProperty: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.SymmetricProperty $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String, boolean)
    {
        com.hp.hpl.jena.ontology.SymmetricProperty r7;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r9, $r12;
        com.hp.hpl.jena.rdf.model.Property $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "SYMMETRIC_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/SymmetricProperty;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.SymmetricProperty) $r6;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "FUNCTIONAL_PROPERTY");

        $r10 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.SymmetricProperty: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.ontology.InverseFunctionalProperty $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String, boolean)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r9, $r12;
        com.hp.hpl.jena.ontology.InverseFunctionalProperty r7;
        com.hp.hpl.jena.rdf.model.Property $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "INVERSE_FUNCTIONAL_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/InverseFunctionalProperty;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.InverseFunctionalProperty) $r6;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "FUNCTIONAL_PROPERTY");

        $r10 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.InverseFunctionalProperty: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.ontology.DatatypeProperty $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String, boolean)
    {
        com.hp.hpl.jena.ontology.DatatypeProperty r7;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, $r9, $r12;
        com.hp.hpl.jena.rdf.model.Property $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "DATATYPE_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/DatatypeProperty;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.DatatypeProperty) $r6;

        if z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "FUNCTIONAL_PROPERTY");

        $r10 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.DatatypeProperty: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.AnnotationProperty createAnnotationProperty(java.lang.String)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.AnnotationProperty $r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ANNOTATION_PROPERTY");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/AnnotationProperty;", $r4, r5);

        $r7 = (com.hp.hpl.jena.ontology.AnnotationProperty) $r6;

        return $r7;
    }

    public com.hp.hpl.jena.ontology.OntClass createClass()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.OntClass $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.OntResource $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, null);

        $r6 = (com.hp.hpl.jena.ontology.OntClass) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.ontology.OntClass createClass(java.lang.String)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntClass $r7;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, r5);

        $r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        return $r7;
    }

    public com.hp.hpl.jena.ontology.ComplementClass createComplementClass(java.lang.String, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r9, $r11;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntClass r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r10, $r15;
        com.hp.hpl.jena.ontology.ComplementClass $r14;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, r12, $r16;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r12 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "COMPLEMENT_OF");

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()>();

        if r12 != null goto label1;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource NOTHING()>();

        goto label2;

     label1:
        $r16 = r12;

     label2:
        interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r11, $r16);

        $r13 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/ComplementClass;");

        $r14 = (com.hp.hpl.jena.ontology.ComplementClass) $r13;

        return $r14;
    }

    public com.hp.hpl.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.rdf.model.RDFList r12, $r15;
        com.hp.hpl.jena.ontology.EnumeratedClass $r14;
        com.hp.hpl.jena.rdf.model.Property $r9, $r11;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntClass r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r10;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r12 := @parameter1: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "ONE_OF");

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        if r12 != null goto label1;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFList createList()>();

        goto label2;

     label1:
        $r15 = r12;

     label2:
        interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r11, $r15);

        $r13 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/EnumeratedClass;");

        $r14 = (com.hp.hpl.jena.ontology.EnumeratedClass) $r13;

        return $r14;
    }

    public com.hp.hpl.jena.ontology.UnionClass createUnionClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.rdf.model.RDFList r12, $r15;
        com.hp.hpl.jena.rdf.model.Property $r9, $r11;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntClass r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r10;
        com.hp.hpl.jena.ontology.UnionClass $r14;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r12 := @parameter1: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "UNION_OF");

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property UNION_OF()>();

        if r12 != null goto label1;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFList createList()>();

        goto label2;

     label1:
        $r15 = r12;

     label2:
        interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r11, $r15);

        $r13 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/UnionClass;");

        $r14 = (com.hp.hpl.jena.ontology.UnionClass) $r13;

        return $r14;
    }

    public com.hp.hpl.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.rdf.model.RDFList r12, $r15;
        com.hp.hpl.jena.rdf.model.Property $r9, $r11;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.OntClass r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r13;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r8, $r10;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.IntersectionClass $r14;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r12 := @parameter1: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "CLASS");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource CLASS()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/OntClass;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.OntClass) $r6;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r9, "INTERSECTION_OF");

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()>();

        if r12 != null goto label1;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFList createList()>();

        goto label2;

     label1:
        $r15 = r12;

     label2:
        interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r11, $r15);

        $r13 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/IntersectionClass;");

        $r14 = (com.hp.hpl.jena.ontology.IntersectionClass) $r13;

        return $r14;
    }

    public com.hp.hpl.jena.ontology.Restriction createRestriction(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.rdf.model.Property r7;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.Restriction r6;
        com.hp.hpl.jena.ontology.OntResource $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, null);

        r6 = (com.hp.hpl.jena.ontology.Restriction) $r5;

        if r7 == null goto label1;

        interfaceinvoke r6.<com.hp.hpl.jena.ontology.Restriction: void setOnProperty(com.hp.hpl.jena.rdf.model.Property)>(r7);

     label1:
        return r6;
    }

    public com.hp.hpl.jena.ontology.Restriction createRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.rdf.model.Property r8;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 == null goto label1;

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: void setOnProperty(com.hp.hpl.jena.rdf.model.Property)>(r8);

     label1:
        return r7;
    }

    public com.hp.hpl.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.Property r8, $r12, $r14, $r16;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.rdf.model.RDFNode r10, $r17;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r11, $r13, $r15;
        java.lang.IllegalArgumentException $r9;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.HasValueRestriction $r18;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r10 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 == null goto label1;

        if r10 != null goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create hasValueRestriction with a null property or value");

        throw $r9;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r12, "HAS_VALUE");

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, r8);

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r16, r10);

        $r17 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/HasValueRestriction;");

        $r18 = (com.hp.hpl.jena.ontology.HasValueRestriction) $r17;

        return $r18;
    }

    public com.hp.hpl.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.SomeValuesFromRestriction $r18;
        com.hp.hpl.jena.rdf.model.Property r8, $r12, $r14, $r16;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r17;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r11, $r13, $r15;
        java.lang.IllegalArgumentException $r9;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, r10;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r10 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 == null goto label1;

        if r10 != null goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create someValuesFromRestriction with a null property or class");

        throw $r9;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SOME_VALUES_FROM()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r12, "SOME_VALUES_FROM");

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, r8);

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SOME_VALUES_FROM()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r16, r10);

        $r17 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/SomeValuesFromRestriction;");

        $r18 = (com.hp.hpl.jena.ontology.SomeValuesFromRestriction) $r17;

        return $r18;
    }

    public com.hp.hpl.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.AllValuesFromRestriction $r18;
        com.hp.hpl.jena.rdf.model.Property r8, $r12, $r14, $r16;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r17;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r11, $r13, $r15;
        java.lang.IllegalArgumentException $r9;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4, r10;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r10 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 == null goto label1;

        if r10 != null goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create allValuesFromRestriction with a null property or class");

        throw $r9;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ALL_VALUES_FROM()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r12, "ALL_VALUES_FROM");

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, r8);

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ALL_VALUES_FROM()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r16, r10);

        $r17 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/AllValuesFromRestriction;");

        $r18 = (com.hp.hpl.jena.ontology.AllValuesFromRestriction) $r17;

        return $r18;
    }

    public com.hp.hpl.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r8, $r10, $r12, $r14;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.ontology.CardinalityRestriction $r17;
        com.hp.hpl.jena.rdf.model.RDFNode $r16;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r9, $r11, $r13;
        java.lang.IllegalArgumentException $r18;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.rdf.model.Literal $r15;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create cardinalityRestriction with a null property");

        throw $r18;

     label1:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property CARDINALITY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r10, "CARDINALITY");

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r12, r8);

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property CARDINALITY()>();

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, $r15);

        $r16 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/CardinalityRestriction;");

        $r17 = (com.hp.hpl.jena.ontology.CardinalityRestriction) $r16;

        return $r17;
    }

    public com.hp.hpl.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r8, $r10, $r12, $r14;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.ontology.MinCardinalityRestriction $r17;
        com.hp.hpl.jena.rdf.model.RDFNode $r16;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r9, $r11, $r13;
        java.lang.IllegalArgumentException $r18;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.rdf.model.Literal $r15;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create minCardinalityRestriction with a null property");

        throw $r18;

     label1:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r10, "MIN_CARDINALITY");

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r12, r8);

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY()>();

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, $r15);

        $r16 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/MinCardinalityRestriction;");

        $r17 = (com.hp.hpl.jena.ontology.MinCardinalityRestriction) $r16;

        return $r17;
    }

    public com.hp.hpl.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int)
    {
        com.hp.hpl.jena.rdf.model.Property r8, $r10, $r12, $r14;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r5;
        com.hp.hpl.jena.ontology.Restriction r7;
        com.hp.hpl.jena.rdf.model.RDFNode $r16;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r9, $r11, $r13;
        java.lang.IllegalArgumentException $r18;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.MaxCardinalityRestriction $r17;
        com.hp.hpl.jena.rdf.model.Literal $r15;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r4, r5);

        r7 = (com.hp.hpl.jena.ontology.Restriction) $r6;

        if r8 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create maxCardinalityRestriction with a null property");

        throw $r18;

     label1:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r10, "MAX_CARDINALITY");

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r12, r8);

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY()>();

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r14, $r15);

        $r16 = interfaceinvoke r7.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/MaxCardinalityRestriction;");

        $r17 = (com.hp.hpl.jena.ontology.MaxCardinalityRestriction) $r16;

        return $r17;
    }

    public com.hp.hpl.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.rdf.model.Property $r4, $r6, $r8, r9, $r17, $r19, $r22;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r13;
        com.hp.hpl.jena.ontology.Restriction r15;
        com.hp.hpl.jena.ontology.OntClass r10;
        com.hp.hpl.jena.ontology.MaxCardinalityQRestriction $r24;
        com.hp.hpl.jena.rdf.model.RDFNode $r23;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r5, $r7, $r11, $r16, $r18, $r21;
        java.lang.IllegalArgumentException $r25, $r26;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r12;
        com.hp.hpl.jena.rdf.model.Literal $r20;
        com.hp.hpl.jena.ontology.OntResource $r14;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r13 := @parameter0: java.lang.String;

        r9 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        r10 := @parameter3: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r4, "ON_PROPERTY");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r6, "MAX_CARDINALITY_Q");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r8, "HAS_CLASS_Q");

        if r9 != null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create MaxCardinalityQRestriction with a null property");

        throw $r26;

     label1:
        if r10 != null goto label2;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create MaxCardinalityQRestriction with a null class");

        throw $r25;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r12, r13);

        r15 = (com.hp.hpl.jena.ontology.Restriction) $r14;

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r17, r9);

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY_Q()>();

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r19, $r20);

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r22, r10);

        $r23 = interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/MaxCardinalityQRestriction;");

        $r24 = (com.hp.hpl.jena.ontology.MaxCardinalityQRestriction) $r23;

        return $r24;
    }

    public com.hp.hpl.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.ontology.MinCardinalityQRestriction $r24;
        com.hp.hpl.jena.rdf.model.Property $r4, $r6, $r8, r9, $r17, $r19, $r22;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r13;
        com.hp.hpl.jena.ontology.Restriction r15;
        com.hp.hpl.jena.ontology.OntClass r10;
        com.hp.hpl.jena.rdf.model.RDFNode $r23;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r5, $r7, $r11, $r16, $r18, $r21;
        java.lang.IllegalArgumentException $r25, $r26;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r12;
        com.hp.hpl.jena.rdf.model.Literal $r20;
        com.hp.hpl.jena.ontology.OntResource $r14;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r13 := @parameter0: java.lang.String;

        r9 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        r10 := @parameter3: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r4, "ON_PROPERTY");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r6, "MIN_CARDINALITY_Q");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r8, "HAS_CLASS_Q");

        if r9 != null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create MinCardinalityQRestriction with a null property");

        throw $r26;

     label1:
        if r10 != null goto label2;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create MinCardinalityQRestriction with a null class");

        throw $r25;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r12, r13);

        r15 = (com.hp.hpl.jena.ontology.Restriction) $r14;

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r17, r9);

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r19, $r20);

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r22, r10);

        $r23 = interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/MinCardinalityQRestriction;");

        $r24 = (com.hp.hpl.jena.ontology.MinCardinalityQRestriction) $r23;

        return $r24;
    }

    public com.hp.hpl.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.ontology.CardinalityQRestriction $r24;
        com.hp.hpl.jena.rdf.model.Property $r4, $r6, $r8, r9, $r17, $r19, $r22;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r13;
        com.hp.hpl.jena.ontology.Restriction r15;
        com.hp.hpl.jena.ontology.OntClass r10;
        com.hp.hpl.jena.rdf.model.RDFNode $r23;
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r5, $r7, $r11, $r16, $r18, $r21;
        java.lang.IllegalArgumentException $r25, $r26;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r12;
        com.hp.hpl.jena.rdf.model.Literal $r20;
        com.hp.hpl.jena.ontology.OntResource $r14;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r13 := @parameter0: java.lang.String;

        r9 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        i0 := @parameter2: int;

        r10 := @parameter3: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "RESTRICTION");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r4, "ON_PROPERTY");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property CARDINALITY_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r6, "CARDINALITY_Q");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r8, "HAS_CLASS_Q");

        if r9 != null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create CardinalityQRestriction with a null property");

        throw $r26;

     label1:
        if r10 != null goto label2;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create CardinalityQRestriction with a null class");

        throw $r25;

     label2:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource RESTRICTION()>();

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/Restriction;", $r12, r13);

        r15 = (com.hp.hpl.jena.ontology.Restriction) $r14;

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r17, r9);

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property CARDINALITY_Q()>();

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r19, $r20);

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r22, r10);

        $r23 = interfaceinvoke r15.<com.hp.hpl.jena.ontology.Restriction: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/CardinalityQRestriction;");

        $r24 = (com.hp.hpl.jena.ontology.CardinalityQRestriction) $r23;

        return $r24;
    }

    public com.hp.hpl.jena.ontology.DataRange createDataRange(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3, $r7, $r9;
        com.hp.hpl.jena.rdf.model.RDFList r11, $r12;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.DataRange r6;
        com.hp.hpl.jena.rdf.model.Property $r8, $r10;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntResource $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r11 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATARANGE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "DATARANGE");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATARANGE()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/DataRange;", $r4, null);

        r6 = (com.hp.hpl.jena.ontology.DataRange) $r5;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r8, "ONE_OF");

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        if r11 != null goto label1;

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFList createList()>();

        goto label2;

     label1:
        $r12 = r11;

     label2:
        interfaceinvoke r6.<com.hp.hpl.jena.ontology.DataRange: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r10, $r12);

        return r6;
    }

    public com.hp.hpl.jena.ontology.AllDifferent createAllDifferent()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.AllDifferent $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.AllDifferent createAllDifferent(com.hp.hpl.jena.rdf.model.RDFList)>(null);

        return $r1;
    }

    public com.hp.hpl.jena.ontology.AllDifferent createAllDifferent(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.AllDifferent r6;
        com.hp.hpl.jena.rdf.model.RDFList r7, $r8;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntResource $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ALL_DIFFERENT()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void checkProfileEntry(java.lang.Object,java.lang.String)>($r2, "ALL_DIFFERENT");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ALL_DIFFERENT()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(class "Lcom/hp/hpl/jena/ontology/AllDifferent;", $r4, null);

        r6 = (com.hp.hpl.jena.ontology.AllDifferent) $r5;

        if r7 != null goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFList createList()>();

        goto label2;

     label1:
        $r8 = r7;

     label2:
        interfaceinvoke r6.<com.hp.hpl.jena.ontology.AllDifferent: void setDistinctMembers(com.hp.hpl.jena.rdf.model.RDFList)>($r8);

        return r6;
    }

    public com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class, com.hp.hpl.jena.rdf.model.Resource, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Class r4;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource r2, $r3;
        com.hp.hpl.jena.ontology.OntResource $r6;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r4 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource getResourceWithType(java.lang.String,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(r4);

        $r6 = (com.hp.hpl.jena.ontology.OntResource) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        com.hp.hpl.jena.ontology.OntResource $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntResource;");

        $r4 = (com.hp.hpl.jena.ontology.OntResource) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.RDFList createList()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.RDFList $r6;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource NIL()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>($r3);

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/RDFList;");

        $r6 = (com.hp.hpl.jena.rdf.model.RDFList) $r5;

        return $r6;
    }

    public com.hp.hpl.jena.ontology.Profile getProfile()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.Profile $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.ontology.Profile getProfile()>();

        return $r2;
    }

    public void loadImports()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntDocumentManager $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntDocumentManager: void loadImports(com.hp.hpl.jena.ontology.OntModel)>(r0);

        return;
    }

    public boolean hasLoadedImport(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.util.Set $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set m_imported>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public void addLoadedImport(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.util.Set $r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set m_imported>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeLoadedImport(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.util.Set $r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set m_imported>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.Set listImportedOntologyURIs()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.util.Set $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set listImportedOntologyURIs(boolean)>(0);

        return $r1;
    }

    public java.util.Set listImportedOntologyURIs(boolean)
    {
        java.util.ArrayList $r1;
        java.util.HashSet $r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r12;
        com.hp.hpl.jena.rdf.model.Property $r9, $r11;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r2;
        java.lang.String $r15;
        boolean $z0, $z1, $z2, z3, $z4;
        com.hp.hpl.jena.ontology.Profile $r6, $r8, $r10;
        com.hp.hpl.jena.ontology.OntDocumentManager $r16;
        com.hp.hpl.jena.rdf.model.Statement $r13;
        com.hp.hpl.jena.rdf.model.Resource $r7, $r14;
        com.hp.hpl.jena.rdf.model.Model $r3, r5, $r17;
        java.lang.Object $r4;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z3 := @parameter0: boolean;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label1:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(0);

        r5 = (com.hp.hpl.jena.rdf.model.Model) $r4;

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()>();

        if $r7 == null goto label4;

        $r8 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        if $r9 == null goto label4;

        $r10 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        $r12 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r11, null);

     label2:
        $z1 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        $r15 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z2 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r15);

        if $z2 != 0 goto label3;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r15);

        $r16 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        $r17 = virtualinvoke $r16.<com.hp.hpl.jena.ontology.OntDocumentManager: com.hp.hpl.jena.rdf.model.Model getModel(java.lang.String)>($r15);

        if z3 == 0 goto label3;

        if $r17 == null goto label3;

        $z4 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r17);

        if $z4 != 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r17);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.ModelMaker getImportModelMaker()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.rdf.model.ModelMaker $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.rdf.model.ModelMaker getImportModelMaker()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.ModelMaker getModelMaker()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.rdf.model.ModelMaker $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.ModelMaker getImportModelMaker()>();

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)>(r1, null, null);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.io.Reader r1;
        java.lang.String r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.io.Reader,java.lang.String)>(r1, r2);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)>(r1, r2);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1, $r3, $r5, r6, r7, $r12, r13, $r14;
        boolean $z0, $z1;
        org.slf4j.Logger $r9;
        com.hp.hpl.jena.ontology.OntDocumentManager$ReadHook $r4, $r15;
        com.hp.hpl.jena.ontology.OntDocumentManager $r2, $r16;
        java.lang.StringBuilder $r8, $r10, $r11;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void addLoadedImport(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.ontology.OntDocumentManager: java.lang.String doAltURLMapping(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.ontology.OntDocumentManager: com.hp.hpl.jena.ontology.OntDocumentManager$ReadHook getReadHook()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.OntDocumentManager$ReadHook: java.lang.String beforeRead(com.hp.hpl.jena.rdf.model.Model,java.lang.String,com.hp.hpl.jena.ontology.OntDocumentManager)>(r0, $r3, $r2);

        r13 = $r5;

        if $r5 != null goto label1;

        $r9 = <com.hp.hpl.jena.ontology.impl.OntModelImpl: org.slf4j.Logger s_log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReadHook returned null, so skipping assuming previous value: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r12);

        r13 = $r3;

        goto label6;

     label1:
        if r6 != null goto label3;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean ignoreFileURI(java.lang.String)>($r5);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        if r7 != null goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String)>($r5);

        goto label6;

     label2:
        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String)>($r5, r7);

        goto label6;

     label3:
        if r6 != null goto label4;

        $r14 = r1;

        goto label5;

     label4:
        $r14 = r6;

     label5:
        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String,java.lang.String)>($r5, $r14, r7);

     label6:
        $r15 = virtualinvoke $r2.<com.hp.hpl.jena.ontology.OntDocumentManager: com.hp.hpl.jena.ontology.OntDocumentManager$ReadHook getReadHook()>();

        interfaceinvoke $r15.<com.hp.hpl.jena.ontology.OntDocumentManager$ReadHook: void afterRead(com.hp.hpl.jena.rdf.model.Model,java.lang.String,com.hp.hpl.jena.ontology.OntDocumentManager)>(r0, r13, $r2);

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        virtualinvoke $r16.<com.hp.hpl.jena.ontology.OntDocumentManager: void addModel(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r1, r0);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.Reader, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.io.Reader r1;
        java.lang.String r2, r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return r0;
    }

    public com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2, r3;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void loadImports()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

        return r0;
    }

    public java.util.List getSubGraphs()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.MultiUnion $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.compose.MultiUnion: java.util.List getSubGraphs()>();

        return $r2;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listImportedModels()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels(boolean)>(1);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels(boolean)
    {
        java.util.List $r1;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r5;
        java.util.Iterator $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$4 $r4;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.List getSubGraphs()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r2);

        $r4 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$4;

        specialinvoke $r4.<com.hp.hpl.jena.ontology.impl.OntModelImpl$4: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,boolean)>(r0, z0);

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r4);

        return $r5;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels(boolean)>(0);

        return $r1;
    }

    public int countSubModels()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        int i0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        i0 = 0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.List getSubGraphs()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        goto label1;

     label2:
        return i0;
    }

    public com.hp.hpl.jena.ontology.OntModel getImportedModel(java.lang.String)
    {
        java.util.Set $r1;
        com.hp.hpl.jena.ontology.OntDocumentManager $r3;
        com.hp.hpl.jena.ontology.OntModelSpec $r5;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2;
        com.hp.hpl.jena.ontology.OntModel $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: java.util.Set listImportedOntologyURIs(boolean)>(1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntDocumentManager: com.hp.hpl.jena.rdf.model.Model getModel(java.lang.String)>(r2);

        if $r4 == null goto label2;

        $z1 = $r4 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z1 == 0 goto label1;

        $r7 = (com.hp.hpl.jena.ontology.OntModel) $r4;

        return $r7;

     label1:
        $r5 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec>;

        $r6 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.ontology.OntModel createOntologyModel(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model)>($r5, $r4);

        return $r6;

     label2:
        return null;
    }

    public com.hp.hpl.jena.graph.Graph getBaseGraph()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.compose.MultiUnion $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.compose.MultiUnion: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model getBaseModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r1);

        return $r2;
    }

    public void addSubModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void addSubModel(com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, 1);

        return;
    }

    public void addSubModel(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.graph.compose.MultiUnion $r1;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Graph $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        virtualinvoke $r1.<com.hp.hpl.jena.graph.compose.MultiUnion: void addGraph(com.hp.hpl.jena.graph.Graph)>($r3);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

     label1:
        return;
    }

    public void removeSubModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void removeSubModel(com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, 1);

        return;
    }

    public void removeSubModel(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.graph.compose.MultiUnion $r3, $r4, $r5;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r2;
        com.hp.hpl.jena.graph.Graph $r1, $r6;
        boolean $z0, z1;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z1 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()>();

        virtualinvoke $r3.<com.hp.hpl.jena.graph.compose.MultiUnion: void removeGraph(com.hp.hpl.jena.graph.Graph)>($r1);

        $z0 = $r1 instanceof com.hp.hpl.jena.graph.compose.MultiUnion;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()>();

        $r5 = (com.hp.hpl.jena.graph.compose.MultiUnion) $r1;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.graph.compose.MultiUnion: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        virtualinvoke $r4.<com.hp.hpl.jena.graph.compose.MultiUnion: void removeGraph(com.hp.hpl.jena.graph.Graph)>($r6);

     label1:
        if z1 == 0 goto label2;

        virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void rebind()>();

     label2:
        return;
    }

    public boolean isInBaseModel(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.graph.Node $r1, $r4, $r5, $r6, $r7, $r8, $r9;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r2;
        com.hp.hpl.jena.graph.Graph $r3;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        $r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r1, $r5, $r4);

        if $z0 != 0 goto label1;

        $r7 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r6 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r7, $r1, $r6);

        if $z1 != 0 goto label1;

        $r9 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r8 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z2 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r9, $r8, $r1);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean isInBaseModel(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r5;
        com.hp.hpl.jena.graph.Node $r2, $r4, $r6;
        com.hp.hpl.jena.rdf.model.Statement r0;
        com.hp.hpl.jena.rdf.model.Resource $r1;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r7;
        com.hp.hpl.jena.graph.Graph $r8;
        boolean $z0;

        r7 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r8 = virtualinvoke r7.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        $z0 = interfaceinvoke $r8.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r4, $r6);

        return $z0;
    }

    public boolean strictMode()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $z0 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean m_strictMode>;

        return $z0;
    }

    public void setStrictMode(boolean)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean m_strictMode> = z0;

        return;
    }

    public void setDynamicImports(boolean)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener $r1, $r2, $r3, $r4, $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener>;

        if $r3 != null goto label2;

        $r4 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener;

        specialinvoke $r4.<com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl)>(r0);

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener> = $r4;

        $r5 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener>;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model register(com.hp.hpl.jena.rdf.model.ModelChangedListener)>($r5);

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener>;

        if $r1 == null goto label2;

        $r2 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener>;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model unregister(com.hp.hpl.jena.rdf.model.ModelChangedListener)>($r2);

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener> = null;

     label2:
        return;
    }

    public boolean getDynamicImports()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.impl.OntModelImpl$ImportsListener m_importsListener>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.hp.hpl.jena.ontology.OntModelSpec getSpecification()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntModelSpec $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.OntModelSpec m_spec>;

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer)
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r3;
        java.io.Writer r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.Writer;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer)>(r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r4;
        java.io.Writer r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer,java.lang.String)>(r2, r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r5;
        java.io.Writer r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r3, r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r5 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)>(r2, r3, r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream)
    {
        java.io.OutputStream r2;
        com.hp.hpl.jena.rdf.model.Model $r1, $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream)>(r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream r2;
        com.hp.hpl.jena.rdf.model.Model $r1, $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)>(r2, r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String, java.lang.String)
    {
        java.io.OutputStream r2;
        com.hp.hpl.jena.rdf.model.Model $r1, $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r3, r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        $r5 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)>(r2, r3, r4);

        return $r5;
    }

    public com.hp.hpl.jena.rdf.model.Model writeAll(java.io.Writer, java.lang.String, java.lang.String)
    {
        java.io.Writer r1;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2, r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model writeAll(java.io.OutputStream, java.lang.String, java.lang.String)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2, r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Model writeAll(java.io.Writer, java.lang.String)
    {
        java.io.Writer r1;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer,java.lang.String)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model writeAll(java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model getRawModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model getBaseModel()>();

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.Reasoner getReasoner()
    {
        com.hp.hpl.jena.reasoner.Reasoner $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public void rebind()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: void rebind()>();

     label1:
        return;
    }

    public void prepare()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: void prepare()>();

     label1:
        return;
    }

    public void reset()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: void reset()>();

     label1:
        return;
    }

    public com.hp.hpl.jena.rdf.model.Model getDeductionsModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r3, $r6;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r2, $r4;
        com.hp.hpl.jena.graph.Graph $r5;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model m_deductionsModel>;

        if $r1 != null goto label2;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.InfGraph getInfGraph()>();

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.graph.Graph getDeductionsGraph()>();

        if $r5 == null goto label1;

        $r6 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createModelForGraph(com.hp.hpl.jena.graph.Graph)>($r5);

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model m_deductionsModel> = $r6;

     label1:
        goto label3;

     label2:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.InfGraph getInfGraph()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.InfGraph: void prepare()>();

     label3:
        $r3 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Model m_deductionsModel>;

        return $r3;
    }

    public com.hp.hpl.jena.reasoner.ValidityReport validate()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;
        com.hp.hpl.jena.reasoner.ValidityReport $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.reasoner.ValidityReport validate()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r8;
        com.hp.hpl.jena.graph.Node $r5, $r7, $r9;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.rdf.model.Resource r4;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r10;
        com.hp.hpl.jena.rdf.model.StmtIterator $r11;
        com.hp.hpl.jena.rdf.model.Property r6;
        com.hp.hpl.jena.rdf.model.Model r2, $r12;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Graph $r1, $r13;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r6 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        r8 := @parameter2: com.hp.hpl.jena.rdf.model.RDFNode;

        r2 := @parameter3: com.hp.hpl.jena.rdf.model.Model;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label3;

        if r2 != null goto label1;

        $r12 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        goto label2;

     label1:
        $r13 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

     label2:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.reasoner.InfGraph getInfGraph()>();

        $r5 = staticinvoke <com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r4);

        $r7 = staticinvoke <com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r6);

        $r9 = staticinvoke <com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Node asNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r8);

        $r10 = interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>($r5, $r7, $r9, $r13);

        $r11 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.IteratorFactory: com.hp.hpl.jena.rdf.model.StmtIterator asStmtIterator(java.util.Iterator,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r10, r0);

        return $r11;

     label3:
        return null;
    }

    public void setDerivationLogging(boolean)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        z1 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.InfGraph: void setDerivationLogging(boolean)>(z1);

     label1:
        return;
    }

    public java.util.Iterator getDerivation(com.hp.hpl.jena.rdf.model.Statement)
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.reasoner.InfGraph $r4;
        com.hp.hpl.jena.rdf.model.Statement r3;
        com.hp.hpl.jena.graph.Triple $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r4 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        $r5 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.graph.Triple asTriple()>();

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.reasoner.InfGraph: java.util.Iterator getDerivation(com.hp.hpl.jena.graph.Triple)>($r5);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    private static void initSyntaxCheckerClass()
    {
        com.hp.hpl.jena.shared.ConfigException $r5;
        java.lang.Class $r0, $r2, $r3;
        java.lang.String $r1;
        java.lang.Exception $r4;

        $r0 = <com.hp.hpl.jena.ontology.impl.OntModelImpl: java.lang.Class owlSyntaxCheckerClass>;

        if $r0 != null goto label4;

     label1:
        $r1 = <com.hp.hpl.jena.ontology.impl.OntModelImpl: java.lang.String owlSyntaxCheckerClassName>;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        <com.hp.hpl.jena.ontology.impl.OntModelImpl: java.lang.Class owlSyntaxCheckerClass> = $r2;

        $r3 = <com.hp.hpl.jena.ontology.impl.OntModelImpl: java.lang.Class owlSyntaxCheckerClass>;

        virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.hp.hpl.jena.shared.ConfigException;

        specialinvoke $r5.<com.hp.hpl.jena.shared.ConfigException: void <init>(java.lang.String,java.lang.Throwable)>("owlsyntax.jar must be on the classpath.", $r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static com.hp.hpl.jena.graph.Graph generateGraph(com.hp.hpl.jena.ontology.OntModelSpec, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.compose.MultiUnion $r0;
        com.hp.hpl.jena.reasoner.Reasoner $r3;
        com.hp.hpl.jena.graph.Graph r1, $r4;
        com.hp.hpl.jena.ontology.OntModelSpec r2;

        r2 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r0 = new com.hp.hpl.jena.graph.compose.MultiUnion;

        specialinvoke $r0.<com.hp.hpl.jena.graph.compose.MultiUnion: void <init>()>();

        virtualinvoke $r0.<com.hp.hpl.jena.graph.compose.MultiUnion: void addGraph(com.hp.hpl.jena.graph.Graph)>(r1);

        virtualinvoke $r0.<com.hp.hpl.jena.graph.compose.MultiUnion: void setBaseGraph(com.hp.hpl.jena.graph.Graph)>(r1);

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.reasoner.Reasoner getReasoner()>();

        if $r3 != null goto label1;

        $r4 = $r0;

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.reasoner.Reasoner: com.hp.hpl.jena.reasoner.InfGraph bind(com.hp.hpl.jena.graph.Graph)>($r0);

     label2:
        return $r4;
    }

    protected com.hp.hpl.jena.graph.compose.MultiUnion getUnionGraph()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.compose.MultiUnion $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.compose.MultiUnion m_union>;

        return $r1;
    }

    protected com.hp.hpl.jena.rdf.model.Resource findByURIAs(java.lang.String, java.lang.Class)
    {
        com.hp.hpl.jena.ontology.ConversionException $r10;
        com.hp.hpl.jena.rdf.model.RDFNode $r7;
        com.hp.hpl.jena.graph.Node $r1, $r4, $r5;
        java.lang.IllegalArgumentException $r9;
        com.hp.hpl.jena.rdf.model.Resource $r8;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r2;
        java.lang.Class r6;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Graph $r3;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot get() ontology value with a null URI");

        throw $r9;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r1, $r5, $r4);

        if $z0 == 0 goto label5;

     label2:
        $r7 = virtualinvoke r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.RDFNode getNodeAs(com.hp.hpl.jena.graph.Node,java.lang.Class)>($r1, r6);

        $r8 = (com.hp.hpl.jena.rdf.model.Resource) $r7;

     label3:
        return $r8;

     label4:
        $r10 := @caughtexception;

     label5:
        return null;

        catch com.hp.hpl.jena.ontology.ConversionException from label2 to label3 with label4;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Node $r3, $r5;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.rdf.model.Resource r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = interfaceinvoke r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $r6 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(null, $r3, $r5);

        return $r6;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource, java.util.Iterator)
    {
        java.util.Iterator r2;
        com.hp.hpl.jena.util.iterator.UniqueFilter $r3;
        com.hp.hpl.jena.rdf.model.Resource r1, $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4, $r7, r8;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: java.util.Iterator;

        r8 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        if r2 == null goto label2;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.hp.hpl.jena.rdf.model.Resource) $r5;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource)>($r6);

        r8 = interfaceinvoke r8.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r7);

        goto label1;

     label2:
        $r3 = new com.hp.hpl.jena.util.iterator.UniqueFilter;

        specialinvoke $r3.<com.hp.hpl.jena.util.iterator.UniqueFilter: void <init>()>();

        $r4 = interfaceinvoke r8.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r3);

        return $r4;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource, java.util.Iterator, java.lang.Class)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3, $r6;
        java.util.Iterator r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Class r5;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: java.util.Iterator;

        r5 := @parameter2: java.lang.Class;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource,java.util.Iterator)>(r1, r2);

        $r4 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs;

        specialinvoke $r4.<com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,java.lang.Class)>(r0, r5);

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r4);

        return $r6;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator, java.lang.Class)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        java.util.Iterator r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Object $r2;
        java.lang.Class r3;
        com.hp.hpl.jena.rdf.model.Resource $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.util.Iterator;

        r3 := @parameter1: java.lang.Class;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.hp.hpl.jena.rdf.model.Resource) $r2;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource,java.util.Iterator,java.lang.Class)>($r4, r1, r3);

        return $r5;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByTypeAs(com.hp.hpl.jena.rdf.model.Resource, java.lang.Class)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r5;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Class r4;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByType(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $r3 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs;

        specialinvoke $r3.<com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,java.lang.Class)>(r0, r4);

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r3);

        return $r5;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.rdf.model.Property r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(null, $r3, null);

        return $r4;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(com.hp.hpl.jena.rdf.model.Property, java.lang.Class)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r5;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Class r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r4 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator findByDefiningProperty(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r3 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs;

        specialinvoke $r3.<com.hp.hpl.jena.ontology.impl.OntModelImpl$SubjectNodeAs: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,java.lang.Class)>(r0, r4);

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r3);

        return $r5;
    }

    protected com.hp.hpl.jena.rdf.model.Resource getResourceWithType(java.lang.String, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2, r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        if r3 == null goto label1;

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r4, r3);

     label1:
        return $r2;
    }

    public com.hp.hpl.jena.ontology.OntResource getOntResource(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;
        com.hp.hpl.jena.ontology.OntResource $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean containsResource(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntResource;");

        $r4 = (com.hp.hpl.jena.ontology.OntResource) $r3;

        return $r4;

     label1:
        return null;
    }

    public com.hp.hpl.jena.ontology.OntResource getOntResource(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r1;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;
        com.hp.hpl.jena.ontology.OntResource $r4;

        r1 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntResource;");

        $r4 = (com.hp.hpl.jena.ontology.OntResource) $r3;

        return $r4;
    }

    protected void checkProfileEntry(java.lang.Object, java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r3;
        com.hp.hpl.jena.ontology.Profile $r4;
        java.lang.Object r0;
        com.hp.hpl.jena.ontology.ProfileException $r1;
        java.lang.String r2;

        r3 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r1 = new com.hp.hpl.jena.ontology.ProfileException;

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        specialinvoke $r1.<com.hp.hpl.jena.ontology.ProfileException: void <init>(java.lang.String,com.hp.hpl.jena.ontology.Profile)>(r2, $r4);

        throw $r1;

     label1:
        return;
    }

    protected void checkListMembersRdfType(com.hp.hpl.jena.rdf.model.RDFList, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.RDFList r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.Boolean $r4, $r6;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$RdfTypeTestFn $r2;
        boolean $z0, $z1;
        com.hp.hpl.jena.ontology.LanguageConsistencyException $r7;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: boolean strictMode()>();

        if $z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.ontology.impl.OntModelImpl$RdfTypeTestFn;

        specialinvoke $r2.<com.hp.hpl.jena.ontology.impl.OntModelImpl$RdfTypeTestFn: void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl,com.hp.hpl.jena.rdf.model.Resource)>(r0, r3);

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r5 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.RDFList: java.lang.Object reduce(com.hp.hpl.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)>($r2, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label1;

        $r7 = new com.hp.hpl.jena.ontology.LanguageConsistencyException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The members of the given list are expected to be of rdf:type ");

        $r10 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.ontology.LanguageConsistencyException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        return;
    }

    private static com.hp.hpl.jena.rdf.model.Model makeBaseModel(com.hp.hpl.jena.ontology.OntModelSpec, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r0, $r2;
        com.hp.hpl.jena.ontology.OntModelSpec r1;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        if r0 != null goto label1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.rdf.model.Model createBaseModel()>();

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    private com.hp.hpl.jena.reasoner.InfGraph getInfGraph()
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.InfGraph;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r3 = (com.hp.hpl.jena.reasoner.InfGraph) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    protected boolean ignoreFileURI(java.lang.String)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        return $z0;
    }

    protected com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.lang.String)>(r1);

        return $r2;
    }

    protected com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    protected com.hp.hpl.jena.rdf.model.Model readDelegate(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    void <init>(com.hp.hpl.jena.ontology.OntModelSpec, com.hp.hpl.jena.rdf.model.Model, boolean, com.hp.hpl.jena.ontology.impl.OntModelImpl$1)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl$1 r3;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.ontology.impl.OntModelImpl r0;
        com.hp.hpl.jena.ontology.OntModelSpec r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntModelSpec;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.hp.hpl.jena.ontology.impl.OntModelImpl$1;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl: void <init>(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model,boolean)>(r1, r2, z0);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.ontology.impl.OntModelImpl: java.lang.String owlSyntaxCheckerClassName> = "com.hp.hpl.jena.ontology.tidy.JenaChecker";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/impl/OntModelImpl;");

        <com.hp.hpl.jena.ontology.impl.OntModelImpl: org.slf4j.Logger s_log> = $r0;

        return;
    }
}
