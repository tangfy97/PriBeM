public class org.apache.xpath.domapi.XPathResultImpl extends java.lang.Object implements org.w3c.dom.xpath.XPathResult, org.w3c.dom.events.EventListener
{
    private org.apache.xpath.objects.XObject m_resultObj;
    private short m_resultType;
    private boolean m_isInvalidIteratorState;
    private org.w3c.dom.Node m_contextNode;
    private org.w3c.dom.traversal.NodeIterator m_iterator;
    private org.w3c.dom.NodeList m_list;

    void <init>(short, org.apache.xpath.objects.XObject, org.w3c.dom.Node)
    {
        java.lang.Integer $r28;
        org.apache.xpath.domapi.XPathResultImpl r0;
        org.w3c.dom.events.EventTarget $r5;
        boolean $z0, $z1;
        org.w3c.dom.traversal.NodeIterator $r27;
        org.apache.xpath.objects.XObject r1, $r3, $r14, $r21, $r26;
        java.lang.Object[] $r8, $r13, $r20;
        javax.xml.transform.TransformerException $r12, $r19;
        short s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13;
        org.w3c.dom.Node r2;
        int $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r6, $r10, $r15, $r16, $r17, $r22, $r23, $r24;
        org.w3c.dom.NodeList $r4;
        org.w3c.dom.xpath.XPathException $r29, $r30, $r31, $r32;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        s0 := @parameter0: short;

        r1 := @parameter1: org.apache.xpath.objects.XObject;

        r2 := @parameter2: org.w3c.dom.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType> = 0;

        r0.<org.apache.xpath.domapi.XPathResultImpl: boolean m_isInvalidIteratorState> = 0;

        r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.traversal.NodeIterator m_iterator> = null;

        r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.NodeList m_list> = null;

        $z0 = staticinvoke <org.apache.xpath.domapi.XPathResultImpl: boolean isValidType(short)>(s0);

        if $z0 != 0 goto label01;

        $r8 = newarray (java.lang.Object)[1];

        $r28 = new java.lang.Integer;

        $i14 = (int) s0;

        specialinvoke $r28.<java.lang.Integer: void <init>(int)>($i14);

        $r8[0] = $r28;

        $r10 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_XPATH_TYPE", $r8);

        $r29 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r29.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r10);

        throw $r29;

     label01:
        if null != r1 goto label02;

        $r6 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_EMPTY_XPATH_RESULT", null);

        $r30 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r30.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(1, $r6);

        throw $r30;

     label02:
        r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj> = r1;

        r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.Node m_contextNode> = r2;

        if s0 != 0 goto label03;

        $s8 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getTypeFromXObject(org.apache.xpath.objects.XObject)>(r1);

        r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType> = $s8;

        goto label04;

     label03:
        r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType> = s0;

     label04:
        $s1 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i15 = (int) $s1;

        if $i15 == 5 goto label05;

        $s7 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i16 = (int) $s7;

        if $i16 != 4 goto label06;

     label05:
        $z1 = r2 instanceof org.w3c.dom.events.EventTarget;

        if $z1 == 0 goto label06;

        $r5 = (org.w3c.dom.events.EventTarget) r2;

        interfaceinvoke $r5.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("MutationEvents", r0, 1);

     label06:
        $s13 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i17 = (int) $s13;

        if $i17 == 5 goto label07;

        $s2 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i18 = (int) $s2;

        if $i18 == 4 goto label07;

        $s3 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i19 = (int) $s3;

        if $i19 == 8 goto label07;

        $s4 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i20 = (int) $s4;

        if $i20 != 9 goto label11;

     label07:
        $r26 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $r27 = virtualinvoke $r26.<org.apache.xpath.objects.XObject: org.w3c.dom.traversal.NodeIterator nodeset()>();

        r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.traversal.NodeIterator m_iterator> = $r27;

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        $r20 = newarray (java.lang.Object)[2];

        $r21 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $s11 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getTypeFromXObject(org.apache.xpath.objects.XObject)>($r21);

        $i21 = (int) $s11;

        $r22 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i21);

        $r20[0] = $r22;

        $s12 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i22 = (int) $s12;

        $r23 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i22);

        $r20[1] = $r23;

        $r24 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCOMPATIBLE_TYPES", $r20);

        $r31 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r31.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r24);

        throw $r31;

     label10:
        goto label15;

     label11:
        $s5 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i23 = (int) $s5;

        if $i23 == 6 goto label12;

        $s6 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i24 = (int) $s6;

        if $i24 != 7 goto label15;

     label12:
        $r3 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.objects.XObject: org.w3c.dom.NodeList nodelist()>();

        r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.NodeList m_list> = $r4;

     label13:
        goto label15;

     label14:
        $r12 := @caughtexception;

        $r13 = newarray (java.lang.Object)[2];

        $r14 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $s9 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getTypeFromXObject(org.apache.xpath.objects.XObject)>($r14);

        $i25 = (int) $s9;

        $r15 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i25);

        $r13[0] = $r15;

        $s10 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i26 = (int) $s10;

        $r16 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i26);

        $r13[1] = $r16;

        $r17 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCOMPATIBLE_TYPES", $r13);

        $r32 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r32.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r17);

        throw $r32;

     label15:
        return;

        catch javax.xml.transform.TransformerException from label07 to label08 with label09;
        catch javax.xml.transform.TransformerException from label12 to label13 with label14;
    }

    public short getResultType()
    {
        short $s0;
        org.apache.xpath.domapi.XPathResultImpl r0;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        return $s0;
    }

    public double getNumberValue() throws org.w3c.dom.xpath.XPathException
    {
        java.lang.Object[] $r2;
        org.w3c.dom.xpath.XPathException $r9, $r10;
        org.apache.xpath.domapi.XPathResultImpl r0;
        java.lang.Exception $r6;
        short $s0, $s1;
        int $i2;
        org.apache.xpath.objects.XObject $r1;
        java.lang.String $r3, $r4, $r8;
        double $d0;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getResultType()>();

        if $s0 == 1 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $s1 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i2 = (int) $s1;

        $r3 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i2);

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NUMBER", $r2);

        $r9 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r9.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r4);

        throw $r9;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $d0 = virtualinvoke $r1.<org.apache.xpath.objects.XObject: double num()>();

        return $d0;

     label2:
        $r6 := @caughtexception;

        $r10 = new org.w3c.dom.xpath.XPathException;

        $r8 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r10.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r8);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public java.lang.String getStringValue() throws org.w3c.dom.xpath.XPathException
    {
        java.lang.Object[] $r3;
        org.w3c.dom.xpath.XPathException $r11, $r12;
        org.apache.xpath.domapi.XPathResultImpl r0;
        java.lang.Exception $r8;
        short $s0;
        int $i1;
        org.apache.xpath.objects.XObject $r1, $r4;
        java.lang.String $r2, $r5, $r6, $r10;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getResultType()>();

        $i1 = (int) $s0;

        if $i1 == 2 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_STRING", $r3);

        $r11 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r11.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r6);

        throw $r11;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r2;

     label2:
        $r8 := @caughtexception;

        $r12 = new org.w3c.dom.xpath.XPathException;

        $r10 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r12.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r10);

        throw $r12;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public boolean getBooleanValue() throws org.w3c.dom.xpath.XPathException
    {
        java.lang.Object[] $r2;
        javax.xml.transform.TransformerException $r6;
        org.w3c.dom.xpath.XPathException $r9, $r10;
        org.apache.xpath.domapi.XPathResultImpl r0;
        short $s0, $s1;
        int $i2, $i3;
        org.apache.xpath.objects.XObject $r1;
        java.lang.String $r3, $r4, $r8;
        boolean $z0;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: short getResultType()>();

        $i2 = (int) $s0;

        if $i2 == 3 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $s1 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i3 = (int) $s1;

        $r3 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i3);

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_BOOLEAN", $r2);

        $r9 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r9.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r4);

        throw $r9;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $z0 = virtualinvoke $r1.<org.apache.xpath.objects.XObject: boolean bool()>();

        return $z0;

     label2:
        $r6 := @caughtexception;

        $r10 = new org.w3c.dom.xpath.XPathException;

        $r8 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r10.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r8);

        throw $r10;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    public org.w3c.dom.Node getSingleNodeValue() throws org.w3c.dom.xpath.XPathException
    {
        java.lang.Object[] $r5;
        javax.xml.transform.TransformerException $r9;
        org.apache.xpath.domapi.XPathResultImpl r0;
        short $s0, $s1, $s2;
        org.w3c.dom.Node $r3;
        org.apache.xpath.domapi.XPathNamespaceImpl $r14;
        int $i3, $i4, $i5;
        java.lang.String $r6, $r7, $r11;
        boolean $z0;
        org.w3c.dom.xpath.XPathException $r12, $r13;
        org.w3c.dom.traversal.NodeIterator $r2;
        org.apache.xpath.objects.XObject $r1;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i3 = (int) $s0;

        if $i3 == 8 goto label1;

        $s1 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i4 = (int) $s1;

        if $i4 == 9 goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $s2 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i5 = (int) $s2;

        $r6 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i5);

        $r5[0] = $r6;

        $r7 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_SINGLENODE", $r5);

        $r12 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r12.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r7);

        throw $r12;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.apache.xpath.objects.XObject m_resultObj>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.objects.XObject: org.w3c.dom.traversal.NodeIterator nodeset()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r13 = new org.w3c.dom.xpath.XPathException;

        $r11 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r13.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r11);

        throw $r13;

     label4:
        if null != $r2 goto label5;

        return null;

     label5:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.traversal.NodeIterator: org.w3c.dom.Node nextNode()>();

        $z0 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: boolean isNamespaceNode(org.w3c.dom.Node)>($r3);

        if $z0 == 0 goto label6;

        $r14 = new org.apache.xpath.domapi.XPathNamespaceImpl;

        specialinvoke $r14.<org.apache.xpath.domapi.XPathNamespaceImpl: void <init>(org.w3c.dom.Node)>($r3);

        return $r14;

     label6:
        return $r3;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public boolean getInvalidIteratorState()
    {
        org.apache.xpath.domapi.XPathResultImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $z0 = r0.<org.apache.xpath.domapi.XPathResultImpl: boolean m_isInvalidIteratorState>;

        return $z0;
    }

    public int getSnapshotLength() throws org.w3c.dom.xpath.XPathException
    {
        org.w3c.dom.NodeList $r1;
        java.lang.Object[] $r2;
        org.w3c.dom.xpath.XPathException $r6;
        org.apache.xpath.domapi.XPathResultImpl r0;
        short $s0, $s2, $s3;
        int $i1, $i4, $i5, $i6;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i4 = (int) $s0;

        if $i4 == 6 goto label1;

        $s2 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i5 = (int) $s2;

        if $i5 == 7 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $s3 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i6 = (int) $s3;

        $r3 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i6);

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_CANT_GET_SNAPSHOT_LENGTH", $r2);

        $r6 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r6.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r4);

        throw $r6;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.NodeList m_list>;

        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        return $i1;
    }

    public org.w3c.dom.Node iterateNext() throws org.w3c.dom.xpath.XPathException, org.w3c.dom.DOMException
    {
        java.lang.Object[] $r6;
        org.apache.xpath.domapi.XPathResultImpl r0;
        short $s0, $s1, $s2;
        org.w3c.dom.Node $r2;
        org.w3c.dom.DOMException $r11;
        org.apache.xpath.domapi.XPathNamespaceImpl $r12;
        int $i3, $i4, $i5;
        java.lang.String $r4, $r7, $r8;
        boolean $z0, $z1;
        org.w3c.dom.xpath.XPathException $r10;
        org.w3c.dom.traversal.NodeIterator $r1;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        $s0 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i3 = (int) $s0;

        if $i3 == 4 goto label1;

        $s1 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i4 = (int) $s1;

        if $i4 == 5 goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $s2 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i5 = (int) $s2;

        $r7 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i5);

        $r6[0] = $r7;

        $r8 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_NON_ITERATOR_TYPE", $r6);

        $r10 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r10.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r8);

        throw $r10;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: boolean getInvalidIteratorState()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_DOC_MUTATED", null);

        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r4);

        throw $r11;

     label2:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.traversal.NodeIterator m_iterator>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.traversal.NodeIterator: org.w3c.dom.Node nextNode()>();

        $z1 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: boolean isNamespaceNode(org.w3c.dom.Node)>($r2);

        if $z1 == 0 goto label3;

        $r12 = new org.apache.xpath.domapi.XPathNamespaceImpl;

        specialinvoke $r12.<org.apache.xpath.domapi.XPathNamespaceImpl: void <init>(org.w3c.dom.Node)>($r2);

        return $r12;

     label3:
        return $r2;
    }

    public org.w3c.dom.Node snapshotItem(int) throws org.w3c.dom.xpath.XPathException
    {
        java.lang.Object[] $r4;
        org.apache.xpath.domapi.XPathResultImpl r0;
        short $s0, $s2, $s3;
        org.w3c.dom.Node $r2;
        org.apache.xpath.domapi.XPathNamespaceImpl $r9;
        int i1, $i4, $i5, $i6;
        java.lang.String $r5, $r6;
        boolean $z0;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.xpath.XPathException $r8;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        i1 := @parameter0: int;

        $s0 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i4 = (int) $s0;

        if $i4 == 6 goto label1;

        $s2 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i5 = (int) $s2;

        if $i5 == 7 goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $s3 = r0.<org.apache.xpath.domapi.XPathResultImpl: short m_resultType>;

        $i6 = (int) $s3;

        $r5 = virtualinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: java.lang.String getTypeString(int)>($i6);

        $r4[0] = $r5;

        $r6 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_NON_SNAPSHOT_TYPE", $r4);

        $r8 = new org.w3c.dom.xpath.XPathException;

        specialinvoke $r8.<org.w3c.dom.xpath.XPathException: void <init>(short,java.lang.String)>(2, $r6);

        throw $r8;

     label1:
        $r1 = r0.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.NodeList m_list>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $z0 = specialinvoke r0.<org.apache.xpath.domapi.XPathResultImpl: boolean isNamespaceNode(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $r9 = new org.apache.xpath.domapi.XPathNamespaceImpl;

        specialinvoke $r9.<org.apache.xpath.domapi.XPathNamespaceImpl: void <init>(org.w3c.dom.Node)>($r2);

        return $r9;

     label2:
        return $r2;
    }

    public static boolean isValidType(short)
    {
        int $i1;
        short s0;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public void handleEvent(org.w3c.dom.events.Event)
    {
        org.w3c.dom.events.EventTarget $r4;
        org.w3c.dom.Node $r3;
        org.w3c.dom.events.Event r0;
        java.lang.String $r1;
        org.apache.xpath.domapi.XPathResultImpl r2;
        boolean $z0;

        r2 := @this: org.apache.xpath.domapi.XPathResultImpl;

        r0 := @parameter0: org.w3c.dom.events.Event;

        $r1 = interfaceinvoke r0.<org.w3c.dom.events.Event: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("MutationEvents");

        if $z0 == 0 goto label1;

        r2.<org.apache.xpath.domapi.XPathResultImpl: boolean m_isInvalidIteratorState> = 1;

        $r3 = r2.<org.apache.xpath.domapi.XPathResultImpl: org.w3c.dom.Node m_contextNode>;

        $r4 = (org.w3c.dom.events.EventTarget) $r3;

        interfaceinvoke $r4.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("MutationEvents", r2, 1);

     label1:
        return;
    }

    public java.lang.String getTypeString(int)
    {
        int i0;
        org.apache.xpath.domapi.XPathResultImpl r0;

        r0 := @this: org.apache.xpath.domapi.XPathResultImpl;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label03;
            case 4: goto label09;
            case 5: goto label06;
            case 6: goto label10;
            case 7: goto label07;
            case 8: goto label02;
            case 9: goto label04;
            default: goto label11;
        };

     label01:
        return "ANY_TYPE";

     label02:
        return "ANY_UNORDERED_NODE_TYPE";

     label03:
        return "BOOLEAN";

     label04:
        return "FIRST_ORDERED_NODE_TYPE";

     label05:
        return "NUMBER_TYPE";

     label06:
        return "ORDERED_NODE_ITERATOR_TYPE";

     label07:
        return "ORDERED_NODE_SNAPSHOT_TYPE";

     label08:
        return "STRING_TYPE";

     label09:
        return "UNORDERED_NODE_ITERATOR_TYPE";

     label10:
        return "UNORDERED_NODE_SNAPSHOT_TYPE";

     label11:
        return "#UNKNOWN";
    }

    private short getTypeFromXObject(org.apache.xpath.objects.XObject)
    {
        int $i0;
        org.apache.xpath.objects.XObject r0;
        org.apache.xpath.domapi.XPathResultImpl r1;

        r1 := @this: org.apache.xpath.domapi.XPathResultImpl;

        r0 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        tableswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label7;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label2;
            case 5: goto label5;
            default: goto label7;
        };

     label1:
        return 3;

     label2:
        return 4;

     label3:
        return 1;

     label4:
        return 2;

     label5:
        return 4;

     label6:
        return 0;

     label7:
        return 0;
    }

    private boolean isNamespaceNode(org.w3c.dom.Node)
    {
        org.apache.xpath.domapi.XPathResultImpl r3;
        short $s0;
        org.w3c.dom.Node r0;
        int $i1;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.xpath.domapi.XPathResultImpl;

        r0 := @parameter0: org.w3c.dom.Node;

        if null == r0 goto label2;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        if $i1 != 2 goto label2;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
