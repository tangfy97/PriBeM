class org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner extends java.lang.Object implements java.lang.Runnable
{
    final java.util.concurrent.locks.Lock runnerLock;
    final org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0;

    void <init>(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)
    {
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner r0;

        r0 := @this: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner;

        r1 := @parameter0: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer;

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: java.util.concurrent.locks.Lock runnerLock> = $r2;

        return;
    }

    public void run()
    {
        org.apache.http.client.methods.HttpPost $r37;
        org.apache.http.StatusLine $r52, $r67;
        org.apache.solr.client.solrj.impl.HttpSolrServer $r18, $r29, $r34, $r40, $r49;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1 $r25;
        org.apache.solr.common.params.ModifiableSolrParams $r22, $r23, $r26;
        org.apache.http.entity.EntityTemplate $r24;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer $r3, $r5, $r9, $r11, $r13, $r17, $r28, $r33, $r39, $r48, $r72, $r78, $r80, $r82, $r86, $r88, $r92, $r93, $r95, $r97, $r101, $r103, $r114, $r116;
        java.util.concurrent.BlockingQueue $r4, $r10, $r15, $r87, $r102;
        java.lang.Exception $r71, $r106, $r110, $r111;
        java.lang.StringBuilder $r38, $r42, $r43, $r45, $r53, $r55, $r60, $r61, $r62, $r66, $r69;
        org.apache.solr.common.SolrInputDocument $r58;
        java.lang.Throwable $r76, $r77, $r90, $r91, $r105, $r107;
        org.apache.http.client.HttpClient $r50;
        org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner r0;
        java.lang.String $r20, $r21, $r31, $r36, $r41, $r44, $r46, $r47, $r63, $r68, $r73;
        java.util.concurrent.locks.Lock $r1, $r8, $r85, $r100;
        org.apache.solr.client.solrj.request.UpdateRequest r113;
        org.apache.http.HttpResponse $r51, r112;
        org.apache.solr.client.solrj.ResponseParser $r30, $r35;
        java.net.URI $r70;
        boolean $z0, $z1;
        org.apache.http.HttpEntity $r64, $r74, $r108;
        java.util.List $r56;
        java.util.Queue $r6, $r79, $r81, $r83, $r94, $r96, $r98, $r115, $r117;
        java.lang.String[] $r27, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.concurrent.ExecutorService $r12, $r89, $r104;
        org.slf4j.Logger $r2, $r7, $r54, $r84, $r99;
        org.apache.solr.client.solrj.request.RequestWriter $r19;
        java.util.concurrent.TimeUnit $r14;
        java.lang.Object $r16, $r57, $r59;
        java.io.InputStream $r65, $r75, $r109;

        r0 := @this: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner;

        $r1 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: java.util.concurrent.locks.Lock runnerLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        $r2 = <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("starting runner: {}", r0);

        r112 = null;

     label01:
        $r3 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r4 = $r3.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $z0 = interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

        if $z0 != 0 goto label16;

     label02:
        $r13 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r15 = $r13.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r16 = interfaceinvoke $r15.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(250L, $r14);

        r113 = (org.apache.solr.client.solrj.request.UpdateRequest) $r16;

        if r113 != null goto label06;

     label03:
        if r112 == null goto label04;

        $r74 = interfaceinvoke r112.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r75 = interfaceinvoke $r74.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        virtualinvoke $r75.<java.io.InputStream: void close()>();

     label04:
        goto label16;

     label05:
        $r111 := @caughtexception;

        goto label16;

     label06:
        $r17 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r18 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r17);

        $r19 = $r18.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.request.RequestWriter requestWriter>;

        $r20 = virtualinvoke $r19.<org.apache.solr.client.solrj.request.RequestWriter: java.lang.String getUpdateContentType()>();

        $r21 = "application/xml; charset=UTF-8";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        $r22 = new org.apache.solr.common.params.ModifiableSolrParams;

        $r23 = virtualinvoke r113.<org.apache.solr.client.solrj.request.UpdateRequest: org.apache.solr.common.params.ModifiableSolrParams getParams()>();

        specialinvoke $r22.<org.apache.solr.common.params.ModifiableSolrParams: void <init>(org.apache.solr.common.params.SolrParams)>($r23);

        $r24 = new org.apache.http.entity.EntityTemplate;

        $r25 = new org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1;

        specialinvoke $r25.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner$1: void <init>(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner,boolean,org.apache.solr.client.solrj.request.UpdateRequest,org.apache.solr.common.params.ModifiableSolrParams)>(r0, $z1, r113, $r22);

        specialinvoke $r24.<org.apache.http.entity.EntityTemplate: void <init>(org.apache.http.entity.ContentProducer)>($r25);

        $r26 = new org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke $r26.<org.apache.solr.common.params.ModifiableSolrParams: void <init>(org.apache.solr.common.params.SolrParams)>($r22);

        $r27 = newarray (java.lang.String)[1];

        $r28 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r29 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r28);

        $r30 = $r29.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser>;

        $r31 = virtualinvoke $r30.<org.apache.solr.client.solrj.ResponseParser: java.lang.String getWriterType()>();

        $r27[0] = $r31;

        virtualinvoke $r26.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("wt", $r27);

        $r32 = newarray (java.lang.String)[1];

        $r33 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r34 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r33);

        $r35 = $r34.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.ResponseParser parser>;

        $r36 = virtualinvoke $r35.<org.apache.solr.client.solrj.ResponseParser: java.lang.String getVersion()>();

        $r32[0] = $r36;

        virtualinvoke $r26.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("version", $r32);

        $r37 = new org.apache.http.client.methods.HttpPost;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r40 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r39);

        $r41 = virtualinvoke $r40.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/update");

        $r44 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.lang.String toQueryString(org.apache.solr.common.params.SolrParams,boolean)>($r26, 0);

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r46);

        virtualinvoke $r37.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r24);

        $r47 = <org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String AGENT>;

        virtualinvoke $r37.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("User-Agent", $r47);

        virtualinvoke $r37.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", $r20);

        $r48 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r49 = staticinvoke <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.apache.solr.client.solrj.impl.HttpSolrServer access$000(org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer)>($r48);

        $r50 = virtualinvoke $r49.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.http.client.HttpClient getHttpClient()>();

        $r51 = interfaceinvoke $r50.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r37);

        r112 = $r51;

        $r52 = interfaceinvoke $r51.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r52.<org.apache.http.StatusLine: int getStatusCode()>();

        $r54 = <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.slf4j.Logger log>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status for: ");

        $r56 = virtualinvoke r113.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDocuments()>();

        $r57 = interfaceinvoke $r56.<java.util.List: java.lang.Object get(int)>(0);

        $r58 = (org.apache.solr.common.SolrInputDocument) $r57;

        $r59 = virtualinvoke $r58.<org.apache.solr.common.SolrInputDocument: java.lang.Object getFieldValue(java.lang.String)>("id");

        $r60 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>($r63);

        if $i1 == 200 goto label07;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = interfaceinvoke $r51.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r68 = interfaceinvoke $r67.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request: ");

        $r70 = virtualinvoke $r37.<org.apache.http.client.methods.HttpPost: java.net.URI getURI()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r72 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r71 = new java.lang.Exception;

        $r73 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<java.lang.Exception: void <init>(java.lang.String)>($r73);

        virtualinvoke $r72.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: void handleError(java.lang.Throwable)>($r71);

     label07:
        if $r51 == null goto label08;

        $r64 = interfaceinvoke $r51.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r65 = interfaceinvoke $r64.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        virtualinvoke $r65.<java.io.InputStream: void close()>();

     label08:
        goto label15;

     label09:
        $r110 := @caughtexception;

        goto label15;

     label10:
        $r107 := @caughtexception;

     label11:
        if r112 == null goto label12;

        $r108 = interfaceinvoke r112.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r109 = interfaceinvoke $r108.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        virtualinvoke $r109.<java.io.InputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r106 := @caughtexception;

     label14:
        throw $r107;

     label15:
        goto label01;

     label16:
        $r114 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r115 = $r114.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        entermonitor $r115;

     label17:
        $r116 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r117 = $r116.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        $i6 = interfaceinvoke $r117.<java.util.Queue: int size()>();

        if $i6 != 1 goto label18;

        $r9 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r10 = $r9.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $i0 = interfaceinvoke $r10.<java.util.concurrent.BlockingQueue: int remainingCapacity()>();

        if $i0 != 0 goto label18;

        $r11 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r12 = $r11.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.ExecutorService scheduler>;

        interfaceinvoke $r12.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r0);

        goto label19;

     label18:
        $r5 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r6 = $r5.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        interfaceinvoke $r6.<java.util.Queue: boolean remove(java.lang.Object)>(r0);

     label19:
        exitmonitor $r115;

     label20:
        goto label23;

     label21:
        $r105 := @caughtexception;

        exitmonitor $r115;

     label22:
        throw $r105;

     label23:
        $r7 = <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("finished: {}", r0);

        $r8 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: java.util.concurrent.locks.Lock runnerLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label42;

     label24:
        $r91 := @caughtexception;

        $r92 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        virtualinvoke $r92.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: void handleError(java.lang.Throwable)>($r91);

     label25:
        $r93 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r94 = $r93.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        entermonitor $r94;

     label26:
        $r95 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r96 = $r95.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        $i4 = interfaceinvoke $r96.<java.util.Queue: int size()>();

        if $i4 != 1 goto label27;

        $r101 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r102 = $r101.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $i5 = interfaceinvoke $r102.<java.util.concurrent.BlockingQueue: int remainingCapacity()>();

        if $i5 != 0 goto label27;

        $r103 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r104 = $r103.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.ExecutorService scheduler>;

        interfaceinvoke $r104.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r0);

        goto label28;

     label27:
        $r97 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r98 = $r97.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        interfaceinvoke $r98.<java.util.Queue: boolean remove(java.lang.Object)>(r0);

     label28:
        exitmonitor $r94;

     label29:
        goto label32;

     label30:
        $r90 := @caughtexception;

        exitmonitor $r94;

     label31:
        throw $r90;

     label32:
        $r99 = <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.slf4j.Logger log>;

        interfaceinvoke $r99.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("finished: {}", r0);

        $r100 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: java.util.concurrent.locks.Lock runnerLock>;

        interfaceinvoke $r100.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label42;

     label33:
        $r77 := @caughtexception;

     label34:
        $r78 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r79 = $r78.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        entermonitor $r79;

     label35:
        $r80 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r81 = $r80.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        $i2 = interfaceinvoke $r81.<java.util.Queue: int size()>();

        if $i2 != 1 goto label36;

        $r86 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r87 = $r86.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.BlockingQueue queue>;

        $i3 = interfaceinvoke $r87.<java.util.concurrent.BlockingQueue: int remainingCapacity()>();

        if $i3 != 0 goto label36;

        $r88 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r89 = $r88.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.concurrent.ExecutorService scheduler>;

        interfaceinvoke $r89.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r0);

        goto label37;

     label36:
        $r82 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer this$0>;

        $r83 = $r82.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: java.util.Queue runners>;

        interfaceinvoke $r83.<java.util.Queue: boolean remove(java.lang.Object)>(r0);

     label37:
        exitmonitor $r79;

     label38:
        goto label41;

     label39:
        $r76 := @caughtexception;

        exitmonitor $r79;

     label40:
        throw $r76;

     label41:
        $r84 = <org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer: org.slf4j.Logger log>;

        interfaceinvoke $r84.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("finished: {}", r0);

        $r85 = r0.<org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer$Runner: java.util.concurrent.locks.Lock runnerLock>;

        interfaceinvoke $r85.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r77;

     label42:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label17 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label01 to label16 with label24;
        catch java.lang.Throwable from label26 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label35 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.Throwable from label33 to label34 with label33;
    }
}
