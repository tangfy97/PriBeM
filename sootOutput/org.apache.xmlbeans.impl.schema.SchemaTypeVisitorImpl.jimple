public class org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl extends java.lang.Object implements org.apache.xmlbeans.impl.values.TypeStoreVisitor
{
    static final boolean PROBE_VALIDITY;
    static final boolean CHECK_VALIDITY;
    private org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack;
    private org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback;
    int _stackSize;
    int _rollbackSize;
    private boolean _isValid;
    private org.apache.xmlbeans.SchemaParticle _matchedParticle;
    private org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top;
    private int _rollbackIndex;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeVisitorImpl;

    public void <init>(org.apache.xmlbeans.SchemaParticle)
    {
        org.apache.xmlbeans.SchemaParticle r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void init(org.apache.xmlbeans.SchemaParticle)>(r1);

        return;
    }

    public void <init>()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(org.apache.xmlbeans.SchemaParticle)
    {
        org.apache.xmlbeans.SchemaParticle r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] $r1, $r2, $r4, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r3 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        if $r1 != null goto label1;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] expand(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[])>(null);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack> = $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        if $r2 != null goto label2;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] expand(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[])>(null);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback> = $r4;

     label2:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize> = 0;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize> = 0;

        if r3 == null goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void push(org.apache.xmlbeans.SchemaParticle)>(r3);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex> = 1;

     label3:
        return;
    }

    public org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] expand(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[])
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] r0, $r2;
        int $i0, i1, $i2, $i3, $i4, i5;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r3;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[];

        if r0 != null goto label1;

        $i3 = 4;

        goto label2;

     label1:
        $i0 = lengthof r0;

        $i3 = $i0 * 2;

     label2:
        i1 = $i3;

        $r2 = newarray (org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState)[$i3];

        if r0 == null goto label3;

        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r2, 0, $i2);

     label3:
        if r0 != null goto label4;

        $i4 = 0;

        goto label5;

     label4:
        $i4 = lengthof r0;

     label5:
        i5 = $i4;

     label6:
        if i5 >= i1 goto label7;

        $r1 = new org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState;

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$1)>(null);

        $r2[i5] = $r1;

        i5 = i5 + 1;

        goto label6;

     label7:
        return $r2;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState topRef()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] $r1;
        int $i0, $i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    void saveCopy(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] $r1, $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState r3, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r3 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        if $i1 != $i0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] expand(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[])>($r5);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback> = $r6;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        $r4 = $r2[$i2];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: void copy(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState)>(r3);

        $i3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize> = $i4;

        return;
    }

    void addParticle(org.apache.xmlbeans.SchemaParticle)
    {
        org.apache.xmlbeans.SchemaParticle r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] $r1, $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r3 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        if $i1 != $i0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] expand(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[])>($r5);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack> = $r6;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $r4 = $r2[$i2];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: void init(org.apache.xmlbeans.SchemaParticle)>(r3);

        $i3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize> = $i4;

        return;
    }

    boolean prepare()
    {
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        if $i0 != 0 goto label1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = null;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState topRef()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void saveCopy(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState)>($r2);

        $i1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $i2 = $i1 - 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex> = $i2;

        return 1;
    }

    void push(org.apache.xmlbeans.SchemaParticle)
    {
        org.apache.xmlbeans.SchemaParticle r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void addParticle(org.apache.xmlbeans.SchemaParticle)>(r1);

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState topRef()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = $r2;

        return;
    }

    boolean pop()
    {
        int $i0, $i1, $i2, $i3;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $i1 = $i0 - 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize> = $i1;

        $i3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        if $i3 > $i2 goto label1;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean prepare()>();

        return $z0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState topRef()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = $r1;

        return 1;
    }

    void commit()
    {
        int $i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = null;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex> = $i0;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize> = 0;

        return;
    }

    void rollback()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] $r1, $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState r2, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        $i3 = $i2 - 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize> = $i3;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $i4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        r2 = $r1[$i4];

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _stack>;

        $i6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        $i5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        $r4 = $r3[$i5];

        $r5[$i6] = $r4;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState[] _rollback>;

        $i7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackSize>;

        $r6[$i7] = r2;

        $i8 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        $i9 = $i8 + 1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex> = $i9;

        goto label1;

     label2:
        $i1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _rollbackIndex>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize> = $i1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top> = null;

        return;
    }

    boolean notValid()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean _isValid> = 0;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle _matchedParticle> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void rollback()>();

        return 0;
    }

    boolean ok(org.apache.xmlbeans.SchemaParticle, boolean)
    {
        org.apache.xmlbeans.SchemaParticle r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaParticle;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle _matchedParticle> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void commit()>();

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void rollback()>();

     label2:
        return 1;
    }

    public boolean visit(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        javax.xml.namespace.QName r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean visit(javax.xml.namespace.QName,boolean)>(r1, 0);

        return $z0;
    }

    public boolean visit(javax.xml.namespace.QName, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState $r1, $r3, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r49, $r52, $r53, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63;
        boolean[] $r44, $r48, $r54;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        org.apache.xmlbeans.SchemaParticle $r2, $r5, $r8, $r12, $r15, $r23, $r24, $r33, $r35, $r36, $r50, $r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, $i43, $i45;
        javax.xml.namespace.QName r4;
        java.lang.AssertionError $r64;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r4 := @parameter0: javax.xml.namespace.QName;

        z2 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean prepare()>();

        if $z0 != 0 goto label01;

        $z22 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z22;

     label01:
        $i43 = (int) -2;

        i32 = $i43;

        $i45 = (int) -2;

        i33 = $i45;

     label02:
        $r59 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i34 = $r59.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r60 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i35 = $r60.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i34 <= $i35 goto label03;

        $r56 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i29 = $r56.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

        if i32 != $i29 goto label03;

        $i30 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

        if i33 != $i30 goto label03;

        $r58 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r57 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i31 = $r57.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMax>;

        $r58.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i31;

     label03:
        $r61 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        i32 = $r61.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

        i33 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: int _stackSize>;

     label04:
        $r62 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i36 = $r62.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r63 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i37 = $r63.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMax>;

        if $i36 < $i37 goto label05;

        $z21 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean pop()>();

        if $z21 != 0 goto label04;

        goto label29;

     label05:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r2 = $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        tableswitch($i0)
        {
            case 1: goto label21;
            case 2: goto label17;
            case 3: goto label11;
            case 4: goto label09;
            case 5: goto label07;
            default: goto label06;
        };

     label06:
        $z20 = <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean $assertionsDisabled>;

        if $z20 != 0 goto label07;

        $r64 = new java.lang.AssertionError;

        specialinvoke $r64.<java.lang.AssertionError: void <init>()>();

        throw $r64;

     label07:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r5 = $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $z1 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaParticle: boolean canStartWithElement(javax.xml.namespace.QName)>(r4);

        if $z1 != 0 goto label08;

        $r9 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i4 = $r9.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r10 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i3 = $r10.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i4 >= $i3 goto label28;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z6;

     label08:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i1 = $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $i2 = $i1 + 1;

        $r6.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i2;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r8 = $r7.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean ok(org.apache.xmlbeans.SchemaParticle,boolean)>($r8, z2);

        return $z3;

     label09:
        $r11 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r12 = $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $z7 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaParticle: boolean canStartWithElement(javax.xml.namespace.QName)>(r4);

        if $z7 != 0 goto label10;

        $r16 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i8 = $r16.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r17 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i7 = $r17.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i8 >= $i7 goto label28;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z9;

     label10:
        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i5 = $r13.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $i6 = $i5 + 1;

        $r13.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i6;

        $r14 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r15 = $r14.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean ok(org.apache.xmlbeans.SchemaParticle,boolean)>($r15, z2);

        return $z8;

     label11:
        $r18 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        i38 = $r18.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

     label12:
        $r19 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i9 = $r19.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _childCount>;

        if i38 >= $i9 goto label16;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r23 = $r22.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.SchemaParticle getParticleChild(int)>(i38);

        $z10 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaParticle: boolean canStartWithElement(javax.xml.namespace.QName)>(r4);

        if $z10 == 0 goto label13;

        $r28 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i15 = i38 + 1;

        $r28.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount> = $i15;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void push(org.apache.xmlbeans.SchemaParticle)>($r24);

        goto label02;

     label13:
        $z11 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaParticle: boolean isSkippable()>();

        if $z11 != 0 goto label15;

        $r25 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i12 = $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

        if $i12 != 0 goto label14;

        $r26 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i14 = $r26.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r27 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i13 = $r27.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i14 >= $i13 goto label28;

     label14:
        $z12 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z12;

     label15:
        i38 = i38 + 1;

        goto label12;

     label16:
        $r20 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i10 = $r20.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $i11 = $i10 + 1;

        $r20.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i11;

        $r21 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r21.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount> = 0;

        goto label02;

     label17:
        i39 = 0;

     label18:
        $r29 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i16 = $r29.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _childCount>;

        if i39 >= $i16 goto label20;

        $r34 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r35 = $r34.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $r36 = interfaceinvoke $r35.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.SchemaParticle getParticleChild(int)>(i39);

        $z15 = interfaceinvoke $r36.<org.apache.xmlbeans.SchemaParticle: boolean canStartWithElement(javax.xml.namespace.QName)>(r4);

        if $z15 == 0 goto label19;

        $r37 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i19 = $r37.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $i20 = $i19 + 1;

        $r37.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i20;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void push(org.apache.xmlbeans.SchemaParticle)>($r36);

        goto label02;

     label19:
        i39 = i39 + 1;

        goto label18;

     label20:
        $r30 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i18 = $r30.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r31 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i17 = $r31.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i18 >= $i17 goto label28;

        $r32 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r33 = $r32.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $z13 = interfaceinvoke $r33.<org.apache.xmlbeans.SchemaParticle: boolean isSkippable()>();

        if $z13 != 0 goto label28;

        $z14 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z14;

     label21:
        $r38 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        i40 = $r38.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

        i41 = 0;

     label22:
        $r39 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i21 = $r39.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _childCount>;

        if i41 >= $i21 goto label26;

        $r47 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r48 = $r47.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: boolean[] _seen>;

        $z17 = $r48[i41];

        if $z17 == 0 goto label23;

        goto label25;

     label23:
        $r49 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r50 = $r49.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: org.apache.xmlbeans.SchemaParticle _curPart>;

        $r51 = interfaceinvoke $r50.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.SchemaParticle getParticleChild(int)>(i41);

        $z18 = interfaceinvoke $r51.<org.apache.xmlbeans.SchemaParticle: boolean canStartWithElement(javax.xml.namespace.QName)>(r4);

        if $z18 == 0 goto label24;

        $r52 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i27 = $r52.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount>;

        $i28 = $i27 + 1;

        $r52.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount> = $i28;

        $r53 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r54 = $r53.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: boolean[] _seen>;

        $r54[i41] = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void push(org.apache.xmlbeans.SchemaParticle)>($r51);

        goto label02;

     label24:
        $z19 = interfaceinvoke $r51.<org.apache.xmlbeans.SchemaParticle: boolean isSkippable()>();

        if $z19 == 0 goto label25;

        i40 = i40 + 1;

     label25:
        i41 = i41 + 1;

        goto label22;

     label26:
        $r40 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i22 = $r40.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _childCount>;

        if i40 >= $i22 goto label27;

        $r45 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i26 = $r45.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $r46 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i25 = $r46.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curMin>;

        if $i26 >= $i25 goto label28;

        $z16 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z16;

     label27:
        $r41 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $i23 = $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount>;

        $i24 = $i23 + 1;

        $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _curCount> = $i24;

        $r42 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r42.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: int _processedChildCount> = 0;

        $r43 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState _top>;

        $r44 = $r43.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl$VisitorState: boolean[] _seen>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($r44, 0);

        goto label02;

     label28:
        $z23 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean pop()>();

        if $z23 != 0 goto label02;

        goto label29;

     label29:
        if r4 != null goto label30;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean ok(org.apache.xmlbeans.SchemaParticle,boolean)>(null, z2);

        return $z5;

     label30:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean notValid()>();

        return $z4;
    }

    public boolean testValid(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        javax.xml.namespace.QName r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean visit(javax.xml.namespace.QName,boolean)>(r1, 1);

        return $z0;
    }

    public int get_elementflags()
    {
        org.apache.xmlbeans.SchemaParticle $r1, $r2, $r3;
        byte $b1, $b2, $b3, $b4;
        int $i0;
        org.apache.xmlbeans.SchemaLocalElement r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        if $i0 == 4 goto label2;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        r4 = (org.apache.xmlbeans.SchemaLocalElement) $r3;

        $z0 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaLocalElement: boolean isNillable()>();

        if $z0 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $z1 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaLocalElement: boolean isDefault()>();

        if $z1 == 0 goto label5;

        $b3 = 2;

        goto label6;

     label5:
        $b3 = 0;

     label6:
        $b1 = $z2 | $b3;

        $z3 = interfaceinvoke r4.<org.apache.xmlbeans.SchemaLocalElement: boolean isFixed()>();

        if $z3 == 0 goto label7;

        $b4 = 4;

        goto label8;

     label7:
        $b4 = 0;

     label8:
        $b2 = $b1 | $b4;

        return $b2;
    }

    public java.lang.String get_default_text()
    {
        org.apache.xmlbeans.SchemaParticle $r1, $r2, $r3;
        int $i0;
        org.apache.xmlbeans.SchemaLocalElement $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        java.lang.String $r5;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaParticle: int getParticleType()>();

        if $i0 == 4 goto label2;

     label1:
        return null;

     label2:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        $r4 = (org.apache.xmlbeans.SchemaLocalElement) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaLocalElement: java.lang.String getDefaultText()>();

        return $r5;
    }

    public org.apache.xmlbeans.SchemaField get_schema_field()
    {
        org.apache.xmlbeans.SchemaParticle $r1, $r2;
        org.apache.xmlbeans.SchemaField $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        $z0 = $r1 instanceof org.apache.xmlbeans.SchemaField;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle currentParticle()>();

        $r3 = (org.apache.xmlbeans.SchemaField) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.apache.xmlbeans.SchemaParticle currentParticle()
    {
        org.apache.xmlbeans.SchemaParticle $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: org.apache.xmlbeans.SchemaParticle _matchedParticle>;

        return $r1;
    }

    public boolean isAllValid()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean _isValid>;

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean CHECK_VALIDITY> = 0;

        <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean PROBE_VALIDITY> = 1;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeVisitorImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeVisitorImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeVisitorImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
