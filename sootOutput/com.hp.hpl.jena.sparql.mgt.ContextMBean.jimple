public class com.hp.hpl.jena.sparql.mgt.ContextMBean extends java.lang.Object implements javax.management.DynamicMBean
{
    private final com.hp.hpl.jena.sparql.util.Context context;

    public void <init>(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context> = r1;

        return;
    }

    private java.lang.Object getAsString(java.lang.String)
    {
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;
        java.lang.String r1, $r4;
        com.hp.hpl.jena.sparql.util.Context $r2;
        com.hp.hpl.jena.sparql.util.Symbol $r3;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.String getAsString(com.hp.hpl.jena.sparql.util.Symbol)>($r3);

        return $r4;
    }

    public java.lang.Object getAttribute(java.lang.String) throws javax.management.AttributeNotFoundException, javax.management.MBeanException, javax.management.ReflectionException
    {
        java.lang.Object $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: java.lang.Object getAsString(java.lang.String)>(r1);

        return $r2;
    }

    public javax.management.AttributeList getAttributes(java.lang.String[])
    {
        com.hp.hpl.jena.sparql.mgt.ContextMBean r4;
        java.lang.String[] r1;
        javax.management.AttributeList $r0;
        javax.management.Attribute $r3;
        int i0, i1;
        java.lang.Object $r5;
        java.lang.String r2;

        r4 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: java.lang.String[];

        $r0 = new javax.management.AttributeList;

        specialinvoke $r0.<javax.management.AttributeList: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r3 = new javax.management.Attribute;

        $r5 = specialinvoke r4.<com.hp.hpl.jena.sparql.mgt.ContextMBean: java.lang.Object getAsString(java.lang.String)>(r2);

        specialinvoke $r3.<javax.management.Attribute: void <init>(java.lang.String,java.lang.Object)>(r2, $r5);

        virtualinvoke $r0.<javax.management.AttributeList: void add(javax.management.Attribute)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public javax.management.MBeanInfo getMBeanInfo()
    {
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;
        javax.management.MBeanAttributeInfo $r13;
        int $i0, $i1, i2;
        java.lang.String $r8, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, z4;
        com.hp.hpl.jena.sparql.util.Symbol r10;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.hp.hpl.jena.sparql.util.Context $r1, $r3, $r11;
        javax.management.MBeanInfo $r6;
        javax.management.MBeanAttributeInfo[] r2;
        java.lang.Class $r7;
        java.lang.Object $r9, $r12;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        $r1 = r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Context: int size()>();

        r2 = newarray (javax.management.MBeanAttributeInfo)[$i0];

        i2 = 0;

        $r3 = r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.util.Context: java.util.Set keys()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.hp.hpl.jena.sparql.util.Symbol) $r9;

        $r11 = r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context>;

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>(r10);

        z4 = 0;

        $z1 = $r12 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        z4 = 1;

     label2:
        $z2 = $r12 instanceof java.lang.Boolean;

        if $z2 == 0 goto label3;

        z4 = 1;

     label3:
        $z3 = $r12 instanceof java.lang.Integer;

        if $z3 == 0 goto label4;

        z4 = 1;

     label4:
        $r13 = new javax.management.MBeanAttributeInfo;

        $r14 = virtualinvoke r10.<com.hp.hpl.jena.sparql.util.Symbol: java.lang.String getSymbol()>();

        $r15 = virtualinvoke r10.<com.hp.hpl.jena.sparql.util.Symbol: java.lang.String getSymbol()>();

        specialinvoke $r13.<javax.management.MBeanAttributeInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r14, "java.lang.String", $r15, 1, z4, 0);

        $i1 = i2;

        i2 = i2 + 1;

        r2[$i1] = $r13;

        goto label1;

     label5:
        $r6 = new javax.management.MBeanInfo;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r6.<javax.management.MBeanInfo: void <init>(java.lang.String,java.lang.String,javax.management.MBeanAttributeInfo[],javax.management.MBeanConstructorInfo[],javax.management.MBeanOperationInfo[],javax.management.MBeanNotificationInfo[])>($r8, "ARQ global context", r2, null, null, null);

        return $r6;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[]) throws javax.management.MBeanException, javax.management.ReflectionException
    {
        java.lang.Object[] r2;
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;
        java.lang.String[] r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.String[];

        return null;
    }

    public void setAttribute(javax.management.Attribute) throws javax.management.AttributeNotFoundException, javax.management.InvalidAttributeValueException, javax.management.MBeanException, javax.management.ReflectionException
    {
        com.hp.hpl.jena.sparql.mgt.ContextMBean r0;
        javax.management.Attribute r1;
        java.lang.Object $r5;
        java.lang.String $r3;
        com.hp.hpl.jena.sparql.util.Context $r2;
        com.hp.hpl.jena.sparql.util.Symbol $r4;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: javax.management.Attribute;

        $r2 = r0.<com.hp.hpl.jena.sparql.mgt.ContextMBean: com.hp.hpl.jena.sparql.util.Context context>;

        $r3 = virtualinvoke r1.<javax.management.Attribute: java.lang.String getName()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<javax.management.Attribute: java.lang.Object getValue()>();

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r4, $r5);

        return;
    }

    public javax.management.AttributeList setAttributes(javax.management.AttributeList)
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.mgt.ContextMBean r5;
        javax.management.AttributeList $r0, r1;
        java.lang.Exception $r11;
        javax.management.Attribute r4, $r7;
        java.lang.Object $r3, $r10;
        java.lang.String $r6, $r8, $r9;
        boolean $z0;

        r5 := @this: com.hp.hpl.jena.sparql.mgt.ContextMBean;

        r1 := @parameter0: javax.management.AttributeList;

        $r0 = new javax.management.AttributeList;

        specialinvoke $r0.<javax.management.AttributeList: void <init>()>();

        $r2 = virtualinvoke r1.<javax.management.AttributeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.management.Attribute) $r3;

        virtualinvoke r4.<javax.management.Attribute: java.lang.Object getValue()>();

        $r6 = virtualinvoke r4.<javax.management.Attribute: java.lang.String getName()>();

        specialinvoke r5.<com.hp.hpl.jena.sparql.mgt.ContextMBean: java.lang.Object getAsString(java.lang.String)>($r6);

     label2:
        virtualinvoke r5.<com.hp.hpl.jena.sparql.mgt.ContextMBean: void setAttribute(javax.management.Attribute)>(r4);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        $r7 = new javax.management.Attribute;

        $r8 = virtualinvoke r4.<javax.management.Attribute: java.lang.String getName()>();

        $r9 = virtualinvoke r4.<javax.management.Attribute: java.lang.String getName()>();

        $r10 = specialinvoke r5.<com.hp.hpl.jena.sparql.mgt.ContextMBean: java.lang.Object getAsString(java.lang.String)>($r9);

        specialinvoke $r7.<javax.management.Attribute: void <init>(java.lang.String,java.lang.Object)>($r8, $r10);

        virtualinvoke $r0.<javax.management.AttributeList: void add(javax.management.Attribute)>($r7);

        goto label1;

     label6:
        return $r0;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
