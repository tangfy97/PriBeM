public class org.apache.commons.configuration.ConfigurationFactory extends java.lang.Object
{
    private static final java.lang.String SEC_ROOT;
    private static final java.lang.String SEC_OVERRIDE;
    private static final java.lang.String SEC_ADDITIONAL;
    private static final java.lang.String ATTR_OPTIONAL;
    private static final java.lang.String ATTR_FILENAME;
    private static final java.lang.String METH_LOAD;
    private static final java.lang.String DEF_BASE_PATH;
    private static org.apache.commons.logging.Log log;
    private java.lang.String configurationFileName;
    private java.net.URL configurationURL;
    private java.lang.String implicitBasePath;
    private java.lang.String basePath;
    private java.net.URL digesterRules;
    private java.lang.String digesterRuleNamespaceURI;
    static java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory;
    static java.lang.Class class$org$apache$commons$configuration$XMLConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$Configuration;
    static java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData;
    static java.lang.Class class$org$apache$commons$configuration$JNDIConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$SystemConfiguration;

    public void <init>()
    {
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setBasePath(java.lang.String)>(".");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setConfigurationFileName(java.lang.String)>(r1);

        return;
    }

    public org.apache.commons.configuration.Configuration getConfiguration() throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r2, $r4, $r5, r20;
        org.apache.commons.configuration.CompositeConfiguration $r7;
        java.lang.String $r9, $r10;
        org.apache.commons.configuration.ConfigurationFactory r1;
        org.apache.commons.configuration.ConfigurationFactory$ConfigurationBuilder $r0;
        org.apache.commons.digester.Digester $r6, $r8, r21;
        java.io.IOException $r11;
        java.lang.Exception $r17;
        org.xml.sax.SAXException $r14;
        org.apache.commons.logging.Log $r12, $r15, $r18;
        org.apache.commons.configuration.ConfigurationException $r13, $r16, $r19;
        java.io.InputStream $r3;

        r1 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r0 = new org.apache.commons.configuration.ConfigurationFactory$ConfigurationBuilder;

        specialinvoke $r0.<org.apache.commons.configuration.ConfigurationFactory$ConfigurationBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL getConfigurationURL()>();

        r20 = $r2;

     label01:
        if $r2 != null goto label02;

        $r9 = r1.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String implicitBasePath>;

        $r10 = virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String getConfigurationFileName()>();

        r20 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL locate(java.lang.String,java.lang.String)>($r9, $r10);

     label02:
        $r3 = virtualinvoke r20.<java.net.URL: java.io.InputStream openStream()>();

     label03:
        goto label05;

     label04:
        $r17 := @caughtexception;

        $r18 = <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log log>;

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Exception caught opening stream to URL", $r17);

        $r19 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r19.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Exception caught opening stream to URL", $r17);

        throw $r19;

     label05:
        $r4 = virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL getDigesterRules()>();

        if $r4 != null goto label06;

        $r8 = new org.apache.commons.digester.Digester;

        specialinvoke $r8.<org.apache.commons.digester.Digester: void <init>()>();

        r21 = $r8;

        specialinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: void configureNamespace(org.apache.commons.digester.Digester)>($r8);

        virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: void initDefaultDigesterRules(org.apache.commons.digester.Digester)>($r8);

        goto label07;

     label06:
        $r5 = virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL getDigesterRules()>();

        $r6 = staticinvoke <org.apache.commons.digester.xmlrules.DigesterLoader: org.apache.commons.digester.Digester createDigester(java.net.URL)>($r5);

        r21 = $r6;

        specialinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: void configureNamespace(org.apache.commons.digester.Digester)>($r6);

     label07:
        virtualinvoke r21.<org.apache.commons.digester.Digester: void setUseContextClassLoader(boolean)>(1);

        virtualinvoke r1.<org.apache.commons.configuration.ConfigurationFactory: void enableDigesterSubstitutor(org.apache.commons.digester.Digester)>(r21);

        virtualinvoke r21.<org.apache.commons.digester.Digester: void push(java.lang.Object)>($r0);

     label08:
        virtualinvoke r21.<org.apache.commons.digester.Digester: java.lang.Object parse(java.io.InputStream)>($r3);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        $r15 = <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("SAX Exception caught", $r14);

        $r16 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r16.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("SAX Exception caught", $r14);

        throw $r16;

     label11:
        $r11 := @caughtexception;

        $r12 = <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("IO Exception caught", $r11);

        $r13 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r13.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("IO Exception caught", $r11);

        throw $r13;

     label12:
        $r7 = virtualinvoke $r0.<org.apache.commons.configuration.ConfigurationFactory$ConfigurationBuilder: org.apache.commons.configuration.CompositeConfiguration getConfiguration()>();

        return $r7;

        catch java.lang.Exception from label01 to label03 with label04;
        catch org.xml.sax.SAXException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label11;
    }

    public java.lang.String getConfigurationFileName()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String configurationFileName>;

        return $r1;
    }

    public void setConfigurationFileName(java.lang.String)
    {
        org.apache.commons.configuration.ConfigurationFactory r3;
        java.lang.String r1, $r4, $r5;
        java.io.File $r0, $r2;

        r3 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getAbsoluteFile()>();

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        r3.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String configurationFileName> = $r4;

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getParent()>();

        r3.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String implicitBasePath> = $r5;

        return;
    }

    public java.net.URL getConfigurationURL()
    {
        org.apache.commons.configuration.ConfigurationFactory r0;
        java.net.URL $r1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL configurationURL>;

        return $r1;
    }

    public void setConfigurationURL(java.net.URL)
    {
        java.lang.String $r2;
        org.apache.commons.configuration.ConfigurationFactory r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.net.URL;

        r0.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL configurationURL> = r1;

        $r2 = virtualinvoke r1.<java.net.URL: java.lang.String toString()>();

        r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String implicitBasePath> = $r2;

        return;
    }

    public java.net.URL getDigesterRules()
    {
        org.apache.commons.configuration.ConfigurationFactory r0;
        java.net.URL $r1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL digesterRules>;

        return $r1;
    }

    public void setDigesterRules(java.net.URL)
    {
        org.apache.commons.configuration.ConfigurationFactory r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.net.URL;

        r0.<org.apache.commons.configuration.ConfigurationFactory: java.net.URL digesterRules> = r1;

        return;
    }

    protected void enableDigesterSubstitutor(org.apache.commons.digester.Digester)
    {
        java.util.Properties $r0;
        org.apache.commons.digester.substitution.VariableExpander $r7;
        org.apache.commons.digester.substitution.VariableSubstitutor $r6;
        org.apache.commons.configuration.ConfigurationFactory r4;
        org.apache.commons.digester.Digester r3;
        org.apache.commons.digester.substitution.MultiVariableExpander $r5;
        org.apache.commons.digester.Substitutor $r8;

        r4 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r3 := @parameter0: org.apache.commons.digester.Digester;

        $r0 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r5 = new org.apache.commons.digester.substitution.MultiVariableExpander;

        specialinvoke $r5.<org.apache.commons.digester.substitution.MultiVariableExpander: void <init>()>();

        virtualinvoke $r5.<org.apache.commons.digester.substitution.MultiVariableExpander: void addSource(java.lang.String,java.util.Map)>("$", $r0);

        $r6 = new org.apache.commons.digester.substitution.VariableSubstitutor;

        $r7 = (org.apache.commons.digester.substitution.VariableExpander) $r5;

        specialinvoke $r6.<org.apache.commons.digester.substitution.VariableSubstitutor: void <init>(org.apache.commons.digester.substitution.VariableExpander)>($r7);

        $r8 = (org.apache.commons.digester.Substitutor) $r6;

        virtualinvoke r3.<org.apache.commons.digester.Digester: void setSubstitutor(org.apache.commons.digester.Substitutor)>($r8);

        return;
    }

    protected void initDefaultDigesterRules(org.apache.commons.digester.Digester)
    {
        org.apache.commons.digester.Digester r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: org.apache.commons.digester.Digester;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void initDigesterSectionRules(org.apache.commons.digester.Digester,java.lang.String,boolean)>(r1, "configuration/", 0);

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void initDigesterSectionRules(org.apache.commons.digester.Digester,java.lang.String,boolean)>(r1, "configuration/override/", 0);

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void initDigesterSectionRules(org.apache.commons.digester.Digester,java.lang.String,boolean)>(r1, "configuration/additional/", 1);

        return;
    }

    protected void initDigesterSectionRules(org.apache.commons.digester.Digester, java.lang.String, boolean)
    {
        org.apache.commons.configuration.ConfigurationFactory$PropertyListConfigurationFactory $r40;
        boolean z0;
        org.apache.commons.configuration.ConfigurationFactory$SystemConfigurationFactory $r48;
        org.apache.commons.digester.Digester r1;
        org.apache.commons.digester.ObjectCreationFactory $r49, $r50, $r51, $r52, $r53, $r54;
        org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory $r42, $r44;
        java.lang.StringBuffer $r4, $r5, $r9, $r10, $r14, $r15, $r20, $r21, $r26, $r27, $r31, $r32, $r37, $r39, $r41, $r43, $r45, $r47;
        java.lang.String r3, $r6, $r11, $r16, $r22, $r28, $r33;
        org.apache.commons.configuration.ConfigurationFactory r0;
        org.apache.commons.configuration.ConfigurationFactory$JNDIConfigurationFactory $r46;
        org.apache.commons.configuration.ConfigurationFactory$PropertiesConfigurationFactory $r38;
        java.lang.Class $r18, $r24, $r35, $r36;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: org.apache.commons.digester.Digester;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("properties");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = new org.apache.commons.configuration.ConfigurationFactory$PropertiesConfigurationFactory;

        specialinvoke $r38.<org.apache.commons.configuration.ConfigurationFactory$PropertiesConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory)>(r0);

        $r49 = (org.apache.commons.digester.ObjectCreationFactory) $r38;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r6, $r49, "load", z0);

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("plist");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r40 = new org.apache.commons.configuration.ConfigurationFactory$PropertyListConfigurationFactory;

        specialinvoke $r40.<org.apache.commons.configuration.ConfigurationFactory$PropertyListConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory)>(r0);

        $r50 = (org.apache.commons.digester.ObjectCreationFactory) $r40;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r11, $r50, "load", z0);

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xml");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r42 = new org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory;

        $r18 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration>;

        if $r18 != null goto label1;

        $r35 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.XMLConfiguration");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration> = $r35;

        goto label2;

     label1:
        $r35 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration>;

     label2:
        specialinvoke $r42.<org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory,java.lang.Class)>(r0, $r35);

        $r51 = (org.apache.commons.digester.ObjectCreationFactory) $r42;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r16, $r51, "load", z0);

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hierarchicalXml");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r44 = new org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory;

        $r24 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration>;

        if $r24 != null goto label3;

        $r36 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.XMLConfiguration");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration> = $r36;

        goto label4;

     label3:
        $r36 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$XMLConfiguration>;

     label4:
        specialinvoke $r44.<org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory,java.lang.Class)>(r0, $r36);

        $r52 = (org.apache.commons.digester.ObjectCreationFactory) $r44;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r22, $r52, "load", z0);

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jndi");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r46 = new org.apache.commons.configuration.ConfigurationFactory$JNDIConfigurationFactory;

        specialinvoke $r46.<org.apache.commons.configuration.ConfigurationFactory$JNDIConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory)>(r0);

        $r53 = (org.apache.commons.digester.ObjectCreationFactory) $r46;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r28, $r53, null, z0);

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("system");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        $r48 = new org.apache.commons.configuration.ConfigurationFactory$SystemConfigurationFactory;

        specialinvoke $r48.<org.apache.commons.configuration.ConfigurationFactory$SystemConfigurationFactory: void <init>(org.apache.commons.configuration.ConfigurationFactory)>(r0);

        $r54 = (org.apache.commons.digester.ObjectCreationFactory) $r48;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: void setupDigesterInstance(org.apache.commons.digester.Digester,java.lang.String,org.apache.commons.digester.ObjectCreationFactory,java.lang.String,boolean)>(r1, $r33, $r54, null, z0);

        return;
    }

    protected void setupDigesterInstance(org.apache.commons.digester.Digester, java.lang.String, org.apache.commons.digester.ObjectCreationFactory, java.lang.String, boolean)
    {
        org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule $r9;
        org.apache.commons.configuration.ConfigurationFactory r7;
        org.apache.commons.digester.Digester r0;
        org.apache.commons.digester.ObjectCreationFactory r2;
        org.apache.commons.digester.Rule $r10;
        java.lang.Class $r4, $r8;
        java.lang.String r1, r3, $r5;
        boolean z0;

        r7 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r0 := @parameter0: org.apache.commons.digester.Digester;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.commons.digester.ObjectCreationFactory;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r7.<org.apache.commons.configuration.ConfigurationFactory: void setupUnionRules(org.apache.commons.digester.Digester,java.lang.String)>(r0, r1);

     label1:
        virtualinvoke r0.<org.apache.commons.digester.Digester: void addFactoryCreate(java.lang.String,org.apache.commons.digester.ObjectCreationFactory)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.digester.Digester: void addSetProperties(java.lang.String)>(r1);

        if r3 == null goto label2;

        $r9 = new org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule;

        specialinvoke $r9.<org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule: void <init>(java.lang.String)>(r3);

        $r10 = (org.apache.commons.digester.Rule) $r9;

        virtualinvoke r0.<org.apache.commons.digester.Digester: void addRule(java.lang.String,org.apache.commons.digester.Rule)>(r1, $r10);

     label2:
        $r4 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$Configuration>;

        if $r4 != null goto label3;

        $r8 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.Configuration");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$Configuration> = $r8;

        goto label4;

     label3:
        $r8 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$Configuration>;

     label4:
        $r5 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.digester.Digester: void addSetNext(java.lang.String,java.lang.String,java.lang.String)>(r1, "addConfiguration", $r5);

        return;
    }

    protected void setupUnionRules(org.apache.commons.digester.Digester, java.lang.String)
    {
        org.apache.commons.configuration.ConfigurationFactory r5;
        org.apache.commons.digester.Digester r0;
        java.lang.Class $r2, $r3, $r6, $r7;
        java.lang.String r1, $r4;

        r5 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r0 := @parameter0: org.apache.commons.digester.Digester;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.ConfigurationFactory$AdditionalConfigurationData");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData>;

     label2:
        virtualinvoke r0.<org.apache.commons.digester.Digester: void addObjectCreate(java.lang.String,java.lang.Class)>(r1, $r6);

        virtualinvoke r0.<org.apache.commons.digester.Digester: void addSetProperties(java.lang.String)>(r1);

        $r3 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData>;

        if $r3 != null goto label3;

        $r7 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.ConfigurationFactory$AdditionalConfigurationData");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData> = $r7;

        goto label4;

     label3:
        $r7 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory$AdditionalConfigurationData>;

     label4:
        $r4 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.digester.Digester: void addSetNext(java.lang.String,java.lang.String,java.lang.String)>(r1, "addAdditionalConfig", $r4);

        return;
    }

    public java.lang.String getDigesterRuleNamespaceURI()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String digesterRuleNamespaceURI>;

        return $r1;
    }

    public void setDigesterRuleNamespaceURI(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String digesterRuleNamespaceURI> = r1;

        return;
    }

    private void configureNamespace(org.apache.commons.digester.Digester)
    {
        org.apache.commons.configuration.ConfigurationFactory r0;
        org.apache.commons.digester.Digester r2;
        java.lang.String $r1, $r3;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r2 := @parameter0: org.apache.commons.digester.Digester;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String getDigesterRuleNamespaceURI()>();

        if $r1 == null goto label1;

        virtualinvoke r2.<org.apache.commons.digester.Digester: void setNamespaceAware(boolean)>(1);

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String getDigesterRuleNamespaceURI()>();

        virtualinvoke r2.<org.apache.commons.digester.Digester: void setRuleNamespaceURI(java.lang.String)>($r3);

        goto label2;

     label1:
        virtualinvoke r2.<org.apache.commons.digester.Digester: void setNamespaceAware(boolean)>(0);

     label2:
        virtualinvoke r2.<org.apache.commons.digester.Digester: void setValidating(boolean)>(0);

        return;
    }

    public java.lang.String getBasePath()
    {
        org.apache.commons.configuration.ConfigurationFactory r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String basePath>;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = ".";

        $r2 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String basePath>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

     label1:
        $r4 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String implicitBasePath>;

        goto label3;

     label2:
        $r4 = r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String basePath>;

     label3:
        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r4);

        if $z1 == 0 goto label4;

        $r5 = ".";

        goto label5;

     label4:
        $r5 = $r4;

     label5:
        return $r5;
    }

    public void setBasePath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.ConfigurationFactory r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.ConfigurationFactory: java.lang.String basePath> = r1;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static org.apache.commons.logging.Log access$000()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log log>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String DEF_BASE_PATH> = ".";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String METH_LOAD> = "load";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String ATTR_FILENAME> = "fileName";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String ATTR_OPTIONAL> = "optional";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String SEC_ADDITIONAL> = "configuration/additional/";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String SEC_OVERRIDE> = "configuration/override/";

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.String SEC_ROOT> = "configuration/";

        $r0 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.ConfigurationFactory");

        <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.configuration.ConfigurationFactory: java.lang.Class class$org$apache$commons$configuration$ConfigurationFactory>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log log> = $r1;

        return;
    }
}
