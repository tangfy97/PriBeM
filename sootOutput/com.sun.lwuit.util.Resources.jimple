public class com.sun.lwuit.util.Resources extends java.lang.Object
{
    static final byte MAGIC_THEME_LEGACY;
    static final byte MAGIC_ANIMATION_LEGACY;
    static final byte MAGIC_INDEXED_IMAGE_LEGACY;
    static final byte MAGIC_FONT_LEGACY;
    static final byte MAGIC_INDEXED_FONT_LEGACY;
    static final byte MAGIC_IMAGE_LEGACY;
    static final byte MAGIC_SVG;
    static final byte MAGIC_TIMELINE;
    static final byte MAGIC_FONT;
    static final byte MAGIC_IMAGE;
    static final byte MAGIC_L10N;
    static final byte MAGIC_DATA;
    static final byte MAGIC_HEADER;
    private short majorVersion;
    private short minorVersion;
    static final byte MAGIC_THEME;
    static final int BORDER_TYPE_EMPTY;
    static final int BORDER_TYPE_LINE;
    static final int BORDER_TYPE_ROUNDED;
    static final int BORDER_TYPE_ETCHED_LOWERED;
    static final int BORDER_TYPE_ETCHED_RAISED;
    static final int BORDER_TYPE_BEVEL_RAISED;
    static final int BORDER_TYPE_BEVEL_LOWERED;
    static final int BORDER_TYPE_IMAGE;
    private static java.lang.Class classLoader;
    private java.lang.String[] metaData;
    private java.util.Hashtable resourceTypes;
    private java.util.Hashtable resources;
    private java.io.DataInputStream input;

    static void setClassLoader(java.lang.Class)
    {
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        <com.sun.lwuit.util.Resources: java.lang.Class classLoader> = r0;

        return;
    }

    void <init>()
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources> = $r2;

        return;
    }

    void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Hashtable $r1, $r2;
        java.io.InputStream r3;

        r0 := @this: com.sun.lwuit.util.Resources;

        r3 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources> = $r2;

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void openFile(java.io.InputStream)>(r3);

        return;
    }

    void clear()
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r0.<com.sun.lwuit.util.Resources: short majorVersion> = 0;

        r0.<com.sun.lwuit.util.Resources: short minorVersion> = 0;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        virtualinvoke $r2.<java.util.Hashtable: void clear()>();

        r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input> = null;

        return;
    }

    void startingEntry(java.lang.String, byte)
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.String r1;
        byte b0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        return;
    }

    void openFile(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        byte[] $r12;
        byte $b1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r24, $r26, $r31;
        java.io.DataInputStream $r3, $r4, $r5, $r8, $r10, $r14, $r17, $r29;
        short $s0, $s2, $s13;
        com.sun.lwuit.StaticAnimation $r15;
        int i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i14;
        java.lang.String $r6, $r25, $r27;
        java.util.Hashtable $r13, $r16, $r21;
        java.io.IOException $r30, $r32;
        com.sun.lwuit.Image $r7, $r19, $r20;
        com.sun.lwuit.Font $r9, $r11, $r18;
        java.io.InputStream r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r2 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void clear()>();

        $r29 = new java.io.DataInputStream;

        specialinvoke $r29.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

        r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input> = $r29;

        $r3 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s0 = virtualinvoke $r3.<java.io.DataInputStream: short readShort()>();

        $i4 = (int) $s0;

        if $i4 >= 0 goto label01;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Invalid resource file!");

        throw $r30;

     label01:
        i3 = 0;

     label02:
        $i5 = (int) $s0;

        if i3 >= $i5 goto label21;

        $r4 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b1 = virtualinvoke $r4.<java.io.DataInputStream: byte readByte()>();

        $r5 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r6 = virtualinvoke $r5.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void startingEntry(java.lang.String,byte)>($r6, $b1);

        $i6 = (int) $b1;

        tableswitch($i6)
        {
            case -14: goto label04;
            case -13: goto label11;
            case -12: goto label12;
            case -11: goto label19;
            case -10: goto label16;
            case -9: goto label13;
            case -8: goto label18;
            case -7: goto label10;
            case -6: goto label09;
            case -5: goto label17;
            case -4: goto label08;
            case -3: goto label07;
            case -2: goto label19;
            case -1: goto label03;
            default: goto label19;
        };

     label03:
        specialinvoke r0.<com.sun.lwuit.util.Resources: void readHeader()>();

        goto label20;

     label04:
        $i7 = (int) $b1;

        $i9 = (int) -14;

        if $i7 != $i9 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        $r21 = virtualinvoke r0.<com.sun.lwuit.util.Resources: java.util.Hashtable loadTheme(java.lang.String,boolean)>($r6, $z0);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -14, $r21);

        goto label20;

     label07:
        $r7 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createImage()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, $b1, $r7);

        goto label20;

     label08:
        $r8 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r9 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($r8, $r6, 0);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, $b1, $r9);

        goto label20;

     label09:
        $r12 = specialinvoke r0.<com.sun.lwuit.util.Resources: byte[] createData()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, $b1, $r12);

        goto label20;

     label10:
        $r13 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.util.Hashtable loadL10N()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, $b1, $r13);

        goto label20;

     label11:
        $r20 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createImage()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -3, $r20);

        goto label20;

     label12:
        $r19 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createPackedImage8()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -3, $r19);

        goto label20;

     label13:
        $i10 = (int) $b1;

        $i12 = (int) -14;

        if $i10 != $i12 goto label14;

        $z1 = 1;

        goto label15;

     label14:
        $z1 = 0;

     label15:
        $r16 = virtualinvoke r0.<com.sun.lwuit.util.Resources: java.util.Hashtable loadTheme(java.lang.String,boolean)>($r6, $z1);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -14, $r16);

        goto label20;

     label16:
        $r17 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r18 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($r17, $r6, 0);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -4, $r18);

        goto label20;

     label17:
        $r10 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r11 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($r10, $r6, 1);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -4, $r11);

        goto label20;

     label18:
        $r14 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r15 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.StaticAnimation loadAnimation(java.io.DataInputStream)>($r14);

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>($r6, -3, $r15);

        goto label20;

     label19:
        $r32 = new java.io.IOException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt theme file unrecognized magic number: ");

        $s13 = (short) $b1;

        $s2 = $s13 & 255;

        $i14 = (int) $s2;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r32;

     label20:
        i3 = i3 + 1;

        goto label02;

     label21:
        return;
    }

    private void readHeader() throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        java.io.DataInputStream $r1, $r2, $r3, $r4, $r7;
        java.lang.String[] $r5, $r6, $r8;
        short $s0, $s1, $s2;
        int $i3, i4, $i5;
        java.lang.String $r9;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r1.<java.io.DataInputStream: short readShort()>();

        $r2 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s0 = virtualinvoke $r2.<java.io.DataInputStream: short readShort()>();

        r0.<com.sun.lwuit.util.Resources: short majorVersion> = $s0;

        $r3 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s1 = virtualinvoke $r3.<java.io.DataInputStream: short readShort()>();

        r0.<com.sun.lwuit.util.Resources: short minorVersion> = $s1;

        $r4 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s2 = virtualinvoke $r4.<java.io.DataInputStream: short readShort()>();

        $i5 = (int) $s2;

        $r5 = newarray (java.lang.String)[$i5];

        r0.<com.sun.lwuit.util.Resources: java.lang.String[] metaData> = $r5;

        i4 = 0;

     label1:
        $r6 = r0.<com.sun.lwuit.util.Resources: java.lang.String[] metaData>;

        $i3 = lengthof $r6;

        if i4 >= $i3 goto label2;

        $r8 = r0.<com.sun.lwuit.util.Resources: java.lang.String[] metaData>;

        $r7 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r9 = virtualinvoke $r7.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r8[i4] = $r9;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public int getMajorVersion()
    {
        int $i1;
        com.sun.lwuit.util.Resources r0;
        short $s0;

        r0 := @this: com.sun.lwuit.util.Resources;

        $s0 = r0.<com.sun.lwuit.util.Resources: short majorVersion>;

        $i1 = (int) $s0;

        return $i1;
    }

    public int getMinorVersion()
    {
        int $i1;
        com.sun.lwuit.util.Resources r0;
        short $s0;

        r0 := @this: com.sun.lwuit.util.Resources;

        $s0 = r0.<com.sun.lwuit.util.Resources: short minorVersion>;

        $i1 = (int) $s0;

        return $i1;
    }

    public java.lang.String[] getMetaData()
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.String[] $r1;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.lang.String[] metaData>;

        return $r1;
    }

    public java.lang.String[] getResourceNames()
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Enumeration $r4;
        java.lang.String[] r2;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.util.Hashtable $r1, $r3;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration keys()>();

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r5;

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.lang.String[] getDataResourceNames()
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.String[] $r1;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.lang.String[] getResourceTypeNames(byte)>(-6);

        return $r1;
    }

    void setResource(java.lang.String, byte, java.lang.Object)
    {
        com.sun.lwuit.util.Resources r1;
        byte b0;
        java.lang.Object r0;
        java.lang.String r2;
        java.lang.Byte $r4;
        java.util.Hashtable $r3, $r5, $r6, $r7;

        r1 := @this: com.sun.lwuit.util.Resources;

        r2 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        r0 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r6 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

        $r7 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        $r5 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r4 = new java.lang.Byte;

        specialinvoke $r4.<java.lang.Byte: void <init>(byte)>(b0);

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4);

     label2:
        return;
    }

    public java.lang.String[] getL10NResourceNames()
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.String[] $r1;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.lang.String[] getResourceTypeNames(byte)>(-7);

        return $r1;
    }

    public java.lang.String[] getFontResourceNames()
    {
        com.sun.lwuit.util.Resources r1;
        java.util.Enumeration $r3;
        java.lang.String[] $r4;
        java.util.Vector $r0;
        java.lang.Object $r5;
        java.lang.String r6;
        java.util.Hashtable $r2;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.util.Resources;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke r1.<com.sun.lwuit.util.Resources: boolean isFont(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <com.sun.lwuit.util.Resources: java.lang.String[] toStringArray(java.util.Vector)>($r0);

        return $r4;
    }

    public java.lang.String[] getThemeResourceNames()
    {
        com.sun.lwuit.util.Resources r1;
        java.util.Enumeration $r3;
        java.lang.String[] $r4;
        java.util.Vector $r0;
        java.lang.Object $r5;
        java.lang.String r6;
        java.util.Hashtable $r2;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.util.Resources;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke r1.<com.sun.lwuit.util.Resources: boolean isTheme(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <com.sun.lwuit.util.Resources: java.lang.String[] toStringArray(java.util.Vector)>($r0);

        return $r4;
    }

    public java.lang.String[] getImageResourceNames()
    {
        com.sun.lwuit.util.Resources r1;
        java.util.Enumeration $r3;
        java.lang.String[] $r4;
        java.util.Vector $r0;
        java.lang.Object $r5;
        java.lang.String r6;
        java.util.Hashtable $r2;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.util.Resources;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke r1.<com.sun.lwuit.util.Resources: boolean isImage(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <com.sun.lwuit.util.Resources: java.lang.String[] toStringArray(java.util.Vector)>($r0);

        return $r4;
    }

    public java.lang.String[] getAnimationResourceNames()
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.String[] $r1;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.lang.String[] getResourceTypeNames(byte)>(-8);

        return $r1;
    }

    byte getResourceType(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    private java.lang.String[] getResourceTypeNames(byte)
    {
        com.sun.lwuit.util.Resources r1;
        java.util.Enumeration $r3;
        java.lang.String[] $r4;
        java.util.Vector $r10;
        byte $b0, b1;
        int $i2, $i3;
        java.lang.Object $r5, $r8;
        java.lang.String r6;
        java.lang.Byte $r9;
        java.util.Hashtable $r2, $r7;
        boolean $z0;

        r1 := @this: com.sun.lwuit.util.Resources;

        b1 := @parameter0: byte;

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>()>();

        $r2 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $r7 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r6);

        $r9 = (java.lang.Byte) $r8;

        $b0 = virtualinvoke $r9.<java.lang.Byte: byte byteValue()>();

        $i2 = (int) $b0;

        $i3 = (int) b1;

        if $i2 != $i3 goto label2;

        virtualinvoke $r10.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <com.sun.lwuit.util.Resources: java.lang.String[] toStringArray(java.util.Vector)>($r10);

        return $r4;
    }

    private static java.lang.String[] toStringArray(java.util.Vector)
    {
        java.util.Vector r0;
        int $i0, $i1, i2;
        java.lang.String[] r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r3 = (java.lang.String) $r2;

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public boolean isL10N(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -7;

        if $i1 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isTheme(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3, $i4, $i6;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -9;

        if $i1 == $i3 goto label1;

        $i4 = (int) $b0;

        $i6 = (int) -14;

        if $i4 != $i6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isFont(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3, $i4, $i6, $i7, $i9;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -4;

        if $i1 == $i3 goto label1;

        $i4 = (int) $b0;

        $i6 = (int) -10;

        if $i4 == $i6 goto label1;

        $i7 = (int) $b0;

        $i9 = (int) -5;

        if $i7 != $i9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isAnimation(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -8;

        if $i1 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isData(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -6;

        if $i1 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isImage(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        byte $b0;
        int $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15;
        java.lang.String r1;
        java.lang.Byte $r4;
        java.util.Hashtable $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resourceTypes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $i1 = (int) $b0;

        $i3 = (int) -13;

        if $i1 == $i3 goto label1;

        $i4 = (int) $b0;

        $i6 = (int) -8;

        if $i4 == $i6 goto label1;

        $i7 = (int) $b0;

        $i9 = (int) -12;

        if $i7 == $i9 goto label1;

        $i10 = (int) $b0;

        $i12 = (int) -3;

        if $i10 == $i12 goto label1;

        $i13 = (int) $b0;

        $i15 = (int) -17;

        if $i13 != $i15 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static com.sun.lwuit.util.Resources open(java.lang.String) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources $r4;
        java.io.IOException $r5, $r11;
        java.lang.RuntimeException $r10;
        java.lang.Class $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9, $r12;
        com.sun.lwuit.Display $r0;
        java.io.InputStream $r3;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = <com.sun.lwuit.util.Resources: java.lang.Class classLoader>;

        $r3 = virtualinvoke $r0.<com.sun.lwuit.Display: java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String)>($r2, r1);

        if $r3 != null goto label2;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        $r4 = new com.sun.lwuit.util.Resources;

        specialinvoke $r4.<com.sun.lwuit.util.Resources: void <init>(java.io.InputStream)>($r3);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label3:
        return $r4;

     label4:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.RuntimeException: void printStackTrace()>();

        $r11 = new java.io.IOException;

        $r12 = virtualinvoke $r10.<java.lang.RuntimeException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    com.sun.lwuit.StaticAnimation loadAnimation(java.io.DataInputStream) throws java.io.IOException
    {
        com.sun.lwuit.StaticAnimation $r1;
        java.io.DataInputStream r0;
        com.sun.lwuit.util.Resources r2;

        r2 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.io.DataInputStream;

        $r1 = staticinvoke <com.sun.lwuit.StaticAnimation: com.sun.lwuit.StaticAnimation createAnimation(java.io.DataInputStream)>(r0);

        return $r1;
    }

    public static com.sun.lwuit.util.Resources open(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new com.sun.lwuit.util.Resources;

        specialinvoke $r0.<com.sun.lwuit.util.Resources: void <init>(java.io.InputStream)>(r1);

        return $r0;
    }

    public com.sun.lwuit.Image getImage(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.Object $r3;
        java.lang.String r1;
        com.sun.lwuit.Image $r4;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.lwuit.Image) $r3;

        return $r4;
    }

    public com.sun.lwuit.StaticAnimation getAnimation(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        com.sun.lwuit.StaticAnimation $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.lwuit.StaticAnimation) $r3;

        return $r4;
    }

    public java.io.InputStream getData(java.lang.String)
    {
        com.sun.lwuit.util.Resources r1;
        byte[] $r5, $r6;
        java.io.ByteArrayInputStream $r0;
        java.lang.Object $r4;
        java.lang.String r2;
        java.util.Hashtable $r3;

        r1 := @this: com.sun.lwuit.util.Resources;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayInputStream;

        $r3 = r1.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (byte[]) $r4;

        $r6 = (byte[]) $r5;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        return $r0;
    }

    public java.util.Hashtable getL10N(java.lang.String, java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.Object $r3, $r6;
        java.lang.String r1, r4;
        java.util.Hashtable $r2, $r5, $r7;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.Hashtable) $r3;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        $r7 = (java.util.Hashtable) $r6;

        return $r7;
    }

    public java.util.Enumeration listL10NLocales(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Enumeration $r5;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2, $r4;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Hashtable) $r3;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r5;
    }

    public com.sun.lwuit.Font getFont(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.Object $r3;
        java.lang.String r1;
        com.sun.lwuit.Font $r4;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.lwuit.Font) $r3;

        return $r4;
    }

    public java.util.Hashtable getTheme(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.util.Enumeration $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r20, $r21, $r22, $r24, $r25, $r26, $r31, $r32, $r33, $r34, $r35, $r38, $r39, $r40;
        short $s0, $s1;
        java.lang.String r1, r7, $r13, $r18, $r23, $r27, $r36, $r41;
        java.util.Hashtable $r2, r4, $r28;
        java.lang.IllegalArgumentException $r30, $r37;
        com.sun.lwuit.plaf.Border $r9, $r14, $r19;
        java.lang.Object $r3, $r6, $r8, $r29;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Hashtable) $r3;

        if r4 == null goto label9;

        $z0 = virtualinvoke r4.<java.util.Hashtable: boolean containsKey(java.lang.Object)>("uninitialized");

        if $z0 == 0 goto label9;

        $r5 = virtualinvoke r4.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.lang.String) $r6;

        $z2 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("font");

        if $z2 != 0 goto label2;

        $z4 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("Image");

        if $z4 == 0 goto label5;

        $z5 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("scaledImage");

        if $z5 != 0 goto label5;

     label2:
        $r8 = virtualinvoke r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r7);

        if $r8 != null goto label3;

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find resource: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r37;

     label3:
        $z3 = $r8 instanceof java.lang.String;

        if $z3 == 0 goto label5;

        $r28 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r29 = virtualinvoke $r28.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r8);

        if $r29 != null goto label4;

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Theme entry for ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be found: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r30;

     label4:
        virtualinvoke r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r29);

     label5:
        $z6 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("order");

        if $z6 == 0 goto label7;

        $r9 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.plaf.Border confirmBorder(java.util.Hashtable,java.lang.String)>(r4, r7);

        $s0 = r0.<com.sun.lwuit.util.Resources: short majorVersion>;

        if $s0 != 0 goto label6;

        $s1 = r0.<com.sun.lwuit.util.Resources: short minorVersion>;

        if $s1 != 0 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pressed");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.plaf.Border confirmBorder(java.util.Hashtable,java.lang.String)>(r4, $r13);

        virtualinvoke $r9.<com.sun.lwuit.plaf.Border: void setPressedInstance(com.sun.lwuit.plaf.Border)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Focused");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.plaf.Border confirmBorder(java.util.Hashtable,java.lang.String)>(r4, $r18);

        virtualinvoke $r9.<com.sun.lwuit.plaf.Border: void setFocusedInstance(com.sun.lwuit.plaf.Border)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pressed");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Focused");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r27);

     label6:
        virtualinvoke r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r9);

     label7:
        goto label1;

     label8:
        virtualinvoke r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>("uninitialized");

     label9:
        return r4;
    }

    private com.sun.lwuit.plaf.Border confirmBorder(java.util.Hashtable, java.lang.String)
    {
        com.sun.lwuit.util.Resources r6;
        java.lang.String[] $r4, r5;
        java.lang.IllegalArgumentException $r8;
        com.sun.lwuit.plaf.Border $r3, $r7;
        java.lang.Object $r2;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String r1, $r12;
        java.util.Hashtable r0;
        boolean $z0;

        r6 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = $r2 instanceof com.sun.lwuit.plaf.Border;

        if $z0 != 0 goto label3;

        $r4 = (java.lang.String[]) $r2;

        r5 = (java.lang.String[]) $r4;

        if r5 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find resource: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $r7 = specialinvoke r6.<com.sun.lwuit.util.Resources: com.sun.lwuit.plaf.Border createImageBorder(java.lang.String[])>(r5);

        return $r7;

     label3:
        $r3 = (com.sun.lwuit.plaf.Border) $r2;

        return $r3;
    }

    private com.sun.lwuit.plaf.Border createImageBorder(java.lang.String[])
    {
        com.sun.lwuit.util.Resources r28;
        java.lang.String[] r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r29;
        java.util.Hashtable $r30;
        com.sun.lwuit.Image $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r32;
        com.sun.lwuit.plaf.Border $r10, $r14, $r17, $r27;
        com.sun.lwuit.Image[] r1;
        java.lang.Object $r31;

        r28 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        r1 = newarray (com.sun.lwuit.Image)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $r30 = r28.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r29 = r0[i3];

        $r31 = virtualinvoke $r30.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r29);

        $r32 = (com.sun.lwuit.Image) $r31;

        r1[i3] = $r32;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = lengthof r1;

        lookupswitch($i2)
        {
            case 2: goto label3;
            case 3: goto label4;
            case 8: goto label5;
            default: goto label6;
        };

     label3:
        $r16 = r1[0];

        $r15 = r1[1];

        $r17 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createImageBorder(com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image)>($r16, $r15, null);

        return $r17;

     label4:
        $r13 = r1[0];

        $r12 = r1[1];

        $r11 = r1[2];

        $r14 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createImageBorder(com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image)>($r13, $r12, $r11);

        return $r14;

     label5:
        $r9 = r1[0];

        $r8 = r1[1];

        $r7 = r1[2];

        $r6 = r1[3];

        $r5 = r1[4];

        $r4 = r1[5];

        $r3 = r1[6];

        $r2 = r1[7];

        $r10 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createImageBorder(com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image)>($r9, $r8, $r7, $r6, $r5, $r4, $r3, $r2, null);

        return $r10;

     label6:
        $r26 = r1[0];

        $r25 = r1[1];

        $r24 = r1[2];

        $r23 = r1[3];

        $r22 = r1[4];

        $r21 = r1[5];

        $r20 = r1[6];

        $r19 = r1[7];

        $r18 = r1[8];

        $r27 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createImageBorder(com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image,com.sun.lwuit.Image)>($r26, $r25, $r24, $r23, $r22, $r21, $r20, $r19, $r18);

        return $r27;
    }

    java.lang.Object getResourceObject(java.lang.String)
    {
        com.sun.lwuit.util.Resources r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    com.sun.lwuit.Image createImage() throws java.io.IOException
    {
        byte[] r24, r85, r86, r87, r88;
        byte $b1;
        java.lang.StringBuilder $r78, $r80, $r91;
        long $l3, $l4, $l5, $l6, $l9, $l10, $l11, $l12;
        short $s0, $s21, $s47, $s48, $s53;
        java.io.IOException $r92;
        com.sun.lwuit.EncodedImage $r10, $r26, $r84;
        java.io.DataInputStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r23, $r25, $r27, $r28, $r29, $r30, $r33, $r35, $r36, $r37, $r38, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r56, $r57, $r58, $r60, $r61, $r62, $r64, $r65, $r66, $r68, $r69, $r71, $r72, $r73, $r82, $r83;
        int $i2, $i7, $i8, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i49, $i50, i51, i52, $i54, $i55, $i57, $i58;
        com.sun.lwuit.Image $r18, $r22, $r39;
        com.sun.lwuit.util.Resources r0;
        com.sun.lwuit.animations.AnimationObject[] r89;
        java.lang.String $r14, $r34, $r79, $r81;
        com.sun.lwuit.animations.Timeline $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sun.lwuit.geom.Dimension $r90;
        com.sun.lwuit.StaticAnimation $r21;
        com.sun.lwuit.animations.AnimationObject $r40, $r41, $r42, $r51, $r55, $r59, $r63, $r67, $r70, $r74, $r75;

        r0 := @this: com.sun.lwuit.util.Resources;

        $s0 = r0.<com.sun.lwuit.util.Resources: short majorVersion>;

        if $s0 != 0 goto label01;

        $s47 = r0.<com.sun.lwuit.util.Resources: short minorVersion>;

        if $s47 != 0 goto label01;

        $r82 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i49 = virtualinvoke $r82.<java.io.DataInputStream: int readInt()>();

        r85 = newarray (byte)[$i49];

        $r83 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i50 = lengthof r85;

        virtualinvoke $r83.<java.io.DataInputStream: void readFully(byte[],int,int)>(r85, 0, $i50);

        $r84 = staticinvoke <com.sun.lwuit.EncodedImage: com.sun.lwuit.EncodedImage create(byte[])>(r85);

        return $r84;

     label01:
        $r1 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b1 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        $s53 = (short) $b1;

        $s48 = $s53 & 255;

        $i54 = (int) $s48;

        tableswitch($i54)
        {
            case 239: goto label10;
            case 240: goto label22;
            case 241: goto label02;
            case 242: goto label02;
            case 243: goto label03;
            case 244: goto label04;
            case 245: goto label05;
            default: goto label22;
        };

     label02:
        $r23 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i16 = virtualinvoke $r23.<java.io.DataInputStream: int readInt()>();

        r24 = newarray (byte)[$i16];

        $r25 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i17 = lengthof r24;

        virtualinvoke $r25.<java.io.DataInputStream: void readFully(byte[],int,int)>(r24, 0, $i17);

        $r26 = staticinvoke <com.sun.lwuit.EncodedImage: com.sun.lwuit.EncodedImage create(byte[])>(r24);

        return $r26;

     label03:
        $r22 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createPackedImage8()>();

        return $r22;

     label04:
        $r20 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r21 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.StaticAnimation loadAnimation(java.io.DataInputStream)>($r20);

        return $r21;

     label05:
        $r2 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i2 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        $z0 = staticinvoke <com.sun.lwuit.Image: boolean isSVGSupported()>();

        if $z0 == 0 goto label07;

        r86 = newarray (byte)[$i2];

        $r12 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r12.<java.io.DataInputStream: void readFully(byte[])>(r86);

        $r13 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r14 = virtualinvoke $r13.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r15 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z1 = virtualinvoke $r15.<java.io.DataInputStream: boolean readBoolean()>();

        $r16 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void loadSVGRatios(java.io.DataInputStream)>($r16);

        $r17 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i13 = virtualinvoke $r17.<java.io.DataInputStream: int readInt()>();

        r87 = newarray (byte)[$i13];

        $i14 = lengthof r87;

        if $i14 <= 0 goto label06;

        $r19 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i15 = lengthof r87;

        virtualinvoke $r19.<java.io.DataInputStream: void readFully(byte[],int,int)>(r87, 0, $i15);

     label06:
        $r18 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createSVG(java.lang.String,boolean,byte[])>($r14, $z1, r86);

        return $r18;

     label07:
        $l4 = (long) $i2;

        $r3 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $l3 = (long) $i2;

        $l5 = virtualinvoke $r3.<java.io.DataInputStream: long skip(long)>($l3);

        $l6 = $l4 - $l5;

        i51 = (int) $l6;

     label08:
        if i51 <= 0 goto label09;

        $l10 = (long) i51;

        $r11 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $l9 = (long) i51;

        $l11 = virtualinvoke $r11.<java.io.DataInputStream: long skip(long)>($l9);

        $l12 = $l10 - $l11;

        i51 = (int) $l12;

        goto label08;

     label09:
        $r4 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r5 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r5.<java.io.DataInputStream: boolean readBoolean()>();

        $r6 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r6.<java.io.DataInputStream: float readFloat()>();

        $r7 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r7.<java.io.DataInputStream: float readFloat()>();

        $r8 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i7 = virtualinvoke $r8.<java.io.DataInputStream: int readInt()>();

        r88 = newarray (byte)[$i7];

        $r9 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i8 = lengthof r88;

        virtualinvoke $r9.<java.io.DataInputStream: void readFully(byte[],int,int)>(r88, 0, $i8);

        $r10 = staticinvoke <com.sun.lwuit.EncodedImage: com.sun.lwuit.EncodedImage create(byte[])>(r88);

        return $r10;

     label10:
        $r27 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i18 = virtualinvoke $r27.<java.io.DataInputStream: int readInt()>();

        $r28 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i19 = virtualinvoke $r28.<java.io.DataInputStream: int readInt()>();

        $r29 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i20 = virtualinvoke $r29.<java.io.DataInputStream: int readInt()>();

        $r30 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s21 = virtualinvoke $r30.<java.io.DataInputStream: short readShort()>();

        $i55 = (int) $s21;

        r89 = newarray (com.sun.lwuit.animations.AnimationObject)[$i55];

        i52 = 0;

     label11:
        $i22 = lengthof r89;

        if i52 >= $i22 goto label21;

        $r33 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r34 = virtualinvoke $r33.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r35 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i23 = virtualinvoke $r35.<java.io.DataInputStream: int readInt()>();

        $r36 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i24 = virtualinvoke $r36.<java.io.DataInputStream: int readInt()>();

        $r37 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i25 = virtualinvoke $r37.<java.io.DataInputStream: int readInt()>();

        $r38 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i26 = virtualinvoke $r38.<java.io.DataInputStream: int readInt()>();

        $r39 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image getImage(java.lang.String)>($r34);

        if $r39 != null goto label12;

        $r75 = staticinvoke <com.sun.lwuit.animations.AnimationObject: com.sun.lwuit.animations.AnimationObject createAnimationImage(java.lang.String,com.sun.lwuit.util.Resources,int,int)>($r34, r0, $i25, $i26);

        r89[i52] = $r75;

        goto label13;

     label12:
        $r40 = staticinvoke <com.sun.lwuit.animations.AnimationObject: com.sun.lwuit.animations.AnimationObject createAnimationImage(com.sun.lwuit.Image,int,int)>($r39, $i25, $i26);

        r89[i52] = $r40;

     label13:
        $r41 = r89[i52];

        virtualinvoke $r41.<com.sun.lwuit.animations.AnimationObject: void setStartTime(int)>($i23);

        $r42 = r89[i52];

        $i27 = $i23 + $i24;

        virtualinvoke $r42.<com.sun.lwuit.animations.AnimationObject: void setEndTime(int)>($i27);

        $r43 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i28 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        $i57 = (int) -1;

        if $i28 <= $i57 goto label14;

        $r72 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i45 = virtualinvoke $r72.<java.io.DataInputStream: int readInt()>();

        $r73 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i46 = virtualinvoke $r73.<java.io.DataInputStream: int readInt()>();

        $r74 = r89[i52];

        virtualinvoke $r74.<com.sun.lwuit.animations.AnimationObject: void defineFrames(int,int,int)>($i45, $i46, $i28);

     label14:
        $r44 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z2 = virtualinvoke $r44.<java.io.DataInputStream: boolean readBoolean()>();

        if $z2 == 0 goto label15;

        $r70 = r89[i52];

        $r69 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i43 = virtualinvoke $r69.<java.io.DataInputStream: int readInt()>();

        $r71 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i44 = virtualinvoke $r71.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r70.<com.sun.lwuit.animations.AnimationObject: void defineMotionX(int,int,int,int,int)>($i43, $i23, $i24, $i25, $i44);

     label15:
        $r45 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z3 = virtualinvoke $r45.<java.io.DataInputStream: boolean readBoolean()>();

        if $z3 == 0 goto label16;

        $r67 = r89[i52];

        $r66 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i41 = virtualinvoke $r66.<java.io.DataInputStream: int readInt()>();

        $r68 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i42 = virtualinvoke $r68.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r67.<com.sun.lwuit.animations.AnimationObject: void defineMotionY(int,int,int,int,int)>($i41, $i23, $i24, $i26, $i42);

     label16:
        $r46 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z4 = virtualinvoke $r46.<java.io.DataInputStream: boolean readBoolean()>();

        if $z4 == 0 goto label17;

        $r63 = r89[i52];

        $r62 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i38 = virtualinvoke $r62.<java.io.DataInputStream: int readInt()>();

        $r64 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i39 = virtualinvoke $r64.<java.io.DataInputStream: int readInt()>();

        $r65 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i40 = virtualinvoke $r65.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r63.<com.sun.lwuit.animations.AnimationObject: void defineWidth(int,int,int,int,int)>($i38, $i23, $i24, $i39, $i40);

     label17:
        $r47 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z5 = virtualinvoke $r47.<java.io.DataInputStream: boolean readBoolean()>();

        if $z5 == 0 goto label18;

        $r59 = r89[i52];

        $r58 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i35 = virtualinvoke $r58.<java.io.DataInputStream: int readInt()>();

        $r60 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i36 = virtualinvoke $r60.<java.io.DataInputStream: int readInt()>();

        $r61 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i37 = virtualinvoke $r61.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r59.<com.sun.lwuit.animations.AnimationObject: void defineHeight(int,int,int,int,int)>($i35, $i23, $i24, $i36, $i37);

     label18:
        $r48 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z6 = virtualinvoke $r48.<java.io.DataInputStream: boolean readBoolean()>();

        if $z6 == 0 goto label19;

        $r55 = r89[i52];

        $r54 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i32 = virtualinvoke $r54.<java.io.DataInputStream: int readInt()>();

        $r56 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i33 = virtualinvoke $r56.<java.io.DataInputStream: int readInt()>();

        $r57 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i34 = virtualinvoke $r57.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r55.<com.sun.lwuit.animations.AnimationObject: void defineOpacity(int,int,int,int,int)>($i32, $i23, $i24, $i33, $i34);

     label19:
        $r49 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z7 = virtualinvoke $r49.<java.io.DataInputStream: boolean readBoolean()>();

        if $z7 == 0 goto label20;

        $r51 = r89[i52];

        $r50 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i29 = virtualinvoke $r50.<java.io.DataInputStream: int readInt()>();

        $r52 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i30 = virtualinvoke $r52.<java.io.DataInputStream: int readInt()>();

        $r53 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i31 = virtualinvoke $r53.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r51.<com.sun.lwuit.animations.AnimationObject: void defineOrientation(int,int,int,int,int)>($i29, $i23, $i24, $i30, $i31);

     label20:
        i52 = i52 + 1;

        goto label11;

     label21:
        $r90 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r90.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i19, $i20);

        $r32 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i18, r89, $r90);

        return $r32;

     label22:
        $r92 = new java.io.IOException;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal type while creating image: ");

        $i58 = (int) $s48;

        $r79 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i58);

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r92.<java.io.IOException: void <init>(java.lang.String)>($r81);

        throw $r92;
    }

    void loadSVGRatios(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        com.sun.lwuit.util.Resources r1;

        r1 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.io.DataInputStream;

        virtualinvoke r0.<java.io.DataInputStream: float readFloat()>();

        virtualinvoke r0.<java.io.DataInputStream: float readFloat()>();

        return;
    }

    private byte[] createData() throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        java.io.DataInputStream $r1, $r3;
        byte[] r2;
        int $i0;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        virtualinvoke $r3.<java.io.DataInputStream: void readFully(byte[])>(r2);

        return r2;
    }

    com.sun.lwuit.Font loadFont(java.io.DataInputStream, java.lang.String, boolean) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        byte $b1, $b13;
        int[] $r8, $r9;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.io.DataInputStream r1;
        long $l5, $l6, $l7, $l8;
        short $s0, $s2, $s3, $s4, $s9, $s10, $s11, $s12, $s21;
        int i14, i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24;
        java.lang.String r3, $r4, $r5;
        com.sun.lwuit.Image r10;
        com.sun.lwuit.Font $r2, $r6, $r7, r11;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.io.DataInputStream;

        r3 := @parameter1: java.lang.String;

        z3 := @parameter2: boolean;

        $s0 = r0.<com.sun.lwuit.util.Resources: short majorVersion>;

        if $s0 != 0 goto label06;

        $s9 = r0.<com.sun.lwuit.util.Resources: short minorVersion>;

        if $s9 != 0 goto label06;

        if z3 == 0 goto label01;

        r10 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createPackedImage8()>();

        goto label02;

     label01:
        r10 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createImage()>();

     label02:
        $s11 = virtualinvoke r1.<java.io.DataInputStream: short readShort()>();

        $i16 = (int) $s11;

        $r8 = newarray (int)[$i16];

        $i17 = (int) $s11;

        $r9 = newarray (int)[$i17];

        i14 = 0;

     label03:
        $i18 = (int) $s11;

        if i14 >= $i18 goto label04;

        $s12 = virtualinvoke r1.<java.io.DataInputStream: short readShort()>();

        $i19 = (int) $s12;

        $r8[i14] = $i19;

        $b13 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i20 = (int) $b13;

        $r9[i14] = $i20;

        i14 = i14 + 1;

        goto label03;

     label04:
        $r5 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r6 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font getBitmapFont(java.lang.String)>(r3);

        if $r6 == null goto label05;

        return $r6;

     label05:
        $r7 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(java.lang.String,com.sun.lwuit.Image,int[],int[],java.lang.String)>(r3, r10, $r8, $r9, $r5);

        return $r7;

     label06:
        $b1 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $s21 = (short) $b1;

        $s10 = $s21 & 255;

        $z0 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        r11 = null;

        if $z0 == 0 goto label08;

        i15 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $z2 = staticinvoke <com.sun.lwuit.Font: boolean isTrueTypeFileSupported()>();

        if $z2 == 0 goto label07;

        r11 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createTrueTypeFont(java.io.InputStream)>(r1);

        goto label08;

     label07:
        if i15 <= 0 goto label08;

        $l6 = (long) i15;

        $l5 = (long) i15;

        $l7 = virtualinvoke r1.<java.io.DataInputStream: long skip(long)>($l5);

        $l8 = $l6 - $l7;

        i15 = (int) $l8;

        goto label07;

     label08:
        $z4 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z4 == 0 goto label09;

        $r4 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        if r11 != null goto label09;

        $z1 = staticinvoke <com.sun.lwuit.Font: boolean isCreationByStringSupported()>();

        if $z1 == 0 goto label09;

        r11 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font create(java.lang.String)>($r4);

     label09:
        $z5 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z5 == 0 goto label10;

        r11 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadBitmapFont(java.io.DataInputStream,java.lang.String,com.sun.lwuit.Font)>(r1, r3, r11);

     label10:
        if r11 == null goto label11;

        return r11;

     label11:
        $s4 = $s10 & 96;

        $s3 = $s10 & 7;

        $s2 = $s10 & 24;

        $i22 = (int) $s4;

        $i23 = (int) $s3;

        $i24 = (int) $s2;

        $r2 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i22, $i23, $i24);

        return $r2;
    }

    void readRenderingHint(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        com.sun.lwuit.util.Resources r1;

        r1 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.io.DataInputStream;

        virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        return;
    }

    com.sun.lwuit.Font loadBitmapFont(java.io.DataInputStream, java.lang.String, com.sun.lwuit.Font) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        java.io.DataInputStream r2;
        short $s0, $s2;
        byte $b1;
        int[] r3, r4;
        int i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r5, r7;
        boolean $z0;
        com.sun.lwuit.Image $r1;
        com.sun.lwuit.Font r6, $r8, $r9;

        r0 := @this: com.sun.lwuit.util.Resources;

        r2 := @parameter0: java.io.DataInputStream;

        r7 := @parameter1: java.lang.String;

        r6 := @parameter2: com.sun.lwuit.Font;

        $r1 = virtualinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createImage()>();

        $s0 = virtualinvoke r2.<java.io.DataInputStream: short readShort()>();

        $i5 = (int) $s0;

        r3 = newarray (int)[$i5];

        $i6 = (int) $s0;

        r4 = newarray (int)[$i6];

        i3 = 0;

     label1:
        $i7 = (int) $s0;

        if i3 >= $i7 goto label2;

        $s2 = virtualinvoke r2.<java.io.DataInputStream: short readShort()>();

        $i8 = (int) $s2;

        r3[i3] = $i8;

        i3 = i3 + 1;

        goto label1;

     label2:
        i4 = 0;

     label3:
        $i9 = (int) $s0;

        if i4 >= $i9 goto label4;

        $b1 = virtualinvoke r2.<java.io.DataInputStream: byte readByte()>();

        $i10 = (int) $b1;

        r4[i4] = $i10;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r5 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke r0.<com.sun.lwuit.util.Resources: void readRenderingHint(java.io.DataInputStream)>(r2);

        if r6 != null goto label6;

        $z0 = staticinvoke <com.sun.lwuit.Font: boolean isBitmapFontEnabled()>();

        if $z0 == 0 goto label6;

        $r8 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font getBitmapFont(java.lang.String)>(r7);

        if $r8 == null goto label5;

        return $r8;

     label5:
        $r9 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(java.lang.String,com.sun.lwuit.Image,int[],int[],java.lang.String)>(r7, $r1, r3, r4, $r5);

        return $r9;

     label6:
        return r6;
    }

    java.util.Hashtable loadTheme(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.Integer $r153, $r154, $r157, $r158, $r163, $r164, $r167, $r168;
        byte $b1, $b2, $b3, $b4, $b5, $b11, $b13, $b19, $b20, $b21, $b22, $b31;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r25, $r26, $r55, $r56, $r64, $r65, $r76, $r77, $r88, $r89, $r93, $r94, $r98, $r99, $r119, $r120, $r125, $r126, $r131, $r133, $r141, $r142, $r143, $r144, $r145, $r147, $r148, $r149, $r152, $r156, $r172;
        java.lang.Object[] $r28, $r39, $r67, $r79;
        short $s0, $s6, $s16, $s23, $s24, $s25, $s27, $s28, $s29, $s30, $s32, s35, $s37, $s39, $s40, $s41, $s42, $s53;
        java.io.IOException $r173;
        java.io.DataInputStream $r4, $r5, $r7, $r8, $r9, $r10, $r22, $r30, $r32, $r34, $r36, $r38, $r41, $r43, $r45, $r47, $r48, $r49, $r53, $r59, $r60, $r61, $r62, $r73, $r81, $r83, $r85, $r91, $r101, $r103, $r104, $r105, $r106, $r107, $r111, $r112, $r114, $r116, $r117, $r122, $r128, $r132, $r135;
        int $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i17, $i18, $i26, $i33, i34, $i36, $i38, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i55, $i56, $i57, $i58;
        java.lang.Boolean $r2;
        com.sun.lwuit.Image r139;
        java.lang.Object $r52, $r110, $r113, $r115, $r123, $r129;
        com.sun.lwuit.Font r137;
        com.sun.lwuit.util.Resources r3;
        java.lang.Float $r151, $r155, $r159, $r160, $r161, $r165, $r166, $r169, $r170, $r171;
        java.lang.String r1, $r6, $r20, $r27, $r50, $r57, $r66, $r78, $r86, $r90, $r95, $r100, $r102, $r108, $r121, $r127, $r134, $r136, r138;
        java.lang.Byte $r146, $r150, $r162;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;
        java.util.Hashtable $r51, $r109, $r140;

        r3 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.lang.String;

        z14 := @parameter1: boolean;

        $r140 = new java.util.Hashtable;

        specialinvoke $r140.<java.util.Hashtable: void <init>()>();

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r1);

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("uninitialized", $r2);

        $r4 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s0 = virtualinvoke $r4.<java.io.DataInputStream: short readShort()>();

        i34 = 0;

     label01:
        $i36 = (int) $s0;

        if i34 >= $i36 goto label31;

        $r5 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r6 = virtualinvoke $r5.<java.io.DataInputStream: java.lang.String readUTF()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("Color");

        if $z0 == 0 goto label02;

        $r135 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i33 = virtualinvoke $r135.<java.io.DataInputStream: int readInt()>();

        $r136 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i33);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r136);

        goto label30;

     label02:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("ransparency");

        if $z1 == 0 goto label03;

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r132 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b31 = virtualinvoke $r132.<java.io.DataInputStream: byte readByte()>();

        $s37 = (short) $b31;

        $s32 = $s37 & 255;

        $i38 = (int) $s32;

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r134);

        goto label30;

     label03:
        $z2 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("adding");

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("argin");

        if $z3 == 0 goto label05;

     label04:
        $r7 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b1 = virtualinvoke $r7.<java.io.DataInputStream: byte readByte()>();

        $s39 = (short) $b1;

        $s27 = $s39 & 255;

        $r8 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b2 = virtualinvoke $r8.<java.io.DataInputStream: byte readByte()>();

        $s40 = (short) $b2;

        $s28 = $s40 & 255;

        $r9 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b3 = virtualinvoke $r9.<java.io.DataInputStream: byte readByte()>();

        $s41 = (short) $b3;

        $s29 = $s41 & 255;

        $r10 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b4 = virtualinvoke $r10.<java.io.DataInputStream: byte readByte()>();

        $s42 = (short) $b4;

        $s30 = $s42 & 255;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i43 = (int) $s27;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i44 = (int) $s28;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i45 = (int) $s29;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i46 = (int) $s30;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r20);

        goto label30;

     label05:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("order");

        if $z4 == 0 goto label08;

        $s23 = r3.<com.sun.lwuit.util.Resources: short majorVersion>;

        if $s23 != 0 goto label07;

        $s25 = r3.<com.sun.lwuit.util.Resources: short minorVersion>;

        if $s25 != 0 goto label07;

        $r114 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r115 = specialinvoke r3.<com.sun.lwuit.util.Resources: java.lang.Object createBorder(java.io.DataInputStream,boolean)>($r114, z14);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r115);

        if z14 == 0 goto label30;

        $r116 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z15 = virtualinvoke $r116.<java.io.DataInputStream: boolean readBoolean()>();

        if $z15 == 0 goto label06;

        $r143 = new java.lang.StringBuilder;

        specialinvoke $r143.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pressed");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        $r128 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r129 = specialinvoke r3.<com.sun.lwuit.util.Resources: java.lang.Object createBorder(java.io.DataInputStream,boolean)>($r128, 1);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r127, $r129);

     label06:
        $r117 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z16 = virtualinvoke $r117.<java.io.DataInputStream: boolean readBoolean()>();

        if $z16 == 0 goto label30;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Focused");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        $r122 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r123 = specialinvoke r3.<com.sun.lwuit.util.Resources: java.lang.Object createBorder(java.io.DataInputStream,boolean)>($r122, 1);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r121, $r123);

        goto label30;

     label07:
        $r111 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s24 = virtualinvoke $r111.<java.io.DataInputStream: short readShort()>();

        $i47 = (int) $s24;

        $i49 = (int) 65535;

        $i26 = $i47 & $i49;

        $r112 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r113 = specialinvoke r3.<com.sun.lwuit.util.Resources: java.lang.Object createBorder(java.io.DataInputStream,int)>($r112, $i26);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r113);

        goto label30;

     label08:
        $z5 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("ont");

        if $z5 == 0 goto label12;

        $r103 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z13 = virtualinvoke $r103.<java.io.DataInputStream: boolean readBoolean()>();

        if $z13 == 0 goto label10;

        $r107 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r108 = virtualinvoke $r107.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r109 = r3.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r110 = virtualinvoke $r109.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r108);

        r137 = (com.sun.lwuit.Font) $r110;

        if r137 != null goto label09;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r108);

        goto label30;

     label09:
        goto label11;

     label10:
        $r104 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b20 = virtualinvoke $r104.<java.io.DataInputStream: byte readByte()>();

        $r105 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b21 = virtualinvoke $r105.<java.io.DataInputStream: byte readByte()>();

        $r106 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b22 = virtualinvoke $r106.<java.io.DataInputStream: byte readByte()>();

        $i50 = (int) $b20;

        $i51 = (int) $b21;

        $i52 = (int) $b22;

        r137 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i50, $i51, $i52);

     label11:
        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r137);

        goto label30;

     label12:
        $z6 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("ackground");

        if $z6 == 0 goto label21;

        $r53 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b11 = virtualinvoke $r53.<java.io.DataInputStream: byte readByte()>();

        $s53 = (short) $b11;

        s35 = $s53 & 255;

        $i12 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(46);

        $i55 = (int) -1;

        if $i12 <= $i55 goto label13;

        r138 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        goto label14;

     label13:
        r138 = "";

     label14:
        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgType");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r146 = new java.lang.Byte;

        $b13 = (byte) s35;

        specialinvoke $r146.<java.lang.Byte: void <init>(byte)>($b13);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r146);

        $i56 = (int) s35;

        lookupswitch($i56)
        {
            case -12: goto label15;
            case 241: goto label15;
            case 242: goto label16;
            case 243: goto label16;
            case 245: goto label16;
            case 246: goto label17;
            case 247: goto label17;
            case 248: goto label18;
            default: goto label20;
        };

     label15:
        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgImage");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        $r101 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r102 = virtualinvoke $r101.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r100, $r102);

        goto label20;

     label16:
        $r85 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r86 = virtualinvoke $r85.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgImage");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r90, $r86);

        $r91 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b19 = virtualinvoke $r91.<java.io.DataInputStream: byte readByte()>();

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgAlign");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        $r150 = new java.lang.Byte;

        specialinvoke $r150.<java.lang.Byte: void <init>(byte)>($b19);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r95, $r150);

        goto label20;

     label17:
        $r151 = new java.lang.Float;

        specialinvoke $r151.<java.lang.Float: void <init>(float)>(0.5F);

        $r152 = new java.lang.StringBuilder;

        specialinvoke $r152.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgGradient");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        $r79 = newarray (java.lang.Object)[5];

        $r153 = new java.lang.Integer;

        $r81 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i17 = virtualinvoke $r81.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r153.<java.lang.Integer: void <init>(int)>($i17);

        $r79[0] = $r153;

        $r154 = new java.lang.Integer;

        $r83 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i18 = virtualinvoke $r83.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r154.<java.lang.Integer: void <init>(int)>($i18);

        $r79[1] = $r154;

        $r79[2] = $r151;

        $r79[3] = $r151;

        $r155 = new java.lang.Float;

        specialinvoke $r155.<java.lang.Float: void <init>(float)>(1.0F);

        $r79[4] = $r155;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r78, $r79);

        goto label20;

     label18:
        $r59 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i14 = virtualinvoke $r59.<java.io.DataInputStream: int readInt()>();

        $r60 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i15 = virtualinvoke $r60.<java.io.DataInputStream: int readInt()>();

        $r61 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f5 = virtualinvoke $r61.<java.io.DataInputStream: float readFloat()>();

        $r62 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f6 = virtualinvoke $r62.<java.io.DataInputStream: float readFloat()>();

        f7 = 1.0F;

        $s16 = r3.<com.sun.lwuit.util.Resources: short minorVersion>;

        $i57 = (int) $s16;

        if $i57 <= 1 goto label19;

        $r73 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        f7 = virtualinvoke $r73.<java.io.DataInputStream: float readFloat()>();

     label19:
        $r156 = new java.lang.StringBuilder;

        specialinvoke $r156.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bgGradient");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r67 = newarray (java.lang.Object)[5];

        $r157 = new java.lang.Integer;

        specialinvoke $r157.<java.lang.Integer: void <init>(int)>($i14);

        $r67[0] = $r157;

        $r158 = new java.lang.Integer;

        specialinvoke $r158.<java.lang.Integer: void <init>(int)>($i15);

        $r67[1] = $r158;

        $r159 = new java.lang.Float;

        specialinvoke $r159.<java.lang.Float: void <init>(float)>($f5);

        $r67[2] = $r159;

        $r160 = new java.lang.Float;

        specialinvoke $r160.<java.lang.Float: void <init>(float)>($f6);

        $r67[3] = $r160;

        $r161 = new java.lang.Float;

        specialinvoke $r161.<java.lang.Float: void <init>(float)>(f7);

        $r67[4] = $r161;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r66, $r67);

     label20:
        goto label30;

     label21:
        $z7 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("bgImage");

        if $z7 == 0 goto label23;

        $r49 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r50 = virtualinvoke $r49.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r51 = r3.<com.sun.lwuit.util.Resources: java.util.Hashtable resources>;

        $r52 = virtualinvoke $r51.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r50);

        r139 = (com.sun.lwuit.Image) $r52;

        if r139 != null goto label22;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r50);

        goto label30;

     label22:
        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r139);

        goto label30;

     label23:
        $z8 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("scaledImage");

        if $z8 == 0 goto label25;

        $r48 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $z12 = virtualinvoke $r48.<java.io.DataInputStream: boolean readBoolean()>();

        if $z12 == 0 goto label24;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "true");

        goto label30;

     label24:
        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "false");

        goto label30;

     label25:
        $z9 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("bgType");

        if $z9 != 0 goto label26;

        $z10 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("bgAlign");

        if $z10 == 0 goto label27;

     label26:
        $r162 = new java.lang.Byte;

        $r22 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b5 = virtualinvoke $r22.<java.io.DataInputStream: byte readByte()>();

        specialinvoke $r162.<java.lang.Byte: void <init>(byte)>($b5);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r162);

        goto label30;

     label27:
        $z11 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("bgGradient");

        if $z11 == 0 goto label29;

        $s6 = r3.<com.sun.lwuit.util.Resources: short minorVersion>;

        $i58 = (int) $s6;

        if $i58 >= 2 goto label28;

        $r39 = newarray (java.lang.Object)[4];

        $r163 = new java.lang.Integer;

        $r41 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i9 = virtualinvoke $r41.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r163.<java.lang.Integer: void <init>(int)>($i9);

        $r39[0] = $r163;

        $r164 = new java.lang.Integer;

        $r43 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i10 = virtualinvoke $r43.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r164.<java.lang.Integer: void <init>(int)>($i10);

        $r39[1] = $r164;

        $r165 = new java.lang.Float;

        $r45 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f3 = virtualinvoke $r45.<java.io.DataInputStream: float readFloat()>();

        specialinvoke $r165.<java.lang.Float: void <init>(float)>($f3);

        $r39[2] = $r165;

        $r166 = new java.lang.Float;

        $r47 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f4 = virtualinvoke $r47.<java.io.DataInputStream: float readFloat()>();

        specialinvoke $r166.<java.lang.Float: void <init>(float)>($f4);

        $r39[3] = $r166;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r39);

        goto label30;

     label28:
        $r28 = newarray (java.lang.Object)[5];

        $r167 = new java.lang.Integer;

        $r30 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i7 = virtualinvoke $r30.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r167.<java.lang.Integer: void <init>(int)>($i7);

        $r28[0] = $r167;

        $r168 = new java.lang.Integer;

        $r32 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i8 = virtualinvoke $r32.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r168.<java.lang.Integer: void <init>(int)>($i8);

        $r28[1] = $r168;

        $r169 = new java.lang.Float;

        $r34 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f0 = virtualinvoke $r34.<java.io.DataInputStream: float readFloat()>();

        specialinvoke $r169.<java.lang.Float: void <init>(float)>($f0);

        $r28[2] = $r169;

        $r170 = new java.lang.Float;

        $r36 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f1 = virtualinvoke $r36.<java.io.DataInputStream: float readFloat()>();

        specialinvoke $r170.<java.lang.Float: void <init>(float)>($f1);

        $r28[3] = $r170;

        $r171 = new java.lang.Float;

        $r38 = r3.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $f2 = virtualinvoke $r38.<java.io.DataInputStream: float readFloat()>();

        specialinvoke $r171.<java.lang.Float: void <init>(float)>($f2);

        $r28[4] = $r171;

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r28);

        goto label30;

     label29:
        $r173 = new java.io.IOException;

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while trying to read theme property: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r173.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r173;

     label30:
        i34 = i34 + 1;

        goto label01;

     label31:
        return $r140;
    }

    private java.lang.Object createBorder(java.io.DataInputStream, int) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        byte $b13, $b14, $b16, $b17, $b18, $b20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.DataInputStream r1;
        java.lang.String[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i19, $i21, $i22, $i23, $i24, $i25, $i26;
        com.sun.lwuit.plaf.Border $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.sun.lwuit.util.Resources;

        r1 := @parameter0: java.io.DataInputStream;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 65281: goto label01;
            case 65282: goto label02;
            case 65283: goto label04;
            case 65284: goto label06;
            case 65285: goto label08;
            case 65286: goto label12;
            case 65287: goto label10;
            case 65288: goto label14;
            default: goto label15;
        };

     label01:
        $r15 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border getEmpty()>();

        return $r15;

     label02:
        $z5 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z5 == 0 goto label03;

        $b20 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i21 = (int) $b20;

        $r14 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int)>($i21);

        return $r14;

     label03:
        $b18 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i19 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i22 = (int) $b18;

        $r13 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int,int)>($i22, $i19);

        return $r13;

     label04:
        $z4 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z4 == 0 goto label05;

        $b16 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $b17 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i23 = (int) $b16;

        $i24 = (int) $b17;

        $r12 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($i23, $i24);

        return $r12;

     label05:
        $b13 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $b14 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i15 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i25 = (int) $b13;

        $i26 = (int) $b14;

        $r11 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($i25, $i26, $i15);

        return $r11;

     label06:
        $z3 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z3 == 0 goto label07;

        $r10 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedLowered()>();

        return $r10;

     label07:
        $i11 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i12 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r9 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedLowered(int,int)>($i11, $i12);

        return $r9;

     label08:
        $z2 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z2 == 0 goto label09;

        $r8 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedRaised()>();

        return $r8;

     label09:
        $i9 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i10 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r7 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedRaised(int,int)>($i9, $i10);

        return $r7;

     label10:
        $z0 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z0 == 0 goto label11;

        $r4 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelRaised()>();

        return $r4;

     label11:
        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i2 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i3 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i4 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r3 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelRaised(int,int,int,int)>($i1, $i2, $i3, $i4);

        return $r3;

     label12:
        $z1 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z1 == 0 goto label13;

        $r6 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelLowered()>();

        return $r6;

     label13:
        $i5 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i6 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i7 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $i8 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r5 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelLowered(int,int,int,int)>($i5, $i6, $i7, $i8);

        return $r5;

     label14:
        $r2 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.lang.String[] readImageBorder(java.io.DataInputStream)>(r1);

        return $r2;

     label15:
        return null;
    }

    private java.lang.Object createBorder(java.io.DataInputStream, boolean) throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r1;
        byte $b0, $b13, $b14, $b16, $b17, $b18, $b20;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.DataInputStream r0;
        java.lang.String[] $r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        com.sun.lwuit.plaf.Border $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r1 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.io.DataInputStream;

        z0 := @parameter1: boolean;

        $b0 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i21 = (int) $b0;

        tableswitch($i21)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label16;
            case 4: goto label06;
            case 5: goto label08;
            case 6: goto label10;
            case 7: goto label12;
            case 8: goto label14;
            default: goto label16;
        };

     label01:
        $r15 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border getEmpty()>();

        return $r15;

     label02:
        $z6 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z6 == 0 goto label03;

        $b20 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i22 = (int) $b20;

        $r14 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int)>($i22);

        return $r14;

     label03:
        $b18 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i19 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i23 = (int) $b18;

        $r13 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int,int)>($i23, $i19);

        return $r13;

     label04:
        $z5 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z5 == 0 goto label05;

        $b16 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $b17 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i24 = (int) $b16;

        $i25 = (int) $b17;

        $r12 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($i24, $i25);

        return $r12;

     label05:
        $b13 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $b14 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i15 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i26 = (int) $b13;

        $i27 = (int) $b14;

        $r11 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($i26, $i27, $i15);

        return $r11;

     label06:
        $z4 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z4 == 0 goto label07;

        $r10 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedLowered()>();

        return $r10;

     label07:
        $i11 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i12 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $r9 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedLowered(int,int)>($i11, $i12);

        return $r9;

     label08:
        $z3 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z3 == 0 goto label09;

        $r8 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedRaised()>();

        return $r8;

     label09:
        $i9 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i10 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $r7 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createEtchedRaised(int,int)>($i9, $i10);

        return $r7;

     label10:
        $z2 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z2 == 0 goto label11;

        $r6 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelRaised()>();

        return $r6;

     label11:
        $i5 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i6 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i7 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i8 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $r5 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelRaised(int,int,int,int)>($i5, $i6, $i7, $i8);

        return $r5;

     label12:
        $z1 = virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

        if $z1 == 0 goto label13;

        $r4 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelLowered()>();

        return $r4;

     label13:
        $i1 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i3 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $i4 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $r3 = staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createBevelLowered(int,int,int,int)>($i1, $i2, $i3, $i4);

        return $r3;

     label14:
        $r2 = specialinvoke r1.<com.sun.lwuit.util.Resources: java.lang.String[] readImageBorder(java.io.DataInputStream)>(r0);

        if z0 != 0 goto label15;

        virtualinvoke r0.<java.io.DataInputStream: boolean readBoolean()>();

     label15:
        return $r2;

     label16:
        return null;
    }

    private java.lang.String[] readImageBorder(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        com.sun.lwuit.util.Resources r3;
        java.lang.String[] r1;
        byte $b0;
        int i1, $i2, $i3;
        java.lang.String $r2;

        r3 := @this: com.sun.lwuit.util.Resources;

        r0 := @parameter0: java.io.DataInputStream;

        $b0 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $i2 = (int) $b0;

        r1 = newarray (java.lang.String)[$i2];

        i1 = 0;

     label1:
        $i3 = (int) $b0;

        if i1 >= $i3 goto label2;

        $r2 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private java.util.Hashtable loadL10N() throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r1;
        java.io.DataInputStream $r2, $r3, $r6, $r8, $r11;
        java.lang.String[] r4;
        short $s0, $s1;
        int i2, i3, i4, $i5, $i6, $i7, $i8;
        java.lang.String $r7, $r9, $r10, $r12;
        java.util.Hashtable $r13, $r14;

        r1 := @this: com.sun.lwuit.util.Resources;

        $r13 = new java.util.Hashtable;

        specialinvoke $r13.<java.util.Hashtable: void <init>()>();

        $r2 = r1.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s0 = virtualinvoke $r2.<java.io.DataInputStream: short readShort()>();

        $r3 = r1.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s1 = virtualinvoke $r3.<java.io.DataInputStream: short readShort()>();

        $i5 = (int) $s0;

        r4 = newarray (java.lang.String)[$i5];

        i2 = 0;

     label1:
        $i6 = (int) $s0;

        if i2 >= $i6 goto label2;

        $r11 = r1.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r12 = virtualinvoke $r11.<java.io.DataInputStream: java.lang.String readUTF()>();

        r4[i2] = $r12;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i7 = (int) $s1;

        if i3 >= $i7 goto label6;

        $r14 = new java.util.Hashtable;

        specialinvoke $r14.<java.util.Hashtable: void <init>()>();

        $r6 = r1.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r7 = virtualinvoke $r6.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r14);

        i4 = 0;

     label4:
        $i8 = (int) $s0;

        if i4 >= $i8 goto label5;

        $r9 = r4[i4];

        $r8 = r1.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $r10 = virtualinvoke $r8.<java.io.DataInputStream: java.lang.String readUTF()>();

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        i4 = i4 + 1;

        goto label4;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return $r13;
    }

    private com.sun.lwuit.Image createPackedImage8() throws java.io.IOException
    {
        com.sun.lwuit.util.Resources r0;
        java.io.DataInputStream $r1, $r2, $r3, $r5, $r7;
        byte[] r4;
        short $s1, $s2, s6;
        byte $b0;
        int[] $r8;
        int $i3, $i4, $i5, i7, $i8, $i9, $i10, $i11, $i12;
        com.sun.lwuit.Image $r6;

        r0 := @this: com.sun.lwuit.util.Resources;

        $r1 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $b0 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        s6 = $b0 & 255;

        if s6 != 0 goto label1;

        s6 = 256;

     label1:
        $r8 = newarray (int)[s6];

        i7 = 0;

     label2:
        $i8 = lengthof $r8;

        if i7 >= $i8 goto label3;

        $r7 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i5 = virtualinvoke $r7.<java.io.DataInputStream: int readInt()>();

        $r8[i7] = $i5;

        i7 = i7 + 1;

        goto label2;

     label3:
        $r2 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s1 = virtualinvoke $r2.<java.io.DataInputStream: short readShort()>();

        $r3 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $s2 = virtualinvoke $r3.<java.io.DataInputStream: short readShort()>();

        $i9 = (int) $s1;

        $i10 = (int) $s2;

        $i3 = $i9 * $i10;

        r4 = newarray (byte)[$i3];

        $r5 = r0.<com.sun.lwuit.util.Resources: java.io.DataInputStream input>;

        $i4 = lengthof r4;

        virtualinvoke $r5.<java.io.DataInputStream: void readFully(byte[],int,int)>(r4, 0, $i4);

        $i11 = (int) $s1;

        $i12 = (int) $s2;

        $r6 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createIndexed(int,int,int[],byte[])>($i11, $i12, $r8, r4);

        return $r6;
    }

    static void <clinit>()
    {
        <com.sun.lwuit.util.Resources: int BORDER_TYPE_IMAGE> = 8;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_BEVEL_LOWERED> = 7;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_BEVEL_RAISED> = 6;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_ETCHED_RAISED> = 5;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_ETCHED_LOWERED> = 4;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_ROUNDED> = 2;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_LINE> = 1;

        <com.sun.lwuit.util.Resources: int BORDER_TYPE_EMPTY> = 0;

        <com.sun.lwuit.util.Resources: byte MAGIC_THEME> = -14;

        <com.sun.lwuit.util.Resources: byte MAGIC_HEADER> = -1;

        <com.sun.lwuit.util.Resources: byte MAGIC_DATA> = -6;

        <com.sun.lwuit.util.Resources: byte MAGIC_L10N> = -7;

        <com.sun.lwuit.util.Resources: byte MAGIC_IMAGE> = -3;

        <com.sun.lwuit.util.Resources: byte MAGIC_FONT> = -4;

        <com.sun.lwuit.util.Resources: byte MAGIC_TIMELINE> = -17;

        <com.sun.lwuit.util.Resources: byte MAGIC_SVG> = -11;

        <com.sun.lwuit.util.Resources: byte MAGIC_IMAGE_LEGACY> = -13;

        <com.sun.lwuit.util.Resources: byte MAGIC_INDEXED_FONT_LEGACY> = -5;

        <com.sun.lwuit.util.Resources: byte MAGIC_FONT_LEGACY> = -10;

        <com.sun.lwuit.util.Resources: byte MAGIC_INDEXED_IMAGE_LEGACY> = -12;

        <com.sun.lwuit.util.Resources: byte MAGIC_ANIMATION_LEGACY> = -8;

        <com.sun.lwuit.util.Resources: byte MAGIC_THEME_LEGACY> = -9;

        <com.sun.lwuit.util.Resources: java.lang.Class classLoader> = class "Lcom/sun/lwuit/util/Resources;";

        return;
    }
}
