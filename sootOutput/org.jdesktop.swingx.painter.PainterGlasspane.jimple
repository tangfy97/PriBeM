public class org.jdesktop.swingx.painter.PainterGlasspane extends javax.swing.JComponent
{
    private org.jdesktop.swingx.painter.Painter painter;
    private java.util.List targets;

    public void <init>()
    {
        org.jdesktop.swingx.painter.PainterGlasspane r0;
        java.util.ArrayList $r1;

        r0 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.swingx.painter.PainterGlasspane: java.util.List targets> = $r1;

        return;
    }

    public void addTarget(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.util.List $r2;
        org.jdesktop.swingx.painter.PainterGlasspane r0;

        r0 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.painter.PainterGlasspane: java.util.List targets>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: void repaint()>();

        return;
    }

    public void removeTarget(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.util.List $r2;
        org.jdesktop.swingx.painter.PainterGlasspane r0;

        r0 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.painter.PainterGlasspane: java.util.List targets>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: void repaint()>();

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Point $r8;
        org.jdesktop.swingx.painter.PainterGlasspane r2;
        java.awt.Graphics2D r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        javax.swing.JComponent r7;
        java.util.Iterator $r5;
        org.jdesktop.swingx.painter.Painter $r3, $r9;
        java.util.List $r4;
        java.awt.Graphics r0;
        java.lang.Object $r6;

        r2 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        r0 := @parameter0: java.awt.Graphics;

        r1 = (java.awt.Graphics2D) r0;

        $r3 = virtualinvoke r2.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter getPainter()>();

        if $r3 == null goto label2;

        $r4 = r2.<org.jdesktop.swingx.painter.PainterGlasspane: java.util.List targets>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.swing.JComponent) $r6;

        $r8 = specialinvoke r2.<org.jdesktop.swingx.painter.PainterGlasspane: java.awt.Point calcOffset(javax.swing.JComponent)>(r7);

        $i1 = $r8.<java.awt.Point: int x>;

        $i0 = $r8.<java.awt.Point: int y>;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(int,int)>($i1, $i0);

        $r9 = virtualinvoke r2.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter getPainter()>();

        $i2 = virtualinvoke r7.<javax.swing.JComponent: int getWidth()>();

        $i3 = virtualinvoke r7.<javax.swing.JComponent: int getHeight()>();

        interfaceinvoke $r9.<org.jdesktop.swingx.painter.Painter: void paint(java.awt.Graphics2D,java.lang.Object,int,int)>(r1, r7, $i2, $i3);

        $i4 = $r8.<java.awt.Point: int x>;

        $i7 = neg $i4;

        $i5 = $r8.<java.awt.Point: int y>;

        $i6 = neg $i5;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(int,int)>($i7, $i6);

        goto label1;

     label2:
        return;
    }

    private java.awt.Point calcOffset(javax.swing.JComponent)
    {
        java.awt.Point $r6, $r7, $r8, $r9, $r10;
        org.jdesktop.swingx.painter.PainterGlasspane r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.awt.Container $r1, $r4;
        javax.swing.JComponent r0, $r5;
        java.awt.Window $r2;

        r3 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        r0 := @parameter0: javax.swing.JComponent;

        if r0 != null goto label1;

        $r10 = new java.awt.Point;

        specialinvoke $r10.<java.awt.Point: void <init>(int,int)>(0, 0);

        return $r10;

     label1:
        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Container getParent()>();

        $r2 = staticinvoke <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>(r0);

        if $r1 != $r2 goto label2;

        $r9 = new java.awt.Point;

        specialinvoke $r9.<java.awt.Point: void <init>(int,int)>(0, 0);

        return $r9;

     label2:
        $r4 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Container getParent()>();

        $r5 = (javax.swing.JComponent) $r4;

        $r6 = specialinvoke r3.<org.jdesktop.swingx.painter.PainterGlasspane: java.awt.Point calcOffset(javax.swing.JComponent)>($r5);

        $r7 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Point getLocation()>();

        $r8 = new java.awt.Point;

        $i1 = $r6.<java.awt.Point: int x>;

        $i0 = $r7.<java.awt.Point: int x>;

        $i5 = $i1 + $i0;

        $i3 = $r6.<java.awt.Point: int y>;

        $i2 = $r7.<java.awt.Point: int y>;

        $i4 = $i3 + $i2;

        specialinvoke $r8.<java.awt.Point: void <init>(int,int)>($i5, $i4);

        return $r8;
    }

    public org.jdesktop.swingx.painter.Painter getPainter()
    {
        org.jdesktop.swingx.painter.PainterGlasspane r0;
        org.jdesktop.swingx.painter.Painter $r1;

        r0 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        $r1 = r0.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter painter>;

        return $r1;
    }

    public void setPainter(org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.painter.Painter $r1, r2, $r3;
        org.jdesktop.swingx.painter.PainterGlasspane r0;

        r0 := @this: org.jdesktop.swingx.painter.PainterGlasspane;

        r2 := @parameter0: org.jdesktop.swingx.painter.Painter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter getPainter()>();

        r0.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter painter> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: org.jdesktop.swingx.painter.Painter getPainter()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("painter", $r1, $r3);

        virtualinvoke r0.<org.jdesktop.swingx.painter.PainterGlasspane: void repaint()>();

        return;
    }
}
