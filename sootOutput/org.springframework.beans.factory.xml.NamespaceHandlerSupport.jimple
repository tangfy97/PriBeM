public abstract class org.springframework.beans.factory.xml.NamespaceHandlerSupport extends java.lang.Object implements org.springframework.beans.factory.xml.NamespaceHandler
{
    private final java.util.Map parsers;
    private final java.util.Map decorators;
    private final java.util.Map attributeDecorators;

    public void <init>()
    {
        java.util.HashMap $r1, $r2, $r3;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map parsers> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map decorators> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map attributeDecorators> = $r3;

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.BeanDefinitionParser $r3;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.springframework.beans.factory.config.BeanDefinition $r4;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r3 = specialinvoke r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: org.springframework.beans.factory.xml.BeanDefinitionParser findParserForElement(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r2);

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.xml.BeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r2);

        return $r4;
    }

    private org.springframework.beans.factory.xml.BeanDefinitionParser findParserForElement(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r8;
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.BeanDefinitionParser r7;
        org.springframework.beans.factory.xml.ParserContext r0;
        java.util.Map $r5;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r3, $r12;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r4;

        r4 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r3 = virtualinvoke $r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r2);

        $r5 = r4.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map parsers>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r7 = (org.springframework.beans.factory.xml.BeanDefinitionParser) $r6;

        if r7 != null goto label1;

        $r8 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot locate BeanDefinitionParser for element [");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.springframework.beans.factory.xml.XmlReaderContext: void fatal(java.lang.String,java.lang.Object)>($r12, r2);

     label1:
        return r7;
    }

    public org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.config.BeanDefinitionHolder r4, $r5;
        org.w3c.dom.Node r1;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;
        org.springframework.beans.factory.xml.BeanDefinitionDecorator $r3;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r1 := @parameter0: org.w3c.dom.Node;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r2 := @parameter2: org.springframework.beans.factory.xml.ParserContext;

        $r3 = specialinvoke r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: org.springframework.beans.factory.xml.BeanDefinitionDecorator findDecoratorForNode(org.w3c.dom.Node,org.springframework.beans.factory.xml.ParserContext)>(r1, r2);

        $r5 = interfaceinvoke $r3.<org.springframework.beans.factory.xml.BeanDefinitionDecorator: org.springframework.beans.factory.config.BeanDefinitionHolder decorate(org.w3c.dom.Node,org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.xml.ParserContext)>(r1, r4, r2);

        return $r5;
    }

    private org.springframework.beans.factory.xml.BeanDefinitionDecorator findDecoratorForNode(org.w3c.dom.Node, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r4, $r11;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.w3c.dom.Node r2;
        java.util.Map $r19, $r21;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r1;
        java.lang.String $r3, $r7, $r10, $r17, $r24;
        boolean $z0, $z1, $z2;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r18;
        java.lang.StringBuilder $r5, $r8, $r9, $r12, $r13, $r14, $r15, $r16;
        java.lang.Class $r6;
        java.lang.Object $r20, $r22;
        org.springframework.beans.factory.xml.BeanDefinitionDecorator r23;

        r18 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r2 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r23 = null;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r3 = virtualinvoke $r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r2);

        $z0 = r2 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r21 = r18.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map decorators>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r23 = (org.springframework.beans.factory.xml.BeanDefinitionDecorator) $r22;

        goto label3;

     label1:
        $z1 = r2 instanceof org.w3c.dom.Attr;

        if $z1 == 0 goto label2;

        $r19 = r18.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map attributeDecorators>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r23 = (org.springframework.beans.factory.xml.BeanDefinitionDecorator) $r20;

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot decorate based on Nodes of type [");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: void fatal(java.lang.String,java.lang.Object)>($r10, r2);

     label3:
        if r23 != null goto label6;

        $r11 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot locate BeanDefinitionDecorator for ");

        $z2 = r2 instanceof org.w3c.dom.Element;

        if $z2 == 0 goto label4;

        $r24 = "element";

        goto label5;

     label4:
        $r24 = "attribute";

     label5:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.springframework.beans.factory.xml.XmlReaderContext: void fatal(java.lang.String,java.lang.Object)>($r17, r2);

     label6:
        return r23;
    }

    protected final void registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
    {
        org.springframework.beans.factory.xml.BeanDefinitionParser r2;
        java.util.Map $r3;
        java.lang.String r1;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.beans.factory.xml.BeanDefinitionParser;

        $r3 = r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map parsers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected final void registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
    {
        java.util.Map $r3;
        java.lang.String r1;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;
        org.springframework.beans.factory.xml.BeanDefinitionDecorator r2;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.beans.factory.xml.BeanDefinitionDecorator;

        $r3 = r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map decorators>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected final void registerBeanDefinitionDecoratorForAttribute(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
    {
        java.util.Map $r3;
        java.lang.String r1;
        org.springframework.beans.factory.xml.NamespaceHandlerSupport r0;
        org.springframework.beans.factory.xml.BeanDefinitionDecorator r2;

        r0 := @this: org.springframework.beans.factory.xml.NamespaceHandlerSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.beans.factory.xml.BeanDefinitionDecorator;

        $r3 = r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: java.util.Map attributeDecorators>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }
}
