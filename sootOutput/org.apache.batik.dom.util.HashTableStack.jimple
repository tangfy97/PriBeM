public class org.apache.batik.dom.util.HashTableStack extends java.lang.Object
{
    protected org.apache.batik.dom.util.HashTableStack$Link current;

    public void <init>()
    {
        org.apache.batik.dom.util.HashTableStack r0;
        org.apache.batik.dom.util.HashTableStack$Link $r1;

        r0 := @this: org.apache.batik.dom.util.HashTableStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.dom.util.HashTableStack$Link;

        specialinvoke $r1.<org.apache.batik.dom.util.HashTableStack$Link: void <init>(org.apache.batik.dom.util.HashTableStack$Link)>(null);

        r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current> = $r1;

        return;
    }

    public void push()
    {
        org.apache.batik.dom.util.HashTableStack r0;
        int $i0, $i1;
        org.apache.batik.dom.util.HashTableStack$Link $r1;

        r0 := @this: org.apache.batik.dom.util.HashTableStack;

        $r1 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $i0 = $r1.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount>;

        $i1 = $i0 + 1;

        $r1.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount> = $i1;

        return;
    }

    public void pop()
    {
        org.apache.batik.dom.util.HashTableStack r0;
        int $i0, $i1;
        org.apache.batik.dom.util.HashTableStack$Link $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.util.HashTableStack;

        $r1 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $i0 = $r1.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount>;

        $i1 = $i0 - 1;

        $r1.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount> = $i1;

        if $i0 != 0 goto label1;

        $r2 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $r3 = $r2.<org.apache.batik.dom.util.HashTableStack$Link: org.apache.batik.dom.util.HashTableStack$Link next>;

        r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current> = $r3;

     label1:
        return;
    }

    public java.lang.String put(java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.util.HashTableStack r0;
        org.apache.batik.dom.util.HashTable $r5;
        int $i0, $i1, $i2, $i3;
        org.apache.batik.dom.util.HashTableStack$Link $r1, $r3, $r8, $r9, $r10, $r11;
        java.lang.String r2, r4, $r7;
        java.lang.Object $r6;

        r0 := @this: org.apache.batik.dom.util.HashTableStack;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $i0 = $r1.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount>;

        if $i0 == 0 goto label1;

        $r9 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $i2 = $r9.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount>;

        $i3 = $i2 - 1;

        $r9.<org.apache.batik.dom.util.HashTableStack$Link: int pushCount> = $i3;

        $r10 = new org.apache.batik.dom.util.HashTableStack$Link;

        $r11 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        specialinvoke $r10.<org.apache.batik.dom.util.HashTableStack$Link: void <init>(org.apache.batik.dom.util.HashTableStack$Link)>($r11);

        r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current> = $r10;

     label1:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $r8 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $r8.<org.apache.batik.dom.util.HashTableStack$Link: java.lang.String defaultStr> = r4;

     label2:
        $r3 = r0.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $r5 = $r3.<org.apache.batik.dom.util.HashTableStack$Link: org.apache.batik.dom.util.HashTable table>;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    public java.lang.String get(java.lang.String)
    {
        org.apache.batik.dom.util.HashTableStack r1;
        org.apache.batik.dom.util.HashTable $r2;
        int $i0;
        org.apache.batik.dom.util.HashTableStack$Link $r5, r7;
        java.lang.Object $r3;
        java.lang.String r0, r4, $r6;

        r1 := @this: org.apache.batik.dom.util.HashTableStack;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r5 = r1.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        $r6 = $r5.<org.apache.batik.dom.util.HashTableStack$Link: java.lang.String defaultStr>;

        return $r6;

     label1:
        r7 = r1.<org.apache.batik.dom.util.HashTableStack: org.apache.batik.dom.util.HashTableStack$Link current>;

        goto label4;

     label2:
        $r2 = r7.<org.apache.batik.dom.util.HashTableStack$Link: org.apache.batik.dom.util.HashTable table>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label3;

        return r4;

     label3:
        r7 = r7.<org.apache.batik.dom.util.HashTableStack$Link: org.apache.batik.dom.util.HashTableStack$Link next>;

     label4:
        if r7 != null goto label2;

        return null;
    }
}
