public abstract class org.joda.time.base.AbstractPeriod extends java.lang.Object implements org.joda.time.ReadablePeriod
{

    protected void <init>()
    {
        org.joda.time.base.AbstractPeriod r0;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.joda.time.DurationFieldType[] getFieldTypes()
    {
        org.joda.time.DurationFieldType[] r1;
        org.joda.time.DurationFieldType $r2;
        org.joda.time.base.AbstractPeriod r0;
        int $i0, $i1, i2;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>();

        r1 = newarray (org.joda.time.DurationFieldType)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.DurationFieldType getFieldType(int)>(i2);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int[] getValues()
    {
        int[] r1;
        org.joda.time.base.AbstractPeriod r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>();

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label2;

        $i2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i3);

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int get(org.joda.time.DurationFieldType)
    {
        org.joda.time.DurationFieldType r1;
        org.joda.time.base.AbstractPeriod r0;
        int $i0, $i1, $i3;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        r1 := @parameter0: org.joda.time.DurationFieldType;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int indexOf(org.joda.time.DurationFieldType)>(r1);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>($i0);

        return $i1;
    }

    public boolean isSupported(org.joda.time.DurationFieldType)
    {
        org.joda.time.DurationFieldType r2;
        org.joda.time.base.AbstractPeriod r0;
        org.joda.time.PeriodType $r1;
        boolean $z0;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        r2 := @parameter0: org.joda.time.DurationFieldType;

        $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>();

        $z0 = virtualinvoke $r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>(r2);

        return $z0;
    }

    public int indexOf(org.joda.time.DurationFieldType)
    {
        org.joda.time.DurationFieldType r2;
        org.joda.time.base.AbstractPeriod r0;
        int $i0;
        org.joda.time.PeriodType $r1;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        r2 := @parameter0: org.joda.time.DurationFieldType;

        $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>();

        $i0 = virtualinvoke $r1.<org.joda.time.PeriodType: int indexOf(org.joda.time.DurationFieldType)>(r2);

        return $i0;
    }

    public org.joda.time.Period toPeriod()
    {
        org.joda.time.base.AbstractPeriod r1;
        org.joda.time.Period $r0;

        r1 := @this: org.joda.time.base.AbstractPeriod;

        $r0 = new org.joda.time.Period;

        specialinvoke $r0.<org.joda.time.Period: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public org.joda.time.MutablePeriod toMutablePeriod()
    {
        org.joda.time.base.AbstractPeriod r1;
        org.joda.time.MutablePeriod $r0;

        r1 := @this: org.joda.time.base.AbstractPeriod;

        $r0 = new org.joda.time.MutablePeriod;

        specialinvoke $r0.<org.joda.time.MutablePeriod: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.base.AbstractPeriod r0;
        org.joda.time.ReadablePeriod r2;
        org.joda.time.DurationFieldType $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.ReadablePeriod;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.joda.time.ReadablePeriod) r1;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>();

        $i1 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i5 = 0;

        $i2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>();

     label4:
        if i5 >= $i2 goto label7;

        $i3 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i5);

        $i4 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: int getValue(int)>(i5);

        if $i3 != $i4 goto label5;

        $r3 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.DurationFieldType getFieldType(int)>(i5);

        $r4 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: org.joda.time.DurationFieldType getFieldType(int)>(i5);

        if $r3 == $r4 goto label6;

     label5:
        return 0;

     label6:
        i5 = i5 + 1;

        goto label4;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.joda.time.base.AbstractPeriod r0;
        org.joda.time.DurationFieldType $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;

        r0 := @this: org.joda.time.base.AbstractPeriod;

        i5 = 17;

        i6 = 0;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>();

     label1:
        if i6 >= $i0 goto label2;

        $i1 = 27 * i5;

        $i2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i6);

        i7 = $i1 + $i2;

        $i3 = 27 * i7;

        $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.DurationFieldType getFieldType(int)>(i6);

        $i4 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i5 = $i3 + $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    public java.lang.String toString()
    {
        org.joda.time.base.AbstractPeriod r1;
        java.lang.String $r2;
        org.joda.time.format.PeriodFormatter $r0;

        r1 := @this: org.joda.time.base.AbstractPeriod;

        $r0 = staticinvoke <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter standard()>();

        $r2 = virtualinvoke $r0.<org.joda.time.format.PeriodFormatter: java.lang.String print(org.joda.time.ReadablePeriod)>(r1);

        return $r2;
    }

    public java.lang.String toString(org.joda.time.format.PeriodFormatter)
    {
        org.joda.time.base.AbstractPeriod r1;
        java.lang.String $r2, $r3;
        org.joda.time.format.PeriodFormatter r0;

        r1 := @this: org.joda.time.base.AbstractPeriod;

        r0 := @parameter0: org.joda.time.format.PeriodFormatter;

        if r0 != null goto label1;

        $r3 = virtualinvoke r1.<org.joda.time.base.AbstractPeriod: java.lang.String toString()>();

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: java.lang.String print(org.joda.time.ReadablePeriod)>(r1);

        return $r2;
    }
}
