final class org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.NiceHtmlRenderer
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode renderSequence(org.waveprotocol.wave.model.document.util.ReadableDocumentView, org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.client.editor.content.ContentNode, com.google.gwt.dom.client.Element, org.waveprotocol.wave.client.editor.extract.SelectionMatcher)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, r14;
        org.waveprotocol.wave.client.editor.extract.SelectionMatcher r2;
        org.waveprotocol.wave.common.logging.Logger $r5;
        org.waveprotocol.wave.model.document.util.ReadableDocumentView r13;
        org.waveprotocol.wave.client.editor.content.ContentElement $r8;
        java.lang.String $r9, $r11;
        boolean $z0;
        org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$1 r12;
        org.waveprotocol.wave.common.logging.LoggerBundle $r4;
        com.google.gwt.dom.client.Element r3;
        java.lang.StringBuilder $r6, $r7, $r10;
        com.google.gwt.dom.client.Node $r1, $r15;

        r12 := @this: org.waveprotocol.wave.client.editor.extract.PasteFormatRenderers$1;

        r13 := @parameter0: org.waveprotocol.wave.model.document.util.ReadableDocumentView;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        r14 := @parameter2: org.waveprotocol.wave.client.editor.content.ContentNode;

        r3 := @parameter3: com.google.gwt.dom.client.Element;

        r2 := @parameter4: org.waveprotocol.wave.client.editor.extract.SelectionMatcher;

        $z0 = r0 instanceof org.waveprotocol.wave.client.editor.content.ContentElement;

        if $z0 == 0 goto label1;

        $r4 = <org.waveprotocol.wave.client.editor.EditorStaticDeps: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.common.logging.LoggerBundle: org.waveprotocol.wave.common.logging.Logger trace()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deep cloning: ");

        $r8 = (org.waveprotocol.wave.client.editor.content.ContentElement) r0;

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getTagName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.common.logging.Logger: void log(java.lang.String)>($r11);

     label1:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: com.google.gwt.dom.client.Node getImplNodelet()>();

        if $r1 == null goto label2;

        $r15 = virtualinvoke $r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node cloneNode(boolean)>(1);

        goto label3;

     label2:
        $r15 = null;

     label3:
        if $r15 == null goto label4;

        virtualinvoke r3.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node appendChild(com.google.gwt.dom.client.Node)>($r15);

        virtualinvoke r2.<org.waveprotocol.wave.client.editor.extract.SelectionMatcher: void maybeNoteHtml(org.waveprotocol.wave.client.editor.content.ContentNode,com.google.gwt.dom.client.Node)>(r0, $r15);

        goto label5;

     label4:
        virtualinvoke r2.<org.waveprotocol.wave.client.editor.extract.SelectionMatcher: void noteSelectionInNode(org.waveprotocol.wave.client.editor.content.ContentNode,com.google.gwt.dom.client.Element,boolean)>(r0, r3, 1);

     label5:
        return r0;
    }
}
