public class thredds.crawlabledataset.filter.LogicalFilterComposer extends java.lang.Object
{

    public void <init>()
    {
        thredds.crawlabledataset.filter.LogicalFilterComposer r0;

        r0 := @this: thredds.crawlabledataset.filter.LogicalFilterComposer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static thredds.crawlabledataset.CrawlableDatasetFilter getAndFilter(thredds.crawlabledataset.CrawlableDatasetFilter, thredds.crawlabledataset.CrawlableDatasetFilter)
    {
        thredds.crawlabledataset.CrawlableDatasetFilter r1, r2;
        thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter $r0;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetFilter;

        r2 := @parameter1: thredds.crawlabledataset.CrawlableDatasetFilter;

        $r0 = new thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter;

        specialinvoke $r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter: void <init>(thredds.crawlabledataset.CrawlableDatasetFilter,thredds.crawlabledataset.CrawlableDatasetFilter)>(r1, r2);

        return $r0;
    }

    public static thredds.crawlabledataset.CrawlableDatasetFilter getOrFilter(thredds.crawlabledataset.CrawlableDatasetFilter, thredds.crawlabledataset.CrawlableDatasetFilter)
    {
        thredds.crawlabledataset.CrawlableDatasetFilter r1, r2;
        thredds.crawlabledataset.filter.LogicalFilterComposer$OrFilter $r0;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetFilter;

        r2 := @parameter1: thredds.crawlabledataset.CrawlableDatasetFilter;

        $r0 = new thredds.crawlabledataset.filter.LogicalFilterComposer$OrFilter;

        specialinvoke $r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$OrFilter: void <init>(thredds.crawlabledataset.CrawlableDatasetFilter,thredds.crawlabledataset.CrawlableDatasetFilter)>(r1, r2);

        return $r0;
    }

    public static thredds.crawlabledataset.CrawlableDatasetFilter getNotFilter(thredds.crawlabledataset.CrawlableDatasetFilter)
    {
        thredds.crawlabledataset.filter.LogicalFilterComposer$NotFilter $r0;
        thredds.crawlabledataset.CrawlableDatasetFilter r1;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetFilter;

        $r0 = new thredds.crawlabledataset.filter.LogicalFilterComposer$NotFilter;

        specialinvoke $r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$NotFilter: void <init>(thredds.crawlabledataset.CrawlableDatasetFilter)>(r1);

        return $r0;
    }
}
