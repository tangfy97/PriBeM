public class com.sun.jwt.resource.util.CompositeIcon extends java.lang.Object implements javax.swing.Icon
{
    private javax.swing.Icon[] icons;

    public transient void <init>(javax.swing.Icon[])
    {
        com.sun.jwt.resource.util.CompositeIcon r0;
        javax.swing.Icon[] r1;

        r0 := @this: com.sun.jwt.resource.util.CompositeIcon;

        r1 := @parameter0: javax.swing.Icon[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.jwt.resource.util.CompositeIcon: javax.swing.Icon[] icons> = r1;

        return;
    }

    public void paintIcon(java.awt.Component, java.awt.Graphics, int, int)
    {
        com.sun.jwt.resource.util.CompositeIcon r0;
        javax.swing.Icon r2;
        java.awt.Component r3;
        int i0, i1, i2, i3;
        java.awt.Graphics r4;
        javax.swing.Icon[] r1;

        r0 := @this: com.sun.jwt.resource.util.CompositeIcon;

        r3 := @parameter0: java.awt.Component;

        r4 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = r0.<com.sun.jwt.resource.util.CompositeIcon: javax.swing.Icon[] icons>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        interfaceinvoke r2.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r3, r4, i1, i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public int getIconWidth()
    {
        int i0, $i1, i2, i3;
        com.sun.jwt.resource.util.CompositeIcon r0;
        javax.swing.Icon r2;
        javax.swing.Icon[] r1;

        r0 := @this: com.sun.jwt.resource.util.CompositeIcon;

        i2 = 0;

        r1 = r0.<com.sun.jwt.resource.util.CompositeIcon: javax.swing.Icon[] icons>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        $i1 = interfaceinvoke r2.<javax.swing.Icon: int getIconWidth()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public int getIconHeight()
    {
        int i0, $i1, i2, i3;
        com.sun.jwt.resource.util.CompositeIcon r0;
        javax.swing.Icon r2;
        javax.swing.Icon[] r1;

        r0 := @this: com.sun.jwt.resource.util.CompositeIcon;

        i2 = 0;

        r1 = r0.<com.sun.jwt.resource.util.CompositeIcon: javax.swing.Icon[] icons>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        $i1 = interfaceinvoke r2.<javax.swing.Icon: int getIconHeight()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }
}
