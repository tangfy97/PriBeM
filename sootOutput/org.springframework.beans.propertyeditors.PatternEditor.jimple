public class org.springframework.beans.propertyeditors.PatternEditor extends java.beans.PropertyEditorSupport
{
    private final int flags;

    public void <init>()
    {
        org.springframework.beans.propertyeditors.PatternEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.PatternEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.PatternEditor: int flags> = 0;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.springframework.beans.propertyeditors.PatternEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.PatternEditor;

        i0 := @parameter0: int;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.PatternEditor: int flags> = i0;

        return;
    }

    public void setAsText(java.lang.String)
    {
        org.springframework.beans.propertyeditors.PatternEditor r0;
        int $i0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;

        r0 := @this: org.springframework.beans.propertyeditors.PatternEditor;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = r0.<org.springframework.beans.propertyeditors.PatternEditor: int flags>;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<org.springframework.beans.propertyeditors.PatternEditor: void setValue(java.lang.Object)>($r2);

        return;
    }

    public java.lang.String getAsText()
    {
        org.springframework.beans.propertyeditors.PatternEditor r0;
        java.lang.Object $r1;
        java.util.regex.Pattern r2;
        java.lang.String $r3;

        r0 := @this: org.springframework.beans.propertyeditors.PatternEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.PatternEditor: java.lang.Object getValue()>();

        r2 = (java.util.regex.Pattern) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Pattern: java.lang.String pattern()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }
}
