public abstract class org.apache.batik.dom.AbstractNotation extends org.apache.batik.dom.AbstractNode implements org.w3c.dom.Notation
{
    protected java.lang.String nodeName;
    protected java.lang.String publicId;
    protected java.lang.String systemId;

    public void <init>()
    {
        org.apache.batik.dom.AbstractNotation r0;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        specialinvoke r0.<org.apache.batik.dom.AbstractNode: void <init>()>();

        return;
    }

    public short getNodeType()
    {
        org.apache.batik.dom.AbstractNotation r0;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        return 12;
    }

    public void setNodeName(java.lang.String)
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName> = r1;

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        $r1 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName>;

        return $r1;
    }

    public java.lang.String getPublicId()
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        $r1 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId>;

        return $r1;
    }

    public void setPublicId(java.lang.String)
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId> = r1;

        return;
    }

    public java.lang.String getSystemId()
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        $r1 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId>;

        return $r1;
    }

    public void setSystemId(java.lang.String)
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId> = r1;

        return;
    }

    public void setTextContent(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.AbstractNotation r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected org.w3c.dom.Node export(org.w3c.dom.Node, org.apache.batik.dom.AbstractDocument)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractNotation r0, r3;
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Node export(org.w3c.dom.Node,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        r3 = (org.apache.batik.dom.AbstractNotation) r1;

        $r4 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName> = $r4;

        $r5 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId> = $r5;

        $r6 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId> = $r6;

        return r1;
    }

    protected org.w3c.dom.Node deepExport(org.w3c.dom.Node, org.apache.batik.dom.AbstractDocument)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractNotation r0, r3;
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Node deepExport(org.w3c.dom.Node,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        r3 = (org.apache.batik.dom.AbstractNotation) r1;

        $r4 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName> = $r4;

        $r5 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId> = $r5;

        $r6 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId>;

        r3.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId> = $r6;

        return r1;
    }

    protected org.w3c.dom.Node copyInto(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractNotation r0, r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Node copyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.AbstractNotation) r1;

        $r3 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName> = $r3;

        $r4 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId> = $r4;

        $r5 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId> = $r5;

        return r1;
    }

    protected org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractNotation r0, r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.apache.batik.dom.AbstractNotation;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.AbstractNotation) r1;

        $r3 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String nodeName> = $r3;

        $r4 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String publicId> = $r4;

        $r5 = r0.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId>;

        r2.<org.apache.batik.dom.AbstractNotation: java.lang.String systemId> = $r5;

        return r1;
    }
}
