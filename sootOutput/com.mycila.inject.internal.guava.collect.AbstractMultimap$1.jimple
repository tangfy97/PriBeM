class com.mycila.inject.internal.guava.collect.AbstractMultimap$1 extends com.mycila.inject.internal.guava.collect.Multimaps$Keys
{
    final com.mycila.inject.internal.guava.collect.AbstractMultimap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap)
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$1 r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractMultimap;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$1: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Multimaps$Keys: void <init>()>();

        return;
    }

    com.mycila.inject.internal.guava.collect.Multimap multimap()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$1 r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$1: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        return $r1;
    }
}
