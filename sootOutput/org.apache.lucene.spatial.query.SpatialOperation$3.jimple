final class org.apache.lucene.spatial.query.SpatialOperation$3 extends org.apache.lucene.spatial.query.SpatialOperation
{

    void <init>(java.lang.String, boolean, boolean, boolean)
    {
        org.apache.lucene.spatial.query.SpatialOperation$3 r0;
        java.lang.String r1;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation$3;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<org.apache.lucene.spatial.query.SpatialOperation: void <init>(java.lang.String,boolean,boolean,boolean)>(r1, z0, z1, z2);

        return;
    }

    public boolean evaluate(com.spatial4j.core.shape.Shape, com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r0, r1;
        org.apache.lucene.spatial.query.SpatialOperation$3 r4;
        com.spatial4j.core.shape.SpatialRelation $r2, $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.lucene.spatial.query.SpatialOperation$3;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        r1 := @parameter1: com.spatial4j.core.shape.Shape;

        $z0 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: boolean hasArea()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r3 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        if $r2 == $r3 goto label2;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }
}
