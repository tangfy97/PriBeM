class com.google.inject.internal.InjectorImpl$BindingsMultimap extends java.lang.Object
{
    final java.util.Map multimap;

    private void <init>()
    {
        java.util.HashMap $r1;
        com.google.inject.internal.InjectorImpl$BindingsMultimap r0;

        r0 := @this: com.google.inject.internal.InjectorImpl$BindingsMultimap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>();

        r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: java.util.Map multimap> = $r1;

        return;
    }

    void put(com.google.inject.TypeLiteral, com.google.inject.Binding)
    {
        com.google.inject.Binding r4;
        com.google.inject.internal.InjectorImpl$BindingsMultimap r0;
        java.util.ArrayList $r5;
        java.util.List r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.InjectorImpl$BindingsMultimap;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r4 := @parameter1: com.google.inject.Binding;

        $r2 = r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: java.util.Map multimap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.List) $r3;

        if r7 != null goto label1;

        $r5 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r7 = $r5;

        $r6 = r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: java.util.Map multimap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    java.util.List getAll(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.InjectorImpl$BindingsMultimap r0;
        java.util.List r4, $r7, $r8;
        java.util.Map $r2, $r5;
        java.lang.Object $r3, $r6;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.InjectorImpl$BindingsMultimap;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: java.util.Map multimap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $r5 = r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: java.util.Map multimap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.util.List) $r6;

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        goto label2;

     label1:
        $r8 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

     label2:
        return $r8;
    }

    void <init>(com.google.inject.internal.InjectorImpl$1)
    {
        com.google.inject.internal.InjectorImpl$1 r1;
        com.google.inject.internal.InjectorImpl$BindingsMultimap r0;

        r0 := @this: com.google.inject.internal.InjectorImpl$BindingsMultimap;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl$1;

        specialinvoke r0.<com.google.inject.internal.InjectorImpl$BindingsMultimap: void <init>()>();

        return;
    }
}
