class com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset extends com.mycila.inject.internal.guava.collect.ForwardingMultiset implements java.io.Serializable
{
    final com.mycila.inject.internal.guava.collect.Multiset delegate;
    transient java.util.Set elementSet;
    transient java.util.Set entrySet;
    private static final long serialVersionUID;

    void <init>(com.mycila.inject.internal.guava.collect.Multiset)
    {
        com.mycila.inject.internal.guava.collect.Multiset r1;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multiset;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMultiset: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate> = r1;

        return;
    }

    protected com.mycila.inject.internal.guava.collect.Multiset delegate()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate>;

        return $r1;
    }

    java.util.Set createElementSet()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;
        java.util.Set $r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multiset: java.util.Set elementSet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r3;
    }

    public java.util.Set elementSet()
    {
        java.util.Set r1, $r2;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: java.util.Set elementSet>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: java.util.Set createElementSet()>();

        r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: java.util.Set elementSet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public java.util.Set entrySet()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r2;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;
        java.util.Set r1, $r3, $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: java.util.Set entrySet>;

        if r1 != null goto label1;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Multiset: java.util.Set entrySet()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: java.util.Set entrySet> = $r4;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        return $r4;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r3;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multiset: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator)>($r2);

        return $r3;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int add(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int remove(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int setCount(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean setCount(java.lang.Object, int, int)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r1;
        int i0, i1;
        java.lang.Object r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected volatile java.util.Collection delegate()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: com.mycila.inject.internal.guava.collect.Multiset delegate()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.Multisets$UnmodifiableMultiset: long serialVersionUID> = 0L;

        return;
    }
}
