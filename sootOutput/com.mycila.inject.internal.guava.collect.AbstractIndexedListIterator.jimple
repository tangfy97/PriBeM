abstract class com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator extends com.mycila.inject.internal.guava.collect.UnmodifiableListIterator
{
    private final int size;
    private int position;

    protected abstract java.lang.Object get(int);

    protected void <init>(int)
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int i0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        i0 := @parameter0: int;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: void <init>(int,int)>(i0, 0);

        return;
    }

    protected void <init>(int, int)
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int i0, i1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: void <init>()>();

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: int checkPositionIndex(int,int)>(i0, i1);

        r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int size> = i1;

        r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position> = i0;

        return;
    }

    public final boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $i1 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position> = $i1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: java.lang.Object get(int)>($i0);

        return $r1;
    }

    public final int nextIndex()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        return $i0;
    }

    public final boolean hasPrevious()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.Object previous()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: boolean hasPrevious()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        $i1 = $i0 - 1;

        r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position> = $i1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: java.lang.Object get(int)>($i1);

        return $r1;
    }

    public final int previousIndex()
    {
        com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator r0;
        int $i0, $i1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: int position>;

        $i1 = $i0 - 1;

        return $i1;
    }
}
