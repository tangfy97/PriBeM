public abstract class org.apache.poi.hwpf.model.types.FFDataBaseAbstractType extends java.lang.Object
{
    protected long field_1_version;
    protected short field_2_bits;
    private static final org.apache.poi.util.BitField iType;
    public static final byte ITYPE_TEXT;
    public static final byte ITYPE_CHCK;
    public static final byte ITYPE_DROP;
    private static final org.apache.poi.util.BitField iRes;
    private static final org.apache.poi.util.BitField fOwnHelp;
    private static final org.apache.poi.util.BitField fOwnStat;
    private static final org.apache.poi.util.BitField fProt;
    private static final org.apache.poi.util.BitField iSize;
    private static final org.apache.poi.util.BitField iTypeTxt;
    public static final byte ITYPETXT_REG;
    public static final byte ITYPETXT_NUM;
    public static final byte ITYPETXT_DATE;
    public static final byte ITYPETXT_CURDATE;
    public static final byte ITYPETXT_CURTIME;
    protected static final byte ITYPETXT_CALC;
    private static final org.apache.poi.util.BitField fRecalc;
    private static final org.apache.poi.util.BitField fHasListBox;
    protected int field_3_cch;
    protected int field_4_hps;

    protected void <init>()
    {
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        long $l2;
        short $s4, $s6, $s8;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int i0, $i1, $i3, $i5, $i7, $i9, $i10;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $l2 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>(r1, $i1);

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version> = $l2;

        $i3 = 4 + i0;

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i3);

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s4;

        $i5 = 6 + i0;

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i5);

        $i9 = (int) $s6;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch> = $i9;

        $i7 = 8 + i0;

        $s8 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i7);

        $i10 = (int) $s8;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps> = $i10;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        long $l1;
        short $s3;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r1;
        int i0, $i2, $i4, $i5, $i6, $i7, $i8;

        r1 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $l1 = r1.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUInt(byte[],int,long)>(r0, $i2, $l1);

        $i4 = 4 + i0;

        $s3 = r1.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, $i4, $s3);

        $i6 = 6 + i0;

        $i5 = r1.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>(r0, $i6, $i5);

        $i8 = 8 + i0;

        $i7 = r1.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>(r0, $i8, $i7);

        return;
    }

    public byte[] serialize()
    {
        int $i0;
        byte[] r0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r1;

        r1 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $i0 = staticinvoke <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int getSize()>();

        r0 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: void serialize(byte[],int)>(r0, 0);

        return r0;
    }

    public static int getSize()
    {
        return 10;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        short $s3, $s4;
        byte $b2;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0, r4;
        int $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.poi.hwpf.model.types.FFDataBaseAbstractType) r1;

        $l1 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        $l0 = r4.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $s4 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $s3 = r4.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i9 = (int) $s4;

        $i10 = (int) $s3;

        if $i9 == $i10 goto label5;

        return 0;

     label5:
        $i6 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        $i5 = r4.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        if $i6 == $i5 goto label6;

        return 0;

     label6:
        $i8 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        $i7 = r4.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        if $i8 == $i7 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        long $l0, $l1, $l2, $l3;
        short $s5;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i4, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $l2 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        $l0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        $l1 = $l0 >>> 32;

        $l3 = $l2 ^ $l1;

        $i4 = (int) $l3;

        i11 = 31 + $i4;

        $i6 = 31 * i11;

        $s5 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i15 = (int) $s5;

        i12 = $i6 + $i15;

        $i8 = 31 * i12;

        $i7 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        i13 = $i8 + $i7;

        $i10 = 31 * i13;

        $i9 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        i14 = $i10 + $i9;

        return i14;
    }

    public java.lang.String toString()
    {
        byte $b2, $b3, $b4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29;
        long $l0;
        short $s1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r2;
        int $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r28;

        r2 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[FFDataBase]\n");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .version              = ");

        $r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $l0 = r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .bits                 = ");

        $r4 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $s1 = r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i7 = (int) $s1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r6 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iType                    = ");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte getIType()>();

        $i8 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iRes                     = ");

        $b3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte getIRes()>();

        $i9 = (int) $b3;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r10 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fOwnHelp                 = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isFOwnHelp()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r12 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fOwnStat                 = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isFOwnStat()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fProt                    = ");

        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isFProt()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r16 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iSize                    = ");

        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isISize()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r18 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iTypeTxt                 = ");

        $b4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte getITypeTxt()>();

        $i10 = (int) $b4;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r20 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fRecalc                  = ");

        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isFRecalc()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r22 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fHasListBox              = ");

        $z5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: boolean isFHasListBox()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .cch                  = ");

        $r24 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $i5 = r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .hps                  = ");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $i6 = r2.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/FFDataBase]");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;
    }

    public long getVersion()
    {
        long $l0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $l0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version>;

        return $l0;
    }

    public void setVersion(long)
    {
        long l0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: long field_1_version> = l0;

        return;
    }

    public short getBits()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        return $s0;
    }

    public void setBits(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = s0;

        return;
    }

    public int getCch()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch>;

        return $i0;
    }

    public void setCch(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_3_cch> = i0;

        return;
    }

    public int getHps()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps>;

        return $i0;
    }

    public void setHps(int)
    {
        int i0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: int field_4_hps> = i0;

        return;
    }

    public void setIType(byte)
    {
        org.apache.poi.util.BitField $r1;
        short $s1, $s3;
        byte b0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iType>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s3;

        return;
    }

    public byte getIType()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iType>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setIRes(byte)
    {
        org.apache.poi.util.BitField $r1;
        short $s1, $s3;
        byte b0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iRes>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s3;

        return;
    }

    public byte getIRes()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iRes>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFOwnHelp(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnHelp>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isFOwnHelp()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnHelp>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFOwnStat(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnStat>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isFOwnStat()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnStat>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFProt(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fProt>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isFProt()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fProt>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setISize(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iSize>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isISize()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iSize>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setITypeTxt(byte)
    {
        org.apache.poi.util.BitField $r1;
        short $s1, $s3;
        byte b0;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iTypeTxt>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s3;

        return;
    }

    public byte getITypeTxt()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iTypeTxt>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFRecalc(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fRecalc>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isFRecalc()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fRecalc>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFHasListBox(boolean)
    {
        short $s0, $s2;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fHasListBox>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $s2 = (short) $i1;

        r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits> = $s2;

        return;
    }

    public boolean isFHasListBox()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.FFDataBaseAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FFDataBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fHasListBox>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: short field_2_bits>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i1;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_CALC> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_CURTIME> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_CURDATE> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_DATE> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_NUM> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPETXT_REG> = 0;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPE_DROP> = 2;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPE_CHCK> = 1;

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: byte ITYPE_TEXT> = 0;

        $r9 = new org.apache.poi.util.BitField;

        specialinvoke $r9.<org.apache.poi.util.BitField: void <init>(int)>(3);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iType> = $r9;

        $r10 = new org.apache.poi.util.BitField;

        specialinvoke $r10.<org.apache.poi.util.BitField: void <init>(int)>(124);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iRes> = $r10;

        $r11 = new org.apache.poi.util.BitField;

        specialinvoke $r11.<org.apache.poi.util.BitField: void <init>(int)>(128);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnHelp> = $r11;

        $r12 = new org.apache.poi.util.BitField;

        specialinvoke $r12.<org.apache.poi.util.BitField: void <init>(int)>(256);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fOwnStat> = $r12;

        $r13 = new org.apache.poi.util.BitField;

        specialinvoke $r13.<org.apache.poi.util.BitField: void <init>(int)>(512);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fProt> = $r13;

        $r14 = new org.apache.poi.util.BitField;

        specialinvoke $r14.<org.apache.poi.util.BitField: void <init>(int)>(1024);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iSize> = $r14;

        $r15 = new org.apache.poi.util.BitField;

        specialinvoke $r15.<org.apache.poi.util.BitField: void <init>(int)>(14336);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField iTypeTxt> = $r15;

        $r16 = new org.apache.poi.util.BitField;

        specialinvoke $r16.<org.apache.poi.util.BitField: void <init>(int)>(16384);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fRecalc> = $r16;

        $r17 = new org.apache.poi.util.BitField;

        $i1 = (int) 32768;

        specialinvoke $r17.<org.apache.poi.util.BitField: void <init>(int)>($i1);

        <org.apache.poi.hwpf.model.types.FFDataBaseAbstractType: org.apache.poi.util.BitField fHasListBox> = $r17;

        return;
    }
}
