abstract class org.apache.lucene.util.fst.FSTEnum extends java.lang.Object
{
    protected final org.apache.lucene.util.fst.FST fst;
    protected org.apache.lucene.util.fst.FST$Arc[] arcs;
    protected java.lang.Object[] output;
    protected final java.lang.Object NO_OUTPUT;
    protected final org.apache.lucene.util.fst.FST$BytesReader fstReader;
    protected final org.apache.lucene.util.fst.FST$Arc scratchArc;
    protected int upto;
    protected int targetLength;
    static final boolean $assertionsDisabled;

    protected void <init>(org.apache.lucene.util.fst.FST)
    {
        java.lang.Object[] $r2, $r3, $r11;
        org.apache.lucene.util.fst.FST$BytesReader $r6;
        org.apache.lucene.util.fst.Outputs $r7;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r4, $r9;
        org.apache.lucene.util.fst.FST r5;
        java.lang.Object $r8, $r10;
        org.apache.lucene.util.fst.FST$Arc[] $r1;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        r5 := @parameter0: org.apache.lucene.util.fst.FST;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.lucene.util.fst.FST$Arc)[10];

        r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = $r1;

        $r2 = newarray (java.lang.Object)[10];

        $r3 = (java.lang.Object[]) $r2;

        r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output> = $r3;

        $r4 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r4.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc scratchArc> = $r4;

        r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst> = r5;

        $r6 = virtualinvoke r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader> = $r6;

        $r7 = r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object NO_OUTPUT> = $r8;

        $r9 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>(0);

        virtualinvoke r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r9);

        $r11 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $r10 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object NO_OUTPUT>;

        $r11[0] = $r10;

        return;
    }

    protected abstract int getTargetLabel();

    protected abstract int getCurrentLabel();

    protected abstract void setCurrentLabel(int);

    protected abstract void grow();

    protected final void rewindPrefix() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r4, $r8;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r1, $r3, $r6, $r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.lucene.util.fst.FST $r2, $r5;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i0 != 0 goto label1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = 1;

        $r5 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r6 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>(0);

        $r7 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>(1);

        $r8 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r6, $r7, $r8);

        return;

     label1:
        i1 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = 1;

     label2:
        $i2 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i2 >= i1 goto label5;

        $i5 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int targetLength>;

        $i4 = $i3 + 1;

        if $i5 > $i4 goto label5;

        $i6 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getCurrentLabel()>();

        $i7 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        i8 = $i6 - $i7;

        if i8 >= 0 goto label3;

        goto label5;

     label3:
        if i8 <= 0 goto label4;

        $i11 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r1 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i11);

        $r2 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i12 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i13 = $i12 - 1;

        $r3 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i13);

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r3, $r1, $r4);

        goto label5;

     label4:
        $i9 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i10 = $i9 + 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i10;

        goto label2;

     label5:
        return;
    }

    protected void doNext() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r4, $r10;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r2, $r5, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.util.fst.FST$Arc[] $r1, $r3;
        boolean $z0;
        org.apache.lucene.util.fst.FST $r6, $r7;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i0 != 0 goto label1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = 1;

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r8 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>(0);

        $r9 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>(1);

        $r10 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r7.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r8, $r9, $r10);

        goto label3;

     label1:
        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i1 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z0 == 0 goto label2;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i4 = $i3 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i4;

        $i5 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i5 != 0 goto label1;

        return;

     label2:
        $r6 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r3 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i2 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r5 = $r3[$i2];

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r6.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r5, $r4);

     label3:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushFirst()>();

        return;
    }

    protected void doSeekCeil() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r3, $r14, $r20, $r22, $r35, r48;
        java.lang.StringBuilder $r39, $r40, $r41, $r42, $r43, $r44, $r50;
        java.lang.Object[] $r7, $r11, $r28, $r32;
        long $l36;
        java.lang.AssertionError $r49, $r51, $r52, $r53;
        org.apache.lucene.util.fst.Outputs $r10, $r31;
        java.lang.String $r45;
        org.apache.lucene.util.fst.FST $r2, $r5, $r6, $r13, $r16, $r18, $r21, $r24, $r26, $r27, $r34, $r47;
        org.apache.lucene.util.fst.FSTEnum r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.apache.lucene.util.fst.FST$BytesReader $r1, $r4, $r15, $r17, $r23, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, i41, i42, $i43, i44, i45, i46, $i47, $i48, $i50, $i52, $i54;
        java.lang.Object $r8, $r9, $r12, $r29, $r30, $r33;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void rewindPrefix()>();

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r48 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i0);

        i42 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

     label01:
        $i43 = r48.<org.apache.lucene.util.fst.FST$Arc: int bytesPerArc>;

        if $i43 == 0 goto label19;

        $i14 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i50 = (int) -1;

        if $i14 == $i50 goto label19;

        $r16 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r17 = virtualinvoke $r16.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        i44 = r48.<org.apache.lucene.util.fst.FST$Arc: int arcIdx>;

        $i15 = r48.<org.apache.lucene.util.fst.FST$Arc: int numArcs>;

        i45 = $i15 - 1;

        i46 = 0;

        z8 = 0;

     label02:
        if i44 > i45 goto label06;

        $i35 = i44 + i45;

        i46 = $i35 >>> 1;

        $l36 = r48.<org.apache.lucene.util.fst.FST$Arc: long posArcsStart>;

        virtualinvoke $r17.<org.apache.lucene.util.fst.FST$BytesReader: void setPosition(long)>($l36);

        $i37 = r48.<org.apache.lucene.util.fst.FST$Arc: int bytesPerArc>;

        $i38 = $i37 * i46;

        $i39 = $i38 + 1;

        virtualinvoke $r17.<org.apache.lucene.util.fst.FST$BytesReader: void skipBytes(int)>($i39);

        $r47 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i40 = virtualinvoke $r47.<org.apache.lucene.util.fst.FST: int readLabel(org.apache.lucene.store.DataInput)>($r17);

        i41 = $i40 - i42;

        if i41 >= 0 goto label03;

        i44 = i46 + 1;

        goto label05;

     label03:
        if i41 <= 0 goto label04;

        i45 = i46 - 1;

        goto label05;

     label04:
        z8 = 1;

        goto label06;

     label05:
        goto label02;

     label06:
        if z8 == 0 goto label10;

        $i26 = i46 - 1;

        r48.<org.apache.lucene.util.fst.FST$Arc: int arcIdx> = $i26;

        $r26 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        virtualinvoke $r26.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r17);

        $z6 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z6 != 0 goto label07;

        $i34 = r48.<org.apache.lucene.util.fst.FST$Arc: int arcIdx>;

        if $i34 == i46 goto label07;

        $r49 = new java.lang.AssertionError;

        specialinvoke $r49.<java.lang.AssertionError: void <init>()>();

        throw $r49;

     label07:
        $z7 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z7 != 0 goto label08;

        $i32 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i32 == i42 goto label08;

        $r51 = new java.lang.AssertionError;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc.label=");

        $i33 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs targetLabel=");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mid=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i46);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);

        throw $r51;

     label08:
        $r32 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i29 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r27 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r31 = $r27.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r28 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i27 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i28 = $i27 - 1;

        $r30 = $r28[$i28];

        $r29 = r48.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r33 = virtualinvoke $r31.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r30, $r29);

        $r32[$i29] = $r33;

        $i52 = (int) -1;

        if i42 != $i52 goto label09;

        return;

     label09:
        $i30 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i30);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $r34 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i31 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r35 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i31);

        $r36 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        r48 = virtualinvoke $r34.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r35, $r36);

        i42 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        goto label01;

     label10:
        $i16 = r48.<org.apache.lucene.util.fst.FST$Arc: int numArcs>;

        if i44 != $i16 goto label15;

        $i19 = r48.<org.apache.lucene.util.fst.FST$Arc: int numArcs>;

        $i20 = $i19 - 2;

        r48.<org.apache.lucene.util.fst.FST$Arc: int arcIdx> = $i20;

        $r21 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        virtualinvoke $r21.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r17);

        $z3 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label11;

        $z5 = virtualinvoke r48.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z5 != 0 goto label11;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>()>();

        throw $r52;

     label11:
        $i21 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i22 = $i21 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i22;

     label12:
        $i47 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i47 != 0 goto label13;

        return;

     label13:
        $i23 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r22 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i23);

        $z4 = virtualinvoke $r22.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z4 != 0 goto label14;

        $r24 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r23 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r24.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r22, $r23);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushFirst()>();

        return;

     label14:
        $i24 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i25 = $i24 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i25;

        goto label12;

     label15:
        $r20 = r48;

        if i44 <= i45 goto label16;

        $i48 = i44;

        goto label17;

     label16:
        $i48 = i45;

     label17:
        $i17 = $i48 - 1;

        $r20.<org.apache.lucene.util.fst.FST$Arc: int arcIdx> = $i17;

        $r18 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        virtualinvoke $r18.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r17);

        $z2 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label18;

        $i18 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i18 > i42 goto label18;

        $r53 = new java.lang.AssertionError;

        specialinvoke $r53.<java.lang.AssertionError: void <init>()>();

        throw $r53;

     label18:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushFirst()>();

        return;

     label19:
        $i1 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i1 != i42 goto label21;

        $r11 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i11 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r6 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r10 = $r6.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i9 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i10 = $i9 - 1;

        $r9 = $r7[$i10];

        $r8 = r48.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r12 = virtualinvoke $r10.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r11[$i11] = $r12;

        $i54 = (int) -1;

        if i42 != $i54 goto label20;

        return;

     label20:
        $i12 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i12);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $r13 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i13 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r14 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i13);

        $r15 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        r48 = virtualinvoke $r13.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r14, $r15);

        i42 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        goto label01;

     label21:
        $i2 = r48.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i2 <= i42 goto label22;

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushFirst()>();

        return;

     label22:
        $z0 = virtualinvoke r48.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z0 == 0 goto label26;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i4 = $i3 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i4;

     label23:
        $i5 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i5 != 0 goto label24;

        return;

     label24:
        $i6 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r3 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i6);

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z1 != 0 goto label25;

        $r5 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r3, $r4);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushFirst()>();

        return;

     label25:
        $i7 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i8 = $i7 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i8;

        goto label23;

     label26:
        $r2 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r48, $r1);

        goto label01;
    }

    protected void doSeekFloor() throws java.io.IOException
    {
        java.lang.StringBuilder $r27, $r28, $r29, $r30, $r54, $r55, $r56, $r57, $r58, $r59, $r65, $r68;
        java.lang.Object[] $r13, $r17, $r43, $r47;
        long $l41;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$BytesReader $r1, $r3, $r7, $r8, $r10, $r21, $r23, $r37, $r39, $r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, i46, i47, $i48, i49, i50, i51, $i52, $i54, $i56, $i58, $i60;
        java.lang.Object $r14, $r15, $r18, $r44, $r45, $r48;
        org.apache.lucene.util.fst.FST$Arc $r6, $r20, $r34, $r36, $r50, r63;
        java.lang.AssertionError $r64, $r66, $r67, $r69;
        org.apache.lucene.util.fst.Outputs $r16, $r46;
        java.lang.String $r31, $r60;
        org.apache.lucene.util.fst.FST $r2, $r4, $r5, $r9, $r11, $r12, $r19, $r22, $r24, $r32, $r35, $r38, $r40, $r41, $r42, $r49, $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void rewindPrefix()>();

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r63 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i0);

        i47 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

     label01:
        $i48 = r63.<org.apache.lucene.util.fst.FST$Arc: int bytesPerArc>;

        if $i48 == 0 goto label21;

        $i17 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i54 = (int) -1;

        if $i17 == $i54 goto label21;

        $r22 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r23 = virtualinvoke $r22.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        i49 = r63.<org.apache.lucene.util.fst.FST$Arc: int arcIdx>;

        $i18 = r63.<org.apache.lucene.util.fst.FST$Arc: int numArcs>;

        i50 = $i18 - 1;

        i51 = 0;

        z7 = 0;

     label02:
        if i49 > i50 goto label06;

        $i40 = i49 + i50;

        i51 = $i40 >>> 1;

        $l41 = r63.<org.apache.lucene.util.fst.FST$Arc: long posArcsStart>;

        virtualinvoke $r23.<org.apache.lucene.util.fst.FST$BytesReader: void setPosition(long)>($l41);

        $i42 = r63.<org.apache.lucene.util.fst.FST$Arc: int bytesPerArc>;

        $i43 = $i42 * i51;

        $i44 = $i43 + 1;

        virtualinvoke $r23.<org.apache.lucene.util.fst.FST$BytesReader: void skipBytes(int)>($i44);

        $r62 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i45 = virtualinvoke $r62.<org.apache.lucene.util.fst.FST: int readLabel(org.apache.lucene.store.DataInput)>($r23);

        i46 = $i45 - i47;

        if i46 >= 0 goto label03;

        i49 = i51 + 1;

        goto label05;

     label03:
        if i46 <= 0 goto label04;

        i50 = i51 - 1;

        goto label05;

     label04:
        z7 = 1;

        goto label06;

     label05:
        goto label02;

     label06:
        if z7 == 0 goto label10;

        $i31 = i51 - 1;

        r63.<org.apache.lucene.util.fst.FST$Arc: int arcIdx> = $i31;

        $r41 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        virtualinvoke $r41.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r23);

        $z5 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z5 != 0 goto label07;

        $i39 = r63.<org.apache.lucene.util.fst.FST$Arc: int arcIdx>;

        if $i39 == i51 goto label07;

        $r64 = new java.lang.AssertionError;

        specialinvoke $r64.<java.lang.AssertionError: void <init>()>();

        throw $r64;

     label07:
        $z6 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z6 != 0 goto label08;

        $i37 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i37 == i47 goto label08;

        $r66 = new java.lang.AssertionError;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc.label=");

        $i38 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs targetLabel=");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i47);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mid=");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.lang.AssertionError: void <init>(java.lang.Object)>($r60);

        throw $r66;

     label08:
        $r47 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i34 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r42 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r46 = $r42.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r43 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i32 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i33 = $i32 - 1;

        $r45 = $r43[$i33];

        $r44 = r63.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r48 = virtualinvoke $r46.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r45, $r44);

        $r47[$i34] = $r48;

        $i56 = (int) -1;

        if i47 != $i56 goto label09;

        return;

     label09:
        $i35 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i35);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $r49 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i36 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r50 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i36);

        $r51 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        r63 = virtualinvoke $r49.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r50, $r51);

        i47 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        goto label01;

     label10:
        $i58 = (int) -1;

        if i50 != $i58 goto label16;

     label11:
        $r35 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i23 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i24 = $i23 - 1;

        $r36 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i24);

        $r37 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r35.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r36, r63, $r37);

        $i25 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i25 >= i47 goto label14;

     label12:
        $z4 = virtualinvoke r63.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z4 != 0 goto label13;

        $r38 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i30 = virtualinvoke $r38.<org.apache.lucene.util.fst.FST: int readNextArcLabel(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r23);

        if $i30 >= i47 goto label13;

        $r40 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r39 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r40.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r39);

        goto label12;

     label13:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushLast()>();

        return;

     label14:
        $i26 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i27 = $i26 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i27;

        $i28 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i28 != 0 goto label15;

        return;

     label15:
        i47 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        $i29 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r63 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i29);

        goto label11;

     label16:
        $r34 = r63;

        if i49 <= i50 goto label17;

        $i52 = i50;

        goto label18;

     label17:
        $i52 = i49;

     label18:
        $i19 = $i52 - 1;

        $r34.<org.apache.lucene.util.fst.FST$Arc: int arcIdx> = $i19;

        $r24 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        virtualinvoke $r24.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextRealArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r23);

        $z2 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label19;

        $z3 = virtualinvoke r63.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z3 != 0 goto label19;

        $r32 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i22 = virtualinvoke $r32.<org.apache.lucene.util.fst.FST: int readNextArcLabel(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r23);

        if $i22 > i47 goto label19;

        $r67 = new java.lang.AssertionError;

        specialinvoke $r67.<java.lang.AssertionError: void <init>()>();

        throw $r67;

     label19:
        $z8 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z8 != 0 goto label20;

        $i20 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i20 < i47 goto label20;

        $r69 = new java.lang.AssertionError;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc.label=");

        $i21 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs targetLabel=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i47);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.AssertionError: void <init>(java.lang.Object)>($r31);

        throw $r69;

     label20:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushLast()>();

        return;

     label21:
        $i1 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i1 != i47 goto label23;

        $r17 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i14 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r12 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r16 = $r12.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r13 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i12 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i13 = $i12 - 1;

        $r15 = $r13[$i13];

        $r14 = r63.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r18 = virtualinvoke $r16.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r15, $r14);

        $r17[$i14] = $r18;

        $i60 = (int) -1;

        if i47 != $i60 goto label22;

        return;

     label22:
        $i15 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i15);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $r19 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i16 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r20 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i16);

        $r21 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        r63 = virtualinvoke $r19.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r20, $r21);

        i47 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        goto label01;

     label23:
        $i2 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i2 <= i47 goto label29;

     label24:
        $r5 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i4 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i5 = $i4 - 1;

        $r6 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i5);

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r5.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r6, r63, $r7);

        $i6 = r63.<org.apache.lucene.util.fst.FST$Arc: int label>;

        if $i6 >= i47 goto label27;

     label25:
        $z1 = virtualinvoke r63.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z1 != 0 goto label26;

        $r9 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r8 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $i11 = virtualinvoke $r9.<org.apache.lucene.util.fst.FST: int readNextArcLabel(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r8);

        if $i11 >= i47 goto label26;

        $r11 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r10 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r11.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r10);

        goto label25;

     label26:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushLast()>();

        return;

     label27:
        $i7 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i8 = $i7 - 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i8;

        $i9 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i9 != 0 goto label28;

        return;

     label28:
        i47 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        $i10 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r63 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i10);

        goto label24;

     label29:
        $z0 = virtualinvoke r63.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z0 != 0 goto label31;

        $r2 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $i3 = virtualinvoke $r2.<org.apache.lucene.util.fst.FST: int readNextArcLabel(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r1);

        if $i3 <= i47 goto label30;

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushLast()>();

        return;

     label30:
        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r3 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r4.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r63, $r3);

        goto label01;

     label31:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void pushLast()>();

        return;
    }

    protected boolean doSeekExact() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r2;
        java.lang.Object[] $r7, $r11;
        org.apache.lucene.util.fst.Outputs $r10;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r4, $r5, $r14, r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9;
        org.apache.lucene.util.fst.FST $r1, $r3, $r6, $r13;
        java.lang.Object $r8, $r9, $r12;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void rewindPrefix()>();

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i1 = $i0 - 1;

        r15 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i1);

        i7 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

     label1:
        $r3 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i2 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r4 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i2);

        $r5 = virtualinvoke $r3.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc findTargetArc(int,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(i7, r15, $r4, $r2);

        if $r5 != null goto label2;

        $r13 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i6 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r14 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i6);

        virtualinvoke $r13.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r15, $r14, $r2);

        return 0;

     label2:
        $r11 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i5 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r6 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r10 = $r6.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i4 = $i3 - 1;

        $r9 = $r7[$i4];

        $r8 = $r5.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r12 = virtualinvoke $r10.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r11[$i5] = $r12;

        $i9 = (int) -1;

        if i7 != $i9 goto label3;

        return 1;

     label3:
        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>(i7);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        i7 = virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: int getTargetLabel()>();

        r15 = $r5;

        goto label1;
    }

    private void incr()
    {
        java.lang.Object[] $r2, $r3, $r4, $r5, r9;
        org.apache.lucene.util.fst.FSTEnum r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.apache.lucene.util.fst.FST$Arc[] $r1, $r6, $r7, r8;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.util.fst.FSTEnum: int upto> = $i1;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void grow()>();

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i3 = lengthof $r1;

        $i2 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i3 > $i2 goto label1;

        $i11 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i13 = 1 + $i11;

        $i12 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i14 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i13, $i12);

        r8 = newarray (org.apache.lucene.util.fst.FST$Arc)[$i14];

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r6 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i15 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r8, 0, $i15);

        r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = r8;

     label1:
        $r2 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i5 = lengthof $r2;

        $i4 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        if $i5 > $i4 goto label2;

        $i6 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i8 = 1 + $i6;

        $i7 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i8, $i7);

        $r3 = newarray (java.lang.Object)[$i9];

        r9 = (java.lang.Object[]) $r3;

        $r5 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i10 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r9, 0, $i10);

        r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output> = r9;

     label2:
        return;
    }

    private void pushFirst() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r3;
        java.lang.Object[] $r7, $r10;
        java.lang.AssertionError $r14;
        org.apache.lucene.util.fst.Outputs $r9;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r2, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.apache.lucene.util.fst.FST$Arc[] $r1;
        boolean $z0;
        org.apache.lucene.util.fst.FST $r4, $r8;
        java.lang.Object $r11, $r12, $r13;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r6 = $r1[$i0];

        $z0 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r6 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r8 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r9 = $r8.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r10 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i4 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i5 = $i4 - 1;

        $r11 = $r10[$i5];

        $r12 = r6.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r13 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r7[$i3] = $r13;

        $i6 = r6.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i8 = (int) -1;

        if $i6 != $i8 goto label2;

        goto label3;

     label2:
        $i1 = r6.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i1);

        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $i2 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r2 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i2);

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r3 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        virtualinvoke $r4.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r6, $r2, $r3);

        r6 = $r2;

        goto label1;

     label3:
        return;
    }

    private void pushLast() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r4;
        java.lang.Object[] $r7, $r10;
        java.lang.AssertionError $r14;
        org.apache.lucene.util.fst.Outputs $r9;
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r3, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.apache.lucene.util.fst.FST$Arc[] $r1;
        boolean $z0;
        org.apache.lucene.util.fst.FST $r2, $r8;
        java.lang.Object $r11, $r12, $r13;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i0 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        r6 = $r1[$i0];

        $z0 = <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r6 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $i2 = r6.<org.apache.lucene.util.fst.FST$Arc: int label>;

        virtualinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void setCurrentLabel(int)>($i2);

        $r7 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i3 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r8 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $r9 = $r8.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r10 = r0.<org.apache.lucene.util.fst.FSTEnum: java.lang.Object[] output>;

        $i4 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $i5 = $i4 - 1;

        $r11 = $r10[$i5];

        $r12 = r6.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r13 = virtualinvoke $r9.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r7[$i3] = $r13;

        $i6 = r6.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i8 = (int) -1;

        if $i6 != $i8 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: void incr()>();

        $r2 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST fst>;

        $i1 = r0.<org.apache.lucene.util.fst.FSTEnum: int upto>;

        $r3 = specialinvoke r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i1);

        $r4 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        r6 = virtualinvoke $r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readLastTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r6, $r3, $r4);

        goto label1;

     label3:
        return;
    }

    private org.apache.lucene.util.fst.FST$Arc getArc(int)
    {
        org.apache.lucene.util.fst.FSTEnum r0;
        org.apache.lucene.util.fst.FST$Arc $r2, $r4, $r5;
        int i0;
        org.apache.lucene.util.fst.FST$Arc[] $r1, $r3, $r6;

        r0 := @this: org.apache.lucene.util.fst.FSTEnum;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        $r6 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r5 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r5.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r6[i0] = $r5;

     label1:
        $r3 = r0.<org.apache.lucene.util.fst.FSTEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r4 = $r3[i0];

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/fst/FSTEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.fst.FSTEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
