public class org.apache.http.impl.conn.DefaultHttpResponseParser extends org.apache.http.impl.io.AbstractMessageParser
{
    private final org.apache.commons.logging.Log log;
    private final org.apache.http.HttpResponseFactory responseFactory;
    private final org.apache.http.util.CharArrayBuffer lineBuf;

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams)
    {
        org.apache.http.message.LineParser r2;
        org.apache.http.impl.conn.DefaultHttpResponseParser r0;
        java.lang.IllegalArgumentException $r8;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.HttpResponseFactory r6;
        org.apache.http.util.CharArrayBuffer $r7;
        org.apache.http.params.HttpParams r3;
        java.lang.Class $r4;
        org.apache.commons.logging.Log $r5;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpResponseParser;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.message.LineParser;

        r6 := @parameter2: org.apache.http.HttpResponseFactory;

        r3 := @parameter3: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>(r1, r2, r3);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r4);

        r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.commons.logging.Log log> = $r5;

        if r6 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Response factory may not be null");

        throw $r8;

     label1:
        r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.HttpResponseFactory responseFactory> = r6;

        $r7 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r7.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf> = $r7;

        return;
    }

    protected org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.ProtocolException $r26;
        org.apache.http.NoHttpResponseException $r24;
        org.apache.http.StatusLine $r20;
        boolean $z0, $z1, $z2;
        org.apache.http.message.LineParser $r7, $r19;
        java.lang.StringBuilder $r13, $r16, $r27;
        org.apache.http.io.SessionInputBuffer r2;
        int $i0, $i1, i2, $i4, $i6;
        java.lang.String $r15, $r17;
        org.apache.http.impl.conn.DefaultHttpResponseParser r0;
        org.apache.http.HttpResponseFactory $r21;
        org.apache.http.util.CharArrayBuffer $r1, $r3, $r5, $r6, $r9, $r14, $r18;
        org.apache.http.HttpResponse $r22;
        org.apache.commons.logging.Log $r10, $r12;
        org.apache.http.message.ParserCursor $r25;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpResponseParser;

        r2 := @parameter0: org.apache.http.io.SessionInputBuffer;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void clear()>();

        $r3 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i0 = interfaceinvoke r2.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>($r3);

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        if i2 != 0 goto label2;

        $r24 = new org.apache.http.NoHttpResponseException;

        specialinvoke $r24.<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>("The target server failed to respond");

        throw $r24;

     label2:
        $r25 = new org.apache.http.message.ParserCursor;

        $r5 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i1 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r25.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i1);

        $r7 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.message.LineParser lineParser>;

        $r6 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $z0 = interfaceinvoke $r7.<org.apache.http.message.LineParser: boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r6, $r25);

        if $z0 == 0 goto label3;

        goto label7;

     label3:
        $i6 = (int) -1;

        if $i0 == $i6 goto label4;

        $r9 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $z1 = virtualinvoke r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: boolean reject(org.apache.http.util.CharArrayBuffer,int)>($r9, i2);

        if $z1 == 0 goto label5;

     label4:
        $r26 = new org.apache.http.ProtocolException;

        specialinvoke $r26.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("The server failed to respond with a valid HTTP response");

        throw $r26;

     label5:
        $r10 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label6;

        $r12 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.commons.logging.Log log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Garbage in response: ");

        $r14 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $r15 = virtualinvoke $r14.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        $r19 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.message.LineParser lineParser>;

        $r18 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $r20 = interfaceinvoke $r19.<org.apache.http.message.LineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r18, $r25);

        $r21 = r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.HttpResponseFactory responseFactory>;

        $r22 = interfaceinvoke $r21.<org.apache.http.HttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)>($r20, null);

        return $r22;
    }

    protected boolean reject(org.apache.http.util.CharArrayBuffer, int)
    {
        org.apache.http.util.CharArrayBuffer r1;
        int i0;
        org.apache.http.impl.conn.DefaultHttpResponseParser r0;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpResponseParser;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        return 0;
    }

    protected volatile org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) throws java.io.IOException, org.apache.http.HttpException, org.apache.http.ParseException
    {
        org.apache.http.HttpResponse $r2;
        org.apache.http.impl.conn.DefaultHttpResponseParser r0;
        org.apache.http.io.SessionInputBuffer r1;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpResponseParser;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        $r2 = virtualinvoke r0.<org.apache.http.impl.conn.DefaultHttpResponseParser: org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer)>(r1);

        return $r2;
    }
}
