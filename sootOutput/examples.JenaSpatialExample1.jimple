public class examples.JenaSpatialExample1 extends java.lang.Object
{
    static org.slf4j.Logger log;
    private static final java.lang.String LUCENE_INDEX_PATH;
    private static final java.io.File LUCENE_INDEX_DIR;
    private static final java.lang.String LUCENE_TDB_PATH;
    private static final java.io.File LUCENE_TDB_DIR;
    private static final java.lang.String SOLR_DATA_PATH;
    private static final java.io.File SOLR_DATA_DIR;

    public void <init>()
    {
        examples.JenaSpatialExample1 r0;

        r0 := @this: examples.JenaSpatialExample1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void main(java.lang.String[]) throws java.io.IOException
    {
        com.hp.hpl.jena.query.Dataset $r1;
        java.lang.String[] r2;
        java.io.File $r0;

        r2 := @parameter0: java.lang.String[];

        $r0 = <examples.JenaSpatialExample1: java.io.File LUCENE_INDEX_DIR>;

        $r1 = staticinvoke <examples.JenaSpatialExample1: com.hp.hpl.jena.query.Dataset initInMemoryDatasetWithLuceneSpatitalIndex(java.io.File)>($r0);

        staticinvoke <examples.JenaSpatialExample1: void loadData(com.hp.hpl.jena.query.Dataset,java.lang.String)>($r1, "src/test/resources/geoarq-data-1.ttl");

        staticinvoke <examples.JenaSpatialExample1: void queryData(com.hp.hpl.jena.query.Dataset)>($r1);

        staticinvoke <examples.JenaSpatialExample1: void destroy(com.hp.hpl.jena.query.Dataset)>($r1);

        return;
    }

    private static void destroy(com.hp.hpl.jena.query.Dataset)
    {
        org.apache.jena.query.spatial.SpatialIndex r4;
        com.hp.hpl.jena.sparql.util.Context $r1;
        java.io.File $r5, $r6;
        com.hp.hpl.jena.query.Dataset r0;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.util.Symbol $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.query.Dataset;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r2 = <org.apache.jena.query.spatial.SpatialQuery: com.hp.hpl.jena.sparql.util.Symbol spatialIndex>;

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r2);

        r4 = (org.apache.jena.query.spatial.SpatialIndex) $r3;

        $z0 = r4 instanceof org.apache.jena.query.spatial.SpatialIndexLucene;

        if $z0 == 0 goto label1;

        $r5 = <examples.JenaSpatialExample1: java.io.File LUCENE_INDEX_DIR>;

        staticinvoke <examples.JenaSpatialExample1: void deleteOldFiles(java.io.File)>($r5);

        $r6 = <examples.JenaSpatialExample1: java.io.File LUCENE_TDB_DIR>;

        staticinvoke <examples.JenaSpatialExample1: void deleteOldFiles(java.io.File)>($r6);

     label1:
        return;
    }

    private static void emptyAndDeleteDirectory(java.io.File)
    {
        int i0, i1;
        java.io.File[] $r1;
        java.io.File r0, r2;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 == null goto label4;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        staticinvoke <examples.JenaSpatialExample1: void emptyAndDeleteDirectory(java.io.File)>(r2);

        goto label3;

     label2:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }

    private static com.hp.hpl.jena.query.Dataset initInMemoryDatasetWithLuceneSpatitalIndex(java.io.File) throws java.io.IOException
    {
        com.hp.hpl.jena.query.Dataset $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        staticinvoke <org.apache.jena.query.spatial.SpatialQuery: void init()>();

        staticinvoke <examples.JenaSpatialExample1: void deleteOldFiles(java.io.File)>(r0);

        virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        $r1 = staticinvoke <examples.JenaSpatialExample1: com.hp.hpl.jena.query.Dataset createDatasetByCode(java.io.File)>(r0);

        return $r1;
    }

    private static com.hp.hpl.jena.query.Dataset initTDBDatasetWithLuceneSpatitalIndex(java.io.File, java.io.File) throws java.io.IOException
    {
        com.hp.hpl.jena.query.Dataset $r2;
        java.io.File r0, r1;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        staticinvoke <org.apache.jena.query.spatial.SpatialQuery: void init()>();

        staticinvoke <examples.JenaSpatialExample1: void deleteOldFiles(java.io.File)>(r0);

        staticinvoke <examples.JenaSpatialExample1: void deleteOldFiles(java.io.File)>(r1);

        virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        virtualinvoke r1.<java.io.File: boolean mkdir()>();

        $r2 = staticinvoke <examples.JenaSpatialExample1: com.hp.hpl.jena.query.Dataset createDatasetByCode(java.io.File,java.io.File)>(r0, r1);

        return $r2;
    }

    private static void deleteOldFiles(java.io.File)
    {
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <examples.JenaSpatialExample1: void emptyAndDeleteDirectory(java.io.File)>(r0);

     label1:
        return;
    }

    private static com.hp.hpl.jena.query.Dataset createDatasetByCode(java.io.File) throws java.io.IOException
    {
        com.hp.hpl.jena.query.Dataset $r0, $r2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        $r0 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset createMem()>();

        $r2 = staticinvoke <examples.JenaSpatialExample1: com.hp.hpl.jena.query.Dataset joinDataset(com.hp.hpl.jena.query.Dataset,java.io.File)>($r0, r1);

        return $r2;
    }

    private static com.hp.hpl.jena.query.Dataset createDatasetByCode(java.io.File, java.io.File) throws java.io.IOException
    {
        com.hp.hpl.jena.query.Dataset $r2, $r4;
        java.lang.String $r1;
        java.io.File r0, r3;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.TDBFactory: com.hp.hpl.jena.query.Dataset createDataset(java.lang.String)>($r1);

        $r4 = staticinvoke <examples.JenaSpatialExample1: com.hp.hpl.jena.query.Dataset joinDataset(com.hp.hpl.jena.query.Dataset,java.io.File)>($r2, r3);

        return $r4;
    }

    private static com.hp.hpl.jena.query.Dataset joinDataset(com.hp.hpl.jena.query.Dataset, java.io.File) throws java.io.IOException
    {
        com.hp.hpl.jena.rdf.model.Resource $r1, $r2, $r3, $r4, $r5, $r6;
        java.io.File r7;
        org.apache.jena.query.spatial.EntityDefinition $r0;
        com.hp.hpl.jena.query.Dataset r9, $r10;
        org.apache.lucene.store.FSDirectory $r8;

        r9 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r7 := @parameter1: java.io.File;

        $r0 = new org.apache.jena.query.spatial.EntityDefinition;

        specialinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: void <init>(java.lang.String,java.lang.String)>("entityField", "geoField");

        virtualinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: void setSpatialContextFactory(java.lang.String)>("com.spatial4j.core.context.jts.JtsSpatialContextFactory");

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#latitude_1");

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#longitude_1");

        virtualinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: boolean addSpatialPredicatePair(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>($r1, $r2);

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#latitude_2");

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#longitude_2");

        virtualinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: boolean addSpatialPredicatePair(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>($r3, $r4);

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#wkt_1");

        virtualinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: boolean addWKTPredicate(com.hp.hpl.jena.rdf.model.Resource)>($r5);

        $r6 = staticinvoke <com.hp.hpl.jena.rdf.model.ResourceFactory: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://localhost/jena_example/#wkt_2");

        virtualinvoke $r0.<org.apache.jena.query.spatial.EntityDefinition: boolean addWKTPredicate(com.hp.hpl.jena.rdf.model.Resource)>($r6);

        $r8 = staticinvoke <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory open(java.io.File)>(r7);

        $r10 = staticinvoke <org.apache.jena.query.spatial.SpatialDatasetFactory: com.hp.hpl.jena.query.Dataset createLucene(com.hp.hpl.jena.query.Dataset,org.apache.lucene.store.Directory,org.apache.jena.query.spatial.EntityDefinition)>(r9, $r8, $r0);

        return $r10;
    }

    public static com.hp.hpl.jena.query.Dataset createLuceneAssembler()
    {
        com.hp.hpl.jena.query.Dataset $r1;
        org.slf4j.Logger $r0;

        $r0 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Construct lucene spatial dataset using an assembler description");

        $r1 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset assemble(java.lang.String,java.lang.String)>("src/test/resources/spatial-config.ttl", "http://localhost/jena_example/#spatial_dataset");

        return $r1;
    }

    public static com.hp.hpl.jena.query.Dataset createSolrAssembler()
    {
        com.hp.hpl.jena.query.Dataset $r1;
        org.slf4j.Logger $r0;

        $r0 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Construct solr spatial dataset using an assembler description");

        $r1 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset assemble(java.lang.String,java.lang.String)>("src/test/resources/spatial-solr-config.ttl", "http://localhost/jena_example/#spatial_dataset");

        return $r1;
    }

    public static void loadData(com.hp.hpl.jena.query.Dataset, java.lang.String)
    {
        java.lang.Throwable $r9;
        org.slf4j.Logger $r0, $r6;
        java.lang.Object[] $r5;
        java.lang.Double $r7;
        long $l0, $l1, $l2;
        com.hp.hpl.jena.query.ReadWrite $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.query.Dataset r1;
        java.lang.String r4, $r8;
        double $d0, d1;

        r1 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r4 := @parameter1: java.lang.String;

        $r0 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Start loading");

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r2 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r2);

     label1:
        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void read(com.hp.hpl.jena.rdf.model.Model,java.lang.String)>($r3, r4);

        interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: void commit()>();

     label2:
        interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        interfaceinvoke r1.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r9;

     label5:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l1 - $l0;

        $d0 = (double) $l2;

        d1 = $d0 / 1000000.0;

        $r6 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Finish loading - %.2fms", $r5);

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r8);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void queryData(com.hp.hpl.jena.query.Dataset)
    {
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r23, $r24, $r25, $r26, $r38, $r39, $r40, $r41, $r53, $r54, $r55, $r56, $r68, $r69, $r70, $r71, $r83, $r84, $r85, $r86, $r98, $r99, $r100, $r101, $r113, $r114, $r115, $r116, $r128, $r129, $r130, $r131;
        com.hp.hpl.jena.query.QueryExecution $r14, $r29, $r44, $r59, $r74, $r89, $r104, $r119, $r134;
        java.lang.Object[] $r15, $r30, $r45, $r60, $r75, $r90, $r105, $r120, $r135;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26;
        java.io.PrintStream $r3, $r19, $r34, $r49, $r64, $r79, $r94, $r109, $r124;
        org.slf4j.Logger $r0, $r16, $r31, $r46, $r61, $r76, $r91, $r106, $r121, $r136;
        com.hp.hpl.jena.query.ReadWrite $r7, $r22, $r37, $r52, $r67, $r82, $r97, $r112, $r127;
        com.hp.hpl.jena.query.Dataset r6;
        java.lang.Throwable $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147;
        java.lang.Double $r17, $r32, $r47, $r62, $r77, $r92, $r107, $r122, $r137;
        java.lang.String $r2, $r5, $r12, $r18, $r21, $r27, $r33, $r36, $r42, $r48, $r51, $r57, $r63, $r66, $r72, $r78, $r81, $r87, $r93, $r96, $r102, $r108, $r111, $r117, $r123, $r126, $r132, $r138;
        com.hp.hpl.jena.query.Query $r13, $r28, $r43, $r58, $r73, $r88, $r103, $r118, $r133;
        java.lang.String[] $r1, $r4, $r20, $r35, $r50, $r65, $r80, $r95, $r110, $r125;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, d10, d11, d12, d13, d14, d15, d16, d17;

        r6 := @parameter0: com.hp.hpl.jena.query.Dataset;

        $r0 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("START");

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "PREFIX : <http://example/>";

        $r1[1] = "PREFIX spatial: <http://jena.apache.org/spatial#>";

        $r1[2] = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>";

        $r2 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("nearby");

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "SELECT * ";

        $r4[1] = " { ?s spatial:nearby (51.3000 -2.71000 100.0 \'miles\') ;";

        $r4[2] = "      rdfs:label ?label";

        $r4[3] = " }";

        $r5 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r4);

        $r7 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r7);

     label01:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r12);

        $r14 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r13, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r13, $r14);

     label02:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label05;

     label03:
        $r147 := @caughtexception;

     label04:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r147;

     label05:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l1 - $l0;

        $d0 = (double) $l2;

        d9 = $d0 / 1000000.0;

        $r16 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r15 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d9);

        $r15[0] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r15);

        interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r18);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("withinCircle");

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $r20 = newarray (java.lang.String)[4];

        $r20[0] = "SELECT * ";

        $r20[1] = " { ?s spatial:withinCircle (51.3000 -2.71000 100.0 \'miles\' 3) ;";

        $r20[2] = "      rdfs:label ?label";

        $r20[3] = " }";

        $r21 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r20);

        $r22 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r22);

     label06:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r27);

        $r29 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r28, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r28, $r29);

     label07:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label10;

     label08:
        $r146 := @caughtexception;

     label09:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r146;

     label10:
        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        $l5 = $l4 - $l3;

        $d1 = (double) $l5;

        d10 = $d1 / 1000000.0;

        $r31 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r30 = newarray (java.lang.Object)[1];

        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d10);

        $r30[0] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r30);

        interfaceinvoke $r31.<org.slf4j.Logger: void info(java.lang.String)>($r33);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("withinBox");

        $l6 = staticinvoke <java.lang.System: long nanoTime()>();

        $r35 = newarray (java.lang.String)[4];

        $r35[0] = "SELECT * ";

        $r35[1] = " { ?s spatial:withinBox (51.1000 -4.0000 51.4000 0.0000 -1) ;";

        $r35[2] = "      rdfs:label ?label";

        $r35[3] = " }";

        $r36 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r35);

        $r37 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r37);

     label11:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r42);

        $r44 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r43, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r43, $r44);

     label12:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label15;

     label13:
        $r145 := @caughtexception;

     label14:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r145;

     label15:
        $l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $l8 = $l7 - $l6;

        $d2 = (double) $l8;

        d11 = $d2 / 1000000.0;

        $r46 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r45 = newarray (java.lang.Object)[1];

        $r47 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d11);

        $r45[0] = $r47;

        $r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r45);

        interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>($r48);

        $r49 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("interesectBox");

        $l9 = staticinvoke <java.lang.System: long nanoTime()>();

        $r50 = newarray (java.lang.String)[4];

        $r50[0] = "SELECT * ";

        $r50[1] = " { ?s spatial:intersectBox (51.1000 -4.0000 51.4000 0.0000) ;";

        $r50[2] = "      rdfs:label ?label";

        $r50[3] = " }";

        $r51 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r50);

        $r52 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r52);

     label16:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r57);

        $r59 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r58, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r58, $r59);

     label17:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label20;

     label18:
        $r144 := @caughtexception;

     label19:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r144;

     label20:
        $l10 = staticinvoke <java.lang.System: long nanoTime()>();

        $l11 = $l10 - $l9;

        $d3 = (double) $l11;

        d12 = $d3 / 1000000.0;

        $r61 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r60 = newarray (java.lang.Object)[1];

        $r62 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d12);

        $r60[0] = $r62;

        $r63 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r60);

        interfaceinvoke $r61.<org.slf4j.Logger: void info(java.lang.String)>($r63);

        $r64 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("north");

        $l12 = staticinvoke <java.lang.System: long nanoTime()>();

        $r65 = newarray (java.lang.String)[4];

        $r65[0] = "SELECT * ";

        $r65[1] = " { ?s spatial:north (51.3000 0.0000) ;";

        $r65[2] = "      rdfs:label ?label";

        $r65[3] = " }";

        $r66 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r65);

        $r67 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r67);

     label21:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        $r73 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r72);

        $r74 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r73, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r73, $r74);

     label22:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label25;

     label23:
        $r143 := @caughtexception;

     label24:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r143;

     label25:
        $l13 = staticinvoke <java.lang.System: long nanoTime()>();

        $l14 = $l13 - $l12;

        $d4 = (double) $l14;

        d13 = $d4 / 1000000.0;

        $r76 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r75 = newarray (java.lang.Object)[1];

        $r77 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d13);

        $r75[0] = $r77;

        $r78 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r75);

        interfaceinvoke $r76.<org.slf4j.Logger: void info(java.lang.String)>($r78);

        $r79 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>("south");

        $l15 = staticinvoke <java.lang.System: long nanoTime()>();

        $r80 = newarray (java.lang.String)[4];

        $r80[0] = "SELECT * ";

        $r80[1] = " { ?s spatial:south (51.3000 0.0000) ;";

        $r80[2] = "      rdfs:label ?label";

        $r80[3] = " }";

        $r81 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r80);

        $r82 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r82);

     label26:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        $r88 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r87);

        $r89 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r88, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r88, $r89);

     label27:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label30;

     label28:
        $r142 := @caughtexception;

     label29:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r142;

     label30:
        $l16 = staticinvoke <java.lang.System: long nanoTime()>();

        $l17 = $l16 - $l15;

        $d5 = (double) $l17;

        d14 = $d5 / 1000000.0;

        $r91 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r90 = newarray (java.lang.Object)[1];

        $r92 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d14);

        $r90[0] = $r92;

        $r93 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r90);

        interfaceinvoke $r91.<org.slf4j.Logger: void info(java.lang.String)>($r93);

        $r94 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>("east");

        $l18 = staticinvoke <java.lang.System: long nanoTime()>();

        $r95 = newarray (java.lang.String)[4];

        $r95[0] = "SELECT * ";

        $r95[1] = " { ?s spatial:east (51.3000 0.0000) ;";

        $r95[2] = "      rdfs:label ?label";

        $r95[3] = " }";

        $r96 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r95);

        $r97 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r97);

     label31:
        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        $r103 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r102);

        $r104 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r103, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r103, $r104);

     label32:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label35;

     label33:
        $r141 := @caughtexception;

     label34:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r141;

     label35:
        $l19 = staticinvoke <java.lang.System: long nanoTime()>();

        $l20 = $l19 - $l18;

        $d6 = (double) $l20;

        d15 = $d6 / 1000000.0;

        $r106 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r105 = newarray (java.lang.Object)[1];

        $r107 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d15);

        $r105[0] = $r107;

        $r108 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r105);

        interfaceinvoke $r106.<org.slf4j.Logger: void info(java.lang.String)>($r108);

        $r109 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r109.<java.io.PrintStream: void println(java.lang.String)>("west");

        $l21 = staticinvoke <java.lang.System: long nanoTime()>();

        $r110 = newarray (java.lang.String)[4];

        $r110[0] = "SELECT * ";

        $r110[1] = " { ?s spatial:west (51.3000 0.0000) ;";

        $r110[2] = "      rdfs:label ?label";

        $r110[3] = " }";

        $r111 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r110);

        $r112 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r112);

     label36:
        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        $r118 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r117);

        $r119 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r118, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r118, $r119);

     label37:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label40;

     label38:
        $r140 := @caughtexception;

     label39:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r140;

     label40:
        $l22 = staticinvoke <java.lang.System: long nanoTime()>();

        $l23 = $l22 - $l21;

        $d7 = (double) $l23;

        d16 = $d7 / 1000000.0;

        $r121 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r120 = newarray (java.lang.Object)[1];

        $r122 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d16);

        $r120[0] = $r122;

        $r123 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r120);

        interfaceinvoke $r121.<org.slf4j.Logger: void info(java.lang.String)>($r123);

        $r124 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r124.<java.io.PrintStream: void println(java.lang.String)>("west2");

        $l24 = staticinvoke <java.lang.System: long nanoTime()>();

        $r125 = newarray (java.lang.String)[4];

        $r125[0] = "SELECT * ";

        $r125[1] = " { ?s spatial:withinBox (51.1 -180.0000 51.9 0.0000) ;";

        $r125[2] = "      rdfs:label ?label";

        $r125[3] = " }";

        $r126 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>($r125);

        $r127 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void begin(com.hp.hpl.jena.query.ReadWrite)>($r127);

     label41:
        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        $r133 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>($r132);

        $r134 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset)>($r133, r6);

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void executeQuery(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.QueryExecution)>($r133, $r134);

     label42:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        goto label45;

     label43:
        $r139 := @caughtexception;

     label44:
        interfaceinvoke r6.<com.hp.hpl.jena.query.Dataset: void end()>();

        throw $r139;

     label45:
        $l25 = staticinvoke <java.lang.System: long nanoTime()>();

        $l26 = $l25 - $l24;

        $d8 = (double) $l26;

        d17 = $d8 / 1000000.0;

        $r136 = <examples.JenaSpatialExample1: org.slf4j.Logger log>;

        $r135 = newarray (java.lang.Object)[1];

        $r137 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d17);

        $r135[0] = $r137;

        $r138 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FINISH - %.2fms", $r135);

        interfaceinvoke $r136.<org.slf4j.Logger: void info(java.lang.String)>($r138);

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Throwable from label38 to label39 with label38;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label43 to label44 with label43;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.io.File $r1, $r2, $r3;

        <examples.JenaSpatialExample1: java.lang.String SOLR_DATA_PATH> = "src/test/resources/SolrHome/SolrARQCollection/data";

        <examples.JenaSpatialExample1: java.lang.String LUCENE_TDB_PATH> = "target/test/TDB";

        <examples.JenaSpatialExample1: java.lang.String LUCENE_INDEX_PATH> = "target/test/TDBDatasetWithLuceneSpatialIndex";

        staticinvoke <org.apache.jena.atlas.logging.Log: boolean setLog4j()>();

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("JenaSpatialExample");

        <examples.JenaSpatialExample1: org.slf4j.Logger log> = $r0;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("target/test/TDBDatasetWithLuceneSpatialIndex");

        <examples.JenaSpatialExample1: java.io.File LUCENE_INDEX_DIR> = $r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("target/test/TDB");

        <examples.JenaSpatialExample1: java.io.File LUCENE_TDB_DIR> = $r2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("src/test/resources/SolrHome/SolrARQCollection/data");

        <examples.JenaSpatialExample1: java.io.File SOLR_DATA_DIR> = $r3;

        return;
    }
}
