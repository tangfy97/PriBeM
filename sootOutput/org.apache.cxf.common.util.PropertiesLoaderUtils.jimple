public final class org.apache.cxf.common.util.PropertiesLoaderUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.common.util.PropertiesLoaderUtils r0;

        r0 := @this: org.apache.cxf.common.util.PropertiesLoaderUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Properties loadAllProperties(java.lang.String, java.lang.ClassLoader) throws java.io.IOException
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.util.Properties $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        $r2 = staticinvoke <org.apache.cxf.common.util.PropertiesLoaderUtils: java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)>(r0, r1, null, null, null);

        return $r2;
    }

    public static java.util.Properties loadAllProperties(java.lang.String, java.lang.ClassLoader, java.util.logging.Logger, java.util.logging.Level, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        java.util.Properties $r0;
        java.io.BufferedInputStream $r8;
        java.util.Enumeration $r3;
        java.net.URL r5;
        java.util.logging.Logger r6;
        java.util.logging.Level r9;
        java.lang.Object $r4;
        java.lang.ClassLoader r1;
        java.lang.String r2, r10, $r11;
        boolean $z0;
        java.io.InputStream $r7, r13;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        r6 := @parameter2: java.util.logging.Logger;

        r9 := @parameter3: java.util.logging.Level;

        r10 := @parameter4: java.lang.String;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r2);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.net.URL) $r4;

        if r6 == null goto label2;

        $r11 = virtualinvoke r5.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>(r9, r10, $r11);

     label2:
        r13 = null;

     label3:
        $r7 = virtualinvoke r5.<java.net.URL: java.io.InputStream openStream()>();

        r13 = $r7;

        $r8 = new java.io.BufferedInputStream;

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        virtualinvoke $r0.<java.util.Properties: void loadFromXML(java.io.InputStream)>($r8);

     label4:
        if $r7 == null goto label8;

        virtualinvoke $r7.<java.io.InputStream: void close()>();

        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        if r13 == null goto label7;

        virtualinvoke r13.<java.io.InputStream: void close()>();

     label7:
        throw $r12;

     label8:
        goto label1;

     label9:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.util.Collection getPropertyNames(java.util.Properties, java.lang.String)
    {
        java.util.Properties r1;
        java.util.Enumeration $r2;
        java.util.ArrayList $r0;
        java.lang.Object $r3;
        java.lang.String r4, r5, $r6;
        boolean $z0, $z1;

        r1 := @parameter0: java.util.Properties;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r3;

        $r6 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return $r0;
    }
}
