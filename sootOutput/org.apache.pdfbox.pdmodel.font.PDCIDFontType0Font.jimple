public class org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font extends org.apache.pdfbox.pdmodel.font.PDCIDFont
{

    public void <init>()
    {
        org.apache.pdfbox.cos.COSName $r1, $r2;
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: void <init>()>();

        $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font: org.apache.pdfbox.cos.COSDictionary font>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, $r1);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        return;
    }

    public java.awt.Font getawtFont() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary r3;
        org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font r0;
        java.awt.Font r8;
        org.apache.pdfbox.pdmodel.common.PDStream $r4;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor $r1;
        org.apache.pdfbox.cos.COSDictionary $r6;
        java.lang.String $r2, $r7;
        org.apache.pdfbox.pdmodel.font.PDType1CFont $r5;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>();

        r8 = null;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: java.lang.String getFontName()>();

        if $r2 == null goto label1;

        $r7 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: java.lang.String getFontName()>();

        r8 = staticinvoke <org.apache.pdfbox.pdmodel.font.FontManager: java.awt.Font getAwtFont(java.lang.String)>($r7);

     label1:
        if r8 != null goto label2;

        $z0 = $r1 instanceof org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary;

        if $z0 == 0 goto label2;

        r3 = (org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary) $r1;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()>();

        if $r4 == null goto label2;

        $r5 = new org.apache.pdfbox.pdmodel.font.PDType1CFont;

        $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font: org.apache.pdfbox.cos.COSDictionary font>;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r6);

        r8 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDType1CFont: java.awt.Font getawtFont()>();

     label2:
        return r8;
    }
}
