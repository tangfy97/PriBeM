public class org.apache.poi.hwpf.HWPFOldDocument extends org.apache.poi.hwpf.HWPFDocumentCore
{
    private org.apache.poi.hwpf.model.TextPieceTable tpt;
    private java.lang.StringBuilder _text;

    public void <init>(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1;
        org.apache.poi.hwpf.HWPFOldDocument r0;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        specialinvoke r0.<org.apache.poi.hwpf.HWPFOldDocument: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode, org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode r1;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r2;
        org.apache.poi.hwpf.HWPFOldDocument r0;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke r0.<org.apache.poi.hwpf.HWPFOldDocument: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r1);

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13, $r22, $r31, $r36, $r41, $r50, $r51, r62;
        org.apache.poi.hwpf.model.FileInformationBlock $r10, $r14, $r17, $r19, $r21, $r30, $r35, $r40, $r49;
        java.lang.Exception $r59;
        org.apache.poi.poifs.filesystem.DirectoryNode r1;
        java.lang.StringBuilder $r26, $r28, $r46, $r58;
        org.apache.poi.hwpf.model.FibBase $r11, $r15, $r18, $r20, $r23, $r32, $r37, $r42, $r52;
        java.lang.StringBuffer $r9;
        java.lang.String $r44;
        org.apache.poi.hwpf.model.TextPiece $r24, r61;
        org.apache.poi.hwpf.model.OldSectionTable $r39;
        boolean $z0, $z1, z2;
        org.apache.poi.hwpf.model.OldPAPBinTable $r34;
        java.util.List $r55;
        org.apache.poi.hwpf.model.PAPBinTable $r47;
        org.apache.poi.hwpf.model.TextPieceTable $r16, $r25, $r27, $r33, $r38, $r43, $r53, $r54;
        org.apache.poi.hwpf.model.OldCHPBinTable $r29;
        org.apache.poi.hwpf.model.CHPBinTable $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.apache.poi.hwpf.model.PieceDescriptor $r12;
        java.util.Iterator $r56;
        org.apache.poi.hwpf.model.ComplexFileTable $r48, r60;
        org.apache.poi.hwpf.HWPFOldDocument r0;
        java.lang.Object $r57;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        specialinvoke r0.<org.apache.poi.hwpf.HWPFDocumentCore: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r1);

        $r2 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, 136);

        $r3 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r3, 140);

        $r4 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r4, 184);

        $r5 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r5, 188);

        $r6 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r6, 192);

        $r7 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r7, 196);

        $r8 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r8, 352);

        r60 = null;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r11 = virtualinvoke $r10.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $z0 = virtualinvoke $r11.<org.apache.poi.hwpf.model.FibBase: boolean isFComplex()>();

        if $z0 == 0 goto label3;

        $r48 = new org.apache.poi.hwpf.model.ComplexFileTable;

        $r50 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r51 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r49 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r52 = virtualinvoke $r49.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i17 = virtualinvoke $r52.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        specialinvoke $r48.<org.apache.poi.hwpf.model.ComplexFileTable: void <init>(byte[],byte[],int,int)>($r50, $r51, $i6, $i17);

        r60 = $r48;

        $r53 = virtualinvoke $r48.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable getTextPieceTable()>();

        r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt> = $r53;

        $r54 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        $r55 = virtualinvoke $r54.<org.apache.poi.hwpf.model.TextPieceTable: java.util.List getTextPieces()>();

        $r56 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r56.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r57 = interfaceinvoke $r56.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.apache.poi.hwpf.model.TextPiece) $r57;

        $r58 = virtualinvoke r61.<org.apache.poi.hwpf.model.TextPiece: java.lang.StringBuilder getStringBuilder()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r58);

        goto label1;

     label2:
        goto label4;

     label3:
        $r12 = new org.apache.poi.hwpf.model.PieceDescriptor;

        $r13 = newarray (byte)[8];

        $r13[0] = 0;

        $r13[1] = 0;

        $r13[2] = 0;

        $r13[3] = 0;

        $r13[4] = 0;

        $r13[5] = 127;

        $r13[6] = 0;

        $r13[7] = 0;

        specialinvoke $r12.<org.apache.poi.hwpf.model.PieceDescriptor: void <init>(byte[],int)>($r13, 0);

        $r14 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r15 = virtualinvoke $r14.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i7 = virtualinvoke $r15.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        virtualinvoke $r12.<org.apache.poi.hwpf.model.PieceDescriptor: void setFilePosition(int)>($i7);

        $r16 = new org.apache.poi.hwpf.model.TextPieceTable;

        specialinvoke $r16.<org.apache.poi.hwpf.model.TextPieceTable: void <init>()>();

        r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt> = $r16;

        $r17 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r18 = virtualinvoke $r17.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i8 = virtualinvoke $r18.<org.apache.poi.hwpf.model.FibBase: int getFcMac()>();

        $r19 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r20 = virtualinvoke $r19.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i9 = virtualinvoke $r20.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $i10 = $i8 - $i9;

        r62 = newarray (byte)[$i10];

        $r22 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r21 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r23 = virtualinvoke $r21.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i11 = virtualinvoke $r23.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $i12 = lengthof r62;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, $i11, r62, 0, $i12);

        $r24 = new org.apache.poi.hwpf.model.TextPiece;

        $i13 = lengthof r62;

        specialinvoke $r24.<org.apache.poi.hwpf.model.TextPiece: void <init>(int,int,byte[],org.apache.poi.hwpf.model.PieceDescriptor)>(0, $i13, r62, $r12);

        $r25 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        virtualinvoke $r25.<org.apache.poi.hwpf.model.TextPieceTable: void add(org.apache.poi.hwpf.model.TextPiece)>($r24);

        $r26 = virtualinvoke $r24.<org.apache.poi.hwpf.model.TextPiece: java.lang.StringBuilder getStringBuilder()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r26);

     label4:
        $r27 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        $r28 = virtualinvoke $r27.<org.apache.poi.hwpf.model.TextPieceTable: java.lang.StringBuilder getText()>();

        r0.<org.apache.poi.hwpf.HWPFOldDocument: java.lang.StringBuilder _text> = $r28;

        $r29 = new org.apache.poi.hwpf.model.OldCHPBinTable;

        $r31 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r30 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r32 = virtualinvoke $r30.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i14 = virtualinvoke $r32.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $r33 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        specialinvoke $r29.<org.apache.poi.hwpf.model.OldCHPBinTable: void <init>(byte[],int,int,int,org.apache.poi.hwpf.model.TextPieceTable)>($r31, $i2, $i3, $i14, $r33);

        r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.CHPBinTable _cbt> = $r29;

        $r34 = new org.apache.poi.hwpf.model.OldPAPBinTable;

        $r36 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r35 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r37 = virtualinvoke $r35.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i15 = virtualinvoke $r37.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $r38 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        specialinvoke $r34.<org.apache.poi.hwpf.model.OldPAPBinTable: void <init>(byte[],int,int,int,org.apache.poi.hwpf.model.TextPieceTable)>($r36, $i4, $i5, $i15, $r38);

        r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.PAPBinTable _pbt> = $r34;

        $r39 = new org.apache.poi.hwpf.model.OldSectionTable;

        $r41 = r0.<org.apache.poi.hwpf.HWPFOldDocument: byte[] _mainStream>;

        $r40 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r42 = virtualinvoke $r40.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i16 = virtualinvoke $r42.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $r43 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        specialinvoke $r39.<org.apache.poi.hwpf.model.OldSectionTable: void <init>(byte[],int,int,int,org.apache.poi.hwpf.model.TextPieceTable)>($r41, $i0, $i1, $i16, $r43);

        r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.SectionTable _st> = $r39;

        z2 = 0;

     label5:
        $r44 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.poi.hwpf.preserveBinTables");

        z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r44);

     label6:
        goto label8;

     label7:
        $r59 := @caughtexception;

     label8:
        if z2 != 0 goto label9;

        $r45 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.CHPBinTable _cbt>;

        virtualinvoke $r45.<org.apache.poi.hwpf.model.CHPBinTable: void rebuild(org.apache.poi.hwpf.model.ComplexFileTable)>(r60);

        $r47 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.PAPBinTable _pbt>;

        $r46 = r0.<org.apache.poi.hwpf.HWPFOldDocument: java.lang.StringBuilder _text>;

        virtualinvoke $r47.<org.apache.poi.hwpf.model.PAPBinTable: void rebuild(java.lang.StringBuilder,org.apache.poi.hwpf.model.ComplexFileTable)>($r46, r60);

     label9:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public org.apache.poi.hwpf.usermodel.Range getOverallRange()
    {
        org.apache.poi.hwpf.model.FileInformationBlock $r2, $r4;
        org.apache.poi.hwpf.model.FibBase $r3, $r5;
        org.apache.poi.hwpf.usermodel.Range $r0;
        org.apache.poi.hwpf.HWPFOldDocument r1;
        int $i0, $i1, $i2;

        r1 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        $r0 = new org.apache.poi.hwpf.usermodel.Range;

        $r2 = r1.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.hwpf.model.FibBase: int getFcMac()>();

        $r4 = r1.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.FileInformationBlock _fib>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hwpf.model.FileInformationBlock: org.apache.poi.hwpf.model.FibBase getFibBase()>();

        $i1 = virtualinvoke $r5.<org.apache.poi.hwpf.model.FibBase: int getFcMin()>();

        $i2 = $i0 - $i1;

        specialinvoke $r0.<org.apache.poi.hwpf.usermodel.Range: void <init>(int,int,org.apache.poi.hwpf.HWPFDocumentCore)>(0, $i2, r1);

        return $r0;
    }

    public org.apache.poi.hwpf.usermodel.Range getRange()
    {
        org.apache.poi.hwpf.usermodel.Range $r1;
        org.apache.poi.hwpf.HWPFOldDocument r0;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.usermodel.Range getOverallRange()>();

        return $r1;
    }

    public org.apache.poi.hwpf.model.TextPieceTable getTextTable()
    {
        org.apache.poi.hwpf.model.TextPieceTable $r1;
        org.apache.poi.hwpf.HWPFOldDocument r0;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        $r1 = r0.<org.apache.poi.hwpf.HWPFOldDocument: org.apache.poi.hwpf.model.TextPieceTable tpt>;

        return $r1;
    }

    public java.lang.StringBuilder getText()
    {
        java.lang.StringBuilder $r1;
        org.apache.poi.hwpf.HWPFOldDocument r0;

        r0 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        $r1 = r0.<org.apache.poi.hwpf.HWPFOldDocument: java.lang.StringBuilder _text>;

        return $r1;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        java.lang.IllegalStateException $r0;
        org.apache.poi.hwpf.HWPFOldDocument r1;

        r1 := @this: org.apache.poi.hwpf.HWPFOldDocument;

        r2 := @parameter0: java.io.OutputStream;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Writing is not available for the older file formats");

        throw $r0;
    }
}
