class com.pff.OffsetIndexItem extends java.lang.Object
{
    long indexIdentifier;
    long fileOffset;
    int size;
    long cRef;

    void <init>(byte[], int)
    {
        byte[] r1;
        long $l1, $l2, $l3, $l5, $l7, $l8, $l9, $l10, $l12, $l14;
        int i0, $i4, $i6, $i11, $i13;
        com.pff.OffsetIndexItem r0;

        r0 := @this: com.pff.OffsetIndexItem;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 14 goto label1;

        $l8 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 0, 4);

        r0.<com.pff.OffsetIndexItem: long indexIdentifier> = $l8;

        $l9 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 4, 8);

        r0.<com.pff.OffsetIndexItem: long fileOffset> = $l9;

        $l10 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 8, 10);

        $i11 = (int) $l10;

        r0.<com.pff.OffsetIndexItem: int size> = $i11;

        $l12 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 10, 12);

        $i13 = (int) $l12;

        $l14 = (long) $i13;

        r0.<com.pff.OffsetIndexItem: long cRef> = $l14;

        goto label2;

     label1:
        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 0, 8);

        r0.<com.pff.OffsetIndexItem: long indexIdentifier> = $l1;

        $l2 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 8, 16);

        r0.<com.pff.OffsetIndexItem: long fileOffset> = $l2;

        $l3 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 16, 18);

        $i4 = (int) $l3;

        r0.<com.pff.OffsetIndexItem: int size> = $i4;

        $l5 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 16, 18);

        $i6 = (int) $l5;

        $l7 = (long) $i6;

        r0.<com.pff.OffsetIndexItem: long cRef> = $l7;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.pff.OffsetIndexItem r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l9;
        int $i7, $i8;
        java.lang.String $r5, $r11, $r17, $r20, $r26, $r29;

        r2 := @this: com.pff.OffsetIndexItem;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OffsetIndexItem\nIndex Identifier: ");

        $l0 = r2.<com.pff.OffsetIndexItem: long indexIdentifier>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $l1 = r2.<com.pff.OffsetIndexItem: long indexIdentifier>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File Offset: ");

        $l2 = r2.<com.pff.OffsetIndexItem: long fileOffset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $l3 = r2.<com.pff.OffsetIndexItem: long fileOffset>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cRef: ");

        $l4 = r2.<com.pff.OffsetIndexItem: long cRef>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $l5 = r2.<com.pff.OffsetIndexItem: long cRef>;

        $r17 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bin:");

        $l6 = r2.<com.pff.OffsetIndexItem: long cRef>;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l6);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size: ");

        $i7 = r2.<com.pff.OffsetIndexItem: int size>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $i8 = r2.<com.pff.OffsetIndexItem: int size>;

        $l9 = (long) $i8;

        $r26 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l9);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }
}
