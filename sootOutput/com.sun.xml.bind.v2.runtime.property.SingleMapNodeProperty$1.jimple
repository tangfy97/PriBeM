class com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 extends com.sun.xml.bind.v2.runtime.unmarshaller.Loader
{
    private java.lang.ThreadLocal target;
    private java.lang.ThreadLocal map;
    private int depthCounter;
    final com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0;

    void <init>(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty, boolean)
    {
        java.lang.ThreadLocal $r2, $r3;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty r1;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty;

        z0 := @parameter1: boolean;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0> = r1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void <init>(boolean)>(z0);

        $r2 = new java.lang.ThreadLocal;

        specialinvoke $r2.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal target> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: int depthCounter> = 0;

        return;
    }

    public void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r24;
        java.util.HashMap $r23;
        java.util.Map $r15;
        int $i0, $i1;
        com.sun.xml.bind.api.AccessorException $r22;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 r0;
        java.lang.ThreadLocal $r4, $r6, $r8, $r11, $r13, $r16, $r19;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty $r5, $r18;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1, $r2;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r7;
        java.lang.Object $r3, $r9, $r10, $r12, $r14, $r17, $r21;
        java.lang.Class $r20;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r24 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

     label1:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal target>;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $r3 = $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r7 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor access$000(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r5);

        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal target>;

        $r9 = virtualinvoke $r8.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r10 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>($r9);

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r10);

        $i0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: int depthCounter>;

        $i1 = $i0 + 1;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: int depthCounter> = $i1;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r12 = virtualinvoke $r11.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r12 != null goto label2;

        $r19 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r20 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: java.lang.Class access$100(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r18);

        $r21 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.Class)>($r20);

        virtualinvoke $r19.<java.lang.ThreadLocal: void set(java.lang.Object)>($r21);

     label2:
        $r13 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r14 = virtualinvoke $r13.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r15 = (java.util.Map) $r14;

        interfaceinvoke $r15.<java.util.Map: void clear()>();

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r17 = virtualinvoke $r16.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = $r17;

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: void handleGenericException(java.lang.Exception,boolean)>($r22, 1);

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = $r23;

     label5:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label3 with label4;
    }

    public void leaveElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        java.lang.ThreadLocal $r5, $r7, $r9, $r10;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r4;
        int $i0, $i1;
        java.lang.Object $r6, $r8;
        com.sun.xml.bind.api.AccessorException $r11;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void leaveElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r1, r2);

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor access$000(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r3);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal target>;

        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        $r8 = virtualinvoke $r7.<java.lang.ThreadLocal: java.lang.Object get()>();

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>($r6, $r8);

        $i0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: int depthCounter>;

        $i1 = $i0 - 1;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: int depthCounter> = $i1;

        if $i1 != 0 goto label2;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal target>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void remove()>();

        $r10 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: java.lang.ThreadLocal map>;

        virtualinvoke $r10.<java.lang.ThreadLocal: void remove()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: void handleGenericException(java.lang.Exception,boolean)>($r11, 1);

     label4:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
    }

    public void childElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty $r2, $r5;
        com.sun.xml.bind.v2.runtime.Name $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r6;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 r1;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        r4 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r0 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r3 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name access$200(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r2);

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: boolean matches(com.sun.xml.bind.v2.runtime.Name)>($r3);

        if $z0 == 0 goto label1;

        $r5 = r1.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r6 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader access$300(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r5);

        r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r6;

        goto label2;

     label1:
        specialinvoke r1.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void childElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r4, r0);

     label2:
        return;
    }

    public java.util.Collection getExpectedChildElements()
    {
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty $r1;
        com.sun.xml.bind.v2.runtime.Name $r2;
        java.util.Set $r4;
        javax.xml.namespace.QName $r3;
        com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1 r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1: com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty this$0>;

        $r2 = staticinvoke <com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty: com.sun.xml.bind.v2.runtime.Name access$200(com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty)>($r1);

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.Name: javax.xml.namespace.QName toQName()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3);

        return $r4;
    }
}
