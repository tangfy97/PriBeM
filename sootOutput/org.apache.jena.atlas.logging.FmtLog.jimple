public class org.apache.jena.atlas.logging.FmtLog extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.atlas.logging.FmtLog r0;

        r0 := @this: org.apache.jena.atlas.logging.FmtLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void trace(org.slf4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.jena.atlas.logging.FmtLog: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        interfaceinvoke r0.<org.slf4j.Logger: void trace(java.lang.String)>($r3);

     label1:
        return;
    }

    public static transient void debug(org.slf4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.jena.atlas.logging.FmtLog: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        interfaceinvoke r0.<org.slf4j.Logger: void debug(java.lang.String)>($r3);

     label1:
        return;
    }

    public static transient void info(org.slf4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.jena.atlas.logging.FmtLog: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        interfaceinvoke r0.<org.slf4j.Logger: void info(java.lang.String)>($r3);

     label1:
        return;
    }

    public static transient void warn(org.slf4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isWarnEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.jena.atlas.logging.FmtLog: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        interfaceinvoke r0.<org.slf4j.Logger: void warn(java.lang.String)>($r3);

     label1:
        return;
    }

    public static transient void error(org.slf4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.slf4j.Logger r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isErrorEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.jena.atlas.logging.FmtLog: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        interfaceinvoke r0.<org.slf4j.Logger: void error(java.lang.String)>($r3);

     label1:
        return;
    }

    private static java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.util.IllegalFormatException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String r0, $r2, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

     label1:
        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

        catch java.util.IllegalFormatException from label1 to label2 with label3;
    }
}
