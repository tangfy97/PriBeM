public abstract class com.hp.hpl.jena.sparql.core.DatasetChangesBatched extends java.lang.Object implements com.hp.hpl.jena.sparql.core.DatasetChanges
{
    private com.hp.hpl.jena.sparql.core.QuadAction currentAction;
    private com.hp.hpl.jena.graph.Node currentSubject;
    private com.hp.hpl.jena.graph.Node currentGraph;
    private java.util.List batchQuads;
    private boolean mergeBlankNodes;

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void <init>(boolean)>(0);

        return;
    }

    protected void <init>(boolean)
    {
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.sparql.core.QuadAction currentAction> = null;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentSubject> = null;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentGraph> = null;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads> = null;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: boolean mergeBlankNodes> = 0;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: boolean mergeBlankNodes> = z0;

        return;
    }

    public final void start()
    {
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void startBatched()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void startBatch()>();

        return;
    }

    public final void finish()
    {
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void finishBatch()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void finishBatched()>();

        return;
    }

    public void change(com.hp.hpl.jena.sparql.core.QuadAction, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r3, r4, r5, r6, $r7, $r8;
        com.hp.hpl.jena.sparql.core.QuadAction r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.sparql.core.Quad $r11;
        java.util.List $r9, $r10;
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.QuadAction;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        r6 := @parameter4: com.hp.hpl.jena.graph.Node;

        $z0 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: boolean mergeBlankNodes>;

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r4.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z4 == 0 goto label1;

        $r9 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        if $r9 != null goto label3;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void startBatch()>();

        goto label3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.sparql.core.QuadAction currentAction>;

        $z1 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentGraph>;

        $z2 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r7, r3);

        if $z2 == 0 goto label2;

        $r8 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentSubject>;

        $z3 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r8, r4);

        if $z3 != 0 goto label3;

     label2:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void finishBatch()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void startBatch()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.sparql.core.QuadAction currentAction> = r1;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentGraph> = r3;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.graph.Node currentSubject> = r4;

     label3:
        $r10 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        $r11 = new com.hp.hpl.jena.sparql.core.Quad;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.core.Quad: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5, r6);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    private void startBatch()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;
        java.util.ArrayList $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads> = $r2;

     label1:
        return;
    }

    protected void finishBatch()
    {
        java.util.List $r1, $r2, $r3;
        com.hp.hpl.jena.sparql.core.QuadAction $r4;
        int $i0;
        com.hp.hpl.jena.sparql.core.DatasetChangesBatched r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesBatched;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        if $r1 == null goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: com.hp.hpl.jena.sparql.core.QuadAction currentAction>;

        $r3 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: void dispatch(com.hp.hpl.jena.sparql.core.QuadAction,java.util.List)>($r4, $r3);

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesBatched: java.util.List batchQuads> = null;

        return;
    }

    protected abstract void dispatch(com.hp.hpl.jena.sparql.core.QuadAction, java.util.List);

    protected abstract void startBatched();

    protected abstract void finishBatched();
}
