public class org.apache.html.dom.HTMLTableElementImpl extends org.apache.html.dom.HTMLElementImpl implements org.w3c.dom.html.HTMLTableElement
{
    private static final long serialVersionUID;
    private org.apache.html.dom.HTMLCollectionImpl _rows;
    private org.apache.html.dom.HTMLCollectionImpl _bodies;

    public synchronized org.w3c.dom.html.HTMLTableCaptionElement getCaption()
    {
        org.w3c.dom.html.HTMLTableCaptionElement $r2;
        org.w3c.dom.Node r3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        $z0 = r3 instanceof org.w3c.dom.html.HTMLTableCaptionElement;

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("CAPTION");

        if $z1 == 0 goto label2;

        $r2 = (org.w3c.dom.html.HTMLTableCaptionElement) r3;

        return $r2;

     label2:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label1;

        return null;
    }

    public synchronized void setCaption(org.w3c.dom.html.HTMLTableCaptionElement)
    {
        org.w3c.dom.html.HTMLTableCaptionElement r0;
        org.apache.html.dom.HTMLTableElementImpl r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r0 := @parameter0: org.w3c.dom.html.HTMLTableCaptionElement;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.html.HTMLTableCaptionElement: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CAPTION");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTM016 Argument \'caption\' is not an element of type <CAPTION>.");

        throw $r3;

     label1:
        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: void deleteCaption()>();

        if r0 == null goto label2;

        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r0);

     label2:
        return;
    }

    public synchronized org.w3c.dom.html.HTMLElement createCaption()
    {
        org.apache.html.dom.HTMLTableCaptionElementImpl $r2;
        org.w3c.dom.html.HTMLTableCaptionElement $r1;
        org.apache.html.dom.HTMLDocumentImpl $r4;
        org.w3c.dom.Document $r3;
        org.apache.html.dom.HTMLTableElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableCaptionElement getCaption()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new org.apache.html.dom.HTMLTableCaptionElementImpl;

        $r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = (org.apache.html.dom.HTMLDocumentImpl) $r3;

        specialinvoke $r2.<org.apache.html.dom.HTMLTableCaptionElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>($r4, "CAPTION");

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return $r2;
    }

    public synchronized void deleteCaption()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.w3c.dom.html.HTMLTableCaptionElement $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableCaptionElement getCaption()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r1);

     label1:
        return;
    }

    public synchronized org.w3c.dom.html.HTMLTableSectionElement getTHead()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r2;
        org.w3c.dom.Node r3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        $z0 = r3 instanceof org.w3c.dom.html.HTMLTableSectionElement;

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("THEAD");

        if $z1 == 0 goto label2;

        $r2 = (org.w3c.dom.html.HTMLTableSectionElement) r3;

        return $r2;

     label2:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label1;

        return null;
    }

    public synchronized void setTHead(org.w3c.dom.html.HTMLTableSectionElement)
    {
        org.w3c.dom.html.HTMLTableSectionElement r0;
        org.apache.html.dom.HTMLTableElementImpl r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r0 := @parameter0: org.w3c.dom.html.HTMLTableSectionElement;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.html.HTMLTableSectionElement: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("THEAD");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTM017 Argument \'tHead\' is not an element of type <THEAD>.");

        throw $r3;

     label1:
        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: void deleteTHead()>();

        if r0 == null goto label2;

        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r0);

     label2:
        return;
    }

    public synchronized org.w3c.dom.html.HTMLElement createTHead()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r1;
        org.apache.html.dom.HTMLDocumentImpl $r4;
        org.w3c.dom.Document $r3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.apache.html.dom.HTMLTableSectionElementImpl $r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableSectionElement getTHead()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new org.apache.html.dom.HTMLTableSectionElementImpl;

        $r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = (org.apache.html.dom.HTMLDocumentImpl) $r3;

        specialinvoke $r2.<org.apache.html.dom.HTMLTableSectionElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>($r4, "THEAD");

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return $r2;
    }

    public synchronized void deleteTHead()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r1;
        org.apache.html.dom.HTMLTableElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableSectionElement getTHead()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r1);

     label1:
        return;
    }

    public synchronized org.w3c.dom.html.HTMLTableSectionElement getTFoot()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r2;
        org.w3c.dom.Node r3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        $z0 = r3 instanceof org.w3c.dom.html.HTMLTableSectionElement;

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("TFOOT");

        if $z1 == 0 goto label2;

        $r2 = (org.w3c.dom.html.HTMLTableSectionElement) r3;

        return $r2;

     label2:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label1;

        return null;
    }

    public synchronized void setTFoot(org.w3c.dom.html.HTMLTableSectionElement)
    {
        org.w3c.dom.html.HTMLTableSectionElement r0;
        org.apache.html.dom.HTMLTableElementImpl r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r0 := @parameter0: org.w3c.dom.html.HTMLTableSectionElement;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.w3c.dom.html.HTMLTableSectionElement: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("TFOOT");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTM018 Argument \'tFoot\' is not an element of type <TFOOT>.");

        throw $r3;

     label1:
        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: void deleteTFoot()>();

        if r0 == null goto label2;

        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r0);

     label2:
        return;
    }

    public synchronized org.w3c.dom.html.HTMLElement createTFoot()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r1;
        org.apache.html.dom.HTMLDocumentImpl $r4;
        org.w3c.dom.Document $r3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.apache.html.dom.HTMLTableSectionElementImpl $r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableSectionElement getTFoot()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new org.apache.html.dom.HTMLTableSectionElementImpl;

        $r3 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = (org.apache.html.dom.HTMLDocumentImpl) $r3;

        specialinvoke $r2.<org.apache.html.dom.HTMLTableSectionElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>($r4, "TFOOT");

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return $r2;
    }

    public synchronized void deleteTFoot()
    {
        org.w3c.dom.html.HTMLTableSectionElement $r1;
        org.apache.html.dom.HTMLTableElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.html.HTMLTableSectionElement getTFoot()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r1);

     label1:
        return;
    }

    public org.w3c.dom.html.HTMLCollection getRows()
    {
        org.apache.html.dom.HTMLCollectionImpl $r1, $r2, $r3;
        org.apache.html.dom.HTMLTableElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _rows>;

        if $r1 != null goto label1;

        $r3 = new org.apache.html.dom.HTMLCollectionImpl;

        specialinvoke $r3.<org.apache.html.dom.HTMLCollectionImpl: void <init>(org.w3c.dom.html.HTMLElement,short)>(r0, 7);

        r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _rows> = $r3;

     label1:
        $r2 = r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _rows>;

        return $r2;
    }

    public org.w3c.dom.html.HTMLCollection getTBodies()
    {
        short $s1;
        org.apache.html.dom.HTMLCollectionImpl $r1, $r2, $r4;
        org.apache.html.dom.HTMLTableElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _bodies>;

        if $r1 != null goto label1;

        $r4 = new org.apache.html.dom.HTMLCollectionImpl;

        $s1 = (short) -2;

        specialinvoke $r4.<org.apache.html.dom.HTMLCollectionImpl: void <init>(org.w3c.dom.html.HTMLElement,short)>(r0, $s1);

        r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _bodies> = $r4;

     label1:
        $r2 = r0.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _bodies>;

        return $r2;
    }

    public java.lang.String getAlign()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("align");

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String capitalize(java.lang.String)>($r1);

        return $r2;
    }

    public void setAlign(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("align", r1);

        return;
    }

    public java.lang.String getBgColor()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("bgcolor");

        return $r1;
    }

    public void setBgColor(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("bgcolor", r1);

        return;
    }

    public java.lang.String getBorder()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("border");

        return $r1;
    }

    public void setBorder(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("border", r1);

        return;
    }

    public java.lang.String getCellPadding()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("cellpadding");

        return $r1;
    }

    public void setCellPadding(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("cellpadding", r1);

        return;
    }

    public java.lang.String getCellSpacing()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("cellspacing");

        return $r1;
    }

    public void setCellSpacing(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("cellspacing", r1);

        return;
    }

    public java.lang.String getFrame()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("frame");

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String capitalize(java.lang.String)>($r1);

        return $r2;
    }

    public void setFrame(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("frame", r1);

        return;
    }

    public java.lang.String getRules()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("rules");

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String capitalize(java.lang.String)>($r1);

        return $r2;
    }

    public void setRules(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("rules", r1);

        return;
    }

    public java.lang.String getSummary()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("summary");

        return $r1;
    }

    public void setSummary(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("summary", r1);

        return;
    }

    public java.lang.String getWidth()
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: java.lang.String getAttribute(java.lang.String)>("width");

        return $r1;
    }

    public void setWidth(java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: void setAttribute(java.lang.String,java.lang.String)>("width", r1);

        return;
    }

    public org.w3c.dom.html.HTMLElement insertRow(int)
    {
        org.apache.html.dom.HTMLDocumentImpl $r3;
        org.w3c.dom.Document $r2;
        int i0;
        org.apache.html.dom.HTMLTableRowElementImpl $r0;
        org.apache.html.dom.HTMLTableElementImpl r1;

        r1 := @this: org.apache.html.dom.HTMLTableElementImpl;

        i0 := @parameter0: int;

        $r0 = new org.apache.html.dom.HTMLTableRowElementImpl;

        $r2 = virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = (org.apache.html.dom.HTMLDocumentImpl) $r2;

        specialinvoke $r0.<org.apache.html.dom.HTMLTableRowElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>($r3, "TR");

        virtualinvoke r1.<org.apache.html.dom.HTMLTableElementImpl: void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)>(i0, $r0);

        return $r0;
    }

    void insertRowX(int, org.apache.html.dom.HTMLTableRowElementImpl)
    {
        org.w3c.dom.Node r3, r4;
        int $i0, i1;
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.apache.html.dom.HTMLTableRowElementImpl r1;
        org.apache.html.dom.HTMLTableSectionElementImpl $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        i1 := @parameter0: int;

        r1 := @parameter1: org.apache.html.dom.HTMLTableRowElementImpl;

        r3 = null;

        r4 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label1:
        $z0 = r4 instanceof org.w3c.dom.html.HTMLTableRowElement;

        if $z0 == 0 goto label2;

        if i1 != 0 goto label3;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, r4);

        return;

     label2:
        $z1 = r4 instanceof org.apache.html.dom.HTMLTableSectionElementImpl;

        if $z1 == 0 goto label3;

        r3 = r4;

        $r2 = (org.apache.html.dom.HTMLTableSectionElementImpl) r4;

        $i0 = virtualinvoke $r2.<org.apache.html.dom.HTMLTableSectionElementImpl: int insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)>(i1, r1);

        i1 = $i0;

        if $i0 >= 0 goto label3;

        return;

     label3:
        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r4 != null goto label1;

        if r3 == null goto label5;

        interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        goto label6;

     label5:
        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

     label6:
        return;
    }

    public synchronized void deleteRow(int)
    {
        org.w3c.dom.Node r2;
        int $i0, i1, $i3;
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.apache.html.dom.HTMLTableSectionElementImpl $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        i1 := @parameter0: int;

        r2 = virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node getFirstChild()>();

        goto label5;

     label1:
        $z0 = r2 instanceof org.w3c.dom.html.HTMLTableRowElement;

        if $z0 == 0 goto label3;

        if i1 != 0 goto label2;

        virtualinvoke r0.<org.apache.html.dom.HTMLTableElementImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r2);

        return;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label4;

     label3:
        $z1 = r2 instanceof org.apache.html.dom.HTMLTableSectionElementImpl;

        if $z1 == 0 goto label4;

        $r1 = (org.apache.html.dom.HTMLTableSectionElementImpl) r2;

        $i0 = virtualinvoke $r1.<org.apache.html.dom.HTMLTableSectionElementImpl: int deleteRowX(int)>(i1);

        i1 = $i0;

        if $i0 >= 0 goto label4;

        return;

     label4:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label5:
        if r2 != null goto label1;

        return;
    }

    public org.w3c.dom.Node cloneNode(boolean)
    {
        org.w3c.dom.Node $r1;
        org.apache.html.dom.HTMLTableElementImpl r0, r2;
        boolean z0;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.html.dom.HTMLElementImpl: org.w3c.dom.Node cloneNode(boolean)>(z0);

        r2 = (org.apache.html.dom.HTMLTableElementImpl) $r1;

        r2.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _rows> = null;

        r2.<org.apache.html.dom.HTMLTableElementImpl: org.apache.html.dom.HTMLCollectionImpl _bodies> = null;

        return r2;
    }

    public void <init>(org.apache.html.dom.HTMLDocumentImpl, java.lang.String)
    {
        org.apache.html.dom.HTMLTableElementImpl r0;
        org.apache.html.dom.HTMLDocumentImpl r1;
        java.lang.String r2;

        r0 := @this: org.apache.html.dom.HTMLTableElementImpl;

        r1 := @parameter0: org.apache.html.dom.HTMLDocumentImpl;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.html.dom.HTMLElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.html.dom.HTMLTableElementImpl: long serialVersionUID> = -1824053099870917532L;

        return;
    }
}
