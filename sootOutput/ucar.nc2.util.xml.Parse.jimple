public class ucar.nc2.util.xml.Parse extends java.lang.Object
{
    private static char[] xmlInC;
    private static java.lang.String[] xmlOutC;

    public void <init>()
    {
        ucar.nc2.util.xml.Parse r0;

        r0 := @this: ucar.nc2.util.xml.Parse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.jdom.Element readRootElement(java.lang.String) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r4;
        java.io.IOException $r5;
        java.lang.String r1, $r6;
        org.jdom.Element $r3;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        return $r3;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public static java.lang.String cleanCharacterData(java.lang.String)
    {
        int $i0, $i1, $i2, i5, i6, $i7, $i8, $i9;
        java.lang.String r0, $r2;
        boolean $z0, $z1, z2;
        char $c3, $c4;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return r0;

     label1:
        z2 = 0;

        i5 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        if i5 >= $i0 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i7 = (int) $c4;

        $z1 = staticinvoke <org.jdom.Verifier: boolean isXMLCharacter(int)>($i7);

        if $z1 != 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        if z2 != 0 goto label5;

        return r0;

     label5:
        $r3 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        i6 = 0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label6:
        if i6 >= $i2 goto label8;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c3;

        $z0 = staticinvoke <org.jdom.Verifier: boolean isXMLCharacter(int)>($i8);

        if $z0 == 0 goto label7;

        $i9 = (int) $c3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

     label7:
        i6 = i6 + 1;

        goto label6;

     label8:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String quoteXmlContent(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.nc2.util.xml.Parse: char[] xmlInC>;

        $r1 = <ucar.nc2.util.xml.Parse: java.lang.String[] xmlOutC>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String unquoteXmlContent(java.lang.String)
    {
        char[] $r1;
        java.lang.String[] $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.nc2.util.xml.Parse: java.lang.String[] xmlOutC>;

        $r1 = <ucar.nc2.util.xml.Parse: char[] xmlInC>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String unreplace(java.lang.String,java.lang.String[],char[])>(r0, $r2, $r1);

        return $r3;
    }

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String[] $r1;

        $r0 = newarray (char)[3];

        $r0[0] = 38;

        $r0[1] = 60;

        $r0[2] = 62;

        <ucar.nc2.util.xml.Parse: char[] xmlInC> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "&amp;";

        $r1[1] = "&lt;";

        $r1[2] = "&gt;";

        <ucar.nc2.util.xml.Parse: java.lang.String[] xmlOutC> = $r1;

        return;
    }
}
