public class org.apache.tika.sax.WriteOutContentHandler extends org.apache.tika.sax.ContentHandlerDecorator
{
    private final java.io.Serializable tag;
    private final int writeLimit;
    private int writeCount;

    public void <init>(org.xml.sax.ContentHandler, int)
    {
        int i0;
        org.apache.tika.sax.WriteOutContentHandler r0;
        org.xml.sax.ContentHandler r1;
        java.util.UUID $r2;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void <init>(org.xml.sax.ContentHandler)>(r1);

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r0.<org.apache.tika.sax.WriteOutContentHandler: java.io.Serializable tag> = $r2;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount> = 0;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit> = i0;

        return;
    }

    public void <init>(java.io.Writer, int)
    {
        java.io.Writer r2;
        int i0;
        org.apache.tika.sax.WriteOutContentHandler r0;
        org.apache.tika.sax.ToTextContentHandler $r1;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r2 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        $r1 = new org.apache.tika.sax.ToTextContentHandler;

        specialinvoke $r1.<org.apache.tika.sax.ToTextContentHandler: void <init>(java.io.Writer)>(r2);

        specialinvoke r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(org.xml.sax.ContentHandler,int)>($r1, i0);

        return;
    }

    public void <init>(java.io.Writer)
    {
        java.io.Writer r1;
        int $i1;
        org.apache.tika.sax.WriteOutContentHandler r0;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r1 := @parameter0: java.io.Writer;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(java.io.Writer,int)>(r1, $i1);

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r2;
        java.nio.charset.Charset $r3;
        java.io.OutputStreamWriter $r1;
        org.apache.tika.sax.WriteOutContentHandler r0;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = new java.io.OutputStreamWriter;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, $r3);

        specialinvoke r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(java.io.Writer)>($r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.tika.sax.WriteOutContentHandler r0;
        java.io.StringWriter $r1;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        i0 := @parameter0: int;

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

        specialinvoke r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(java.io.Writer,int)>($r1, i0);

        return;
    }

    public void <init>()
    {
        org.apache.tika.sax.WriteOutContentHandler r0;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        specialinvoke r0.<org.apache.tika.sax.WriteOutContentHandler: void <init>(int)>(100000);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.String $r10;
        org.apache.tika.sax.WriteOutContentHandler r0;
        java.io.Serializable $r11;
        org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException $r13;
        char[] r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r12;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $i14 = (int) -1;

        if $i0 == $i14 goto label1;

        $i5 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i7 = $i5 + i2;

        $i6 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        if $i7 > $i6 goto label2;

     label1:
        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void characters(char[],int,int)>(r1, i1, i2);

        $i3 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i4 = $i3 + i2;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount> = $i4;

        goto label3;

     label2:
        $i9 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $i8 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i10 = $i9 - $i8;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void characters(char[],int,int)>(r1, i1, $i10);

        $i11 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount> = $i11;

        $r13 = new org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Your document contained more than ");

        $i12 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" characters, and so your requested limit has been");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached. To receive the full text of the document,");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" increase your limit. (Text up to the limit is");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" however available).");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.tika.sax.WriteOutContentHandler: java.io.Serializable tag>;

        specialinvoke $r13.<org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException: void <init>(java.lang.String,java.io.Serializable)>($r10, $r11);

        throw $r13;

     label3:
        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.String $r10;
        org.apache.tika.sax.WriteOutContentHandler r0;
        java.io.Serializable $r11;
        org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException $r13;
        char[] r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r12;

        r0 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $i14 = (int) -1;

        if $i0 == $i14 goto label1;

        $i5 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i7 = $i5 + i2;

        $i6 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        if $i7 > $i6 goto label2;

     label1:
        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void ignorableWhitespace(char[],int,int)>(r1, i1, i2);

        $i3 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i4 = $i3 + i2;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount> = $i4;

        goto label3;

     label2:
        $i9 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $i8 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount>;

        $i10 = $i9 - $i8;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void ignorableWhitespace(char[],int,int)>(r1, i1, $i10);

        $i11 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        r0.<org.apache.tika.sax.WriteOutContentHandler: int writeCount> = $i11;

        $r13 = new org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Your document contained more than ");

        $i12 = r0.<org.apache.tika.sax.WriteOutContentHandler: int writeLimit>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" characters, and so your requested limit has been");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached. To receive the full text of the document,");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" increase your limit. (Text up to the limit is");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" however available).");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.tika.sax.WriteOutContentHandler: java.io.Serializable tag>;

        specialinvoke $r13.<org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException: void <init>(java.lang.String,java.io.Serializable)>($r10, $r11);

        throw $r13;

     label3:
        return;
    }

    public boolean isWriteLimitReached(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r1, $r3;
        org.apache.tika.sax.WriteOutContentHandler r2;
        java.io.Serializable $r5, $r6;
        org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException $r4;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.tika.sax.WriteOutContentHandler;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException;

        if $z0 == 0 goto label1;

        $r5 = r2.<org.apache.tika.sax.WriteOutContentHandler: java.io.Serializable tag>;

        $r4 = (org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException) r0;

        $r6 = staticinvoke <org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException: java.io.Serializable access$000(org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException)>($r4);

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $z1 = virtualinvoke r2.<org.apache.tika.sax.WriteOutContentHandler: boolean isWriteLimitReached(java.lang.Throwable)>($r3);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }
}
