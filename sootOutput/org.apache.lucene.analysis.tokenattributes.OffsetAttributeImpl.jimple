public class org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl extends org.apache.lucene.util.AttributeImpl implements org.apache.lucene.analysis.tokenattributes.OffsetAttribute, java.lang.Cloneable
{
    private int startOffset;
    private int endOffset;

    public void <init>()
    {
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        specialinvoke r0.<org.apache.lucene.util.AttributeImpl: void <init>()>();

        return;
    }

    public int startOffset()
    {
        int $i0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        $i0 = r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset>;

        return $i0;
    }

    public void setOffset(int, int)
    {
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r7;
        java.lang.IllegalArgumentException $r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r7 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 >= i0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endOffset=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label2:
        r7.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset> = i0;

        r7.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset> = i1;

        return;
    }

    public int endOffset()
    {
        int $i0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        $i0 = r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset>;

        return $i0;
    }

    public void clear()
    {
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset> = 0;

        r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset> = 0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        if $z0 == 0 goto label4;

        r2 = (org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl) r0;

        $i1 = r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset>;

        $i0 = r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset>;

        if $i1 != $i0 goto label2;

        $i3 = r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset>;

        $i2 = r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset>;

        if $i3 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r0;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        i2 = r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset>;

        $i1 = i2 * 31;

        $i0 = r0.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset>;

        i3 = $i1 + $i0;

        return i3;
    }

    public void copyTo(org.apache.lucene.util.AttributeImpl)
    {
        org.apache.lucene.util.AttributeImpl r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl r2;
        int $i0, $i1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute r1;

        r2 := @this: org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl;

        r0 := @parameter0: org.apache.lucene.util.AttributeImpl;

        r1 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) r0;

        $i1 = r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int startOffset>;

        $i0 = r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl: int endOffset>;

        interfaceinvoke r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i0);

        return;
    }
}
