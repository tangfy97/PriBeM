public class org.apache.velocity.runtime.directive.Break extends org.apache.velocity.runtime.directive.Directive
{
    private boolean scoped;
    static java.lang.Class class$org$apache$velocity$runtime$directive$Scope;

    public void <init>()
    {
        org.apache.velocity.runtime.directive.Break r0;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.Break: boolean scoped> = 0;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.velocity.runtime.directive.Break r0;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        return "break";
    }

    public int getType()
    {
        org.apache.velocity.runtime.directive.Break r0;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        return 2;
    }

    public boolean isScopeProvided()
    {
        org.apache.velocity.runtime.directive.Break r0;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        return 0;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.Node)
    {
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.runtime.directive.Break r0;
        org.apache.velocity.runtime.RuntimeServices r1;
        java.lang.StringBuffer $r5, $r6, $r8;
        int $i0;
        java.lang.String $r7, $r9;
        org.apache.velocity.runtime.parser.node.Node r3;
        org.apache.velocity.exception.VelocityException $r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r2 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r3 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>(r1, r2, r3);

        $i0 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: int jjtGetNumChildren()>();

        if $i0 <= 1 goto label1;

        $r4 = new org.apache.velocity.exception.VelocityException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The #stop directive only accepts a single scope object at ");

        $r7 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.directive.Directive)>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        if $i0 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<org.apache.velocity.runtime.directive.Break: boolean scoped> = $z0;

        return;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node)
    {
        org.apache.velocity.runtime.directive.Break r0;
        java.lang.StringBuffer $r6, $r9, $r10, $r13, $r14, $r16;
        java.lang.String $r8, $r12, $r15, $r17;
        org.apache.velocity.runtime.parser.node.Node r1, $r2, $r7;
        org.apache.velocity.exception.VelocityException $r5;
        boolean $z0, $z1;
        org.apache.velocity.context.InternalContextAdapter r3;
        org.apache.velocity.runtime.directive.Scope $r18;
        java.io.Writer r20;
        java.lang.Object $r4;
        java.lang.Class $r11, $r21;
        org.apache.velocity.runtime.directive.StopCommand $r19;

        r0 := @this: org.apache.velocity.runtime.directive.Break;

        r3 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r20 := @parameter1: java.io.Writer;

        r1 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        $z0 = r0.<org.apache.velocity.runtime.directive.Break: boolean scoped>;

        if $z0 != 0 goto label1;

        $r19 = new org.apache.velocity.runtime.directive.StopCommand;

        specialinvoke $r19.<org.apache.velocity.runtime.directive.StopCommand: void <init>()>();

        throw $r19;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r4 = interfaceinvoke $r2.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r3);

        $z1 = $r4 instanceof org.apache.velocity.runtime.directive.Scope;

        if $z1 == 0 goto label2;

        $r18 = (org.apache.velocity.runtime.directive.Scope) $r4;

        virtualinvoke $r18.<org.apache.velocity.runtime.directive.Scope: void stop()>();

        goto label5;

     label2:
        $r5 = new org.apache.velocity.exception.VelocityException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = interfaceinvoke r1.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r8 = interfaceinvoke $r7.<org.apache.velocity.runtime.parser.node.Node: java.lang.String literal()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid ");

        $r11 = <org.apache.velocity.runtime.directive.Break: java.lang.Class class$org$apache$velocity$runtime$directive$Scope>;

        if $r11 != null goto label3;

        $r21 = staticinvoke <org.apache.velocity.runtime.directive.Break: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.directive.Scope");

        <org.apache.velocity.runtime.directive.Break: java.lang.Class class$org$apache$velocity$runtime$directive$Scope> = $r21;

        goto label4;

     label3:
        $r21 = <org.apache.velocity.runtime.directive.Break: java.lang.Class class$org$apache$velocity$runtime$directive$Scope>;

     label4:
        $r12 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" instance at ");

        $r15 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.directive.Directive)>(r0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r17);

        throw $r5;

     label5:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
