public abstract class com.google.common.util.concurrent.AbstractExecutionThreadService extends java.lang.Object implements com.google.common.util.concurrent.Service
{
    private final com.google.common.util.concurrent.Service delegate;

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.AbstractExecutionThreadService$1 $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.common.util.concurrent.AbstractExecutionThreadService$1;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractExecutionThreadService$1: void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService)>(r0);

        r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate> = $r1;

        return;
    }

    protected void startUp() throws java.lang.Exception
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        return;
    }

    protected abstract void run() throws java.lang.Exception;

    protected void shutDown() throws java.lang.Exception
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        return;
    }

    protected void triggerShutdown()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        return;
    }

    protected java.util.concurrent.Executor executor()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r1;
        com.google.common.util.concurrent.AbstractExecutionThreadService$2 $r0;

        r1 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r0 = new com.google.common.util.concurrent.AbstractExecutionThreadService$2;

        specialinvoke $r0.<com.google.common.util.concurrent.AbstractExecutionThreadService$2: void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r1;
        com.google.common.util.concurrent.Service$State $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;

        r1 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<com.google.common.util.concurrent.AbstractExecutionThreadService: java.lang.String getServiceName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r5 = virtualinvoke r1.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service$State state()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public final com.google.common.util.concurrent.ListenableFuture start()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.ListenableFuture start()>();

        return $r2;
    }

    public final com.google.common.util.concurrent.Service$State startAndWait()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.Service$State $r2;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State startAndWait()>();

        return $r2;
    }

    public final boolean isRunning()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.Service $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $z0 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: boolean isRunning()>();

        return $z0;
    }

    public final com.google.common.util.concurrent.Service$State state()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.Service$State $r2;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State state()>();

        return $r2;
    }

    public final com.google.common.util.concurrent.ListenableFuture stop()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.ListenableFuture stop()>();

        return $r2;
    }

    public final com.google.common.util.concurrent.Service$State stopAndWait()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        com.google.common.util.concurrent.Service$State $r2;
        com.google.common.util.concurrent.Service $r1;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: com.google.common.util.concurrent.Service delegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.Service: com.google.common.util.concurrent.Service$State stopAndWait()>();

        return $r2;
    }

    private java.lang.String getServiceName()
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    static java.lang.String access$000(com.google.common.util.concurrent.AbstractExecutionThreadService)
    {
        com.google.common.util.concurrent.AbstractExecutionThreadService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.google.common.util.concurrent.AbstractExecutionThreadService;

        $r1 = specialinvoke r0.<com.google.common.util.concurrent.AbstractExecutionThreadService: java.lang.String getServiceName()>();

        return $r1;
    }
}
