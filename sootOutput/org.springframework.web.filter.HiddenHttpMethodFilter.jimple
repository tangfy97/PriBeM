public class org.springframework.web.filter.HiddenHttpMethodFilter extends org.springframework.web.filter.OncePerRequestFilter
{
    public static final java.lang.String DEFAULT_METHOD_PARAM;
    private java.lang.String methodParam;

    public void <init>()
    {
        org.springframework.web.filter.HiddenHttpMethodFilter r0;

        r0 := @this: org.springframework.web.filter.HiddenHttpMethodFilter;

        specialinvoke r0.<org.springframework.web.filter.OncePerRequestFilter: void <init>()>();

        r0.<org.springframework.web.filter.HiddenHttpMethodFilter: java.lang.String methodParam> = "_method";

        return;
    }

    public void setMethodParam(java.lang.String)
    {
        org.springframework.web.filter.HiddenHttpMethodFilter r1;
        java.lang.String r0;

        r1 := @this: org.springframework.web.filter.HiddenHttpMethodFilter;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>(r0, "\'methodParam\' must not be empty");

        r1.<org.springframework.web.filter.HiddenHttpMethodFilter: java.lang.String methodParam> = r0;

        return;
    }

    protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.FilterChain r6;
        javax.servlet.http.HttpServletResponse r7;
        org.springframework.web.filter.HiddenHttpMethodFilter r1;
        javax.servlet.http.HttpServletRequest r0;
        java.util.Locale $r8;
        org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper $r10;
        java.lang.String $r2, $r3, $r4, $r5, $r9;
        boolean $z0, $z1;

        r1 := @this: org.springframework.web.filter.HiddenHttpMethodFilter;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r7 := @parameter1: javax.servlet.http.HttpServletResponse;

        r6 := @parameter2: javax.servlet.FilterChain;

        $r2 = r1.<org.springframework.web.filter.HiddenHttpMethodFilter: java.lang.String methodParam>;

        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>($r2);

        $r4 = "POST";

        $r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r3);

        if $z1 == 0 goto label1;

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);

        $r10 = new org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper;

        specialinvoke $r10.<org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest,java.lang.String)>(r0, $r9);

        interfaceinvoke r6.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r10, r7);

        goto label2;

     label1:
        interfaceinvoke r6.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r7);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.springframework.web.filter.HiddenHttpMethodFilter: java.lang.String DEFAULT_METHOD_PARAM> = "_method";

        return;
    }
}
