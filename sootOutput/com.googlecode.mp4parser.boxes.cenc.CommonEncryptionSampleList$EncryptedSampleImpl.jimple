class com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.Sample
{
    private final com.googlecode.mp4parser.authoring.Sample clearSample;
    private final com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat;
    private final javax.crypto.Cipher cipher;
    final com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList this$0;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/googlecode/mp4parser/boxes/cenc/CommonEncryptionSampleList;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: boolean $assertionsDisabled> = $z1;

        return;
    }

    private void <init>(com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList, com.googlecode.mp4parser.authoring.Sample, com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat, javax.crypto.Cipher)
    {
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat r3;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList r1;
        com.googlecode.mp4parser.authoring.Sample r2;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl r0;
        javax.crypto.Cipher r4;

        r0 := @this: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        r1 := @parameter0: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Sample;

        r3 := @parameter2: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat;

        r4 := @parameter3: javax.crypto.Cipher;

        r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.authoring.Sample clearSample> = r2;

        r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat> = r3;

        r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: javax.crypto.Cipher cipher> = r4;

        return;
    }

    public void writeTo(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        byte[] $r6, $r12, $r16, r21, r23, $r25;
        java.nio.ByteBuffer $r2, r4, $r13, $r22, $r26;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat $r5, $r8, $r14, $r17;
        byte $b4;
        boolean $z0, $z1, $z2;
        com.googlecode.mp4parser.authoring.Sample $r1;
        javax.crypto.IllegalBlockSizeException $r31;
        java.util.List $r9, $r15, $r18;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList $r7;
        long $l3, $l5;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair r33;
        java.lang.AssertionError $r34, $r35;
        javax.crypto.Cipher $r11, $r24;
        java.nio.Buffer $r3;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.Iterator $r19;
        java.lang.RuntimeException $r36, $r37;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl r0;
        javax.crypto.BadPaddingException $r29;
        java.nio.channels.WritableByteChannel r10;
        java.lang.Object $r20;

        r0 := @this: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        r10 := @parameter0: java.nio.channels.WritableByteChannel;

        $r1 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.authoring.Sample clearSample>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Sample: java.nio.ByteBuffer asByteBuffer()>();

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        r4 = (java.nio.ByteBuffer) $r3;

        $r7 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList this$0>;

        $r5 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r6 = $r5.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: byte[] iv>;

        virtualinvoke $r7.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList: void initCipher(byte[])>($r6);

     label01:
        $r8 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r9 = $r8.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        if $r9 == null goto label06;

        $r14 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r15 = $r14.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i1 <= 0 goto label06;

        $r17 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r18 = $r17.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

        goto label05;

     label02:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r33 = (com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair) $r20;

        $i2 = r33.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: int clear>;

        r21 = newarray (byte)[$i2];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r21);

        $r22 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r21);

        interfaceinvoke r10.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r22);

        $l3 = r33.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: long encrypted>;

        $b4 = $l3 cmp 0L;

        $i11 = (int) $b4;

        if $i11 <= 0 goto label05;

        $l5 = r33.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: long encrypted>;

        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        r23 = newarray (byte)[$i6];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r23);

        $z0 = <com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $i9 = lengthof r23;

        $i10 = $i9 % 16;

        if $i10 == 0 goto label03;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label03:
        $r24 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: javax.crypto.Cipher cipher>;

        $r25 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] update(byte[])>(r23);

        $z1 = <com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $i8 = lengthof $r25;

        $i7 = lengthof r23;

        if $i8 == $i7 goto label04;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label04:
        $r26 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r25);

        interfaceinvoke r10.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r26);

     label05:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label02;

        goto label07;

     label06:
        $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        $r16 = newarray (byte)[$i0];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r16);

        $r11 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: javax.crypto.Cipher cipher>;

        $r12 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r16);

        $r13 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r12);

        interfaceinvoke r10.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r13);

     label07:
        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

     label08:
        goto label11;

     label09:
        $r31 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r31);

        throw $r36;

     label10:
        $r29 := @caughtexception;

        $r37 = new java.lang.RuntimeException;

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r29);

        throw $r37;

     label11:
        return;

        catch javax.crypto.IllegalBlockSizeException from label01 to label08 with label09;
        catch javax.crypto.BadPaddingException from label01 to label08 with label10;
    }

    public long getSize()
    {
        long $l0;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl r0;
        com.googlecode.mp4parser.authoring.Sample $r1;

        r0 := @this: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        $r1 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.authoring.Sample clearSample>;

        $l0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        return $l0;
    }

    public java.nio.ByteBuffer asByteBuffer()
    {
        byte[] $r8, $r12, r16, r17, $r19, r27;
        java.nio.ByteBuffer $r2, r4, $r5;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat r6, $r7;
        byte $b4;
        boolean $z0, $z1, $z2;
        com.googlecode.mp4parser.authoring.Sample $r1;
        javax.crypto.IllegalBlockSizeException $r24;
        java.util.List $r10, $r13;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList $r9;
        long $l3, $l5;
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair r26;
        java.lang.AssertionError $r28, $r29;
        javax.crypto.Cipher $r11, $r18;
        java.nio.Buffer $r3;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.Iterator $r14;
        java.lang.RuntimeException $r30, $r31;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl r0;
        javax.crypto.BadPaddingException $r22;
        java.lang.Object $r15;

        r0 := @this: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        $r1 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.authoring.Sample clearSample>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Sample: java.nio.ByteBuffer asByteBuffer()>();

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        r4 = (java.nio.ByteBuffer) $r3;

        $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        r6 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r9 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList this$0>;

        $r7 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat cencSampleAuxiliaryDataFormat>;

        $r8 = $r7.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: byte[] iv>;

        virtualinvoke $r9.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList: void initCipher(byte[])>($r8);

     label01:
        $r10 = r6.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        if $r10 == null goto label06;

        $r13 = r6.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat: java.util.List pairs>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

        goto label05;

     label02:
        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r26 = (com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair) $r15;

        $i2 = r26.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: int clear>;

        r16 = newarray (byte)[$i2];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r16);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r16);

        $l3 = r26.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: long encrypted>;

        $b4 = $l3 cmp 0L;

        $i11 = (int) $b4;

        if $i11 <= 0 goto label05;

        $l5 = r26.<com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat$Pair: long encrypted>;

        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        r17 = newarray (byte)[$i6];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r17);

        $z0 = <com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $i9 = lengthof r17;

        $i10 = $i9 % 16;

        if $i10 == 0 goto label03;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label03:
        $r18 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: javax.crypto.Cipher cipher>;

        $r19 = virtualinvoke $r18.<javax.crypto.Cipher: byte[] update(byte[])>(r17);

        $z1 = <com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $i8 = lengthof $r19;

        $i7 = lengthof r17;

        if $i8 == $i7 goto label04;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label04:
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r19);

     label05:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label02;

        goto label07;

     label06:
        $i1 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>();

        r27 = newarray (byte)[$i1];

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r27);

        $r11 = r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: javax.crypto.Cipher cipher>;

        $r12 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r27);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r12);

     label07:
        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r24);

        throw $r30;

     label10:
        $r22 := @caughtexception;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r22);

        throw $r31;

     label11:
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return $r5;

        catch javax.crypto.IllegalBlockSizeException from label01 to label08 with label09;
        catch javax.crypto.BadPaddingException from label01 to label08 with label10;
    }

    void <init>(com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList, com.googlecode.mp4parser.authoring.Sample, com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat, javax.crypto.Cipher, com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl)
    {
        com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat r3;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList r1;
        com.googlecode.mp4parser.authoring.Sample r2;
        com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl r0, r5;
        javax.crypto.Cipher r4;

        r0 := @this: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        r1 := @parameter0: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Sample;

        r3 := @parameter2: com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat;

        r4 := @parameter3: javax.crypto.Cipher;

        r5 := @parameter4: com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl;

        specialinvoke r0.<com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList$EncryptedSampleImpl: void <init>(com.googlecode.mp4parser.boxes.cenc.CommonEncryptionSampleList,com.googlecode.mp4parser.authoring.Sample,com.googlecode.mp4parser.boxes.cenc.CencSampleAuxiliaryDataFormat,javax.crypto.Cipher)>(r1, r2, r3, r4);

        return;
    }
}
