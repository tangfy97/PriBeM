public class org.apache.batik.css.engine.value.StringValue extends org.apache.batik.css.engine.value.AbstractValue
{
    protected java.lang.String value;
    protected short unitType;

    public static java.lang.String getCssText(short, java.lang.String)
    {
        short s0;
        java.lang.StringBuffer $r1, $r3, $r4, $r7, $r8, $r9, $r11, $r12;
        int $i1, $i5, $i7;
        java.lang.String r2, $r5, $r10;
        char $c3, $c4;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        $i5 = (int) s0;

        lookupswitch($i5)
        {
            case 19: goto label2;
            case 20: goto label1;
            default: goto label5;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("url(");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

     label2:
        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(34);

        $i7 = (int) -1;

        if $i1 == $i7 goto label3;

        $c4 = 39;

        $c3 = 39;

        goto label4;

     label3:
        $c4 = 34;

        $c3 = 34;

     label4:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label5:
        return r2;
    }

    public void <init>(short, java.lang.String)
    {
        org.apache.batik.css.engine.value.StringValue r0;
        short s0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.css.engine.value.StringValue;

        s0 := @parameter0: short;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: void <init>()>();

        r0.<org.apache.batik.css.engine.value.StringValue: short unitType> = s0;

        r0.<org.apache.batik.css.engine.value.StringValue: java.lang.String value> = r1;

        return;
    }

    public short getPrimitiveType()
    {
        org.apache.batik.css.engine.value.StringValue r0;
        short $s0;

        r0 := @this: org.apache.batik.css.engine.value.StringValue;

        $s0 = r0.<org.apache.batik.css.engine.value.StringValue: short unitType>;

        return $s0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.batik.css.engine.value.StringValue r1, r2;
        short $s0, $s1;
        int $i2, $i3;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.css.engine.value.StringValue;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.batik.css.engine.value.StringValue;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r1 = (org.apache.batik.css.engine.value.StringValue) r0;

        $s1 = r2.<org.apache.batik.css.engine.value.StringValue: short unitType>;

        $s0 = r1.<org.apache.batik.css.engine.value.StringValue: short unitType>;

        $i2 = (int) $s1;

        $i3 = (int) $s0;

        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $r4 = r2.<org.apache.batik.css.engine.value.StringValue: java.lang.String value>;

        $r3 = r1.<org.apache.batik.css.engine.value.StringValue: java.lang.String value>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String getCssText()
    {
        short $s0;
        org.apache.batik.css.engine.value.StringValue r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.batik.css.engine.value.StringValue;

        $s0 = r0.<org.apache.batik.css.engine.value.StringValue: short unitType>;

        $r1 = r0.<org.apache.batik.css.engine.value.StringValue: java.lang.String value>;

        $r2 = staticinvoke <org.apache.batik.css.engine.value.StringValue: java.lang.String getCssText(short,java.lang.String)>($s0, $r1);

        return $r2;
    }

    public java.lang.String getStringValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.StringValue r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.engine.value.StringValue;

        $r1 = r0.<org.apache.batik.css.engine.value.StringValue: java.lang.String value>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.batik.css.engine.value.StringValue r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.engine.value.StringValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.StringValue: java.lang.String getCssText()>();

        return $r1;
    }
}
