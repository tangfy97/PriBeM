public final class org.apache.poi.hdf.extractor.WordDocument extends java.lang.Object
{
    private static final float K_1440_0F;
    byte[] _header;
    org.apache.poi.hdf.extractor.StyleSheet _styleSheet;
    org.apache.poi.hdf.extractor.data.ListTables _listTables;
    org.apache.poi.hdf.extractor.data.DOP _docProps;
    int _currentList;
    int _tableSize;
    int _sectionCounter;
    org.apache.poi.hdf.extractor.FontTable _fonts;
    org.apache.poi.hdf.extractor.util.BTreeSet _text;
    org.apache.poi.hdf.extractor.util.BTreeSet _characterTable;
    org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable;
    org.apache.poi.hdf.extractor.util.BTreeSet _sectionTable;
    java.lang.StringBuffer _headerBuffer;
    java.lang.StringBuffer _bodyBuffer;
    java.lang.StringBuffer _cellBuffer;
    java.util.ArrayList _cells;
    java.util.ArrayList _table;
    byte[] _plcfHdd;
    int _fcMin;
    int _ccpText;
    int _ccpFtn;
    private static java.lang.String _outName;
    private java.io.InputStream istream;
    private org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem;
    private static int HEADER_EVEN_INDEX;
    private static int HEADER_ODD_INDEX;
    private static int FOOTER_EVEN_INDEX;
    private static int FOOTER_ODD_INDEX;
    private static int HEADER_FIRST_INDEX;
    private static int FOOTER_FIRST_INDEX;

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        org.apache.poi.hdf.extractor.WordDocument $r2;
        java.lang.String $r1, $r3;
        java.lang.Exception $r4;

        r0 := @parameter0: java.lang.String[];

     label1:
        $r1 = r0[1];

        <org.apache.poi.hdf.extractor.WordDocument: java.lang.String _outName> = $r1;

        $r2 = new org.apache.poi.hdf.extractor.WordDocument;

        $r3 = r0[0];

        specialinvoke $r2.<org.apache.poi.hdf.extractor.WordDocument: void <init>(java.lang.String)>($r3);

        virtualinvoke $r2.<org.apache.poi.hdf.extractor.WordDocument: void closeDoc()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

     label4:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void writeAllText(java.io.Writer) throws java.io.IOException
    {
        byte[] $r1, $r2, $r9, $r11;
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode $r4;
        java.util.ArrayList $r5;
        short $s6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i8, $i10;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.String $r12;
        org.apache.poi.hdf.extractor.util.BTreeSet $r3;
        boolean $z0;
        org.apache.poi.hdf.extractor.TextPiece r7;
        char c9;
        java.io.Writer r10;
        java.lang.Object $r6;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r10 := @parameter0: java.io.Writer;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r1, 24);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r2, 28);

        $r3 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r4 = $r3.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r5 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i0, $i1, $r4);

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i7 = 0;

     label1:
        if i7 >= $i2 goto label6;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r7 = (org.apache.poi.hdf.extractor.TextPiece) $r6;

        $i3 = virtualinvoke r7.<org.apache.poi.hdf.extractor.TextPiece: int getStart()>();

        $i4 = virtualinvoke r7.<org.apache.poi.hdf.extractor.TextPiece: int getEnd()>();

        $z0 = virtualinvoke r7.<org.apache.poi.hdf.extractor.TextPiece: boolean usesUnicode()>();

        if $z0 == 0 goto label4;

        i8 = $i3;

     label2:
        if i8 >= $i4 goto label3;

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $s6 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r11, i8);

        c9 = (char) $s6;

        $i10 = (int) c9;

        virtualinvoke r10.<java.io.Writer: void write(int)>($i10);

        i8 = i8 + 2;

        goto label2;

     label3:
        goto label5;

     label4:
        $r12 = new java.lang.String;

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i5 = $i4 - $i3;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int)>($r9, $i3, $i5);

        virtualinvoke r10.<java.io.Writer: void write(java.lang.String)>($r12);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.io.FileInputStream $r1;
        java.lang.String r2;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r17;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.hdf.extractor.StyleSheet $r19, $r22;
        org.apache.poi.hdf.extractor.SEP r21, $r34;
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode $r12;
        java.util.ArrayList $r13;
        org.apache.poi.hdf.extractor.util.SepxNode r16;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r33;
        java.lang.StringBuffer $r31, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15;
        org.apache.poi.hdf.extractor.util.BTreeSet $r11, $r23, $r24, $r25, $r27, $r28, $r29, $r30;
        java.lang.Object $r15, $r20;
        org.apache.poi.hdf.extractor.data.DOP $r26;
        java.io.InputStream r8, $r10, $r14;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r8 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r26 = new org.apache.poi.hdf.extractor.data.DOP;

        specialinvoke $r26.<org.apache.poi.hdf.extractor.data.DOP: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps> = $r26;

        $i15 = (int) -1;

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _currentList> = $i15;

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter> = 1;

        $r27 = new org.apache.poi.hdf.extractor.util.BTreeSet;

        specialinvoke $r27.<org.apache.poi.hdf.extractor.util.BTreeSet: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text> = $r27;

        $r28 = new org.apache.poi.hdf.extractor.util.BTreeSet;

        specialinvoke $r28.<org.apache.poi.hdf.extractor.util.BTreeSet: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable> = $r28;

        $r29 = new org.apache.poi.hdf.extractor.util.BTreeSet;

        specialinvoke $r29.<org.apache.poi.hdf.extractor.util.BTreeSet: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable> = $r29;

        $r30 = new org.apache.poi.hdf.extractor.util.BTreeSet;

        specialinvoke $r30.<org.apache.poi.hdf.extractor.util.BTreeSet: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _sectionTable> = $r30;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer> = $r31;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer> = $r32;

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.io.InputStream istream> = r8;

        $r33 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r10 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.io.InputStream istream>;

        specialinvoke $r33.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>($r10);

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem> = $r33;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void readFIB()>();

        $i3 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin>;

        $i1 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin>;

        $i0 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpText>;

        $i2 = $i1 + $i0;

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _sectionTable>;

        $r12 = $r11.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r13 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i3, $i2, $r12);

        $i4 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i13 = 0;

     label1:
        if i13 >= $i4 goto label2;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r16 = (org.apache.poi.hdf.extractor.util.SepxNode) $r15;

        $i5 = virtualinvoke r16.<org.apache.poi.hdf.extractor.util.SepxNode: int getStart()>();

        $i6 = virtualinvoke r16.<org.apache.poi.hdf.extractor.util.SepxNode: int getEnd()>();

        $r17 = virtualinvoke r16.<org.apache.poi.hdf.extractor.util.SepxNode: byte[] getSepx()>();

        $r34 = new org.apache.poi.hdf.extractor.SEP;

        specialinvoke $r34.<org.apache.poi.hdf.extractor.SEP: void <init>()>();

        $r19 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r20 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r17, $r34, $r19);

        r21 = (org.apache.poi.hdf.extractor.SEP) $r20;

        $i7 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i5);

        $i10 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin>;

        $i9 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpText>;

        $i11 = $i10 + $i9;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i6);

        $r25 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r24 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable>;

        $r23 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r22 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void writeSection(int,int,org.apache.poi.hdf.extractor.SEP,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.StyleSheet)>($i8, $i12, r21, $r25, $r24, $r23, $r22);

        i13 = i13 + 1;

        goto label1;

     label2:
        $r14 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.io.InputStream istream>;

        virtualinvoke $r14.<java.io.InputStream: void close()>();

        return;
    }

    private void readFIB() throws java.io.IOException
    {
        byte[] $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.poi.poifs.filesystem.Entry $r3;
        short $s1, $s9;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r1, $r6;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.poifs.filesystem.DocumentEntry r4;
        boolean $z0;
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r7;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem>;

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("WordDocument");

        r4 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r3;

        $i0 = interfaceinvoke r4.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r5 = newarray (byte)[$i0];

        r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header> = $r5;

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem>;

        $r7 = virtualinvoke $r6.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("WordDocument");

        $r8 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        virtualinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r8);

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r9, 10);

        $r10 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r10, 24);

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin> = $i2;

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r11, 76);

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpText> = $i3;

        $r12 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r12, 80);

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpFtn> = $i4;

        $r13 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r13, 250);

        $r14 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r14, 254);

        $r15 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r15, 258);

        $r16 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r16, 262);

        $s9 = $s1 & 512;

        if $s9 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void processComplexFile(boolean,int,int,int,int)>($z0, $i5, $i6, $i7, $i8);

        return;
    }

    private void processComplexFile(boolean, int, int, int, int) throws java.io.IOException
    {
        byte[] $r1, $r8;
        org.apache.poi.poifs.filesystem.Entry $r4;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r2, $r5;
        int $i0, $i1, i2, i3, i4, i5;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.String r9, r10, r11;
        org.apache.poi.poifs.filesystem.DocumentEntry $r7;
        boolean z0;
        org.apache.poi.poifs.filesystem.DirectoryNode $r3;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r6;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        z0 := @parameter0: boolean;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 418);

        if z0 == 0 goto label1;

        r9 = "1Table";

        r11 = "1Table";

        r10 = "1Table";

        goto label2;

     label1:
        r9 = "0Table";

        r11 = "0Table";

        r10 = "0Table";

     label2:
        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem>;

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>(r11);

        $r7 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r4;

        $i1 = interfaceinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r8 = newarray (byte)[$i1];

        $r5 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.poifs.filesystem.POIFSFileSystem filesystem>;

        $r6 = virtualinvoke $r5.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>(r10);

        virtualinvoke $r6.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r8);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void initDocProperties(byte[])>($r8);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void initPclfHdd(byte[])>($r8);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void findText(byte[],int)>($r8, $i0);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void findFormatting(byte[],int,int,int,int)>($r8, i2, i3, i4, i5);

        return;
    }

    private void findText(byte[], int) throws java.io.IOException
    {
        byte[] r0;
        byte $b1, $b2;
        org.apache.poi.hdf.extractor.WordDocument r2;
        boolean z0;
        short $s22;
        int i0, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, i24, i25, i26, i27, i28, i29, i30, $i31, $i32;
        org.apache.poi.hdf.extractor.util.BTreeSet $r3;
        org.apache.poi.hdf.extractor.TextPiece $r6;
        java.io.IOException $r5;

        r2 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i24 = i0;

     label1:
        $b1 = r0[i24];

        if $b1 != 1 goto label2;

        i25 = i24 + 1;

        $s22 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, i25);

        $i31 = (int) $s22;

        $i23 = 2 + $i31;

        i24 = i25 + $i23;

        goto label1;

     label2:
        $b2 = r0[i24];

        $i32 = (int) $b2;

        if $i32 == 2 goto label3;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("corrupted Word file");

        throw $r5;

     label3:
        i26 = i24 + 1;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, i26);

        i27 = i26 + 4;

        $i4 = $i3 - 4;

        i5 = $i4 / 12;

        i28 = 0;

     label4:
        if i28 >= i5 goto label7;

        $i6 = i5 + 1;

        $i7 = $i6 * 4;

        $i9 = i27 + $i7;

        $i8 = i28 * 8;

        $i10 = $i9 + $i8;

        $i11 = $i10 + 2;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, $i11);

        i29 = $i12;

        $i13 = $i12 & 1073741824;

        if $i13 != 0 goto label5;

        z0 = 1;

        goto label6;

     label5:
        z0 = 0;

        i30 = $i12 & -1073741825;

        i29 = i30 / 2;

     label6:
        $i14 = i28 + 1;

        $i15 = $i14 * 4;

        $i16 = i27 + $i15;

        $i17 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, $i16);

        $i18 = i28 * 4;

        $i19 = i27 + $i18;

        $i20 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, $i19);

        $i21 = $i17 - $i20;

        $r6 = new org.apache.poi.hdf.extractor.TextPiece;

        specialinvoke $r6.<org.apache.poi.hdf.extractor.TextPiece: void <init>(int,int,boolean)>(i29, $i21, z0);

        $r3 = r2.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        virtualinvoke $r3.<org.apache.poi.hdf.extractor.util.BTreeSet: boolean add(java.lang.Object)>($r6);

        i28 = i28 + 1;

        goto label4;

     label7:
        return;
    }

    private void findFormatting(byte[], int, int, int, int)
    {
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r9, $r12, $r13, $r17, r19, r20, r21, r22, r23;
        byte $b30, $b41, $b43, $b45, $b55, $b65, $b67;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.hdf.extractor.util.ChpxNode $r24, $r25;
        short $s19;
        org.apache.poi.hdf.extractor.util.PapxNode $r26;
        org.apache.poi.hdf.extractor.util.SepxNode $r27;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i44, $i46, i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i66, $i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, $i86, $i87, $i88;
        org.apache.poi.hdf.extractor.util.BTreeSet $r8, $r11, $r15, $r18;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r1 := @parameter0: byte[];

        i47 := @parameter1: int;

        i0 := @parameter2: int;

        i22 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openDoc()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void createStyleSheet(byte[])>(r1);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void createListTables(byte[])>(r1);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void createFontTable(byte[])>(r1);

        $i1 = i0 - 4;

        i69 = $i1 / 8;

        i70 = 0;

     label01:
        if i70 >= i69 goto label06;

        $i48 = i69 + 1;

        $i50 = 4 * $i48;

        $i49 = 4 * i70;

        $i51 = $i50 + $i49;

        $i52 = i47 + $i51;

        $i53 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i52);

        r19 = newarray (byte)[512];

        $r13 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i54 = $i53 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, $i54, r19, 0, 512);

        $b55 = r19[511];

        $i56 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b55);

        i71 = 0;

     label02:
        if i71 >= $i56 goto label05;

        $i57 = i71 * 4;

        $i58 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r19, $i57);

        $i59 = i71 + 1;

        $i60 = $i59 * 4;

        $i61 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r19, $i60);

        $i62 = $i56 + 1;

        $i63 = $i62 * 4;

        $i64 = $i63 + i71;

        $b65 = r19[$i64];

        $i66 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b65);

        i72 = 2 * $i66;

        if i72 != 0 goto label03;

        $r18 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r24 = new org.apache.poi.hdf.extractor.util.ChpxNode;

        $r17 = newarray (byte)[0];

        specialinvoke $r24.<org.apache.poi.hdf.extractor.util.ChpxNode: void <init>(int,int,byte[])>($i58, $i61, $r17);

        virtualinvoke $r18.<org.apache.poi.hdf.extractor.util.BTreeSet: boolean add(java.lang.Object)>($r24);

        goto label04;

     label03:
        $b67 = r19[i72];

        $i68 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b67);

        r20 = newarray (byte)[$i68];

        i73 = i72 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, i73, r20, 0, $i68);

        $r15 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r25 = new org.apache.poi.hdf.extractor.util.ChpxNode;

        specialinvoke $r25.<org.apache.poi.hdf.extractor.util.ChpxNode: void <init>(int,int,byte[])>($i58, $i61, r20);

        virtualinvoke $r15.<org.apache.poi.hdf.extractor.util.BTreeSet: boolean add(java.lang.Object)>($r25);

     label04:
        i71 = i71 + 1;

        goto label02;

     label05:
        i70 = i70 + 1;

        goto label01;

     label06:
        $i3 = i2 - 4;

        i74 = $i3 / 8;

        i75 = 0;

     label07:
        if i75 >= i74 goto label12;

        $i23 = i74 + 1;

        $i25 = 4 * $i23;

        $i24 = 4 * i75;

        $i26 = $i25 + $i24;

        $i27 = i22 + $i26;

        $i28 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i27);

        r21 = newarray (byte)[512];

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i29 = $i28 * 512;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i29, r21, 0, 512);

        $b30 = r21[511];

        $i31 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b30);

        i76 = 0;

     label08:
        if i76 >= $i31 goto label11;

        $i32 = i76 * 4;

        $i33 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r21, $i32);

        $i34 = i76 + 1;

        $i35 = $i34 * 4;

        $i36 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r21, $i35);

        $i37 = $i31 + 1;

        $i39 = $i37 * 4;

        $i38 = i76 * 13;

        $i40 = $i39 + $i38;

        $b41 = r21[$i40];

        $i42 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b41);

        i77 = 2 * $i42;

        $b43 = r21[i77];

        $i44 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b43);

        i78 = 2 * $i44;

        if i78 != 0 goto label09;

        i77 = i77 + 1;

        $b45 = r21[i77];

        $i46 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertUnsignedByteToInt(byte)>($b45);

        i79 = 2 * $i46;

        goto label10;

     label09:
        $i86 = (int) -1;

        i79 = i78 + $i86;

     label10:
        $r12 = newarray (byte)[i79];

        i80 = i77 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r21, i80, $r12, 0, i79);

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable>;

        $r26 = new org.apache.poi.hdf.extractor.util.PapxNode;

        specialinvoke $r26.<org.apache.poi.hdf.extractor.util.PapxNode: void <init>(int,int,byte[])>($i33, $i36, $r12);

        virtualinvoke $r11.<org.apache.poi.hdf.extractor.util.BTreeSet: boolean add(java.lang.Object)>($r26);

        i76 = i76 + 1;

        goto label08;

     label11:
        i75 = i75 + 1;

        goto label07;

     label12:
        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i4 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r2, 24);

        $r3 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i5 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r3, 202);

        $r4 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i6 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r4, 206);

        r22 = newarray (byte)[$i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i5, r22, 0, $i6);

        $i7 = $i6 - 4;

        i81 = $i7 / 16;

        i82 = 0;

     label13:
        if i82 >= i81 goto label14;

        $i8 = i82 * 4;

        $i9 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r22, $i8);

        i83 = $i9 + $i4;

        $i10 = i82 + 1;

        $i11 = $i10 * 4;

        $i12 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r22, $i11);

        i84 = $i12 + $i4;

        $i13 = i81 + 1;

        $i15 = 4 * $i13;

        $i14 = i82 * 12;

        $i16 = $i15 + $i14;

        $i17 = $i16 + 2;

        $i18 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r22, $i17);

        $r5 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $s19 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r5, $i18);

        $i87 = (int) $s19;

        r23 = newarray (byte)[$i87];

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i20 = $i18 + 2;

        $i88 = (int) $s19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i20, r23, 0, $i88);

        $r27 = new org.apache.poi.hdf.extractor.util.SepxNode;

        $i21 = i82 + 1;

        specialinvoke $r27.<org.apache.poi.hdf.extractor.util.SepxNode: void <init>(int,int,int,byte[])>($i21, i83, i84, r23);

        $r8 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _sectionTable>;

        virtualinvoke $r8.<org.apache.poi.hdf.extractor.util.BTreeSet: boolean add(java.lang.Object)>($r27);

        i82 = i82 + 1;

        goto label13;

     label14:
        return;
    }

    public void openDoc()
    {
        java.lang.StringBuffer $r1, $r2, $r3;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n");

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\r\n");

        $r3 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:layout-master-set>\r\n");

        return;
    }

    private org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int, int)
    {
        byte[] $r1, $r3, $r4;
        org.apache.poi.hdf.extractor.HeaderFooter $r2, $r5, r6;
        org.apache.poi.hdf.extractor.WordDocument r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _plcfHdd>;

        $i0 = lengthof $r1;

        if $i0 >= 50 goto label1;

        $r2 = new org.apache.poi.hdf.extractor.HeaderFooter;

        specialinvoke $r2.<org.apache.poi.hdf.extractor.HeaderFooter: void <init>(int,int,int)>(0, 0, 0);

        return $r2;

     label1:
        $i2 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _fcMin>;

        $i1 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpText>;

        $i4 = $i2 + $i1;

        $i3 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _ccpFtn>;

        i20 = $i4 + $i3;

        i21 = 0;

        tableswitch(i5)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label2:
        $i19 = <org.apache.poi.hdf.extractor.WordDocument: int HEADER_EVEN_INDEX>;

        $i18 = i6 * 6;

        i21 = $i19 + $i18;

        goto label8;

     label3:
        $i15 = <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_EVEN_INDEX>;

        $i14 = i6 * 6;

        i21 = $i15 + $i14;

        goto label8;

     label4:
        $i17 = <org.apache.poi.hdf.extractor.WordDocument: int HEADER_ODD_INDEX>;

        $i16 = i6 * 6;

        i21 = $i17 + $i16;

        goto label8;

     label5:
        $i13 = <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_ODD_INDEX>;

        $i12 = i6 * 6;

        i21 = $i13 + $i12;

        goto label8;

     label6:
        $i11 = <org.apache.poi.hdf.extractor.WordDocument: int HEADER_FIRST_INDEX>;

        $i10 = i6 * 6;

        i21 = $i11 + $i10;

        goto label8;

     label7:
        $i8 = <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_FIRST_INDEX>;

        $i7 = i6 * 6;

        i21 = $i8 + $i7;

     label8:
        $r3 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _plcfHdd>;

        $i22 = i21 * 4;

        $i23 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r3, $i22);

        $i24 = i20 + $i23;

        $r4 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _plcfHdd>;

        $i25 = i21 + 1;

        $i26 = $i25 * 4;

        $i27 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r4, $i26);

        $i28 = i20 + $i27;

        $r5 = new org.apache.poi.hdf.extractor.HeaderFooter;

        specialinvoke $r5.<org.apache.poi.hdf.extractor.HeaderFooter: void <init>(int,int,int)>(i5, $i24, $i28);

        r6 = $r5;

        $i29 = $i28 - $i24;

        if $i29 != 0 goto label9;

        if i6 <= 1 goto label9;

        $i9 = i6 - 1;

        r6 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(i5, $i9);

     label9:
        return r6;
    }

    private void initDocProperties(byte[])
    {
        byte[] $r1, $r2, r3, r4;
        byte $b2, $b3, $b4, $b5;
        org.apache.poi.hdf.extractor.WordDocument r0;
        boolean $z0;
        short $s7, $s8, $s10, $s12, $s13, $s15, $s17, $s18;
        int $i0, $i1, $i6, $i9, $i11, $i14, $i16, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i29, $i30, $i31;
        org.apache.poi.hdf.extractor.data.DOP $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 402);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, 406);

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i0, r3, 0, $i1);

        $r5 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $b2 = r3[0];

        $b3 = $b2 & 1;

        $i19 = (int) $b3;

        if $i19 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5.<org.apache.poi.hdf.extractor.data.DOP: boolean _fFacingPages> = $z0;

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $b4 = r3[0];

        $b5 = $b4 & 96;

        $i20 = (int) $b5;

        $i6 = $i20 >> 5;

        $r6.<org.apache.poi.hdf.extractor.data.DOP: int _fpc> = $i6;

        $s7 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r3, 2);

        $r7 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $s8 = $s7 & 3;

        $i21 = (int) $s8;

        $r7.<org.apache.poi.hdf.extractor.data.DOP: int _rncFtn> = $i21;

        $r8 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $i22 = (int) $s7;

        $i24 = (int) 65532;

        $i9 = $i22 & $i24;

        $s10 = (short) $i9;

        $i25 = (int) $s10;

        $i11 = $i25 >> 2;

        $r8.<org.apache.poi.hdf.extractor.data.DOP: int _nFtn> = $i11;

        $s12 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r3, 52);

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $s13 = $s12 & 3;

        $i26 = (int) $s13;

        $r9.<org.apache.poi.hdf.extractor.data.DOP: int _rncEdn> = $i26;

        $r10 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $i27 = (int) $s12;

        $i29 = (int) 65532;

        $i14 = $i27 & $i29;

        $s15 = (short) $i14;

        $i30 = (int) $s15;

        $i16 = $i30 >> 2;

        $r10.<org.apache.poi.hdf.extractor.data.DOP: int _nEdn> = $i16;

        $s17 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r3, 54);

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $s18 = $s17 & 3;

        $i31 = (int) $s18;

        $r11.<org.apache.poi.hdf.extractor.data.DOP: int _epc> = $i31;

        return;
    }

    public void writeSection(int, int, org.apache.poi.hdf.extractor.SEP, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.StyleSheet)
    {
        java.lang.StringBuilder $r15, $r16, $r17, $r20, $r21, $r22, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r37, $r40, $r41, $r42, $r46, $r47, $r48, $r51, $r52, $r53, $r58, $r59, $r60, $r62, $r63, $r64, $r66, $r67, $r68, $r70, $r71, $r72, $r74, $r75, $r76, $r78, $r79, $r80, $r82, $r83, $r84, $r87, $r88, $r89;
        org.apache.poi.hdf.extractor.StyleSheet r92;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        org.apache.poi.hdf.extractor.data.DOP $r7;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.String $r9, $r10, $r11, $r18, $r19, $r23, $r24, $r25, $r26, $r30, $r34, $r38, $r39, $r43, $r44, $r45, $r49, $r50, $r54, $r55, $r56, $r57, $r61, $r65, $r69, $r73, $r77, $r81, $r85, $r86, $r90, $r91, r93;
        org.apache.poi.hdf.extractor.HeaderFooter $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.poi.hdf.extractor.SEP r8;
        org.apache.poi.hdf.extractor.util.BTreeSet r12, r13, r14;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        r8 := @parameter2: org.apache.poi.hdf.extractor.SEP;

        r12 := @parameter3: org.apache.poi.hdf.extractor.util.BTreeSet;

        r13 := @parameter4: org.apache.poi.hdf.extractor.util.BTreeSet;

        r14 := @parameter5: org.apache.poi.hdf.extractor.util.BTreeSet;

        r92 := @parameter6: org.apache.poi.hdf.extractor.StyleSheet;

        $i0 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r1 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(5, $i0);

        $i1 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r2 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(6, $i1);

        $i2 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r3 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(2, $i2);

        $i3 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r4 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(1, $i3);

        $i4 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r5 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(4, $i4);

        $i5 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r6 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.HeaderFooter findSectionHdrFtr(int,int)>(3, $i5);

        r93 = null;

        $r7 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.DOP _docProps>;

        $z0 = $r7.<org.apache.poi.hdf.extractor.data.DOP: boolean _fFacingPages>;

        if $z0 == 0 goto label08;

        $z5 = r8.<org.apache.poi.hdf.extractor.SEP: boolean _fTitlePage>;

        if $z5 == 0 goto label01;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-header");

        $i28 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        $r86 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(1, $r1, r8, $r85);

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-footer");

        $i29 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        $r91 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(0, $r2, r8, $r90);

        $i30 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        r93 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP,java.lang.String,int,java.lang.String,java.lang.String)>(r8, "first", $i30, $r86, $r91);

     label01:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("even-header");

        $i15 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(1, $r4, r8, $r38);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("even-footer");

        $i16 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(0, $r6, r8, $r43);

        $i17 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r45 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP,java.lang.String,int,java.lang.String,java.lang.String)>(r8, "even", $i17, $r39, $r44);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("odd-header");

        $i18 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(1, $r3, r8, $r49);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("odd-footer");

        $i19 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r55 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(0, $r5, r8, $r54);

        $i20 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r56 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP,java.lang.String,int,java.lang.String,java.lang.String)>(r8, "odd", $i20, $r50, $r55);

        $i21 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r57 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createEvenOddPageSequence(java.lang.String,java.lang.String,java.lang.String,int)>(r93, $r45, $r56, $i21);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openPage(java.lang.String,java.lang.String)>($r57, "reference");

        $z6 = r8.<org.apache.poi.hdf.extractor.SEP: boolean _fTitlePage>;

        if $z6 == 0 goto label03;

        $z10 = virtualinvoke $r1.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z10 != 0 goto label02;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-header");

        $i27 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r81, $r1);

     label02:
        $z11 = virtualinvoke $r2.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z11 != 0 goto label03;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-footer");

        $i26 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r77, $r2);

     label03:
        $z12 = virtualinvoke $r3.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z12 != 0 goto label04;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("odd-header");

        $i25 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r73, $r3);

     label04:
        $z7 = virtualinvoke $r5.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z7 != 0 goto label05;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("odd-footer");

        $i24 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r69, $r5);

     label05:
        $z8 = virtualinvoke $r4.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z8 != 0 goto label06;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("even-header");

        $i23 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r65, $r4);

     label06:
        $z9 = virtualinvoke $r6.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z9 != 0 goto label07;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("even-footer");

        $i22 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r61, $r6);

     label07:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openFlow()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBlockContent(int,int,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet)>(i7, i8, r12, r13, r14);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closeFlow()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closePage()>();

        goto label14;

     label08:
        $r9 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(1, $r3, r8, null);

        $r10 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(0, $r5, r8, null);

        $i6 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r11 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP,java.lang.String,int,java.lang.String,java.lang.String)>(r8, "page", $i6, $r9, $r10);

        $z1 = r8.<org.apache.poi.hdf.extractor.SEP: boolean _fTitlePage>;

        if $z1 == 0 goto label10;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-header");

        $i9 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(1, $r1, r8, $r18);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-footer");

        $i10 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createRegion(boolean,org.apache.poi.hdf.extractor.HeaderFooter,org.apache.poi.hdf.extractor.SEP,java.lang.String)>(0, $r2, r8, $r23);

        $i11 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r25 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP,java.lang.String,int,java.lang.String,java.lang.String)>(r8, "first", $i11, $r19, $r24);

        $i12 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r26 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String createPageSequence(java.lang.String,java.lang.String,int)>($r25, $r11, $i12);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openPage(java.lang.String,java.lang.String)>($r26, "reference");

        $z3 = virtualinvoke $r1.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z3 != 0 goto label09;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-header");

        $i14 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r34, $r1);

     label09:
        $z4 = virtualinvoke $r2.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z4 != 0 goto label11;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title-footer");

        $i13 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>($r30, $r2);

        goto label11;

     label10:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openPage(java.lang.String,java.lang.String)>($r11, "name");

     label11:
        $z13 = virtualinvoke $r3.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z13 != 0 goto label12;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>("xsl-region-before", $r3);

     label12:
        $z2 = virtualinvoke $r5.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z2 != 0 goto label13;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addStaticContent(java.lang.String,org.apache.poi.hdf.extractor.HeaderFooter)>("xsl-region-after", $r5);

     label13:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void openFlow()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBlockContent(int,int,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet)>(i7, i8, r12, r13, r14);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closeFlow()>();

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closePage()>();

     label14:
        $i31 = r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter>;

        $i32 = $i31 + 1;

        r0.<org.apache.poi.hdf.extractor.WordDocument: int _sectionCounter> = $i32;

        return;
    }

    private int calculateHeaderHeight(int, int, int)
    {
        byte[] $r13, $r16;
        java.lang.Integer $r10, $r26, r30;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.hdf.extractor.util.ChpxNode r12;
        java.util.ArrayList $r3, $r9, $r23, $r31;
        short $s10;
        java.lang.StringBuffer $r32;
        java.lang.String $r25;
        org.apache.poi.hdf.extractor.CHP $r17, r20;
        boolean $z0;
        org.apache.poi.hdf.extractor.StyleSheet $r14, $r18;
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode $r2, $r8, $r22;
        org.apache.poi.hdf.extractor.util.PapxNode r29;
        org.apache.poi.hdf.extractor.StyleDescription $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, $i31;
        org.apache.poi.hdf.extractor.util.BTreeSet $r1, $r7, $r21;
        org.apache.poi.hdf.extractor.TextPiece r28;
        java.lang.Object $r5, $r6, $r11, $r19, $r27;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i19 := @parameter2: int;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable>;

        $r2 = $r1.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r3 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i0, i1, $r2);

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        i24 = 0;

     label01:
        if i24 >= $i2 goto label09;

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r29 = (org.apache.poi.hdf.extractor.util.PapxNode) $r6;

        $i5 = virtualinvoke r29.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, i0);

        $i7 = virtualinvoke r29.<org.apache.poi.hdf.extractor.util.PapxNode: int getEnd()>();

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i1);

        i25 = 0;

        i26 = 0;

        $r7 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r8 = $r7.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r9 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i6, $i8, $r8);

        $i9 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i27 = 0;

     label02:
        if i27 >= $i9 goto label08;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r12 = (org.apache.poi.hdf.extractor.util.ChpxNode) $r11;

        $r13 = virtualinvoke r29.<org.apache.poi.hdf.extractor.util.PapxNode: byte[] getPapx()>();

        $s10 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r13, 0);

        $r14 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $i31 = (int) $s10;

        $r15 = virtualinvoke $r14.<org.apache.poi.hdf.extractor.StyleSheet: org.apache.poi.hdf.extractor.StyleDescription getStyleDescription(int)>($i31);

        $r16 = virtualinvoke r12.<org.apache.poi.hdf.extractor.util.ChpxNode: byte[] getChpx()>();

        $r17 = virtualinvoke $r15.<org.apache.poi.hdf.extractor.StyleDescription: org.apache.poi.hdf.extractor.CHP getCHP()>();

        $r18 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r19 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r16, $r17, $r18);

        r20 = (org.apache.poi.hdf.extractor.CHP) $r19;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(i26, 10);

        i26 = $i11;

        $i12 = virtualinvoke r12.<org.apache.poi.hdf.extractor.util.ChpxNode: int getStart()>();

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i12);

        $i14 = virtualinvoke r12.<org.apache.poi.hdf.extractor.util.ChpxNode: int getEnd()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i14);

        $r21 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r22 = $r21.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r23 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i13, $i15, $r22);

        $i16 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        i28 = 0;

     label03:
        if i28 >= $i16 goto label06;

        $r27 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        r28 = (org.apache.poi.hdf.extractor.TextPiece) $r27;

        $i20 = virtualinvoke r28.<org.apache.poi.hdf.extractor.TextPiece: int getStart()>();

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i13);

        $i22 = virtualinvoke r28.<org.apache.poi.hdf.extractor.TextPiece: int getEnd()>();

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i22, $i15);

        $z0 = virtualinvoke r28.<org.apache.poi.hdf.extractor.TextPiece: boolean usesUnicode()>();

        if $z0 == 0 goto label04;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addUnicodeText(int,int,java.lang.StringBuffer)>($i21, $i23, $r32);

        goto label05;

     label04:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addText(int,int,java.lang.StringBuffer)>($i21, $i23, $r32);

     label05:
        i28 = i28 + 1;

        goto label03;

     label06:
        $r25 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        $i17 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i18 = 10 * $i17;

        i25 = i25 + $i18;

        if i25 <= i19 goto label07;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        i26 = 0;

        i25 = 0;

     label07:
        i27 = i27 + 1;

        goto label02;

     label08:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i24 = i24 + 1;

        goto label01;

     label09:
        i29 = 0;

        $i3 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        i30 = 0;

     label10:
        if i30 >= $i3 goto label11;

        $r5 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r30 = (java.lang.Integer) $r5;

        $i4 = virtualinvoke r30.<java.lang.Integer: int intValue()>();

        i29 = i29 + $i4;

        i30 = i30 + 1;

        goto label10;

     label11:
        return i29;
    }

    private java.lang.String createRegion(boolean, org.apache.poi.hdf.extractor.HeaderFooter, org.apache.poi.hdf.extractor.SEP, java.lang.String)
    {
        org.apache.poi.hdf.extractor.HeaderFooter r0;
        org.apache.poi.hdf.extractor.WordDocument r6;
        boolean $z0, z1;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        org.apache.poi.hdf.extractor.SEP r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        java.lang.String r3, $r18, r19, r20, r21;

        r6 := @this: org.apache.poi.hdf.extractor.WordDocument;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.apache.poi.hdf.extractor.HeaderFooter;

        r7 := @parameter2: org.apache.poi.hdf.extractor.SEP;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.poi.hdf.extractor.HeaderFooter: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("region-name=\"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if r3 != null goto label2;

        r19 = "";

     label2:
        $i0 = virtualinvoke r0.<org.apache.poi.hdf.extractor.HeaderFooter: int getStart()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hdf.extractor.HeaderFooter: int getEnd()>();

        $i2 = r7.<org.apache.poi.hdf.extractor.SEP: int _xaPage>;

        $i3 = $i2 / 20;

        $i4 = specialinvoke r6.<org.apache.poi.hdf.extractor.WordDocument: int calculateHeaderHeight(int,int,int)>($i0, $i1, $i3);

        if z1 == 0 goto label3;

        r20 = "before";

        r21 = "before";

        $i11 = r7.<org.apache.poi.hdf.extractor.SEP: int _dyaHdrTop>;

        i15 = $i11 / 20;

        i16 = $i4 + i15;

        $i13 = i16 * 20;

        $i12 = r7.<org.apache.poi.hdf.extractor.SEP: int _dyaTop>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i12);

        r7.<org.apache.poi.hdf.extractor.SEP: int _dyaTop> = $i14;

        goto label4;

     label3:
        r20 = "after";

        r21 = "after";

        $i5 = r7.<org.apache.poi.hdf.extractor.SEP: int _dyaHdrBottom>;

        i17 = $i5 / 20;

        i16 = $i4 + i17;

        $i7 = i16 * 20;

        $i6 = r7.<org.apache.poi.hdf.extractor.SEP: int _dyaBottom>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        r7.<org.apache.poi.hdf.extractor.SEP: int _dyaBottom> = $i8;

     label4:
        $i9 = r7.<org.apache.poi.hdf.extractor.SEP: int _dxaLeft>;

        $i10 = r7.<org.apache.poi.hdf.extractor.SEP: int _dxaRight>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:region-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" display-align=\"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" extent=\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt\" ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    private java.lang.String createRegion(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        org.apache.poi.hdf.extractor.WordDocument r9;
        java.lang.String r2, r5, $r8;

        r9 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:region-");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" overflow=\"scroll\" region-name=\"");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private java.lang.String createEvenOddPageSequence(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.apache.poi.hdf.extractor.WordDocument r4;
        java.lang.StringBuilder $r0, $r1, $r2, $r5, $r7, $r8, $r9, $r14, $r16, $r18, $r19, $r22, $r24, $r26, $r27, $r31, $r33, $r34, $r35;
        java.lang.StringBuffer $r6, $r11, $r13, $r15, $r21, $r23, $r29, $r30, $r32;
        int i0;
        java.lang.String $r3, $r10, r12, r17, $r20, r25, $r28, $r36;

        r4 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r12 := @parameter0: java.lang.String;

        r25 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("my-sequence");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:page-sequence-master master-name=\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"> ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:repeatable-page-master-alternatives>");

        if r12 == null goto label1;

        $r32 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:conditional-page-master-reference page-position=\"first\" master-reference=\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

     label1:
        $r13 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:conditional-page-master-reference odd-or-even=\"odd\" ");

        $r15 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("master-reference=\"");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/> ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r21 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:conditional-page-master-reference odd-or-even=\"even\" ");

        $r23 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("master-reference=\"");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/> ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r29 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:repeatable-page-master-alternatives>");

        $r30 = r4.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:page-sequence-master>");

        return $r3;
    }

    private java.lang.String createPageSequence(java.lang.String, java.lang.String, int)
    {
        java.lang.StringBuffer $r7, $r13, $r19, $r25;
        int i0;
        org.apache.poi.hdf.extractor.WordDocument r5;
        java.lang.String r0, $r4, $r11, $r17, r21, $r24, r26;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r20, $r22, $r23;

        r5 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: java.lang.String;

        r21 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r26 = null;

        if r0 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("my-sequence");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = $r4;

        $r7 = r5.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:page-sequence-master master-name=\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"> ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = r5.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:single-page-master-reference master-reference=\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = r5.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:repeatable-page-master-reference master-reference=\"");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r25 = r5.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:page-sequence-master>");

     label1:
        return r26;
    }

    private void addBlockContent(int, int, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.util.BTreeSet)
    {
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode r1;
        org.apache.poi.hdf.extractor.util.PapxNode r5;
        java.util.ArrayList $r3;
        int i0, i1, $i2, i3;
        org.apache.poi.hdf.extractor.WordDocument r2;
        java.lang.Object $r4;
        org.apache.poi.hdf.extractor.util.BTreeSet r0, r6, r7;

        r2 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: org.apache.poi.hdf.extractor.util.BTreeSet;

        r0 := @parameter3: org.apache.poi.hdf.extractor.util.BTreeSet;

        r6 := @parameter4: org.apache.poi.hdf.extractor.util.BTreeSet;

        r1 = r0.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r3 = specialinvoke r2.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i0, i1, r1);

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label2;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (org.apache.poi.hdf.extractor.util.PapxNode) $r4;

        specialinvoke r2.<org.apache.poi.hdf.extractor.WordDocument: void createParagraph(int,int,org.apache.poi.hdf.extractor.util.PapxNode,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet)>(i0, i1, r5, r6, r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.String getTextAlignment(byte)
    {
        int $i1;
        org.apache.poi.hdf.extractor.WordDocument r0;
        byte b0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return "start";

     label2:
        return "center";

     label3:
        return "end";

     label4:
        return "justify";

     label5:
        return "left";
    }

    private void createParagraph(int, int, org.apache.poi.hdf.extractor.util.PapxNode, org.apache.poi.hdf.extractor.util.BTreeSet, org.apache.poi.hdf.extractor.util.BTreeSet)
    {
        byte[] $r2;
        org.apache.poi.hdf.extractor.PAP $r5, r8;
        org.apache.poi.hdf.extractor.TAP $r19, $r27;
        org.apache.poi.hdf.extractor.data.ListTables $r9;
        byte $b1, $b5, $b7;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.hdf.extractor.TableRow $r28;
        org.apache.poi.hdf.extractor.StyleSheet $r3, $r6, $r13;
        org.apache.poi.hdf.extractor.util.PapxNode r1;
        java.util.ArrayList $r11, $r16, $r17, $r26;
        short $s0;
        org.apache.poi.hdf.extractor.data.LVL $r10;
        org.apache.poi.hdf.extractor.StyleDescription $r4;
        java.lang.StringBuffer $r20, r24, $r25;
        int $i2, i3, i4, $i6, $i8, $i9, $i10;
        org.apache.poi.hdf.extractor.util.BTreeSet r22, r23;
        java.lang.Object $r7, $r14;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hdf.extractor.util.PapxNode;

        r22 := @parameter3: org.apache.poi.hdf.extractor.util.BTreeSet;

        r23 := @parameter4: org.apache.poi.hdf.extractor.util.BTreeSet;

        r24 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        $r2 = virtualinvoke r1.<org.apache.poi.hdf.extractor.util.PapxNode: byte[] getPapx()>();

        $s0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r2, 0);

        $r3 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $i8 = (int) $s0;

        $r4 = virtualinvoke $r3.<org.apache.poi.hdf.extractor.StyleSheet: org.apache.poi.hdf.extractor.StyleDescription getStyleDescription(int)>($i8);

        $r5 = virtualinvoke $r4.<org.apache.poi.hdf.extractor.StyleDescription: org.apache.poi.hdf.extractor.PAP getPAP()>();

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r7 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r2, $r5, $r6);

        r8 = (org.apache.poi.hdf.extractor.PAP) $r7;

        $b1 = r8.<org.apache.poi.hdf.extractor.PAP: byte _fInTable>;

        $i9 = (int) $b1;

        if $i9 <= 0 goto label4;

        $b7 = r8.<org.apache.poi.hdf.extractor.PAP: byte _fTtp>;

        if $b7 != 0 goto label2;

        $r20 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        if $r20 != null goto label1;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer> = $r25;

     label1:
        r24 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        goto label5;

     label2:
        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table>;

        if $r11 != null goto label3;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table> = $r26;

     label3:
        $r27 = new org.apache.poi.hdf.extractor.TAP;

        specialinvoke $r27.<org.apache.poi.hdf.extractor.TAP: void <init>()>();

        $r13 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r14 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r2, $r27, $r13);

        $r19 = (org.apache.poi.hdf.extractor.TAP) $r14;

        $r28 = new org.apache.poi.hdf.extractor.TableRow;

        $r16 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _cells>;

        specialinvoke $r28.<org.apache.poi.hdf.extractor.TableRow: void <init>(java.util.ArrayList,org.apache.poi.hdf.extractor.TAP)>($r16, $r19);

        $r17 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _cells> = null;

        return;

     label4:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void printTable()>();

     label5:
        $i2 = r8.<org.apache.poi.hdf.extractor.PAP: int _ilfo>;

        if $i2 <= 0 goto label6;

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.ListTables _listTables>;

        $i6 = r8.<org.apache.poi.hdf.extractor.PAP: int _ilfo>;

        $b5 = r8.<org.apache.poi.hdf.extractor.PAP: byte _ilvl>;

        $i10 = (int) $b5;

        $r10 = virtualinvoke $r9.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LVL getLevel(int,int)>($i6, $i10);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addListParagraphContent(org.apache.poi.hdf.extractor.data.LVL,java.lang.StringBuffer,org.apache.poi.hdf.extractor.PAP,org.apache.poi.hdf.extractor.util.PapxNode,int,int,org.apache.poi.hdf.extractor.StyleDescription)>($r10, r24, r8, r1, i3, i4, $r4);

        goto label7;

     label6:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addParagraphContent(java.lang.StringBuffer,org.apache.poi.hdf.extractor.PAP,org.apache.poi.hdf.extractor.util.PapxNode,int,int,org.apache.poi.hdf.extractor.StyleDescription)>(r24, r8, r1, i3, i4, $r4);

     label7:
        return;
    }

    private void addListParagraphContent(org.apache.poi.hdf.extractor.data.LVL, java.lang.StringBuffer, org.apache.poi.hdf.extractor.PAP, org.apache.poi.hdf.extractor.util.PapxNode, int, int, org.apache.poi.hdf.extractor.StyleDescription)
    {
        byte[] $r3, $r12, $r18, $r23;
        org.apache.poi.hdf.extractor.PAP r33, r34;
        byte $b12;
        org.apache.poi.hdf.extractor.WordDocument r1;
        org.apache.poi.hdf.extractor.util.ChpxNode $r11, r22;
        java.util.ArrayList $r9, $r30;
        short $s24;
        java.lang.StringBuffer r5;
        java.lang.String $r20;
        org.apache.poi.hdf.extractor.CHP $r14, $r24, r27, r35, r36;
        boolean $z0;
        org.apache.poi.hdf.extractor.StyleSheet $r2, $r15, $r17, $r25;
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode $r8, $r29;
        org.apache.poi.hdf.extractor.util.PapxNode r6;
        org.apache.poi.hdf.extractor.data.LVL r0;
        org.apache.poi.hdf.extractor.StyleDescription r13;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i25, i26, i27, i28, i29, i30, $i32, $i33;
        org.apache.poi.hdf.extractor.util.BTreeSet $r7, $r28;
        org.apache.poi.hdf.extractor.TextPiece r32;
        java.lang.Object $r4, $r10, $r16, $r19, $r21, $r26, $r31;

        r1 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: org.apache.poi.hdf.extractor.data.LVL;

        r5 := @parameter1: java.lang.StringBuffer;

        r33 := @parameter2: org.apache.poi.hdf.extractor.PAP;

        r6 := @parameter3: org.apache.poi.hdf.extractor.util.PapxNode;

        i1 := @parameter4: int;

        i4 := @parameter5: int;

        r13 := @parameter6: org.apache.poi.hdf.extractor.StyleDescription;

        $r3 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _papx>;

        $r2 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r4 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet,boolean)>($r3, r33, $r2, 0);

        r34 = (org.apache.poi.hdf.extractor.PAP) $r4;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addParagraphProperties(org.apache.poi.hdf.extractor.PAP,java.lang.StringBuffer)>(r34, r5);

        $i0 = virtualinvoke r6.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, i1);

        $i3 = virtualinvoke r6.<org.apache.poi.hdf.extractor.util.PapxNode: int getEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i4);

        $r7 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r8 = $r7.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r9 = specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i2, $i5, $r8);

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i7 = $i6 - 1;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        $r11 = (org.apache.poi.hdf.extractor.util.ChpxNode) $r10;

        $r12 = virtualinvoke $r11.<org.apache.poi.hdf.extractor.util.ChpxNode: byte[] getChpx()>();

        $r14 = virtualinvoke r13.<org.apache.poi.hdf.extractor.StyleDescription: org.apache.poi.hdf.extractor.CHP getCHP()>();

        $r15 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r16 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r12, $r14, $r15);

        r35 = (org.apache.poi.hdf.extractor.CHP) $r16;

        $r18 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _chpx>;

        $r17 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r19 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r18, r35, $r17);

        r36 = (org.apache.poi.hdf.extractor.CHP) $r19;

        $i8 = r34.<org.apache.poi.hdf.extractor.PAP: int _dxaLeft1>;

        $i32 = (int) -1;

        i25 = $i32 * $i8;

        $r20 = specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getBulletText(org.apache.poi.hdf.extractor.data.LVL,org.apache.poi.hdf.extractor.PAP)>(r0, r34);

        $i9 = virtualinvoke $r20.<java.lang.String: int length()>();

        $i10 = $i9 * 10;

        $i11 = $i10 * 20;

        i26 = i25 - $i11;

        if i26 <= 0 goto label01;

        $s24 = (short) i26;

        r36.<org.apache.poi.hdf.extractor.CHP: short _paddingEnd> = $s24;

     label01:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addCharacterProperties(org.apache.poi.hdf.extractor.CHP,java.lang.StringBuffer)>(r36, r5);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $b12 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte _ixchFollow>;

        $i33 = (int) $b12;

        lookupswitch($i33)
        {
            case 0: goto label02;
            case 1: goto label03;
            default: goto label04;
        };

     label02:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addText(char,java.lang.StringBuffer)>(9, r5);

        goto label04;

     label03:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addText(char,java.lang.StringBuffer)>(32, r5);

     label04:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void closeLine(java.lang.StringBuffer)>(r5);

        i27 = 0;

     label05:
        if i27 >= $i6 goto label10;

        $r21 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r22 = (org.apache.poi.hdf.extractor.util.ChpxNode) $r21;

        $r23 = virtualinvoke r22.<org.apache.poi.hdf.extractor.util.ChpxNode: byte[] getChpx()>();

        $r24 = virtualinvoke r13.<org.apache.poi.hdf.extractor.StyleDescription: org.apache.poi.hdf.extractor.CHP getCHP()>();

        $r25 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r26 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r23, $r24, $r25);

        r27 = (org.apache.poi.hdf.extractor.CHP) $r26;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addCharacterProperties(org.apache.poi.hdf.extractor.CHP,java.lang.StringBuffer)>(r27, r5);

        $i13 = virtualinvoke r22.<org.apache.poi.hdf.extractor.util.ChpxNode: int getStart()>();

        $i14 = virtualinvoke r6.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i14);

        i28 = $i15;

        $i16 = virtualinvoke r22.<org.apache.poi.hdf.extractor.util.ChpxNode: int getEnd()>();

        $i17 = virtualinvoke r6.<org.apache.poi.hdf.extractor.util.PapxNode: int getEnd()>();

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i17);

        i29 = $i18;

        $r28 = r1.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r29 = $r28.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r30 = specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i15, $i18, $r29);

        $i19 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        i30 = 0;

     label06:
        if i30 >= $i19 goto label09;

        $r31 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r32 = (org.apache.poi.hdf.extractor.TextPiece) $r31;

        $i20 = virtualinvoke r32.<org.apache.poi.hdf.extractor.TextPiece: int getStart()>();

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>(i28, $i20);

        i28 = $i21;

        $i22 = virtualinvoke r32.<org.apache.poi.hdf.extractor.TextPiece: int getEnd()>();

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i29, $i22);

        i29 = $i23;

        $z0 = virtualinvoke r32.<org.apache.poi.hdf.extractor.TextPiece: boolean usesUnicode()>();

        if $z0 == 0 goto label07;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addUnicodeText(int,int,java.lang.StringBuffer)>($i21, $i23, r5);

        goto label08;

     label07:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void addText(int,int,java.lang.StringBuffer)>($i21, $i23, r5);

     label08:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void closeLine(java.lang.StringBuffer)>(r5);

        i30 = i30 + 1;

        goto label06;

     label09:
        i27 = i27 + 1;

        goto label05;

     label10:
        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void closeBlock(java.lang.StringBuffer)>(r5);

        return;
    }

    private void addParagraphContent(java.lang.StringBuffer, org.apache.poi.hdf.extractor.PAP, org.apache.poi.hdf.extractor.util.PapxNode, int, int, org.apache.poi.hdf.extractor.StyleDescription)
    {
        byte[] $r9;
        org.apache.poi.hdf.extractor.PAP r1;
        org.apache.poi.hdf.extractor.WordDocument r0;
        boolean $z0;
        org.apache.poi.hdf.extractor.util.ChpxNode r8;
        org.apache.poi.hdf.extractor.StyleSheet $r12;
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode $r5, $r16;
        org.apache.poi.hdf.extractor.util.PapxNode r3;
        java.util.ArrayList $r6, $r17;
        org.apache.poi.hdf.extractor.StyleDescription r10;
        java.lang.StringBuffer r2;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        org.apache.poi.hdf.extractor.util.BTreeSet $r4, $r15;
        org.apache.poi.hdf.extractor.TextPiece r19;
        org.apache.poi.hdf.extractor.CHP $r11, r14;
        java.lang.Object $r7, $r13, $r18;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r2 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: org.apache.poi.hdf.extractor.PAP;

        r3 := @parameter2: org.apache.poi.hdf.extractor.util.PapxNode;

        i1 := @parameter3: int;

        i4 := @parameter4: int;

        r10 := @parameter5: org.apache.poi.hdf.extractor.StyleDescription;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addParagraphProperties(org.apache.poi.hdf.extractor.PAP,java.lang.StringBuffer)>(r1, r2);

        $i0 = virtualinvoke r3.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, i1);

        $i3 = virtualinvoke r3.<org.apache.poi.hdf.extractor.util.PapxNode: int getEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i4);

        $r4 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        $r5 = $r4.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r6 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i2, $i5, $r5);

        $i6 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i18 = 0;

     label1:
        if i18 >= $i6 goto label6;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r8 = (org.apache.poi.hdf.extractor.util.ChpxNode) $r7;

        $r9 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.ChpxNode: byte[] getChpx()>();

        $r11 = virtualinvoke r10.<org.apache.poi.hdf.extractor.StyleDescription: org.apache.poi.hdf.extractor.CHP getCHP()>();

        $r12 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet>;

        $r13 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: java.lang.Object uncompressProperty(byte[],java.lang.Object,org.apache.poi.hdf.extractor.StyleSheet)>($r9, $r11, $r12);

        r14 = (org.apache.poi.hdf.extractor.CHP) $r13;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addCharacterProperties(org.apache.poi.hdf.extractor.CHP,java.lang.StringBuffer)>(r14, r2);

        $i7 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.ChpxNode: int getStart()>();

        $i8 = virtualinvoke r3.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        i19 = $i9;

        $i10 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.ChpxNode: int getEnd()>();

        $i11 = virtualinvoke r3.<org.apache.poi.hdf.extractor.util.PapxNode: int getEnd()>();

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);

        i20 = $i12;

        $r15 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r16 = $r15.<org.apache.poi.hdf.extractor.util.BTreeSet: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode root>;

        $r17 = specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>($i9, $i12, $r16);

        $i13 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i21 = 0;

     label2:
        if i21 >= $i13 goto label5;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r19 = (org.apache.poi.hdf.extractor.TextPiece) $r18;

        $i14 = virtualinvoke r19.<org.apache.poi.hdf.extractor.TextPiece: int getStart()>();

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>(i19, $i14);

        i19 = $i15;

        $i16 = virtualinvoke r19.<org.apache.poi.hdf.extractor.TextPiece: int getEnd()>();

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>(i20, $i16);

        i20 = $i17;

        $z0 = virtualinvoke r19.<org.apache.poi.hdf.extractor.TextPiece: boolean usesUnicode()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addUnicodeText(int,int,java.lang.StringBuffer)>($i15, $i17, r2);

        goto label4;

     label3:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addText(int,int,java.lang.StringBuffer)>($i15, $i17, r2);

     label4:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closeLine(java.lang.StringBuffer)>(r2);

        i21 = i21 + 1;

        goto label2;

     label5:
        i18 = i18 + 1;

        goto label1;

     label6:
        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void closeBlock(java.lang.StringBuffer)>(r2);

        return;
    }

    private void addText(int, int, java.lang.StringBuffer)
    {
        byte[] $r1;
        char c4;
        byte $b2;
        java.lang.StringBuffer r2;
        int i0, i1, i3;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.StringBuffer;

        i3 = i0;

     label1:
        if i3 >= i1 goto label2;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $b2 = $r1[i3];

        c4 = (char) $b2;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addText(char,java.lang.StringBuffer)>(c4, r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void addText(char, java.lang.StringBuffer)
    {
        java.util.ArrayList $r3, $r7, $r10;
        java.lang.StringBuffer r0, $r2, $r4, $r5, $r6;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.poi.hdf.extractor.WordDocument r1;
        java.lang.String $r8;
        char c0;

        r1 := @this: org.apache.poi.hdf.extractor.WordDocument;

        c0 := @parameter0: char;

        r0 := @parameter1: java.lang.StringBuffer;

        i1 = 65535 & c0;

        $i2 = (int) c0;

        if $i2 < 97 goto label1;

        $i3 = (int) c0;

        if $i3 <= 122 goto label4;

     label1:
        $i4 = (int) c0;

        if $i4 < 65 goto label2;

        $i5 = (int) c0;

        if $i5 <= 90 goto label4;

     label2:
        $i6 = (int) c0;

        if $i6 < 48 goto label3;

        $i7 = (int) c0;

        if $i7 <= 57 goto label4;

     label3:
        $i8 = (int) c0;

        if $i8 == 95 goto label4;

        $i9 = (int) c0;

        if $i9 == 32 goto label4;

        $i10 = (int) c0;

        if $i10 == 45 goto label4;

        $i11 = (int) c0;

        if $i11 == 46 goto label4;

        $i12 = (int) c0;

        if $i12 != 36 goto label5;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label9;

     label5:
        if i1 != 7 goto label7;

        $r2 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        if $r2 == null goto label7;

        $r3 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _cells>;

        if $r3 != null goto label6;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _cells> = $r10;

     label6:
        $r4 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void closeLine(java.lang.StringBuffer)>($r4);

        $r5 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: void closeBlock(java.lang.StringBuffer)>($r5);

        $r7 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _cells>;

        $r6 = r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _cellBuffer> = null;

        goto label9;

     label7:
        if i1 >= 32 goto label8;

        i1 = 32;

     label8:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

     label9:
        return;
    }

    private void addUnicodeText(int, int, java.lang.StringBuffer)
    {
        byte[] $r1;
        java.lang.StringBuffer r2;
        int i0, i1, i3;
        org.apache.poi.hdf.extractor.WordDocument r0;
        char $c2;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.StringBuffer;

        i3 = i0;

     label1:
        if i3 >= i1 goto label2;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $c2 = staticinvoke <org.apache.poi.hdf.extractor.Utils: char getUnicodeCharacter(byte[],int)>($r1, i3);

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addText(char,java.lang.StringBuffer)>($c2, r2);

        i3 = i3 + 2;

        goto label1;

     label2:
        return;
    }

    private void addParagraphProperties(org.apache.poi.hdf.extractor.PAP, java.lang.StringBuffer)
    {
        org.apache.poi.hdf.extractor.PAP r4;
        byte $b0, $b1, $b2, $b3, $b4;
        int[] $r9;
        org.apache.poi.hdf.extractor.WordDocument r3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.StringBuilder $r2, $r6, $r7, $r15, $r16, $r17, $r20, $r21, $r22, $r25, $r26, $r27, $r29, $r30, $r31, $r32;
        short[] $r10, $r11, $r12, $r13;
        java.lang.StringBuffer r0;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r5, $r8, $r18, $r23, $r28;

        r3 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: org.apache.poi.hdf.extractor.PAP;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:block ");

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-align=\"");

        $b0 = r4.<org.apache.poi.hdf.extractor.PAP: byte _jc>;

        $r5 = specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getTextAlignment(byte)>($b0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("linefeed-treatment=\"preserve\" ");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("white-space-collapse=\"false\" ");

        $b1 = r4.<org.apache.poi.hdf.extractor.PAP: byte _fKeep>;

        $i12 = (int) $b1;

        if $i12 <= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("keep-together.within-page=\"always\"\r\n");

     label1:
        $b2 = r4.<org.apache.poi.hdf.extractor.PAP: byte _fKeepFollow>;

        $i13 = (int) $b2;

        if $i13 <= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("keep-with-next.within-page=\"always\"\r\n");

     label2:
        $b3 = r4.<org.apache.poi.hdf.extractor.PAP: byte _fPageBreakBefore>;

        $i14 = (int) $b3;

        if $i14 <= 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("break-before=\"page\"\r\n");

     label3:
        $b4 = r4.<org.apache.poi.hdf.extractor.PAP: byte _fNoAutoHyph>;

        if $b4 != 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hyphenate=\"true\"\r\n");

        goto label5;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hyphenate=\"false\"\r\n");

     label5:
        $i5 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaLeft>;

        if $i5 <= 0 goto label6;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start-indent=\"");

        $i11 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaLeft>;

        $f4 = (float) $i11;

        $f5 = $f4 / 1440.0F;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

     label6:
        $i6 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaRight>;

        if $i6 <= 0 goto label7;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end-indent=\"");

        $i10 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaRight>;

        $f2 = (float) $i10;

        $f3 = $f2 / 1440.0F;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label7:
        $i7 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaLeft1>;

        if $i7 == 0 goto label8;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-indent=\"");

        $i9 = r4.<org.apache.poi.hdf.extractor.PAP: int _dxaLeft1>;

        $f0 = (float) $i9;

        $f1 = $f0 / 1440.0F;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

     label8:
        $r9 = r4.<org.apache.poi.hdf.extractor.PAP: int[] _lspd>;

        $i8 = $r9[1];

        if $i8 != 0 goto label9;

     label9:
        $r10 = r4.<org.apache.poi.hdf.extractor.PAP: short[] _brcTop>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r10, "top");

        $r11 = r4.<org.apache.poi.hdf.extractor.PAP: short[] _brcBottom>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r11, "bottom");

        $r12 = r4.<org.apache.poi.hdf.extractor.PAP: short[] _brcLeft>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r12, "left");

        $r13 = r4.<org.apache.poi.hdf.extractor.PAP: short[] _brcRight>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r13, "right");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        return;
    }

    private void addCharacterProperties(org.apache.poi.hdf.extractor.CHP, java.lang.StringBuffer)
    {
        byte $b3, $b4, $b9;
        org.apache.poi.hdf.extractor.WordDocument r3;
        java.lang.StringBuilder $r2, $r7, $r8, $r11, $r12, $r13, $r16, $r18, $r19, $r26, $r27, $r28, $r31, $r32, $r33, $r36, $r38, $r39, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52;
        short $s0, $s5, $s6, $s7, $s8;
        java.lang.StringBuffer r0;
        java.lang.String $r6, $r9, $r14, $r17, $r20, $r29, $r34, $r37, $r40, $r45;
        org.apache.poi.hdf.extractor.CHP r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.poi.hdf.extractor.FontTable $r5;
        float $f0, $f1, $f2, $f3;
        short[] $r21, $r22, $r23, $r24;
        int $i1, $i2, $i10, i11, $i12, $i13, $i14, $i15;

        r3 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: org.apache.poi.hdf.extractor.CHP;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:inline ");

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-family=\"");

        $r5 = r3.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.FontTable _fonts>;

        $s0 = r4.<org.apache.poi.hdf.extractor.CHP: short _ftcAscii>;

        $i12 = (int) $s0;

        $r6 = virtualinvoke $r5.<org.apache.poi.hdf.extractor.FontTable: java.lang.String getFont(int)>($i12);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-size=\"");

        $i1 = r4.<org.apache.poi.hdf.extractor.CHP: int _hps>;

        $i2 = $i1 / 2;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt\" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color=\"");

        $b3 = r4.<org.apache.poi.hdf.extractor.CHP: byte _ico>;

        $i13 = (int) $b3;

        $r17 = specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getColor(int)>($i13);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r21 = r4.<org.apache.poi.hdf.extractor.CHP: short[] _brc>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r21, "top");

        $r22 = r4.<org.apache.poi.hdf.extractor.CHP: short[] _brc>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r22, "bottom");

        $r23 = r4.<org.apache.poi.hdf.extractor.CHP: short[] _brc>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r23, "left");

        $r24 = r4.<org.apache.poi.hdf.extractor.CHP: short[] _brc>;

        specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r0, $r24, "right");

        $z0 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _italic>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("font-style=\"italic\" ");

     label01:
        $z1 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _bold>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("font-weight=\"bold\" ");

     label02:
        $z2 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fSmallCaps>;

        if $z2 == 0 goto label03;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("font-variant=\"small-caps\" ");

     label03:
        $z3 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fCaps>;

        if $z3 == 0 goto label04;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text-transform=\"uppercase\" ");

     label04:
        $z4 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fStrike>;

        if $z4 != 0 goto label05;

        $z7 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fDStrike>;

        if $z7 == 0 goto label06;

     label05:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text-decoration=\"line-through\" ");

     label06:
        $z8 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fShadow>;

        if $z8 == 0 goto label07;

        $i10 = r4.<org.apache.poi.hdf.extractor.CHP: int _hps>;

        i11 = $i10 / 24;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-shadow=\"");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt\"");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

     label07:
        $z5 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _fLowerCase>;

        if $z5 == 0 goto label08;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text-transform=\"lowercase\" ");

     label08:
        $b4 = r4.<org.apache.poi.hdf.extractor.CHP: byte _kul>;

        $i14 = (int) $b4;

        if $i14 <= 0 goto label09;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text-decoration=\"underline\" ");

     label09:
        $z6 = r4.<org.apache.poi.hdf.extractor.CHP: boolean _highlighted>;

        if $z6 == 0 goto label10;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background-color=\"");

        $b9 = r4.<org.apache.poi.hdf.extractor.CHP: byte _icoHighlight>;

        $i15 = (int) $b9;

        $r37 = specialinvoke r3.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getColor(int)>($i15);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

     label10:
        $s5 = r4.<org.apache.poi.hdf.extractor.CHP: short _paddingStart>;

        if $s5 == 0 goto label11;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-start=\"");

        $s8 = r4.<org.apache.poi.hdf.extractor.CHP: short _paddingStart>;

        $f2 = (float) $s8;

        $f3 = $f2 / 1440.0F;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

     label11:
        $s6 = r4.<org.apache.poi.hdf.extractor.CHP: short _paddingEnd>;

        if $s6 == 0 goto label12;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-end=\"");

        $s7 = r4.<org.apache.poi.hdf.extractor.CHP: short _paddingEnd>;

        $f0 = (float) $s7;

        $f1 = $f0 / 1440.0F;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

     label12:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        return;
    }

    private void addStaticContent(java.lang.String, org.apache.poi.hdf.extractor.HeaderFooter)
    {
        java.lang.StringBuffer $r2, $r12;
        org.apache.poi.hdf.extractor.HeaderFooter r8;
        int $i0, $i1;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.lang.String r4, $r7;
        org.apache.poi.hdf.extractor.util.BTreeSet $r9, $r10, $r11;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: java.lang.String;

        r8 := @parameter1: org.apache.poi.hdf.extractor.HeaderFooter;

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:static-content flow-name=\"");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $i0 = virtualinvoke r8.<org.apache.poi.hdf.extractor.HeaderFooter: int getStart()>();

        $i1 = virtualinvoke r8.<org.apache.poi.hdf.extractor.HeaderFooter: int getEnd()>();

        $r11 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _text>;

        $r10 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _paragraphTable>;

        $r9 = r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.util.BTreeSet _characterTable>;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBlockContent(int,int,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet,org.apache.poi.hdf.extractor.util.BTreeSet)>($i0, $i1, $r11, $r10, $r9);

        $r12 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:static-content>");

        return;
    }

    private java.lang.String getBulletText(org.apache.poi.hdf.extractor.data.LVL, org.apache.poi.hdf.extractor.PAP)
    {
        org.apache.poi.hdf.extractor.PAP r7;
        org.apache.poi.hdf.extractor.data.ListTables $r9;
        org.apache.poi.hdf.extractor.data.LVL r1, $r10;
        byte $b9;
        java.lang.StringBuffer $r12;
        int $i0, $i4, $i5, $i6, i7, i8, $i10, $i11, $i13, $i14;
        org.apache.poi.hdf.extractor.WordDocument r6;
        java.lang.String $r3, $r11;
        char $c1, $c2, $c3;
        char[] $r2, $r4, $r5, $r8;

        r6 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r1 := @parameter0: org.apache.poi.hdf.extractor.data.LVL;

        r7 := @parameter1: org.apache.poi.hdf.extractor.PAP;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

     label1:
        $r2 = r1.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst>;

        $i0 = lengthof $r2;

        if i7 >= $i0 goto label6;

        $r4 = r1.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst>;

        $c1 = $r4[i7];

        $i10 = (int) $c1;

        if $i10 >= 9 goto label4;

        $r9 = r6.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.ListTables _listTables>;

        $i4 = r7.<org.apache.poi.hdf.extractor.PAP: int _ilfo>;

        $r8 = r1.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst>;

        $c3 = $r8[i7];

        $i11 = (int) $c3;

        $r10 = virtualinvoke $r9.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LVL getLevel(int,int)>($i4, $i11);

        i8 = $r10.<org.apache.poi.hdf.extractor.data.LVL: int _iStartAt>;

        if r1 != $r10 goto label2;

        $i5 = $r10.<org.apache.poi.hdf.extractor.data.LVL: int _iStartAt>;

        $i6 = $i5 + 1;

        $r10.<org.apache.poi.hdf.extractor.data.LVL: int _iStartAt> = $i6;

        goto label3;

     label2:
        if i8 <= 1 goto label3;

        $i13 = (int) -1;

        i8 = i8 + $i13;

     label3:
        $b9 = r1.<org.apache.poi.hdf.extractor.data.LVL: byte _nfc>;

        $i14 = (int) $b9;

        $r11 = staticinvoke <org.apache.poi.hdf.extractor.util.NumberFormatter: java.lang.String getNumber(int,int)>(i8, $i14);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label5;

     label4:
        $r5 = r1.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst>;

        $c2 = $r5[i7];

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        $r3 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private java.util.ArrayList findProperties(int, int, org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)
    {
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode r1, r5;
        java.util.ArrayList $r0, $r10, $r11, $r12;
        org.apache.poi.hdf.extractor.util.BTreeSet$Entry $r3, $r4, $r6;
        int $i0, i1, i2, $i3, $i4, i5;
        org.apache.poi.hdf.extractor.WordDocument r9;
        org.apache.poi.hdf.extractor.util.BTreeSet$Entry[] r2;
        org.apache.poi.hdf.extractor.util.PropertyNode r8;
        java.lang.Object $r7;

        r9 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r2 = r1.<org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode: org.apache.poi.hdf.extractor.util.BTreeSet$Entry[] _entries>;

        i5 = 0;

     label1:
        $i0 = lengthof r2;

        if i5 >= $i0 goto label8;

        $r3 = r2[i5];

        if $r3 == null goto label8;

        $r4 = r2[i5];

        r5 = $r4.<org.apache.poi.hdf.extractor.util.BTreeSet$Entry: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode child>;

        $r6 = r2[i5];

        $r7 = $r6.<org.apache.poi.hdf.extractor.util.BTreeSet$Entry: java.lang.Object element>;

        r8 = (org.apache.poi.hdf.extractor.util.PropertyNode) $r7;

        if r8 == null goto label6;

        $i3 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.PropertyNode: int getStart()>();

        $i4 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.PropertyNode: int getEnd()>();

        if $i3 >= i2 goto label4;

        if $i3 < i1 goto label3;

        if r5 == null goto label2;

        $r12 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r12);

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label5;

     label3:
        if i1 >= $i4 goto label5;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label5;

     label4:
        if r5 == null goto label8;

        $r11 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

        goto label8;

     label5:
        goto label7;

     label6:
        if r5 == null goto label7;

        $r10 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r10);

     label7:
        i5 = i5 + 1;

        goto label1;

     label8:
        return $r0;
    }

    private void openPage(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.lang.String r4, $r7, r8;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:page-sequence master-reference=\"");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\r\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        return;
    }

    private void openFlow()
    {
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:flow flow-name=\"xsl-region-body\">\r\n");

        return;
    }

    private void closeFlow()
    {
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:flow>\r\n");

        return;
    }

    private void closePage()
    {
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:page-sequence>\r\n");

        return;
    }

    private void closeLine(java.lang.StringBuffer)
    {
        org.apache.poi.hdf.extractor.WordDocument r1;
        java.lang.StringBuffer r0;

        r1 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:inline>");

        return;
    }

    private void closeBlock(java.lang.StringBuffer)
    {
        org.apache.poi.hdf.extractor.WordDocument r1;
        java.lang.StringBuffer r0;

        r1 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:block>\r\n");

        return;
    }

    private java.util.ArrayList findPAPProperties(int, int, org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)
    {
        org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode r1, r5;
        org.apache.poi.hdf.extractor.util.PapxNode r8;
        java.util.ArrayList $r0, $r10, $r11, $r12;
        org.apache.poi.hdf.extractor.util.BTreeSet$Entry $r3, $r4, $r6;
        int $i0, i1, i2, $i3, i4;
        org.apache.poi.hdf.extractor.WordDocument r9;
        org.apache.poi.hdf.extractor.util.BTreeSet$Entry[] r2;
        java.lang.Object $r7;

        r9 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r2 = r1.<org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode: org.apache.poi.hdf.extractor.util.BTreeSet$Entry[] _entries>;

        i4 = 0;

     label1:
        $i0 = lengthof r2;

        if i4 >= $i0 goto label7;

        $r3 = r2[i4];

        if $r3 == null goto label7;

        $r4 = r2[i4];

        r5 = $r4.<org.apache.poi.hdf.extractor.util.BTreeSet$Entry: org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode child>;

        $r6 = r2[i4];

        $r7 = $r6.<org.apache.poi.hdf.extractor.util.BTreeSet$Entry: java.lang.Object element>;

        r8 = (org.apache.poi.hdf.extractor.util.PapxNode) $r7;

        if r8 == null goto label5;

        $i3 = virtualinvoke r8.<org.apache.poi.hdf.extractor.util.PapxNode: int getStart()>();

        if $i3 >= i2 goto label3;

        if $i3 < i1 goto label4;

        if r5 == null goto label2;

        $r12 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findPAPProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r12);

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label4;

     label3:
        if r5 == null goto label7;

        $r11 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findPAPProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

        goto label7;

     label4:
        goto label6;

     label5:
        if r5 == null goto label6;

        $r10 = specialinvoke r9.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList findPAPProperties(int,int,org.apache.poi.hdf.extractor.util.BTreeSet$BTreeNode)>(i1, i2, r5);

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r10);

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return $r0;
    }

    private java.lang.String createPageMaster(org.apache.poi.hdf.extractor.SEP, java.lang.String, int, java.lang.String, java.lang.String)
    {
        org.apache.poi.hdf.extractor.WordDocument r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r10, $r11, $r12, $r16, $r17, $r18, $r22, $r23, $r24, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r55, $r56, $r57, $r62, $r63, $r64, $r67, $r68, $r69, $r70, $r71, $r72, $r73;
        short $s7, $s8;
        java.lang.StringBuffer $r9, $r15, $r21, $r26, $r27, $r29, $r41, $r43, $r45, $r47, $r50, $r51, $r52, $r54, $r59, $r61, $r66;
        java.lang.String r2, $r6, $r13, $r19, $r25, $r39, r48, r49, $r58, $r65;
        boolean $z0;
        float $f0, f1, $f2, f3, $f4, f5, $f6, f7, $f8, f9, $f10, f11, $f12, $f13;
        short[] $r40, $r42, $r44, $r46;
        org.apache.poi.hdf.extractor.SEP r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i9, $i10, $i11, $i12;

        r7 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r0 := @parameter0: org.apache.poi.hdf.extractor.SEP;

        r2 := @parameter1: java.lang.String;

        i6 := @parameter2: int;

        r48 := @parameter3: java.lang.String;

        r49 := @parameter4: java.lang.String;

        $i0 = r0.<org.apache.poi.hdf.extractor.SEP: int _yaPage>;

        $f0 = (float) $i0;

        f1 = $f0 / 1440.0F;

        $i1 = r0.<org.apache.poi.hdf.extractor.SEP: int _xaPage>;

        $f2 = (float) $i1;

        f3 = $f2 / 1440.0F;

        $i2 = r0.<org.apache.poi.hdf.extractor.SEP: int _dxaLeft>;

        $f4 = (float) $i2;

        f5 = $f4 / 1440.0F;

        $i3 = r0.<org.apache.poi.hdf.extractor.SEP: int _dxaRight>;

        $f6 = (float) $i3;

        f7 = $f6 / 1440.0F;

        $i4 = r0.<org.apache.poi.hdf.extractor.SEP: int _dyaTop>;

        $f8 = (float) $i4;

        f9 = $f8 / 1440.0F;

        $i5 = r0.<org.apache.poi.hdf.extractor.SEP: int _dyaBottom>;

        $f10 = (float) $i5;

        f11 = $f10 / 1440.0F;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-page");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fo:simple-page-master master-name=\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("page-height=\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("page-width=\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r26 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\r\n");

        $r27 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:region-body ");

        $r29 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("margin=\"");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f9);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f11);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f5);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"\r\n");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r40 = r0.<org.apache.poi.hdf.extractor.SEP: short[] _brcTop>;

        specialinvoke r7.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>($r41, $r40, "top");

        $r43 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r42 = r0.<org.apache.poi.hdf.extractor.SEP: short[] _brcBottom>;

        specialinvoke r7.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>($r43, $r42, "bottom");

        $r45 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r44 = r0.<org.apache.poi.hdf.extractor.SEP: short[] _brcLeft>;

        specialinvoke r7.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>($r45, $r44, "left");

        $r47 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r46 = r0.<org.apache.poi.hdf.extractor.SEP: short[] _brcRight>;

        specialinvoke r7.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>($r47, $r46, "right");

        $s7 = r0.<org.apache.poi.hdf.extractor.SEP: short _ccolM1>;

        $i11 = (int) $s7;

        if $i11 <= 0 goto label2;

        $r54 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column-count=\"");

        $s8 = r0.<org.apache.poi.hdf.extractor.SEP: short _ccolM1>;

        $i12 = (int) $s8;

        $i9 = $i12 + 1;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $z0 = r0.<org.apache.poi.hdf.extractor.SEP: boolean _fEvenlySpaced>;

        if $z0 == 0 goto label1;

        $r61 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column-gap=\"");

        $i10 = r0.<org.apache.poi.hdf.extractor.SEP: int _dxaColumns>;

        $f12 = (float) $i10;

        $f13 = $f12 / 1440.0F;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f13);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\"");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        goto label2;

     label1:
        $r59 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("column-gap=\"0.25in\"");

     label2:
        $r66 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/>\r\n");

        if r48 == null goto label3;

        $r52 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r48);

     label3:
        if r49 == null goto label4;

        $r51 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r49);

     label4:
        $r50 = r7.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:simple-page-master>\r\n");

        return $r6;
    }

    private void addBorder(java.lang.StringBuffer, short[], java.lang.String)
    {
        org.apache.poi.hdf.extractor.WordDocument r1;
        float $f0, f1;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29;
        short[] r0;
        short $s0, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9;
        java.lang.StringBuffer r4;
        int $i1, $i10, $i12, $i13, $i15, $i16, $i17, $i18;
        java.lang.String $r2, $r3, r7, $r12, $r19, $r26;

        r1 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: short[];

        r7 := @parameter2: java.lang.String;

        $s0 = r0[0];

        $i10 = (int) $s0;

        $i12 = (int) 65280;

        $i1 = $i10 & $i12;

        if $i1 == 0 goto label1;

        $s2 = r0[0];

        $i13 = (int) $s2;

        $i15 = (int) -1;

        if $i13 == $i15 goto label1;

        $s3 = r0[0];

        $s4 = r0[0];

        $s5 = $s4 & 255;

        $f0 = (float) $s5;

        f1 = $f0 / 8.0F;

        $s6 = r0[0];

        $i16 = (int) $s6;

        $r2 = specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getBorderStyle(int)>($i16);

        $s7 = r0[1];

        $s8 = $s7 & 255;

        $i17 = (int) $s8;

        $r3 = specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getColor(int)>($i17);

        $s9 = r0[0];

        $i18 = (int) $s9;

        specialinvoke r1.<org.apache.poi.hdf.extractor.WordDocument: java.lang.String getBorderThickness(int)>($i18);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-style=\"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-color=\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-width=\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt\"\r\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

     label1:
        return;
    }

    public void closeDoc()
    {
        java.lang.Throwable $r10;
        java.io.FileOutputStream $r4;
        java.lang.StringBuffer $r1, $r2, $r6, $r8;
        java.io.OutputStreamWriter $r3;
        org.apache.poi.hdf.extractor.WordDocument r0;
        java.lang.String $r5, $r7, $r9;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:layout-master-set>");

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:root>");

     label1:
        $r3 = new java.io.OutputStreamWriter;

        $r4 = new java.io.FileOutputStream;

        $r5 = <org.apache.poi.hdf.extractor.WordDocument: java.lang.String _outName>;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>($r5);

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, "8859_1");

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _headerBuffer>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r7);

        $r8 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r9);

        virtualinvoke $r3.<java.io.OutputStreamWriter: void flush()>();

        virtualinvoke $r3.<java.io.OutputStreamWriter: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private java.lang.String getBorderThickness(int)
    {
        int i0;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        return "medium";

     label2:
        return "thick";

     label3:
        return "medium";

     label4:
        return "thin";

     label5:
        return "medium";
    }

    private java.lang.String getColor(int)
    {
        int i0;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            default: goto label17;
        };

     label01:
        return "black";

     label02:
        return "blue";

     label03:
        return "cyan";

     label04:
        return "green";

     label05:
        return "magenta";

     label06:
        return "red";

     label07:
        return "yellow";

     label08:
        return "white";

     label09:
        return "darkblue";

     label10:
        return "darkcyan";

     label11:
        return "darkgreen";

     label12:
        return "darkmagenta";

     label13:
        return "darkred";

     label14:
        return "darkyellow";

     label15:
        return "darkgray";

     label16:
        return "lightgray";

     label17:
        return "black";
    }

    private java.lang.String getBorderStyle(int)
    {
        int i0;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label14;
            case 5: goto label03;
            case 6: goto label04;
            case 7: goto label05;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label07;
            case 15: goto label07;
            case 16: goto label07;
            case 17: goto label07;
            case 18: goto label07;
            case 19: goto label07;
            case 20: goto label08;
            case 21: goto label09;
            case 22: goto label10;
            case 23: goto label11;
            case 24: goto label12;
            case 25: goto label13;
            default: goto label14;
        };

     label01:
        return "solid";

     label02:
        return "double";

     label03:
        return "solid";

     label04:
        return "dotted";

     label05:
        return "dashed";

     label06:
        return "dotted";

     label07:
        return "double";

     label08:
        return "solid";

     label09:
        return "double";

     label10:
        return "dashed";

     label11:
        return "dashed";

     label12:
        return "ridge";

     label13:
        return "grooved";

     label14:
        return "solid";
    }

    private void createListTables(byte[])
    {
        byte[] $r1, $r2, r3, r4, $r5, $r6, r7;
        org.apache.poi.hdf.extractor.data.ListTables $r8;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 746);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, 750);

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i0, r3, 0, $i1);

        $r5 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r5, 738);

        $r6 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r6, 738);

        if $i2 <= 0 goto label1;

        if $i3 <= 0 goto label1;

        i4 = $i0 - $i2;

        r7 = newarray (byte)[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i2, r7, 0, i4);

        $r8 = new org.apache.poi.hdf.extractor.data.ListTables;

        specialinvoke $r8.<org.apache.poi.hdf.extractor.data.ListTables: void <init>(byte[],byte[])>(r7, r3);

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.data.ListTables _listTables> = $r8;

     label1:
        return;
    }

    private void createStyleSheet(byte[])
    {
        byte[] $r1, $r2, r3, r4;
        org.apache.poi.hdf.extractor.StyleSheet $r5;
        int $i0, $i1;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 162);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, 166);

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i0, r3, 0, $i1);

        $r5 = new org.apache.poi.hdf.extractor.StyleSheet;

        specialinvoke $r5.<org.apache.poi.hdf.extractor.StyleSheet: void <init>(byte[])>(r3);

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.StyleSheet _styleSheet> = $r5;

        return;
    }

    private void createFontTable(byte[])
    {
        byte[] $r1, $r2, r3, r4;
        org.apache.poi.hdf.extractor.FontTable $r5;
        int $i0, $i1;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 274);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, 278);

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i0, r3, 0, $i1);

        $r5 = new org.apache.poi.hdf.extractor.FontTable;

        specialinvoke $r5.<org.apache.poi.hdf.extractor.FontTable: void <init>(byte[])>(r3);

        r0.<org.apache.poi.hdf.extractor.WordDocument: org.apache.poi.hdf.extractor.FontTable _fonts> = $r5;

        return;
    }

    private void overrideCellBorder(int, int, int, int, org.apache.poi.hdf.extractor.TC, org.apache.poi.hdf.extractor.TAP)
    {
        org.apache.poi.hdf.extractor.TAP r2;
        org.apache.poi.hdf.extractor.WordDocument r32;
        short $s3, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s18, $s19, $s20, $s21, $s22, $s23, $s24, $s25, $s26, $s27, $s28, $s29;
        org.apache.poi.hdf.extractor.TC r0;
        short[] $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38;
        int i0, i1, $i2, i4, i5, $i6, $i30, $i32, $i33, $i35, $i36, $i38, $i39, $i41, $i42, $i44, $i45, $i47, $i48, $i50, $i51, $i53, $i54, $i56, $i57, $i59, $i60, $i62, $i63, $i65;

        r32 := @this: org.apache.poi.hdf.extractor.WordDocument;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        i5 := @parameter3: int;

        r0 := @parameter4: org.apache.poi.hdf.extractor.TC;

        r2 := @parameter5: org.apache.poi.hdf.extractor.TAP;

        if i0 != 0 goto label04;

        $r27 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s21 = $r27[0];

        if $s21 == 0 goto label01;

        $r31 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s23 = $r31[0];

        $i30 = (int) $s23;

        $i32 = (int) -1;

        if $i30 != $i32 goto label02;

     label01:
        $r28 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcTop>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop> = $r28;

     label02:
        $r33 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s24 = $r33[0];

        if $s24 == 0 goto label03;

        $r30 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s22 = $r30[0];

        $i33 = (int) $s22;

        $i35 = (int) -1;

        if $i33 != $i35 goto label12;

     label03:
        $r29 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcHorizontal>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom> = $r29;

        goto label12;

     label04:
        $i2 = i1 - 1;

        if i0 != $i2 goto label08;

        $r22 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s18 = $r22[0];

        if $s18 == 0 goto label05;

        $r26 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s20 = $r26[0];

        $i36 = (int) $s20;

        $i38 = (int) -1;

        if $i36 != $i38 goto label06;

     label05:
        $r23 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcHorizontal>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop> = $r23;

     label06:
        $r34 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s25 = $r34[0];

        if $s25 == 0 goto label07;

        $r25 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s19 = $r25[0];

        $i39 = (int) $s19;

        $i41 = (int) -1;

        if $i39 != $i41 goto label12;

     label07:
        $r24 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcBottom>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom> = $r24;

        goto label12;

     label08:
        $r1 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s3 = $r1[0];

        if $s3 == 0 goto label09;

        $r21 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        $s17 = $r21[0];

        $i42 = (int) $s17;

        $i44 = (int) -1;

        if $i42 != $i44 goto label10;

     label09:
        $r3 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcHorizontal>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcTop> = $r3;

     label10:
        $r35 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s26 = $r35[0];

        if $s26 == 0 goto label11;

        $r20 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        $s16 = $r20[0];

        $i45 = (int) $s16;

        $i47 = (int) -1;

        if $i45 != $i47 goto label12;

     label11:
        $r4 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcHorizontal>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom> = $r4;

     label12:
        if i4 != 0 goto label16;

        $r15 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s13 = $r15[0];

        if $s13 == 0 goto label13;

        $r19 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s15 = $r19[0];

        $i48 = (int) $s15;

        $i50 = (int) -1;

        if $i48 != $i50 goto label14;

     label13:
        $r16 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcLeft>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft> = $r16;

     label14:
        $r36 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s27 = $r36[0];

        if $s27 == 0 goto label15;

        $r18 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s14 = $r18[0];

        $i51 = (int) $s14;

        $i53 = (int) -1;

        if $i51 != $i53 goto label24;

     label15:
        $r17 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcVertical>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight> = $r17;

        goto label24;

     label16:
        $i6 = i5 - 1;

        if i4 != $i6 goto label20;

        $r10 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s10 = $r10[0];

        if $s10 == 0 goto label17;

        $r14 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s12 = $r14[0];

        $i54 = (int) $s12;

        $i56 = (int) -1;

        if $i54 != $i56 goto label18;

     label17:
        $r11 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcVertical>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft> = $r11;

     label18:
        $r37 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s28 = $r37[0];

        if $s28 == 0 goto label19;

        $r13 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s11 = $r13[0];

        $i57 = (int) $s11;

        $i59 = (int) -1;

        if $i57 != $i59 goto label24;

     label19:
        $r12 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcRight>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight> = $r12;

        goto label24;

     label20:
        $r5 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s7 = $r5[0];

        if $s7 == 0 goto label21;

        $r9 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        $s9 = $r9[0];

        $i60 = (int) $s9;

        $i62 = (int) -1;

        if $i60 != $i62 goto label22;

     label21:
        $r6 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcVertical>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft> = $r6;

     label22:
        $r38 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s29 = $r38[0];

        if $s29 == 0 goto label23;

        $r8 = r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        $s8 = $r8[0];

        $i63 = (int) $s8;

        $i65 = (int) -1;

        if $i63 != $i65 goto label24;

     label23:
        $r7 = r2.<org.apache.poi.hdf.extractor.TAP: short[] _brcVertical>;

        r0.<org.apache.poi.hdf.extractor.TC: short[] _brcRight> = $r7;

     label24:
        return;
    }

    private void printTable()
    {
        org.apache.poi.hdf.extractor.TAP $r13;
        org.apache.poi.hdf.extractor.WordDocument r0;
        org.apache.poi.hdf.extractor.TableRow r12;
        java.lang.StringBuilder $r18, $r21, $r22, $r25, $r26, $r27, $r30, $r31, $r32, $r41, $r42, $r43, $r48, $r49, $r50, $r51;
        java.util.ArrayList $r1, $r2, $r10, $r14;
        short $s3, $s5, $s6, $s13;
        java.lang.StringBuffer $r7, r45, $r46, $r47, $r52;
        java.lang.String $r6, $r8, $r9, $r23, $r28, $r33, $r39, $r44;
        org.apache.poi.hdf.extractor.TC r16;
        org.apache.poi.hdf.extractor.TC[] $r15;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        short[] $r19, $r20, $r34, $r35, $r36, $r37;
        int $i0, $i1, $i2, $i4, $i7, $i8, $i9, $i10, i11, i12, $i14, $i15, $i16, $i17;
        java.lang.Object $r11, $r38;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table>;

        if $r1 == null goto label9;

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        i11 = 0;

     label1:
        if i11 >= $i0 goto label7;

        r45 = $r47;

        $r10 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r12 = (org.apache.poi.hdf.extractor.TableRow) $r11;

        $r13 = virtualinvoke r12.<org.apache.poi.hdf.extractor.TableRow: org.apache.poi.hdf.extractor.TAP getTAP()>();

        $r14 = virtualinvoke r12.<org.apache.poi.hdf.extractor.TableRow: java.util.ArrayList getCells()>();

        $z0 = $r13.<org.apache.poi.hdf.extractor.TAP: boolean _fTableHeader>;

        if $z0 == 0 goto label2;

        r45 = $r46;

     label2:
        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:table-row ");

        $i2 = $r13.<org.apache.poi.hdf.extractor.TAP: int _dyaRowHeight>;

        if $i2 <= 0 goto label3;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height=\"");

        $i10 = $r13.<org.apache.poi.hdf.extractor.TAP: int _dyaRowHeight>;

        $f6 = (float) $i10;

        $f7 = $f6 / 1440.0F;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

     label3:
        $z1 = $r13.<org.apache.poi.hdf.extractor.TAP: boolean _fCantSplit>;

        if $z1 == 0 goto label4;

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("keep-together=\"always\" ");

     label4:
        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        i12 = 0;

     label5:
        $s13 = $r13.<org.apache.poi.hdf.extractor.TAP: short _itcMac>;

        $i14 = (int) $s13;

        if i12 >= $i14 goto label6;

        $r15 = $r13.<org.apache.poi.hdf.extractor.TAP: org.apache.poi.hdf.extractor.TC[] _rgtc>;

        r16 = $r15[i12];

        $s3 = $r13.<org.apache.poi.hdf.extractor.TAP: short _itcMac>;

        $i15 = (int) $s3;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void overrideCellBorder(int,int,int,int,org.apache.poi.hdf.extractor.TC,org.apache.poi.hdf.extractor.TAP)>(i11, i12, $i0, $i15, r16, $r13);

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:table-cell ");

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=\"");

        $r19 = $r13.<org.apache.poi.hdf.extractor.TAP: short[] _rgdxaCenter>;

        $i4 = i12 + 1;

        $s6 = $r19[$i4];

        $r20 = $r13.<org.apache.poi.hdf.extractor.TAP: short[] _rgdxaCenter>;

        $s5 = $r20[i12];

        $i16 = (int) $s6;

        $i17 = (int) $s5;

        $i7 = $i16 - $i17;

        $f0 = (float) $i7;

        $f1 = $f0 / 1440.0F;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-start=\"");

        $i8 = $r13.<org.apache.poi.hdf.extractor.TAP: int _dxaGapHalf>;

        $f2 = (float) $i8;

        $f3 = $f2 / 1440.0F;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-end=\"");

        $i9 = $r13.<org.apache.poi.hdf.extractor.TAP: int _dxaGapHalf>;

        $f4 = (float) $i9;

        $f5 = $f4 / 1440.0F;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in\" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r34 = r16.<org.apache.poi.hdf.extractor.TC: short[] _brcTop>;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r45, $r34, "top");

        $r35 = r16.<org.apache.poi.hdf.extractor.TC: short[] _brcLeft>;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r45, $r35, "left");

        $r36 = r16.<org.apache.poi.hdf.extractor.TC: short[] _brcBottom>;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r45, $r36, "bottom");

        $r37 = r16.<org.apache.poi.hdf.extractor.TC: short[] _brcRight>;

        specialinvoke r0.<org.apache.poi.hdf.extractor.WordDocument: void addBorder(java.lang.StringBuffer,short[],java.lang.String)>(r45, $r37, "right");

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r38 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r39 = (java.lang.String) $r38;

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:table-cell>");

        i12 = i12 + 1;

        goto label5;

     label6:
        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:table-row>");

        i11 = i11 + 1;

        goto label1;

     label7:
        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:table>");

        $i1 = virtualinvoke $r46.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label8;

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:table-header>");

        $r9 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:table-header>");

     label8:
        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<fo:table-body>");

        $r6 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:table-body>");

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</fo:table>");

        $r7 = r0.<org.apache.poi.hdf.extractor.WordDocument: java.lang.StringBuffer _bodyBuffer>;

        $r8 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r0.<org.apache.poi.hdf.extractor.WordDocument: java.util.ArrayList _table> = null;

     label9:
        return;
    }

    private void initPclfHdd(byte[])
    {
        byte[] $r1, $r2, $r3, r4, $r5;
        int $i0, $i1;
        org.apache.poi.hdf.extractor.WordDocument r0;

        r0 := @this: org.apache.poi.hdf.extractor.WordDocument;

        r4 := @parameter0: byte[];

        $r1 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r1, 246);

        $r2 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _header>;

        $i1 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>($r2, 242);

        $r3 = newarray (byte)[$i0];

        r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _plcfHdd> = $r3;

        $r5 = r0.<org.apache.poi.hdf.extractor.WordDocument: byte[] _plcfHdd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i1, $r5, 0, $i0);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hdf.extractor.WordDocument: float K_1440_0F> = 1440.0F;

        <org.apache.poi.hdf.extractor.WordDocument: int HEADER_EVEN_INDEX> = 0;

        <org.apache.poi.hdf.extractor.WordDocument: int HEADER_ODD_INDEX> = 1;

        <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_EVEN_INDEX> = 2;

        <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_ODD_INDEX> = 3;

        <org.apache.poi.hdf.extractor.WordDocument: int HEADER_FIRST_INDEX> = 4;

        <org.apache.poi.hdf.extractor.WordDocument: int FOOTER_FIRST_INDEX> = 5;

        return;
    }
}
