class org.apache.lucene.codecs.lucene3x.Lucene3xFields extends org.apache.lucene.codecs.FieldsProducer
{
    private static final boolean DEBUG_SURROGATES;
    public org.apache.lucene.codecs.lucene3x.TermInfosReader tis;
    public final org.apache.lucene.codecs.lucene3x.TermInfosReader tisNoIndex;
    public final org.apache.lucene.store.IndexInput freqStream;
    public final org.apache.lucene.store.IndexInput proxStream;
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.index.SegmentInfo si;
    final java.util.TreeMap fields;
    final java.util.Map preTerms;
    private final org.apache.lucene.store.Directory dir;
    private final org.apache.lucene.store.IOContext context;
    private org.apache.lucene.store.Directory cfsReader;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.FieldInfos, org.apache.lucene.index.SegmentInfo, org.apache.lucene.store.IOContext, int) throws java.io.IOException
    {
        java.lang.Throwable $r25;
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r28;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;
        java.util.HashMap $r27;
        org.apache.lucene.store.Directory r5;
        java.util.Map $r21;
        int i0, $i2;
        java.lang.String $r8, $r9, $r10, $r13, $r14, $r18, $r22;
        org.apache.lucene.index.FieldInfos r6;
        org.apache.lucene.store.IOContext r7;
        boolean $z0, z1, $z2;
        org.apache.lucene.index.FieldInfo$IndexOptions $r23, $r24;
        org.apache.lucene.store.IndexInput $r11, $r15;
        java.util.Iterator $r12;
        org.apache.lucene.index.SegmentInfo r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms $r29;
        java.util.TreeMap $r19, $r26;
        org.apache.lucene.index.FieldInfo r17;
        java.lang.Object $r16;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        r5 := @parameter0: org.apache.lucene.store.Directory;

        r6 := @parameter1: org.apache.lucene.index.FieldInfos;

        r3 := @parameter2: org.apache.lucene.index.SegmentInfo;

        r7 := @parameter3: org.apache.lucene.store.IOContext;

        i0 := @parameter4: int;

        specialinvoke r0.<org.apache.lucene.codecs.FieldsProducer: void <init>()>();

        $r26 = new java.util.TreeMap;

        specialinvoke $r26.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.TreeMap fields> = $r26;

        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.Map preTerms> = $r27;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.index.SegmentInfo si> = r3;

        if i0 >= 0 goto label01;

        i0 = neg i0;

     label01:
        $r28 = new org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r8 = r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        specialinvoke $r28.<org.apache.lucene.codecs.lucene3x.TermInfosReader: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext,int)>(r5, $r8, r6, r7, i0);

        $i2 = (int) -1;

        if i0 != $i2 goto label02;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tisNoIndex> = $r28;

        goto label03;

     label02:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tisNoIndex> = null;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tis> = $r28;

     label03:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IOContext context> = r7;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.index.FieldInfos fieldInfos> = r6;

        $r9 = r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r10 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r9, "", "frq");

        $r11 = virtualinvoke r5.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r10, r7);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IndexInput freqStream> = $r11;

        z1 = 0;

        $r12 = virtualinvoke r6.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r16 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.lucene.index.FieldInfo) $r16;

        $z0 = virtualinvoke r17.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z0 == 0 goto label05;

        $r19 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.TreeMap fields>;

        $r18 = r17.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        virtualinvoke $r19.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r17);

        $r21 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.Map preTerms>;

        $r22 = r17.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r29 = new org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms;

        specialinvoke $r29.<org.apache.lucene.codecs.lucene3x.Lucene3xFields$PreTerms: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xFields,org.apache.lucene.index.FieldInfo)>(r0, r17);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r29);

        $r23 = virtualinvoke r17.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r24 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        if $r23 != $r24 goto label05;

        z1 = 1;

     label05:
        goto label04;

     label06:
        if z1 == 0 goto label07;

        $r13 = r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r14 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r13, "", "prx");

        $r15 = virtualinvoke r5.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r14, r7);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IndexInput proxStream> = $r15;

        goto label08;

     label07:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IndexInput proxStream> = null;

     label08:
        if 1 != 0 goto label12;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: void close()>();

        goto label12;

     label09:
        $r25 := @caughtexception;

     label10:
        if 0 != 0 goto label11;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: void close()>();

     label11:
        throw $r25;

     label12:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.Directory dir> = r5;

        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected boolean sortTermsByUnicode()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        return 1;
    }

    public java.util.Iterator iterator()
    {
        java.util.TreeMap $r1;
        java.util.Iterator $r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;
        java.util.Set $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.TreeMap fields>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String)
    {
        org.apache.lucene.index.Terms $r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.Map preTerms>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.lucene.index.Terms) $r3;

        return $r4;
    }

    public int size()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;
        java.lang.AssertionError $r4;
        java.util.TreeMap $r1, $r3;
        java.util.Map $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xFields: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.Map preTerms>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.TreeMap fields>;

        $i2 = virtualinvoke $r3.<java.util.TreeMap: int size()>();

        if $i1 == $i2 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: java.util.TreeMap fields>;

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        return $i0;
    }

    public long getUniqueTermCount() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r1;
        long $l0;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r1 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader getTermsDict()>();

        $l0 = virtualinvoke $r1.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size()>();

        return $l0;
    }

    private synchronized org.apache.lucene.codecs.lucene3x.TermInfosReader getTermsDict()
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r1, $r2, $r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tis>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tis>;

        return $r3;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tisNoIndex>;

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r2, $r3;
        org.apache.lucene.store.IndexInput $r5, $r6;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r1;
        org.apache.lucene.store.Directory $r4;
        java.io.Closeable[] $r0;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r0 = newarray (java.io.Closeable)[5];

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tis>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader tisNoIndex>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.Directory cfsReader>;

        $r0[2] = $r4;

        $r5 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IndexInput freqStream>;

        $r0[3] = $r5;

        $r6 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.store.IndexInput proxStream>;

        $r0[4] = $r6;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    static org.apache.lucene.codecs.lucene3x.TermInfosReader access$100(org.apache.lucene.codecs.lucene3x.Lucene3xFields)
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r1 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.codecs.lucene3x.TermInfosReader getTermsDict()>();

        return $r1;
    }

    static org.apache.lucene.index.FieldInfos access$200(org.apache.lucene.codecs.lucene3x.Lucene3xFields)
    {
        org.apache.lucene.index.FieldInfos $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xFields r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xFields;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xFields: org.apache.lucene.index.FieldInfos fieldInfos>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene3x.Lucene3xFields: boolean DEBUG_SURROGATES> = 0;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/Lucene3xFields;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.Lucene3xFields: boolean $assertionsDisabled> = $z1;

        return;
    }
}
