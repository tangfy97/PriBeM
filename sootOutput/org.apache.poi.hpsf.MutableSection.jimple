public class org.apache.poi.hpsf.MutableSection extends org.apache.poi.hpsf.Section
{
    private boolean dirty;
    private java.util.List preprops;
    private byte[] sectionBytes;

    public void <init>()
    {
        org.apache.poi.hpsf.MutableSection r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        specialinvoke r0.<org.apache.poi.hpsf.Section: void <init>()>();

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.ClassID formatID> = null;

        r0.<org.apache.poi.hpsf.MutableSection: long offset> = -1L;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops> = $r1;

        return;
    }

    public void <init>(org.apache.poi.hpsf.Section)
    {
        org.apache.poi.hpsf.MutableProperty $r6;
        org.apache.poi.hpsf.Property[] $r3;
        org.apache.poi.hpsf.MutableProperty[] r4;
        org.apache.poi.hpsf.ClassID $r2;
        java.util.Map $r5;
        int $i0, $i1, i2;
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.Property $r7;
        org.apache.poi.hpsf.Section r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        r1 := @parameter0: org.apache.poi.hpsf.Section;

        specialinvoke r0.<org.apache.poi.hpsf.Section: void <init>()>();

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        $r2 = virtualinvoke r1.<org.apache.poi.hpsf.Section: org.apache.poi.hpsf.ClassID getFormatID()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setFormatID(org.apache.poi.hpsf.ClassID)>($r2);

        $r3 = virtualinvoke r1.<org.apache.poi.hpsf.Section: org.apache.poi.hpsf.Property[] getProperties()>();

        $i0 = lengthof $r3;

        r4 = newarray (org.apache.poi.hpsf.MutableProperty)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r6 = new org.apache.poi.hpsf.MutableProperty;

        $r7 = $r3[i2];

        specialinvoke $r6.<org.apache.poi.hpsf.MutableProperty: void <init>(org.apache.poi.hpsf.Property)>($r7);

        r4[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperties(org.apache.poi.hpsf.Property[])>(r4);

        $r5 = virtualinvoke r1.<org.apache.poi.hpsf.Section: java.util.Map getDictionary()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setDictionary(java.util.Map)>($r5);

        return;
    }

    public void setFormatID(org.apache.poi.hpsf.ClassID)
    {
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.ClassID r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        r1 := @parameter0: org.apache.poi.hpsf.ClassID;

        r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.ClassID formatID> = r1;

        return;
    }

    public void setFormatID(byte[])
    {
        byte[] r2;
        org.apache.poi.hpsf.ClassID $r1, $r3, r4;
        org.apache.poi.hpsf.MutableSection r0;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        r2 := @parameter0: byte[];

        $r1 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.ClassID getFormatID()>();

        r4 = $r1;

        if $r1 != null goto label1;

        $r3 = new org.apache.poi.hpsf.ClassID;

        specialinvoke $r3.<org.apache.poi.hpsf.ClassID: void <init>()>();

        r4 = $r3;

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setFormatID(org.apache.poi.hpsf.ClassID)>($r3);

     label1:
        virtualinvoke r4.<org.apache.poi.hpsf.ClassID: void setBytes(byte[])>(r2);

        return;
    }

    public void setProperties(org.apache.poi.hpsf.Property[])
    {
        java.util.List $r4;
        int $i0, i1;
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.Property $r3;
        java.util.LinkedList $r2;
        org.apache.poi.hpsf.Property[] r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        r1 := @parameter0: org.apache.poi.hpsf.Property[];

        r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.Property[] properties> = r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops> = $r2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r4 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $r3 = r1[i1];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(int, java.lang.String)
    {
        int i0;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 31L, r1);

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(int, int)
    {
        int i0, i1;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 3L, $r1);

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(int, long)
    {
        java.lang.Long $r1;
        int i0;
        org.apache.poi.hpsf.MutableSection r0;
        long l1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 20L, $r1);

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(int, boolean)
    {
        int i0;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 11L, $r1);

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(int, long, java.lang.Object)
    {
        org.apache.poi.hpsf.MutableProperty $r0;
        int i0;
        org.apache.poi.hpsf.MutableSection r2;
        long $l1, l2;
        java.lang.Object r1;

        r2 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        l2 := @parameter1: long;

        r1 := @parameter2: java.lang.Object;

        $r0 = new org.apache.poi.hpsf.MutableProperty;

        specialinvoke $r0.<org.apache.poi.hpsf.MutableProperty: void <init>()>();

        $l1 = (long) i0;

        virtualinvoke $r0.<org.apache.poi.hpsf.MutableProperty: void setID(long)>($l1);

        virtualinvoke $r0.<org.apache.poi.hpsf.MutableProperty: void setType(long)>(l2);

        virtualinvoke $r0.<org.apache.poi.hpsf.MutableProperty: void setValue(java.lang.Object)>(r1);

        virtualinvoke r2.<org.apache.poi.hpsf.MutableSection: void setProperty(org.apache.poi.hpsf.Property)>($r0);

        r2.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void setProperty(org.apache.poi.hpsf.Property)
    {
        java.util.List $r2;
        org.apache.poi.hpsf.MutableSection r1;
        org.apache.poi.hpsf.Property r0;
        long $l0;

        r1 := @this: org.apache.poi.hpsf.MutableSection;

        r0 := @parameter0: org.apache.poi.hpsf.Property;

        $l0 = virtualinvoke r0.<org.apache.poi.hpsf.Property: long getID()>();

        virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: void removeProperty(long)>($l0);

        $r2 = r1.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        r1.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    public void removeProperty(long)
    {
        java.util.Iterator $r2;
        long $l0, l1;
        java.util.List $r1;
        byte $b2;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Object $r3;
        org.apache.poi.hpsf.Property $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        l1 := @parameter0: long;

        $r1 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.apache.poi.hpsf.Property) $r3;

        $l0 = virtualinvoke $r4.<org.apache.poi.hpsf.Property: long getID()>();

        $b2 = $l0 cmp l1;

        if $b2 != 0 goto label1;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label2;

     label2:
        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 1;

        return;
    }

    protected void setPropertyBooleanValue(int, boolean)
    {
        int i0;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 11L, $r1);

        return;
    }

    public int getSize()
    {
        org.apache.poi.hpsf.HPSFRuntimeException $r2, $r3;
        int $i0, $i1;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Exception $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        $z0 = r0.<org.apache.poi.hpsf.MutableSection: boolean dirty>;

        if $z0 == 0 goto label5;

     label1:
        $i1 = specialinvoke r0.<org.apache.poi.hpsf.MutableSection: int calcSize()>();

        r0.<org.apache.poi.hpsf.MutableSection: int size> = $i1;

        r0.<org.apache.poi.hpsf.MutableSection: boolean dirty> = 0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        throw $r3;

     label4:
        $r1 := @caughtexception;

        $r2 = new org.apache.poi.hpsf.HPSFRuntimeException;

        specialinvoke $r2.<org.apache.poi.hpsf.HPSFRuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;

     label5:
        $i0 = r0.<org.apache.poi.hpsf.MutableSection: int size>;

        return $i0;

        catch org.apache.poi.hpsf.HPSFRuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private int calcSize() throws org.apache.poi.hpsf.WritingNotSupportedException, java.io.IOException
    {
        byte[] $r2, $r3, $r4;
        java.io.ByteArrayOutputStream $r0;
        int $i0;
        org.apache.poi.hpsf.MutableSection r1;

        r1 := @this: org.apache.poi.hpsf.MutableSection;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: int write(java.io.OutputStream)>($r0);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r3 = staticinvoke <org.apache.poi.hpsf.Util: byte[] pad4(byte[])>($r2);

        r1.<org.apache.poi.hpsf.MutableSection: byte[] sectionBytes> = $r3;

        $r4 = r1.<org.apache.poi.hpsf.MutableSection: byte[] sectionBytes>;

        $i0 = lengthof $r4;

        return $i0;
    }

    public int write(java.io.OutputStream) throws org.apache.poi.hpsf.WritingNotSupportedException, java.io.IOException
    {
        byte[] $r4, $r5, $r13, $r14, $r15;
        java.util.ListIterator $r19;
        java.lang.Integer $r11;
        byte $b15;
        java.util.Map $r8;
        boolean $z0, $z1, $z2;
        java.util.List $r16, $r18;
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.IllegalPropertySetDataException $r23, $r25;
        java.io.ByteArrayOutputStream $r21, $r22;
        long $l12, $l13, $l14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i16, $i17, $i18, $i19, i20, i21, i22, $i24, $i26;
        java.io.OutputStream r6;
        org.apache.poi.hpsf.MutableProperty r20;
        org.apache.poi.hpsf.MutableSection$1 $r24;
        java.lang.Object $r3, $r7, $r10;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        r6 := @parameter0: java.io.OutputStream;

        $z0 = r0.<org.apache.poi.hpsf.MutableSection: boolean dirty>;

        if $z0 != 0 goto label1;

        $r13 = r0.<org.apache.poi.hpsf.MutableSection: byte[] sectionBytes>;

        if $r13 == null goto label1;

        $r14 = r0.<org.apache.poi.hpsf.MutableSection: byte[] sectionBytes>;

        virtualinvoke r6.<java.io.OutputStream: void write(byte[])>($r14);

        $r15 = r0.<org.apache.poi.hpsf.MutableSection: byte[] sectionBytes>;

        $i19 = lengthof $r15;

        return $i19;

     label1:
        $r21 = new java.io.ByteArrayOutputStream;

        specialinvoke $r21.<java.io.ByteArrayOutputStream: void <init>()>();

        $r22 = new java.io.ByteArrayOutputStream;

        specialinvoke $r22.<java.io.ByteArrayOutputStream: void <init>()>();

        $i0 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: int getPropertyCount()>();

        $i1 = $i0 * 2;

        $i2 = $i1 * 4;

        $i3 = 8 + $i2;

        i20 = 0 + $i3;

        $i24 = (int) -1;

        i21 = $i24;

        $r3 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: java.lang.Object getProperty(long)>(0L);

        if $r3 == null goto label4;

        $r10 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: java.lang.Object getProperty(long)>(1L);

        if $r10 == null goto label2;

        $z1 = $r10 instanceof java.lang.Integer;

        if $z1 != 0 goto label3;

        $r23 = new org.apache.poi.hpsf.IllegalPropertySetDataException;

        specialinvoke $r23.<org.apache.poi.hpsf.IllegalPropertySetDataException: void <init>(java.lang.String)>("The codepage property (ID = 1) must be an Integer object.");

        throw $r23;

     label2:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1200);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(1, 2L, $r11);

     label3:
        i21 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: int getCodepage()>();

     label4:
        $r16 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $r24 = new org.apache.poi.hpsf.MutableSection$1;

        specialinvoke $r24.<org.apache.poi.hpsf.MutableSection$1: void <init>(org.apache.poi.hpsf.MutableSection)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r16, $r24);

        $r18 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.ListIterator listIterator()>();

     label5:
        $z2 = interfaceinvoke $r19.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r7 = interfaceinvoke $r19.<java.util.ListIterator: java.lang.Object next()>();

        r20 = (org.apache.poi.hpsf.MutableProperty) $r7;

        $l12 = virtualinvoke r20.<org.apache.poi.hpsf.MutableProperty: long getID()>();

        $l13 = virtualinvoke r20.<org.apache.poi.hpsf.MutableProperty: long getID()>();

        staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>($r22, $l13);

        $l14 = (long) i20;

        staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>($r22, $l14);

        $b15 = $l12 cmp 0L;

        if $b15 == 0 goto label6;

        $i17 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: int getCodepage()>();

        $i18 = virtualinvoke r20.<org.apache.poi.hpsf.MutableProperty: int write(java.io.OutputStream,int)>($r21, $i17);

        i20 = i20 + $i18;

        goto label8;

     label6:
        $i26 = (int) -1;

        if i21 != $i26 goto label7;

        $r25 = new org.apache.poi.hpsf.IllegalPropertySetDataException;

        specialinvoke $r25.<org.apache.poi.hpsf.IllegalPropertySetDataException: void <init>(java.lang.String)>("Codepage (property 1) is undefined.");

        throw $r25;

     label7:
        $r8 = r0.<org.apache.poi.hpsf.MutableSection: java.util.Map dictionary>;

        $i16 = staticinvoke <org.apache.poi.hpsf.MutableSection: int writeDictionary(java.io.OutputStream,java.util.Map,int)>($r21, $r8, i21);

        i20 = i20 + $i16;

     label8:
        goto label5;

     label9:
        virtualinvoke $r21.<java.io.ByteArrayOutputStream: void close()>();

        virtualinvoke $r22.<java.io.ByteArrayOutputStream: void close()>();

        $r4 = virtualinvoke $r22.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = virtualinvoke $r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i4 = lengthof $r4;

        $i6 = 8 + $i4;

        $i5 = lengthof $r5;

        $i7 = $i6 + $i5;

        staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,int)>(r6, $i7);

        $i8 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: int getPropertyCount()>();

        staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,int)>(r6, $i8);

        virtualinvoke r6.<java.io.OutputStream: void write(byte[])>($r4);

        virtualinvoke r6.<java.io.OutputStream: void write(byte[])>($r5);

        $i9 = lengthof $r4;

        $i11 = 8 + $i9;

        $i10 = lengthof $r5;

        i22 = $i11 + $i10;

        return i22;
    }

    private static int writeDictionary(java.io.OutputStream, java.util.Map, int) throws java.io.IOException
    {
        byte[] $r8, $r9;
        byte $b10, $b19, $b20;
        java.lang.Long r5;
        java.util.Map r1;
        boolean $z0;
        java.util.Set $r2;
        long $l1, $l3, $l7, $l13, $l15;
        int $i0, i2, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i16, $i17, $i18, $i21, i22, i23, i24, $i25, i26, i27, i28, i29, $i30, $i31, $i33, $i34;
        java.lang.String r7;
        java.io.OutputStream r0;
        java.util.Iterator $r3;
        java.lang.Object $r4, $r6;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.util.Map;

        i2 := @parameter2: int;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $l1 = (long) $i0;

        i22 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r0, $l1);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Long) $r4;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.String) $r6;

        if i2 != 1200 goto label07;

        $i11 = virtualinvoke r7.<java.lang.String: int length()>();

        i23 = $i11 + 1;

        $i12 = i23 % 2;

        if $i12 != 1 goto label02;

        i23 = i23 + 1;

     label02:
        $l13 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $i14 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r0, $l13);

        $i21 = i22 + $i14;

        $l15 = (long) i23;

        $i16 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r0, $l15);

        i22 = $i21 + $i16;

        $r9 = staticinvoke <org.apache.poi.util.CodePageUtil: byte[] getBytesInCodePage(java.lang.String,int)>(r7, i2);

        i24 = 2;

     label03:
        $i25 = lengthof $r9;

        if i24 >= $i25 goto label04;

        $i18 = i24 + 1;

        $b19 = $r9[$i18];

        $i30 = (int) $b19;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i30);

        $b20 = $r9[i24];

        $i31 = (int) $b20;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i31);

        i22 = i22 + 2;

        i24 = i24 + 2;

        goto label03;

     label04:
        $i17 = virtualinvoke r7.<java.lang.String: int length()>();

        i26 = i23 - $i17;

     label05:
        if i26 <= 0 goto label06;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>(0);

        virtualinvoke r0.<java.io.OutputStream: void write(int)>(0);

        i22 = i22 + 2;

        $i33 = (int) -1;

        i26 = i26 + $i33;

        goto label05;

     label06:
        goto label10;

     label07:
        $l3 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $i4 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r0, $l3);

        i27 = i22 + $i4;

        $i5 = virtualinvoke r7.<java.lang.String: int length()>();

        $i6 = $i5 + 1;

        $l7 = (long) $i6;

        $i8 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r0, $l7);

        i28 = i27 + $i8;

        $r8 = staticinvoke <org.apache.poi.util.CodePageUtil: byte[] getBytesInCodePage(java.lang.String,int)>(r7, i2);

        i29 = 0;

     label08:
        $i9 = lengthof $r8;

        if i29 >= $i9 goto label09;

        $b10 = $r8[i29];

        $i34 = (int) $b10;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i34);

        i28 = i28 + 1;

        i29 = i29 + 1;

        goto label08;

     label09:
        virtualinvoke r0.<java.io.OutputStream: void write(int)>(0);

        i22 = i28 + 1;

     label10:
        goto label01;

     label11:
        return i22;
    }

    public int getPropertyCount()
    {
        int $i0;
        org.apache.poi.hpsf.MutableSection r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        $r1 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.apache.poi.hpsf.Property[] getProperties()
    {
        java.util.List $r2;
        java.lang.Object[] $r3;
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.Property[] $r1, $r4, $r5, $r6;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        $r2 = r0.<org.apache.poi.hpsf.MutableSection: java.util.List preprops>;

        $r1 = newarray (org.apache.poi.hpsf.Property)[0];

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r4 = (org.apache.poi.hpsf.Property[]) $r3;

        $r5 = (org.apache.poi.hpsf.Property[]) $r4;

        r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.Property[] properties> = $r5;

        $r6 = r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.Property[] properties>;

        return $r6;
    }

    public java.lang.Object getProperty(long)
    {
        org.apache.poi.hpsf.MutableSection r0;
        long l0;
        java.lang.Object $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.Property[] getProperties()>();

        $r1 = specialinvoke r0.<org.apache.poi.hpsf.Section: java.lang.Object getProperty(long)>(l0);

        return $r1;
    }

    public void setDictionary(java.util.Map) throws org.apache.poi.hpsf.IllegalPropertySetDataException
    {
        java.util.Map r0;
        org.apache.poi.hpsf.MutableSection r1;
        java.lang.Object $r2;
        java.lang.Integer r3, $r4;

        r1 := @this: org.apache.poi.hpsf.MutableSection;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label2;

        r1.<org.apache.poi.hpsf.MutableSection: java.util.Map dictionary> = r0;

        virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(0, -1L, r0);

        $r2 = virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: java.lang.Object getProperty(long)>(1L);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1200);

        virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(1, 2L, $r4);

     label1:
        goto label3;

     label2:
        virtualinvoke r1.<org.apache.poi.hpsf.MutableSection: void removeProperty(long)>(0L);

     label3:
        return;
    }

    public void setProperty(int, java.lang.Object)
    {
        long $l3;
        java.lang.Integer $r12;
        java.lang.Long $r13;
        java.lang.Short $r11;
        int i0, $i1, $i2;
        java.lang.Boolean $r10;
        java.lang.String $r5, $r8, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.hpsf.HPSFRuntimeException $r1;
        org.apache.poi.hpsf.MutableSection r9;
        java.lang.Object r0;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;

        r9 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r14 = (java.lang.String) r0;

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,java.lang.String)>(i0, $r14);

        goto label7;

     label1:
        $z1 = r0 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        $r13 = (java.lang.Long) r0;

        $l3 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long)>(i0, $l3);

        goto label7;

     label2:
        $z2 = r0 instanceof java.lang.Integer;

        if $z2 == 0 goto label3;

        $r12 = (java.lang.Integer) r0;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,int)>(i0, $i2);

        goto label7;

     label3:
        $z3 = r0 instanceof java.lang.Short;

        if $z3 == 0 goto label4;

        $r11 = (java.lang.Short) r0;

        $i1 = virtualinvoke $r11.<java.lang.Short: int intValue()>();

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,int)>(i0, $i1);

        goto label7;

     label4:
        $z4 = r0 instanceof java.lang.Boolean;

        if $z4 == 0 goto label5;

        $r10 = (java.lang.Boolean) r0;

        $z6 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,boolean)>(i0, $z6);

        goto label7;

     label5:
        $z5 = r0 instanceof java.util.Date;

        if $z5 == 0 goto label6;

        virtualinvoke r9.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(i0, 64L, r0);

        goto label7;

     label6:
        $r1 = new org.apache.poi.hpsf.HPSFRuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HPSF does not support properties of type ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.poi.hpsf.HPSFRuntimeException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label7:
        return;
    }

    public void clear()
    {
        int $i0, i2;
        org.apache.poi.hpsf.MutableSection r0;
        org.apache.poi.hpsf.Property r2;
        long $l1;
        org.apache.poi.hpsf.Property[] $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        $r1 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: org.apache.poi.hpsf.Property[] getProperties()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        r2 = $r1[i2];

        $l1 = virtualinvoke r2.<org.apache.poi.hpsf.Property: long getID()>();

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void removeProperty(long)>($l1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setCodepage(int)
    {
        int i0;
        org.apache.poi.hpsf.MutableSection r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.poi.hpsf.MutableSection;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<org.apache.poi.hpsf.MutableSection: void setProperty(int,long,java.lang.Object)>(1, 2L, $r1);

        return;
    }
}
