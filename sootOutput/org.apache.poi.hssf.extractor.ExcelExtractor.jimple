public class org.apache.poi.hssf.extractor.ExcelExtractor extends org.apache.poi.POIOLE2TextExtractor implements org.apache.poi.ss.extractor.ExcelExtractor
{
    private org.apache.poi.hssf.usermodel.HSSFWorkbook _wb;
    private org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter;
    private boolean _includeSheetNames;
    private boolean _shouldEvaluateFormulas;
    private boolean _includeCellComments;
    private boolean _includeBlankCells;
    private boolean _includeHeadersFooters;

    public void <init>(org.apache.poi.hssf.usermodel.HSSFWorkbook)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r1;
        org.apache.poi.hssf.usermodel.HSSFDataFormatter $r2;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        r1 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        specialinvoke r0.<org.apache.poi.POIOLE2TextExtractor: void <init>(org.apache.poi.POIDocument)>(r1);

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeSheetNames> = 1;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _shouldEvaluateFormulas> = 1;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeCellComments> = 0;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeBlankCells> = 0;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeHeadersFooters> = 1;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFWorkbook _wb> = r1;

        $r2 = new org.apache.poi.hssf.usermodel.HSSFDataFormatter;

        specialinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFDataFormatter: void <init>()>();

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter> = $r2;

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        specialinvoke r0.<org.apache.poi.hssf.extractor.ExcelExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode, org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode r1;
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r2;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke r0.<org.apache.poi.hssf.extractor.ExcelExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r1);

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode r2;
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r1;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        r2 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        $r1 = new org.apache.poi.hssf.usermodel.HSSFWorkbook;

        specialinvoke $r1.<org.apache.poi.hssf.usermodel.HSSFWorkbook: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode,boolean)>(r2, 1);

        specialinvoke r0.<org.apache.poi.hssf.extractor.ExcelExtractor: void <init>(org.apache.poi.hssf.usermodel.HSSFWorkbook)>($r1);

        return;
    }

    private static void printUsageMessage(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r0 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r3 = class "Lorg/apache/poi/hssf/extractor/ExcelExtractor;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [<flag> <value> [<flag> <value> [...]]] [-i <filename.xls>]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       -i <filename.xls> specifies input file (default is to use stdin)");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       Flags can be set on or off by using the values \'Y\' or \'N\'.");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       Following are available flags and their default values:");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       --show-sheet-names  Y");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       --evaluate-formulas Y");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       --show-comments     N");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       --show-blanks       Y");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("       --headers-footers   Y");

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs $r0;
        java.lang.String $r8, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.PrintStream $r7, $r9, $r12, $r14;
        org.apache.poi.hssf.extractor.ExcelExtractor $r6;
        java.io.FileInputStream $r3;
        java.io.File $r2, $r4;
        java.lang.Exception $r10;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException $r11;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r5;
        java.io.InputStream r15;

        r1 := @parameter0: java.lang.String[];

     label01:
        $r0 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        specialinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: void <init>(java.lang.String[])>(r1);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke $r11.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: java.lang.String getMessage()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: void printUsageMessage(java.io.PrintStream)>($r14);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;

     label04:
        $z0 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean isRequestHelp()>();

        if $z0 == 0 goto label05;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: void printUsageMessage(java.io.PrintStream)>($r9);

        return;

     label05:
        $r2 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: java.io.File getInputFile()>();

        if $r2 != null goto label06;

        r15 = <java.lang.System: java.io.InputStream in>;

        goto label07;

     label06:
        $r3 = new java.io.FileInputStream;

        $r4 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: java.io.File getInputFile()>();

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        r15 = $r3;

     label07:
        $r5 = new org.apache.poi.hssf.usermodel.HSSFWorkbook;

        specialinvoke $r5.<org.apache.poi.hssf.usermodel.HSSFWorkbook: void <init>(java.io.InputStream)>(r15);

        $r6 = new org.apache.poi.hssf.extractor.ExcelExtractor;

        specialinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void <init>(org.apache.poi.hssf.usermodel.HSSFWorkbook)>($r5);

        $z1 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean shouldShowSheetNames()>();

        virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void setIncludeSheetNames(boolean)>($z1);

        $z2 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean shouldEvaluateFormulas()>();

        if $z2 != 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void setFormulasNotResults(boolean)>($z6);

        $z3 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean shouldShowCellComments()>();

        virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void setIncludeCellComments(boolean)>($z3);

        $z4 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean shouldShowBlankCells()>();

        virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void setIncludeBlankCells(boolean)>($z4);

        $z5 = virtualinvoke $r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean shouldIncludeHeadersFooters()>();

        virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: void setIncludeHeadersFooters(boolean)>($z5);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = virtualinvoke $r6.<org.apache.poi.hssf.extractor.ExcelExtractor: java.lang.String getText()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

     label12:
        return;

        catch org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label10 with label11;
    }

    public void setIncludeSheetNames(boolean)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeSheetNames> = z0;

        return;
    }

    public void setFormulasNotResults(boolean)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _shouldEvaluateFormulas> = $z1;

        return;
    }

    public void setIncludeCellComments(boolean)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeCellComments> = z0;

        return;
    }

    public void setIncludeBlankCells(boolean)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeBlankCells> = z0;

        return;
    }

    public void setIncludeHeadersFooters(boolean)
    {
        org.apache.poi.hssf.extractor.ExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeHeadersFooters> = z0;

        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.hssf.usermodel.HSSFRow $r10;
        byte $b5, $b8;
        org.apache.poi.hssf.usermodel.HSSFSheet $r7;
        org.apache.poi.hssf.usermodel.HSSFHeader $r41;
        org.apache.poi.hssf.usermodel.HSSFRichTextString $r13, $r24, $r31;
        java.lang.StringBuilder $r17, $r19, $r20, $r21, $r37, $r38, $r39, $r47, $r49;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r3, $r4, $r6, $r43;
        short $s3, $s10, s14;
        java.lang.StringBuffer $r46;
        java.lang.String $r5, $r9, $r12, $r14, $r15, $r18, $r22, $r23, $r25, $r28, $r29, $r30, $r32, $r34, $r40, $r42, $r44;
        org.apache.poi.hssf.extractor.ExcelExtractor r1;
        java.lang.RuntimeException $r48;
        org.apache.poi.hssf.usermodel.HSSFDataFormatter $r27, $r33;
        org.apache.poi.hssf.usermodel.HSSFCell $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.apache.poi.hssf.usermodel.HSSFComment $r45;
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy $r2;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i9, $i11, i12, i13, i15, $i16, $i17, $i18, $i19, $i20;
        double $d0, $d1;
        org.apache.poi.hssf.usermodel.HSSFCellStyle $r26;
        org.apache.poi.hssf.usermodel.HSSFFooter $r8;

        r1 := @this: org.apache.poi.hssf.extractor.ExcelExtractor;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r3 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFWorkbook _wb>;

        $r2 = <org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_BLANK_AS_NULL>;

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.HSSFWorkbook: void setMissingCellPolicy(org.apache.poi.ss.usermodel.Row$MissingCellPolicy)>($r2);

        i12 = 0;

     label01:
        $r4 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFWorkbook _wb>;

        $i0 = virtualinvoke $r4.<org.apache.poi.hssf.usermodel.HSSFWorkbook: int getNumberOfSheets()>();

        if i12 >= $i0 goto label30;

        $r6 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFWorkbook _wb>;

        $r7 = virtualinvoke $r6.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFSheet getSheetAt(int)>(i12);

        if $r7 != null goto label02;

        goto label29;

     label02:
        $z0 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeSheetNames>;

        if $z0 == 0 goto label03;

        $r43 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFWorkbook _wb>;

        $r44 = virtualinvoke $r43.<org.apache.poi.hssf.usermodel.HSSFWorkbook: java.lang.String getSheetName(int)>(i12);

        if $r44 == null goto label03;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label03:
        $z6 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeHeadersFooters>;

        if $z6 == 0 goto label04;

        $r41 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.hssf.usermodel.HSSFHeader getHeader()>();

        $r42 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: java.lang.String _extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r41);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

     label04:
        $i1 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFSheet: int getFirstRowNum()>();

        $i2 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFSheet: int getLastRowNum()>();

        i13 = $i1;

     label05:
        if i13 > $i2 goto label28;

        $r10 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.hssf.usermodel.HSSFRow getRow(int)>(i13);

        if $r10 != null goto label06;

        goto label27;

     label06:
        s14 = virtualinvoke $r10.<org.apache.poi.hssf.usermodel.HSSFRow: short getFirstCellNum()>();

        $s3 = virtualinvoke $r10.<org.apache.poi.hssf.usermodel.HSSFRow: short getLastCellNum()>();

        $z2 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeBlankCells>;

        if $z2 == 0 goto label07;

        s14 = 0;

     label07:
        i15 = s14;

     label08:
        $i16 = (int) $s3;

        if i15 >= $i16 goto label26;

        $r11 = virtualinvoke $r10.<org.apache.poi.hssf.usermodel.HSSFRow: org.apache.poi.hssf.usermodel.HSSFCell getCell(int)>(i15);

        z7 = 1;

        if $r11 != null goto label09;

        z7 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeBlankCells>;

        goto label24;

     label09:
        $i4 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: int getCellType()>();

        tableswitch($i4)
        {
            case 0: goto label11;
            case 1: goto label10;
            case 2: goto label14;
            case 3: goto label22;
            case 4: goto label12;
            case 5: goto label13;
            default: goto label22;
        };

     label10:
        $r31 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFRichTextString getRichStringCellValue()>();

        $r32 = virtualinvoke $r31.<org.apache.poi.hssf.usermodel.HSSFRichTextString: java.lang.String getString()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        goto label23;

     label11:
        $r33 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter>;

        $r34 = virtualinvoke $r33.<org.apache.poi.hssf.usermodel.HSSFDataFormatter: java.lang.String formatCellValue(org.apache.poi.ss.usermodel.Cell)>($r11);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        goto label23;

     label12:
        $z3 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: boolean getBooleanCellValue()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z3);

        goto label23;

     label13:
        $b5 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: byte getErrorCellValue()>();

        $i17 = (int) $b5;

        $r12 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i17);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label23;

     label14:
        $z4 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _shouldEvaluateFormulas>;

        if $z4 != 0 goto label15;

        $r30 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: java.lang.String getCellFormula()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        goto label23;

     label15:
        $i7 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: int getCachedFormulaResultType()>();

        tableswitch($i7)
        {
            case 0: goto label17;
            case 1: goto label16;
            case 2: goto label21;
            case 3: goto label21;
            case 4: goto label19;
            case 5: goto label20;
            default: goto label21;
        };

     label16:
        $r24 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFRichTextString getRichStringCellValue()>();

        if $r24 == null goto label21;

        $i9 = virtualinvoke $r24.<org.apache.poi.hssf.usermodel.HSSFRichTextString: int length()>();

        if $i9 <= 0 goto label21;

        $r25 = virtualinvoke $r24.<org.apache.poi.hssf.usermodel.HSSFRichTextString: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        goto label21;

     label17:
        $r26 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFCellStyle getCellStyle()>();

        if $r26 != null goto label18;

        $d1 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: double getNumericCellValue()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        goto label21;

     label18:
        $r27 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: org.apache.poi.hssf.usermodel.HSSFDataFormatter _formatter>;

        $d0 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: double getNumericCellValue()>();

        $s10 = virtualinvoke $r26.<org.apache.poi.hssf.usermodel.HSSFCellStyle: short getDataFormat()>();

        $r28 = virtualinvoke $r26.<org.apache.poi.hssf.usermodel.HSSFCellStyle: java.lang.String getDataFormatString()>();

        $i18 = (int) $s10;

        $r29 = virtualinvoke $r27.<org.apache.poi.hssf.usermodel.HSSFDataFormatter: java.lang.String formatRawCellContents(double,int,java.lang.String)>($d0, $i18, $r28);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        goto label21;

     label19:
        $z5 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: boolean getBooleanCellValue()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z5);

        goto label21;

     label20:
        $b8 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: byte getErrorCellValue()>();

        $i19 = (int) $b8;

        $r23 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i19);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label21:
        goto label23;

     label22:
        $r48 = new java.lang.RuntimeException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $i11 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: int getCellType()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r48;

     label23:
        $r45 = virtualinvoke $r11.<org.apache.poi.hssf.usermodel.HSSFCell: org.apache.poi.hssf.usermodel.HSSFComment getCellComment()>();

        $z8 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeCellComments>;

        if $z8 == 0 goto label24;

        if $r45 == null goto label24;

        $r13 = virtualinvoke $r45.<org.apache.poi.hssf.usermodel.HSSFComment: org.apache.poi.hssf.usermodel.HSSFRichTextString getString()>();

        $r14 = virtualinvoke $r13.<org.apache.poi.hssf.usermodel.HSSFRichTextString: java.lang.String getString()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Comment by ");

        $r18 = virtualinvoke $r45.<org.apache.poi.hssf.usermodel.HSSFComment: java.lang.String getAuthor()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label24:
        if z7 == 0 goto label25;

        $i20 = (int) $s3;

        $i6 = $i20 - 1;

        if i15 >= $i6 goto label25;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label25:
        i15 = i15 + 1;

        goto label08;

     label26:
        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label27:
        i13 = i13 + 1;

        goto label05;

     label28:
        $z1 = r1.<org.apache.poi.hssf.extractor.ExcelExtractor: boolean _includeHeadersFooters>;

        if $z1 == 0 goto label29;

        $r8 = virtualinvoke $r7.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.hssf.usermodel.HSSFFooter getFooter()>();

        $r9 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: java.lang.String _extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r8);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label29:
        i12 = i12 + 1;

        goto label01;

     label30:
        $r5 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String _extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.poi.ss.usermodel.HeaderFooter r1;

        r1 := @parameter0: org.apache.poi.ss.usermodel.HeaderFooter;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getLeft()>();

        if $r2 == null goto label1;

        $r7 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getLeft()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label1:
        $r3 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getCenter()>();

        if $r3 == null goto label3;

        $i1 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label2:
        $r6 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getCenter()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label3:
        $r8 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getRight()>();

        if $r8 == null goto label5;

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label4:
        $r5 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.HeaderFooter: java.lang.String getRight()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label5:
        $i2 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label6;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
