public class org.apache.batik.svggen.DOMGroupManager extends java.lang.Object implements org.apache.batik.svggen.SVGSyntax, org.apache.batik.svggen.ErrorConstants
{
    public static final short DRAW;
    public static final short FILL;
    protected org.apache.batik.ext.awt.g2d.GraphicContext gc;
    protected org.apache.batik.svggen.DOMTreeManager domTreeManager;
    protected org.apache.batik.svggen.SVGGraphicContext groupGC;
    protected org.w3c.dom.Element currentGroup;

    public void <init>(org.apache.batik.ext.awt.g2d.GraphicContext, org.apache.batik.svggen.DOMTreeManager)
    {
        org.apache.batik.svggen.SVGGraphicContextConverter $r3;
        org.apache.batik.svggen.DOMGroupManager r0;
        org.apache.batik.ext.awt.g2d.GraphicContext r1;
        org.apache.batik.svggen.DOMTreeManager r2;
        org.apache.batik.svggen.SVGGraphicContext $r4;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r5, $r6;

        r0 := @this: org.apache.batik.svggen.DOMGroupManager;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        r2 := @parameter1: org.apache.batik.svggen.DOMTreeManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r6.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("gc should not be null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("domTreeManager should not be null");

        throw $r5;

     label2:
        r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.ext.awt.g2d.GraphicContext gc> = r1;

        r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager> = r2;

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void recycleCurrentGroup()>();

        $r3 = r2.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r4 = virtualinvoke $r3.<org.apache.batik.svggen.SVGGraphicContextConverter: org.apache.batik.svggen.SVGGraphicContext toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)>(r1);

        r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext groupGC> = $r4;

        return;
    }

    void recycleCurrentGroup()
    {
        org.apache.batik.svggen.DOMGroupManager r0;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r2;
        org.apache.batik.svggen.DOMTreeManager $r1;

        r0 := @this: org.apache.batik.svggen.DOMGroupManager;

        $r1 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r2 = virtualinvoke $r1.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Document getDOMFactory()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup> = $r3;

        return;
    }

    public void addElement(org.w3c.dom.Element)
    {
        org.apache.batik.svggen.DOMGroupManager r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.apache.batik.svggen.DOMGroupManager;

        r1 := @parameter0: org.w3c.dom.Element;

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void addElement(org.w3c.dom.Element,short)>(r1, 17);

        return;
    }

    public void addElement(org.w3c.dom.Element, short)
    {
        org.w3c.dom.Document $r4, $r16;
        java.util.Map $r21, $r25, $r26, $r39, $r44, $r51, $r52;
        boolean $z0, $z1;
        org.apache.batik.svggen.SVGGraphicContextConverter $r10, $r30;
        org.apache.batik.svggen.SVGGeneratorContext $r23, $r41, $r46;
        org.apache.batik.svggen.StyleHandler $r20, $r37, $r43;
        org.apache.batik.svggen.DOMGroupManager r0;
        short s0, $s3, $s4, $s5, $s6;
        int $i1, $i2;
        org.apache.batik.ext.awt.g2d.GraphicContext $r2, $r6, $r9, $r29;
        org.w3c.dom.Element $r1, $r5, r7, $r17, $r18, $r27, $r38, $r47, $r49;
        org.apache.batik.svggen.DOMTreeManager $r3, $r8, $r14, $r15, $r19, $r22, $r28, $r32, $r36, $r40, $r42, $r45, $r50;
        org.apache.batik.ext.awt.g2d.TransformStackElement[] $r24, $r48;
        org.apache.batik.svggen.SVGGraphicContext $r11, $r12, $r13, $r31, $r33, $r34, $r35;

        r0 := @this: org.apache.batik.svggen.DOMGroupManager;

        r7 := @parameter0: org.w3c.dom.Element;

        s0 := @parameter1: short;

        $r1 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        $z0 = interfaceinvoke $r1.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 != 0 goto label3;

        $r27 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        interfaceinvoke $r27.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        $r28 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r30 = $r28.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r29 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.ext.awt.g2d.GraphicContext gc>;

        $r31 = virtualinvoke $r30.<org.apache.batik.svggen.SVGGraphicContextConverter: org.apache.batik.svggen.SVGGraphicContext toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)>($r29);

        r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext groupGC> = $r31;

        $r34 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext groupGC>;

        $r32 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r33 = $r32.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContext defaultGC>;

        $r35 = staticinvoke <org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext processDeltaGC(org.apache.batik.svggen.SVGGraphicContext,org.apache.batik.svggen.SVGGraphicContext)>($r34, $r33);

        $r36 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r37 = virtualinvoke $r36.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.StyleHandler getStyleHandler()>();

        $r38 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        $r39 = virtualinvoke $r35.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        $r40 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r41 = virtualinvoke $r40.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext getGeneratorContext()>();

        interfaceinvoke $r37.<org.apache.batik.svggen.StyleHandler: void setStyle(org.w3c.dom.Element,java.util.Map,org.apache.batik.svggen.SVGGeneratorContext)>($r38, $r39, $r41);

        $s5 = s0 & 1;

        if $s5 != 0 goto label1;

        $r52 = virtualinvoke $r35.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGraphicElementContext()>();

        interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stroke", "none");

     label1:
        $s6 = s0 & 16;

        if $s6 != 0 goto label2;

        $r51 = virtualinvoke $r35.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGraphicElementContext()>();

        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fill", "none");

     label2:
        $r42 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r43 = virtualinvoke $r42.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.StyleHandler getStyleHandler()>();

        $r44 = virtualinvoke $r35.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGraphicElementContext()>();

        $r45 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r46 = virtualinvoke $r45.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext getGeneratorContext()>();

        interfaceinvoke $r43.<org.apache.batik.svggen.StyleHandler: void setStyle(org.w3c.dom.Element,java.util.Map,org.apache.batik.svggen.SVGGeneratorContext)>(r7, $r44, $r46);

        $r47 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        $r48 = virtualinvoke $r35.<org.apache.batik.svggen.SVGGraphicContext: org.apache.batik.ext.awt.g2d.TransformStackElement[] getTransformStack()>();

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void setTransform(org.w3c.dom.Element,org.apache.batik.ext.awt.g2d.TransformStackElement[])>($r47, $r48);

        $r50 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r49 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        virtualinvoke $r50.<org.apache.batik.svggen.DOMTreeManager: void appendGroup(org.w3c.dom.Element,org.apache.batik.svggen.DOMGroupManager)>($r49, r0);

        goto label9;

     label3:
        $r2 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.ext.awt.g2d.GraphicContext gc>;

        $z1 = virtualinvoke $r2.<org.apache.batik.ext.awt.g2d.GraphicContext: boolean isTransformStackValid()>();

        if $z1 == 0 goto label8;

        $r8 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r10 = $r8.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r9 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.ext.awt.g2d.GraphicContext gc>;

        $r11 = virtualinvoke $r10.<org.apache.batik.svggen.SVGGraphicContextConverter: org.apache.batik.svggen.SVGGraphicContext toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)>($r9);

        $r12 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext groupGC>;

        $r13 = staticinvoke <org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.SVGGraphicContext processDeltaGC(org.apache.batik.svggen.SVGGraphicContext,org.apache.batik.svggen.SVGGraphicContext)>($r11, $r12);

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void trimContextForElement(org.apache.batik.svggen.SVGGraphicContext,org.w3c.dom.Element)>($r13, r7);

        $i1 = virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: int countOverrides(org.apache.batik.svggen.SVGGraphicContext)>($r13);

        $r14 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $i2 = $r14.<org.apache.batik.svggen.DOMTreeManager: int maxGCOverrides>;

        if $i1 > $i2 goto label6;

        $r18 = r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup>;

        interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        $s3 = s0 & 1;

        if $s3 != 0 goto label4;

        $r26 = virtualinvoke $r13.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getContext()>();

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stroke", "none");

     label4:
        $s4 = s0 & 16;

        if $s4 != 0 goto label5;

        $r25 = virtualinvoke $r13.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getContext()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fill", "none");

     label5:
        $r19 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r20 = virtualinvoke $r19.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.StyleHandler getStyleHandler()>();

        $r21 = virtualinvoke $r13.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getContext()>();

        $r22 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r23 = virtualinvoke $r22.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGeneratorContext getGeneratorContext()>();

        interfaceinvoke $r20.<org.apache.batik.svggen.StyleHandler: void setStyle(org.w3c.dom.Element,java.util.Map,org.apache.batik.svggen.SVGGeneratorContext)>(r7, $r21, $r23);

        $r24 = virtualinvoke $r13.<org.apache.batik.svggen.SVGGraphicContext: org.apache.batik.ext.awt.g2d.TransformStackElement[] getTransformStack()>();

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void setTransform(org.w3c.dom.Element,org.apache.batik.ext.awt.g2d.TransformStackElement[])>(r7, $r24);

        goto label7;

     label6:
        $r15 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r16 = virtualinvoke $r15.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Document getDOMFactory()>();

        $r17 = interfaceinvoke $r16.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup> = $r17;

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void addElement(org.w3c.dom.Element,short)>(r7, s0);

     label7:
        goto label9;

     label8:
        $r3 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r4 = virtualinvoke $r3.<org.apache.batik.svggen.DOMTreeManager: org.w3c.dom.Document getDOMFactory()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "g");

        r0.<org.apache.batik.svggen.DOMGroupManager: org.w3c.dom.Element currentGroup> = $r5;

        $r6 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.ext.awt.g2d.GraphicContext gc>;

        virtualinvoke $r6.<org.apache.batik.ext.awt.g2d.GraphicContext: void validateTransformStack()>();

        virtualinvoke r0.<org.apache.batik.svggen.DOMGroupManager: void addElement(org.w3c.dom.Element,short)>(r7, s0);

     label9:
        return;
    }

    protected int countOverrides(org.apache.batik.svggen.SVGGraphicContext)
    {
        org.apache.batik.svggen.DOMGroupManager r2;
        java.util.Map $r1;
        int $i0;
        org.apache.batik.svggen.SVGGraphicContext r0;

        r2 := @this: org.apache.batik.svggen.DOMGroupManager;

        r0 := @parameter0: org.apache.batik.svggen.SVGGraphicContext;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    protected void trimContextForElement(org.apache.batik.svggen.SVGGraphicContext, org.w3c.dom.Element)
    {
        java.util.Iterator $r5;
        org.apache.batik.svggen.SVGAttribute $r8;
        java.util.Set $r4;
        org.apache.batik.svggen.DOMGroupManager r9;
        org.w3c.dom.Element r0;
        java.util.Map $r3;
        java.lang.Object $r6;
        java.lang.String $r1, r7;
        org.apache.batik.svggen.SVGGraphicContext r2;
        boolean $z0, $z1;

        r9 := @this: org.apache.batik.svggen.DOMGroupManager;

        r2 := @parameter0: org.apache.batik.svggen.SVGGraphicContext;

        r0 := @parameter1: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        if $r1 == null goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.apache.batik.svggen.SVGAttributeMap: org.apache.batik.svggen.SVGAttribute get(java.lang.String)>(r7);

        if $r8 == null goto label2;

        $z0 = virtualinvoke $r8.<org.apache.batik.svggen.SVGAttribute: boolean appliesTo(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7);

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        return;
    }

    protected void setTransform(org.w3c.dom.Element, org.apache.batik.ext.awt.g2d.TransformStackElement[])
    {
        org.apache.batik.svggen.SVGGraphicContextConverter $r3;
        org.apache.batik.svggen.DOMGroupManager r0;
        org.w3c.dom.Element r6;
        int $i0;
        org.apache.batik.svggen.DOMTreeManager $r1;
        org.apache.batik.ext.awt.g2d.TransformStackElement[] r2;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.batik.svggen.DOMGroupManager;

        r6 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.apache.batik.ext.awt.g2d.TransformStackElement[];

        $r1 = r0.<org.apache.batik.svggen.DOMGroupManager: org.apache.batik.svggen.DOMTreeManager domTreeManager>;

        $r3 = $r1.<org.apache.batik.svggen.DOMTreeManager: org.apache.batik.svggen.SVGGraphicContextConverter gcConverter>;

        $r4 = virtualinvoke $r3.<org.apache.batik.svggen.SVGGraphicContextConverter: java.lang.String toSVG(org.apache.batik.ext.awt.g2d.TransformStackElement[])>(r2);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        interfaceinvoke r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "transform", $r5);

     label1:
        return;
    }

    static org.apache.batik.svggen.SVGGraphicContext processDeltaGC(org.apache.batik.svggen.SVGGraphicContext, org.apache.batik.svggen.SVGGraphicContext)
    {
        java.util.Map $r1, $r3, $r4, $r5;
        int $i0, $i1, i2, $i3;
        org.apache.batik.ext.awt.g2d.TransformStackElement[] $r6, $r7, r8;
        org.apache.batik.svggen.SVGGraphicContext r0, r2, $r9;

        r0 := @parameter0: org.apache.batik.svggen.SVGGraphicContext;

        r2 := @parameter1: org.apache.batik.svggen.SVGGraphicContext;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGroupContext()>();

        $r4 = staticinvoke <org.apache.batik.svggen.DOMGroupManager: java.util.Map processDeltaMap(java.util.Map,java.util.Map)>($r1, $r3);

        $r5 = virtualinvoke r0.<org.apache.batik.svggen.SVGGraphicContext: java.util.Map getGraphicElementContext()>();

        $r6 = virtualinvoke r0.<org.apache.batik.svggen.SVGGraphicContext: org.apache.batik.ext.awt.g2d.TransformStackElement[] getTransformStack()>();

        $r7 = virtualinvoke r2.<org.apache.batik.svggen.SVGGraphicContext: org.apache.batik.ext.awt.g2d.TransformStackElement[] getTransformStack()>();

        $i1 = lengthof $r6;

        $i0 = lengthof $r7;

        i2 = $i1 - $i0;

        r8 = newarray (org.apache.batik.ext.awt.g2d.TransformStackElement)[i2];

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i3, r8, 0, i2);

        $r9 = new org.apache.batik.svggen.SVGGraphicContext;

        specialinvoke $r9.<org.apache.batik.svggen.SVGGraphicContext: void <init>(java.util.Map,java.util.Map,org.apache.batik.ext.awt.g2d.TransformStackElement[])>($r4, $r5, r8);

        return $r9;
    }

    static java.util.Map processDeltaMap(java.util.Map, java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r0;
        java.util.Map r1, r8;
        java.lang.Object $r4, $r6, $r9;
        java.lang.String r5, r7, r10;
        boolean $z0, $z1;

        r1 := @parameter0: java.util.Map;

        r8 := @parameter1: java.util.Map;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.String) $r6;

        $r9 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r10 = (java.lang.String) $r9;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r7);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.batik.svggen.DOMGroupManager: short FILL> = 16;

        <org.apache.batik.svggen.DOMGroupManager: short DRAW> = 1;

        return;
    }
}
