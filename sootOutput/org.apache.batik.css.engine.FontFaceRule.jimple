public class org.apache.batik.css.engine.FontFaceRule extends java.lang.Object implements org.apache.batik.css.engine.Rule
{
    public static final short TYPE;
    org.apache.batik.css.engine.StyleMap sm;
    org.apache.batik.util.ParsedURL purl;

    public void <init>(org.apache.batik.css.engine.StyleMap, org.apache.batik.util.ParsedURL)
    {
        org.apache.batik.util.ParsedURL r2;
        org.apache.batik.css.engine.FontFaceRule r0;
        org.apache.batik.css.engine.StyleMap r1;

        r0 := @this: org.apache.batik.css.engine.FontFaceRule;

        r1 := @parameter0: org.apache.batik.css.engine.StyleMap;

        r2 := @parameter1: org.apache.batik.util.ParsedURL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.engine.FontFaceRule: org.apache.batik.css.engine.StyleMap sm> = r1;

        r0.<org.apache.batik.css.engine.FontFaceRule: org.apache.batik.util.ParsedURL purl> = r2;

        return;
    }

    public short getType()
    {
        org.apache.batik.css.engine.FontFaceRule r0;

        r0 := @this: org.apache.batik.css.engine.FontFaceRule;

        return 3;
    }

    public org.apache.batik.util.ParsedURL getURL()
    {
        org.apache.batik.util.ParsedURL $r1;
        org.apache.batik.css.engine.FontFaceRule r0;

        r0 := @this: org.apache.batik.css.engine.FontFaceRule;

        $r1 = r0.<org.apache.batik.css.engine.FontFaceRule: org.apache.batik.util.ParsedURL purl>;

        return $r1;
    }

    public org.apache.batik.css.engine.StyleMap getStyleMap()
    {
        org.apache.batik.css.engine.FontFaceRule r0;
        org.apache.batik.css.engine.StyleMap $r1;

        r0 := @this: org.apache.batik.css.engine.FontFaceRule;

        $r1 = r0.<org.apache.batik.css.engine.FontFaceRule: org.apache.batik.css.engine.StyleMap sm>;

        return $r1;
    }

    public java.lang.String toString(org.apache.batik.css.engine.CSSEngine)
    {
        java.lang.StringBuffer $r0;
        org.apache.batik.css.engine.FontFaceRule r1;
        org.apache.batik.css.engine.StyleMap $r3;
        java.lang.String $r4, $r5;
        org.apache.batik.css.engine.CSSEngine r2;

        r1 := @this: org.apache.batik.css.engine.FontFaceRule;

        r2 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@font-face { ");

        $r3 = r1.<org.apache.batik.css.engine.FontFaceRule: org.apache.batik.css.engine.StyleMap sm>;

        $r4 = virtualinvoke $r3.<org.apache.batik.css.engine.StyleMap: java.lang.String toString(org.apache.batik.css.engine.CSSEngine)>(r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.batik.css.engine.FontFaceRule: short TYPE> = 3;

        return;
    }
}
