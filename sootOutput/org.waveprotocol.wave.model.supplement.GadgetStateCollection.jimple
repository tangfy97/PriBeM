class org.waveprotocol.wave.model.supplement.GadgetStateCollection extends java.lang.Object implements org.waveprotocol.wave.model.util.ElementListener
{
    private final org.waveprotocol.wave.model.document.util.DocumentEventRouter router;
    private final java.lang.Object container;
    private final org.waveprotocol.wave.model.util.StringMap gadgetSupplements;
    private final org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener listener;
    static final boolean $assertionsDisabled;

    private void <init>(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r4;
        java.lang.Object r3;
        org.waveprotocol.wave.model.util.StringMap $r1;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements> = $r1;

        r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.util.DocumentEventRouter router> = r2;

        r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: java.lang.Object container> = r3;

        r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener listener> = r4;

        return;
    }

    public static org.waveprotocol.wave.model.supplement.GadgetStateCollection create(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection $r0;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener r3;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener;

        $r0 = new org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        specialinvoke $r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: void <init>(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object,org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)>(r1, r2, r3);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.util.ListenerRegistration addChildListener(java.lang.Object,org.waveprotocol.wave.model.util.ElementListener)>(r2, $r0);

        specialinvoke $r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: void load()>();

        return $r0;
    }

    private org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter $r1;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.util.DocumentEventRouter router>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        return $r2;
    }

    private void load()
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1;
        java.lang.Object $r2, r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object getDocumentElement()>();

        r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocHelper: java.lang.Object getFirstChildElement(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r1, $r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: void onElementAdded(java.lang.Object)>(r3);

        r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocHelper: java.lang.Object getNextSiblingElement(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r1, r3);

        goto label1;

     label2:
        return;
    }

    private java.lang.String valueOf(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "i");

        return $r3;
    }

    public void onElementAdded(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.GadgetState r8;
        org.waveprotocol.wave.model.util.StringMap $r6, $r12;
        java.lang.AssertionError $r16;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener $r9, $r13;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1;
        java.lang.String $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.supplement.DocumentBasedGadgetState $r11;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter $r10;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        java.lang.Object r2, $r7, $r14, $r15;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $z0 = <org.waveprotocol.wave.model.supplement.GadgetStateCollection: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r14 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: java.lang.Object container>;

        $r15 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object getParentElement(java.lang.Object)>(r2);

        $z2 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $r3 = "gadget";

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getTagName(java.lang.Object)>(r2);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r5 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: java.lang.String valueOf(java.lang.Object)>(r2);

        if $r5 == null goto label3;

        $r6 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>($r5);

        r8 = (org.waveprotocol.wave.model.supplement.GadgetState) $r7;

        if r8 != null goto label3;

        $r10 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.util.DocumentEventRouter router>;

        $r9 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener listener>;

        $r11 = staticinvoke <org.waveprotocol.wave.model.supplement.DocumentBasedGadgetState: org.waveprotocol.wave.model.supplement.DocumentBasedGadgetState create(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object,java.lang.String,org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener)>($r10, r2, $r5, $r9);

        $r12 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        interfaceinvoke $r12.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>($r5, $r11);

        $r13 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener listener>;

        interfaceinvoke $r13.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener: void onGadgetStateChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, null, null, null);

     label3:
        return;
    }

    public void onElementRemoved(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.StringMap $r6;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;
        java.lang.Object r3;
        java.lang.String $r1, $r4, $r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r3 := @parameter0: java.lang.Object;

        $r1 = "gadget";

        $r2 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getTagName(java.lang.Object)>(r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: java.lang.String valueOf(java.lang.Object)>(r3);

        if $r5 == null goto label1;

        $r6 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringMap: void remove(java.lang.String)>($r5);

     label1:
        return;
    }

    private void createEntry(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r4;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1, $r2;
        java.lang.Object $r3;
        java.lang.String[] $r5;
        java.lang.String r6;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r6 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r2 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object getDocumentElement()>();

        $r4 = new org.waveprotocol.wave.model.document.operation.impl.AttributesImpl;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "i";

        $r5[1] = r6;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: void <init>(java.lang.String[])>($r5);

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object createChildElement(java.lang.Object,java.lang.String,java.util.Map)>($r3, "gadget", $r4);

        return;
    }

    org.waveprotocol.wave.model.supplement.GadgetState getSupplement(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.GadgetState r7;
        org.waveprotocol.wave.model.util.StringMap $r2, $r4;
        java.lang.AssertionError $r6;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r1;
        java.lang.Object $r3, $r5;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Gadget ID must not be null");

        $r2 = r1.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r0);

        r7 = (org.waveprotocol.wave.model.supplement.GadgetState) $r3;

        if r7 != null goto label1;

        specialinvoke r1.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: void createEntry(java.lang.String)>(r0);

        $r4 = r1.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r0);

        r7 = (org.waveprotocol.wave.model.supplement.GadgetState) $r5;

        $z0 = <org.waveprotocol.wave.model.supplement.GadgetStateCollection: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r7 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        return r7;
    }

    void setGadgetState(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.supplement.GadgetState $r2;
        java.lang.String r1, r3, r4;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.supplement.GadgetState getSupplement(java.lang.String)>(r1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.supplement.GadgetState: void setState(java.lang.String,java.lang.String)>(r3, r4);

        return;
    }

    void clear()
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r1;
        org.waveprotocol.wave.model.util.StringSet $r0;
        org.waveprotocol.wave.model.util.StringMap $r3;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection$1 $r2;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection$2 $r4;

        r1 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        $r3 = r1.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        $r2 = new org.waveprotocol.wave.model.supplement.GadgetStateCollection$1;

        specialinvoke $r2.<org.waveprotocol.wave.model.supplement.GadgetStateCollection$1: void <init>(org.waveprotocol.wave.model.supplement.GadgetStateCollection,org.waveprotocol.wave.model.util.StringSet)>(r1, $r0);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: void each(org.waveprotocol.wave.model.util.ReadableStringMap$ProcV)>($r2);

        $r4 = new org.waveprotocol.wave.model.supplement.GadgetStateCollection$2;

        specialinvoke $r4.<org.waveprotocol.wave.model.supplement.GadgetStateCollection$2: void <init>(org.waveprotocol.wave.model.supplement.GadgetStateCollection)>(r1);

        interfaceinvoke $r0.<org.waveprotocol.wave.model.util.StringSet: void each(org.waveprotocol.wave.model.util.ReadableStringSet$Proc)>($r4);

        return;
    }

    org.waveprotocol.wave.model.util.ReadableStringMap getGadgetState(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.supplement.GadgetState r4;
        java.lang.Object $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.util.StringMap $r2;
        org.waveprotocol.wave.model.util.ReadableStringMap $r5;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r1);

        r4 = (org.waveprotocol.wave.model.supplement.GadgetState) $r3;

        if r4 == null goto label1;

        $r5 = interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.GadgetState: org.waveprotocol.wave.model.util.ReadableStringMap getStateMap()>();

        goto label2;

     label1:
        $r5 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap emptyMap()>();

     label2:
        return $r5;
    }

    static org.waveprotocol.wave.model.util.StringMap access$000(org.waveprotocol.wave.model.supplement.GadgetStateCollection)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r0;
        org.waveprotocol.wave.model.util.StringMap $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap gadgetSupplements>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/supplement/GadgetStateCollection;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.supplement.GadgetStateCollection: boolean $assertionsDisabled> = $z1;

        return;
    }
}
