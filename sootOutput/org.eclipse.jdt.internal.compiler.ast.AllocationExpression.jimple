public class org.eclipse.jdt.internal.compiler.ast.AllocationExpression extends org.eclipse.jdt.internal.compiler.ast.Expression implements org.eclipse.jdt.internal.compiler.lookup.InvocationSite
{
    public org.eclipse.jdt.internal.compiler.ast.TypeReference type;
    public org.eclipse.jdt.internal.compiler.ast.Expression[] arguments;
    public org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding;
    protected org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding;
    org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor;
    public org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments;
    public org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void <init>()>();

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r6, $r11, $r12;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r14, r15;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r13;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r9;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3;
        int $i0, i1, i2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r7;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r5;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r15 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r5 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r3;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void checkCapturedLocalInitializationIfNecessary(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r5, r4, r15);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r6 == null goto label3;

        i2 = 0;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i1 = lengthof $r11;

        goto label2;

     label1:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r13 = $r12[i2];

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r9, r15);

        r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i0 = lengthof $r8;

        if $i0 == 0 goto label4;

        $r10 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        virtualinvoke r9.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void checkExceptionHandlers(org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r8, r0, $r10, r4);

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r15);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r15);

        return r15;
    }

    public void checkCapturedLocalInitializationIfNecessary(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r8;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r7;
        long $l0, $l1;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding r4;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r3;
        byte $b2;
        int i3, i4;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r9;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration $r6;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r2;

        r9 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l1 = $l0 & 52L;

        $b2 = $l1 cmp 20L;

        if $b2 != 0 goto label5;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isDefinedInType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r0);

        if $z0 != 0 goto label5;

        r2 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r0;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        if $r3 == null goto label5;

        i4 = 0;

        i3 = lengthof $r3;

        goto label4;

     label1:
        r4 = $r3[i4];

        $r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding actualOuterLocalVariable>;

        if $r5 != null goto label2;

        goto label3;

     label2:
        $r6 = $r5.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration declaration>;

        if $r6 == null goto label3;

        $z1 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r5);

        if $z1 != 0 goto label3;

        $r8 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r5, r9);

     label3:
        i4 = i4 + 1;

     label4:
        if i4 < i3 goto label1;

     label5:
        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance()
    {
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        return null;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r10;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r20;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r18;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r4, $r7;
        boolean z0, z1, $z2, $z3, $z5, $z6;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2, $r11, $r12, $r13, $r15, $r17, $r19;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r21, $r22;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r9;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r6;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r14, $r16;
        char[] $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z1 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void new_(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: int implicitConversion>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label01;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

     label02:
        z0 = $z6;

        if z1 != 0 goto label03;

        if $z5 == 0 goto label04;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label04:
        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r22 == null goto label05;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i10 = $r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i10);

        goto label06;

     label05:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r6);

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $i3 = $r8.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i3);

     label06:
        $z2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z2 == 0 goto label07;

        $r20 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateSyntheticEnclosingInstanceValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r9, r3, $r20, r1);

     label07:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void generateArguments(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r11, $r10, r9, r0);

        $z3 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z3 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateSyntheticOuterArgumentValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r9, r3, r1);

     label08:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        if $r12 != null goto label09;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r19);

        goto label12;

     label09:
        i11 = 0;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i5 = lengthof $r14;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i4 = lengthof $r16;

        i6 = $i5 - $i4;

        goto label11;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aconst_null()>();

        i11 = i11 + 1;

     label11:
        if i11 < i6 goto label10;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r17);

     label12:
        if z1 == 0 goto label13;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i9);

        goto label16;

     label13:
        if z0 == 0 goto label16;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i7);

        $r18 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r9);

        $i8 = $r18.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i8)
        {
            case 7: goto label14;
            case 8: goto label14;
            default: goto label15;
        };

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop2()>();

        goto label16;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label16:
        $i12 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i12);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments()
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r1;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        return $r1;
    }

    public boolean isSuperAccess()
    {
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        return 0;
    }

    public boolean isTypeAccess()
    {
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        return 1;
    }

    public void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r7;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, r5;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding $r8;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r5 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r4;

        $z0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $z1 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isLocalType()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z2 == 0 goto label2;

        $r8 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) r5;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: void addInnerEmulationDependent(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r6, 0);

        goto label3;

     label2:
        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void propagateInnerEmulation(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r5, 0);

     label3:
        return;
    }

    public void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r6, $r9;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r12;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        long $l2, $l3, $l5, $l7, $l8;
        byte $b4, $b6;
        int $i0, $i1, $i9;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2, $r3, $r4, $r7, $r10, $r13, $r15;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r8;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding $r11;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding> = $r3;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r6 == $r8 goto label3;

        $l2 = $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l3 = $l2 & 16L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r14 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l5 = $r14.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b6 = $l5 cmp 3145728L;

        $i9 = (int) $b6;

        if $i9 < 0 goto label2;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $l7 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l8 = $l7 | 1024L;

        $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits> = $l8;

        goto label3;

     label2:
        $r9 = (org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding) $r8;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: boolean isSuperAccess()>();

        $r11 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding addSyntheticMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,boolean)>($r10, $z1);

        r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor> = $r11;

        $r12 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needToEmulateMethodAccess(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r13, r1);

     label3:
        return;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r5, $r7, $r15;
        org.eclipse.jdt.internal.compiler.ast.Expression $r8;
        java.lang.StringBuffer r4, $r6;
        int $i0, i1, i2, i3, i4, $i5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r2, $r10, $r11, $r13;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r1, $r3, $r9, $r12, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        i1 := @parameter0: int;

        r4 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r1 == null goto label1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new ");

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r2 == null goto label4;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i0 = lengthof $r10;

        i2 = $i0 - 1;

        i3 = 0;

        goto label3;

     label2:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r12 = $r11[i3];

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r4);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        i3 = i3 + 1;

     label3:
        if i3 < i2 goto label2;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r14 = $r13[i2];

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r4);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

     label4:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r3 == null goto label5;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r4);

     label5:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r5 == null goto label9;

        i4 = 0;

        goto label8;

     label6:
        if i4 <= 0 goto label7;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label7:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r8 = $r7[i4];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r4);

        i4 = i4 + 1;

     label8:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i5 = lengthof $r15;

        if i4 < $i5 goto label6;

     label9:
        $r6 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        return $r6;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference[][] $r79, $r80;
        byte $b2, $b9;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r17, $r23, $r65, $r68, $r81, $r88;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r12, $r13, $r14, $r16, $r18, $r19, $r25, $r27, $r29, $r30, $r34, $r38, $r53, $r54, $r55, $r56, $r58, $r61, $r64, r94;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r4, $r6, $r10, $r32, $r36, $r43, $r78, $r84, r89;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        long $l0, $l1, $l8;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r63;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding $r57;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r20, $r21, $r59, $r60;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r87;
        int $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, $i22, $i23, $i25;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r24, $r67, $r69, r90, r92;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r8, $r9, $r11, $r35, $r37, $r39, $r42, $r44, $r47, $r48, $r49, $r50, $r70, $r76, $r83, $r93, $r95;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r66;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;
        char[] $r51;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r22, $r26, $r28, $r33, $r41, $r71, $r82;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r7, $r15, $r45, $r46, $r72, $r73, $r74;
        org.eclipse.jdt.internal.compiler.ast.Expression $r75, r91;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z17;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r31, $r40, $r52, $r62, $r77, $r85, r86;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r2 != null goto label01;

        $r85 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingReceiverType()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r85;

        goto label08;

     label01:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r3, 1);

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r5;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $z0 = $r6 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z0 == 0 goto label08;

        $r76 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        r86 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r76;

        if r86 != null goto label02;

        return r86;

     label02:
        $i10 = r86.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        $i11 = $i10 & 8;

        if $i11 == 0 goto label03;

        goto label08;

     label03:
        $z13 = virtualinvoke r86.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isRawType()>();

        if $z13 == 0 goto label04;

        goto label08;

     label04:
        $r77 = virtualinvoke r86.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        r86 = $r77;

        if $r77 != null goto label02;

        $r78 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        r87 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) $r78;

        $r79 = r87.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[][] typeArguments>;

        $i12 = lengthof $r79;

        i13 = $i12 - 2;

        goto label07;

     label05:
        $r80 = r87.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[][] typeArguments>;

        $r81 = $r80[i13];

        if $r81 == null goto label06;

        $r82 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r84 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r83 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke $r82.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalQualifiedParameterizedTypeAllocation(org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r84, $r83);

        goto label08;

     label06:
        $i22 = (int) -1;

        i13 = i13 + $i22;

     label07:
        if i13 >= 0 goto label05;

     label08:
        $r88 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r88 == null goto label18;

        $r65 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i14 = lengthof $r65;

        $r66 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l8 = $r66.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b9 = $l8 cmp 3211264L;

        $i23 = (int) $b9;

        if $i23 >= 0 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        z15 = $z14;

        $r67 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i14];

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments> = $r67;

        i15 = 0;

        goto label14;

     label11:
        $r68 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        r89 = $r68[i15];

        $r69 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        $r70 = virtualinvoke r89.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r3, 1);

        $r69[i15] = $r70;

        if $r70 != null goto label12;

        z15 = 1;

     label12:
        if z15 == 0 goto label13;

        $z12 = r89 instanceof org.eclipse.jdt.internal.compiler.ast.Wildcard;

        if $z12 == 0 goto label13;

        $r71 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r71.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalUsageOfWildcard(org.eclipse.jdt.internal.compiler.ast.TypeReference)>(r89);

     label13:
        i15 = i15 + 1;

     label14:
        if i15 < i14 goto label11;

        if z15 == 0 goto label18;

        $r72 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r72 == null goto label17;

        i16 = 0;

        $r73 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i17 = lengthof $r73;

        goto label16;

     label15:
        $r74 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r75 = $r74[i16];

        virtualinvoke $r75.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        i16 = i16 + 1;

     label16:
        if i16 < i17 goto label15;

     label17:
        return null;

     label18:
        z16 = 0;

        r90 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] NO_PARAMETERS>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r7 == null goto label30;

        z17 = 0;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i18 = lengthof $r45;

        r90 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i18];

        i19 = 0;

        goto label22;

     label19:
        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        r91 = $r46[i19];

        $z6 = r91 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z6 == 0 goto label20;

        $i3 = r91.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i4 = $i3 | 32;

        r91.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i4;

        z16 = 1;

     label20:
        $r47 = virtualinvoke r91.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        r90[i19] = $r47;

        if $r47 != null goto label21;

        z17 = 1;

     label21:
        i19 = i19 + 1;

     label22:
        if i19 < i18 goto label19;

        if z17 == 0 goto label30;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z7 = $r48 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z7 == 0 goto label29;

        r92 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i18];

        i20 = i18;

        goto label26;

     label23:
        $i5 = i20;

        $r49 = r90[i20];

        if $r49 != null goto label24;

        $r93 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        goto label25;

     label24:
        $r93 = r90[i20];

     label25:
        r92[$i5] = $r93;

     label26:
        $i25 = (int) -1;

        i20 = i20 + $i25;

        if i20 >= 0 goto label23;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r52 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r50;

        $r51 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] INIT>;

        $r53 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding findMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r52, $r51, r92, r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r53;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r54 == null goto label29;

        $r55 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z8 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z8 != 0 goto label29;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r57 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) $r56;

        r94 = $r57.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if r94 == null goto label29;

        $r58 = virtualinvoke r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r60 = $r58.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r59 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r60 == $r59 goto label27;

        $r63 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r64 = virtualinvoke r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        r94 = virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding createParameterizedGenericMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding)>($r64, null);

     label27:
        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = r94;

        $r61 = virtualinvoke r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z9 = virtualinvoke $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z9 != 0 goto label28;

        $r62 = $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z11 = virtualinvoke $r62.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z11 == 0 goto label29;

     label28:
        $z10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isDefinedInMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r61);

        if $z10 != 0 goto label29;

        $i6 = $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i7 = $i6 | 134217728;

        $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i7;

     label29:
        $r95 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r95;

     label30:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r8 == null goto label31;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z1 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z1 != 0 goto label32;

     label31:
        return null;

     label32:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r10 == null goto label33;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z5 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean canBeInstantiated()>();

        if $z5 != 0 goto label33;

        $r41 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotInstantiate(org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r43, $r42);

        $r44 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r44;

     label33:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r40 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r11;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getConstructor(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r40, r90, r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r12;

        $z2 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z2 != 0 goto label36;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r31 = $r30.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r31 != null goto label34;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r38.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass> = $r40;

     label34:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r32 == null goto label35;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z4 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z4 != 0 goto label35;

        return null;

     label35:
        $r33 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidConstructor(org.eclipse.jdt.internal.compiler.ast.Statement,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r34);

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r35;

     label36:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $l0 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label37;

        $r28 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingTypeInConstructor(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r29);

     label37:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: boolean isMethodUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean)>($r14, r3, 1);

        if $z3 == 0 goto label38;

        $r26 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r27, r0);

     label38:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void checkInvocationArguments(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean,org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r3, null, $r40, $r16, $r15, r90, z16, r0);

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r17 == null goto label39;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r21 = $r19.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r21 != $r20 goto label39;

        $r22 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryTypeArgumentsForMethodInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.ast.TypeReference[])>($r25, $r24, $r23);

     label39:
        return $r40;
    }

    public void setActualReceiverType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        return;
    }

    public void setDepth(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        i0 := @parameter0: int;

        return;
    }

    public void setFieldIndex(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        i0 := @parameter0: int;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r8;
        int i0, i1, i2, i3;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r3, $r10, $r11;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r9, $r12;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label7;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r3 == null goto label3;

        i0 = 0;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i1 = lengthof $r10;

        goto label2;

     label1:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r12 = $r11[i0];

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i0 = i0 + 1;

     label2:
        if i0 < i1 goto label1;

     label3:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label4;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label4:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r5 == null goto label7;

        i2 = 0;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i3 = lengthof $r6;

        goto label6;

     label5:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r8 = $r7[i2];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i2 = i2 + 1;

     label6:
        if i2 < i3 goto label5;

     label7:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
