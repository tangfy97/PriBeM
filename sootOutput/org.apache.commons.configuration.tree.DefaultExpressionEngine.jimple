public class org.apache.commons.configuration.tree.DefaultExpressionEngine extends java.lang.Object implements org.apache.commons.configuration.tree.ExpressionEngine
{
    public static final java.lang.String DEFAULT_PROPERTY_DELIMITER;
    public static final java.lang.String DEFAULT_ESCAPED_DELIMITER;
    public static final java.lang.String DEFAULT_ATTRIBUTE_START;
    public static final java.lang.String DEFAULT_ATTRIBUTE_END;
    public static final java.lang.String DEFAULT_INDEX_START;
    public static final java.lang.String DEFAULT_INDEX_END;
    private java.lang.String propertyDelimiter;
    private java.lang.String escapedDelimiter;
    private java.lang.String attributeStart;
    private java.lang.String attributeEnd;
    private java.lang.String indexStart;
    private java.lang.String indexEnd;

    public void <init>()
    {
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String propertyDelimiter> = ".";

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String escapedDelimiter> = "..";

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeStart> = "[@";

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeEnd> = "]";

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexStart> = "(";

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexEnd> = ")";

        return;
    }

    public java.lang.String getAttributeEnd()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeEnd>;

        return $r1;
    }

    public void setAttributeEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeEnd> = r1;

        return;
    }

    public java.lang.String getAttributeStart()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeStart>;

        return $r1;
    }

    public void setAttributeStart(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String attributeStart> = r1;

        return;
    }

    public java.lang.String getEscapedDelimiter()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String escapedDelimiter>;

        return $r1;
    }

    public void setEscapedDelimiter(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String escapedDelimiter> = r1;

        return;
    }

    public java.lang.String getIndexEnd()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexEnd>;

        return $r1;
    }

    public void setIndexEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexEnd> = r1;

        return;
    }

    public java.lang.String getIndexStart()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexStart>;

        return $r1;
    }

    public void setIndexStart(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String indexStart> = r1;

        return;
    }

    public java.lang.String getPropertyDelimiter()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        $r1 = r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String propertyDelimiter>;

        return $r1;
    }

    public void setPropertyDelimiter(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r0;

        r0 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String propertyDelimiter> = r1;

        return;
    }

    public java.util.List query(org.apache.commons.configuration.tree.ConfigurationNode, java.lang.String)
    {
        org.apache.commons.configuration.tree.DefaultConfigurationKey $r2;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r1;
        java.lang.String r3;
        org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator $r4;
        java.util.LinkedList $r0;
        org.apache.commons.configuration.tree.ConfigurationNode r5;

        r1 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r5 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = new org.apache.commons.configuration.tree.DefaultConfigurationKey;

        specialinvoke $r2.<org.apache.commons.configuration.tree.DefaultConfigurationKey: void <init>(org.apache.commons.configuration.tree.DefaultExpressionEngine,java.lang.String)>(r1, r3);

        $r4 = virtualinvoke $r2.<org.apache.commons.configuration.tree.DefaultConfigurationKey: org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator iterator()>();

        virtualinvoke r1.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void findNodesForKey(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,org.apache.commons.configuration.tree.ConfigurationNode,java.util.Collection)>($r4, r5, $r0);

        return $r0;
    }

    public java.lang.String nodeKey(org.apache.commons.configuration.tree.ConfigurationNode, java.lang.String)
    {
        org.apache.commons.configuration.tree.DefaultConfigurationKey $r1;
        org.apache.commons.configuration.tree.ConfigurationNode r3;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r2;
        java.lang.String r0, $r4, $r5, $r6;
        boolean $z0;

        r2 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r3 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = new org.apache.commons.configuration.tree.DefaultConfigurationKey;

        specialinvoke $r1.<org.apache.commons.configuration.tree.DefaultConfigurationKey: void <init>(org.apache.commons.configuration.tree.DefaultExpressionEngine,java.lang.String)>(r2, r0);

        $z0 = interfaceinvoke r3.<org.apache.commons.configuration.tree.ConfigurationNode: boolean isAttribute()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        virtualinvoke $r1.<org.apache.commons.configuration.tree.DefaultConfigurationKey: org.apache.commons.configuration.tree.DefaultConfigurationKey appendAttribute(java.lang.String)>($r6);

        goto label3;

     label2:
        $r4 = interfaceinvoke r3.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        virtualinvoke $r1.<org.apache.commons.configuration.tree.DefaultConfigurationKey: org.apache.commons.configuration.tree.DefaultConfigurationKey append(java.lang.String,boolean)>($r4, 1);

     label3:
        $r5 = virtualinvoke $r1.<org.apache.commons.configuration.tree.DefaultConfigurationKey: java.lang.String toString()>();

        return $r5;
    }

    public org.apache.commons.configuration.tree.NodeAddData prepareAdd(org.apache.commons.configuration.tree.ConfigurationNode, java.lang.String)
    {
        java.lang.StringBuffer $r10, $r11, $r12, $r13;
        java.lang.String r2, $r7, $r8, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.configuration.tree.DefaultConfigurationKey $r0;
        org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator $r3;
        java.lang.IllegalArgumentException $r9, $r15;
        org.apache.commons.configuration.tree.ConfigurationNode r5, $r6;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r1;
        org.apache.commons.configuration.tree.NodeAddData $r4;

        r1 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r5 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.commons.configuration.tree.DefaultConfigurationKey;

        specialinvoke $r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey: void <init>(org.apache.commons.configuration.tree.DefaultExpressionEngine,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke $r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey: org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator iterator()>();

        $z0 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key for add operation must be defined!");

        throw $r15;

     label1:
        $r4 = new org.apache.commons.configuration.tree.NodeAddData;

        specialinvoke $r4.<org.apache.commons.configuration.tree.NodeAddData: void <init>()>();

        $r6 = virtualinvoke r1.<org.apache.commons.configuration.tree.DefaultExpressionEngine: org.apache.commons.configuration.tree.ConfigurationNode findLastPathNode(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,org.apache.commons.configuration.tree.ConfigurationNode)>($r3, r5);

        virtualinvoke $r4.<org.apache.commons.configuration.tree.NodeAddData: void setParent(org.apache.commons.configuration.tree.ConfigurationNode)>($r6);

     label2:
        $z1 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $z3 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean isPropertyKey()>();

        if $z3 != 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid key for add operation: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (Attribute key in the middle.)");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label3:
        $r8 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.String currentKey()>();

        virtualinvoke $r4.<org.apache.commons.configuration.tree.NodeAddData: void addPathNode(java.lang.String)>($r8);

        virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.Object next()>();

        goto label2;

     label4:
        $r7 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.String currentKey()>();

        virtualinvoke $r4.<org.apache.commons.configuration.tree.NodeAddData: void setNewNodeName(java.lang.String)>($r7);

        $z2 = virtualinvoke $r3.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean isPropertyKey()>();

        if $z2 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        virtualinvoke $r4.<org.apache.commons.configuration.tree.NodeAddData: void setAttribute(boolean)>($z4);

        return $r4;
    }

    protected void findNodesForKey(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator, org.apache.commons.configuration.tree.ConfigurationNode, java.util.Collection)
    {
        java.util.Collection r5;
        org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator r0;
        org.apache.commons.configuration.tree.ConfigurationNode r3;
        java.util.List $r4, $r6;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r0 := @parameter0: org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator;

        r3 := @parameter1: org.apache.commons.configuration.tree.ConfigurationNode;

        r5 := @parameter2: java.util.Collection;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.String nextKey(boolean)>(0);

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean isPropertyKey()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r3.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>($r1);

        specialinvoke r2.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void processSubNodes(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,java.util.List,java.util.Collection)>(r0, $r6, r5);

     label2:
        $z2 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean isAttribute()>();

        if $z2 == 0 goto label3;

        $r4 = interfaceinvoke r3.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes(java.lang.String)>($r1);

        specialinvoke r2.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void processSubNodes(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,java.util.List,java.util.Collection)>(r0, $r4, r5);

     label3:
        return;
    }

    protected org.apache.commons.configuration.tree.ConfigurationNode findLastPathNode(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator, org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator r0;
        java.lang.IllegalArgumentException $r8;
        org.apache.commons.configuration.tree.ConfigurationNode r2, $r6, $r7;
        java.util.List $r4;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r3;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r0 := @parameter0: org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator;

        r2 := @parameter1: org.apache.commons.configuration.tree.ConfigurationNode;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.String nextKey(boolean)>(0);

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean isPropertyKey()>();

        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid path for add operation: Attribute key in the middle!");

        throw $r8;

     label1:
        $z2 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasIndex()>();

        if $z2 == 0 goto label2;

        $i2 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: int getIndex()>();

        goto label3;

     label2:
        $i0 = interfaceinvoke r2.<org.apache.commons.configuration.tree.ConfigurationNode: int getChildrenCount(java.lang.String)>($r1);

        $i2 = $i0 - 1;

     label3:
        if $i2 < 0 goto label4;

        $i1 = interfaceinvoke r2.<org.apache.commons.configuration.tree.ConfigurationNode: int getChildrenCount(java.lang.String)>($r1);

        if $i2 < $i1 goto label5;

     label4:
        return r2;

     label5:
        $r4 = interfaceinvoke r2.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>($r1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r7 = virtualinvoke r3.<org.apache.commons.configuration.tree.DefaultExpressionEngine: org.apache.commons.configuration.tree.ConfigurationNode findLastPathNode(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,org.apache.commons.configuration.tree.ConfigurationNode)>(r0, $r6);

        return $r7;

     label6:
        return r2;
    }

    private void processSubNodes(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator, java.util.List, java.util.Collection)
    {
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.util.Collection r7;
        org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator r0, $r5, $r10;
        org.apache.commons.configuration.tree.ConfigurationNode $r8, $r12;
        java.util.List r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine r3;
        java.lang.Object $r4, $r6, $r9, $r11;

        r3 := @this: org.apache.commons.configuration.tree.DefaultExpressionEngine;

        r0 := @parameter0: org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator;

        r1 := @parameter1: java.util.List;

        r7 := @parameter2: java.util.Collection;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: boolean hasIndex()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: int getIndex()>();

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: int getIndex()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label3;

        $r9 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.Object clone()>();

        $r10 = (org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator) $r9;

        $i3 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: int getIndex()>();

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r12 = (org.apache.commons.configuration.tree.ConfigurationNode) $r11;

        virtualinvoke r3.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void findNodesForKey(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,org.apache.commons.configuration.tree.ConfigurationNode,java.util.Collection)>($r10, $r12, r7);

        goto label3;

     label1:
        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator: java.lang.Object clone()>();

        $r5 = (org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator) $r4;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6;

        virtualinvoke r3.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void findNodesForKey(org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator,org.apache.commons.configuration.tree.ConfigurationNode,java.util.Collection)>($r5, $r8, r7);

        goto label2;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_INDEX_END> = ")";

        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_INDEX_START> = "(";

        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_ATTRIBUTE_END> = "]";

        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_ATTRIBUTE_START> = "[@";

        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_ESCAPED_DELIMITER> = "..";

        <org.apache.commons.configuration.tree.DefaultExpressionEngine: java.lang.String DEFAULT_PROPERTY_DELIMITER> = ".";

        return;
    }
}
