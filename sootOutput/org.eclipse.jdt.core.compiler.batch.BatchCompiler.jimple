public final class org.eclipse.jdt.core.compiler.batch.BatchCompiler extends java.lang.Object
{

    public static boolean compile(java.lang.String, java.io.PrintWriter, java.io.PrintWriter, org.eclipse.jdt.core.compiler.CompilationProgress)
    {
        java.io.PrintWriter r2, r3;
        org.eclipse.jdt.core.compiler.CompilationProgress r4;
        java.lang.String[] $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: org.eclipse.jdt.core.compiler.CompilationProgress;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.batch.Main: java.lang.String[] tokenize(java.lang.String)>(r0);

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.batch.Main: boolean compile(java.lang.String[],java.io.PrintWriter,java.io.PrintWriter,org.eclipse.jdt.core.compiler.CompilationProgress)>($r1, r2, r3, r4);

        return $z0;
    }

    public static boolean compile(java.lang.String[], java.io.PrintWriter, java.io.PrintWriter, org.eclipse.jdt.core.compiler.CompilationProgress)
    {
        java.io.PrintWriter r1, r2;
        org.eclipse.jdt.core.compiler.CompilationProgress r3;
        java.lang.String[] r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: org.eclipse.jdt.core.compiler.CompilationProgress;

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.batch.Main: boolean compile(java.lang.String[],java.io.PrintWriter,java.io.PrintWriter,org.eclipse.jdt.core.compiler.CompilationProgress)>(r0, r1, r2, r3);

        return $z0;
    }

    private void <init>()
    {
        org.eclipse.jdt.core.compiler.batch.BatchCompiler r0;

        r0 := @this: org.eclipse.jdt.core.compiler.batch.BatchCompiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
