public class org.apache.lucene.util.automaton.CompiledAutomaton extends java.lang.Object
{
    public final org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type;
    public final org.apache.lucene.util.BytesRef term;
    public final org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton;
    public final org.apache.lucene.util.automaton.Transition[][] sortedTransitions;
    public final org.apache.lucene.util.BytesRef commonSuffixRef;
    public final java.lang.Boolean finite;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.automaton.Automaton)
    {
        org.apache.lucene.util.automaton.Automaton r1;
        org.apache.lucene.util.automaton.CompiledAutomaton r0;

        r0 := @this: org.apache.lucene.util.automaton.CompiledAutomaton;

        r1 := @parameter0: org.apache.lucene.util.automaton.Automaton;

        specialinvoke r0.<org.apache.lucene.util.automaton.CompiledAutomaton: void <init>(org.apache.lucene.util.automaton.Automaton,java.lang.Boolean,boolean)>(r1, null, 1);

        return;
    }

    public void <init>(org.apache.lucene.util.automaton.Automaton, java.lang.Boolean, boolean)
    {
        org.apache.lucene.util.automaton.Transition[][] $r9, $r17, $r20, $r24, $r26;
        org.apache.lucene.util.automaton.UTF32ToUTF8 $r3;
        org.apache.lucene.util.automaton.CompiledAutomaton r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.util.automaton.Automaton r4, $r5, $r12, $r13, $r14, $r22;
        org.apache.lucene.util.BytesRef $r7, $r16, $r19;
        org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE $r1, $r15, $r18, $r23, $r25;
        int $i0;
        java.lang.Boolean r2, $r6, $r10;
        java.lang.String $r11, $r21, r27, r28;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r8;

        r0 := @this: org.apache.lucene.util.automaton.CompiledAutomaton;

        r4 := @parameter0: org.apache.lucene.util.automaton.Automaton;

        r2 := @parameter1: java.lang.Boolean;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label07;

        $z3 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: boolean isEmpty(org.apache.lucene.util.automaton.Automaton)>(r4);

        if $z3 == 0 goto label01;

        $r25 = <org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE NONE>;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type> = $r25;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = null;

        $r26 = (org.apache.lucene.util.automaton.Transition[][]) null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions> = $r26;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = null;

        return;

     label01:
        $z4 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: boolean isTotal(org.apache.lucene.util.automaton.Automaton)>(r4);

        if $z4 == 0 goto label02;

        $r23 = <org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE ALL>;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type> = $r23;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = null;

        $r24 = (org.apache.lucene.util.automaton.Transition[][]) null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions> = $r24;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = null;

        return;

     label02:
        $r11 = virtualinvoke r4.<org.apache.lucene.util.automaton.Automaton: java.lang.String getSingleton()>();

        if $r11 != null goto label04;

        $r21 = staticinvoke <org.apache.lucene.util.automaton.SpecialOperations: java.lang.String getCommonPrefix(org.apache.lucene.util.automaton.Automaton)>(r4);

        r27 = $r21;

        $i0 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i0 <= 0 goto label03;

        $r22 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeString(java.lang.String)>($r21);

        $z6 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: boolean sameLanguage(org.apache.lucene.util.automaton.Automaton,org.apache.lucene.util.automaton.Automaton)>(r4, $r22);

        if $z6 == 0 goto label03;

        r28 = $r21;

        goto label05;

     label03:
        r28 = null;

        goto label05;

     label04:
        r27 = null;

        r28 = virtualinvoke r4.<org.apache.lucene.util.automaton.Automaton: java.lang.String getSingleton()>();

     label05:
        if r28 == null goto label06;

        $r18 = <org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE SINGLE>;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type> = $r18;

        $r19 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r19.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r28);

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term> = $r19;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = null;

        $r20 = (org.apache.lucene.util.automaton.Transition[][]) null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions> = $r20;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = null;

        return;

     label06:
        $r12 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeString(java.lang.String)>(r27);

        $r13 = staticinvoke <org.apache.lucene.util.automaton.BasicAutomata: org.apache.lucene.util.automaton.Automaton makeAnyString()>();

        $r14 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: org.apache.lucene.util.automaton.Automaton concatenate(org.apache.lucene.util.automaton.Automaton,org.apache.lucene.util.automaton.Automaton)>($r12, $r13);

        $z5 = staticinvoke <org.apache.lucene.util.automaton.BasicOperations: boolean sameLanguage(org.apache.lucene.util.automaton.Automaton,org.apache.lucene.util.automaton.Automaton)>(r4, $r14);

        if $z5 == 0 goto label07;

        $r15 = <org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE PREFIX>;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type> = $r15;

        $r16 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r16.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r27);

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term> = $r16;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = null;

        $r17 = (org.apache.lucene.util.automaton.Transition[][]) null;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions> = $r17;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = null;

        return;

     label07:
        $r1 = <org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE NORMAL>;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type> = $r1;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term> = null;

        if r2 != null goto label08;

        $z2 = staticinvoke <org.apache.lucene.util.automaton.SpecialOperations: boolean isFinite(org.apache.lucene.util.automaton.Automaton)>(r4);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = $r10;

        goto label09;

     label08:
        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite> = r2;

     label09:
        $r3 = new org.apache.lucene.util.automaton.UTF32ToUTF8;

        specialinvoke $r3.<org.apache.lucene.util.automaton.UTF32ToUTF8: void <init>()>();

        $r5 = virtualinvoke $r3.<org.apache.lucene.util.automaton.UTF32ToUTF8: org.apache.lucene.util.automaton.Automaton convert(org.apache.lucene.util.automaton.Automaton)>(r4);

        $r6 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: java.lang.Boolean finite>;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label10;

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = null;

        goto label11;

     label10:
        $r7 = staticinvoke <org.apache.lucene.util.automaton.SpecialOperations: org.apache.lucene.util.BytesRef getCommonSuffixBytesRef(org.apache.lucene.util.automaton.Automaton)>($r5);

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef> = $r7;

     label11:
        $r8 = new org.apache.lucene.util.automaton.ByteRunAutomaton;

        specialinvoke $r8.<org.apache.lucene.util.automaton.ByteRunAutomaton: void <init>(org.apache.lucene.util.automaton.Automaton,boolean)>($r5, 1);

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton> = $r8;

        $r9 = virtualinvoke $r5.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.Transition[][] getSortedTransitions()>();

        r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions> = $r9;

        return;
    }

    private org.apache.lucene.util.BytesRef addTail(int, org.apache.lucene.util.BytesRef, int, int)
    {
        org.apache.lucene.util.automaton.Transition[][] $r1, $r17;
        byte[] $r3, $r4, $r6, $r7;
        byte $b4, $b9;
        org.apache.lucene.util.automaton.Transition[] r16, $r18;
        org.apache.lucene.util.automaton.CompiledAutomaton r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.BytesRef r2;
        java.lang.AssertionError $r10, $r12, $r13;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, $i21;
        org.apache.lucene.util.automaton.Transition $r9, r14, r15;
        org.apache.lucene.util.automaton.State $r5, $r8;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r11;

        r0 := @this: org.apache.lucene.util.automaton.CompiledAutomaton;

        i14 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        i15 := @parameter2: int;

        i0 := @parameter3: int;

        r15 = null;

        $r1 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions>;

        r16 = $r1[i14];

        i16 = lengthof r16;

        i17 = 0;

     label01:
        if i17 >= i16 goto label03;

        r14 = r16[i17];

        $i13 = r14.<org.apache.lucene.util.automaton.Transition: int min>;

        if $i13 >= i0 goto label02;

        r15 = r14;

     label02:
        i17 = i17 + 1;

        goto label01;

     label03:
        $z0 = <org.apache.lucene.util.automaton.CompiledAutomaton: boolean $assertionsDisabled>;

        if $z0 != 0 goto label04;

        if r15 != null goto label04;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label04:
        $i2 = r15.<org.apache.lucene.util.automaton.Transition: int max>;

        $i1 = i0 - 1;

        if $i2 <= $i1 goto label05;

        i18 = i0 - 1;

        goto label06;

     label05:
        i18 = r15.<org.apache.lucene.util.automaton.Transition: int max>;

     label06:
        $r3 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i3 = lengthof $r3;

        if i15 < $i3 goto label07;

        $i12 = 1 + i15;

        virtualinvoke r2.<org.apache.lucene.util.BytesRef: void grow(int)>($i12);

     label07:
        $r4 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b4 = (byte) i18;

        $r4[i15] = $b4;

        $r5 = r15.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State 'to'>;

        i19 = virtualinvoke $r5.<org.apache.lucene.util.automaton.State: int getNumber()>();

        i20 = i15 + 1;

     label08:
        $r17 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions>;

        $r18 = $r17[i19];

        $i21 = lengthof $r18;

        if $i21 != 0 goto label10;

        $z2 = <org.apache.lucene.util.automaton.CompiledAutomaton: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        $r11 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z3 = virtualinvoke $r11.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>(i19);

        if $z3 != 0 goto label09;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label09:
        r2.<org.apache.lucene.util.BytesRef: int length> = i20;

        return r2;

     label10:
        $z1 = <org.apache.lucene.util.automaton.CompiledAutomaton: boolean $assertionsDisabled>;

        if $z1 != 0 goto label11;

        $i11 = lengthof $r18;

        if $i11 != 0 goto label11;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label11:
        $i5 = lengthof $r18;

        $i6 = $i5 - 1;

        $r9 = $r18[$i6];

        $r6 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i7 = lengthof $r6;

        if i20 < $i7 goto label12;

        $i10 = 1 + i20;

        virtualinvoke r2.<org.apache.lucene.util.BytesRef: void grow(int)>($i10);

     label12:
        $r7 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = $r9.<org.apache.lucene.util.automaton.Transition: int max>;

        $b9 = (byte) $i8;

        $r7[i20] = $b9;

        $r8 = $r9.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State 'to'>;

        i19 = virtualinvoke $r8.<org.apache.lucene.util.automaton.State: int getNumber()>();

        i20 = i20 + 1;

        goto label08;
    }

    public org.apache.lucene.index.TermsEnum getTermsEnum(org.apache.lucene.index.Terms) throws java.io.IOException
    {
        org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE $r1;
        org.apache.lucene.index.SingleTermsEnum $r8;
        int[] $r2;
        org.apache.lucene.index.TermsEnum $r4, $r6, $r9, $r11, $r12;
        int $i0, $i1;
        org.apache.lucene.util.automaton.CompiledAutomaton r0;
        org.apache.lucene.index.Terms r3;
        org.apache.lucene.util.BytesRef $r7, $r10;
        java.lang.RuntimeException $r13;
        org.apache.lucene.search.PrefixTermsEnum $r5;

        r0 := @this: org.apache.lucene.util.automaton.CompiledAutomaton;

        r3 := @parameter0: org.apache.lucene.index.Terms;

        $r2 = <org.apache.lucene.util.automaton.CompiledAutomaton$1: int[] $SwitchMap$org$apache$lucene$util$automaton$CompiledAutomaton$AUTOMATON_TYPE>;

        $r1 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE type>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r12 = <org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum EMPTY>;

        return $r12;

     label2:
        $r11 = virtualinvoke r3.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        return $r11;

     label3:
        $r8 = new org.apache.lucene.index.SingleTermsEnum;

        $r9 = virtualinvoke r3.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r10 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term>;

        specialinvoke $r8.<org.apache.lucene.index.SingleTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,org.apache.lucene.util.BytesRef)>($r9, $r10);

        return $r8;

     label4:
        $r5 = new org.apache.lucene.search.PrefixTermsEnum;

        $r6 = virtualinvoke r3.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r7 = r0.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef term>;

        specialinvoke $r5.<org.apache.lucene.search.PrefixTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,org.apache.lucene.util.BytesRef)>($r6, $r7);

        return $r5;

     label5:
        $r4 = virtualinvoke r3.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum intersect(org.apache.lucene.util.automaton.CompiledAutomaton,org.apache.lucene.util.BytesRef)>(r0, null);

        return $r4;

     label6:
        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("unhandled case");

        throw $r13;
    }

    public org.apache.lucene.util.BytesRef floor(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        byte[] $r5, $r7, $r8, $r16, $r21, $r22;
        org.apache.lucene.util.automaton.Transition[][] $r10;
        java.lang.Integer $r9, $r15;
        byte $b4, $b9, $b20, $b22;
        org.apache.lucene.util.automaton.Transition[] $r17;
        java.lang.AssertionError $r25;
        java.util.ArrayList $r24;
        short $s10, s27, $s29, $s40;
        org.apache.lucene.util.automaton.CompiledAutomaton r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.util.BytesRef r0, r3, $r12;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i23, $i24, i25, i26, i28, $i30, $i32, $i34, $i36, $i37, $i39, $i41;
        org.apache.lucene.util.automaton.Transition $r11;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r2, $r6, $r13, $r18, $r20, $r23;
        java.lang.Object $r14;

        r1 := @this: org.apache.lucene.util.automaton.CompiledAutomaton;

        r3 := @parameter0: org.apache.lucene.util.BytesRef;

        r0 := @parameter1: org.apache.lucene.util.BytesRef;

        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

        $r2 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.util.automaton.ByteRunAutomaton: int getInitialState()>();

        i25 = $i0;

        $i1 = r3.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 != 0 goto label02;

        $r23 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z4 = virtualinvoke $r23.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>($i0);

        if $z4 == 0 goto label01;

        r0.<org.apache.lucene.util.BytesRef: int length> = 0;

        return r0;

     label01:
        return null;

     label02:
        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        i26 = 0;

     label03:
        $r5 = r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i2 = r3.<org.apache.lucene.util.BytesRef: int offset>;

        $i3 = $i2 + i26;

        $b4 = $r5[$i3];

        $s29 = (short) $b4;

        $s10 = $s29 & 255;

        s27 = $s10;

        $r6 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $i30 = (int) $s10;

        $i5 = virtualinvoke $r6.<org.apache.lucene.util.automaton.ByteRunAutomaton: int step(int,int)>(i25, $i30);

        i28 = $i5;

        $i6 = r3.<org.apache.lucene.util.BytesRef: int length>;

        $i7 = $i6 - 1;

        if i26 != $i7 goto label06;

        $i32 = (int) -1;

        if $i5 == $i32 goto label05;

        $r20 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z3 = virtualinvoke $r20.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>($i5);

        if $z3 == 0 goto label05;

        $r21 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i21 = lengthof $r21;

        if i26 < $i21 goto label04;

        $i24 = 1 + i26;

        virtualinvoke r0.<org.apache.lucene.util.BytesRef: void grow(int)>($i24);

     label04:
        $r22 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b22 = (byte) $s10;

        $r22[i26] = $b22;

        $i23 = r3.<org.apache.lucene.util.BytesRef: int length>;

        r0.<org.apache.lucene.util.BytesRef: int length> = $i23;

        return r0;

     label05:
        $i34 = (int) -1;

        i28 = $i34;

     label06:
        $i36 = (int) -1;

        if i28 != $i36 goto label13;

     label07:
        $r10 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.Transition[][] sortedTransitions>;

        $r17 = $r10[i25];

        $i12 = lengthof $r17;

        if $i12 != 0 goto label09;

        $z1 = <org.apache.lucene.util.automaton.CompiledAutomaton: boolean $assertionsDisabled>;

        if $z1 != 0 goto label08;

        $r18 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z2 = virtualinvoke $r18.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>(i25);

        if $z2 != 0 goto label08;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label08:
        r0.<org.apache.lucene.util.BytesRef: int length> = i26;

        return r0;

     label09:
        $i37 = (int) s27;

        $i14 = $i37 - 1;

        $r11 = $r17[0];

        $i13 = $r11.<org.apache.lucene.util.automaton.Transition: int min>;

        if $i14 >= $i13 goto label12;

        $r13 = r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        $z0 = virtualinvoke $r13.<org.apache.lucene.util.automaton.ByteRunAutomaton: boolean isAccept(int)>(i25);

        if $z0 == 0 goto label10;

        r0.<org.apache.lucene.util.BytesRef: int length> = i26;

        return r0;

     label10:
        $i15 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i15 != 0 goto label11;

        return null;

     label11:
        $i16 = interfaceinvoke $r24.<java.util.List: int size()>();

        $i17 = $i16 - 1;

        $r14 = interfaceinvoke $r24.<java.util.List: java.lang.Object remove(int)>($i17);

        $r15 = (java.lang.Integer) $r14;

        i25 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $i39 = (int) -1;

        i26 = i26 + $i39;

        $r16 = r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i18 = r3.<org.apache.lucene.util.BytesRef: int offset>;

        $i19 = $i18 + i26;

        $b20 = $r16[$i19];

        $s40 = (short) $b20;

        s27 = $s40 & 255;

        goto label07;

     label12:
        $i41 = (int) s27;

        $r12 = specialinvoke r1.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef addTail(int,org.apache.lucene.util.BytesRef,int,int)>(i25, r0, i26, $i41);

        return $r12;

     label13:
        $r7 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = lengthof $r7;

        if i26 < $i8 goto label14;

        $i11 = 1 + i26;

        virtualinvoke r0.<org.apache.lucene.util.BytesRef: void grow(int)>($i11);

     label14:
        $r8 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b9 = (byte) $s10;

        $r8[i26] = $b9;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i25);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r9);

        i25 = i28;

        i26 = i26 + 1;

        goto label03;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/automaton/CompiledAutomaton;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.automaton.CompiledAutomaton: boolean $assertionsDisabled> = $z1;

        return;
    }
}
