class org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.function.type4.Operator
{

    void <init>()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)
    {
        org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy r6;
        org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext r0;
        java.util.Stack $r1;
        java.util.ArrayList $r4;
        java.util.List $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.Number $r3;

        r6 := @this: org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>();

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (java.lang.Number) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke $r1.<java.util.Stack: int size()>();

        $r4 = new java.util.ArrayList;

        $i2 = $i1 - $i0;

        $r5 = virtualinvoke $r1.<java.util.Stack: java.util.List subList(int,int)>($i2, $i1);

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        virtualinvoke $r1.<java.util.Stack: boolean addAll(java.util.Collection)>($r4);

     label1:
        return;
    }
}
