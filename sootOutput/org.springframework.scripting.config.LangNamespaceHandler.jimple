public class org.springframework.scripting.config.LangNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport
{

    public void <init>()
    {
        org.springframework.scripting.config.LangNamespaceHandler r0;

        r0 := @this: org.springframework.scripting.config.LangNamespaceHandler;

        specialinvoke r0.<org.springframework.beans.factory.xml.NamespaceHandlerSupport: void <init>()>();

        return;
    }

    public void init()
    {
        org.springframework.scripting.config.LangNamespaceHandler r0;
        org.springframework.scripting.config.ScriptingDefaultsParser $r1;

        r0 := @this: org.springframework.scripting.config.LangNamespaceHandler;

        specialinvoke r0.<org.springframework.scripting.config.LangNamespaceHandler: void registerScriptBeanDefinitionParser(java.lang.String,java.lang.String)>("groovy", "org.springframework.scripting.groovy.GroovyScriptFactory");

        specialinvoke r0.<org.springframework.scripting.config.LangNamespaceHandler: void registerScriptBeanDefinitionParser(java.lang.String,java.lang.String)>("jruby", "org.springframework.scripting.jruby.JRubyScriptFactory");

        specialinvoke r0.<org.springframework.scripting.config.LangNamespaceHandler: void registerScriptBeanDefinitionParser(java.lang.String,java.lang.String)>("bsh", "org.springframework.scripting.bsh.BshScriptFactory");

        $r1 = new org.springframework.scripting.config.ScriptingDefaultsParser;

        specialinvoke $r1.<org.springframework.scripting.config.ScriptingDefaultsParser: void <init>()>();

        virtualinvoke r0.<org.springframework.scripting.config.LangNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>("defaults", $r1);

        return;
    }

    private void registerScriptBeanDefinitionParser(java.lang.String, java.lang.String)
    {
        org.springframework.scripting.config.ScriptBeanDefinitionParser $r2;
        org.springframework.scripting.config.LangNamespaceHandler r0;
        java.lang.String r1, r3;

        r0 := @this: org.springframework.scripting.config.LangNamespaceHandler;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.springframework.scripting.config.ScriptBeanDefinitionParser;

        specialinvoke $r2.<org.springframework.scripting.config.ScriptBeanDefinitionParser: void <init>(java.lang.String)>(r3);

        virtualinvoke r0.<org.springframework.scripting.config.LangNamespaceHandler: void registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)>(r1, $r2);

        return;
    }
}
