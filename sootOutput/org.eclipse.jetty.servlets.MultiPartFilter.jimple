public class org.eclipse.jetty.servlets.MultiPartFilter extends java.lang.Object implements javax.servlet.Filter
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String CONTENT_TYPE_SUFFIX;
    private static final java.lang.String MULTIPART;
    private java.io.File tempdir;
    private boolean _deleteFiles;
    private javax.servlet.ServletContext _context;
    private int _fileOutputBuffer;
    private long _maxFileSize;
    private long _maxRequestSize;
    private int _maxFormKeys;

    public void <init>()
    {
        int $i0;
        org.eclipse.jetty.servlets.MultiPartFilter r0;
        java.lang.Integer $r1;

        r0 := @this: org.eclipse.jetty.servlets.MultiPartFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: int _fileOutputBuffer> = 0;

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxFileSize> = -1L;

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxRequestSize> = -1L;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>("org.eclipse.jetty.server.Request.maxFormKeys", 1000);

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: int _maxFormKeys> = $i0;

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        long $l1, $l2;
        org.eclipse.jetty.servlets.MultiPartFilter r0;
        int $i0, $i3;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        boolean $z0;
        java.io.File $r4;
        javax.servlet.FilterConfig r1;
        javax.servlet.ServletContext $r2, $r10;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jetty.servlets.MultiPartFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.context.tempdir");

        $r4 = (java.io.File) $r3;

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: java.io.File tempdir> = $r4;

        $r5 = "true";

        $r6 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("deleteFiles");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: boolean _deleteFiles> = $z0;

        $r7 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("fileOutputBuffer");

        if $r7 == null goto label1;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: int _fileOutputBuffer> = $i3;

     label1:
        $r8 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("maxFileSize");

        if $r8 == null goto label2;

        $r13 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r13);

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxFileSize> = $l2;

     label2:
        $r9 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("maxRequestSize");

        if $r9 == null goto label3;

        $r12 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxRequestSize> = $l1;

     label3:
        $r10 = interfaceinvoke r1.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: javax.servlet.ServletContext _context> = $r10;

        $r11 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("maxFormKeys");

        if $r11 == null goto label4;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<org.eclipse.jetty.servlets.MultiPartFilter: int _maxFormKeys> = $i0;

     label4:
        return;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        byte[] $r28;
        java.io.BufferedInputStream $r6;
        org.eclipse.jetty.servlets.MultiPartFilter$Wrapper $r56;
        java.util.Map $r10;
        java.util.Set $r11;
        java.lang.StringBuilder $r30, $r32, $r33, $r42, $r44, $r45;
        java.lang.Throwable $r54;
        java.io.ByteArrayOutputStream $r25;
        long $l1, $l2;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.servlets.MultiPartFilter r14;
        java.lang.String $r2, $r5, $r8, $r16, $r27, $r29, $r31, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r43, $r46, $r47;
        java.util.Map$Entry r55;
        org.eclipse.jetty.util.MultiMap $r9;
        java.io.File $r15, $r18, $r24, $r37;
        javax.servlet.FilterChain r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r19;
        javax.servlet.MultipartConfigElement $r13;
        javax.servlet.ServletResponse r4;
        org.eclipse.jetty.util.MultiPartInputStream $r17;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart r23;
        javax.servlet.ServletInputStream $r7;
        java.lang.String[] $r52, $r53;
        int $i0, $i3, $i4;
        javax.servlet.ServletRequest r0;
        java.util.Iterator $r12, $r20;
        javax.servlet.http.Part r22;
        java.lang.Object $r21, $r48, $r49, $r50, $r51;
        java.io.InputStream $r26;

        r14 := @this: org.eclipse.jetty.servlets.MultiPartFilter;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r4 := @parameter1: javax.servlet.ServletResponse;

        r3 := @parameter2: javax.servlet.FilterChain;

        r1 = (javax.servlet.http.HttpServletRequest) r0;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getContentType()>();

        if $r2 == null goto label01;

        $r5 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getContentType()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/form-data");

        if $z0 != 0 goto label02;

     label01:
        interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r4);

        return;

     label02:
        $r6 = new java.io.BufferedInputStream;

        $r7 = interfaceinvoke r0.<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        $r8 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getContentType()>();

        $r9 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r9.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        $r10 = interfaceinvoke r0.<javax.servlet.ServletRequest: java.util.Map getParameterMap()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r48 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r48;

        $r49 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z4 = $r49 instanceof java.lang.String[];

        if $z4 == 0 goto label04;

        $r51 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r52 = (java.lang.String[]) $r49;

        $r53 = (java.lang.String[]) $r52;

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void addValues(java.lang.Object,java.lang.String[])>($r51, $r53);

        goto label05;

     label04:
        $r50 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r50, $r49);

     label05:
        goto label03;

     label06:
        $r13 = new javax.servlet.MultipartConfigElement;

        $r15 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: java.io.File tempdir>;

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getCanonicalPath()>();

        $l2 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxFileSize>;

        $l1 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: long _maxRequestSize>;

        $i0 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: int _fileOutputBuffer>;

        specialinvoke $r13.<javax.servlet.MultipartConfigElement: void <init>(java.lang.String,long,long,int)>($r16, $l2, $l1, $i0);

        $r17 = new org.eclipse.jetty.util.MultiPartInputStream;

        $r18 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: java.io.File tempdir>;

        specialinvoke $r17.<org.eclipse.jetty.util.MultiPartInputStream: void <init>(java.io.InputStream,java.lang.String,javax.servlet.MultipartConfigElement,java.io.File)>($r6, $r8, $r13, $r18);

        $z2 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: boolean _deleteFiles>;

        virtualinvoke $r17.<org.eclipse.jetty.util.MultiPartInputStream: void setDeleteOnExit(boolean)>($z2);

        interfaceinvoke r0.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.servlet.MultiPartFile.multiPartInputStream", $r17);

     label07:
        $r19 = virtualinvoke $r17.<org.eclipse.jetty.util.MultiPartInputStream: java.util.Collection getParts()>();

        if $r19 == null goto label11;

        $r20 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $i3 = virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: int size()>();

        $i4 = r14.<org.eclipse.jetty.servlets.MultiPartFilter: int _maxFormKeys>;

        if $i3 >= $i4 goto label11;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (javax.servlet.http.Part) $r21;

        r23 = (org.eclipse.jetty.util.MultiPartInputStream$MultiPart) r22;

        $r24 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File getFile()>();

        if $r24 == null goto label09;

        $r36 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getName()>();

        $r37 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.io.File getFile()>();

        interfaceinvoke r0.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>($r36, $r37);

        $r38 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentDispositionFilename()>();

        if $r38 == null goto label10;

        $r39 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getName()>();

        $r40 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentDispositionFilename()>();

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r39, $r40);

        $r41 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        if $r41 == null goto label10;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getName()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".org.eclipse.jetty.servlet.contentType");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = virtualinvoke r23.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: java.lang.String getContentType()>();

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r46, $r47);

        goto label10;

     label09:
        $r25 = new java.io.ByteArrayOutputStream;

        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>()>();

        $r26 = interfaceinvoke r22.<javax.servlet.http.Part: java.io.InputStream getInputStream()>();

        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r26, $r25);

        $r27 = interfaceinvoke r22.<javax.servlet.http.Part: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = interfaceinvoke r22.<javax.servlet.http.Part: java.lang.String getContentType()>();

        if $r29 == null goto label10;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = interfaceinvoke r22.<javax.servlet.http.Part: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".org.eclipse.jetty.servlet.contentType");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = interfaceinvoke r22.<javax.servlet.http.Part: java.lang.String getContentType()>();

        virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r34, $r35);

     label10:
        goto label08;

     label11:
        $r56 = new org.eclipse.jetty.servlets.MultiPartFilter$Wrapper;

        specialinvoke $r56.<org.eclipse.jetty.servlets.MultiPartFilter$Wrapper: void <init>(javax.servlet.http.HttpServletRequest,org.eclipse.jetty.util.MultiMap)>(r1, $r9);

        interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r56, r4);

     label12:
        specialinvoke r14.<org.eclipse.jetty.servlets.MultiPartFilter: void deleteFiles(javax.servlet.ServletRequest)>(r0);

        goto label15;

     label13:
        $r54 := @caughtexception;

     label14:
        specialinvoke r14.<org.eclipse.jetty.servlets.MultiPartFilter: void deleteFiles(javax.servlet.ServletRequest)>(r0);

        throw $r54;

     label15:
        return;

        catch java.lang.Throwable from label07 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void deleteFiles(javax.servlet.ServletRequest)
    {
        org.eclipse.jetty.util.MultiPartInputStream r3;
        javax.servlet.ServletRequest r1;
        org.eclipse.jetty.servlets.MultiPartFilter r0;
        java.lang.Object $r2;
        javax.servlet.ServletContext $r5;
        java.lang.Exception $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.MultiPartFilter;

        r1 := @parameter0: javax.servlet.ServletRequest;

        $z0 = r0.<org.eclipse.jetty.servlets.MultiPartFilter: boolean _deleteFiles>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = interfaceinvoke r1.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.servlet.MultiPartFile.multiPartInputStream");

        r3 = (org.eclipse.jetty.util.MultiPartInputStream) $r2;

        if r3 == null goto label5;

     label2:
        virtualinvoke r3.<org.eclipse.jetty.util.MultiPartInputStream: void deleteParts()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = r0.<org.eclipse.jetty.servlets.MultiPartFilter: javax.servlet.ServletContext _context>;

        interfaceinvoke $r5.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>("Error deleting multipart tmp files", $r4);

     label5:
        interfaceinvoke r1.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>("org.eclipse.jetty.servlet.MultiPartFile.multiPartInputStream");

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void destroy()
    {
        org.eclipse.jetty.servlets.MultiPartFilter r0;

        r0 := @this: org.eclipse.jetty.servlets.MultiPartFilter;

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.servlets.MultiPartFilter: java.lang.String MULTIPART> = "org.eclipse.jetty.servlet.MultiPartFile.multiPartInputStream";

        <org.eclipse.jetty.servlets.MultiPartFilter: java.lang.String CONTENT_TYPE_SUFFIX> = ".org.eclipse.jetty.servlet.contentType";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlets/MultiPartFilter;");

        <org.eclipse.jetty.servlets.MultiPartFilter: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
