class groovyjarjarantlr.CharLiteralElement extends groovyjarjarantlr.GrammarAtom
{

    public void <init>(groovyjarjarantlr.LexerGrammar, groovyjarjarantlr.Token, boolean, int)
    {
        groovyjarjarantlr.LexerGrammar r1;
        groovyjarjarantlr.collections.impl.BitSet $r4;
        groovyjarjarantlr.CharLiteralElement r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3;
        groovyjarjarantlr.Token r2;
        boolean z0;

        r0 := @this: groovyjarjarantlr.CharLiteralElement;

        r1 := @parameter0: groovyjarjarantlr.LexerGrammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        z0 := @parameter2: boolean;

        i3 := @parameter3: int;

        specialinvoke r0.<groovyjarjarantlr.GrammarAtom: void <init>(groovyjarjarantlr.Grammar,groovyjarjarantlr.Token,int)>(r1, r2, 1);

        $r3 = virtualinvoke r2.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $i0 = staticinvoke <groovyjarjarantlr.ANTLRLexer: int tokenTypeForCharLiteral(java.lang.String)>($r3);

        r0.<groovyjarjarantlr.CharLiteralElement: int tokenType> = $i0;

        $r4 = r1.<groovyjarjarantlr.LexerGrammar: groovyjarjarantlr.collections.impl.BitSet charVocabulary>;

        $i1 = r0.<groovyjarjarantlr.CharLiteralElement: int tokenType>;

        virtualinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: void add(int)>($i1);

        $i2 = virtualinvoke r2.<groovyjarjarantlr.Token: int getLine()>();

        r0.<groovyjarjarantlr.CharLiteralElement: int line> = $i2;

        r0.<groovyjarjarantlr.CharLiteralElement: boolean not> = z0;

        r0.<groovyjarjarantlr.CharLiteralElement: int autoGenType> = i3;

        return;
    }

    public void generate()
    {
        groovyjarjarantlr.CharLiteralElement r0;
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CodeGenerator $r2;

        r0 := @this: groovyjarjarantlr.CharLiteralElement;

        $r1 = r0.<groovyjarjarantlr.CharLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.CodeGenerator generator>;

        virtualinvoke $r2.<groovyjarjarantlr.CodeGenerator: void gen(groovyjarjarantlr.CharLiteralElement)>(r0);

        return;
    }

    public groovyjarjarantlr.Lookahead look(int)
    {
        groovyjarjarantlr.Lookahead $r3;
        int i0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r2;
        groovyjarjarantlr.CharLiteralElement r0;
        groovyjarjarantlr.Grammar $r1;

        r0 := @this: groovyjarjarantlr.CharLiteralElement;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.CharLiteralElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r3 = interfaceinvoke $r2.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.CharLiteralElement)>(i0, r0);

        return $r3;
    }
}
