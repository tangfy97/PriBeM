public class org.apache.commons.compress.archivers.dump.DumpArchiveSummary extends java.lang.Object
{
    private long dumpDate;
    private long previousDumpDate;
    private int volume;
    private java.lang.String label;
    private int level;
    private java.lang.String filesys;
    private java.lang.String devname;
    private java.lang.String hostname;
    private int flags;
    private int firstrec;
    private int ntrec;

    void <init>(byte[], org.apache.commons.compress.archivers.zip.ZipEncoding) throws java.io.IOException
    {
        byte[] r1;
        long $l1, $l2, $l4, $l5;
        int $i0, $i3, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.commons.compress.archivers.zip.ZipEncoding r2;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.apache.commons.compress.archivers.zip.ZipEncoding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 4);

        $l1 = (long) $i0;

        $l2 = 1000L * $l1;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate> = $l2;

        $i3 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 8);

        $l4 = (long) $i3;

        $l5 = 1000L * $l4;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long previousDumpDate> = $l5;

        $i6 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 12);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int volume> = $i6;

        $r3 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: java.lang.String decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int)>(r2, r1, 676, 16);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String label> = $r4;

        $i7 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 692);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int level> = $i7;

        $r5 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: java.lang.String decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int)>(r2, r1, 696, 64);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String filesys> = $r6;

        $r7 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: java.lang.String decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int)>(r2, r1, 760, 64);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String devname> = $r8;

        $r9 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: java.lang.String decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int)>(r2, r1, 824, 64);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String hostname> = $r10;

        $i8 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 888);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags> = $i8;

        $i9 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 892);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int firstrec> = $i9;

        $i10 = staticinvoke <org.apache.commons.compress.archivers.dump.DumpArchiveUtil: int convert32(byte[],int)>(r1, 896);

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int ntrec> = $i10;

        return;
    }

    public java.util.Date getDumpDate()
    {
        long $l0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r1;
        java.util.Date $r0;

        r1 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r0 = new java.util.Date;

        $l0 = r1.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate>;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public void setDumpDate(java.util.Date)
    {
        long $l0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate> = $l0;

        return;
    }

    public java.util.Date getPreviousDumpDate()
    {
        long $l0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r1;
        java.util.Date $r0;

        r1 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r0 = new java.util.Date;

        $l0 = r1.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long previousDumpDate>;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public void setPreviousDumpDate(java.util.Date)
    {
        long $l0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long previousDumpDate> = $l0;

        return;
    }

    public int getVolume()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int volume>;

        return $i0;
    }

    public void setVolume(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int volume> = i0;

        return;
    }

    public int getLevel()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int level>;

        return $i0;
    }

    public void setLevel(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int level> = i0;

        return;
    }

    public java.lang.String getLabel()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String label>;

        return $r1;
    }

    public void setLabel(java.lang.String)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String label> = r1;

        return;
    }

    public java.lang.String getFilesystem()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String filesys>;

        return $r1;
    }

    public void setFilesystem(java.lang.String)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String filesys> = r1;

        return;
    }

    public java.lang.String getDevname()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String devname>;

        return $r1;
    }

    public void setDevname(java.lang.String)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String devname> = r1;

        return;
    }

    public java.lang.String getHostname()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String hostname>;

        return $r1;
    }

    public void setHostname(java.lang.String)
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String hostname> = r1;

        return;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        return $i0;
    }

    public void setFlags(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags> = i0;

        return;
    }

    public int getFirstRecord()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int firstrec>;

        return $i0;
    }

    public void setFirstRecord(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int firstrec> = i0;

        return;
    }

    public int getNTRec()
    {
        int $i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int ntrec>;

        return $i0;
    }

    public void setNTRec(int)
    {
        int i0;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i0 := @parameter0: int;

        r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int ntrec> = i0;

        return;
    }

    public boolean isNewHeader()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isNewInode()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        $i1 = $i0 & 2;

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCompressed()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        $i1 = $i0 & 128;

        if $i1 != 128 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMetaDataOnly()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        $i1 = $i0 & 256;

        if $i1 != 256 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isExtendedAttributes()
    {
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;
        int $i0, $i1, $i3, $i5;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        $i0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: int flags>;

        $i3 = (int) 32768;

        $i1 = $i0 & $i3;

        $i5 = (int) 32768;

        if $i1 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        long $l0, $l1, $l2, $l3;
        int $i4, $i5, $i6, $i7, i8, i9;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        i8 = 17;

        $r1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String label>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String label>;

        i8 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

     label1:
        $l2 = (long) i8;

        $l0 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate>;

        $l1 = 31L * $l0;

        $l3 = $l2 + $l1;

        i9 = (int) $l3;

        $r2 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String hostname>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String hostname>;

        $i6 = virtualinvoke $r5.<java.lang.String: int hashCode()>();

        $i7 = 31 * $i6;

        i9 = $i7 + 17;

     label2:
        $r3 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String devname>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String devname>;

        $i4 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        $i5 = 31 * $i4;

        i9 = $i5 + 17;

     label3:
        return i9;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1;
        byte $b2;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        org.apache.commons.compress.archivers.dump.DumpArchiveSummary r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.commons.compress.archivers.dump.DumpArchiveSummary;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        r4 = (org.apache.commons.compress.archivers.dump.DumpArchiveSummary) r1;

        $l1 = r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate>;

        $l0 = r4.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: long dumpDate>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $r5 = virtualinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getHostname()>();

        if $r5 == null goto label5;

        $r6 = virtualinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getHostname()>();

        $r7 = virtualinvoke r4.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getHostname()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label6;

     label5:
        return 0;

     label6:
        $r8 = virtualinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getDevname()>();

        if $r8 == null goto label7;

        $r9 = virtualinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getDevname()>();

        $r10 = virtualinvoke r4.<org.apache.commons.compress.archivers.dump.DumpArchiveSummary: java.lang.String getDevname()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label8;

     label7:
        return 0;

     label8:
        return 1;
    }
}
