public final class org.apache.commons.compress.archivers.zip.ZipShort extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int BYTE_1_MASK;
    private static final int BYTE_1_SHIFT;
    private final int value;

    public void <init>(int)
    {
        int i0;
        org.apache.commons.compress.archivers.zip.ZipShort r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipShort: int value> = i0;

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        org.apache.commons.compress.archivers.zip.ZipShort r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(byte[],int)>(r1, 0);

        return;
    }

    public void <init>(byte[], int)
    {
        byte[] r1;
        org.apache.commons.compress.archivers.zip.ZipShort r0;
        int i0, $i1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipShort: int getValue(byte[],int)>(r1, i0);

        r0.<org.apache.commons.compress.archivers.zip.ZipShort: int value> = $i1;

        return;
    }

    public byte[] getBytes()
    {
        byte[] r0;
        org.apache.commons.compress.archivers.zip.ZipShort r1;
        byte $b2, $b6;
        int $i0, $i1, $i3, $i4, $i5, $i8;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        r0 = newarray (byte)[2];

        $i0 = r1.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        $i1 = $i0 & 255;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = r1.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        $i8 = (int) 65280;

        $i4 = $i3 & $i8;

        $i5 = $i4 >> 8;

        $b6 = (byte) $i5;

        r0[1] = $b6;

        return r0;
    }

    public int getValue()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipShort r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        return $i0;
    }

    public static byte[] getBytes(int)
    {
        byte[] r0;
        byte $b2, $b5;
        int i0, $i1, $i3, $i4, $i7;

        i0 := @parameter0: int;

        r0 = newarray (byte)[2];

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i7 = (int) 65280;

        $i3 = i0 & $i7;

        $i4 = $i3 >> 8;

        $b5 = (byte) $i4;

        r0[1] = $b5;

        return r0;
    }

    public static int getValue(byte[], int)
    {
        byte[] r0;
        short $s5, $s11;
        byte $b2, $b4;
        int i0, $i1, $i3, i6, i7, $i8, $i10, $i12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 1;

        $b2 = r0[$i1];

        $i8 = (int) $b2;

        $i3 = $i8 << 8;

        $i10 = (int) 65280;

        i6 = $i3 & $i10;

        $b4 = r0[i0];

        $s11 = (short) $b4;

        $s5 = $s11 & 255;

        $i12 = (int) $s5;

        i7 = i6 + $i12;

        return i7;
    }

    public static int getValue(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipShort: int getValue(byte[],int)>(r0, 0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.compress.archivers.zip.ZipShort r1, $r2;
        int $i0, $i1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.ZipShort;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = r1.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        $r2 = (org.apache.commons.compress.archivers.zip.ZipShort) r0;

        $i1 = virtualinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipShort: int getValue()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.compress.archivers.zip.ZipShort r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        $i0 = r0.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        return $i0;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.compress.archivers.zip.ZipShort r0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r3;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.commons.compress.archivers.zip.ZipShort r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r4;

        r2 := @this: org.apache.commons.compress.archivers.zip.ZipShort;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZipShort value: ");

        $i0 = r2.<org.apache.commons.compress.archivers.zip.ZipShort: int value>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.archivers.zip.ZipShort: int BYTE_1_SHIFT> = 8;

        <org.apache.commons.compress.archivers.zip.ZipShort: int BYTE_1_MASK> = 65280;

        <org.apache.commons.compress.archivers.zip.ZipShort: long serialVersionUID> = 1L;

        return;
    }
}
