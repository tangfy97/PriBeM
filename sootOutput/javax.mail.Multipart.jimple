public abstract class javax.mail.Multipart extends java.lang.Object
{
    protected java.util.Vector parts;
    protected java.lang.String contentType;
    protected javax.mail.Part parent;

    protected void <init>()
    {
        javax.mail.Multipart r0;
        java.util.Vector $r1;

        r0 := @this: javax.mail.Multipart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<javax.mail.Multipart: java.util.Vector parts> = $r1;

        r0.<javax.mail.Multipart: java.lang.String contentType> = "multipart/mixed";

        return;
    }

    protected void setMultipartDataSource(javax.mail.MultipartDataSource) throws javax.mail.MessagingException
    {
        javax.mail.Multipart r0;
        javax.mail.BodyPart $r5;
        java.util.Vector $r1, $r4;
        int $i0, i1;
        java.lang.String $r3;
        javax.mail.MultipartDataSource r2;

        r0 := @this: javax.mail.Multipart;

        r2 := @parameter0: javax.mail.MultipartDataSource;

        $r1 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        $r3 = interfaceinvoke r2.<javax.mail.MultipartDataSource: java.lang.String getContentType()>();

        r0.<javax.mail.Multipart: java.lang.String contentType> = $r3;

        $i0 = interfaceinvoke r2.<javax.mail.MultipartDataSource: int getCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        $r5 = interfaceinvoke r2.<javax.mail.MultipartDataSource: javax.mail.BodyPart getBodyPart(int)>(i1);

        virtualinvoke $r4.<java.util.Vector: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getContentType()
    {
        javax.mail.Multipart r0;
        java.lang.String $r1;

        r0 := @this: javax.mail.Multipart;

        $r1 = r0.<javax.mail.Multipart: java.lang.String contentType>;

        return $r1;
    }

    public int getCount() throws javax.mail.MessagingException
    {
        int $i0;
        javax.mail.Multipart r0;
        java.util.Vector $r1;

        r0 := @this: javax.mail.Multipart;

        $r1 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public javax.mail.BodyPart getBodyPart(int) throws javax.mail.MessagingException
    {
        java.util.Vector $r1;
        int i0;
        javax.mail.Multipart r0;
        java.lang.Object $r2;
        javax.mail.BodyPart $r3;

        r0 := @this: javax.mail.Multipart;

        i0 := @parameter0: int;

        $r1 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(i0);

        $r3 = (javax.mail.BodyPart) $r2;

        return $r3;
    }

    public boolean removeBodyPart(javax.mail.BodyPart) throws javax.mail.MessagingException
    {
        java.util.Vector $r2;
        javax.mail.Multipart r0;
        javax.mail.BodyPart r1;
        boolean $z0;

        r0 := @this: javax.mail.Multipart;

        r1 := @parameter0: javax.mail.BodyPart;

        $r2 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public void removeBodyPart(int) throws javax.mail.MessagingException
    {
        int i0;
        javax.mail.Multipart r0;
        java.util.Vector $r1;

        r0 := @this: javax.mail.Multipart;

        i0 := @parameter0: int;

        $r1 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        virtualinvoke $r1.<java.util.Vector: java.lang.Object remove(int)>(i0);

        return;
    }

    public void addBodyPart(javax.mail.BodyPart) throws javax.mail.MessagingException
    {
        javax.mail.Multipart r0;
        java.util.Vector $r2;
        javax.mail.BodyPart r1;

        r0 := @this: javax.mail.Multipart;

        r1 := @parameter0: javax.mail.BodyPart;

        $r2 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addBodyPart(javax.mail.BodyPart, int) throws javax.mail.MessagingException
    {
        java.util.Vector $r2;
        int i0;
        javax.mail.Multipart r0;
        javax.mail.BodyPart r1;

        r0 := @this: javax.mail.Multipart;

        r1 := @parameter0: javax.mail.BodyPart;

        i0 := @parameter1: int;

        $r2 = r0.<javax.mail.Multipart: java.util.Vector parts>;

        virtualinvoke $r2.<java.util.Vector: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public abstract void writeTo(java.io.OutputStream) throws java.io.IOException, javax.mail.MessagingException;

    public javax.mail.Part getParent()
    {
        javax.mail.Part $r1;
        javax.mail.Multipart r0;

        r0 := @this: javax.mail.Multipart;

        $r1 = r0.<javax.mail.Multipart: javax.mail.Part parent>;

        return $r1;
    }

    public void setParent(javax.mail.Part)
    {
        javax.mail.Part r1;
        javax.mail.Multipart r0;

        r0 := @this: javax.mail.Multipart;

        r1 := @parameter0: javax.mail.Part;

        r0.<javax.mail.Multipart: javax.mail.Part parent> = r1;

        return;
    }
}
