class com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator delegate;
    final com.mycila.inject.internal.guava.collect.StandardTable$RowMap this$1;

    void <init>(com.mycila.inject.internal.guava.collect.StandardTable$RowMap)
    {
        java.util.Iterator $r6;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator r0;
        java.util.Map $r4;
        java.util.Set $r5;
        com.mycila.inject.internal.guava.collect.StandardTable $r3;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.StandardTable$RowMap;

        r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: com.mycila.inject.internal.guava.collect.StandardTable$RowMap this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: com.mycila.inject.internal.guava.collect.StandardTable$RowMap this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap: com.mycila.inject.internal.guava.collect.StandardTable this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.StandardTable: java.util.Map backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: java.util.Iterator delegate> = $r6;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: java.util.Iterator delegate>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.util.Map$Entry next()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEntry $r3;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator r0;
        java.util.Map $r6;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.StandardTable $r5;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: java.util.Iterator delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = new com.mycila.inject.internal.guava.collect.ImmutableEntry;

        $r4 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: com.mycila.inject.internal.guava.collect.StandardTable$RowMap this$1>;

        $r5 = $r4.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap: com.mycila.inject.internal.guava.collect.StandardTable this$0>;

        $r6 = virtualinvoke $r5.<com.mycila.inject.internal.guava.collect.StandardTable: java.util.Map row(java.lang.Object)>($r2);

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r2, $r6);

        return $r3;
    }

    public void remove()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: java.util.Iterator delegate>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public volatile java.lang.Object next()
    {
        java.util.Map$Entry $r1;
        com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap$EntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }
}
