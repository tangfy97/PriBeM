public abstract class org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType extends java.lang.Object
{
    protected int field_1_iStartAt;
    protected int field_2_flags;
    private static final org.apache.poi.util.BitField iLvl;
    private static final org.apache.poi.util.BitField fStartAt;
    private static final org.apache.poi.util.BitField fFormatting;
    private static final org.apache.poi.util.BitField grfhic;
    private static final org.apache.poi.util.BitField unused1;
    private static final org.apache.poi.util.BitField unused2;

    protected void <init>()
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i1);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt> = $i2;

        $i3 = 4 + i0;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i4;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r1;

        r1 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $i1 = r1.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i2, $i1);

        $i4 = 4 + i0;

        $i3 = r1.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i4, $i3);

        return;
    }

    public byte[] serialize()
    {
        int $i0;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r1;
        byte[] r0;

        r1 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $i0 = staticinvoke <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int getSize()>();

        r0 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: void serialize(byte[],int)>(r0, 0);

        return r0;
    }

    public static int getSize()
    {
        return 8;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0, r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType) r1;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt>;

        $i0 = r4.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i2 = r4.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt>;

        i3 = 31 + $i0;

        $i2 = 31 * i3;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        i4 = $i2 + $i1;

        return i4;
    }

    public java.lang.String toString()
    {
        short $s3, $s4;
        byte $b2, $b5;
        int $i0, $i1, $i6, $i7, $i8, $i9;
        java.lang.String $r18;
        boolean $z0, $z1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r2;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;

        r2 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[LFOLVLBase]\n");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .iStartAt             = ");

        $r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int getIStartAt()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .flags                = ");

        $r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int getFlags()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .iLvl                     = ");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: byte getILvl()>();

        $i6 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fStartAt                 = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: boolean isFStartAt()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r10 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .fFormatting              = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: boolean isFFormatting()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r12 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .grfhic                   = ");

        $s3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: short getGrfhic()>();

        $i7 = (int) $s3;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .unused1                  = ");

        $s4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: short getUnused1()>();

        $i8 = (int) $s4;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .unused2                  = ");

        $b5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: byte getUnused2()>();

        $i9 = (int) $b5;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/LFOLVLBase]\n");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public int getIStartAt()
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt>;

        return $i0;
    }

    public void setIStartAt(int)
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_1_iStartAt> = i0;

        return;
    }

    public int getFlags()
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        return $i0;
    }

    public void setFlags(int)
    {
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int i0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = i0;

        return;
    }

    public void setILvl(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField iLvl>;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i3 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i2;

        return;
    }

    public byte getILvl()
    {
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField iLvl>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFStartAt(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fStartAt>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i1;

        return;
    }

    public boolean isFStartAt()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fStartAt>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setFFormatting(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fFormatting>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i1;

        return;
    }

    public boolean isFFormatting()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fFormatting>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public void setGrfhic(short)
    {
        short s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        s0 := @parameter0: short;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField grfhic>;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i3 = (int) s0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i2;

        return;
    }

    public short getGrfhic()
    {
        org.apache.poi.util.BitField $r1;
        short $s2;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField grfhic>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        $s2 = (short) $i1;

        return $s2;
    }

    public void setUnused1(short)
    {
        short s0;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        s0 := @parameter0: short;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused1>;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i3 = (int) s0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i2;

        return;
    }

    public short getUnused1()
    {
        org.apache.poi.util.BitField $r1;
        short $s2;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused1>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        $s2 = (short) $i1;

        return $s2;
    }

    public void setUnused2(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused2>;

        $i1 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i3 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i1, $i3);

        r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags> = $i2;

        return;
    }

    public byte getUnused2()
    {
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused2>;

        $i0 = r0.<org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: int field_2_flags>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        $b2 = (byte) $i1;

        return $b2;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(15);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField iLvl> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fStartAt> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField fFormatting> = $r2;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(16320);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField grfhic> = $r3;

        $r4 = new org.apache.poi.util.BitField;

        specialinvoke $r4.<org.apache.poi.util.BitField: void <init>(int)>(536854528);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused1> = $r4;

        $r5 = new org.apache.poi.util.BitField;

        specialinvoke $r5.<org.apache.poi.util.BitField: void <init>(int)>(-536870912);

        <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractType: org.apache.poi.util.BitField unused2> = $r5;

        return;
    }
}
