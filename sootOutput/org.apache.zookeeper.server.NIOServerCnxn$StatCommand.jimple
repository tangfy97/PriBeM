class org.apache.zookeeper.server.NIOServerCnxn$StatCommand extends org.apache.zookeeper.server.NIOServerCnxn$CommandThread
{
    int len;
    final org.apache.zookeeper.server.NIOServerCnxn this$0;

    public void <init>(org.apache.zookeeper.server.NIOServerCnxn, java.io.PrintWriter, int)
    {
        java.io.PrintWriter r2;
        org.apache.zookeeper.server.NIOServerCnxn$StatCommand r0;
        int i0;
        org.apache.zookeeper.server.NIOServerCnxn r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn$StatCommand;

        r1 := @parameter0: org.apache.zookeeper.server.NIOServerCnxn;

        r2 := @parameter1: java.io.PrintWriter;

        i0 := @parameter2: int;

        r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0> = r1;

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn$CommandThread: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r1, r2);

        r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: int len> = i0;

        return;
    }

    public void commandRun()
    {
        org.apache.zookeeper.server.NIOServerCnxn$StatCommand r0;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r21, $r24;
        boolean $z0, $z1;
        java.io.PrintWriter $r3, $r4, $r9, $r13, $r15, $r19, $r29, $r31, $r32, $r33, $r34;
        org.apache.zookeeper.server.ServerStats $r11;
        org.apache.zookeeper.server.NIOServerCnxn $r1, $r6, $r8, $r14, $r20, $r23, r36;
        java.lang.Throwable $r35;
        org.apache.zookeeper.server.ZKDatabase $r17;
        java.util.HashSet $r22, $r25, r27;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r12;
        org.slf4j.Logger $r18;
        java.util.Iterator $r28;
        org.apache.zookeeper.server.ZooKeeperServer $r2, $r7, $r10, $r16;
        java.lang.Object $r26, $r30;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn$StatCommand;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r2 = staticinvoke <org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NIOServerCnxn)>($r1);

        if $r2 != null goto label01;

        $r34 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r34.<java.io.PrintWriter: void println(java.lang.String)>("This ZooKeeper instance is not currently serving requests");

        goto label11;

     label01:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("Zookeeper version: ");

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        $r5 = staticinvoke <org.apache.zookeeper.Version: java.lang.String getFullVersion()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r7 = staticinvoke <org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NIOServerCnxn)>($r6);

        $z0 = $r7 instanceof org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer;

        if $z0 == 0 goto label02;

        $r33 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r33.<java.io.PrintWriter: void println(java.lang.String)>("READ-ONLY mode; serving only read-only clients");

     label02:
        $i1 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: int len>;

        $i0 = <org.apache.zookeeper.server.ServerCnxn: int statCmd>;

        if $i1 != $i0 goto label10;

        $r18 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Stat command output");

        $r19 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r19.<java.io.PrintWriter: void println(java.lang.String)>("Clients:");

        $r20 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r21 = $r20.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r22 = $r21.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r22;

     label03:
        $r23 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r24 = $r23.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r25 = $r24.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        $r26 = virtualinvoke $r25.<java.util.HashSet: java.lang.Object clone()>();

        r27 = (java.util.HashSet) $r26;

        exitmonitor $r22;

     label04:
        goto label07;

     label05:
        $r35 := @caughtexception;

        exitmonitor $r22;

     label06:
        throw $r35;

     label07:
        $r28 = virtualinvoke r27.<java.util.HashSet: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r30 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.zookeeper.server.NIOServerCnxn) $r30;

        $r31 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke r36.<org.apache.zookeeper.server.NIOServerCnxn: void dumpConnectionInfo(java.io.PrintWriter,boolean)>($r31, 1);

        $r32 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r32.<java.io.PrintWriter: void println()>();

        goto label08;

     label09:
        $r29 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r29.<java.io.PrintWriter: void println()>();

     label10:
        $r9 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        $r8 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r10 = staticinvoke <org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NIOServerCnxn)>($r8);

        $r11 = virtualinvoke $r10.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ServerStats serverStats()>();

        $r12 = virtualinvoke $r11.<org.apache.zookeeper.server.ServerStats: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        $r13 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        virtualinvoke $r13.<java.io.PrintWriter: void print(java.lang.String)>("Node count: ");

        $r15 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: java.io.PrintWriter pw>;

        $r14 = r0.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: org.apache.zookeeper.server.NIOServerCnxn this$0>;

        $r16 = staticinvoke <org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NIOServerCnxn)>($r14);

        $r17 = virtualinvoke $r16.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $i2 = virtualinvoke $r17.<org.apache.zookeeper.server.ZKDatabase: int getNodeCount()>();

        virtualinvoke $r15.<java.io.PrintWriter: void println(int)>($i2);

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }
}
