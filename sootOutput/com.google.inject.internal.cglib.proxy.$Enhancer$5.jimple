class com.google.inject.internal.cglib.proxy.$Enhancer$5 extends java.lang.Object implements com.google.inject.internal.cglib.core.$ObjectSwitchCallback
{
    private final com.google.inject.internal.cglib.core.$CodeEmitter val$e;
    private final com.google.inject.internal.cglib.proxy.$Enhancer this$0;

    void <init>(com.google.inject.internal.cglib.proxy.$Enhancer, com.google.inject.internal.cglib.core.$CodeEmitter)
    {
        com.google.inject.internal.cglib.proxy.$Enhancer r1;
        com.google.inject.internal.cglib.proxy.$Enhancer$5 r0;
        com.google.inject.internal.cglib.core.$CodeEmitter r2;

        r0 := @this: com.google.inject.internal.cglib.proxy.$Enhancer$5;

        r1 := @parameter0: com.google.inject.internal.cglib.proxy.$Enhancer;

        r2 := @parameter1: com.google.inject.internal.cglib.core.$CodeEmitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.proxy.$Enhancer this$0> = r1;

        r0.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e> = r2;

        return;
    }

    public void processCase(java.lang.Object, com.google.inject.internal.asm.$Label)
    {
        com.google.inject.internal.cglib.core.$CodeEmitter $r5, $r8, $r9, $r10, $r11, $r13;
        com.google.inject.internal.asm.$Type[] $r3;
        int $i0, i1;
        com.google.inject.internal.asm.$Label r7;
        com.google.inject.internal.asm.$Type $r12;
        com.google.inject.internal.cglib.proxy.$Enhancer$5 r4;
        com.google.inject.internal.cglib.core.$Signature $r2, $r6;
        java.lang.Object r0;
        com.google.inject.internal.cglib.core.$MethodInfo r1;

        r4 := @this: com.google.inject.internal.cglib.proxy.$Enhancer$5;

        r0 := @parameter0: java.lang.Object;

        r7 := @parameter1: com.google.inject.internal.asm.$Label;

        r1 = (com.google.inject.internal.cglib.core.$MethodInfo) r0;

        $r2 = virtualinvoke r1.<com.google.inject.internal.cglib.core.$MethodInfo: com.google.inject.internal.cglib.core.$Signature getSignature()>();

        $r3 = virtualinvoke $r2.<com.google.inject.internal.cglib.core.$Signature: com.google.inject.internal.asm.$Type[] getArgumentTypes()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r9 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_arg(int)>(1);

        $r10 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        virtualinvoke $r10.<com.google.inject.internal.cglib.core.$CodeEmitter: void push(int)>(i1);

        $r11 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        virtualinvoke $r11.<com.google.inject.internal.cglib.core.$CodeEmitter: void aaload()>();

        $r13 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        $r12 = $r3[i1];

        virtualinvoke $r13.<com.google.inject.internal.cglib.core.$CodeEmitter: void unbox(com.google.inject.internal.asm.$Type)>($r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        $r6 = virtualinvoke r1.<com.google.inject.internal.cglib.core.$MethodInfo: com.google.inject.internal.cglib.core.$Signature getSignature()>();

        virtualinvoke $r5.<com.google.inject.internal.cglib.core.$CodeEmitter: void invoke_constructor_this(com.google.inject.internal.cglib.core.$Signature)>($r6);

        $r8 = r4.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        virtualinvoke $r8.<com.google.inject.internal.cglib.core.$CodeEmitter: void goTo(com.google.inject.internal.asm.$Label)>(r7);

        return;
    }

    public void processDefault()
    {
        com.google.inject.internal.asm.$Type $r2;
        com.google.inject.internal.cglib.proxy.$Enhancer$5 r0;
        com.google.inject.internal.cglib.core.$CodeEmitter $r1;

        r0 := @this: com.google.inject.internal.cglib.proxy.$Enhancer$5;

        $r1 = r0.<com.google.inject.internal.cglib.proxy.$Enhancer$5: com.google.inject.internal.cglib.core.$CodeEmitter val$e>;

        $r2 = staticinvoke <com.google.inject.internal.cglib.proxy.$Enhancer: com.google.inject.internal.asm.$Type access$200()>();

        virtualinvoke $r1.<com.google.inject.internal.cglib.core.$CodeEmitter: void throw_exception(com.google.inject.internal.asm.$Type,java.lang.String)>($r2, "Constructor not found");

        return;
    }
}
