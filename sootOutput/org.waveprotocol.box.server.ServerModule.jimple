public class org.waveprotocol.box.server.ServerModule extends com.google.inject.AbstractModule
{
    private final boolean enableFederation;
    private final int listenerCount;
    private final int waveletLoadCount;
    private final int deltaPersistCount;
    private final int storageContinuationCount;
    private final int lookupCount;

    public void <init>(boolean, int, int, int, int, int)
    {
        org.waveprotocol.box.server.ServerModule r0;
        int i0, i1, i2, i3, i4;
        boolean z0;

        r0 := @this: org.waveprotocol.box.server.ServerModule;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        specialinvoke r0.<com.google.inject.AbstractModule: void <init>()>();

        r0.<org.waveprotocol.box.server.ServerModule: boolean enableFederation> = z0;

        r0.<org.waveprotocol.box.server.ServerModule: int listenerCount> = i0;

        r0.<org.waveprotocol.box.server.ServerModule: int waveletLoadCount> = i1;

        r0.<org.waveprotocol.box.server.ServerModule: int deltaPersistCount> = i2;

        r0.<org.waveprotocol.box.server.ServerModule: int storageContinuationCount> = i3;

        r0.<org.waveprotocol.box.server.ServerModule: int lookupCount> = i4;

        return;
    }

    protected void configure()
    {
        org.waveprotocol.box.server.ServerModule r0;
        java.lang.String[] $r14;
        com.google.inject.binder.AnnotatedBindingBuilder $r1, $r2, $r4, $r6, $r11, $r16, $r17, $r19, $r21, $r23, $r24;
        org.waveprotocol.box.server.ServerModule$1 $r10;
        int $i0, $i1, $i2, $i3, $i4;
        javax.security.auth.login.Configuration $r18;
        java.util.concurrent.ExecutorService $r8;
        boolean $z0;
        com.google.inject.binder.ScopedBindingBuilder $r20, $r22;
        org.waveprotocol.box.server.waveserver.WaveServerModule $r9;
        java.util.List $r15;
        com.google.inject.binder.LinkedBindingBuilder $r3, $r5, $r7, $r13;
        com.google.inject.name.Named $r12;

        r0 := @this: org.waveprotocol.box.server.ServerModule;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/WaveServerImpl;");

        interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r2 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/WaveletFederationListener$Factory;");

        $r3 = interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/FederationRemoteBridge;");

        interfaceinvoke $r3.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/WaveServerImpl;");

        $r4 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/WaveletFederationProvider;");

        $r5 = interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)>(class "Lorg/waveprotocol/wave/federation/FederationHostBridge;");

        interfaceinvoke $r5.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/WaveServerImpl;");

        $r6 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljava/util/concurrent/Executor;");

        $r7 = interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/LookupExecutor;");

        $i0 = r0.<org.waveprotocol.box.server.ServerModule: int lookupCount>;

        $r8 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>($i0);

        interfaceinvoke $r7.<com.google.inject.binder.LinkedBindingBuilder: void toInstance(java.lang.Object)>($r8);

        $r9 = new org.waveprotocol.box.server.waveserver.WaveServerModule;

        $z0 = r0.<org.waveprotocol.box.server.ServerModule: boolean enableFederation>;

        $i4 = r0.<org.waveprotocol.box.server.ServerModule: int listenerCount>;

        $i3 = r0.<org.waveprotocol.box.server.ServerModule: int waveletLoadCount>;

        $i2 = r0.<org.waveprotocol.box.server.ServerModule: int deltaPersistCount>;

        $i1 = r0.<org.waveprotocol.box.server.ServerModule: int storageContinuationCount>;

        specialinvoke $r9.<org.waveprotocol.box.server.waveserver.WaveServerModule: void <init>(boolean,int,int,int,int)>($z0, $i4, $i3, $i2, $i1);

        virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: void install(com.google.inject.Module)>($r9);

        $r10 = new org.waveprotocol.box.server.ServerModule$1;

        specialinvoke $r10.<org.waveprotocol.box.server.ServerModule$1: void <init>(org.waveprotocol.box.server.ServerModule)>(r0);

        $r11 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral)>($r10);

        $r12 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("certs");

        $r13 = interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.'annotation'.Annotation)>($r12);

        $r14 = newarray (java.lang.String)[0];

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        interfaceinvoke $r13.<com.google.inject.binder.LinkedBindingBuilder: void toInstance(java.lang.Object)>($r15);

        $r16 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/rpc/ProtoSerializer;");

        interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r17 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/security/auth/login/Configuration;");

        $r18 = staticinvoke <javax.security.auth.login.Configuration: javax.security.auth.login.Configuration getConfiguration()>();

        interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18);

        $r19 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/authentication/SessionManager;");

        $r20 = interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/authentication/SessionManagerImpl;");

        interfaceinvoke $r20.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r21 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/eclipse/jetty/server/SessionManager;");

        $r22 = interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/eclipse/jetty/server/session/HashSessionManager;");

        interfaceinvoke $r22.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r23 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/rpc/ServerRpcProvider;");

        interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        $r24 = virtualinvoke r0.<org.waveprotocol.box.server.ServerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/register/RobotRegistrar;");

        interfaceinvoke $r24.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/register/RobotRegistrarImpl;");

        return;
    }

    public org.waveprotocol.wave.model.id.IdGenerator provideIdGenerator(java.lang.String, org.waveprotocol.wave.model.id.IdGeneratorImpl$Seed)
    {
        org.waveprotocol.box.server.ServerModule r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.id.IdGeneratorImpl$Seed r2;
        org.waveprotocol.wave.model.id.IdGeneratorImpl $r0;

        r3 := @this: org.waveprotocol.box.server.ServerModule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.id.IdGeneratorImpl$Seed;

        $r0 = new org.waveprotocol.wave.model.id.IdGeneratorImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.IdGeneratorImpl: void <init>(java.lang.String,org.waveprotocol.wave.model.id.IdGeneratorImpl$Seed)>(r1, r2);

        return $r0;
    }

    public java.security.SecureRandom provideSecureRandom()
    {
        java.security.SecureRandom $r0;
        org.waveprotocol.box.server.ServerModule r1;

        r1 := @this: org.waveprotocol.box.server.ServerModule;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        return $r0;
    }

    public org.waveprotocol.wave.model.id.TokenGenerator provideTokenGenerator(java.security.SecureRandom)
    {
        java.security.SecureRandom r1;
        org.waveprotocol.wave.model.id.TokenGeneratorImpl $r0;
        org.waveprotocol.box.server.ServerModule r2;

        r2 := @this: org.waveprotocol.box.server.ServerModule;

        r1 := @parameter0: java.security.SecureRandom;

        $r0 = new org.waveprotocol.wave.model.id.TokenGeneratorImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.TokenGeneratorImpl: void <init>(java.util.Random)>(r1);

        return $r0;
    }

    public org.waveprotocol.wave.model.id.IdGeneratorImpl$Seed provideSeed(java.security.SecureRandom)
    {
        java.security.SecureRandom r2;
        org.waveprotocol.box.server.ServerModule$2 $r0;
        org.waveprotocol.box.server.ServerModule r1;

        r1 := @this: org.waveprotocol.box.server.ServerModule;

        r2 := @parameter0: java.security.SecureRandom;

        $r0 = new org.waveprotocol.box.server.ServerModule$2;

        specialinvoke $r0.<org.waveprotocol.box.server.ServerModule$2: void <init>(org.waveprotocol.box.server.ServerModule,java.security.SecureRandom)>(r1, r2);

        return $r0;
    }
}
