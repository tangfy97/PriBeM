class org.apache.lucene.index.DocumentsWriterDeleteQueue$Node extends java.lang.Object
{
    volatile org.apache.lucene.index.DocumentsWriterDeleteQueue$Node next;
    final java.lang.Object item;
    static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater;

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: java.lang.Object item> = r1;

        return;
    }

    void apply(org.apache.lucene.index.BufferedDeletes, int)
    {
        java.lang.IllegalStateException $r0;
        org.apache.lucene.index.BufferedDeletes r2;
        int i0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r1;

        r1 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        r2 := @parameter0: org.apache.lucene.index.BufferedDeletes;

        i0 := @parameter1: int;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("sentinel item must never be applied");

        throw $r0;
    }

    boolean casNext(org.apache.lucene.index.DocumentsWriterDeleteQueue$Node, org.apache.lucene.index.DocumentsWriterDeleteQueue$Node)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$Node r0, r1, r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        r2 := @parameter1: org.apache.lucene.index.DocumentsWriterDeleteQueue$Node;

        $r3 = <org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue$Node;", class "Lorg/apache/lucene/index/DocumentsWriterDeleteQueue$Node;", "next");

        <org.apache.lucene.index.DocumentsWriterDeleteQueue$Node: java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater> = $r0;

        return;
    }
}
