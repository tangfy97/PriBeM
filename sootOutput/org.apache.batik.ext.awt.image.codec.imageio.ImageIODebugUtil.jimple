public class org.apache.batik.ext.awt.image.codec.imageio.ImageIODebugUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.imageio.ImageIODebugUtil r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.imageio.ImageIODebugUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dumpMetadata(javax.imageio.metadata.IIOMetadata)
    {
        javax.imageio.metadata.IIOMetadata r0;
        java.lang.String $r1;
        org.w3c.dom.Node $r2;

        r0 := @parameter0: javax.imageio.metadata.IIOMetadata;

        $r1 = virtualinvoke r0.<javax.imageio.metadata.IIOMetadata: java.lang.String getNativeMetadataFormatName()>();

        $r2 = virtualinvoke r0.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>($r1);

        staticinvoke <org.apache.batik.ext.awt.image.codec.imageio.ImageIODebugUtil: void dumpNode(org.w3c.dom.Node)>($r2);

        return;
    }

    public static void dumpNode(org.w3c.dom.Node)
    {
        java.io.PrintStream $r5, $r6;
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r2;
        javax.xml.transform.stream.StreamResult $r4;
        java.lang.Exception $r7;
        org.w3c.dom.Node r3;
        javax.xml.transform.TransformerFactory $r0;

        r3 := @parameter0: org.w3c.dom.Node;

     label1:
        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        $r2 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r3);

        $r4 = new javax.xml.transform.stream.StreamResult;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r5);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r2, $r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
