public abstract class com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase extends java.lang.Object implements com.hp.hpl.jena.sparql.pfunction.PropertyFunction
{
    com.hp.hpl.jena.sparql.pfunction.PropFuncArgType subjArgType;
    com.hp.hpl.jena.sparql.pfunction.PropFuncArgType objFuncArgType;

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType $r1, $r2;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase;

        $r2 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_EITHER>;

        $r1 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_EITHER>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: void <init>(com.hp.hpl.jena.sparql.pfunction.PropFuncArgType,com.hp.hpl.jena.sparql.pfunction.PropFuncArgType)>($r2, $r1);

        return;
    }

    protected void <init>(com.hp.hpl.jena.sparql.pfunction.PropFuncArgType, com.hp.hpl.jena.sparql.pfunction.PropFuncArgType)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType r1, r2;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        r2 := @parameter1: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType subjArgType> = r1;

        r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType objFuncArgType> = r2;

        return;
    }

    public void build(com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.query.QueryBuildException $r8, $r15, $r22, $r28;
        com.hp.hpl.jena.graph.Node r11;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase r0;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType $r1, $r2, $r3, $r4, $r5, $r6, $r35, $r36;
        java.lang.StringBuilder $r9, $r10, $r13, $r16, $r17, $r19, $r23, $r24, $r26, $r29, $r30, $r32;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r7, r21;
        java.lang.String $r12, $r14, $r18, $r20, $r25, $r27, $r31, $r33;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase;

        r21 := @parameter0: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r11 := @parameter1: com.hp.hpl.jena.graph.Node;

        r7 := @parameter2: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r34 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r2 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType subjArgType>;

        $r1 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_SINGLE>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z7 = virtualinvoke r21.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z7 == 0 goto label1;

        $r28 = new com.hp.hpl.jena.query.QueryBuildException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List arguments (subject) to ");

        $r31 = virtualinvoke r11.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r33);

        throw $r28;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType subjArgType>;

        $r3 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_LIST>;

        $z1 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z6 = virtualinvoke r21.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z6 != 0 goto label2;

        $r22 = new com.hp.hpl.jena.query.QueryBuildException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single argument, list expected (subject) to ");

        $r25 = virtualinvoke r11.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label2:
        $r6 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType objFuncArgType>;

        $r5 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_SINGLE>;

        $z2 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z4 = virtualinvoke r7.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z4 == 0 goto label3;

        $z5 = virtualinvoke r7.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isNode()>();

        if $z5 != 0 goto label3;

        $r15 = new com.hp.hpl.jena.query.QueryBuildException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List arguments (object) to ");

        $r18 = virtualinvoke r11.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label3:
        $r35 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType objFuncArgType>;

        $r36 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_LIST>;

        $z8 = virtualinvoke $r35.<com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: boolean equals(java.lang.Object)>($r36);

        if $z8 == 0 goto label4;

        $z3 = virtualinvoke r7.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z3 != 0 goto label4;

        $r8 = new com.hp.hpl.jena.query.QueryBuildException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single argument, list expected (object) to ");

        $r12 = virtualinvoke r11.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label4:
        return;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator exec(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r3, r5;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase r1;
        com.hp.hpl.jena.graph.Node r4;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r6;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase$RepeatApplyIteratorPF $r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;

        r1 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter1: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r6 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase$RepeatApplyIteratorPF;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase$RepeatApplyIteratorPF: void <init>(com.hp.hpl.jena.sparql.pfunction.PropertyFunctionBase,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2, r3, r4, r5, r6);

        return $r0;
    }

    public abstract com.hp.hpl.jena.sparql.engine.QueryIterator exec(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext);
}
