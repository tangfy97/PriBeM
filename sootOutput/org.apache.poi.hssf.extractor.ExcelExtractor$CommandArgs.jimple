final class org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs extends java.lang.Object
{
    private final boolean _requestHelp;
    private final java.io.File _inputFile;
    private final boolean _showSheetNames;
    private final boolean _evaluateFormulas;
    private final boolean _showCellComments;
    private final boolean _showBlankCells;
    private final boolean _headersFooters;

    public void <init>(java.lang.String[]) throws org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12, z13, z14;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26;
        java.lang.String[] r1;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        int i0, i1, i2;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r14, $r21, $r27, r31, r32;
        java.io.File $r15, r30;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException $r9, $r16, $r22, $r28, $r29;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = lengthof r1;

        r30 = null;

        z9 = 0;

        z10 = 1;

        z11 = 1;

        z12 = 0;

        z13 = 0;

        z14 = 1;

        i1 = 0;

     label01:
        if i1 >= i0 goto label13;

        r31 = r1[i1];

        $r2 = "-help";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r31);

        if $z0 == 0 goto label02;

        z9 = 1;

        goto label13;

     label02:
        $r3 = "-i";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z1 == 0 goto label06;

        i2 = i1 + 1;

        if i2 < i0 goto label03;

        $r29 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        specialinvoke $r29.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>("Expected filename after \'-i\'");

        throw $r29;

     label03:
        r32 = r1[i2];

        if r30 == null goto label04;

        $r28 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        specialinvoke $r28.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>("Only one input file can be supplied");

        throw $r28;

     label04:
        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r32);

        r30 = $r15;

        $z7 = virtualinvoke $r15.<java.io.File: boolean exists()>();

        if $z7 != 0 goto label05;

        $r22 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified input file \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not exist");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label05:
        $z8 = virtualinvoke $r15.<java.io.File: boolean isDirectory()>();

        if $z8 == 0 goto label12;

        $r16 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified input file \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is a directory");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label06:
        $r4 = "--show-sheet-names";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z2 == 0 goto label07;

        i2 = i1 + 1;

        z10 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean parseBoolArg(java.lang.String[],int)>(r1, i2);

        goto label12;

     label07:
        $r5 = "--evaluate-formulas";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z3 == 0 goto label08;

        i2 = i1 + 1;

        z11 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean parseBoolArg(java.lang.String[],int)>(r1, i2);

        goto label12;

     label08:
        $r6 = "--show-comments";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z4 == 0 goto label09;

        i2 = i1 + 1;

        z12 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean parseBoolArg(java.lang.String[],int)>(r1, i2);

        goto label12;

     label09:
        $r7 = "--show-blanks";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z5 == 0 goto label10;

        i2 = i1 + 1;

        z13 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean parseBoolArg(java.lang.String[],int)>(r1, i2);

        goto label12;

     label10:
        $r8 = "--headers-footers";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z6 == 0 goto label11;

        i2 = i1 + 1;

        z14 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean parseBoolArg(java.lang.String[],int)>(r1, i2);

        goto label12;

     label11:
        $r9 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid argument \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label12:
        i1 = i2 + 1;

        goto label01;

     label13:
        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _requestHelp> = z9;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: java.io.File _inputFile> = r30;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showSheetNames> = z10;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _evaluateFormulas> = z11;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showCellComments> = z12;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showBlankCells> = z13;

        r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _headersFooters> = z14;

        return;
    }

    private static boolean parseBoolArg(java.lang.String[], int) throws org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r18, $r19, $r22, $r23, $r25, $r26;
        java.lang.String[] r0;
        int i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r17, $r20, $r24, $r27;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException $r11, $r21;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 < $i1 goto label1;

        $r21 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected value after \'");

        $i3 = i0 - 1;

        $r24 = r0[$i3];

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label1:
        $r1 = r0[i0];

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = "Y";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r4 = "YES";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label2;

        $r5 = "ON";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 != 0 goto label2;

        $r6 = "TRUE";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z3 == 0 goto label3;

     label2:
        return 1;

     label3:
        $r7 = "N";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z4 != 0 goto label4;

        $r8 = "NO";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z5 != 0 goto label4;

        $r9 = "OFF";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z6 != 0 goto label4;

        $r10 = "FALSE";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z7 == 0 goto label5;

     label4:
        return 0;

     label5:
        $r11 = new org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value \'");

        $r14 = r0[i0];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for \'");

        $i2 = i0 - 1;

        $r17 = r0[$i2];

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'. Expected \'Y\' or \'N\'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandParseException: void <init>(java.lang.String)>($r20);

        throw $r11;
    }

    public boolean isRequestHelp()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _requestHelp>;

        return $z0;
    }

    public java.io.File getInputFile()
    {
        java.io.File $r1;
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $r1 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: java.io.File _inputFile>;

        return $r1;
    }

    public boolean shouldShowSheetNames()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showSheetNames>;

        return $z0;
    }

    public boolean shouldEvaluateFormulas()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _evaluateFormulas>;

        return $z0;
    }

    public boolean shouldShowCellComments()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showCellComments>;

        return $z0;
    }

    public boolean shouldShowBlankCells()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _showBlankCells>;

        return $z0;
    }

    public boolean shouldIncludeHeadersFooters()
    {
        org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs;

        $z0 = r0.<org.apache.poi.hssf.extractor.ExcelExtractor$CommandArgs: boolean _headersFooters>;

        return $z0;
    }
}
