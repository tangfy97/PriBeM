public class org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal extends org.codehaus.groovy.antlr.treewalker.TraversalHelper
{

    public void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)
    {
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal r0;
        org.codehaus.groovy.antlr.treewalker.Visitor r1;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        r1 := @parameter0: org.codehaus.groovy.antlr.treewalker.Visitor;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.TraversalHelper: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>(r1);

        return;
    }

    public void setUp(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal r0;
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        java.util.List $r3;
        java.util.ArrayList $r2;

        r0 := @this: org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.TraversalHelper: void setUp(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes> = $r2;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void traverse(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        $r3 = r0.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        return;
    }

    private void traverse(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r5, $r7;
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal r1;
        java.util.List $r2, $r6;
        groovyjarjarantlr.collections.AST $r3, $r4;

        r1 := @this: org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        if $r2 == null goto label2;

        $r6 = r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

     label2:
        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r7 = (org.codehaus.groovy.antlr.GroovySourceAST) $r3;

        if $r7 == null goto label3;

        specialinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void traverse(org.codehaus.groovy.antlr.GroovySourceAST)>($r7);

     label3:
        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getNextSibling()>();

        $r5 = (org.codehaus.groovy.antlr.GroovySourceAST) $r4;

        if $r5 == null goto label4;

        specialinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void traverse(org.codehaus.groovy.antlr.GroovySourceAST)>($r5);

     label4:
        return;
    }

    protected void accept(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r5, $r6, $r7, $r8, $r9, $r10;
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal r1;
        java.util.List $r2, $r3, $r4;

        r1 := @this: org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        if r0 == null goto label26;

        $r2 = r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        if $r2 == null goto label26;

        $r3 = r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label26;

        $r4 = r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: java.util.List unvisitedNodes>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label01;

        return;

     label01:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void push(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        $i1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        tableswitch($i1)
        {
            case 5: goto label22;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label08;
            case 9: goto label08;
            case 10: goto label24;
            case 11: goto label24;
            case 12: goto label24;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label12;
            case 16: goto label24;
            case 17: goto label24;
            case 18: goto label24;
            case 19: goto label05;
            case 20: goto label08;
            case 21: goto label12;
            case 22: goto label17;
            case 23: goto label07;
            case 24: goto label24;
            case 25: goto label24;
            case 26: goto label13;
            case 27: goto label08;
            case 28: goto label08;
            case 29: goto label24;
            case 30: goto label24;
            case 31: goto label03;
            case 32: goto label05;
            case 33: goto label24;
            case 34: goto label24;
            case 35: goto label24;
            case 36: goto label24;
            case 37: goto label24;
            case 38: goto label24;
            case 39: goto label24;
            case 40: goto label24;
            case 41: goto label24;
            case 42: goto label24;
            case 43: goto label24;
            case 44: goto label13;
            case 45: goto label12;
            case 46: goto label06;
            case 47: goto label05;
            case 48: goto label24;
            case 49: goto label19;
            case 50: goto label24;
            case 51: goto label24;
            case 52: goto label24;
            case 53: goto label12;
            case 54: goto label24;
            case 55: goto label24;
            case 56: goto label24;
            case 57: goto label24;
            case 58: goto label21;
            case 59: goto label24;
            case 60: goto label12;
            case 61: goto label08;
            case 62: goto label24;
            case 63: goto label12;
            case 64: goto label22;
            case 65: goto label04;
            case 66: goto label09;
            case 67: goto label11;
            case 68: goto label24;
            case 69: goto label05;
            case 70: goto label24;
            case 71: goto label05;
            case 72: goto label05;
            case 73: goto label23;
            case 74: goto label05;
            case 75: goto label24;
            case 76: goto label05;
            case 77: goto label24;
            case 78: goto label24;
            case 79: goto label24;
            case 80: goto label24;
            case 81: goto label24;
            case 82: goto label24;
            case 83: goto label24;
            case 84: goto label24;
            case 85: goto label24;
            case 86: goto label12;
            case 87: goto label12;
            case 88: goto label24;
            case 89: goto label24;
            case 90: goto label24;
            case 91: goto label24;
            case 92: goto label24;
            case 93: goto label02;
            case 94: goto label24;
            case 95: goto label24;
            case 96: goto label24;
            case 97: goto label12;
            case 98: goto label12;
            case 99: goto label12;
            case 100: goto label24;
            case 101: goto label24;
            case 102: goto label24;
            case 103: goto label24;
            case 104: goto label24;
            case 105: goto label24;
            case 106: goto label24;
            case 107: goto label24;
            case 108: goto label24;
            case 109: goto label12;
            case 110: goto label12;
            case 111: goto label24;
            case 112: goto label24;
            case 113: goto label24;
            case 114: goto label24;
            case 115: goto label24;
            case 116: goto label24;
            case 117: goto label22;
            case 118: goto label24;
            case 119: goto label24;
            case 120: goto label09;
            case 121: goto label12;
            case 122: goto label24;
            case 123: goto label24;
            case 124: goto label24;
            case 125: goto label24;
            case 126: goto label24;
            case 127: goto label24;
            case 128: goto label24;
            case 129: goto label24;
            case 130: goto label24;
            case 131: goto label24;
            case 132: goto label24;
            case 133: goto label18;
            case 134: goto label24;
            case 135: goto label17;
            case 136: goto label21;
            case 137: goto label21;
            case 138: goto label12;
            case 139: goto label24;
            case 140: goto label24;
            case 141: goto label24;
            case 142: goto label24;
            case 143: goto label22;
            case 144: goto label12;
            case 145: goto label12;
            case 146: goto label24;
            case 147: goto label22;
            case 148: goto label24;
            case 149: goto label22;
            case 150: goto label12;
            case 151: goto label12;
            case 152: goto label12;
            case 153: goto label09;
            case 154: goto label09;
            case 155: goto label09;
            case 156: goto label09;
            case 157: goto label09;
            case 158: goto label09;
            case 159: goto label09;
            case 160: goto label09;
            case 161: goto label09;
            case 162: goto label09;
            case 163: goto label09;
            case 164: goto label09;
            case 165: goto label24;
            case 166: goto label12;
            case 167: goto label12;
            case 168: goto label12;
            case 169: goto label12;
            case 170: goto label09;
            case 171: goto label09;
            case 172: goto label09;
            case 173: goto label09;
            case 174: goto label09;
            case 175: goto label12;
            case 176: goto label12;
            case 177: goto label03;
            case 178: goto label12;
            case 179: goto label12;
            case 180: goto label12;
            case 181: goto label24;
            case 182: goto label12;
            case 183: goto label12;
            case 184: goto label24;
            case 185: goto label12;
            case 186: goto label24;
            case 187: goto label24;
            case 188: goto label24;
            case 189: goto label24;
            case 190: goto label21;
            default: goto label24;
        };

     label02:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_SecondChild_v_ThirdChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label03:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_SecondChildsChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label04:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_2ndv_SecondChild_v___LastChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label05:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v_SecondChild_v___LastChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label06:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_SecondChild_v_ThirdChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label07:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_SecondChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label08:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_AllChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label09:
        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>(1);

        if $r5 == null goto label10;

        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_RestOfTheChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label10:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v_RestOfTheChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label11:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstSecondAndThirdChild_v_v_ForthChild(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label12:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_RestOfTheChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label13:
        $i3 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getNumberOfChildren()>();

        if $i3 != 2 goto label14;

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>(1);

        if $r8 == null goto label14;

        $r9 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>(1);

        $i5 = virtualinvoke $r9.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i5 != 49 goto label14;

        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_SecondChild(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label14:
        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getNumberOfChildren()>();

        $i7 = $i6 - 1;

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>($i7);

        if $r10 == null goto label15;

        $i4 = virtualinvoke $r10.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i4 != 49 goto label15;

        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_RestOfTheChildren_v_LastChild(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label16;

     label15:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_FirstChild_v_RestOfTheChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

     label16:
        goto label25;

     label17:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChildsFirstChild_v_RestOfTheChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label18:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChildsFirstChild_v_Child2_Child3_v_Child4_v___v_LastChild(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label19:
        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>(0);

        if $r6 == null goto label20;

        $r7 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childAt(int)>(0);

        $i2 = virtualinvoke $r7.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i2 != 50 goto label20;

        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_AllChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label20:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v_RestOfTheChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label21:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v_RestOfTheChildren_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label22:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v_RestOfTheChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label23:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_Siblings_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label25;

     label24:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void accept_v_FirstChild_v(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

     label25:
        virtualinvoke r1.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: org.codehaus.groovy.antlr.GroovySourceAST pop()>();

     label26:
        return;
    }
}
