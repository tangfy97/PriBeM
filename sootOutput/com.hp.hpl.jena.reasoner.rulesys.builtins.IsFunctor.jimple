public class com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor extends com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin
{

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor;

        return "isFunctor";
    }

    public int getArgLength()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor;

        return 1;
    }

    public boolean bodyCall(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r1;
        com.hp.hpl.jena.graph.Node[] r2;
        int i0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r1 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor: void checkArgs(int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(i0, r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(0, r2, r1);

        $z0 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: boolean isFunctor(com.hp.hpl.jena.graph.Node)>($r3);

        return $z0;
    }
}
