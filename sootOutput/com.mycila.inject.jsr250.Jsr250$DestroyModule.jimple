class com.mycila.inject.jsr250.Jsr250$DestroyModule extends java.lang.Object implements com.google.inject.Module
{
    private com.mycila.inject.jsr250.Jsr250Injector injector;

    private void <init>()
    {
        com.mycila.inject.jsr250.Jsr250$DestroyModule r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250$DestroyModule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void configure(com.google.inject.Binder)
    {
        com.mycila.inject.jsr250.Jsr250$DestroyModule r1;
        com.google.inject.Binder r0;

        r1 := @this: com.mycila.inject.jsr250.Jsr250$DestroyModule;

        r0 := @parameter0: com.google.inject.Binder;

        interfaceinvoke r0.<com.google.inject.Binder: void requestInjection(java.lang.Object)>(r1);

        return;
    }

    void destroy()
    {
        com.mycila.inject.jsr250.Jsr250$DestroyModule r0;
        com.mycila.inject.jsr250.Jsr250Injector $r1, $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250$DestroyModule;

        $r1 = r0.<com.mycila.inject.jsr250.Jsr250$DestroyModule: com.mycila.inject.jsr250.Jsr250Injector injector>;

        if $r1 == null goto label1;

        $r2 = r0.<com.mycila.inject.jsr250.Jsr250$DestroyModule: com.mycila.inject.jsr250.Jsr250Injector injector>;

        interfaceinvoke $r2.<com.mycila.inject.jsr250.Jsr250Injector: void destroy()>();

     label1:
        return;
    }

    void <init>(com.mycila.inject.jsr250.Jsr250$1)
    {
        com.mycila.inject.jsr250.Jsr250$DestroyModule r0;
        com.mycila.inject.jsr250.Jsr250$1 r1;

        r0 := @this: com.mycila.inject.jsr250.Jsr250$DestroyModule;

        r1 := @parameter0: com.mycila.inject.jsr250.Jsr250$1;

        specialinvoke r0.<com.mycila.inject.jsr250.Jsr250$DestroyModule: void <init>()>();

        return;
    }
}
