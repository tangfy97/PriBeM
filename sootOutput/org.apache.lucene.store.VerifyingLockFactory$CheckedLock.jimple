class org.apache.lucene.store.VerifyingLockFactory$CheckedLock extends org.apache.lucene.store.Lock
{
    private org.apache.lucene.store.Lock lock;
    final org.apache.lucene.store.VerifyingLockFactory this$0;

    public void <init>(org.apache.lucene.store.VerifyingLockFactory, org.apache.lucene.store.Lock)
    {
        org.apache.lucene.store.Lock r2;
        org.apache.lucene.store.VerifyingLockFactory r1;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r0;

        r0 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        r1 := @parameter0: org.apache.lucene.store.VerifyingLockFactory;

        r2 := @parameter1: org.apache.lucene.store.Lock;

        r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.VerifyingLockFactory this$0> = r1;

        specialinvoke r0.<org.apache.lucene.store.Lock: void <init>()>();

        r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.Lock lock> = r2;

        return;
    }

    private void verify(byte)
    {
        java.net.Socket $r11;
        org.apache.lucene.store.VerifyingLockFactory $r2, $r3, $r6;
        byte $b1, b2;
        int $i0, $i3, $i4, $i5;
        java.lang.String $r4;
        java.io.OutputStream $r5;
        java.lang.RuntimeException $r12, $r13;
        java.lang.Exception $r9;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r1;
        java.io.InputStream $r7;

        r1 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        b2 := @parameter0: byte;

     label1:
        $r11 = new java.net.Socket;

        $r2 = r1.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.VerifyingLockFactory this$0>;

        $r4 = $r2.<org.apache.lucene.store.VerifyingLockFactory: java.lang.String host>;

        $r3 = r1.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.VerifyingLockFactory this$0>;

        $i0 = $r3.<org.apache.lucene.store.VerifyingLockFactory: int port>;

        specialinvoke $r11.<java.net.Socket: void <init>(java.lang.String,int)>($r4, $i0);

        $r5 = virtualinvoke $r11.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r6 = r1.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.VerifyingLockFactory this$0>;

        $b1 = $r6.<org.apache.lucene.store.VerifyingLockFactory: byte id>;

        $i4 = (int) $b1;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($i4);

        $i5 = (int) b2;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($i5);

        $r7 = virtualinvoke $r11.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i3 = virtualinvoke $r7.<java.io.InputStream: int read()>();

        virtualinvoke $r7.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        virtualinvoke $r11.<java.net.Socket: void close()>();

        if $i3 == 0 goto label2;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("lock was double acquired");

        throw $r12;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r13;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public synchronized boolean obtain(long) throws java.io.IOException
    {
        org.apache.lucene.store.Lock $r1;
        long l0;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.Lock lock>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.store.Lock: boolean obtain(long)>(l0);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: void verify(byte)>(1);

     label1:
        return $z0;
    }

    public synchronized boolean obtain() throws java.io.IOException
    {
        org.apache.lucene.store.Lock $r1;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        $r1 = r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.Lock lock>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.store.Lock: boolean obtain()>();

        return $z0;
    }

    public synchronized boolean isLocked() throws java.io.IOException
    {
        org.apache.lucene.store.Lock $r1;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        $r1 = r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.Lock lock>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.store.Lock: boolean isLocked()>();

        return $z0;
    }

    public synchronized void release() throws java.io.IOException
    {
        org.apache.lucene.store.Lock $r1;
        org.apache.lucene.store.VerifyingLockFactory$CheckedLock r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.VerifyingLockFactory$CheckedLock;

        $z0 = virtualinvoke r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: boolean isLocked()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: void verify(byte)>(0);

        $r1 = r0.<org.apache.lucene.store.VerifyingLockFactory$CheckedLock: org.apache.lucene.store.Lock lock>;

        virtualinvoke $r1.<org.apache.lucene.store.Lock: void release()>();

     label1:
        return;
    }
}
