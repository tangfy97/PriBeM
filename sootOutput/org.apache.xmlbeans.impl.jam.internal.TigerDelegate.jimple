public abstract class org.apache.xmlbeans.impl.jam.internal.TigerDelegate extends java.lang.Object
{
    private static final java.lang.String SOME_TIGER_SPECIFIC_JAVADOC_CLASS;
    private static final java.lang.String SOME_TIGER_SPECIFIC_REFLECT_CLASS;
    protected org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger;
    protected org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext;
    private static boolean m14RuntimeWarningDone;
    private static boolean m14BuildWarningDone;
    static java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate;

    public void init(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)
    {
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r2;
        org.apache.xmlbeans.impl.jam.internal.TigerDelegate r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.TigerDelegate;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext> = r1;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: void init(org.apache.xmlbeans.impl.jam.provider.JamLogger)>($r2);

        return;
    }

    public void init(org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        org.apache.xmlbeans.impl.jam.provider.JamLogger r1;
        org.apache.xmlbeans.impl.jam.internal.TigerDelegate r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.TigerDelegate;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamLogger;

        r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger> = r1;

        return;
    }

    protected void <init>()
    {
        org.apache.xmlbeans.impl.jam.internal.TigerDelegate r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.TigerDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext> = null;

        return;
    }

    protected org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()
    {
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r1;
        org.apache.xmlbeans.impl.jam.internal.TigerDelegate r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.TigerDelegate;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.TigerDelegate: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        return $r1;
    }

    protected static void issue14BuildWarning(java.lang.Throwable, org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        java.lang.Throwable r2;
        org.apache.xmlbeans.impl.jam.provider.JamLogger r0;
        java.lang.Class $r1, $r3;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: org.apache.xmlbeans.impl.jam.provider.JamLogger;

        $z0 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14BuildWarningDone>;

        if $z0 != 0 goto label4;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void warning(java.lang.String)>("This build of JAM was not made with JDK 1.5.Even though you are now running under JDK 1.5, JSR175-style annotations will not be available");

        $r1 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.jam.internal.TigerDelegate");

        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate>;

     label2:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Class)>($r3);

        if $z1 == 0 goto label3;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.Throwable)>(r2);

     label3:
        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14BuildWarningDone> = 1;

     label4:
        return;
    }

    protected static void issue14RuntimeWarning(java.lang.Throwable, org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        java.lang.Throwable r2;
        org.apache.xmlbeans.impl.jam.provider.JamLogger r0;
        java.lang.Class $r1, $r3;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: org.apache.xmlbeans.impl.jam.provider.JamLogger;

        $z0 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14RuntimeWarningDone>;

        if $z0 != 0 goto label4;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void warning(java.lang.String)>("You are running under a pre-1.5 JDK.  JSR175-style source annotations will not be available");

        $r1 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.jam.internal.TigerDelegate");

        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.Class class$org$apache$xmlbeans$impl$jam$internal$TigerDelegate>;

     label2:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Class)>($r3);

        if $z1 == 0 goto label3;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.Throwable)>(r2);

     label3:
        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14RuntimeWarningDone> = 1;

     label4:
        return;
    }

    protected static boolean isTigerJavadocAvailable(org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        java.lang.ClassNotFoundException $r0;
        org.apache.xmlbeans.impl.jam.provider.JamLogger r1;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamLogger;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.sun.javadoc.AnnotationDesc");

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: void issue14RuntimeWarning(java.lang.Throwable,org.apache.xmlbeans.impl.jam.provider.JamLogger)>($r0, r1);

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    protected static boolean isTigerReflectionAvailable(org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        java.lang.ClassNotFoundException $r0;
        org.apache.xmlbeans.impl.jam.provider.JamLogger r1;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamLogger;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.annotation.Annotation");

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: void issue14RuntimeWarning(java.lang.Throwable,org.apache.xmlbeans.impl.jam.provider.JamLogger)>($r0, r1);

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.String SOME_TIGER_SPECIFIC_REFLECT_CLASS> = "java.lang.annotation.Annotation";

        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: java.lang.String SOME_TIGER_SPECIFIC_JAVADOC_CLASS> = "com.sun.javadoc.AnnotationDesc";

        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14RuntimeWarningDone> = 0;

        <org.apache.xmlbeans.impl.jam.internal.TigerDelegate: boolean m14BuildWarningDone> = 0;

        return;
    }
}
