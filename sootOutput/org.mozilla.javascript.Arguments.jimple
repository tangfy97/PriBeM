final class org.mozilla.javascript.Arguments extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final int Id_callee;
    private static final int Id_length;
    private static final int Id_caller;
    private static final int MAX_INSTANCE_ID;
    private java.lang.Object callerObj;
    private java.lang.Object calleeObj;
    private java.lang.Object lengthObj;
    private org.mozilla.javascript.NativeCall activation;
    private java.lang.Object[] args;

    public void <init>(org.mozilla.javascript.NativeCall)
    {
        java.lang.Object[] $r4, $r6;
        java.lang.Integer $r5;
        org.mozilla.javascript.NativeFunction r7;
        org.mozilla.javascript.Scriptable $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r8;
        org.mozilla.javascript.Arguments r0;
        org.mozilla.javascript.NativeCall r1;

        r0 := @this: org.mozilla.javascript.Arguments;

        r1 := @parameter0: org.mozilla.javascript.NativeCall;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation> = r1;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.Scriptable getParentScope()>();

        virtualinvoke r0.<org.mozilla.javascript.Arguments: void setParentScope(org.mozilla.javascript.Scriptable)>($r2);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getObjectPrototype(org.mozilla.javascript.Scriptable)>($r2);

        virtualinvoke r0.<org.mozilla.javascript.Arguments: void setPrototype(org.mozilla.javascript.Scriptable)>($r3);

        $r4 = r1.<org.mozilla.javascript.NativeCall: java.lang.Object[] originalArgs>;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args> = $r4;

        $r5 = new java.lang.Integer;

        $r6 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i0 = lengthof $r6;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i0);

        r0.<org.mozilla.javascript.Arguments: java.lang.Object lengthObj> = $r5;

        r7 = r1.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeFunction function>;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object calleeObj> = r7;

        $i1 = virtualinvoke r7.<org.mozilla.javascript.NativeFunction: int getLanguageVersion()>();

        if $i1 > 130 goto label1;

        if $i1 == 0 goto label1;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object callerObj> = null;

        goto label2;

     label1:
        $r8 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object callerObj> = $r8;

     label2:
        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.Arguments r0;

        r0 := @this: org.mozilla.javascript.Arguments;

        return "Arguments";
    }

    public boolean has(int, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] $r2, $r3;
        org.mozilla.javascript.Scriptable r1;
        int i0, $i1;
        java.lang.Object $r4, $r5;
        org.mozilla.javascript.Arguments r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if 0 > i0 goto label1;

        $r2 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label1;

        $r3 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r5 = $r3[i0];

        $r4 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if $r5 == $r4 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: boolean has(int,org.mozilla.javascript.Scriptable)>(i0, r1);

        return $z0;
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] $r2, $r3;
        org.mozilla.javascript.NativeFunction r6;
        int i0, $i1;
        org.mozilla.javascript.Arguments r0;
        java.lang.String $r7;
        org.mozilla.javascript.NativeCall $r5, $r8, $r9;
        boolean $z0;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object $r4, $r10, $r11, r12, $r13;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if 0 > i0 goto label2;

        $r2 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        r12 = $r3[i0];

        $r4 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if r12 == $r4 goto label2;

        $z0 = specialinvoke r0.<org.mozilla.javascript.Arguments: boolean sharedWithActivation(int)>(i0);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        r6 = $r5.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeFunction function>;

        $r7 = virtualinvoke r6.<org.mozilla.javascript.NativeFunction: java.lang.String getParamOrVarName(int)>(i0);

        $r9 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r8 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r10 = virtualinvoke $r9.<org.mozilla.javascript.NativeCall: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>($r7, $r8);

        r12 = $r10;

        $r11 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if $r10 != $r11 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        return r12;

     label2:
        $r13 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>(i0, r1);

        return $r13;
    }

    private boolean sharedWithActivation(int)
    {
        org.mozilla.javascript.NativeFunction r2;
        int $i0, i1, $i2, i3;
        org.mozilla.javascript.Arguments r0;
        java.lang.String $r3, $r4;
        org.mozilla.javascript.NativeCall $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.Arguments;

        i1 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        r2 = $r1.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeFunction function>;

        $i0 = virtualinvoke r2.<org.mozilla.javascript.NativeFunction: int getParamCount()>();

        if i1 >= $i0 goto label4;

        $i2 = $i0 - 1;

        if i1 >= $i2 goto label3;

        $r3 = virtualinvoke r2.<org.mozilla.javascript.NativeFunction: java.lang.String getParamOrVarName(int)>(i1);

        i3 = i1 + 1;

     label1:
        if i3 >= $i0 goto label3;

        $r4 = virtualinvoke r2.<org.mozilla.javascript.NativeFunction: java.lang.String getParamOrVarName(int)>(i3);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        java.lang.Throwable $r22;
        java.lang.Object[] $r3, $r4, $r7, $r11, $r12, $r13, $r14, $r16;
        org.mozilla.javascript.NativeFunction $r18;
        int i0, $i1;
        org.mozilla.javascript.Arguments r0;
        java.lang.String $r19;
        org.mozilla.javascript.NativeCall $r10, $r17, $r20, $r21;
        boolean $z0;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object r2, $r5, $r6, $r8, $r9, $r15;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        if 0 > i0 goto label9;

        $r3 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label9;

        $r4 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r6 = $r4[i0];

        $r5 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if $r6 == $r5 goto label9;

        $z0 = specialinvoke r0.<org.mozilla.javascript.Arguments: boolean sharedWithActivation(int)>(i0);

        if $z0 == 0 goto label1;

        $r17 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r18 = $r17.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeFunction function>;

        $r19 = virtualinvoke $r18.<org.mozilla.javascript.NativeFunction: java.lang.String getParamOrVarName(int)>(i0);

        $r21 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r20 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        virtualinvoke $r21.<org.mozilla.javascript.NativeCall: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r19, $r20, r2);

        return;

     label1:
        entermonitor r0;

     label2:
        $r7 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r9 = $r7[i0];

        $r8 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if $r9 == $r8 goto label5;

        $r12 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r10 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r11 = $r10.<org.mozilla.javascript.NativeCall: java.lang.Object[] originalArgs>;

        if $r12 != $r11 goto label3;

        $r14 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Object clone()>();

        $r16 = (java.lang.Object[]) $r15;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args> = $r16;

     label3:
        $r13 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r13[i0] = r2;

        exitmonitor r0;

     label4:
        return;

     label5:
        exitmonitor r0;

     label6:
        goto label9;

     label7:
        $r22 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r22;

     label9:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(i0, r1, r2);

        return;

        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void delete(int)
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r1, $r2, $r6, $r7, $r9, $r10, $r12;
        int i0, $i1;
        org.mozilla.javascript.Arguments r0;
        org.mozilla.javascript.NativeCall $r5;
        java.lang.Object $r3, $r4, $r8, $r11;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        if 0 > i0 goto label8;

        $r1 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label8;

        entermonitor r0;

     label1:
        $r2 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r4 = $r2[i0];

        $r3 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        if $r4 == $r3 goto label4;

        $r7 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r5 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        $r6 = $r5.<org.mozilla.javascript.NativeCall: java.lang.Object[] originalArgs>;

        if $r7 != $r6 goto label2;

        $r10 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Object clone()>();

        $r12 = (java.lang.Object[]) $r11;

        r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args> = $r12;

     label2:
        $r9 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $r8 = <org.mozilla.javascript.Arguments: java.lang.Object NOT_FOUND>;

        $r9[i0] = $r8;

        exitmonitor r0;

     label3:
        return;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r13;

     label8:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void delete(int)>(i0);

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected int getMaxInstanceId()
    {
        org.mozilla.javascript.Arguments r0;

        r0 := @this: org.mozilla.javascript.Arguments;

        return 3;
    }

    protected int findInstanceIdInfo(java.lang.String)
    {
        java.lang.IllegalStateException $r7;
        byte b4, b5, b6, b7;
        int $i0, $i1, $i2, $i8, $i9, $i10;
        java.lang.String r0, r3, r4, r5, r6;
        org.mozilla.javascript.Arguments r2;
        boolean $z0;
        char $c3;

        r2 := @this: org.mozilla.javascript.Arguments;

        r0 := @parameter0: java.lang.String;

        b4 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

        r3 = null;

        r6 = null;

        r5 = null;

        r4 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 6 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(5);

        $i8 = (int) $c3;

        if $i8 != 101 goto label1;

        r3 = "callee";

        r6 = "callee";

        r5 = "callee";

        r4 = "callee";

        b4 = 1;

        b7 = 1;

        b6 = 1;

        b5 = 1;

        goto label3;

     label1:
        $i9 = (int) $c3;

        if $i9 != 104 goto label2;

        r3 = "length";

        r6 = "length";

        r5 = "length";

        r4 = "length";

        b4 = 2;

        b7 = 2;

        b6 = 2;

        b5 = 2;

        goto label3;

     label2:
        $i10 = (int) $c3;

        if $i10 != 114 goto label3;

        r3 = "caller";

        r6 = "caller";

        r5 = "caller";

        r4 = "caller";

        b4 = 3;

        b7 = 3;

        b6 = 3;

        b5 = 3;

     label3:
        if r5 == null goto label4;

        if r4 == r0 goto label4;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label4;

        b4 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 0;

     label4:
        if b7 != 0 goto label5;

        $i2 = specialinvoke r2.<org.mozilla.javascript.IdScriptableObject: int findInstanceIdInfo(java.lang.String)>(r0);

        return $i2;

     label5:
        tableswitch(b5)
        {
            case 1: goto label6;
            case 2: goto label6;
            case 3: goto label6;
            default: goto label7;
        };

     label6:
        goto label8;

     label7:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label8:
        $i1 = staticinvoke <org.mozilla.javascript.Arguments: int instanceIdInfo(int,int)>(2, b6);

        return $i1;
    }

    protected java.lang.String getInstanceIdName(int)
    {
        int i0;
        org.mozilla.javascript.Arguments r0;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return "callee";

     label2:
        return "length";

     label3:
        return "caller";

     label4:
        return null;
    }

    protected java.lang.Object getInstanceIdValue(int)
    {
        org.mozilla.javascript.UniqueTag $r1;
        int i0;
        java.lang.Object $r4, $r5, $r6, r7;
        org.mozilla.javascript.Arguments r0;
        org.mozilla.javascript.NativeCall $r2, r3;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        $r5 = r0.<org.mozilla.javascript.Arguments: java.lang.Object calleeObj>;

        return $r5;

     label2:
        $r4 = r0.<org.mozilla.javascript.Arguments: java.lang.Object lengthObj>;

        return $r4;

     label3:
        r7 = r0.<org.mozilla.javascript.Arguments: java.lang.Object callerObj>;

        $r1 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

        if r7 != $r1 goto label4;

        r7 = null;

        goto label5;

     label4:
        if r7 != null goto label5;

        $r2 = r0.<org.mozilla.javascript.Arguments: org.mozilla.javascript.NativeCall activation>;

        r3 = $r2.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeCall parentActivationCall>;

        if r3 == null goto label5;

        r7 = virtualinvoke r3.<org.mozilla.javascript.NativeCall: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>("arguments", r3);

     label5:
        return r7;

     label6:
        $r6 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getInstanceIdValue(int)>(i0);

        return $r6;
    }

    protected void setInstanceIdValue(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1, $r2;
        org.mozilla.javascript.Arguments r0;

        r0 := @this: org.mozilla.javascript.Arguments;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        r0.<org.mozilla.javascript.Arguments: java.lang.Object calleeObj> = r1;

        return;

     label2:
        r0.<org.mozilla.javascript.Arguments: java.lang.Object lengthObj> = r1;

        return;

     label3:
        if r1 == null goto label4;

        $r2 = r1;

        goto label5;

     label4:
        $r2 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

     label5:
        r0.<org.mozilla.javascript.Arguments: java.lang.Object callerObj> = $r2;

        return;

     label6:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void setInstanceIdValue(int,java.lang.Object)>(i0, r1);

        return;
    }

    java.lang.Object[] getIds(boolean)
    {
        java.lang.Object[] $r1, $r2, $r3, $r4, $r7, $r8, r9, r12;
        java.lang.Integer $r6, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, $i14;
        org.mozilla.javascript.Arguments r0;
        boolean z0, $z1, $z2, $z3;
        boolean[] r10;
        java.lang.Object r11;

        r0 := @this: org.mozilla.javascript.Arguments;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object[] getIds(boolean)>(z0);

        r9 = $r1;

        if z0 == 0 goto label9;

        $r2 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label9;

        r10 = null;

        $r3 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        i9 = lengthof $r3;

        i10 = 0;

     label1:
        $i1 = lengthof $r1;

        if i10 == $i1 goto label4;

        r11 = $r1[i10];

        $z2 = r11 instanceof java.lang.Integer;

        if $z2 == 0 goto label3;

        $r6 = (java.lang.Integer) r11;

        $i6 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if 0 > $i6 goto label3;

        $r7 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i7 = lengthof $r7;

        if $i6 >= $i7 goto label3;

        if r10 != null goto label2;

        $r8 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i8 = lengthof $r8;

        r10 = newarray (boolean)[$i8];

     label2:
        $z3 = r10[$i6];

        if $z3 != 0 goto label3;

        r10[$i6] = 1;

        $i14 = (int) -1;

        i9 = i9 + $i14;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        if i9 == 0 goto label9;

        $i2 = lengthof $r1;

        $i3 = i9 + $i2;

        r12 = newarray (java.lang.Object)[$i3];

        $i4 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r12, i9, $i4);

        r9 = r12;

        i11 = 0;

        i12 = 0;

     label5:
        $r4 = r0.<org.mozilla.javascript.Arguments: java.lang.Object[] args>;

        $i5 = lengthof $r4;

        if i12 == $i5 goto label8;

        if r10 == null goto label6;

        $z1 = r10[i12];

        if $z1 != 0 goto label7;

     label6:
        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i12);

        r12[i11] = $r13;

        i11 = i11 + 1;

     label7:
        i12 = i12 + 1;

        goto label5;

     label8:
        if i11 == i9 goto label9;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label9:
        return r9;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.Arguments: int MAX_INSTANCE_ID> = 3;

        <org.mozilla.javascript.Arguments: int Id_caller> = 3;

        <org.mozilla.javascript.Arguments: int Id_length> = 2;

        <org.mozilla.javascript.Arguments: int Id_callee> = 1;

        <org.mozilla.javascript.Arguments: long serialVersionUID> = 4275508002492040609L;

        return;
    }
}
