public class org.jdesktop.swingx.graphics.ColorUtilities extends java.lang.Object
{

    private void <init>()
    {
        org.jdesktop.swingx.graphics.ColorUtilities r0;

        r0 := @this: org.jdesktop.swingx.graphics.ColorUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float[] RGBtoHSL(java.awt.Color)
    {
        java.awt.Color r0;
        int $i0, $i1, $i2;
        float[] $r1;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r1 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float[] RGBtoHSL(int,int,int,float[])>($i0, $i1, $i2, null);

        return $r1;
    }

    public static float[] RGBtoHSL(java.awt.Color, float[])
    {
        java.awt.Color r0;
        int $i0, $i1, $i2;
        float[] r1, $r2;

        r0 := @parameter0: java.awt.Color;

        r1 := @parameter1: float[];

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r2 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float[] RGBtoHSL(int,int,int,float[])>($i0, $i1, $i2, r1);

        return $r2;
    }

    public static float[] RGBtoHSL(int, int, int)
    {
        int i0, i1, i2;
        float[] $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float[] RGBtoHSL(int,int,int,float[])>(i0, i1, i2, null);

        return $r0;
    }

    public static float[] RGBtoHSL(int, int, int, float[])
    {
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b11, $b12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, f30, f31, f32, f33;
        float[] r1;
        int $i0, i8, i9, i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.IllegalArgumentException $r2;

        i8 := @parameter0: int;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        r1 := @parameter3: float[];

        if r1 != null goto label01;

        r1 = newarray (float)[3];

        goto label02;

     label01:
        $i0 = lengthof r1;

        if $i0 >= 3 goto label02;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hsl array must have a length of at least 3");

        throw $r2;

     label02:
        if i8 >= 0 goto label03;

        i8 = 0;

        goto label04;

     label03:
        if i8 <= 255 goto label04;

        i8 = 255;

     label04:
        if i9 >= 0 goto label05;

        i9 = 0;

        goto label06;

     label05:
        if i9 <= 255 goto label06;

        i9 = 255;

     label06:
        if i10 >= 0 goto label07;

        i10 = 0;

        goto label08;

     label07:
        if i10 <= 255 goto label08;

        i10 = 255;

     label08:
        $f24 = (float) i8;

        $f25 = $f24 / 255.0F;

        $f26 = (float) i9;

        $f27 = $f26 / 255.0F;

        $f28 = (float) i10;

        $f29 = $f28 / 255.0F;

        $b11 = $f25 cmpl $f27;

        $i13 = (int) $b11;

        if $i13 <= 0 goto label09;

        f30 = $f27;

        f31 = $f25;

        goto label10;

     label09:
        f30 = $f25;

        f31 = $f27;

     label10:
        $b1 = $f29 cmpl f31;

        $i14 = (int) $b1;

        if $i14 <= 0 goto label11;

        f31 = $f29;

     label11:
        $b2 = $f29 cmpg f30;

        $i15 = (int) $b2;

        if $i15 >= 0 goto label12;

        f30 = $f29;

     label12:
        $f22 = f31 - f30;

        $f0 = f31 + f30;

        $f23 = $f0 / 2.0F;

        $f1 = $f22 - 0.01F;

        $b3 = $f1 cmpg 0.0F;

        $i16 = (int) $b3;

        if $i16 > 0 goto label13;

        f32 = 0.0F;

        f33 = 0.0F;

        goto label20;

     label13:
        $b4 = $f23 cmpg 0.5F;

        $i17 = (int) $b4;

        if $i17 >= 0 goto label14;

        $f18 = f31 + f30;

        f33 = $f22 / $f18;

        goto label15;

     label14:
        $f2 = 2.0F - f31;

        $f3 = $f2 - f30;

        f33 = $f22 / $f3;

     label15:
        $f4 = f31 - $f25;

        $f6 = $f4 / 6.0F;

        $f5 = $f22 / 2.0F;

        $f7 = $f6 + $f5;

        $f19 = $f7 / $f22;

        $f8 = f31 - $f27;

        $f10 = $f8 / 6.0F;

        $f9 = $f22 / 2.0F;

        $f11 = $f10 + $f9;

        $f20 = $f11 / $f22;

        $f12 = f31 - $f29;

        $f14 = $f12 / 6.0F;

        $f13 = $f22 / 2.0F;

        $f15 = $f14 + $f13;

        $f21 = $f15 / $f22;

        $b5 = $f25 cmpl f31;

        if $b5 != 0 goto label16;

        f32 = $f21 - $f20;

        goto label18;

     label16:
        $b6 = $f27 cmpl f31;

        if $b6 != 0 goto label17;

        $f17 = 0.33333334F + $f19;

        f32 = $f17 - $f21;

        goto label18;

     label17:
        $f16 = 0.6666667F + $f20;

        f32 = $f16 - $f19;

     label18:
        $b12 = f32 cmpg 0.0F;

        $i18 = (int) $b12;

        if $i18 >= 0 goto label19;

        f32 = f32 + 1.0F;

     label19:
        $b7 = f32 cmpl 1.0F;

        $i19 = (int) $b7;

        if $i19 <= 0 goto label20;

        f32 = f32 - 1.0F;

     label20:
        r1[0] = f32;

        r1[1] = f33;

        r1[2] = $f23;

        return r1;
    }

    public static java.awt.Color HSLtoRGB(float, float, float)
    {
        java.awt.Color $r1;
        int[] $r0;
        int $i0, $i1, $i2;
        float f0, f1, f2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: int[] HSLtoRGB(float,float,float,int[])>(f0, f1, f2, null);

        $r1 = new java.awt.Color;

        $i2 = $r0[0];

        $i1 = $r0[1];

        $i0 = $r0[2];

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>($i2, $i1, $i0);

        return $r1;
    }

    public static int[] HSLtoRGB(float, float, float, int[])
    {
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        int[] r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, $f19, f20;
        int $i0, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.IllegalArgumentException $r2;

        f16 := @parameter0: float;

        f17 := @parameter1: float;

        f18 := @parameter2: float;

        r1 := @parameter3: int[];

        if r1 != null goto label01;

        r1 = newarray (int)[3];

        goto label02;

     label01:
        $i0 = lengthof r1;

        if $i0 >= 3 goto label02;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rgb array must have a length of at least 3");

        throw $r2;

     label02:
        $b1 = f16 cmpg 0.0F;

        $i12 = (int) $b1;

        if $i12 >= 0 goto label03;

        f16 = 0.0F;

        goto label04;

     label03:
        $b2 = f16 cmpl 1.0F;

        $i13 = (int) $b2;

        if $i13 <= 0 goto label04;

        f16 = 1.0F;

     label04:
        $b6 = f17 cmpg 0.0F;

        $i14 = (int) $b6;

        if $i14 >= 0 goto label05;

        f17 = 0.0F;

        goto label06;

     label05:
        $b3 = f17 cmpl 1.0F;

        $i15 = (int) $b3;

        if $i15 <= 0 goto label06;

        f17 = 1.0F;

     label06:
        $b7 = f18 cmpg 0.0F;

        $i16 = (int) $b7;

        if $i16 >= 0 goto label07;

        f18 = 0.0F;

        goto label08;

     label07:
        $b4 = f18 cmpl 1.0F;

        $i17 = (int) $b4;

        if $i17 <= 0 goto label08;

        f18 = 1.0F;

     label08:
        $f19 = f17 - 0.01F;

        $b8 = $f19 cmpg 0.0F;

        $i18 = (int) $b8;

        if $i18 > 0 goto label09;

        $f13 = f18 * 255.0F;

        i9 = (int) $f13;

        $f14 = f18 * 255.0F;

        i10 = (int) $f14;

        $f15 = f18 * 255.0F;

        i11 = (int) $f15;

        goto label12;

     label09:
        $b5 = f18 cmpg 0.5F;

        $i19 = (int) $b5;

        if $i19 >= 0 goto label10;

        $f11 = 1.0F + f17;

        f20 = f18 * $f11;

        goto label11;

     label10:
        $f1 = f18 + f17;

        $f0 = f17 * f18;

        f20 = $f1 - $f0;

     label11:
        $f2 = 2.0F * f18;

        $f12 = $f2 - f20;

        $f3 = f16 + 0.33333334F;

        $f4 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float hue2RGB(float,float,float)>($f12, f20, $f3);

        $f5 = 255.0F * $f4;

        i9 = (int) $f5;

        $f6 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float hue2RGB(float,float,float)>($f12, f20, f16);

        $f7 = 255.0F * $f6;

        i10 = (int) $f7;

        $f8 = f16 - 0.33333334F;

        $f9 = staticinvoke <org.jdesktop.swingx.graphics.ColorUtilities: float hue2RGB(float,float,float)>($f12, f20, $f8);

        $f10 = 255.0F * $f9;

        i11 = (int) $f10;

     label12:
        r1[0] = i9;

        r1[1] = i10;

        r1[2] = i11;

        return r1;
    }

    private static float hue2RGB(float, float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14;

        f3 := @parameter0: float;

        f4 := @parameter1: float;

        f14 := @parameter2: float;

        $b0 = f14 cmpg 0.0F;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label1;

        f14 = f14 + 1.0F;

     label1:
        $b1 = f14 cmpl 1.0F;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label2;

        f14 = f14 - 1.0F;

     label2:
        $f0 = 6.0F * f14;

        $b2 = $f0 cmpg 1.0F;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label3;

        $f10 = f4 - f3;

        $f11 = $f10 * 6.0F;

        $f12 = $f11 * f14;

        $f13 = f3 + $f12;

        return $f13;

     label3:
        $f1 = 2.0F * f14;

        $b3 = $f1 cmpg 1.0F;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label4;

        return f4;

     label4:
        $f2 = 3.0F * f14;

        $b4 = $f2 cmpg 2.0F;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label5;

        $f6 = f4 - f3;

        $f5 = 0.6666667F - f14;

        $f7 = $f6 * $f5;

        $f8 = $f7 * 6.0F;

        $f9 = f3 + $f8;

        return $f9;

     label5:
        return f3;
    }
}
