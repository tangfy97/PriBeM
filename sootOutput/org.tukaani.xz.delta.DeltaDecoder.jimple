public class org.tukaani.xz.delta.DeltaDecoder extends org.tukaani.xz.delta.DeltaCoder
{

    public void <init>(int)
    {
        org.tukaani.xz.delta.DeltaDecoder r0;
        int i0;

        r0 := @this: org.tukaani.xz.delta.DeltaDecoder;

        i0 := @parameter0: int;

        specialinvoke r0.<org.tukaani.xz.delta.DeltaCoder: void <init>(int)>(i0);

        return;
    }

    public void decode(byte[], int, int)
    {
        byte[] r0, $r2, $r3;
        byte $b7, $b8, $b10, $b13;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9, $i11, $i12, $i14, i15, $i16, $i17;
        org.tukaani.xz.delta.DeltaDecoder r1;

        r1 := @this: org.tukaani.xz.delta.DeltaDecoder;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

        i15 = i0;

     label1:
        if i15 >= i2 goto label2;

        $b8 = r0[i15];

        $r2 = r1.<org.tukaani.xz.delta.DeltaDecoder: byte[] history>;

        $i4 = r1.<org.tukaani.xz.delta.DeltaDecoder: int distance>;

        $i3 = r1.<org.tukaani.xz.delta.DeltaDecoder: int pos>;

        $i5 = $i4 + $i3;

        $i6 = $i5 & 255;

        $b7 = $r2[$i6];

        $i16 = (int) $b8;

        $i17 = (int) $b7;

        $i9 = $i16 + $i17;

        $b10 = (byte) $i9;

        r0[i15] = $b10;

        $r3 = r1.<org.tukaani.xz.delta.DeltaDecoder: byte[] history>;

        $i11 = r1.<org.tukaani.xz.delta.DeltaDecoder: int pos>;

        $i12 = $i11 - 1;

        r1.<org.tukaani.xz.delta.DeltaDecoder: int pos> = $i12;

        $i14 = $i11 & 255;

        $b13 = r0[i15];

        $r3[$i14] = $b13;

        i15 = i15 + 1;

        goto label1;

     label2:
        return;
    }
}
