public class com.hp.hpl.jena.n3.IRIResolver extends java.lang.Object
{
    private static java.lang.String globalBase;
    static final org.apache.jena.iri.IRI cwd;
    static final org.apache.jena.iri.IRIFactory factory;
    private final org.apache.jena.iri.IRI base;
    private static boolean showExceptions;

    public static java.lang.String resolveFileURL(java.lang.String) throws org.apache.jena.iri.IRIException
    {
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r0, $r3, $r4, $r8, $r9;
        org.apache.jena.iri.IRI $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI resolve(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("./");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String resolveFileURL(java.lang.String)>($r8);

        return $r9;

     label1:
        $r4 = virtualinvoke $r2.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String resolve(java.lang.String, java.lang.String) throws com.hp.hpl.jena.n3.JenaURIException
    {
        java.lang.String r0, r1, $r4;
        org.apache.jena.iri.IRI $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI resolveIRI(java.lang.String,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r4;
    }

    private static org.apache.jena.iri.IRI resolveIRI(java.lang.String, java.lang.String)
    {
        org.apache.jena.iri.IRIFactory $r1, $r4;
        java.lang.String r0, r3, $r6, $r7;
        org.apache.jena.iri.IRI $r2, $r5, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r0);

        $z0 = virtualinvoke $r2.<org.apache.jena.iri.IRI: boolean isAbsolute()>();

        if $z0 == 0 goto label1;

        $r12 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        $r13 = virtualinvoke $r12.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r2);

        return $r13;

     label1:
        $r4 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory>;

        $r5 = virtualinvoke $r4.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r3);

        $r6 = "file";

        $r7 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label2;

        $r9 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        $r10 = virtualinvoke $r9.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r5);

        $r11 = virtualinvoke $r10.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r2);

        return $r11;

     label2:
        $r8 = virtualinvoke $r5.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r2);

        return $r8;
    }

    public void <init>()
    {
        com.hp.hpl.jena.n3.IRIResolver r0;

        r0 := @this: com.hp.hpl.jena.n3.IRIResolver;

        specialinvoke r0.<com.hp.hpl.jena.n3.IRIResolver: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.n3.IRIResolver r0;
        java.lang.String r4;
        org.apache.jena.iri.IRI $r1, $r2, $r3;

        r0 := @this: com.hp.hpl.jena.n3.IRIResolver;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r4 != null goto label1;

        r4 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String chooseBaseURI()>();

     label1:
        $r1 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>(r4);

        $r3 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        r0.<com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI base> = $r3;

        return;
    }

    public java.lang.String getBaseIRI()
    {
        com.hp.hpl.jena.n3.IRIResolver r0;
        java.lang.String $r2;
        org.apache.jena.iri.IRI $r1;

        r0 := @this: com.hp.hpl.jena.n3.IRIResolver;

        $r1 = r0.<com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI base>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String resolve(java.lang.String)
    {
        com.hp.hpl.jena.n3.IRIResolver r0;
        java.lang.String r1, $r5;
        org.apache.jena.iri.IRI $r2, $r3, $r4;

        r0 := @this: com.hp.hpl.jena.n3.IRIResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI base>;

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI resolve(java.lang.String)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r5;
    }

    private static org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)
    {
        org.apache.jena.iri.IRIException $r2;
        com.hp.hpl.jena.n3.JenaURIException $r3;
        org.apache.jena.iri.IRI r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        $z0 = <com.hp.hpl.jena.n3.IRIResolver: boolean showExceptions>;

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        if $z1 == 0 goto label4;

     label1:
        $r1 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        virtualinvoke $r1.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI construct(org.apache.jena.iri.IRI)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.hp.hpl.jena.n3.JenaURIException;

        specialinvoke $r3.<com.hp.hpl.jena.n3.JenaURIException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return r0;

        catch org.apache.jena.iri.IRIException from label1 to label2 with label3;
    }

    public static void suppressExceptions()
    {
        <com.hp.hpl.jena.n3.IRIResolver: boolean showExceptions> = 0;

        return;
    }

    public static java.lang.String resolveGlobal(java.lang.String)
    {
        java.lang.String r0, $r4;
        org.apache.jena.iri.IRI $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI resolve(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String chooseBaseURI()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String chooseBaseURI(java.lang.String)>(null);

        return $r0;
    }

    public static java.lang.String chooseBaseURI(java.lang.String)
    {
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r1 = "file:.";

     label1:
        $r0 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String resolveGlobal(java.lang.String)>(r1);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r14;
        org.apache.jena.iri.IRIFactory $r1, $r2, $r3, $r5, $r13;
        org.apache.jena.iri.IRIException $r6;
        java.lang.String $r0, $r4, $r10, $r12;
        org.apache.jena.iri.IRI r15;
        java.io.PrintStream $r8;
        java.lang.StringBuilder $r7, $r9, $r11;

        <com.hp.hpl.jena.n3.IRIResolver: java.lang.String globalBase> = "http://localhost/LocalHostBase/";

     label1:
        $r0 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String toURL(java.lang.String)>(".");

        <com.hp.hpl.jena.n3.IRIResolver: java.lang.String globalBase> = $r0;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        $r1 = new org.apache.jena.iri.IRIFactory;

        $r2 = staticinvoke <org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRIFactory jenaImplementation()>();

        specialinvoke $r1.<org.apache.jena.iri.IRIFactory: void <init>(org.apache.jena.iri.IRIFactory)>($r2);

        <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory> = $r1;

        $r3 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory>;

        virtualinvoke $r3.<org.apache.jena.iri.IRIFactory: void setSameSchemeRelativeReferences(java.lang.String)>("file");

     label5:
        $r5 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory>;

        $r4 = <com.hp.hpl.jena.n3.IRIResolver: java.lang.String globalBase>;

        r15 = virtualinvoke $r5.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI construct(java.lang.String)>($r4);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected IRIException in initializer: ");

        $r10 = virtualinvoke $r6.<org.apache.jena.iri.IRIException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRIFactory factory>;

        r15 = virtualinvoke $r13.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("file:///");

     label8:
        <com.hp.hpl.jena.n3.IRIResolver: org.apache.jena.iri.IRI cwd> = r15;

        <com.hp.hpl.jena.n3.IRIResolver: boolean showExceptions> = 1;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch org.apache.jena.iri.IRIException from label5 to label6 with label7;
    }
}
