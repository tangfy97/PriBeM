public class ucar.nc2.ft.fmrc.Fmrc extends java.lang.Object
{
    private static org.slf4j.Logger logger;
    private final thredds.inventory.DatasetCollectionManager manager;
    private final thredds.inventory.FeatureCollectionConfig config;
    private final java.lang.Object lock;
    private ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset;
    private volatile boolean forceProto;
    private volatile long lastInvChanged;
    private volatile long lastProtoChanged;

    public static ucar.nc2.ft.fmrc.Fmrc open(java.lang.String, java.util.Formatter) throws java.io.IOException
    {
        thredds.inventory.FeatureCollectionConfig $r6, $r11;
        ucar.nc2.ft.fmrc.Fmrc $r1, $r4, $r10;
        thredds.inventory.DatasetCollectionFromCatalog $r9;
        thredds.inventory.NcmlCollectionReader $r3;
        java.util.Formatter r2;
        thredds.inventory.DatasetCollectionManager $r5;
        java.lang.String r0;
        org.jdom.Element $r7, $r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Formatter;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("catalog:");

        if $z0 == 0 goto label1;

        $r9 = new thredds.inventory.DatasetCollectionFromCatalog;

        specialinvoke $r9.<thredds.inventory.DatasetCollectionFromCatalog: void <init>(java.lang.String)>(r0);

        $r10 = new ucar.nc2.ft.fmrc.Fmrc;

        $r11 = new thredds.inventory.FeatureCollectionConfig;

        specialinvoke $r11.<thredds.inventory.FeatureCollectionConfig: void <init>()>();

        specialinvoke $r10.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.DatasetCollectionManager,thredds.inventory.FeatureCollectionConfig)>($r9, $r11);

        return $r10;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".ncml");

        if $z1 == 0 goto label3;

        $r3 = staticinvoke <thredds.inventory.NcmlCollectionReader: thredds.inventory.NcmlCollectionReader open(java.lang.String,java.util.Formatter)>(r0, r2);

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = new ucar.nc2.ft.fmrc.Fmrc;

        $r5 = virtualinvoke $r3.<thredds.inventory.NcmlCollectionReader: thredds.inventory.DatasetCollectionManager getDatasetManager()>();

        $r6 = new thredds.inventory.FeatureCollectionConfig;

        specialinvoke $r6.<thredds.inventory.FeatureCollectionConfig: void <init>()>();

        specialinvoke $r4.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.DatasetCollectionManager,thredds.inventory.FeatureCollectionConfig)>($r5, $r6);

        $r7 = virtualinvoke $r3.<thredds.inventory.NcmlCollectionReader: org.jdom.Element getNcmlOuter()>();

        $r8 = virtualinvoke $r3.<thredds.inventory.NcmlCollectionReader: org.jdom.Element getNcmlInner()>();

        virtualinvoke $r4.<ucar.nc2.ft.fmrc.Fmrc: void setNcml(org.jdom.Element,org.jdom.Element)>($r7, $r8);

        return $r4;

     label3:
        $r1 = new ucar.nc2.ft.fmrc.Fmrc;

        specialinvoke $r1.<ucar.nc2.ft.fmrc.Fmrc: void <init>(java.lang.String,java.util.Formatter)>(r0, r2);

        return $r1;
    }

    public static ucar.nc2.ft.fmrc.Fmrc open(thredds.inventory.FeatureCollectionConfig, java.util.Formatter) throws java.io.IOException
    {
        thredds.inventory.FeatureCollectionConfig r0;
        ucar.nc2.ft.fmrc.Fmrc $r2, $r6;
        thredds.inventory.DatasetCollectionFromCatalog $r4;
        java.util.Formatter r3;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @parameter0: thredds.inventory.FeatureCollectionConfig;

        r3 := @parameter1: java.util.Formatter;

        $r1 = r0.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("catalog:");

        if $z0 == 0 goto label1;

        $r4 = new thredds.inventory.DatasetCollectionFromCatalog;

        $r5 = r0.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        specialinvoke $r4.<thredds.inventory.DatasetCollectionFromCatalog: void <init>(java.lang.String)>($r5);

        $r6 = new ucar.nc2.ft.fmrc.Fmrc;

        specialinvoke $r6.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.DatasetCollectionManager,thredds.inventory.FeatureCollectionConfig)>($r4, r0);

        return $r6;

     label1:
        $r2 = new ucar.nc2.ft.fmrc.Fmrc;

        specialinvoke $r2.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.FeatureCollectionConfig,java.util.Formatter)>(r0, r3);

        return $r2;
    }

    private void <init>(java.lang.String, java.util.Formatter) throws java.io.IOException
    {
        thredds.inventory.FeatureCollectionConfig $r5, $r6;
        thredds.inventory.DatasetCollectionManager $r4;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.lang.Object $r1;
        java.lang.String r2;
        java.util.Formatter r3;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.Fmrc: java.lang.Object lock> = $r1;

        r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto> = 0;

        $r4 = staticinvoke <thredds.inventory.DatasetCollectionManager: thredds.inventory.DatasetCollectionManager open(java.lang.String,java.lang.String,java.util.Formatter)>(r2, null, r3);

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager> = $r4;

        $r5 = new thredds.inventory.FeatureCollectionConfig;

        specialinvoke $r5.<thredds.inventory.FeatureCollectionConfig: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config> = $r5;

        $r6 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r6.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec> = r2;

        return;
    }

    private void <init>(thredds.inventory.FeatureCollectionConfig, java.util.Formatter)
    {
        thredds.inventory.FeatureCollectionConfig r3;
        thredds.inventory.DatasetCollectionManager $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.lang.Object $r1;
        java.util.Formatter r4;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r3 := @parameter0: thredds.inventory.FeatureCollectionConfig;

        r4 := @parameter1: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.Fmrc: java.lang.Object lock> = $r1;

        r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto> = 0;

        $r2 = new thredds.inventory.DatasetCollectionManager;

        specialinvoke $r2.<thredds.inventory.DatasetCollectionManager: void <init>(thredds.inventory.FeatureCollectionConfig,java.util.Formatter)>(r3, r4);

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager> = $r2;

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config> = r3;

        return;
    }

    public void <init>(thredds.inventory.DatasetCollectionManager, thredds.inventory.FeatureCollectionConfig)
    {
        thredds.inventory.FeatureCollectionConfig r3;
        thredds.inventory.DatasetCollectionManager r2;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r2 := @parameter0: thredds.inventory.DatasetCollectionManager;

        r3 := @parameter1: thredds.inventory.FeatureCollectionConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.Fmrc: java.lang.Object lock> = $r1;

        r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto> = 0;

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager> = r2;

        r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config> = r3;

        return;
    }

    public void setNcml(org.jdom.Element, org.jdom.Element)
    {
        thredds.inventory.FeatureCollectionConfig $r1, $r5;
        ucar.nc2.ft.fmrc.Fmrc r0;
        thredds.inventory.FeatureCollectionConfig$ProtoConfig $r3;
        org.jdom.Element r2, r4;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r2 := @parameter0: org.jdom.Element;

        r4 := @parameter1: org.jdom.Element;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r3 = $r1.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$ProtoConfig protoConfig>;

        $r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: org.jdom.Element outerNcml> = r2;

        $r5 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r5.<thredds.inventory.FeatureCollectionConfig: org.jdom.Element innerNcml> = r4;

        return;
    }

    public void close()
    {
        thredds.inventory.DatasetCollectionManager $r1;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: void close()>();

        return;
    }

    public thredds.inventory.CollectionManager getManager()
    {
        thredds.inventory.DatasetCollectionManager $r1;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        return $r1;
    }

    public ucar.nc2.ft.fmrc.FmrcInv getFmrcInv(java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.Fmrc r0;
        ucar.nc2.ft.fmrc.FmrcInv $r2;
        java.util.Formatter r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: java.util.Formatter;

        $r2 = specialinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcInv makeFmrcInv(java.util.Formatter)>(r1);

        return $r2;
    }

    public ucar.nc2.units.DateRange getDateRangeForRun(java.util.Date)
    {
        ucar.nc2.units.DateRange $r3;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.util.Date r1;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: java.util.Date;

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.units.DateRange getDateRangeForRun(java.util.Date)>(r1);

        return $r3;
    }

    public ucar.nc2.units.DateRange getDateRangeForOffset(double)
    {
        ucar.nc2.units.DateRange $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        double d0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.units.DateRange getDateRangeForOffset(double)>(d0);

        return $r2;
    }

    public java.util.List getRunDates() throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        java.util.List $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: java.util.List getRunDates()>();

        return $r2;
    }

    public java.util.List getForecastDates() throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        java.util.List $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: java.util.List getForecastDates()>();

        return $r2;
    }

    public double[] getForecastOffsets() throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        double[] $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: double[] getForecastOffsets()>();

        return $r2;
    }

    public ucar.nc2.dt.GridDataset getDataset2D(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r3;
        ucar.nc2.ft.fmrc.Fmrc r0;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getNetcdfDataset2D(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r3;
    }

    public ucar.nc2.dt.GridDataset getDatasetBest() throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        ucar.nc2.dt.GridDataset $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getBest()>();

        return $r2;
    }

    public ucar.nc2.dt.GridDataset getDatasetBest(thredds.inventory.FeatureCollectionConfig$BestDataset) throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r3;
        ucar.nc2.ft.fmrc.Fmrc r0;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;
        thredds.inventory.FeatureCollectionConfig$BestDataset r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: thredds.inventory.FeatureCollectionConfig$BestDataset;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getBest(thredds.inventory.FeatureCollectionConfig$BestDataset)>(r1);

        return $r3;
    }

    public ucar.nc2.dt.GridDataset getRunTimeDataset(java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r3;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.util.Date r1;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: java.util.Date;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getRunTimeDataset(java.util.Date)>(r1);

        return $r3;
    }

    public ucar.nc2.dt.GridDataset getConstantForecastDataset(java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r3;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.util.Date r1;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: java.util.Date;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getConstantForecastDataset(java.util.Date)>(r1);

        return $r3;
    }

    public ucar.nc2.dt.GridDataset getConstantOffsetDataset(double) throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;
        ucar.nc2.ft.fmrc.FmrcDataset $r1;
        double d0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        d0 := @parameter0: double;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset getConstantOffsetDataset(double)>(d0);

        return $r2;
    }

    public void updateProto()
    {
        ucar.nc2.ft.fmrc.Fmrc r0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto> = 1;

        return;
    }

    public void update()
    {
        ucar.nc2.ft.fmrc.FmrcInv $r30;
        boolean z0, $z1;
        java.lang.StringBuilder $r3, $r7, $r8, $r9, $r15, $r19, $r20, $r23, $r27, $r28;
        java.lang.Throwable $r13, $r14, $r22;
        long $l0, $l1;
        java.lang.String $r6, $r10, $r18, $r21, $r26, $r29;
        thredds.inventory.FeatureCollectionConfig $r5, $r12, $r17, $r25;
        ucar.nc2.ft.fmrc.Fmrc r0;
        org.slf4j.Logger $r4, $r16, $r24, $r32;
        ucar.nc2.ft.fmrc.FmrcDataset $r2, $r11, $r31;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        z0 = r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto>;

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        if $r2 != null goto label05;

     label02:
        $r11 = new ucar.nc2.ft.fmrc.FmrcDataset;

        $r12 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        specialinvoke $r11.<ucar.nc2.ft.fmrc.FmrcDataset: void <init>(thredds.inventory.FeatureCollectionConfig)>($r12);

        r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset> = $r11;

     label03:
        goto label05;

     label04:
        $r22 := @caughtexception;

        $r24 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r26 = $r25.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": initial fmrcDataset creation failed");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r29, $r22);

     label05:
        $r30 = specialinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcInv makeFmrcInv(java.util.Formatter)>(null);

        $r31 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        virtualinvoke $r31.<ucar.nc2.ft.fmrc.FmrcDataset: void setInventory(ucar.nc2.ft.fmrc.FmrcInv,boolean)>($r30, z0);

        $r32 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $z1 = interfaceinvoke $r32.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z1 == 0 goto label06;

        $r4 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r6 = $r5.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make new Dataset, new proto = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r10);

     label06:
        if z0 == 0 goto label07;

        r0.<ucar.nc2.ft.fmrc.Fmrc: boolean forceProto> = 0;

     label07:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<ucar.nc2.ft.fmrc.Fmrc: long lastInvChanged> = $l0;

        if z0 == 0 goto label08;

        $l1 = r0.<ucar.nc2.ft.fmrc.Fmrc: long lastInvChanged>;

        r0.<ucar.nc2.ft.fmrc.Fmrc: long lastProtoChanged> = $l1;

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        $r16 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r18 = $r17.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": makeFmrcInv failed");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>($r21);

     label10:
        exitmonitor $r1;

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r13;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean checkInvState(long) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.Fmrc r0;
        byte $b2;
        int $i3;
        long l0, $l1;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        l0 := @parameter0: long;

        $l1 = r0.<ucar.nc2.ft.fmrc.Fmrc: long lastInvChanged>;

        $b2 = $l1 cmp l0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean checkProtoState(long) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.Fmrc r0;
        byte $b2;
        int $i3;
        long l0, $l1;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        l0 := @parameter0: long;

        $l1 = r0.<ucar.nc2.ft.fmrc.Fmrc: long lastProtoChanged>;

        $b2 = $l1 cmp l0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void checkNeeded(boolean)
    {
        java.lang.Throwable $r6, $r7, $r16;
        thredds.inventory.DatasetCollectionManager $r3, $r4, $r5;
        java.lang.String $r11, $r14, $r20, $r23;
        boolean z0, $z1, $z2;
        thredds.inventory.FeatureCollectionConfig $r10, $r19;
        ucar.nc2.ft.fmrc.Fmrc r0;
        org.slf4j.Logger $r9, $r18;
        ucar.nc2.ft.fmrc.FmrcDataset $r2;
        java.lang.RuntimeException $r15, $r24;
        java.lang.Object $r1;
        java.lang.StringBuilder $r8, $r12, $r13, $r17, $r21, $r22;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.ft.fmrc.Fmrc: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        if $r2 != null goto label06;

     label02:
        $r5 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        virtualinvoke $r5.<thredds.inventory.DatasetCollectionManager: boolean rescan()>();

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void update()>();

     label03:
        exitmonitor $r1;

     label04:
        return;

     label05:
        $r16 := @caughtexception;

        $r18 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r20 = $r19.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": rescan failed");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>($r23);

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        throw $r24;

     label06:
        if z0 != 0 goto label08;

        $r4 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        $z2 = virtualinvoke $r4.<thredds.inventory.DatasetCollectionManager: boolean isRescanNeeded()>();

        if $z2 != 0 goto label08;

        exitmonitor $r1;

     label07:
        return;

     label08:
        $r3 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        $z1 = virtualinvoke $r3.<thredds.inventory.DatasetCollectionManager: boolean rescan()>();

        if $z1 != 0 goto label11;

     label09:
        exitmonitor $r1;

     label10:
        return;

     label11:
        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void update()>();

     label12:
        goto label14;

     label13:
        $r7 := @caughtexception;

        $r9 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r11 = $r10.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": rescan failed");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r14);

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r15;

     label14:
        exitmonitor $r1;

     label15:
        goto label18;

     label16:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label17:
        throw $r6;

     label18:
        return;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label04 with label16;
        catch java.lang.Throwable from label05 to label07 with label16;
        catch java.lang.Throwable from label08 to label10 with label16;
        catch java.lang.Throwable from label11 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private ucar.nc2.ft.fmrc.FmrcInv makeFmrcInv(java.util.Formatter) throws java.io.IOException
    {
        thredds.inventory.DatasetCollectionManager $r3, $r11, $r37;
        java.util.Set $r29;
        ucar.nc2.ft.fmrc.FmrInv $r41, $r45, r69, r70;
        java.lang.StringBuilder $r9, $r10, $r13, $r19, $r21, $r24, $r25, $r27, $r28, $r30, $r46, $r48, $r51, $r52, $r54, $r60, $r62, $r64, $r65;
        thredds.inventory.FeatureCollectionConfig$FmrcConfig $r16;
        java.lang.Throwable $r56;
        java.lang.Object[] $r32, $r42;
        java.util.ArrayList $r1;
        java.lang.String $r12, $r14, $r23, $r31, $r43, $r44, $r50, $r53, $r55, $r63, $r66, $r67;
        java.io.IOException $r59;
        java.lang.RuntimeException $r58;
        org.jdom.Element $r36;
        java.util.Date $r26, $r39;
        ucar.nc2.ft.fmrc.FmrcInv $r8;
        java.util.Formatter r6;
        thredds.inventory.MFile r68;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r4;
        java.util.HashMap $r0;
        int $i0;
        thredds.inventory.FeatureCollectionConfig $r15, $r22, $r35, $r49;
        ucar.nc2.ft.fmrc.Fmrc r2;
        org.slf4j.Logger $r18, $r20, $r34, $r47, $r57, $r61;
        java.util.Iterator $r5, $r7;
        java.lang.Object $r17, $r33, $r40;
        ucar.nc2.ft.fmrc.GridDatasetInv $r38;

        r2 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r6 := @parameter0: java.util.Formatter;

     label01:
        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        $r4 = virtualinvoke $r3.<thredds.inventory.DatasetCollectionManager: java.util.List getFiles()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r33 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r68 = (thredds.inventory.MFile) $r33;

        $r34 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $z2 = interfaceinvoke $r34.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label03;

        $r47 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc: ");

        $r49 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r50 = $r49.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": file=");

        $r53 = interfaceinvoke r68.<thredds.inventory.MFile: java.lang.String getPath()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void debug(java.lang.String)>($r55);

     label03:
        $r37 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        $r35 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r36 = $r35.<thredds.inventory.FeatureCollectionConfig: org.jdom.Element innerNcml>;

        $r38 = staticinvoke <ucar.nc2.ft.fmrc.GridDatasetInv: ucar.nc2.ft.fmrc.GridDatasetInv open(thredds.inventory.CollectionManager,thredds.inventory.MFile,org.jdom.Element)>($r37, r68, $r36);

     label04:
        goto label06;

     label05:
        $r59 := @caughtexception;

        $r61 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error opening ");

        $r63 = interfaceinvoke r68.<thredds.inventory.MFile: java.lang.String getPath()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(skipped)");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r67 = virtualinvoke $r59.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r61.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>($r66, $r67);

        goto label02;

     label06:
        $r39 = virtualinvoke $r38.<ucar.nc2.ft.fmrc.GridDatasetInv: java.util.Date getRunDate()>();

        if r6 == null goto label07;

        $r42 = newarray (java.lang.Object)[2];

        $r43 = interfaceinvoke r68.<thredds.inventory.MFile: java.lang.String getPath()>();

        $r42[0] = $r43;

        $r44 = virtualinvoke $r38.<ucar.nc2.ft.fmrc.GridDatasetInv: java.lang.String getRunDateString()>();

        $r42[1] = $r44;

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  opened %s rundate = %s%n", $r42);

     label07:
        $r40 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r39);

        $r45 = (ucar.nc2.ft.fmrc.FmrInv) $r40;

        r69 = $r45;

        if $r45 != null goto label08;

        $r41 = new ucar.nc2.ft.fmrc.FmrInv;

        specialinvoke $r41.<ucar.nc2.ft.fmrc.FmrInv: void <init>(java.util.Date)>($r39);

        r69 = $r41;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r41);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r41);

     label08:
        virtualinvoke r69.<ucar.nc2.ft.fmrc.FmrInv: void addDataset(ucar.nc2.ft.fmrc.GridDatasetInv,java.util.Formatter)>($r38, r6);

        goto label02;

     label09:
        if r6 == null goto label10;

        $r32 = newarray (java.lang.Object)[0];

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r32);

     label10:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r7 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r17 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r70 = (ucar.nc2.ft.fmrc.FmrInv) $r17;

        virtualinvoke r70.<ucar.nc2.ft.fmrc.FmrInv: void finish()>();

        $r18 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $z1 = interfaceinvoke $r18.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label12;

        $r20 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc: spec=");

        $r22 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r23 = $r22.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fmr rundate=");

        $r26 = virtualinvoke r70.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nfiles= ");

        $r29 = virtualinvoke r70.<ucar.nc2.ft.fmrc.FmrInv: java.util.Set getFiles()>();

        $i0 = interfaceinvoke $r29.<java.util.Set: int size()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r31);

     label12:
        goto label11;

     label13:
        $r8 = new ucar.nc2.ft.fmrc.FmrcInv;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fmrc:");

        $r11 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.DatasetCollectionManager manager>;

        $r12 = virtualinvoke $r11.<thredds.inventory.DatasetCollectionManager: java.lang.String getCollectionName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r2.<ucar.nc2.ft.fmrc.Fmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r16 = $r15.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $z0 = $r16.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: boolean regularize>;

        specialinvoke $r8.<ucar.nc2.ft.fmrc.FmrcInv: void <init>(java.lang.String,java.util.List,boolean)>($r14, $r1, $z0);

     label14:
        return $r8;

     label15:
        $r56 := @caughtexception;

        $r57 = <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger>;

        interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("makeFmrcInv", $r56);

        $r58 = new java.lang.RuntimeException;

        specialinvoke $r58.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r56);

        throw $r58;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label14 with label15;
    }

    public void showDetails(java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset $r2;
        ucar.nc2.ft.fmrc.Fmrc r0;
        java.util.Formatter r1;

        r0 := @this: ucar.nc2.ft.fmrc.Fmrc;

        r1 := @parameter0: java.util.Formatter;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r2 = r0.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.ft.fmrc.FmrcDataset fmrcDataset>;

        virtualinvoke $r2.<ucar.nc2.ft.fmrc.FmrcDataset: void showDetails(java.util.Formatter)>(r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r3;
        ucar.nc2.ft.fmrc.Fmrc $r1;
        java.lang.Object[] $r2;
        java.lang.String[] r4;
        java.util.Formatter $r0;

        r4 := @parameter0: java.lang.String[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = new ucar.nc2.ft.fmrc.Fmrc;

        specialinvoke $r1.<ucar.nc2.ft.fmrc.Fmrc: void <init>(java.lang.String,java.util.Formatter)>("C:/data/ft/grid/namExtract/#yyyyMMdd_HHmm#.*nc$", $r0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r0;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("errlog = %s%n", $r2);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/fmrc/Fmrc;");

        <ucar.nc2.ft.fmrc.Fmrc: org.slf4j.Logger logger> = $r0;

        return;
    }
}
