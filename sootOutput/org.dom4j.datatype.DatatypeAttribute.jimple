public class org.dom4j.datatype.DatatypeAttribute extends org.dom4j.tree.AbstractAttribute implements com.sun.msv.datatype.SerializationContext, org.relaxng.datatype.ValidationContext
{
    private org.dom4j.Element parent;
    private org.dom4j.QName qname;
    private com.sun.msv.datatype.xsd.XSDatatype datatype;
    private java.lang.Object data;
    private java.lang.String text;

    public void <init>(org.dom4j.QName, com.sun.msv.datatype.xsd.XSDatatype)
    {
        com.sun.msv.datatype.xsd.XSDatatype r2;
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.QName r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: org.dom4j.QName;

        r2 := @parameter1: com.sun.msv.datatype.xsd.XSDatatype;

        specialinvoke r0.<org.dom4j.tree.AbstractAttribute: void <init>()>();

        r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.QName qname> = r1;

        r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype> = r2;

        return;
    }

    public void <init>(org.dom4j.QName, com.sun.msv.datatype.xsd.XSDatatype, java.lang.String)
    {
        com.sun.msv.datatype.xsd.XSDatatype r2;
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.QName r1;
        java.lang.Object $r4;
        java.lang.String r3;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: org.dom4j.QName;

        r2 := @parameter1: com.sun.msv.datatype.xsd.XSDatatype;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.AbstractAttribute: void <init>()>();

        r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.QName qname> = r1;

        r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype> = r2;

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.String text> = r3;

        $r4 = virtualinvoke r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object convertToValue(java.lang.String)>(r3);

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object data> = $r4;

        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.datatype.DatatypeAttribute r1;
        java.lang.StringBuffer $r0, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15;
        int $i0;
        java.lang.String $r3, $r7, $r10, $r16;
        java.lang.Class $r2;
        java.lang.Object $r13;

        r1 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [Attribute: name ");

        $r7 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: java.lang.String getQualifiedName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value \"");

        $r10 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: java.lang.String getValue()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" data: ");

        $r13 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object getData()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    public com.sun.msv.datatype.xsd.XSDatatype getXSDatatype()
    {
        com.sun.msv.datatype.xsd.XSDatatype $r1;
        org.dom4j.datatype.DatatypeAttribute r0;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        return $r1;
    }

    public java.lang.String getNamespacePrefix(java.lang.String)
    {
        org.dom4j.Namespace $r3;
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.Element $r1;
        java.lang.String r2, $r4;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.Element getParent()>();

        if $r1 == null goto label1;

        $r3 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Namespace getNamespaceForURI(java.lang.String)>(r2);

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.dom4j.Namespace: java.lang.String getPrefix()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getBaseUri()
    {
        org.dom4j.datatype.DatatypeAttribute r0;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        return null;
    }

    public boolean isNotation(java.lang.String)
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean isUnparsedEntity(java.lang.String)
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    public java.lang.String resolveNamespacePrefix(java.lang.String)
    {
        org.dom4j.Namespace $r4;
        org.dom4j.datatype.DatatypeAttribute r1;
        org.dom4j.Element $r3;
        java.lang.String r0, $r2, $r5, $r6;
        boolean $z0;

        r1 := @this: org.dom4j.datatype.DatatypeAttribute;

        r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: java.lang.String getNamespacePrefix()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: java.lang.String getNamespaceURI()>();

        return $r6;

     label1:
        $r3 = virtualinvoke r1.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.Element getParent()>();

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)>(r0);

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<org.dom4j.Namespace: java.lang.String getURI()>();

        return $r5;

     label2:
        return null;
    }

    public org.dom4j.QName getQName()
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.QName qname>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.String text>;

        return $r1;
    }

    public void setValue(java.lang.String)
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.dom4j.datatype.DatatypeAttribute: void validate(java.lang.String)>(r1);

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.String text> = r1;

        $r2 = virtualinvoke r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object convertToValue(java.lang.String)>(r1);

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object data> = $r2;

        return;
    }

    public java.lang.Object getData()
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object data>;

        return $r1;
    }

    public void setData(java.lang.Object)
    {
        com.sun.msv.datatype.xsd.XSDatatype $r2;
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        $r3 = interfaceinvoke $r2.<com.sun.msv.datatype.xsd.XSDatatype: java.lang.String convertToLexicalValue(java.lang.Object,com.sun.msv.datatype.SerializationContext)>(r1, r0);

        virtualinvoke r0.<org.dom4j.datatype.DatatypeAttribute: void validate(java.lang.String)>($r3);

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.String text> = $r3;

        r0.<org.dom4j.datatype.DatatypeAttribute: java.lang.Object data> = r1;

        return;
    }

    public org.dom4j.Element getParent()
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.Element $r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.Element parent>;

        return $r1;
    }

    public void setParent(org.dom4j.Element)
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        org.dom4j.Element r1;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: org.dom4j.Element;

        r0.<org.dom4j.datatype.DatatypeAttribute: org.dom4j.Element parent> = r1;

        return;
    }

    public boolean supportsParent()
    {
        org.dom4j.datatype.DatatypeAttribute r0;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        return 1;
    }

    public boolean isReadOnly()
    {
        org.dom4j.datatype.DatatypeAttribute r0;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        return 0;
    }

    protected void validate(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Throwable $r3;
        com.sun.msv.datatype.xsd.XSDatatype $r2;
        org.dom4j.datatype.DatatypeAttribute r0;
        java.lang.String r1, $r5;
        java.lang.IllegalArgumentException $r6;
        org.relaxng.datatype.DatatypeException $r7;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        interfaceinvoke $r2.<com.sun.msv.datatype.xsd.XSDatatype: void checkValid(java.lang.String,org.relaxng.datatype.ValidationContext)>(r1, r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = (org.relaxng.datatype.DatatypeException) $r3;

        $r5 = virtualinvoke $r7.<org.relaxng.datatype.DatatypeException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label4:
        return;

        catch org.relaxng.datatype.DatatypeException from label1 to label2 with label3;
    }

    protected java.lang.Object convertToValue(java.lang.String)
    {
        org.dom4j.datatype.DatatypeAttribute r0;
        com.sun.msv.datatype.DatabindableDatatype $r7;
        com.sun.msv.datatype.xsd.XSDatatype $r1, $r3, r5;
        java.lang.Object $r4, $r6;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.dom4j.datatype.DatatypeAttribute;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        $z0 = $r1 instanceof com.sun.msv.datatype.DatabindableDatatype;

        if $z0 == 0 goto label1;

        r5 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        $r7 = (com.sun.msv.datatype.DatabindableDatatype) r5;

        $r6 = interfaceinvoke $r7.<com.sun.msv.datatype.DatabindableDatatype: java.lang.Object createJavaObject(java.lang.String,org.relaxng.datatype.ValidationContext)>(r2, r0);

        return $r6;

     label1:
        $r3 = r0.<org.dom4j.datatype.DatatypeAttribute: com.sun.msv.datatype.xsd.XSDatatype datatype>;

        $r4 = interfaceinvoke $r3.<com.sun.msv.datatype.xsd.XSDatatype: java.lang.Object createValue(java.lang.String,org.relaxng.datatype.ValidationContext)>(r2, r0);

        return $r4;
    }
}
