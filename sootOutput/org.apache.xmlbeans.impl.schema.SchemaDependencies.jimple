public class org.apache.xmlbeans.impl.schema.SchemaDependencies extends java.lang.Object
{
    private java.util.Map _dependencies;
    private java.util.Map _contributions;

    void registerDependency(java.lang.String, java.lang.String)
    {
        java.util.Set r7;
        java.util.HashSet $r5;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.String r1, r4;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.Set) $r3;

        if r7 != null goto label1;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r7 = $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r4);

        return;
    }

    java.util.Set computeTransitiveClosure(java.util.List)
    {
        java.util.Iterator $r8;
        java.util.Set r7;
        java.util.ArrayList $r0;
        java.util.HashSet $r2;
        java.util.List r1;
        java.util.Map $r4;
        int $i0, i1;
        java.lang.Object $r5, $r6, $r9;
        java.lang.String r10;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r3;
        boolean $z0, $z1;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label6;

        $r4 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.util.Set) $r6;

        if r7 != null goto label2;

        goto label5;

     label2:
        $r8 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r10);

        if $z1 != 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r10);

     label4:
        goto label3;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return $r2;
    }

    void <init>()
    {
        java.util.HashMap $r1, $r2;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions> = $r2;

        return;
    }

    void <init>(org.apache.xmlbeans.impl.schema.SchemaDependencies, java.util.Set)
    {
        java.util.Map $r4, $r7, $r13, $r14, $r20, $r21;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r0, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r5, $r8, r11, r27;
        java.util.List r29;
        java.util.HashMap $r1, $r2;
        java.util.ArrayList $r12;
        java.util.HashSet $r19;
        java.lang.String r25, r26, r28;
        java.util.Iterator $r6, $r9, $r16, $r23;
        java.lang.Object $r10, $r15, $r17, $r18, $r22, $r24;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r3 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r11 := @parameter1: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions> = $r2;

        $r4 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r18 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r18;

        $z2 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>(r26);

        if $z2 == 0 goto label02;

        goto label01;

     label02:
        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        $r20 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r26, $r19);

        $r21 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _dependencies>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (java.util.Set) $r22;

        $r23 = interfaceinvoke r27.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r24;

        $z3 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>(r25);

        if $z3 == 0 goto label04;

        goto label03;

     label04:
        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r25);

        goto label03;

     label05:
        goto label01;

     label06:
        $r7 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z6 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r10;

        $z0 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>(r28);

        if $z0 == 0 goto label08;

        goto label07;

     label08:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r28, $r12);

        $r14 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        r29 = (java.util.List) $r15;

        $r16 = interfaceinvoke r29.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label09;

     label10:
        goto label07;

     label11:
        return;
    }

    void registerContribution(java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r5;
        java.util.List r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.String r1, r4;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.List) $r3;

        if r7 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r7 = $r5;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    boolean isFileRepresented(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.List r5;
        java.util.Map $r1;
        java.lang.Object $r4;
        java.lang.String r6;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.List) $r4;

        $z1 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    java.util.List getFilesTouched(java.util.Set)
    {
        java.util.Iterator $r2;
        java.util.Set r1;
        java.util.ArrayList $r0;
        java.util.List $r7;
        java.util.Map $r4;
        java.lang.Object $r5, $r6;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r3;
        boolean $z0;

        r3 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r1 := @parameter0: java.util.Set;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.List) $r6;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    java.util.List getNamespacesTouched(java.util.Set)
    {
        java.util.ArrayList $r0;
        java.util.Map $r2, $r7;
        int $i0, i1;
        java.lang.String r6;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r1;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r3, r10;
        java.util.List r9;
        java.lang.Object $r5, $r8, $r11;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r10 := @parameter0: java.util.Set;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r1.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Map _contributions>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r9 = (java.util.List) $r8;

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r11 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = interfaceinvoke r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return $r0;
    }
}
