public class org.apache.batik.transcoder.print.PrintTranscoder extends org.apache.batik.transcoder.SVGAbstractTranscoder implements java.awt.print.Printable
{
    public static final java.lang.String KEY_AOI_STR;
    public static final java.lang.String KEY_HEIGHT_STR;
    public static final java.lang.String KEY_LANGUAGE_STR;
    public static final java.lang.String KEY_MARGIN_BOTTOM_STR;
    public static final java.lang.String KEY_MARGIN_LEFT_STR;
    public static final java.lang.String KEY_MARGIN_RIGHT_STR;
    public static final java.lang.String KEY_MARGIN_TOP_STR;
    public static final java.lang.String KEY_PAGE_HEIGHT_STR;
    public static final java.lang.String KEY_PAGE_ORIENTATION_STR;
    public static final java.lang.String KEY_PAGE_WIDTH_STR;
    public static final java.lang.String KEY_PIXEL_TO_MM_STR;
    public static final java.lang.String KEY_SCALE_TO_PAGE_STR;
    public static final java.lang.String KEY_SHOW_PAGE_DIALOG_STR;
    public static final java.lang.String KEY_SHOW_PRINTER_DIALOG_STR;
    public static final java.lang.String KEY_USER_STYLESHEET_URI_STR;
    public static final java.lang.String KEY_WIDTH_STR;
    public static final java.lang.String KEY_XML_PARSER_CLASSNAME_STR;
    public static final java.lang.String VALUE_MEDIA_PRINT;
    public static final java.lang.String VALUE_PAGE_ORIENTATION_LANDSCAPE;
    public static final java.lang.String VALUE_PAGE_ORIENTATION_PORTRAIT;
    public static final java.lang.String VALUE_PAGE_ORIENTATION_REVERSE_LANDSCAPE;
    private java.util.List inputs;
    private java.util.List printedInputs;
    private int curIndex;
    private org.apache.batik.bridge.BridgeContext theCtx;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PAGE_DIALOG;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PRINTER_DIALOG;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_WIDTH;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_HEIGHT;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_TOP;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_RIGHT;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_BOTTOM;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_LEFT;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_ORIENTATION;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_SCALE_TO_PAGE;
    public static final java.lang.String USAGE;

    public void <init>()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        org.apache.batik.transcoder.print.PrintTranscoder r0;
        int $i1;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        specialinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List inputs> = $r4;

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List printedInputs> = null;

        $i1 = (int) -1;

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: int curIndex> = $i1;

        $r3 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MEDIA>;

        virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "print");

        return;
    }

    public void transcode(org.apache.batik.transcoder.TranscoderInput, org.apache.batik.transcoder.TranscoderOutput)
    {
        java.util.List $r2;
        org.apache.batik.transcoder.print.PrintTranscoder r1;
        org.apache.batik.transcoder.TranscoderInput r0;
        org.apache.batik.transcoder.TranscoderOutput r3;

        r1 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        r0 := @parameter0: org.apache.batik.transcoder.TranscoderInput;

        r3 := @parameter1: org.apache.batik.transcoder.TranscoderOutput;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List inputs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    protected void transcode(org.w3c.dom.Document, java.lang.String, org.apache.batik.transcoder.TranscoderOutput) throws org.apache.batik.transcoder.TranscoderException
    {
        org.apache.batik.transcoder.print.PrintTranscoder r0;
        org.w3c.dom.Document r1;
        org.apache.batik.transcoder.TranscoderOutput r3;
        org.apache.batik.bridge.BridgeContext $r4;
        java.lang.String r2;

        r0 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        r1 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.transcoder.TranscoderOutput;

        specialinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: void transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)>(r1, r2, r3);

        $r4 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.bridge.BridgeContext theCtx> = $r4;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx> = null;

        return;
    }

    public void print() throws java.awt.print.PrinterException
    {
        java.lang.Float r7, r11, $r32, $r33, $r34, $r35;
        java.awt.print.PrinterJob $r0;
        org.apache.batik.transcoder.TranscodingHints $r5, $r9, $r13, $r16, $r19, $r22, $r25, $r38, $r42;
        java.lang.String $r27, $r28, $r29, $r31;
        java.awt.print.PageFormat $r1, $r30, $r36, r37;
        org.apache.batik.transcoder.TranscodingHints$Key $r4, $r8, $r12, $r15, $r18, $r21, $r24, $r39, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.transcoder.print.PrintTranscoder r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10, f11;
        java.awt.print.Paper $r2;
        java.lang.Boolean $r41, $r45;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Object $r6, $r10, $r14, $r17, $r20, $r23, $r26, $r40, $r44;

        r3 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        $r0 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        $r1 = virtualinvoke $r0.<java.awt.print.PrinterJob: java.awt.print.PageFormat defaultPage()>();

        $r2 = virtualinvoke $r1.<java.awt.print.PageFormat: java.awt.print.Paper getPaper()>();

        $r5 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r4 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_WIDTH>;

        $r6 = virtualinvoke $r5.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (java.lang.Float) $r6;

        $r9 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r8 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_HEIGHT>;

        $r10 = virtualinvoke $r9.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r8);

        r11 = (java.lang.Float) $r10;

        if r7 == null goto label01;

        $f7 = virtualinvoke r7.<java.lang.Float: float floatValue()>();

        $d8 = (double) $f7;

        $d9 = virtualinvoke $r2.<java.awt.print.Paper: double getHeight()>();

        virtualinvoke $r2.<java.awt.print.Paper: void setSize(double,double)>($d8, $d9);

     label01:
        if r11 == null goto label02;

        $d6 = virtualinvoke $r2.<java.awt.print.Paper: double getWidth()>();

        $f4 = virtualinvoke r11.<java.lang.Float: float floatValue()>();

        $d7 = (double) $f4;

        virtualinvoke $r2.<java.awt.print.Paper: void setSize(double,double)>($d6, $d7);

     label02:
        f8 = 0.0F;

        f9 = 0.0F;

        $d0 = virtualinvoke $r2.<java.awt.print.Paper: double getWidth()>();

        $f5 = (float) $d0;

        f10 = $f5;

        $d1 = virtualinvoke $r2.<java.awt.print.Paper: double getHeight()>();

        $f6 = (float) $d1;

        f11 = $f6;

        $r13 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r12 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_LEFT>;

        $r14 = virtualinvoke $r13.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r12);

        $r32 = (java.lang.Float) $r14;

        $r16 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r15 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_TOP>;

        $r17 = virtualinvoke $r16.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r15);

        $r33 = (java.lang.Float) $r17;

        $r19 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r18 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_RIGHT>;

        $r20 = virtualinvoke $r19.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r18);

        $r34 = (java.lang.Float) $r20;

        $r22 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r21 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_BOTTOM>;

        $r23 = virtualinvoke $r22.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r21);

        $r35 = (java.lang.Float) $r23;

        if $r32 == null goto label03;

        f8 = virtualinvoke $r32.<java.lang.Float: float floatValue()>();

        $f3 = virtualinvoke $r32.<java.lang.Float: float floatValue()>();

        f10 = $f5 - $f3;

     label03:
        if $r33 == null goto label04;

        f9 = virtualinvoke $r33.<java.lang.Float: float floatValue()>();

        $f2 = virtualinvoke $r33.<java.lang.Float: float floatValue()>();

        f11 = $f6 - $f2;

     label04:
        if $r34 == null goto label05;

        $f1 = virtualinvoke $r34.<java.lang.Float: float floatValue()>();

        f10 = f10 - $f1;

     label05:
        if $r35 == null goto label06;

        $f0 = virtualinvoke $r35.<java.lang.Float: float floatValue()>();

        f11 = f11 - $f0;

     label06:
        $d5 = (double) f8;

        $d4 = (double) f9;

        $d3 = (double) f10;

        $d2 = (double) f11;

        virtualinvoke $r2.<java.awt.print.Paper: void setImageableArea(double,double,double,double)>($d5, $d4, $d3, $d2);

        $r25 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r24 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_ORIENTATION>;

        $r26 = virtualinvoke $r25.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r24);

        $r31 = (java.lang.String) $r26;

        $r27 = "portrait";

        $z0 = virtualinvoke $r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r31);

        if $z0 == 0 goto label07;

        virtualinvoke $r1.<java.awt.print.PageFormat: void setOrientation(int)>(1);

        goto label09;

     label07:
        $r28 = "landscape";

        $z1 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r31);

        if $z1 == 0 goto label08;

        virtualinvoke $r1.<java.awt.print.PageFormat: void setOrientation(int)>(0);

        goto label09;

     label08:
        $r29 = "reverseLandscape";

        $z2 = virtualinvoke $r29.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r31);

        if $z2 == 0 goto label09;

        virtualinvoke $r1.<java.awt.print.PageFormat: void setOrientation(int)>(2);

     label09:
        virtualinvoke $r1.<java.awt.print.PageFormat: void setPaper(java.awt.print.Paper)>($r2);

        $r36 = virtualinvoke $r0.<java.awt.print.PrinterJob: java.awt.print.PageFormat validatePage(java.awt.print.PageFormat)>($r1);

        r37 = $r36;

        $r38 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r39 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PAGE_DIALOG>;

        $r40 = virtualinvoke $r38.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r39);

        $r41 = (java.lang.Boolean) $r40;

        if $r41 == null goto label11;

        $z5 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label11;

        $r30 = virtualinvoke $r0.<java.awt.print.PrinterJob: java.awt.print.PageFormat pageDialog(java.awt.print.PageFormat)>($r36);

        if $r30 != $r36 goto label10;

        return;

     label10:
        r37 = $r30;

     label11:
        virtualinvoke $r0.<java.awt.print.PrinterJob: void setPrintable(java.awt.print.Printable,java.awt.print.PageFormat)>(r3, r37);

        $r42 = r3.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r43 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PRINTER_DIALOG>;

        $r44 = virtualinvoke $r42.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r43);

        $r45 = (java.lang.Boolean) $r44;

        if $r45 == null goto label12;

        $z3 = virtualinvoke $r45.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label12;

        $z4 = virtualinvoke $r0.<java.awt.print.PrinterJob: boolean printDialog()>();

        if $z4 != 0 goto label12;

        return;

     label12:
        virtualinvoke $r0.<java.awt.print.PrinterJob: void print()>();

        return;
    }

    public int print(java.awt.Graphics, java.awt.print.PageFormat, int)
    {
        java.awt.print.PageFormat r11;
        java.awt.Shape $r10;
        org.apache.batik.transcoder.print.PrintTranscoder r0;
        org.apache.batik.gvt.GraphicsNode $r13;
        org.apache.batik.bridge.BridgeContext $r14, $r19, $r20, $r22;
        java.awt.geom.AffineTransform $r9, $r12;
        java.lang.Exception $r25;
        java.util.List $r1, $r2, $r15, $r24;
        org.apache.batik.bridge.UserAgent $r21;
        org.apache.batik.transcoder.TranscoderInput $r17;
        java.awt.Graphics r3;
        float $f0, $f1;
        java.util.ArrayList $r27;
        java.awt.Graphics2D $r18;
        int i0, $i1, $i2, $i3, $i4, $i6;
        double $d0, $d1, $d2, $d3;
        org.apache.batik.transcoder.TranscoderException $r26;
        java.awt.RenderingHints$Key $r5, $r7, $r8;
        java.lang.Object $r4, $r6, $r16;

        r0 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        r3 := @parameter0: java.awt.Graphics;

        r11 := @parameter1: java.awt.print.PageFormat;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List printedInputs>;

        if $r1 != null goto label01;

        $r27 = new java.util.ArrayList;

        $r24 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List inputs>;

        specialinvoke $r27.<java.util.ArrayList: void <init>(java.util.Collection)>($r24);

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List printedInputs> = $r27;

     label01:
        $r2 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List printedInputs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 < $i1 goto label03;

        $i6 = (int) -1;

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: int curIndex> = $i6;

        $r20 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.bridge.BridgeContext theCtx>;

        if $r20 == null goto label02;

        $r22 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.bridge.BridgeContext theCtx>;

        virtualinvoke $r22.<org.apache.batik.bridge.BridgeContext: void dispose()>();

     label02:
        $r21 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent userAgent>;

        interfaceinvoke $r21.<org.apache.batik.bridge.UserAgent: void displayMessage(java.lang.String)>("Done");

        return 1;

     label03:
        $i2 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: int curIndex>;

        if $i2 == i0 goto label07;

        $r14 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.bridge.BridgeContext theCtx>;

        if $r14 == null goto label04;

        $r19 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.bridge.BridgeContext theCtx>;

        virtualinvoke $r19.<org.apache.batik.bridge.BridgeContext: void dispose()>();

     label04:
        $d2 = virtualinvoke r11.<java.awt.print.PageFormat: double getImageableWidth()>();

        $i3 = (int) $d2;

        $f0 = (float) $i3;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = $f0;

        $d3 = virtualinvoke r11.<java.awt.print.PageFormat: double getImageableHeight()>();

        $i4 = (int) $d3;

        $f1 = (float) $i4;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = $f1;

        $r15 = r0.<org.apache.batik.transcoder.print.PrintTranscoder: java.util.List printedInputs>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i0);

        $r17 = (org.apache.batik.transcoder.TranscoderInput) $r16;

        specialinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: void transcode(org.apache.batik.transcoder.TranscoderInput,org.apache.batik.transcoder.TranscoderOutput)>($r17, null);

        r0.<org.apache.batik.transcoder.print.PrintTranscoder: int curIndex> = i0;

     label05:
        goto label07;

     label06:
        $r26 := @caughtexception;

        specialinvoke r0.<org.apache.batik.transcoder.print.PrintTranscoder: void drawError(java.awt.Graphics,java.lang.Exception)>(r3, $r26);

        return 0;

     label07:
        $r18 = (java.awt.Graphics2D) r3;

        $r5 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r4 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r18.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r5, $r4);

        $r7 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r6 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r18.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r7, $r6);

        $r8 = <org.apache.batik.ext.awt.RenderingHintsKeyExt: java.awt.RenderingHints$Key KEY_TRANSCODING>;

        virtualinvoke $r18.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r8, "Printing");

        $r9 = virtualinvoke $r18.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $r10 = virtualinvoke $r18.<java.awt.Graphics: java.awt.Shape getClip()>();

        $d0 = virtualinvoke r11.<java.awt.print.PageFormat: double getImageableX()>();

        $d1 = virtualinvoke r11.<java.awt.print.PageFormat: double getImageableY()>();

        virtualinvoke $r18.<java.awt.Graphics2D: void translate(double,double)>($d0, $d1);

        $r12 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.AffineTransform curTxf>;

        virtualinvoke $r18.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r12);

     label08:
        $r13 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.gvt.GraphicsNode root>;

        interfaceinvoke $r13.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>($r18);

     label09:
        goto label11;

     label10:
        $r25 := @caughtexception;

        virtualinvoke $r18.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r9);

        virtualinvoke $r18.<java.awt.Graphics: void setClip(java.awt.Shape)>($r10);

        specialinvoke r0.<org.apache.batik.transcoder.print.PrintTranscoder: void drawError(java.awt.Graphics,java.lang.Exception)>(r3, $r25);

     label11:
        virtualinvoke $r18.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r9);

        virtualinvoke $r18.<java.awt.Graphics: void setClip(java.awt.Shape)>($r10);

        return 0;

        catch org.apache.batik.transcoder.TranscoderException from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected void setImageSize(float, float)
    {
        java.awt.geom.Rectangle2D r10;
        java.lang.Boolean r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r1, $r5, $r7;
        boolean $z0, $z1;
        double $d0, $d1;
        org.apache.batik.transcoder.print.PrintTranscoder r0;
        org.apache.batik.transcoder.TranscodingHints $r2, $r6, $r8;
        float f0, f1, f2, f3;
        java.lang.Object $r3, $r9;

        r0 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r1 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SCALE_TO_PAGE>;

        $r3 = virtualinvoke $r2.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        f2 = f0;

        f3 = f1;

        $r6 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r5 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI>;

        $z1 = virtualinvoke $r6.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r8 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r7 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI>;

        $r9 = virtualinvoke $r8.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r7);

        r10 = (java.awt.geom.Rectangle2D) $r9;

        $d0 = virtualinvoke r10.<java.awt.geom.RectangularShape: double getWidth()>();

        f2 = (float) $d0;

        $d1 = virtualinvoke r10.<java.awt.geom.RectangularShape: double getHeight()>();

        f3 = (float) $d1;

     label1:
        specialinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: void setImageSize(float,float)>(f2, f3);

     label2:
        return;
    }

    private void drawError(java.awt.Graphics, java.lang.Exception)
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.transcoder.print.PrintTranscoder r0;
        java.awt.Graphics r3;
        java.lang.Exception r1;

        r0 := @this: org.apache.batik.transcoder.print.PrintTranscoder;

        r3 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: java.lang.Exception;

        $r2 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent userAgent>;

        interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>(r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.net.URL $r22;
        java.lang.String[] r0;
        int $i0, $i1, i2;
        org.apache.batik.transcoder.TranscodingHints$Key $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r21, $r23;
        java.io.PrintStream $r24;
        org.apache.batik.transcoder.print.PrintTranscoder $r1;
        java.io.File $r20;
        org.apache.batik.transcoder.TranscoderInput $r19;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("java org.apache.batik.transcoder.print.PrintTranscoder <svgFileToPrint>");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label1:
        $r1 = new org.apache.batik.transcoder.print.PrintTranscoder;

        specialinvoke $r1.<org.apache.batik.transcoder.print.PrintTranscoder: void <init>()>();

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_LANGUAGE>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "language", $r2);

        $r3 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_USER_STYLESHEET_URI>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "userStylesheet", $r3);

        $r4 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_XML_PARSER_CLASSNAME>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderStringHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "xmlParserClassName", $r4);

        $r5 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SCALE_TO_PAGE>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderBooleanHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "scaleToPage", $r5);

        $r6 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderRectangleHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "aoi", $r6);

        $r7 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "width", $r7);

        $r8 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "height", $r8);

        $r9 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_UNIT_TO_MILLIMETER>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "pixelToMm", $r9);

        $r10 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_ORIENTATION>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderStringHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "pageOrientation", $r10);

        $r11 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_WIDTH>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "pageWidth", $r11);

        $r12 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_HEIGHT>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "pageHeight", $r12);

        $r13 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_TOP>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "marginTop", $r13);

        $r14 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_RIGHT>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "marginRight", $r14);

        $r15 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_BOTTOM>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "marginBottom", $r15);

        $r16 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_LEFT>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "marginLeft", $r16);

        $r17 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PAGE_DIALOG>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderBooleanHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "showPageDialog", $r17);

        $r18 = <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PRINTER_DIALOG>;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void setTranscoderBooleanHint(org.apache.batik.transcoder.Transcoder,java.lang.String,org.apache.batik.transcoder.TranscodingHints$Key)>($r1, "showPrinterDialog", $r18);

        i2 = 0;

        goto label3;

     label2:
        $r19 = new org.apache.batik.transcoder.TranscoderInput;

        $r20 = new java.io.File;

        $r21 = r0[i2];

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.io.File: java.net.URL toURL()>();

        $r23 = virtualinvoke $r22.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.batik.transcoder.TranscoderInput: void <init>(java.lang.String)>($r23);

        virtualinvoke $r1.<org.apache.batik.transcoder.print.PrintTranscoder: void transcode(org.apache.batik.transcoder.TranscoderInput,org.apache.batik.transcoder.TranscoderOutput)>($r19, null);

        i2 = i2 + 1;

     label3:
        $i1 = lengthof r0;

        if i2 < $i1 goto label2;

        virtualinvoke $r1.<org.apache.batik.transcoder.print.PrintTranscoder: void print()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;
    }

    public static void setTranscoderFloatHint(org.apache.batik.transcoder.Transcoder, java.lang.String, org.apache.batik.transcoder.TranscodingHints$Key)
    {
        java.lang.Float $r2;
        org.apache.batik.transcoder.Transcoder r3;
        float $f0;
        java.lang.NumberFormatException $r5;
        java.lang.String r0, $r1;
        org.apache.batik.transcoder.TranscodingHints$Key r4;

        r3 := @parameter0: org.apache.batik.transcoder.Transcoder;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.batik.transcoder.TranscodingHints$Key;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label4;

     label1:
        $r2 = new java.lang.Float;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        specialinvoke $r2.<java.lang.Float: void <init>(float)>($f0);

        interfaceinvoke r3.<org.apache.batik.transcoder.Transcoder: void addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key,java.lang.Object)>(r4, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void handleValueError(java.lang.String,java.lang.String)>(r0, $r1);

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void setTranscoderRectangleHint(org.apache.batik.transcoder.Transcoder, java.lang.String, org.apache.batik.transcoder.TranscodingHints$Key)
    {
        java.awt.geom.Rectangle2D$Float $r7;
        java.util.StringTokenizer $r2;
        int $i0;
        java.lang.String r0, $r1, $r3, $r4, $r5, $r6;
        org.apache.batik.transcoder.TranscodingHints$Key r9;
        org.apache.batik.transcoder.Transcoder r8;
        java.lang.NumberFormatException $r10;
        float $f0, $f1, $f2, $f3;

        r8 := @parameter0: org.apache.batik.transcoder.Transcoder;

        r0 := @parameter1: java.lang.String;

        r9 := @parameter2: org.apache.batik.transcoder.TranscodingHints$Key;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label4;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        $i0 = virtualinvoke $r2.<java.util.StringTokenizer: int countTokens()>();

        if $i0 == 4 goto label1;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void handleValueError(java.lang.String,java.lang.String)>(r0, $r1);

     label1:
        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = new java.awt.geom.Rectangle2D$Float;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        $f3 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        specialinvoke $r7.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        interfaceinvoke r8.<org.apache.batik.transcoder.Transcoder: void addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key,java.lang.Object)>(r9, $r7);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <org.apache.batik.transcoder.print.PrintTranscoder: void handleValueError(java.lang.String,java.lang.String)>(r0, $r1);

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void setTranscoderBooleanHint(org.apache.batik.transcoder.Transcoder, java.lang.String, org.apache.batik.transcoder.TranscodingHints$Key)
    {
        org.apache.batik.transcoder.Transcoder r3;
        java.lang.Boolean $r5;
        java.lang.String r0, $r1, $r2;
        org.apache.batik.transcoder.TranscodingHints$Key r4;
        boolean $z0;

        r3 := @parameter0: org.apache.batik.transcoder.Transcoder;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.batik.transcoder.TranscodingHints$Key;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label3;

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        interfaceinvoke r3.<org.apache.batik.transcoder.Transcoder: void addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key,java.lang.Object)>(r4, $r5);

     label3:
        return;
    }

    public static void setTranscoderStringHint(org.apache.batik.transcoder.Transcoder, java.lang.String, org.apache.batik.transcoder.TranscodingHints$Key)
    {
        org.apache.batik.transcoder.Transcoder r2;
        java.lang.String r0, $r1;
        org.apache.batik.transcoder.TranscodingHints$Key r3;

        r2 := @parameter0: org.apache.batik.transcoder.Transcoder;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.transcoder.TranscodingHints$Key;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label1;

        interfaceinvoke r2.<org.apache.batik.transcoder.Transcoder: void addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key,java.lang.Object)>(r3, $r1);

     label1:
        return;
    }

    public static void handleValueError(java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4, $r5, $r7;
        java.lang.String r3, r6, $r8;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value : ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.transcoder.keys.LengthKey $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.batik.transcoder.keys.StringKey $r8;
        org.apache.batik.transcoder.keys.BooleanKey $r0, $r1, $r9;

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String USAGE> = "java org.apache.batik.transcoder.print.PrintTranscoder <svgFileToPrint>";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String VALUE_PAGE_ORIENTATION_REVERSE_LANDSCAPE> = "reverseLandscape";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String VALUE_PAGE_ORIENTATION_PORTRAIT> = "portrait";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String VALUE_PAGE_ORIENTATION_LANDSCAPE> = "landscape";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String VALUE_MEDIA_PRINT> = "print";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_XML_PARSER_CLASSNAME_STR> = "xmlParserClassName";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_WIDTH_STR> = "width";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_USER_STYLESHEET_URI_STR> = "userStylesheet";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_SHOW_PRINTER_DIALOG_STR> = "showPrinterDialog";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_SHOW_PAGE_DIALOG_STR> = "showPageDialog";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_SCALE_TO_PAGE_STR> = "scaleToPage";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_PIXEL_TO_MM_STR> = "pixelToMm";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_PAGE_WIDTH_STR> = "pageWidth";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_PAGE_ORIENTATION_STR> = "pageOrientation";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_PAGE_HEIGHT_STR> = "pageHeight";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_MARGIN_TOP_STR> = "marginTop";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_MARGIN_RIGHT_STR> = "marginRight";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_MARGIN_LEFT_STR> = "marginLeft";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_MARGIN_BOTTOM_STR> = "marginBottom";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_LANGUAGE_STR> = "language";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_HEIGHT_STR> = "height";

        <org.apache.batik.transcoder.print.PrintTranscoder: java.lang.String KEY_AOI_STR> = "aoi";

        $r0 = new org.apache.batik.transcoder.keys.BooleanKey;

        specialinvoke $r0.<org.apache.batik.transcoder.keys.BooleanKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PAGE_DIALOG> = $r0;

        $r1 = new org.apache.batik.transcoder.keys.BooleanKey;

        specialinvoke $r1.<org.apache.batik.transcoder.keys.BooleanKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SHOW_PRINTER_DIALOG> = $r1;

        $r2 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r2.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_WIDTH> = $r2;

        $r3 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r3.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_HEIGHT> = $r3;

        $r4 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r4.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_TOP> = $r4;

        $r5 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r5.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_RIGHT> = $r5;

        $r6 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r6.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_BOTTOM> = $r6;

        $r7 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r7.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MARGIN_LEFT> = $r7;

        $r8 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r8.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PAGE_ORIENTATION> = $r8;

        $r9 = new org.apache.batik.transcoder.keys.BooleanKey;

        specialinvoke $r9.<org.apache.batik.transcoder.keys.BooleanKey: void <init>()>();

        <org.apache.batik.transcoder.print.PrintTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SCALE_TO_PAGE> = $r9;

        return;
    }
}
