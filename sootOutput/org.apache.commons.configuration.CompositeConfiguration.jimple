public class org.apache.commons.configuration.CompositeConfiguration extends org.apache.commons.configuration.AbstractConfiguration implements java.lang.Cloneable
{
    private java.util.List configList;
    private org.apache.commons.configuration.Configuration inMemoryConfiguration;

    public void <init>()
    {
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList> = $r1;

        virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: void clear()>();

        return;
    }

    public void <init>(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r3;
        java.util.List $r2, $r4;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r3 := @parameter0: org.apache.commons.configuration.Configuration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList> = $r1;

        $r2 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration> = r3;

        $r4 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.configuration.CompositeConfiguration r0;
        org.apache.commons.configuration.BaseConfiguration $r1;
        java.util.Collection r2;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r2 := @parameter0: java.util.Collection;

        $r1 = new org.apache.commons.configuration.BaseConfiguration;

        specialinvoke $r1.<org.apache.commons.configuration.BaseConfiguration: void <init>()>();

        specialinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: void <init>(org.apache.commons.configuration.Configuration,java.util.Collection)>($r1, r2);

        return;
    }

    public void <init>(org.apache.commons.configuration.Configuration, java.util.Collection)
    {
        org.apache.commons.configuration.Configuration r1, $r5;
        java.util.Iterator $r3;
        java.util.Collection r2;
        java.lang.Object $r4;
        org.apache.commons.configuration.CompositeConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.Configuration;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: void <init>(org.apache.commons.configuration.Configuration)>(r1);

        if r2 == null goto label2;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.Configuration) $r4;

        virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: void addConfiguration(org.apache.commons.configuration.Configuration)>($r5);

        goto label1;

     label2:
        return;
    }

    public void addConfiguration(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r1, $r3;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.List $r2, $r4, $r5;
        org.apache.commons.configuration.AbstractConfiguration $r6;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.Configuration;

        $r2 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r4 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r3 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        $i0 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>($r3);

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i0, r1);

        $z1 = r1 instanceof org.apache.commons.configuration.AbstractConfiguration;

        if $z1 == 0 goto label1;

        $r6 = (org.apache.commons.configuration.AbstractConfiguration) r1;

        $z2 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: boolean isThrowExceptionOnMissing()>();

        virtualinvoke $r6.<org.apache.commons.configuration.AbstractConfiguration: void setThrowExceptionOnMissing(boolean)>($z2);

     label1:
        return;
    }

    public void removeConfiguration(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r0, $r2;
        java.util.List $r3;
        org.apache.commons.configuration.CompositeConfiguration r1;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.Configuration;

        $r2 = r1.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = r1.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r0);

     label1:
        return;
    }

    public int getNumberOfConfigurations()
    {
        int $i0;
        java.util.List $r1;
        org.apache.commons.configuration.CompositeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.configuration.Configuration $r3, $r5, $r7, $r9;
        char $c0;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.List $r1, $r10;
        org.apache.commons.configuration.BaseConfiguration $r2, $r4, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = new org.apache.commons.configuration.BaseConfiguration;

        specialinvoke $r2.<org.apache.commons.configuration.BaseConfiguration: void <init>()>();

        r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration> = $r2;

        $r3 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        $r4 = (org.apache.commons.configuration.BaseConfiguration) $r3;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: boolean isThrowExceptionOnMissing()>();

        virtualinvoke $r4.<org.apache.commons.configuration.BaseConfiguration: void setThrowExceptionOnMissing(boolean)>($z0);

        $r5 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        $r6 = (org.apache.commons.configuration.BaseConfiguration) $r5;

        $c0 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: char getListDelimiter()>();

        virtualinvoke $r6.<org.apache.commons.configuration.BaseConfiguration: void setListDelimiter(char)>($c0);

        $r7 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        $r8 = (org.apache.commons.configuration.BaseConfiguration) $r7;

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: boolean isDelimiterParsingDisabled()>();

        virtualinvoke $r8.<org.apache.commons.configuration.BaseConfiguration: void setDelimiterParsingDisabled(boolean)>($z1);

        $r10 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r9 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    protected void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.Configuration $r3;
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.configuration.CompositeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        interfaceinvoke $r3.<org.apache.commons.configuration.Configuration: void addProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.commons.configuration.Configuration r6, r7;
        java.util.Iterator $r2;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.List $r1;
        java.lang.Object $r4, $r5;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r3 := @parameter0: java.lang.String;

        r7 = null;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.Configuration) $r5;

        $z1 = interfaceinvoke r6.<org.apache.commons.configuration.Configuration: boolean containsKey(java.lang.String)>(r3);

        if $z1 == 0 goto label2;

        r7 = r6;

        goto label3;

     label2:
        goto label1;

     label3:
        if r7 == null goto label4;

        $r4 = interfaceinvoke r7.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r3);

        return $r4;

     label4:
        return null;
    }

    public java.util.Iterator getKeys()
    {
        org.apache.commons.configuration.Configuration r6;
        java.util.Iterator $r3, $r4, $r7;
        org.apache.commons.configuration.CompositeConfiguration r1;
        java.util.ArrayList $r0;
        java.util.List $r2;
        java.lang.Object $r5, $r8;
        java.lang.String r9;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.configuration.CompositeConfiguration;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.Configuration) $r5;

        $r7 = interfaceinvoke r6.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $z2 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>(r9);

        if $z2 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r9);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        return $r4;
    }

    public java.util.Iterator getKeys(java.lang.String)
    {
        org.apache.commons.configuration.Configuration r6;
        java.util.Iterator $r3, $r4, $r8;
        org.apache.commons.configuration.CompositeConfiguration r1;
        java.util.ArrayList $r0;
        java.util.List $r2;
        java.lang.Object $r5, $r9;
        java.lang.String r7, r10;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r7 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.Configuration) $r5;

        $r8 = interfaceinvoke r6.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys(java.lang.String)>(r7);

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $z2 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>(r10);

        if $z2 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        $r4 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        return $r4;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.Configuration r4;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.apache.commons.configuration.CompositeConfiguration r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.configuration.Configuration) $r3;

        $z1 = interfaceinvoke r4.<org.apache.commons.configuration.Configuration: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected void clearPropertyDirect(java.lang.String)
    {
        org.apache.commons.configuration.Configuration r4;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String r5;
        org.apache.commons.configuration.CompositeConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.configuration.Configuration) $r3;

        interfaceinvoke r4.<org.apache.commons.configuration.Configuration: void clearProperty(java.lang.String)>(r5);

        goto label1;

     label2:
        return;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.commons.configuration.Configuration r4;
        java.util.Iterator $r2;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.configuration.Configuration) $r3;

        $z1 = interfaceinvoke r4.<org.apache.commons.configuration.Configuration: boolean containsKey(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.List getList(java.lang.String, java.util.List)
    {
        org.apache.commons.configuration.Configuration $r5, $r11, r12;
        java.util.ListIterator $r6;
        org.apache.commons.configuration.CompositeConfiguration r1;
        java.util.ArrayList $r0;
        java.lang.String r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3;
        java.util.List $r2, r9;
        java.lang.Object $r7, $r8, $r10;

        r1 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r4 := @parameter0: java.lang.String;

        r9 := @parameter1: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $z3 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label3;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.commons.configuration.Configuration) $r10;

        $r11 = r1.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        if r12 == $r11 goto label2;

        $z4 = interfaceinvoke r12.<org.apache.commons.configuration.Configuration: boolean containsKey(java.lang.String)>(r4);

        if $z4 == 0 goto label2;

        staticinvoke <org.apache.commons.configuration.CompositeConfiguration: void appendListProperty(java.util.List,org.apache.commons.configuration.Configuration,java.lang.String)>($r0, r12, r4);

     label2:
        goto label1;

     label3:
        $r5 = r1.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        staticinvoke <org.apache.commons.configuration.CompositeConfiguration: void appendListProperty(java.util.List,org.apache.commons.configuration.Configuration,java.lang.String)>($r0, $r5, r4);

        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        return r9;

     label4:
        $r6 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator()>();

     label5:
        $z2 = interfaceinvoke $r6.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.ListIterator: java.lang.Object next()>();

        $r8 = virtualinvoke r1.<org.apache.commons.configuration.CompositeConfiguration: java.lang.Object interpolate(java.lang.Object)>($r7);

        interfaceinvoke $r6.<java.util.ListIterator: void set(java.lang.Object)>($r8);

        goto label5;

     label6:
        return $r0;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        java.lang.String[] r3;
        org.apache.commons.configuration.CompositeConfiguration r0;
        java.util.List $r2;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        java.lang.String r1, $r5;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List getList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        r3[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r3;
    }

    public org.apache.commons.configuration.Configuration getConfiguration(int)
    {
        org.apache.commons.configuration.Configuration $r3;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.commons.configuration.CompositeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.commons.configuration.Configuration) $r2;

        return $r3;
    }

    public org.apache.commons.configuration.Configuration getInMemoryConfiguration()
    {
        org.apache.commons.configuration.Configuration $r1;
        org.apache.commons.configuration.CompositeConfiguration r0;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        $r1 = r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        return $r1;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.configuration.Configuration $r3, $r4, $r5, $r7, $r8, $r9;
        org.apache.commons.configuration.CompositeConfiguration r0, r12;
        java.lang.CloneNotSupportedException $r10;
        org.apache.commons.configuration.ConfigurationRuntimeException $r11;
        java.util.List $r6;
        int $i0, i1;
        java.lang.Object $r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: java.lang.Object clone()>();

        r12 = (org.apache.commons.configuration.CompositeConfiguration) $r1;

        virtualinvoke r12.<org.apache.commons.configuration.CompositeConfiguration: void clearConfigurationListeners()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r12.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList> = $r2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration getInMemoryConfiguration()>();

        $r4 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: org.apache.commons.configuration.Configuration cloneConfiguration(org.apache.commons.configuration.Configuration)>($r3);

        r12.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration> = $r4;

        $r6 = r12.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r5 = r12.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration inMemoryConfiguration>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = 0;

     label2:
        $i0 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: int getNumberOfConfigurations()>();

        if i1 >= $i0 goto label4;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration getConfiguration(int)>(i1);

        $r8 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration getInMemoryConfiguration()>();

        if $r7 == $r8 goto label3;

        $r9 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: org.apache.commons.configuration.Configuration cloneConfiguration(org.apache.commons.configuration.Configuration)>($r7);

        virtualinvoke r12.<org.apache.commons.configuration.CompositeConfiguration: void addConfiguration(org.apache.commons.configuration.Configuration)>($r9);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return r12;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        specialinvoke $r11.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

        catch java.lang.CloneNotSupportedException from label1 to label4 with label5;
    }

    public void setDelimiterParsingDisabled(boolean)
    {
        org.apache.commons.configuration.Configuration $r1;
        org.apache.commons.configuration.CompositeConfiguration r0;
        boolean z0;
        org.apache.commons.configuration.BaseConfiguration $r2;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration getInMemoryConfiguration()>();

        $r2 = (org.apache.commons.configuration.BaseConfiguration) $r1;

        virtualinvoke $r2.<org.apache.commons.configuration.BaseConfiguration: void setDelimiterParsingDisabled(boolean)>(z0);

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void setDelimiterParsingDisabled(boolean)>(z0);

        return;
    }

    public void setListDelimiter(char)
    {
        org.apache.commons.configuration.Configuration $r1;
        char c0;
        org.apache.commons.configuration.CompositeConfiguration r0;
        org.apache.commons.configuration.BaseConfiguration $r2;

        r0 := @this: org.apache.commons.configuration.CompositeConfiguration;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.CompositeConfiguration: org.apache.commons.configuration.Configuration getInMemoryConfiguration()>();

        $r2 = (org.apache.commons.configuration.BaseConfiguration) $r1;

        virtualinvoke $r2.<org.apache.commons.configuration.BaseConfiguration: void setListDelimiter(char)>(c0);

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void setListDelimiter(char)>(c0);

        return;
    }

    public org.apache.commons.configuration.Configuration getSource(java.lang.String)
    {
        org.apache.commons.configuration.Configuration r5, r13;
        org.apache.commons.configuration.CompositeConfiguration r1;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        java.lang.String r0, $r11;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.lang.IllegalArgumentException $r6, $r12;
        java.util.List $r2;
        java.lang.Object $r4;

        r1 := @this: org.apache.commons.configuration.CompositeConfiguration;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key must not be null!");

        throw $r12;

     label1:
        r13 = null;

        $r2 = r1.<org.apache.commons.configuration.CompositeConfiguration: java.util.List configList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.configuration.Configuration) $r4;

        $z1 = interfaceinvoke r5.<org.apache.commons.configuration.Configuration: boolean containsKey(java.lang.String)>(r0);

        if $z1 == 0 goto label4;

        if r13 == null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The key ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is defined by multiple sources!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label3:
        r13 = r5;

     label4:
        goto label2;

     label5:
        return r13;
    }

    private static void appendListProperty(java.util.List, org.apache.commons.configuration.Configuration, java.lang.String)
    {
        org.apache.commons.configuration.Configuration r0;
        java.util.List r3;
        java.util.Collection $r4;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r3 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.commons.configuration.Configuration;

        r1 := @parameter2: java.lang.String;

        $r2 = interfaceinvoke r0.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $z0 = $r2 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r4 = (java.util.Collection) $r2;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        goto label2;

     label1:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }
}
