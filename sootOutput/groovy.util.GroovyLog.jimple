public class groovy.util.GroovyLog extends groovy.lang.GroovyObjectSupport
{
    java.lang.String prefix;

    public static groovy.util.GroovyLog newInstance(java.lang.Class)
    {
        java.lang.Class r1;
        groovy.util.GroovyLog $r0;

        r1 := @parameter0: java.lang.Class;

        $r0 = new groovy.util.GroovyLog;

        specialinvoke $r0.<groovy.util.GroovyLog: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public void <init>()
    {
        groovy.util.GroovyLog r0;

        r0 := @this: groovy.util.GroovyLog;

        specialinvoke r0.<groovy.util.GroovyLog: void <init>(java.lang.String)>("");

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String $r2;
        groovy.util.GroovyLog r0;

        r0 := @this: groovy.util.GroovyLog;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r0.<groovy.util.GroovyLog: void <init>(java.lang.String)>($r2);

        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Class $r2;
        groovy.util.GroovyLog r0;

        r0 := @this: groovy.util.GroovyLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r0.<groovy.util.GroovyLog: void <init>(java.lang.Class)>($r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        groovy.util.GroovyLog r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.String r1, $r6;

        r0 := @this: groovy.util.GroovyLog;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r6 = "[";

     label2:
        r0.<groovy.util.GroovyLog: java.lang.String prefix> = $r6;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        java.io.PrintStream $r6;
        java.lang.Object[] $r3, $r4;
        groovy.util.GroovyLog r0;
        java.lang.StringBuffer $r7, $r9, $r10, $r11, $r12;
        java.lang.Class $r2;
        java.lang.Object r5;
        java.lang.String r1, $r8, $r13;
        boolean $z0;

        r0 := @this: groovy.util.GroovyLog;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        if r5 == null goto label1;

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Object[]) r5;

        $r4 = (java.lang.Object[]) $r3;

        r5 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String join(java.lang.Object[],java.lang.String)>($r4, ",");

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r0.<groovy.util.GroovyLog: java.lang.String prefix>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return null;
    }
}
