public class org.apache.poi.xssf.streaming.SXSSFRow extends java.lang.Object implements org.apache.poi.ss.usermodel.Row
{
    org.apache.poi.xssf.streaming.SXSSFSheet _sheet;
    org.apache.poi.xssf.streaming.SXSSFCell[] _cells;
    int _maxColumn;
    short _style;
    short _height;
    boolean _zHeight;
    int _outlineLevel;
    java.lang.Boolean _hidden;
    java.lang.Boolean _collapsed;

    public void <init>(org.apache.poi.xssf.streaming.SXSSFSheet, int)
    {
        short $s4, $s6;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        org.apache.poi.xssf.streaming.SXSSFSheet r1;
        int i0, $i2;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r1 := @parameter0: org.apache.poi.xssf.streaming.SXSSFSheet;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn> = $i2;

        $s4 = (short) -1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _style> = $s4;

        $s6 = (short) -1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height> = $s6;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: boolean _zHeight> = 0;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _outlineLevel> = 0;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFSheet _sheet> = r1;

        $r2 = newarray (org.apache.poi.xssf.streaming.SXSSFCell)[i0];

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells> = $r2;

        return;
    }

    public java.util.Iterator allCellsIterator()
    {
        org.apache.poi.xssf.streaming.SXSSFRow$CellIterator $r0;
        org.apache.poi.xssf.streaming.SXSSFRow r1;

        r1 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r0 = new org.apache.poi.xssf.streaming.SXSSFRow$CellIterator;

        specialinvoke $r0.<org.apache.poi.xssf.streaming.SXSSFRow$CellIterator: void <init>(org.apache.poi.xssf.streaming.SXSSFRow)>(r1);

        return $r0;
    }

    public boolean hasCustomHeight()
    {
        short $s0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $s0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height>;

        $i1 = (int) $s0;

        $i3 = (int) -1;

        if $i1 == $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getOutlineLevel()
    {
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $i0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _outlineLevel>;

        return $i0;
    }

    void setOutlineLevel(int)
    {
        int i0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _outlineLevel> = i0;

        return;
    }

    public java.lang.Boolean getHidden()
    {
        java.lang.Boolean $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean _hidden>;

        return $r1;
    }

    public void setHidden(java.lang.Boolean)
    {
        java.lang.Boolean r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r1 := @parameter0: java.lang.Boolean;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean _hidden> = r1;

        return;
    }

    public java.lang.Boolean getCollapsed()
    {
        java.lang.Boolean $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean _collapsed>;

        return $r1;
    }

    public void setCollapsed(java.lang.Boolean)
    {
        java.lang.Boolean r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r1 := @parameter0: java.lang.Boolean;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean _collapsed> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator $r0;
        org.apache.poi.xssf.streaming.SXSSFRow r1;

        r1 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r0 = new org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator;

        specialinvoke $r0.<org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator: void <init>(org.apache.poi.xssf.streaming.SXSSFRow)>(r1);

        return $r0;
    }

    public org.apache.poi.ss.usermodel.Cell createCell(int)
    {
        int i0;
        org.apache.poi.ss.usermodel.Cell $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Cell createCell(int,int)>(i0, 3);

        return $r1;
    }

    public org.apache.poi.ss.usermodel.Cell createCell(int, int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r2, $r5;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r1, $r3, $r4, $r6, r7, $r8, $r9;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        staticinvoke <org.apache.poi.xssf.streaming.SXSSFRow: void checkBounds(int)>(i0);

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $i6 = i0 + 1;

        $r6 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $i4 = lengthof $r6;

        $i5 = $i4 * 2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);

        r7 = newarray (org.apache.poi.xssf.streaming.SXSSFCell)[$i7];

        $r9 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r8 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $i8 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r7, 0, $i8);

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells> = r7;

     label1:
        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r2 = new org.apache.poi.xssf.streaming.SXSSFCell;

        specialinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFCell: void <init>(org.apache.poi.xssf.streaming.SXSSFRow,int)>(r0, i2);

        $r3[i0] = $r2;

        $i3 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if i0 <= $i3 goto label2;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn> = i0;

     label2:
        $r4 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r5 = $r4[i0];

        return $r5;
    }

    private static void checkBounds(int)
    {
        int $i0, i1;
        java.lang.String $r7, $r12, $r15;
        java.lang.IllegalArgumentException $r2;
        org.apache.poi.ss.SpreadsheetVersion r0, $r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14;

        i1 := @parameter0: int;

        r0 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        $r1 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.SpreadsheetVersion: int getLastColumnIndex()>();

        if i1 < 0 goto label1;

        if i1 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid column index (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  Allowable column range for ");

        $r7 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: java.lang.String name()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is (0..");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or (\'A\'..\'");

        $r12 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: java.lang.String getLastColumnName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r2;

     label2:
        return;
    }

    public void removeCell(org.apache.poi.ss.usermodel.Cell)
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r4;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        org.apache.poi.ss.usermodel.Cell r1;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r2, $r3;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r1 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: int getCellIndex(org.apache.poi.ss.usermodel.Cell)>(r1);

        if $i0 < 0 goto label2;

        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r2[$i0] = null;

     label1:
        $i1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if $i1 < 0 goto label2;

        $r3 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $i2 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        $r4 = $r3[$i2];

        if $r4 != null goto label2;

        $i3 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        $i4 = $i3 - 1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn> = $i4;

        goto label1;

     label2:
        return;
    }

    int getCellIndex(org.apache.poi.ss.usermodel.Cell)
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r3;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i0, i1, $i3;
        org.apache.poi.ss.usermodel.Cell r2;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r2 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if i1 > $i0 goto label3;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r3 = $r1[i1];

        if $r3 != r2 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public void setRowNum(int)
    {
        int i0;
        org.apache.poi.xssf.streaming.SXSSFSheet $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFSheet _sheet>;

        virtualinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFSheet: void changeRowNum(org.apache.poi.xssf.streaming.SXSSFRow,int)>(r0, i0);

        return;
    }

    public int getRowNum()
    {
        org.apache.poi.xssf.streaming.SXSSFSheet $r1;
        int $i0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFSheet _sheet>;

        $i0 = virtualinvoke $r1.<org.apache.poi.xssf.streaming.SXSSFSheet: int getRowNum(org.apache.poi.xssf.streaming.SXSSFRow)>(r0);

        return $i0;
    }

    public org.apache.poi.ss.usermodel.Cell getCell(int)
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r18;
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy $r4, $r5, $r6, $r7;
        short $s3;
        int i0, $i1, $i2, $i4, $i5;
        org.apache.poi.xssf.streaming.SXSSFSheet $r2;
        org.apache.poi.ss.usermodel.Cell $r16;
        java.lang.String $r15;
        java.lang.IllegalArgumentException $r19, $r21;
        org.apache.poi.ss.usermodel.Workbook $r3;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r20;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cell index must be >= 0");

        throw $r19;

     label1:
        $i1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if i0 <= $i1 goto label2;

        $r18 = null;

        goto label3;

     label2:
        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r18 = $r1[i0];

     label3:
        $r2 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFSheet _sheet>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.streaming.SXSSFSheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.Row$MissingCellPolicy getMissingCellPolicy()>();

        $r5 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_NULL_AND_BLANK>;

        if $r4 != $r5 goto label4;

        return $r18;

     label4:
        $r6 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_BLANK_AS_NULL>;

        if $r4 != $r6 goto label7;

        if $r18 != null goto label5;

        return $r18;

     label5:
        $i4 = interfaceinvoke $r18.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i4 != 3 goto label6;

        return null;

     label6:
        return $r18;

     label7:
        $r7 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy CREATE_NULL_AS_BLANK>;

        if $r4 != $r7 goto label9;

        if $r18 != null goto label8;

        $s3 = (short) i0;

        $i5 = (int) $s3;

        $r16 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Cell createCell(int,int)>($i5, 3);

        return $r16;

     label8:
        return $r18;

     label9:
        $r21 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal policy ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i2 = $r4.<org.apache.poi.ss.usermodel.Row$MissingCellPolicy: int id>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r21;
    }

    public org.apache.poi.ss.usermodel.Cell getCell(int, org.apache.poi.ss.usermodel.Row$MissingCellPolicy)
    {
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy r2, $r3, $r4, $r5;
        int i0, $i1, $i2;
        org.apache.poi.ss.usermodel.Cell $r1, $r14;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r6;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.poi.ss.usermodel.Row$MissingCellPolicy;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Cell getCell(int)>(i0);

        $r3 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_NULL_AND_BLANK>;

        if r2 != $r3 goto label1;

        return $r1;

     label1:
        $r4 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_BLANK_AS_NULL>;

        if r2 != $r4 goto label4;

        if $r1 != null goto label2;

        return $r1;

     label2:
        $i2 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i2 != 3 goto label3;

        return null;

     label3:
        return $r1;

     label4:
        $r5 = <org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy CREATE_NULL_AS_BLANK>;

        if r2 != $r5 goto label6;

        if $r1 != null goto label5;

        $r14 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Cell createCell(int,int)>(i0, 3);

        return $r14;

     label5:
        return $r1;

     label6:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal policy ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = r2.<org.apache.poi.ss.usermodel.Row$MissingCellPolicy: int id>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r6;
    }

    public short getFirstCellNum()
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r2;
        short $s1, $s4;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i0, i2;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if i2 > $i0 goto label3;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r2 = $r1[i2];

        if $r2 == null goto label2;

        $s1 = (short) i2;

        return $s1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $s4 = (short) -1;

        return $s4;
    }

    public short getLastCellNum()
    {
        short $s3;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i0, $i1, $i2, $i5;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $i0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        $s3 = -1;

        goto label2;

     label1:
        $i1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        $i2 = $i1 + 1;

        $s3 = (short) $i2;

     label2:
        return $s3;
    }

    public int getPhysicalNumberOfCells()
    {
        org.apache.poi.xssf.streaming.SXSSFCell $r2;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i0, i1, i2;
        org.apache.poi.xssf.streaming.SXSSFCell[] $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        i1 = 0;

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: int _maxColumn>;

        if i2 > $i0 goto label3;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFCell[] _cells>;

        $r2 = $r1[i2];

        if $r2 == null goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i1;
    }

    public void setHeight(short)
    {
        short s0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        s0 := @parameter0: short;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height> = s0;

        return;
    }

    public void setZeroHeight(boolean)
    {
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: boolean _zHeight> = z0;

        return;
    }

    public boolean getZeroHeight()
    {
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $z0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: boolean _zHeight>;

        return $z0;
    }

    public void setHeightInPoints(float)
    {
        short $s2, $s4;
        byte $b0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i1;
        float f0, $f1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        f0 := @parameter0: float;

        $b0 = f0 cmpl -1.0F;

        if $b0 != 0 goto label1;

        $s4 = (short) -1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height> = $s4;

        goto label2;

     label1:
        $f1 = f0 * 20.0F;

        $i1 = (int) $f1;

        $s2 = (short) $i1;

        r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height> = $s2;

     label2:
        return;
    }

    public short getHeight()
    {
        org.apache.poi.ss.usermodel.Sheet $r1;
        short $s0, $s1, $s3;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i2, $i4, $i6;
        float $f0, $f1;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $s0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height>;

        $i4 = (int) $s0;

        $i6 = (int) -1;

        if $i4 != $i6 goto label1;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $f0 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Sheet: float getDefaultRowHeightInPoints()>();

        $f1 = $f0 * 20.0F;

        goto label2;

     label1:
        $s1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height>;

        $f1 = (float) $s1;

     label2:
        $i2 = (int) $f1;

        $s3 = (short) $i2;

        return $s3;
    }

    public float getHeightInPoints()
    {
        org.apache.poi.ss.usermodel.Sheet $r1;
        short $s0, $s1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i2, $i4;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $s0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height>;

        $i2 = (int) $s0;

        $i4 = (int) -1;

        if $i2 != $i4 goto label1;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $f2 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Sheet: float getDefaultRowHeightInPoints()>();

        $d1 = (double) $f2;

        $f3 = (float) $d1;

        return $f3;

     label1:
        $s1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _height>;

        $f0 = (float) $s1;

        $d0 = (double) $f0;

        $d2 = $d0 / 20.0;

        $f1 = (float) $d2;

        return $f1;
    }

    public boolean isFormatted()
    {
        short $s0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        int $i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $s0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _style>;

        $i1 = (int) $s0;

        $i3 = (int) -1;

        if $i1 <= $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.poi.ss.usermodel.CellStyle getRowStyle()
    {
        org.apache.poi.ss.usermodel.Sheet $r1;
        org.apache.poi.ss.usermodel.Workbook $r2;
        short $s0;
        org.apache.poi.xssf.streaming.SXSSFRow r0;
        org.apache.poi.ss.usermodel.CellStyle $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: boolean isFormatted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r2 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $s0 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: short _style>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.CellStyle getCellStyleAt(short)>($s0);

        return $r3;
    }

    public void setRowStyle(org.apache.poi.ss.usermodel.CellStyle)
    {
        short $s0, $s2;
        org.apache.poi.xssf.streaming.SXSSFRow r1;
        org.apache.poi.ss.usermodel.CellStyle r0;

        r1 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        r0 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        if r0 != null goto label1;

        $s2 = (short) -1;

        r1.<org.apache.poi.xssf.streaming.SXSSFRow: short _style> = $s2;

        return;

     label1:
        $s0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.CellStyle: short getIndex()>();

        r1.<org.apache.poi.xssf.streaming.SXSSFRow: short _style> = $s0;

        return;
    }

    public java.util.Iterator cellIterator()
    {
        java.util.Iterator $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SXSSFRow: java.util.Iterator iterator()>();

        return $r1;
    }

    public org.apache.poi.ss.usermodel.Sheet getSheet()
    {
        org.apache.poi.xssf.streaming.SXSSFSheet $r1;
        org.apache.poi.xssf.streaming.SXSSFRow r0;

        r0 := @this: org.apache.poi.xssf.streaming.SXSSFRow;

        $r1 = r0.<org.apache.poi.xssf.streaming.SXSSFRow: org.apache.poi.xssf.streaming.SXSSFSheet _sheet>;

        return $r1;
    }
}
