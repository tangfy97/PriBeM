public class org.apache.http.message.BasicHttpResponse extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.HttpResponse
{
    private org.apache.http.StatusLine statusline;
    private org.apache.http.HttpEntity entity;
    private org.apache.http.ReasonPhraseCatalog reasonCatalog;
    private java.util.Locale locale;

    public void <init>(org.apache.http.StatusLine, org.apache.http.ReasonPhraseCatalog, java.util.Locale)
    {
        org.apache.http.message.BasicHttpResponse r0;
        java.util.Locale r3, $r5;
        org.apache.http.ReasonPhraseCatalog r2;
        java.lang.IllegalArgumentException $r4;
        org.apache.http.StatusLine r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r1 := @parameter0: org.apache.http.StatusLine;

        r2 := @parameter1: org.apache.http.ReasonPhraseCatalog;

        r3 := @parameter2: java.util.Locale;

        specialinvoke r0.<org.apache.http.message.AbstractHttpMessage: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Status line may not be null.");

        throw $r4;

     label1:
        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = r1;

        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.ReasonPhraseCatalog reasonCatalog> = r2;

        if r3 == null goto label2;

        $r5 = r3;

        goto label3;

     label2:
        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label3:
        r0.<org.apache.http.message.BasicHttpResponse: java.util.Locale locale> = $r5;

        return;
    }

    public void <init>(org.apache.http.StatusLine)
    {
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.StatusLine r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r1 := @parameter0: org.apache.http.StatusLine;

        specialinvoke r0.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)>(r1, null, null);

        return;
    }

    public void <init>(org.apache.http.ProtocolVersion, int, java.lang.String)
    {
        org.apache.http.ProtocolVersion r2;
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.message.BasicStatusLine $r1;
        int i0;
        java.lang.String r3;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r2 := @parameter0: org.apache.http.ProtocolVersion;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = new org.apache.http.message.BasicStatusLine;

        specialinvoke $r1.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>(r2, i0, r3);

        specialinvoke r0.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)>($r1, null, null);

        return;
    }

    public org.apache.http.ProtocolVersion getProtocolVersion()
    {
        org.apache.http.ProtocolVersion $r2;
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.StatusLine $r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $r2 = interfaceinvoke $r1.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        return $r2;
    }

    public org.apache.http.StatusLine getStatusLine()
    {
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.StatusLine $r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        return $r1;
    }

    public org.apache.http.HttpEntity getEntity()
    {
        org.apache.http.HttpEntity $r1;
        org.apache.http.message.BasicHttpResponse r0;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity entity>;

        return $r1;
    }

    public java.util.Locale getLocale()
    {
        org.apache.http.message.BasicHttpResponse r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: java.util.Locale locale>;

        return $r1;
    }

    public void setStatusLine(org.apache.http.StatusLine)
    {
        org.apache.http.message.BasicHttpResponse r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.StatusLine r0;

        r1 := @this: org.apache.http.message.BasicHttpResponse;

        r0 := @parameter0: org.apache.http.StatusLine;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Status line may not be null");

        throw $r2;

     label1:
        r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = r0;

        return;
    }

    public void setStatusLine(org.apache.http.ProtocolVersion, int)
    {
        org.apache.http.ProtocolVersion r2;
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.message.BasicStatusLine $r1;
        int i0;
        java.lang.String $r3;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r2 := @parameter0: org.apache.http.ProtocolVersion;

        i0 := @parameter1: int;

        $r1 = new org.apache.http.message.BasicStatusLine;

        $r3 = virtualinvoke r0.<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>(i0);

        specialinvoke $r1.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>(r2, i0, $r3);

        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = $r1;

        return;
    }

    public void setStatusLine(org.apache.http.ProtocolVersion, int, java.lang.String)
    {
        org.apache.http.ProtocolVersion r2;
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.message.BasicStatusLine $r1;
        int i0;
        java.lang.String r3;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r2 := @parameter0: org.apache.http.ProtocolVersion;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = new org.apache.http.message.BasicStatusLine;

        specialinvoke $r1.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>(r2, i0, r3);

        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = $r1;

        return;
    }

    public void setStatusCode(int)
    {
        org.apache.http.ProtocolVersion $r2;
        org.apache.http.message.BasicHttpResponse r0;
        org.apache.http.message.BasicStatusLine $r3;
        int i0;
        java.lang.String $r4;
        org.apache.http.StatusLine $r1;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $r2 = interfaceinvoke $r1.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r3 = new org.apache.http.message.BasicStatusLine;

        $r4 = virtualinvoke r0.<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>(i0);

        specialinvoke $r3.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>($r2, i0, $r4);

        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = $r3;

        return;
    }

    public void setReasonPhrase(java.lang.String)
    {
        org.apache.http.message.BasicStatusLine $r2;
        java.lang.IllegalArgumentException $r6;
        org.apache.http.StatusLine $r3, $r5;
        org.apache.http.ProtocolVersion $r4;
        org.apache.http.message.BasicHttpResponse r1;
        int $i0, $i1, $i2;
        java.lang.String r0;

        r1 := @this: org.apache.http.message.BasicHttpResponse;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(10);

        if $i1 >= 0 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(13);

        if $i2 < 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Line break in reason phrase.");

        throw $r6;

     label2:
        $r2 = new org.apache.http.message.BasicStatusLine;

        $r3 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $r4 = interfaceinvoke $r3.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r5 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $i0 = interfaceinvoke $r5.<org.apache.http.StatusLine: int getStatusCode()>();

        specialinvoke $r2.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>($r4, $i0, r0);

        r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = $r2;

        return;
    }

    public void setEntity(org.apache.http.HttpEntity)
    {
        org.apache.http.HttpEntity r1;
        org.apache.http.message.BasicHttpResponse r0;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        r1 := @parameter0: org.apache.http.HttpEntity;

        r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity entity> = r1;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.http.message.BasicStatusLine $r3;
        java.lang.IllegalArgumentException $r7;
        org.apache.http.StatusLine $r2, $r4;
        org.apache.http.ProtocolVersion $r5;
        org.apache.http.message.BasicHttpResponse r1;
        java.util.Locale r0;
        int $i0;
        java.lang.String $r6;

        r1 := @this: org.apache.http.message.BasicHttpResponse;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Locale may not be null.");

        throw $r7;

     label1:
        r1.<org.apache.http.message.BasicHttpResponse: java.util.Locale locale> = r0;

        $r2 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $i0 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        $r3 = new org.apache.http.message.BasicStatusLine;

        $r4 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $r5 = interfaceinvoke $r4.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r6 = virtualinvoke r1.<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>($i0);

        specialinvoke $r3.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>($r5, $i0, $r6);

        r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline> = $r3;

        return;
    }

    protected java.lang.String getReason(int)
    {
        org.apache.http.message.BasicHttpResponse r0;
        java.util.Locale $r2;
        org.apache.http.ReasonPhraseCatalog $r1, $r3;
        int i0;
        java.lang.String $r4;

        r0 := @this: org.apache.http.message.BasicHttpResponse;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.ReasonPhraseCatalog reasonCatalog>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.ReasonPhraseCatalog reasonCatalog>;

        $r2 = r0.<org.apache.http.message.BasicHttpResponse: java.util.Locale locale>;

        $r4 = interfaceinvoke $r3.<org.apache.http.ReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)>(i0, $r2);

     label2:
        return $r4;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.HeaderGroup $r5;
        org.apache.http.StatusLine $r2;
        org.apache.http.message.BasicHttpResponse r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r7;

        r1 := @this: org.apache.http.message.BasicHttpResponse;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<org.apache.http.message.BasicHttpResponse: org.apache.http.message.HeaderGroup headergroup>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
