public final class org.apache.poi.hwpf.usermodel.CharacterRun extends org.apache.poi.hwpf.usermodel.Range implements java.lang.Cloneable
{
    public static final short SPRM_FRMARKDEL;
    public static final short SPRM_FRMARK;
    public static final short SPRM_FFLDVANISH;
    public static final short SPRM_PICLOCATION;
    public static final short SPRM_IBSTRMARK;
    public static final short SPRM_DTTMRMARK;
    public static final short SPRM_FDATA;
    public static final short SPRM_SYMBOL;
    public static final short SPRM_FOLE2;
    public static final short SPRM_HIGHLIGHT;
    public static final short SPRM_OBJLOCATION;
    public static final short SPRM_ISTD;
    public static final short SPRM_FBOLD;
    public static final short SPRM_FITALIC;
    public static final short SPRM_FSTRIKE;
    public static final short SPRM_FOUTLINE;
    public static final short SPRM_FSHADOW;
    public static final short SPRM_FSMALLCAPS;
    public static final short SPRM_FCAPS;
    public static final short SPRM_FVANISH;
    public static final short SPRM_KUL;
    public static final short SPRM_DXASPACE;
    public static final short SPRM_LID;
    public static final short SPRM_ICO;
    public static final short SPRM_HPS;
    public static final short SPRM_HPSPOS;
    public static final short SPRM_ISS;
    public static final short SPRM_HPSKERN;
    public static final short SPRM_YSRI;
    public static final short SPRM_RGFTCASCII;
    public static final short SPRM_RGFTCFAREAST;
    public static final short SPRM_RGFTCNOTFAREAST;
    public static final short SPRM_CHARSCALE;
    public static final short SPRM_FDSTRIKE;
    public static final short SPRM_FIMPRINT;
    public static final short SPRM_FSPEC;
    public static final short SPRM_FOBJ;
    public static final short SPRM_PROPRMARK;
    public static final short SPRM_FEMBOSS;
    public static final short SPRM_SFXTEXT;
    public static final short SPRM_DISPFLDRMARK;
    public static final short SPRM_IBSTRMARKDEL;
    public static final short SPRM_DTTMRMARKDEL;
    public static final short SPRM_BRC;
    public static final short SPRM_SHD;
    public static final short SPRM_IDSIRMARKDEL;
    public static final short SPRM_CPG;
    public static final short SPRM_NONFELID;
    public static final short SPRM_FELID;
    public static final short SPRM_IDCTHINT;
    protected short _istd;
    protected org.apache.poi.hwpf.sprm.SprmBuffer _chpx;
    protected org.apache.poi.hwpf.usermodel.CharacterProperties _props;

    void <init>(org.apache.poi.hwpf.model.CHPX, org.apache.poi.hwpf.model.StyleSheet, short, org.apache.poi.hwpf.usermodel.Range)
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r5;
        org.apache.poi.hwpf.model.CHPX r2;
        org.apache.poi.hwpf.usermodel.Range r1;
        short s6;
        org.apache.poi.hwpf.model.StyleSheet r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r4;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        r2 := @parameter0: org.apache.poi.hwpf.model.CHPX;

        r3 := @parameter1: org.apache.poi.hwpf.model.StyleSheet;

        s6 := @parameter2: short;

        r1 := @parameter3: org.apache.poi.hwpf.usermodel.Range;

        $i0 = r1.<org.apache.poi.hwpf.usermodel.Range: int _start>;

        $i1 = virtualinvoke r2.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = r1.<org.apache.poi.hwpf.usermodel.Range: int _end>;

        $i4 = virtualinvoke r2.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Range: void <init>(int,int,org.apache.poi.hwpf.usermodel.Range)>($i2, $i5, r1);

        $r4 = virtualinvoke r2.<org.apache.poi.hwpf.model.CHPX: org.apache.poi.hwpf.usermodel.CharacterProperties getCharacterProperties(org.apache.poi.hwpf.model.StyleSheet,short)>(r3, s6);

        r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props> = $r4;

        $r5 = virtualinvoke r2.<org.apache.poi.hwpf.model.CHPX: org.apache.poi.hwpf.sprm.SprmBuffer getSprmBuf()>();

        r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx> = $r5;

        r0.<org.apache.poi.hwpf.usermodel.CharacterRun: short _istd> = s6;

        return;
    }

    public int type()
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        return 1;
    }

    public boolean isMarkedDeleted()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFRMarkDel()>();

        return $z0;
    }

    public void markDeleted(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFRMarkDel(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2048, $b0);

        return;
    }

    public boolean isBold()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFBold()>();

        return $z0;
    }

    public void setBold(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFBold(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2101, $b0);

        return;
    }

    public boolean isItalic()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFItalic()>();

        return $z0;
    }

    public void setItalic(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFItalic(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2102, $b0);

        return;
    }

    public boolean isOutlined()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFOutline()>();

        return $z0;
    }

    public void setOutline(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFOutline(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2104, $b0);

        return;
    }

    public boolean isFldVanished()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFFldVanish()>();

        return $z0;
    }

    public void setFldVanish(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFFldVanish(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2050, $b0);

        return;
    }

    public boolean isSmallCaps()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFSmallCaps()>();

        return $z0;
    }

    public void setSmallCaps(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSmallCaps(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2106, $b0);

        return;
    }

    public boolean isCapitalized()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFCaps()>();

        return $z0;
    }

    public void setCapitalized(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFCaps(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2107, $b0);

        return;
    }

    public boolean isVanished()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFVanish()>();

        return $z0;
    }

    public void setVanished(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFVanish(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2108, $b0);

        return;
    }

    public boolean isMarkedInserted()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFRMark()>();

        return $z0;
    }

    public void markInserted(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFRMark(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2049, $b0);

        return;
    }

    public boolean isStrikeThrough()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFStrike()>();

        return $z0;
    }

    public void strikeThrough(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFStrike(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2103, $b0);

        return;
    }

    public boolean isShadowed()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFShadow()>();

        return $z0;
    }

    public void setShadow(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFShadow(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2105, $b0);

        return;
    }

    public boolean isEmbossed()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFEmboss()>();

        return $z0;
    }

    public void setEmbossed(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFEmboss(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2136, $b0);

        return;
    }

    public boolean isImprinted()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFImprint()>();

        return $z0;
    }

    public void setImprinted(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFImprint(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2132, $b0);

        return;
    }

    public boolean isDoubleStrikeThrough()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFDStrike()>();

        return $z0;
    }

    public void setDoubleStrikethrough(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFDStrike(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(10835, $b0);

        return;
    }

    public void setFtcAscii(int)
    {
        short $s1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcAscii(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(19023, $s1);

        return;
    }

    public void setFtcFE(int)
    {
        short $s1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcFE(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(19024, $s1);

        return;
    }

    public void setFtcOther(int)
    {
        short $s1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcOther(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(19025, $s1);

        return;
    }

    public int getFontSize()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        return $i0;
    }

    public void setFontSize(int)
    {
        short $s1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(19011, $s1);

        return;
    }

    public int getCharacterSpacing()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getDxaSpace()>();

        return $i0;
    }

    public void setCharacterSpacing(int)
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDxaSpace(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,int)>(-30656, i0);

        return;
    }

    public short getSubSuperScriptIndex()
    {
        short $s1;
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: byte getIss()>();

        $s1 = (short) $b0;

        return $s1;
    }

    public void setSubSuperScriptIndex(short)
    {
        short s0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int $i1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        s0 := @parameter0: short;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i1 = (int) s0;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDxaSpace(int)>($i1);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(-30656, s0);

        return;
    }

    public int getUnderlineCode()
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: byte getKul()>();

        $i1 = (int) $b0;

        return $i1;
    }

    public void setUnderlineCode(int)
    {
        byte $b1, $b2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setKul(byte)>($b1);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $b2 = (byte) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(10814, $b2);

        return;
    }

    public int getColor()
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: byte getIco()>();

        $i1 = (int) $b0;

        return $i1;
    }

    public void setColor(int)
    {
        byte $b1, $b2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIco(byte)>($b1);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $b2 = (byte) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(10818, $b2);

        return;
    }

    public int getVerticalOffset()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: short getHpsPos()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public void setVerticalOffset(int)
    {
        short $s1;
        byte $b2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $s1 = (short) i0;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHpsPos(short)>($s1);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $b2 = (byte) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(18501, $b2);

        return;
    }

    public int getKerning()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHpsKern()>();

        return $i0;
    }

    public void setKerning(int)
    {
        short $s1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHpsKern(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,short)>(18507, $s1);

        return;
    }

    public boolean isHighlighted()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFHighlight()>();

        return $z0;
    }

    public byte getHighlightedColor()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $b0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: byte getIcoHighlight()>();

        return $b0;
    }

    public void setHighlighted(byte)
    {
        byte b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r3;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1, $r2;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        b0 := @parameter0: byte;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFHighlight(boolean)>(1);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIcoHighlight(byte)>(b0);

        $r3 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(10764, b0);

        return;
    }

    public java.lang.String getFontName()
    {
        org.apache.poi.hwpf.model.FontTable $r2, $r4;
        org.apache.poi.hwpf.HWPFDocumentCore $r1, $r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0;
        java.lang.String $r6;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r5;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore _doc>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hwpf.model.FontTable getFontTable()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore _doc>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hwpf.model.FontTable getFontTable()>();

        $r5 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getFtcAscii()>();

        $r6 = virtualinvoke $r4.<org.apache.poi.hwpf.model.FontTable: java.lang.String getMainFont(int)>($i0);

        return $r6;
    }

    public boolean isSpecialCharacter()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFSpec()>();

        return $z0;
    }

    public void setSpecialCharacter(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSpec(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2133, $b0);

        return;
    }

    public boolean isObj()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFObj()>();

        return $z0;
    }

    public void setObj(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFObj(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2134, $b0);

        return;
    }

    public int getPicOffset()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getFcPic()>();

        return $i0;
    }

    public void setPicOffset(int)
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFcPic(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,int)>(27139, i0);

        return;
    }

    public boolean isData()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFData()>();

        return $z0;
    }

    public void setData(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFData(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2134, $b0);

        return;
    }

    public boolean isOle2()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFOle2()>();

        return $z0;
    }

    public void setOle2(boolean)
    {
        byte $b0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFOle2(boolean)>(z0);

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,byte)>(2134, $b0);

        return;
    }

    public int getObjOffset()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getFcObj()>();

        return $i0;
    }

    public void setObjOffset(int)
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.sprm.SprmBuffer $r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFcObj(int)>(i0);

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.sprm.SprmBuffer _chpx>;

        virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmBuffer: void updateSprm(short,int)>(26638, i0);

        return;
    }

    public int getIco24()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getIco24()>();

        return $i0;
    }

    public void setIco24(int)
    {
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIco24(int)>(i0);

        return;
    }

    public org.apache.poi.hwpf.usermodel.CharacterProperties cloneProperties()
    {
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1, $r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.CharacterProperties clone()>();

        return $r2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        byte[] $r25, $r27;
        org.apache.poi.hwpf.usermodel.CharacterRun r0, r2;
        org.apache.poi.hwpf.usermodel.DateAndTime $r5, $r7, $r10, $r12, $r15, $r17, $r20, $r22;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r3, $r4, $r8, $r9, $r13, $r14, $r18, $r19, $r23, $r24, $r28, $r29;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r30, $r31;
        java.lang.Object $r1, $r6, $r11, $r16, $r21, $r26;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.poi.hwpf.usermodel.CharacterRun) $r1;

        $r4 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r3 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r5 = virtualinvoke $r3.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMark()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.usermodel.DateAndTime: java.lang.Object clone()>();

        $r7 = (org.apache.poi.hwpf.usermodel.DateAndTime) $r6;

        virtualinvoke $r4.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r7);

        $r9 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r8 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r10 = virtualinvoke $r8.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.DateAndTime getDttmRMarkDel()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.hwpf.usermodel.DateAndTime: java.lang.Object clone()>();

        $r12 = (org.apache.poi.hwpf.usermodel.DateAndTime) $r11;

        virtualinvoke $r9.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmRMarkDel(org.apache.poi.hwpf.usermodel.DateAndTime)>($r12);

        $r14 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r13 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r15 = virtualinvoke $r13.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.DateAndTime getDttmPropRMark()>();

        $r16 = virtualinvoke $r15.<org.apache.poi.hwpf.usermodel.DateAndTime: java.lang.Object clone()>();

        $r17 = (org.apache.poi.hwpf.usermodel.DateAndTime) $r16;

        virtualinvoke $r14.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmPropRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r17);

        $r19 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r18 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r20 = virtualinvoke $r18.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.DateAndTime getDttmDispFldRMark()>();

        $r21 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.DateAndTime: java.lang.Object clone()>();

        $r22 = (org.apache.poi.hwpf.usermodel.DateAndTime) $r21;

        virtualinvoke $r19.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmDispFldRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r22);

        $r24 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r23 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r25 = virtualinvoke $r23.<org.apache.poi.hwpf.usermodel.CharacterProperties: byte[] getXstDispFldRMark()>();

        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.Object clone()>();

        $r27 = (byte[]) $r26;

        virtualinvoke $r24.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setXstDispFldRMark(byte[])>($r27);

        $r29 = r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r28 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r30 = virtualinvoke $r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.ShadingDescriptor getShd()>();

        $r31 = virtualinvoke $r30.<org.apache.poi.hwpf.usermodel.ShadingDescriptor: org.apache.poi.hwpf.usermodel.ShadingDescriptor clone()>();

        virtualinvoke $r29.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setShd(org.apache.poi.hwpf.usermodel.ShadingDescriptor)>($r31);

        return r2;
    }

    public boolean isSymbol()
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSpecialCharacter()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("(");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public char getSymbolCharacter()
    {
        java.lang.IllegalStateException $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0;
        char $c1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSymbol()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r2.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getXchSym()>();

        $c1 = (char) $i0;

        return $c1;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a symbol CharacterRun");

        throw $r1;
    }

    public org.apache.poi.hwpf.model.Ffn getSymbolFont()
    {
        org.apache.poi.hwpf.model.FontTable $r3, $r5;
        org.apache.poi.hwpf.model.Ffn $r9;
        java.lang.IllegalStateException $r1;
        org.apache.poi.hwpf.HWPFDocumentCore $r2, $r4;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.model.Ffn[] $r6;
        int $i0, $i1, $i2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSymbol()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore _doc>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hwpf.model.FontTable getFontTable()>();

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore _doc>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hwpf.HWPFDocumentCore: org.apache.poi.hwpf.model.FontTable getFontTable()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.model.FontTable: org.apache.poi.hwpf.model.Ffn[] getFontNames()>();

        $i0 = lengthof $r6;

        $r7 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i1 = virtualinvoke $r7.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getFtcSym()>();

        if $i0 > $i1 goto label2;

        return null;

     label2:
        $r8 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i2 = virtualinvoke $r8.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getFtcSym()>();

        $r9 = $r6[$i2];

        return $r9;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a symbol CharacterRun");

        throw $r1;
    }

    public org.apache.poi.hwpf.usermodel.BorderCode getBorder()
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r2;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.BorderCode getBrc()>();

        return $r2;
    }

    public int getLanguageCode()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r1;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.CharacterProperties _props>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getLidDefault()>();

        return $i0;
    }

    public short getStyleIndex()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $s0 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: short _istd>;

        return $s0;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r1, $r7;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.String text()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharacterRun of ");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" characters - ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String[] getDropDownListValues()
    {
        byte[] $r6, $r8;
        org.apache.poi.hwpf.HWPFDocument $r5;
        org.apache.poi.hwpf.HWPFDocumentCore $r1, $r4;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.model.NilPICFAndBinData $r3;
        char $c1;
        java.lang.String[] $r9;
        int $i0, $i2;
        org.apache.poi.hwpf.model.FFData $r7;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore getDocument()>();

        $z0 = $r1 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.StringBuilder _text>;

        $i0 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int _start>;

        $c1 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i0);

        if $c1 != 1 goto label1;

        $r3 = new org.apache.poi.hwpf.model.NilPICFAndBinData;

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore getDocument()>();

        $r5 = (org.apache.poi.hwpf.HWPFDocument) $r4;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.HWPFDocument: byte[] getDataStream()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        specialinvoke $r3.<org.apache.poi.hwpf.model.NilPICFAndBinData: void <init>(byte[],int)>($r6, $i2);

        $r7 = new org.apache.poi.hwpf.model.FFData;

        $r8 = virtualinvoke $r3.<org.apache.poi.hwpf.model.NilPICFAndBinData: byte[] getBinData()>();

        specialinvoke $r7.<org.apache.poi.hwpf.model.FFData: void <init>(byte[],int)>($r8, 0);

        $r9 = virtualinvoke $r7.<org.apache.poi.hwpf.model.FFData: java.lang.String[] getDropList()>();

        return $r9;

     label1:
        return null;
    }

    public java.lang.Integer getDropDownListDefaultItemIndex()
    {
        byte[] $r6, $r8;
        org.apache.poi.hwpf.HWPFDocument $r5;
        org.apache.poi.hwpf.HWPFDocumentCore $r1, $r4;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        org.apache.poi.hwpf.model.NilPICFAndBinData $r3;
        char $c1;
        java.lang.Integer $r9;
        int $i0, $i2, $i3;
        org.apache.poi.hwpf.model.FFData $r7;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.CharacterRun;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore getDocument()>();

        $z0 = $r1 instanceof org.apache.poi.hwpf.HWPFDocument;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: java.lang.StringBuilder _text>;

        $i0 = r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int _start>;

        $c1 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>($i0);

        if $c1 != 1 goto label1;

        $r3 = new org.apache.poi.hwpf.model.NilPICFAndBinData;

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.HWPFDocumentCore getDocument()>();

        $r5 = (org.apache.poi.hwpf.HWPFDocument) $r4;

        $r6 = virtualinvoke $r5.<org.apache.poi.hwpf.HWPFDocument: byte[] getDataStream()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getPicOffset()>();

        specialinvoke $r3.<org.apache.poi.hwpf.model.NilPICFAndBinData: void <init>(byte[],int)>($r6, $i2);

        $r7 = new org.apache.poi.hwpf.model.FFData;

        $r8 = virtualinvoke $r3.<org.apache.poi.hwpf.model.NilPICFAndBinData: byte[] getBinData()>();

        specialinvoke $r7.<org.apache.poi.hwpf.model.FFData: void <init>(byte[],int)>($r8, 0);

        $i3 = virtualinvoke $r7.<org.apache.poi.hwpf.model.FFData: int getDefaultDropDownItemIndex()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r9;

     label1:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_IDCTHINT> = 10351;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FELID> = 18542;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_NONFELID> = 18541;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_CPG> = 18539;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_IDSIRMARKDEL> = 18535;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_SHD> = 18534;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_BRC> = 26725;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_DTTMRMARKDEL> = 26724;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_IBSTRMARKDEL> = 18531;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_DISPFLDRMARK> = -13726;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_SFXTEXT> = 10329;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FEMBOSS> = 2136;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_PROPRMARK> = -13737;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FOBJ> = 2134;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FSPEC> = 2133;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FIMPRINT> = 2132;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FDSTRIKE> = 10835;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_CHARSCALE> = 18514;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_RGFTCNOTFAREAST> = 19025;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_RGFTCFAREAST> = 19024;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_RGFTCASCII> = 19023;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_YSRI> = 18510;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_HPSKERN> = 18507;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_ISS> = 10824;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_HPSPOS> = 18501;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_HPS> = 19011;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_ICO> = 10818;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_LID> = 19009;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_DXASPACE> = -30656;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_KUL> = 10814;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FVANISH> = 2108;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FCAPS> = 2107;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FSMALLCAPS> = 2106;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FSHADOW> = 2105;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FOUTLINE> = 2104;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FSTRIKE> = 2103;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FITALIC> = 2102;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FBOLD> = 2101;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_ISTD> = 18992;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_OBJLOCATION> = 26638;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_HIGHLIGHT> = 10764;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FOLE2> = 2058;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_SYMBOL> = 27145;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FDATA> = 2054;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_DTTMRMARK> = 26629;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_IBSTRMARK> = 18436;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_PICLOCATION> = 27139;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FFLDVANISH> = 2050;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FRMARK> = 2049;

        <org.apache.poi.hwpf.usermodel.CharacterRun: short SPRM_FRMARKDEL> = 2048;

        return;
    }
}
