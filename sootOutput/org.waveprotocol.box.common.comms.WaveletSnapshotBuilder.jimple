public final class org.waveprotocol.box.common.comms.WaveletSnapshotBuilder extends java.lang.Object
{
    private java.lang.String waveletId;
    private final java.util.List participantId;
    private final java.util.List document;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion version;
    private java.lang.Long lastModifiedTime;
    private java.lang.String creator;
    private java.lang.Long creationTime;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List document> = $r2;

        return;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setWaveletId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.String waveletId> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder addAllParticipantId(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setParticipantId(int, java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder addParticipantId(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder clearParticipantId()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder addAllDocument(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r2;
        java.lang.Object $r3;
        org.waveprotocol.box.common.comms.DocumentSnapshot r4;
        boolean $z0;

        r2 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.box.common.comms.DocumentSnapshot) $r3;

        virtualinvoke r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r4);

        goto label1;

     label2:
        return r2;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setDocument(int, org.waveprotocol.box.common.comms.DocumentSnapshot)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;
        int i0;
        org.waveprotocol.box.common.comms.DocumentSnapshot r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.box.common.comms.DocumentSnapshot;

        $r2 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;
        org.waveprotocol.box.common.comms.DocumentSnapshot r1;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.box.common.comms.DocumentSnapshot;

        $r2 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder clearDocument()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion version> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setLastModifiedTime(long)
    {
        long l0;
        java.lang.Long $r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.Long lastModifiedTime> = $r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setCreator(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.String creator> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshotBuilder setCreationTime(long)
    {
        long l0;
        java.lang.Long $r1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.Long creationTime> = $r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshot build(org.waveprotocol.box.common.comms.WaveletSnapshotBuilder$Factory)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder r2;
        org.waveprotocol.box.common.comms.WaveletSnapshot $r1;
        long $l0, $l1;
        org.waveprotocol.box.common.comms.WaveletSnapshotBuilder$Factory r0;
        java.util.List $r4, $r5;
        java.lang.Long $r7, $r9;
        java.lang.String $r3, $r8;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r6;

        r2 := @this: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder;

        r0 := @parameter0: org.waveprotocol.box.common.comms.WaveletSnapshotBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder$Factory: org.waveprotocol.box.common.comms.WaveletSnapshot create()>();

        $r3 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.String waveletId>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void setWaveletId(java.lang.String)>($r3);

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void clearParticipantId()>();

        $r4 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List participantId>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void addAllParticipantId(java.util.List)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void clearDocument()>();

        $r5 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void addAllDocument(java.util.List)>($r5);

        $r6 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion version>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r6);

        $r7 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.Long lastModifiedTime>;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void setLastModifiedTime(long)>($l0);

        $r8 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.String creator>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void setCreator(java.lang.String)>($r8);

        $r9 = r2.<org.waveprotocol.box.common.comms.WaveletSnapshotBuilder: java.lang.Long creationTime>;

        $l1 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: void setCreationTime(long)>($l1);

        return $r1;
    }
}
