public class org.apache.commons.httpclient.util.IdleConnectionHandler extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private java.util.Map connectionToAdded;
    static java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.commons.httpclient.util.IdleConnectionHandler r0;

        r0 := @this: org.apache.commons.httpclient.util.IdleConnectionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded> = $r1;

        return;
    }

    public void add(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HttpConnection r3;
        long $l0;
        java.lang.Long $r0;
        java.lang.StringBuffer $r5, $r7, $r8;
        org.apache.commons.httpclient.util.IdleConnectionHandler r2;
        java.util.Map $r4;
        org.apache.commons.logging.Log $r1, $r6;
        java.lang.String $r9;
        boolean $z0;

        r2 := @this: org.apache.commons.httpclient.util.IdleConnectionHandler;

        r3 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        $r0 = new java.lang.Long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r0.<java.lang.Long: void <init>(long)>($l0);

        $r1 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Adding connection at: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label1:
        $r4 = r2.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r0);

        return;
    }

    public void remove(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HttpConnection r1;
        org.apache.commons.httpclient.util.IdleConnectionHandler r0;
        java.util.Map $r2;

        r0 := @this: org.apache.commons.httpclient.util.IdleConnectionHandler;

        r1 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        $r2 = r0.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void removeAll()
    {
        org.apache.commons.httpclient.util.IdleConnectionHandler r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.httpclient.util.IdleConnectionHandler;

        $r1 = r0.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public void closeIdleConnections(long)
    {
        org.apache.commons.httpclient.HttpConnection r6;
        long $l0, l1, l2, $l3;
        byte $b4;
        java.lang.Long r9;
        java.lang.StringBuffer $r13, $r14, $r18, $r19, $r21, $r22;
        org.apache.commons.httpclient.util.IdleConnectionHandler r1;
        java.util.Map $r2, $r7;
        int $i5;
        java.lang.String $r15, $r20;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.commons.logging.Log $r0, $r10, $r12, $r17;
        java.lang.Object $r5, $r8;

        r1 := @this: org.apache.commons.httpclient.util.IdleConnectionHandler;

        l1 := @parameter0: long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l0 - l1;

        $r0 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r17 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Checking for connections, idleTimeout: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label1:
        $r2 = r1.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.httpclient.HttpConnection) $r5;

        $r7 = r1.<org.apache.commons.httpclient.util.IdleConnectionHandler: java.util.Map connectionToAdded>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r9 = (java.lang.Long) $r8;

        $l3 = virtualinvoke r9.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp l2;

        $i5 = (int) $b4;

        if $i5 > 0 goto label4;

        $r10 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $z1 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r12 = <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Closing connection, connection time: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label3:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        virtualinvoke r6.<org.apache.commons.httpclient.HttpConnection: void close()>();

     label4:
        goto label2;

     label5:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.commons.httpclient.util.IdleConnectionHandler: java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.util.IdleConnectionHandler: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.util.IdleConnectionHandler");

        <org.apache.commons.httpclient.util.IdleConnectionHandler: java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.util.IdleConnectionHandler: java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.util.IdleConnectionHandler: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
