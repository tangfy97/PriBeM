public class com.sun.lwuit.Image extends java.lang.Object
{
    private java.lang.ref.WeakReference rgbCache;
    private java.lang.Object image;
    int transform;
    private boolean opaqueTested;
    private boolean opaque;
    private java.lang.ref.WeakReference scaleCache;
    private boolean animated;
    private long imageTime;
    private java.lang.String svgBaseURL;
    private byte[] svgData;

    protected void <init>(java.lang.Object)
    {
        com.sun.lwuit.impl.LWUITImplementation $r3;
        java.lang.Object r1;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.Display $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Image;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.Image: boolean opaqueTested> = 0;

        r0.<com.sun.lwuit.Image: long imageTime> = -1L;

        r0.<com.sun.lwuit.Image: java.lang.Object image> = r1;

        $r2 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r3.<com.sun.lwuit.impl.LWUITImplementation: boolean isAnimation(java.lang.Object)>(r1);

        r0.<com.sun.lwuit.Image: boolean animated> = $z0;

        return;
    }

    void <init>(int[], int, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        int[] r3;
        int i0, i1;
        java.lang.Object $r4;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.Image;

        r3 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(int[],int,int)>(r3, i0, i1);

        specialinvoke r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r4);

        return;
    }

    private java.util.Hashtable getScaleCache()
    {
        com.sun.lwuit.Image r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r1, $r2, $r5, $r7;
        java.util.Hashtable $r4, $r6, r8;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache>;

        if $r1 != null goto label1;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r6);

        r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache> = $r7;

        return $r6;

     label1:
        $r2 = r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r8 = (java.util.Hashtable) $r3;

        if r8 != null goto label2;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r8 = $r4;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache> = $r5;

     label2:
        return r8;
    }

    com.sun.lwuit.Image getCachedImage(com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.geom.Dimension r2;
        java.lang.Object $r3, $r5;
        com.sun.lwuit.Image r0, $r6;
        java.lang.ref.WeakReference r4;
        java.util.Hashtable $r1;

        r0 := @this: com.sun.lwuit.Image;

        r2 := @parameter0: com.sun.lwuit.geom.Dimension;

        $r1 = specialinvoke r0.<com.sun.lwuit.Image: java.util.Hashtable getScaleCache()>();

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.ref.WeakReference) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (com.sun.lwuit.Image) $r5;

        return $r6;

     label1:
        return null;
    }

    void cacheImage(com.sun.lwuit.geom.Dimension, com.sun.lwuit.Image)
    {
        com.sun.lwuit.geom.Dimension r4;
        java.lang.ref.WeakReference $r0;
        com.sun.lwuit.Image r1, r2;
        java.util.Hashtable $r3;

        r2 := @this: com.sun.lwuit.Image;

        r4 := @parameter0: com.sun.lwuit.geom.Dimension;

        r1 := @parameter1: com.sun.lwuit.Image;

        $r0 = new java.lang.ref.WeakReference;

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        $r3 = specialinvoke r2.<com.sun.lwuit.Image: java.util.Hashtable getScaleCache()>();

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r0);

        return;
    }

    void setImage(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.lwuit.Image r0;

        r0 := @this: com.sun.lwuit.Image;

        r1 := @parameter0: java.lang.Object;

        r0.<com.sun.lwuit.Image: java.lang.Object image> = r1;

        return;
    }

    void setOpaque(boolean)
    {
        com.sun.lwuit.Image r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Image;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Image: boolean opaque> = z0;

        r0.<com.sun.lwuit.Image: boolean opaqueTested> = 1;

        return;
    }

    public static boolean isSVGSupported()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isSVGSupported()>();

        return $z0;
    }

    public java.lang.Object getSVGDocument()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        java.lang.Object $r3, $r4;
        com.sun.lwuit.Image r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Image;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Image: java.lang.Object image>;

        $r4 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object getSVGDocument(java.lang.Object)>($r3);

        return $r4;
    }

    public static com.sun.lwuit.Image createSVG(java.lang.String, boolean, byte[]) throws java.io.IOException
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        byte[] r4;
        java.lang.Object $r5;
        java.lang.String r3;
        com.sun.lwuit.Image $r0;
        com.sun.lwuit.Display $r1;
        boolean z0;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r4 := @parameter2: byte[];

        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r5 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createSVGImage(java.lang.String,byte[])>(r3, r4);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r5);

        $r0.<com.sun.lwuit.Image: boolean animated> = z0;

        $r0.<com.sun.lwuit.Image: java.lang.String svgBaseURL> = r3;

        $r0.<com.sun.lwuit.Image: byte[] svgData> = r4;

        return $r0;
    }

    public boolean isSVG()
    {
        byte[] $r1;
        com.sun.lwuit.Image r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = r0.<com.sun.lwuit.Image: byte[] svgData>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object createMask()
    {
        byte[] r2;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.IndexedImage $r3;
        byte $b6;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGBCached()>();

        $i0 = lengthof $r1;

        r2 = newarray (byte)[$i0];

        i7 = 0;

     label1:
        $i1 = lengthof $r1;

        if i7 >= $i1 goto label2;

        $i4 = $r1[i7];

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        r2[i7] = $b6;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r3 = new com.sun.lwuit.IndexedImage;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        specialinvoke $r3.<com.sun.lwuit.IndexedImage: void <init>(int,int,int[],byte[])>($i2, $i3, null, r2);

        return $r3;
    }

    public com.sun.lwuit.Image applyMask(java.lang.Object, int, int)
    {
        byte[] $r4;
        com.sun.lwuit.IndexedImage $r3, $r5, $r6;
        byte $b13;
        int[] $r1;
        short s22, $s24;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7, i8, $i9, i10, $i11, $i12, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i23, $i25;
        com.sun.lwuit.Image r0, $r7;
        java.lang.Object r2;

        r0 := @this: com.sun.lwuit.Image;

        r2 := @parameter0: java.lang.Object;

        i3 := @parameter1: int;

        i5 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        $r3 = (com.sun.lwuit.IndexedImage) r2;

        $r4 = virtualinvoke $r3.<com.sun.lwuit.IndexedImage: byte[] getImageDataByte()>();

        $r5 = (com.sun.lwuit.IndexedImage) r2;

        $i0 = virtualinvoke $r5.<com.sun.lwuit.IndexedImage: int getWidth()>();

        $r6 = (com.sun.lwuit.IndexedImage) r2;

        $i1 = virtualinvoke $r6.<com.sun.lwuit.IndexedImage: int getHeight()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        i18 = $i2 - i3;

        $i4 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        i19 = $i4 - i5;

        if i18 <= $i0 goto label1;

        i18 = $i0;

     label1:
        if i19 <= $i1 goto label2;

        i19 = $i1;

     label2:
        i20 = 0;

     label3:
        if i20 >= i18 goto label6;

        i21 = 0;

     label4:
        if i21 >= i19 goto label5;

        i7 = i3 + i20;

        i8 = i5 + i21;

        $i9 = i8 * $i2;

        i10 = i7 + $i9;

        $i11 = i8 * $i0;

        $i12 = i7 + $i11;

        $b13 = $r4[$i12];

        $s24 = (short) $b13;

        s22 = $s24 & 255;

        $i25 = (int) s22;

        $i14 = $i25 << 24;

        i23 = $i14 & -16777216;

        $i15 = $r1[i10];

        $i16 = $i15 & 16777215;

        $i17 = $i16 | i23;

        $r1[i10] = $i17;

        i21 = i21 + 1;

        goto label4;

     label5:
        i20 = i20 + 1;

        goto label3;

     label6:
        $i6 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $r7 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int[],int,int)>($r1, $i2, $i6);

        return $r7;
    }

    public com.sun.lwuit.Image applyMask(java.lang.Object)
    {
        byte[] $r4;
        com.sun.lwuit.IndexedImage $r3, $r5, $r6;
        short s11, $s13;
        byte $b5;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, i10, i12, $i14;
        com.sun.lwuit.Image r0, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Object r2;

        r0 := @this: com.sun.lwuit.Image;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        $r3 = (com.sun.lwuit.IndexedImage) r2;

        $r4 = virtualinvoke $r3.<com.sun.lwuit.IndexedImage: byte[] getImageDataByte()>();

        $r5 = (com.sun.lwuit.IndexedImage) r2;

        $i0 = virtualinvoke $r5.<com.sun.lwuit.IndexedImage: int getWidth()>();

        $r6 = (com.sun.lwuit.IndexedImage) r2;

        $i1 = virtualinvoke $r6.<com.sun.lwuit.IndexedImage: int getHeight()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        if $i0 != $i2 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        if $i1 == $i3 goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mask and image sizes don\'t match");

        throw $r9;

     label2:
        i10 = 0;

     label3:
        $i4 = lengthof $r4;

        if i10 >= $i4 goto label4;

        $b5 = $r4[i10];

        $s13 = (short) $b5;

        s11 = $s13 & 255;

        $i14 = (int) s11;

        $i6 = $i14 << 24;

        i12 = $i6 & -16777216;

        $i7 = $r1[i10];

        $i8 = $i7 & 16777215;

        $i9 = $i8 | i12;

        $r1[i10] = $i9;

        i10 = i10 + 1;

        goto label3;

     label4:
        $r8 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int[],int,int)>($r1, $i0, $i1);

        return $r8;
    }

    public com.sun.lwuit.Image subImage(int, int, int, int, boolean)
    {
        com.sun.lwuit.Image r1, $r2;
        com.sun.lwuit.impl.LWUITImplementation $r4;
        int[] r0;
        int i0, i1, $i2, i3, i4;
        java.lang.Object $r5;
        com.sun.lwuit.Display $r3;
        boolean $z0, $z1, z2;

        r1 := @this: com.sun.lwuit.Image;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z2 := @parameter4: boolean;

        $i2 = i0 * i1;

        r0 = newarray (int)[$i2];

        virtualinvoke r1.<com.sun.lwuit.Image: void getRGB(int[],int,int,int,int,int)>(r0, 0, i3, i4, i0, i1);

        $r2 = new com.sun.lwuit.Image;

        $r3 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(int[],int,int)>(r0, i0, i1);

        specialinvoke $r2.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r5);

        $z0 = r1.<com.sun.lwuit.Image: boolean opaque>;

        $r2.<com.sun.lwuit.Image: boolean opaque> = $z0;

        $z1 = r1.<com.sun.lwuit.Image: boolean opaqueTested>;

        $r2.<com.sun.lwuit.Image: boolean opaqueTested> = $z1;

        return $r2;
    }

    public com.sun.lwuit.Image rotate(int)
    {
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        com.sun.lwuit.Display $r0, $r3, $r9, $r16;
        boolean $z0;
        com.sun.lwuit.Image $r2, r5, $r8, $r13, $r15;
        com.sun.lwuit.impl.LWUITImplementation $r1, $r4, $r10, $r17;
        java.lang.Object $r6, $r7, $r11, $r12, $r14, $r18, $r19;

        r5 := @this: com.sun.lwuit.Image;

        i5 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isRotationDrawingSupported()>();

        if $z0 == 0 goto label6;

        if i5 < 90 goto label4;

        $i0 = r5.<com.sun.lwuit.Image: int transform>;

        if $i0 == 0 goto label1;

        $i1 = r5.<com.sun.lwuit.Image: int transform>;

        $i2 = $i1 + i5;

        i6 = $i2 % 360;

        goto label2;

     label1:
        i6 = i5 % 360;

     label2:
        $i3 = i5 % 90;

        $i4 = i6 - $i3;

        if $i3 == 0 goto label3;

        $r15 = new com.sun.lwuit.Image;

        $r16 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r17 = virtualinvoke $r16.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r18 = r5.<com.sun.lwuit.Image: java.lang.Object image>;

        $r19 = virtualinvoke $r17.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object rotate(java.lang.Object,int)>($r18, $i3);

        specialinvoke $r15.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r19);

        $r15.<com.sun.lwuit.Image: int transform> = $i4;

        return $r15;

     label3:
        $r13 = new com.sun.lwuit.Image;

        $r14 = r5.<com.sun.lwuit.Image: java.lang.Object image>;

        specialinvoke $r13.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r14);

        $r13.<com.sun.lwuit.Image: int transform> = $i4;

        return $r13;

     label4:
        if i5 == 0 goto label5;

        $r8 = new com.sun.lwuit.Image;

        $r9 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r10 = virtualinvoke $r9.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r11 = r5.<com.sun.lwuit.Image: java.lang.Object image>;

        $r12 = virtualinvoke $r10.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object rotate(java.lang.Object,int)>($r11, i5);

        specialinvoke $r8.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r12);

        return $r8;

     label5:
        return r5;

     label6:
        $r2 = new com.sun.lwuit.Image;

        $r3 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r6 = r5.<com.sun.lwuit.Image: java.lang.Object image>;

        $r7 = virtualinvoke $r4.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object rotate(java.lang.Object,int)>($r6, i5);

        specialinvoke $r2.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r7);

        return $r2;
    }

    public static com.sun.lwuit.Image createIndexed(int, int, int[], byte[])
    {
        byte[] r2;
        com.sun.lwuit.Image $r5;
        com.sun.lwuit.IndexedImage $r0;
        com.sun.lwuit.impl.LWUITImplementation $r4;
        int[] r1;
        int i0, i1;
        java.lang.Object $r6;
        com.sun.lwuit.Display $r3;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: byte[];

        $r0 = new com.sun.lwuit.IndexedImage;

        specialinvoke $r0.<com.sun.lwuit.IndexedImage: void <init>(int,int,int[],byte[])>(i0, i1, r1, r2);

        $r3 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r4.<com.sun.lwuit.impl.LWUITImplementation: boolean isNativeIndexed()>();

        if $z0 == 0 goto label1;

        $r5 = new com.sun.lwuit.Image;

        $r6 = virtualinvoke $r4.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createNativeIndexed(com.sun.lwuit.IndexedImage)>($r0);

        specialinvoke $r5.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r6);

        return $r5;

     label1:
        return $r0;
    }

    public com.sun.lwuit.Image modifyAlpha(byte)
    {
        byte b3;
        int[] $r1;
        int $i0, $i1, i2, $i4, i5, $i6, $i7, i8, $i9, $i10, $i11, i12, $i13;
        com.sun.lwuit.Image r0, $r3;

        r0 := @this: com.sun.lwuit.Image;

        b3 := @parameter0: byte;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        i2 = $i0 * $i1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        $i13 = (int) b3;

        $i4 = $i13 << 24;

        i5 = $i4 & -16777216;

        i12 = 0;

     label1:
        if i12 >= i2 goto label3;

        $i6 = $r1[i12];

        $i7 = $i6 >> 24;

        i8 = $i7 & 255;

        if i8 == 0 goto label2;

        $i9 = $r1[i12];

        $i10 = $i9 & 16777215;

        $i11 = $i10 | i5;

        $r1[i12] = $i11;

     label2:
        i12 = i12 + 1;

        goto label1;

     label3:
        $r3 = new com.sun.lwuit.Image;

        specialinvoke $r3.<com.sun.lwuit.Image: void <init>(int[],int,int)>($r1, $i0, $i1);

        $r3.<com.sun.lwuit.Image: boolean opaqueTested> = 1;

        $r3.<com.sun.lwuit.Image: boolean opaque> = 0;

        return $r3;
    }

    public com.sun.lwuit.Image modifyAlphaWithTranslucency(byte)
    {
        byte b3;
        int[] $r1;
        int $i0, $i1, i2, $i4, i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i19;
        com.sun.lwuit.Image r0, $r3;
        float $f0, $f1, $f2, $f3, $f4, f5;

        r0 := @this: com.sun.lwuit.Image;

        b3 := @parameter0: byte;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        i2 = $i0 * $i1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        $i19 = (int) b3;

        $i4 = $i19 << 24;

        i5 = $i4 & -16777216;

        $f0 = (float) b3;

        f5 = $f0 / 255.0F;

        i16 = 0;

     label1:
        if i16 >= i2 goto label4;

        $i6 = $r1[i16];

        $i7 = $i6 >> 24;

        i8 = $i7 & 255;

        if i8 == 0 goto label3;

        if i8 != 255 goto label2;

        $i13 = $r1[i16];

        $i14 = $i13 & 16777215;

        $i15 = $i14 | i5;

        $r1[i16] = $i15;

        goto label3;

     label2:
        $f1 = (float) i8;

        $f2 = $f1 / 255.0F;

        $f3 = $f2 * f5;

        $f4 = $f3 * 255.0F;

        i17 = (int) $f4;

        $i9 = i17 << 24;

        i18 = $i9 & -16777216;

        $i10 = $r1[i16];

        $i11 = $i10 & 16777215;

        $i12 = $i11 | i18;

        $r1[i16] = $i12;

     label3:
        i16 = i16 + 1;

        goto label1;

     label4:
        $r3 = new com.sun.lwuit.Image;

        specialinvoke $r3.<com.sun.lwuit.Image: void <init>(int[],int,int)>($r1, $i0, $i1);

        $r3.<com.sun.lwuit.Image: boolean opaqueTested> = 1;

        $r3.<com.sun.lwuit.Image: boolean opaque> = 0;

        return $r3;
    }

    public com.sun.lwuit.Image modifyAlpha(byte, int)
    {
        byte b3;
        int[] r1;
        int $i0, $i1, i2, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16;
        com.sun.lwuit.Image r0, $r3;

        r0 := @this: com.sun.lwuit.Image;

        b3 := @parameter0: byte;

        i13 := @parameter1: int;

        i14 = i13 & 16777215;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        i2 = $i0 * $i1;

        r1 = newarray (int)[i2];

        virtualinvoke r0.<com.sun.lwuit.Image: void getRGB(int[],int,int,int,int,int)>(r1, 0, 0, 0, $i0, $i1);

        $i16 = (int) b3;

        $i4 = $i16 << 24;

        i5 = $i4 & -16777216;

        i15 = 0;

     label1:
        if i15 >= i2 goto label3;

        $i6 = r1[i15];

        $i7 = $i6 & -16777216;

        if $i7 == 0 goto label2;

        $i8 = r1[i15];

        $i9 = $i8 & 16777215;

        $i10 = $i9 | i5;

        r1[i15] = $i10;

        $i11 = r1[i15];

        $i12 = 16777215 & $i11;

        if i14 != $i12 goto label2;

        r1[i15] = 0;

     label2:
        i15 = i15 + 1;

        goto label1;

     label3:
        $r3 = new com.sun.lwuit.Image;

        specialinvoke $r3.<com.sun.lwuit.Image: void <init>(int[],int,int)>(r1, $i0, $i1);

        $r3.<com.sun.lwuit.Image: boolean opaqueTested> = 1;

        $r3.<com.sun.lwuit.Image: boolean opaque> = 0;

        return $r3;
    }

    public static com.sun.lwuit.Image createImage(java.lang.String) throws java.io.IOException
    {
        com.sun.lwuit.Image $r0, $r6;
        com.sun.lwuit.impl.LWUITImplementation $r2, $r8;
        java.lang.Object $r4, $r9;
        java.lang.String r3;
        java.lang.OutOfMemoryError $r5;
        com.sun.lwuit.Display $r1, $r7;

        r3 := @parameter0: java.lang.String;

     label1:
        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(java.lang.String)>(r3);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void gc()>();

        $r6 = new com.sun.lwuit.Image;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(java.lang.String)>(r3);

        specialinvoke $r6.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r9);

        return $r6;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public static com.sun.lwuit.Image createImage(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.lwuit.Image $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.sun.lwuit.Image;

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static com.sun.lwuit.Image createImage(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.Image $r0, $r6;
        com.sun.lwuit.impl.LWUITImplementation $r2, $r8;
        java.lang.Object $r4, $r9;
        java.lang.OutOfMemoryError $r5;
        com.sun.lwuit.Display $r1, $r7;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

     label1:
        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(java.io.InputStream)>(r3);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void gc()>();

        $r6 = new com.sun.lwuit.Image;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(java.io.InputStream)>(r3);

        specialinvoke $r6.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r9);

        return $r6;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public static com.sun.lwuit.Image createImage(int[], int, int)
    {
        com.sun.lwuit.Image $r0, $r6;
        com.sun.lwuit.impl.LWUITImplementation $r2, $r8;
        int[] r3;
        int i0, i1;
        java.lang.Object $r4, $r9;
        java.lang.OutOfMemoryError $r5;
        com.sun.lwuit.Display $r1, $r7;

        r3 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(int[],int,int)>(r3, i0, i1);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void gc()>();

        $r6 = new com.sun.lwuit.Image;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(int[],int,int)>(r3, i0, i1);

        specialinvoke $r6.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r9);

        return $r6;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public static com.sun.lwuit.Image createImage(int, int)
    {
        int i0, i1, $i3;
        com.sun.lwuit.Image $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = (int) -1;

        $r0 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int,int,int)>(i0, i1, $i3);

        return $r0;
    }

    public static boolean isAlphaMutableImageSupported()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isAlphaMutableImageSupported()>();

        return $z0;
    }

    public static com.sun.lwuit.Image createImage(int, int, int)
    {
        com.sun.lwuit.Image $r0, $r5;
        com.sun.lwuit.impl.LWUITImplementation $r2, $r7;
        int i0, i1, i2;
        java.lang.Object $r3, $r8;
        java.lang.OutOfMemoryError $r4;
        com.sun.lwuit.Display $r1, $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createMutableImage(int,int,int)>(i0, i1, i2);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void gc()>();

        $r5 = new com.sun.lwuit.Image;

        $r6 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r7 = virtualinvoke $r6.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createMutableImage(int,int,int)>(i0, i1, i2);

        specialinvoke $r5.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r8);

        return $r5;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public static com.sun.lwuit.Image createImage(byte[], int, int)
    {
        byte[] r3;
        com.sun.lwuit.Image $r0, $r6;
        com.sun.lwuit.impl.LWUITImplementation $r2, $r8;
        int i0, i1;
        java.lang.Object $r4, $r9;
        java.lang.OutOfMemoryError $r5;
        com.sun.lwuit.Display $r1, $r7;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = new com.sun.lwuit.Image;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(byte[],int,int)>(r3, i0, i1);

        specialinvoke $r0.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void gc()>();

        $r6 = new com.sun.lwuit.Image;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createImage(byte[],int,int)>(r3, i0, i1);

        specialinvoke $r6.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r9);

        return $r6;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    public com.sun.lwuit.Graphics getGraphics()
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        com.sun.lwuit.Graphics $r0;
        java.lang.Object $r4, $r5;
        com.sun.lwuit.Image r3;
        com.sun.lwuit.Display $r1;

        r3 := @this: com.sun.lwuit.Image;

        $r0 = new com.sun.lwuit.Graphics;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r3.<com.sun.lwuit.Image: java.lang.Object image>;

        $r5 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object getNativeGraphics(java.lang.Object)>($r4);

        specialinvoke $r0.<com.sun.lwuit.Graphics: void <init>(java.lang.Object)>($r5);

        return $r0;
    }

    public int getWidth()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Image r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Image;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Image: java.lang.Object image>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getImageWidth(java.lang.Object)>($r3);

        return $i0;
    }

    public int getHeight()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Image r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Image;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Image: java.lang.Object image>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getImageHeight(java.lang.Object)>($r3);

        return $i0;
    }

    protected void drawImage(com.sun.lwuit.Graphics, java.lang.Object, int, int)
    {
        int i0, i1, $i2;
        com.sun.lwuit.Graphics r0;
        java.lang.Object $r2, r3;
        com.sun.lwuit.Image r1;

        r1 := @this: com.sun.lwuit.Image;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = r1.<com.sun.lwuit.Image: java.lang.Object image>;

        $i2 = r1.<com.sun.lwuit.Image: int transform>;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void drawImage(java.lang.Object,int,int,int)>($r2, i0, i1, $i2);

        return;
    }

    void drawImageArea(com.sun.lwuit.Graphics, java.lang.Object, int, int, int, int, int, int)
    {
        com.sun.lwuit.Graphics r5;
        com.sun.lwuit.Image r3;
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Object r2, $r4;
        com.sun.lwuit.Display $r0;

        r3 := @this: com.sun.lwuit.Image;

        r5 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r3.<com.sun.lwuit.Image: java.lang.Object image>;

        virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: void drawImageArea(java.lang.Object,java.lang.Object,int,int,int,int,int,int)>(r2, $r4, i0, i1, i2, i3, i4, i5);

        return;
    }

    void getRGB(int[], int, int, int, int, int)
    {
        com.sun.lwuit.Image r2;
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int[] r3;
        int i0, i1, i2, i3, i4;
        java.lang.Object $r4;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Image;

        r3 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r2.<com.sun.lwuit.Image: java.lang.Object image>;

        virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: void getRGB(java.lang.Object,int[],int,int,int,int,int)>($r4, r3, i0, i1, i2, i3, i4);

        return;
    }

    public void toRGB(com.sun.lwuit.RGBImage, int, int, int, int, int, int)
    {
        com.sun.lwuit.RGBImage r1;
        com.sun.lwuit.Image r0;
        int[] $r2;
        int i0, i1, i2, i3, i4, i5, $i6;

        r0 := @this: com.sun.lwuit.Image;

        r1 := @parameter0: com.sun.lwuit.RGBImage;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        $r2 = virtualinvoke r1.<com.sun.lwuit.RGBImage: int[] getRGB()>();

        $i6 = i0 * i1;

        virtualinvoke r0.<com.sun.lwuit.Image: void getRGB(int[],int,int,int,int,int)>($r2, $i6, i2, i3, i4, i5);

        return;
    }

    public int[] getRGB()
    {
        com.sun.lwuit.Image r0;
        int[] $r1;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGBImpl()>();

        return $r1;
    }

    public int[] getRGBCached()
    {
        int[] $r1, $r2, r4;
        com.sun.lwuit.Image r0;
        java.lang.ref.WeakReference $r3;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGBCache()>();

        r4 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGBImpl()>();

        r4 = $r2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference rgbCache> = $r3;

     label1:
        return r4;
    }

    int[] getRGBCache()
    {
        int[] $r4, r5;
        java.lang.Object $r3;
        com.sun.lwuit.Image r0;
        java.lang.ref.WeakReference $r1, $r2;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference rgbCache>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference rgbCache>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (int[]) $r3;

        r5 = (int[]) $r4;

        return r5;

     label1:
        return null;
    }

    int[] getRGBImpl()
    {
        int[] r1;
        int $i0, $i1, $i2;
        com.sun.lwuit.Image r0;

        r0 := @this: com.sun.lwuit.Image;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $i2 = $i0 * $i1;

        r1 = newarray (int)[$i2];

        virtualinvoke r0.<com.sun.lwuit.Image: void getRGB(int[],int,int,int,int,int)>(r1, 0, 0, 0, $i0, $i1);

        return r1;
    }

    public com.sun.lwuit.Image scaledWidth(int)
    {
        com.sun.lwuit.Image r0, $r1;
        int i0, $i1, $i2, $i3;
        float $f0, $f1, f2, $f3, $f4;

        r0 := @this: com.sun.lwuit.Image;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $f1 = (float) $i1;

        f2 = $f0 / $f1;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $f3 = (float) $i2;

        $f4 = $f3 * f2;

        $i3 = (int) $f4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>(i0, $i3);

        return $r1;
    }

    public com.sun.lwuit.Image scaledHeight(int)
    {
        com.sun.lwuit.Image r0, $r1;
        int i0, $i1, $i2, $i3;
        float $f0, $f1, f2, $f3, $f4;

        r0 := @this: com.sun.lwuit.Image;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $f1 = (float) $i1;

        f2 = $f0 / $f1;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $f3 = (float) $i2;

        $f4 = $f3 * f2;

        $i3 = (int) $f4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>($i3, i0);

        return $r1;
    }

    public com.sun.lwuit.Image scaledSmallerRatio(int, int)
    {
        byte $b4;
        int i0, $i1, i2, $i3, $i5, $i6, $i7, $i8, $i9;
        com.sun.lwuit.Image r0, $r1, $r2;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.sun.lwuit.Image;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $f0 = (float) i0;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $f1 = (float) $i1;

        f2 = $f0 / $f1;

        $f3 = (float) i2;

        $i3 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $f4 = (float) $i3;

        f5 = $f3 / $f4;

        $b4 = f2 cmpg f5;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label1;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $f8 = (float) $i7;

        $f9 = $f8 * f2;

        $i8 = (int) $f9;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>(i2, $i8);

        return $r2;

     label1:
        $i5 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $f6 = (float) $i5;

        $f7 = $f6 * f5;

        $i6 = (int) $f7;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>($i6, i0);

        return $r1;
    }

    public com.sun.lwuit.Image scaled(int, int)
    {
        byte[] $r3, $r6, $r16;
        com.sun.lwuit.geom.Dimension $r18, $r21;
        int i0, $i1, i2, $i3, $i4, $i6, $i8;
        java.lang.String $r7, $r15;
        java.lang.ref.WeakReference $r14;
        boolean $z0, $z1;
        java.io.IOException $r10;
        com.sun.lwuit.Image r0, $r2, $r8, $r9, r13, $r19, $r20;
        java.lang.Object $r5, $r12;

        r0 := @this: com.sun.lwuit.Image;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        if i0 != $i1 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        if i2 != $i3 goto label1;

        return r0;

     label1:
        $i6 = (int) -1;

        if i0 != $i6 goto label2;

        $r9 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaledHeight(int)>(i2);

        return $r9;

     label2:
        $i8 = (int) -1;

        if i2 != $i8 goto label3;

        $r8 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image scaledWidth(int)>(i0);

        return $r8;

     label3:
        $r18 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r18.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i0, i2);

        $r2 = virtualinvoke r0.<com.sun.lwuit.Image: com.sun.lwuit.Image getCachedImage(com.sun.lwuit.geom.Dimension)>($r18);

        if $r2 == null goto label4;

        return $r2;

     label4:
        $r3 = r0.<com.sun.lwuit.Image: byte[] svgData>;

        if $r3 == null goto label8;

     label5:
        $r7 = r0.<com.sun.lwuit.Image: java.lang.String svgBaseURL>;

        $z0 = r0.<com.sun.lwuit.Image: boolean animated>;

        $r6 = r0.<com.sun.lwuit.Image: byte[] svgData>;

        r13 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createSVG(java.lang.String,boolean,byte[])>($r7, $z0, $r6);

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        $r19 = new com.sun.lwuit.Image;

        $r12 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        specialinvoke $r19.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r12);

        r13 = $r19;

        goto label9;

     label8:
        $r20 = new com.sun.lwuit.Image;

        $r5 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        specialinvoke $r20.<com.sun.lwuit.Image: void <init>(java.lang.Object)>($r5);

        r13 = $r20;

     label9:
        $r14 = r0.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache>;

        r13.<com.sun.lwuit.Image: java.lang.ref.WeakReference scaleCache> = $r14;

        virtualinvoke r13.<com.sun.lwuit.Image: void scale(int,int)>(i0, i2);

        $i4 = r0.<com.sun.lwuit.Image: int transform>;

        r13.<com.sun.lwuit.Image: int transform> = $i4;

        $z1 = r0.<com.sun.lwuit.Image: boolean animated>;

        r13.<com.sun.lwuit.Image: boolean animated> = $z1;

        $r15 = r0.<com.sun.lwuit.Image: java.lang.String svgBaseURL>;

        r13.<com.sun.lwuit.Image: java.lang.String svgBaseURL> = $r15;

        $r16 = r0.<com.sun.lwuit.Image: byte[] svgData>;

        r13.<com.sun.lwuit.Image: byte[] svgData> = $r16;

        $r21 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r21.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i0, i2);

        virtualinvoke r0.<com.sun.lwuit.Image: void cacheImage(com.sun.lwuit.geom.Dimension,com.sun.lwuit.Image)>($r21, r13);

        return r13;

        catch java.io.IOException from label5 to label6 with label7;
    }

    public java.lang.Object getImage()
    {
        java.lang.Object $r1;
        com.sun.lwuit.Image r0;

        r0 := @this: com.sun.lwuit.Image;

        $r1 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        return $r1;
    }

    public void scale(int, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        int i0, i1;
        java.lang.Object $r3, $r4;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.Image;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object scale(java.lang.Object,int,int)>($r3, i0, i1);

        r0.<com.sun.lwuit.Image: java.lang.Object image> = $r4;

        return;
    }

    boolean scaleArray(int, int, int, int, int[], int[])
    {
        int[] r2, r3;
        boolean z0, $z1, $z2, $z3, z4, $z5;
        int i0, i1, $i2, i3, i4, i5, $i6, i7, $i8, i9, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        com.sun.lwuit.Display $r0;
        com.sun.lwuit.Image r1;

        r1 := @this: com.sun.lwuit.Image;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 := @parameter3: int;

        r2 := @parameter4: int[];

        r3 := @parameter5: int[];

        $i2 = i0 << 16;

        i3 = $i2 / i1;

        $i6 = i4 << 16;

        i7 = $i6 / i5;

        i18 = i7 / 2;

        i19 = i3 / 2;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i8 = virtualinvoke $r0.<com.sun.lwuit.Display: int numColors()>();

        if $i8 > 65536 goto label01;

        $z2 = r1.<com.sun.lwuit.Image: boolean opaqueTested>;

        if $z2 != 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        z4 = 1;

        i20 = 0;

     label03:
        if i20 >= i1 goto label09;

        i9 = i19 >> 16;

        virtualinvoke r1.<com.sun.lwuit.Image: void getRGB(int[],int,int,int,int,int)>(r2, 0, 0, i9, i4, 1);

        i21 = 0;

     label04:
        if i21 >= i5 goto label08;

        i10 = i18 >> 16;

        $i11 = i20 * i5;

        i12 = i21 + $i11;

        if i12 < 0 goto label07;

        $i13 = lengthof r3;

        if i12 >= $i13 goto label07;

        $i14 = lengthof r2;

        if i10 >= $i14 goto label07;

        $i15 = r2[i10];

        r3[i12] = $i15;

        if z0 == 0 goto label05;

        if z4 == 0 goto label05;

        $i16 = r2[i10];

        $i17 = $i16 & -16777216;

        if $i17 != -16777216 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z4 = $z5;

     label07:
        i18 = i18 + i7;

        i21 = i21 + 1;

        goto label04;

     label08:
        i19 = i19 + i3;

        i18 = i7 / 2;

        i20 = i20 + 1;

        goto label03;

     label09:
        if z0 == 0 goto label10;

        r1.<com.sun.lwuit.Image: boolean opaque> = z4;

     label10:
        $z1 = r1.<com.sun.lwuit.Image: boolean opaque>;

        return $z1;
    }

    public boolean isAnimation()
    {
        com.sun.lwuit.Image r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Image;

        $z0 = r0.<com.sun.lwuit.Image: boolean animated>;

        return $z0;
    }

    public boolean animate()
    {
        long $l0, $l2, $l3, $l4;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.impl.LWUITImplementation $r2;
        byte $b1;
        java.lang.Object $r3;
        com.sun.lwuit.Display $r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Image;

        $l0 = r0.<com.sun.lwuit.Image: long imageTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.Image: long imageTime> = $l4;

     label1:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        $l2 = r0.<com.sun.lwuit.Image: long imageTime>;

        $z0 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: boolean animateImage(java.lang.Object,long)>($r3, $l2);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.Image: long imageTime> = $l3;

        return $z0;
    }

    public boolean isOpaque()
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        java.lang.Object $r3;
        com.sun.lwuit.Image r0;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.Image;

        $z0 = r0.<com.sun.lwuit.Image: boolean opaqueTested>;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r0.<com.sun.lwuit.Image: java.lang.Object image>;

        $z2 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: boolean isOpaque(com.sun.lwuit.Image,java.lang.Object)>(r0, $r3);

        r0.<com.sun.lwuit.Image: boolean opaque> = $z2;

        r0.<com.sun.lwuit.Image: boolean opaqueTested> = 1;

     label1:
        $z1 = r0.<com.sun.lwuit.Image: boolean opaque>;

        return $z1;
    }
}
