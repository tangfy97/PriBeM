public class org.apache.neethi.builders.converters.DOMToStaxConverter extends org.apache.neethi.builders.converters.AbstractDOMConverter implements org.apache.neethi.builders.converters.Converter
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.DOMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: void <init>()>();

        return;
    }

    public javax.xml.stream.XMLStreamReader convert(org.w3c.dom.Element)
    {
        javax.xml.transform.dom.DOMSource $r1;
        org.w3c.dom.Element r2;
        javax.xml.stream.XMLStreamReader $r3;
        javax.xml.stream.XMLInputFactory $r0;
        javax.xml.stream.XMLStreamException $r4;
        org.apache.neethi.builders.converters.ConverterException $r5;
        org.apache.neethi.builders.converters.DOMToStaxConverter r6;

        r6 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        r2 := @parameter0: org.w3c.dom.Element;

     label1:
        $r0 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

        $r1 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r1.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r2);

        $r3 = virtualinvoke $r0.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.neethi.builders.converters.ConverterException;

        specialinvoke $r5.<org.apache.neethi.builders.converters.ConverterException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        javax.xml.stream.XMLStreamReader $r3;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = virtualinvoke r0.<org.apache.neethi.builders.converters.DOMToStaxConverter: javax.xml.stream.XMLStreamReader convert(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile java.util.Iterator getChildren(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.util.Iterator $r3;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: java.util.Iterator getChildren(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.util.Map $r3;
        java.lang.Object r1;
        org.apache.neethi.builders.converters.DOMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: java.util.Map getAttributes(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public volatile javax.xml.namespace.QName getQName(java.lang.Object)
    {
        org.w3c.dom.Element $r2;
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;
        org.apache.neethi.builders.converters.DOMToStaxConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.DOMToStaxConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractDOMConverter: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>($r2);

        return $r3;
    }
}
