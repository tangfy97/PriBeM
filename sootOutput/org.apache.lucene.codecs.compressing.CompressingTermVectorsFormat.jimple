public class org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat extends org.apache.lucene.codecs.TermVectorsFormat
{
    private final java.lang.String formatName;
    private final java.lang.String segmentSuffix;
    private final org.apache.lucene.codecs.compressing.CompressionMode compressionMode;
    private final int chunkSize;

    public void <init>(java.lang.String, java.lang.String, org.apache.lucene.codecs.compressing.CompressionMode, int)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat r0;
        int i0;
        org.apache.lucene.codecs.compressing.CompressionMode r3;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.codecs.compressing.CompressionMode;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.codecs.TermVectorsFormat: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String formatName> = r1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String segmentSuffix> = r2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: org.apache.lucene.codecs.compressing.CompressionMode compressionMode> = r3;

        if i0 >= 1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("chunkSize must be >= 1");

        throw $r4;

     label1:
        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: int chunkSize> = i0;

        return;
    }

    public final org.apache.lucene.codecs.TermVectorsReader vectorsReader(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat r3;
        org.apache.lucene.index.SegmentInfo r2;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.codecs.compressing.CompressionMode $r6;
        java.lang.String $r7, $r8;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader $r0;
        org.apache.lucene.index.FieldInfos r4;
        org.apache.lucene.store.IOContext r5;

        r3 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r4 := @parameter2: org.apache.lucene.index.FieldInfos;

        r5 := @parameter3: org.apache.lucene.store.IOContext;

        $r0 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsReader;

        $r8 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String segmentSuffix>;

        $r7 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String formatName>;

        $r6 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: org.apache.lucene.codecs.compressing.CompressionMode compressionMode>;

        specialinvoke $r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,java.lang.String,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext,java.lang.String,org.apache.lucene.codecs.compressing.CompressionMode)>(r1, r2, $r8, r4, r5, $r7, $r6);

        return $r0;
    }

    public final org.apache.lucene.codecs.TermVectorsWriter vectorsWriter(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat r3;
        org.apache.lucene.index.SegmentInfo r2;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter $r0;
        org.apache.lucene.store.Directory r1;
        int $i0;
        org.apache.lucene.codecs.compressing.CompressionMode $r5;
        java.lang.String $r6, $r7;
        org.apache.lucene.store.IOContext r4;

        r3 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r4 := @parameter2: org.apache.lucene.store.IOContext;

        $r0 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter;

        $r7 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String segmentSuffix>;

        $r6 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: java.lang.String formatName>;

        $r5 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: org.apache.lucene.codecs.compressing.CompressionMode compressionMode>;

        $i0 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: int chunkSize>;

        specialinvoke $r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,java.lang.String,org.apache.lucene.store.IOContext,java.lang.String,org.apache.lucene.codecs.compressing.CompressionMode,int)>(r1, r2, $r7, r4, $r6, $r5, $i0);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat r1;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Class $r2;
        org.apache.lucene.codecs.compressing.CompressionMode $r6;
        java.lang.String $r3, $r11;

        r1 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(compressionMode=");

        $r6 = r1.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: org.apache.lucene.codecs.compressing.CompressionMode compressionMode>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", chunkSize=");

        $i0 = r1.<org.apache.lucene.codecs.compressing.CompressingTermVectorsFormat: int chunkSize>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
