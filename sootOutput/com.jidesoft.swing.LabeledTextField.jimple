public class com.jidesoft.swing.LabeledTextField extends javax.swing.JPanel
{
    protected javax.swing.JTextField _textField;
    protected javax.swing.JLabel _label;
    protected javax.swing.AbstractButton _button;
    protected java.lang.String _labelText;
    protected javax.swing.Icon _icon;
    protected java.lang.String _hintText;
    protected boolean _showHintTextWhenFocused;
    protected javax.swing.JLabel _hintLabel;
    protected com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer _customizer;
    protected javax.swing.KeyStroke _contextMenuKeyStroke;
    private com.jidesoft.swing.DefaultOverlayable _hintOverlayable;

    public void <init>()
    {
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void <init>(javax.swing.Icon,java.lang.String)>(null, null);

        return;
    }

    public void <init>(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void <init>(javax.swing.Icon,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(javax.swing.Icon, java.lang.String)
    {
        javax.swing.Icon r1;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String r2;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: javax.swing.Icon;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        r0.<com.jidesoft.swing.LabeledTextField: boolean _showHintTextWhenFocused> = 0;

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.Icon _icon> = r1;

        r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _labelText> = r2;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void initComponent()>();

        return;
    }

    protected void initComponent()
    {
        javax.swing.KeyStroke $r8, $r9;
        javax.swing.JTextField $r4, $r6;
        com.jidesoft.swing.LabeledTextField$1 $r10;
        javax.swing.JLabel $r1, $r2, $r7, $r11;
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.AbstractButton $r3, $r5;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel createLabel()>();

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label> = $r1;

        $r2 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        if $r2 == null goto label1;

        $r11 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r10 = new com.jidesoft.swing.LabeledTextField$1;

        specialinvoke $r10.<com.jidesoft.swing.LabeledTextField$1: void <init>(com.jidesoft.swing.LabeledTextField)>(r0);

        virtualinvoke $r11.<javax.swing.JLabel: void addMouseListener(java.awt.event.MouseListener)>($r10);

     label1:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton createButton()>();

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton _button> = $r3;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField createTextField()>();

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField> = $r4;

        $r7 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r6 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        $r5 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton _button>;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void initLayout(javax.swing.JLabel,javax.swing.JTextField,javax.swing.AbstractButton)>($r7, $r6, $r5);

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(40, 512);

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setContextMenuKeyStroke(javax.swing.KeyStroke)>($r8);

        $r9 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke getContextMenuKeyStroke()>();

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void registerContextMenuKeyStroke(javax.swing.KeyStroke)>($r9);

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void updateUI()>();

        return;
    }

    private void registerContextMenuKeyStroke(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r0;
        com.jidesoft.swing.LabeledTextField r1;
        com.jidesoft.swing.LabeledTextField$2 $r2;

        r1 := @this: com.jidesoft.swing.LabeledTextField;

        r0 := @parameter0: javax.swing.KeyStroke;

        if r0 == null goto label1;

        $r2 = new com.jidesoft.swing.LabeledTextField$2;

        specialinvoke $r2.<com.jidesoft.swing.LabeledTextField$2: void <init>(com.jidesoft.swing.LabeledTextField)>(r1);

        virtualinvoke r1.<com.jidesoft.swing.LabeledTextField: void registerKeyboardAction(java.awt.event.ActionListener,javax.swing.KeyStroke,int)>($r2, r0, 1);

     label1:
        return;
    }

    private void unregisterContextMenuKeyStroke(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r0;
        com.jidesoft.swing.LabeledTextField r1;

        r1 := @this: com.jidesoft.swing.LabeledTextField;

        r0 := @parameter0: javax.swing.KeyStroke;

        if r0 == null goto label1;

        virtualinvoke r1.<com.jidesoft.swing.LabeledTextField: void unregisterKeyboardAction(javax.swing.KeyStroke)>(r0);

     label1:
        return;
    }

    protected void showContextMenu()
    {
        com.jidesoft.swing.JidePopupMenu $r1;
        java.awt.Point $r3;
        com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer $r2;
        int $i0, $i1, $i2;
        com.jidesoft.swing.LabeledTextField r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.JidePopupMenu createContextMenu()>();

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void customizePopupMenu(javax.swing.JPopupMenu)>($r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer getPopupMenuCustomizer()>();

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        interfaceinvoke $r2.<com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer: void customize(com.jidesoft.swing.LabeledTextField,javax.swing.JPopupMenu)>(r0, $r1);

     label1:
        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<javax.swing.JPopupMenu: int getComponentCount()>();

        if $i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: java.awt.Point calculateContextMenuLocation()>();

        $i2 = $r3.<java.awt.Point: int x>;

        $i1 = $r3.<java.awt.Point: int y>;

        virtualinvoke $r1.<javax.swing.JPopupMenu: void show(java.awt.Component,int,int)>(r0, $i2, $i1);

     label2:
        return;
    }

    protected java.awt.Point calculateContextMenuLocation()
    {
        java.awt.Point $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javax.swing.Icon $r5, $r7;
        javax.swing.JLabel $r1, $r4, $r6, $r8;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r2 = virtualinvoke $r1.<javax.swing.JLabel: java.awt.Point getLocation()>();

        $r3 = new java.awt.Point;

        $i0 = $r2.<java.awt.Point: int x>;

        $r4 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r5 = virtualinvoke $r4.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        if $r5 != null goto label1;

        $i7 = 1;

        goto label2;

     label1:
        $r6 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r7 = virtualinvoke $r6.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        $i1 = interfaceinvoke $r7.<javax.swing.Icon: int getIconWidth()>();

        $i7 = $i1 / 2;

     label2:
        $i2 = $i0 + $i7;

        $i3 = $r2.<java.awt.Point: int y>;

        $r8 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $i4 = virtualinvoke $r8.<javax.swing.JLabel: int getHeight()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 1;

        specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i2, $i6);

        return $r3;
    }

    protected void customizePopupMenu(javax.swing.JPopupMenu)
    {
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.JPopupMenu r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: javax.swing.JPopupMenu;

        return;
    }

    protected void initLayout(javax.swing.JLabel, javax.swing.JTextField, javax.swing.AbstractButton)
    {
        java.awt.Color $r6, r17;
        javax.swing.JTextField r9;
        com.jidesoft.swing.DefaultOverlayable $r8, $r11, $r15;
        java.lang.String $r4;
        javax.swing.AbstractButton r16;
        java.awt.BorderLayout $r1;
        com.jidesoft.swing.LabeledTextField$4 $r14;
        com.jidesoft.swing.LabeledTextField$3 $r12;
        javax.swing.JLabel r2, $r3, $r5, $r7, $r10;
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.text.Document $r13;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r2 := @parameter0: javax.swing.JLabel;

        r9 := @parameter1: javax.swing.JTextField;

        r16 := @parameter2: javax.swing.AbstractButton;

        $r1 = new java.awt.BorderLayout;

        specialinvoke $r1.<java.awt.BorderLayout: void <init>(int,int)>(3, 3);

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setLayout(java.awt.LayoutManager)>($r1);

        if r2 == null goto label1;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void add(java.awt.Component,java.lang.Object)>(r2, "Before");

     label1:
        $r3 = new javax.swing.JLabel;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: java.lang.String getHintText()>();

        specialinvoke $r3.<javax.swing.JLabel: void <init>(java.lang.String)>($r4);

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel> = $r3;

        $r5 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        virtualinvoke $r5.<javax.swing.JLabel: void setOpaque(boolean)>(0);

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Label.disabledForeground");

        r17 = $r6;

        if $r6 != null goto label2;

        r17 = <java.awt.Color: java.awt.Color GRAY>;

     label2:
        $r7 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        virtualinvoke $r7.<javax.swing.JLabel: void setForeground(java.awt.Color)>(r17);

        $r8 = new com.jidesoft.swing.DefaultOverlayable;

        $r10 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        specialinvoke $r8.<com.jidesoft.swing.DefaultOverlayable: void <init>(javax.swing.JComponent,javax.swing.JComponent,int)>(r9, $r10, 7);

        r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable> = $r8;

        $r11 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable>;

        virtualinvoke $r11.<com.jidesoft.swing.DefaultOverlayable: void setOpaque(boolean)>(0);

        $r12 = new com.jidesoft.swing.LabeledTextField$3;

        specialinvoke $r12.<com.jidesoft.swing.LabeledTextField$3: void <init>(com.jidesoft.swing.LabeledTextField,javax.swing.JTextField)>(r0, r9);

        virtualinvoke r9.<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>($r12);

        $r13 = virtualinvoke r9.<javax.swing.JTextField: javax.swing.text.Document getDocument()>();

        $r14 = new com.jidesoft.swing.LabeledTextField$4;

        specialinvoke $r14.<com.jidesoft.swing.LabeledTextField$4: void <init>(com.jidesoft.swing.LabeledTextField,javax.swing.JTextField)>(r0, r9);

        interfaceinvoke $r13.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r14);

        $r15 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable>;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: java.awt.Component add(java.awt.Component)>($r15);

        if r16 == null goto label3;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void add(java.awt.Component,java.lang.Object)>(r16, "After");

     label3:
        return;
    }

    public boolean isShowHintTextWhenFocused()
    {
        com.jidesoft.swing.LabeledTextField r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $z0 = r0.<com.jidesoft.swing.LabeledTextField: boolean _showHintTextWhenFocused>;

        return $z0;
    }

    public void setShowHintTextWhenFocused(boolean)
    {
        javax.swing.JTextField $r1, $r4;
        com.jidesoft.swing.LabeledTextField r0;
        com.jidesoft.swing.DefaultOverlayable $r2, $r3;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.LabeledTextField: boolean _showHintTextWhenFocused> = z0;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable>;

        if $r2 == null goto label1;

        $r4 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable>;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void adjustOverlay(javax.swing.JTextField,com.jidesoft.swing.Overlayable)>($r4, $r3);

     label1:
        return;
    }

    private void adjustOverlay(javax.swing.JTextField, com.jidesoft.swing.Overlayable)
    {
        javax.swing.JTextField r0;
        int $i0;
        java.lang.String $r1;
        com.jidesoft.swing.LabeledTextField r3;
        boolean $z0, $z1;
        com.jidesoft.swing.Overlayable r2;

        r3 := @this: com.jidesoft.swing.LabeledTextField;

        r0 := @parameter0: javax.swing.JTextField;

        r2 := @parameter1: com.jidesoft.swing.Overlayable;

        $z0 = virtualinvoke r0.<javax.swing.JTextField: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<com.jidesoft.swing.LabeledTextField: boolean isShowHintTextWhenFocused()>();

        if $z1 != 0 goto label1;

        interfaceinvoke r2.<com.jidesoft.swing.Overlayable: void setOverlayVisible(boolean)>(0);

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<javax.swing.JTextField: java.lang.String getText()>();

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        interfaceinvoke r2.<com.jidesoft.swing.Overlayable: void setOverlayVisible(boolean)>(0);

        goto label3;

     label2:
        interfaceinvoke r2.<com.jidesoft.swing.Overlayable: void setOverlayVisible(boolean)>(1);

     label3:
        return;
    }

    protected javax.swing.JTextField createTextField()
    {
        com.jidesoft.swing.OverlayTextField $r0;
        com.jidesoft.swing.LabeledTextField r1;

        r1 := @this: com.jidesoft.swing.LabeledTextField;

        $r0 = new com.jidesoft.swing.OverlayTextField;

        specialinvoke $r0.<com.jidesoft.swing.OverlayTextField: void <init>()>();

        staticinvoke <com.jidesoft.swing.SelectAllUtils: void install(java.awt.Component)>($r0);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void setComponentTransparent(javax.swing.JComponent)>($r0);

        virtualinvoke $r0.<javax.swing.JTextField: void setColumns(int)>(20);

        return $r0;
    }

    protected com.jidesoft.swing.JidePopupMenu createContextMenu()
    {
        com.jidesoft.swing.JidePopupMenu $r0;
        com.jidesoft.swing.LabeledTextField r1;

        r1 := @this: com.jidesoft.swing.LabeledTextField;

        $r0 = new com.jidesoft.swing.JidePopupMenu;

        specialinvoke $r0.<com.jidesoft.swing.JidePopupMenu: void <init>()>();

        return $r0;
    }

    public void updateUI()
    {
        java.awt.Insets $r8;
        javax.swing.JTextField $r5, $r6;
        javax.swing.border.Border $r1, $r2, $r3, $r7, $r9;
        javax.swing.border.CompoundBorder $r4, $r10;
        int $i0;
        com.jidesoft.swing.LabeledTextField r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        specialinvoke r0.<javax.swing.JPanel: void updateUI()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("TextField.border");

        if $r1 == null goto label5;

        $r8 = interfaceinvoke $r1.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r0);

        $i0 = $r8.<java.awt.Insets: int top>;

        if $i0 < 2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBorder(javax.swing.border.Border)>($r1);

        goto label4;

     label3:
        $r9 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        $r10 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r1, $r9);

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBorder(javax.swing.border.Border)>($r10);

     label4:
        goto label6;

     label5:
        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder(int)>(1);

        $r3 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r2, $r3);

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBorder(javax.swing.border.Border)>($r4);

     label6:
        $z0 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: boolean isEnabled()>();

        if $z0 == 0 goto label7;

        staticinvoke <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>(r0, "TextField.background", "TextField.foreground");

        goto label8;

     label7:
        staticinvoke <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>(r0, "TextField.disableBackground", "TextField.inactiveForeground");

     label8:
        if $r1 == null goto label9;

        $r5 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        if $r5 == null goto label9;

        $r6 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke $r6.<javax.swing.JTextField: void setBorder(javax.swing.border.Border)>($r7);

     label9:
        $z2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: boolean isEnabled()>();

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setEnabled(boolean)>($z2);

        return;
    }

    protected javax.swing.AbstractButton createButton()
    {
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        return null;
    }

    protected javax.swing.JLabel createLabel()
    {
        javax.swing.JLabel $r0;
        javax.swing.Icon $r2;
        com.jidesoft.swing.LabeledTextField r1;
        java.lang.String $r3;

        r1 := @this: com.jidesoft.swing.LabeledTextField;

        $r0 = new javax.swing.JLabel;

        $r2 = r1.<com.jidesoft.swing.LabeledTextField: javax.swing.Icon _icon>;

        specialinvoke $r0.<javax.swing.JLabel: void <init>(javax.swing.Icon)>($r2);

        $r3 = r1.<com.jidesoft.swing.LabeledTextField: java.lang.String _labelText>;

        virtualinvoke $r0.<javax.swing.JLabel: void setText(java.lang.String)>($r3);

        return $r0;
    }

    public void setLabelText(java.lang.String)
    {
        javax.swing.JLabel $r2, $r3;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _labelText> = r1;

        $r2 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        if $r2 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        virtualinvoke $r3.<javax.swing.JLabel: void setText(java.lang.String)>(r1);

     label1:
        return;
    }

    public java.lang.String getLabelText()
    {
        javax.swing.JLabel $r1, $r3;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String $r2, $r4;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r4 = virtualinvoke $r3.<javax.swing.JLabel: java.lang.String getText()>();

        return $r4;

     label1:
        $r2 = r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _labelText>;

        return $r2;
    }

    public void setIcon(javax.swing.Icon)
    {
        javax.swing.JLabel $r2, $r3;
        javax.swing.Icon r1;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: javax.swing.Icon;

        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.Icon _icon> = r1;

        $r2 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        if $r2 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        virtualinvoke $r3.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>(r1);

     label1:
        return;
    }

    public javax.swing.Icon getIcon()
    {
        javax.swing.JLabel $r1, $r3;
        javax.swing.Icon $r2, $r4;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        $r4 = virtualinvoke $r3.<javax.swing.JLabel: javax.swing.Icon getIcon()>();

        return $r4;

     label1:
        $r2 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.Icon _icon>;

        return $r2;
    }

    public javax.swing.JLabel getLabel()
    {
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.JLabel $r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _label>;

        return $r1;
    }

    public javax.swing.AbstractButton getButton()
    {
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.AbstractButton $r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton _button>;

        return $r1;
    }

    public void setColumns(int)
    {
        javax.swing.JTextField $r1, $r2;
        int i0;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        virtualinvoke $r2.<javax.swing.JTextField: void setColumns(int)>(i0);

     label1:
        return;
    }

    public void setText(java.lang.String)
    {
        javax.swing.JTextField $r1, $r2;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String r3;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        virtualinvoke $r2.<javax.swing.JTextField: void setText(java.lang.String)>(r3);

     label1:
        return;
    }

    public java.lang.String getText()
    {
        javax.swing.JTextField $r1, $r2;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String $r3;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        $r3 = virtualinvoke $r2.<javax.swing.JTextField: java.lang.String getText()>();

        return $r3;

     label1:
        return null;
    }

    public javax.swing.JTextField getTextField()
    {
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.JTextField $r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        return $r1;
    }

    public void setEnabled(boolean)
    {
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9, $r10, r28;
        boolean z0, z1, $z2, $z3, $z4;
        javax.swing.JTextField $r1, $r11, $r12, $r14, $r18, $r19, $r24, $r27;
        int $i0;
        javax.swing.AbstractButton $r3, $r16, $r21, $r22;
        java.lang.String $r13, $r15;
        javax.swing.JLabel $r2, $r17, $r20, $r23, $r25, $r26;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JPanel: void setEnabled(boolean)>(z0);

        if z0 == 0 goto label03;

        $r19 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r19 == null goto label01;

        $r24 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        virtualinvoke $r24.<javax.swing.JTextField: void setEnabled(boolean)>(1);

     label01:
        $r20 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel getLabel()>();

        if $r20 == null goto label02;

        $r23 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel getLabel()>();

        virtualinvoke $r23.<javax.swing.JLabel: void setEnabled(boolean)>(1);

     label02:
        $r21 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton getButton()>();

        if $r21 == null goto label07;

        $r22 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton getButton()>();

        virtualinvoke $r22.<javax.swing.AbstractButton: void setEnabled(boolean)>(1);

        goto label07;

     label03:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r1 == null goto label04;

        $r18 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        virtualinvoke $r18.<javax.swing.JTextField: void setEnabled(boolean)>(0);

     label04:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel getLabel()>();

        if $r2 == null goto label05;

        $r17 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel getLabel()>();

        virtualinvoke $r17.<javax.swing.JLabel: void setEnabled(boolean)>(0);

     label05:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton getButton()>();

        if $r3 == null goto label06;

        $r16 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.AbstractButton getButton()>();

        virtualinvoke $r16.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

     label06:
        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBackground(java.awt.Color)>($r4);

     label07:
        $r25 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        if $r25 == null goto label14;

        z1 = 1;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r11 == null goto label11;

        $r12 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        $r13 = virtualinvoke $r12.<javax.swing.JTextField: java.lang.String getText()>();

        if $r13 == null goto label08;

        $r14 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        $r15 = virtualinvoke $r14.<javax.swing.JTextField: java.lang.String getText()>();

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label09;

     label08:
        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z1 = $z2;

     label11:
        $r26 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: boolean isEnabled()>();

        if $z3 == 0 goto label12;

        if z1 == 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        virtualinvoke $r26.<javax.swing.JLabel: void setVisible(boolean)>($z4);

     label14:
        $r27 = virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField getTextField()>();

        if $r27 == null goto label15;

        $r9 = virtualinvoke $r27.<javax.swing.JTextField: java.awt.Color getBackground()>();

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBackground(java.awt.Color)>($r9);

        $r10 = virtualinvoke $r27.<javax.swing.JTextField: java.awt.Color getForeground()>();

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setForeground(java.awt.Color)>($r10);

        goto label18;

     label15:
        if z0 == 0 goto label16;

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TextField.background");

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBackground(java.awt.Color)>($r7);

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TextField.foreground");

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setForeground(java.awt.Color)>($r8);

        goto label18;

     label16:
        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TextField.disabledBackground");

        r28 = $r5;

        if $r5 != null goto label17;

        r28 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TextField.inactiveBackground");

     label17:
        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setBackground(java.awt.Color)>(r28);

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TextField.inactiveForeground");

        virtualinvoke r0.<com.jidesoft.swing.LabeledTextField: void setForeground(java.awt.Color)>($r6);

     label18:
        return;
    }

    public int getBaseline(int, int)
    {
        java.lang.Object[] $r6;
        javax.swing.JTextField $r7;
        java.lang.NoSuchMethodException $r14;
        java.lang.Integer $r8, $r9, $r11;
        int i0, i1, $i2, $i4;
        java.lang.reflect.Method $r4;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r13;
        java.lang.Class[] $r0;
        java.lang.reflect.InvocationTargetException $r12;
        java.lang.Class $r1, $r2, $r3;
        java.lang.Object $r10;
        com.jidesoft.swing.LabeledTextField r5;

        r5 := @this: com.jidesoft.swing.LabeledTextField;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z0 == 0 goto label7;

     label1:
        $r3 = class "Ljava/awt/Component;";

        $r0 = newarray (java.lang.Class)[2];

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r0[0] = $r1;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r0[1] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBaseline", $r0);

        $r7 = r5.<com.jidesoft.swing.LabeledTextField: javax.swing.JTextField _textField>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[1] = $r9;

        $r10 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r6);

        $z1 = $r10 instanceof java.lang.Integer;

        if $z1 == 0 goto label3;

        $r11 = (java.lang.Integer) $r10;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

     label2:
        return $i2;

     label3:
        goto label7;

     label4:
        $r14 := @caughtexception;

        goto label7;

     label5:
        $r13 := @caughtexception;

        goto label7;

     label6:
        $r12 := @caughtexception;

     label7:
        $i4 = (int) -1;

        return $i4;

        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    public java.lang.String getHintText()
    {
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _hintText>;

        return $r1;
    }

    public void setHintText(java.lang.String)
    {
        javax.swing.JLabel $r2, $r4;
        com.jidesoft.swing.LabeledTextField r0;
        java.lang.String r1, $r3;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _hintText> = r1;

        $r2 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        if $r2 == null goto label1;

        $r4 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.JLabel _hintLabel>;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: java.lang.String _hintText>;

        virtualinvoke $r4.<javax.swing.JLabel: void setText(java.lang.String)>($r3);

     label1:
        return;
    }

    public com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer getPopupMenuCustomizer()
    {
        com.jidesoft.swing.LabeledTextField r0;
        com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer $r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer _customizer>;

        return $r1;
    }

    public void setPopupMenuCustomizer(com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer)
    {
        com.jidesoft.swing.LabeledTextField r0;
        com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer r1;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter0: com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer;

        r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.LabeledTextField$PopupMenuCustomizer _customizer> = r1;

        return;
    }

    public javax.swing.KeyStroke getContextMenuKeyStroke()
    {
        javax.swing.KeyStroke $r1, $r2, $r3;
        com.jidesoft.swing.LabeledTextField r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        if $r1 != null goto label3;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isMacOSX()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(121, 1);

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke> = $r2;

     label3:
        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        return $r3;
    }

    public void setContextMenuKeyStroke(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke $r1, r2, $r3, $r4, $r5;
        com.jidesoft.swing.LabeledTextField r0;

        r0 := @this: com.jidesoft.swing.LabeledTextField;

        r2 := @parameter0: javax.swing.KeyStroke;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        if $r1 == null goto label1;

        $r5 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void unregisterContextMenuKeyStroke(javax.swing.KeyStroke)>($r5);

     label1:
        r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke> = r2;

        $r3 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        if $r3 == null goto label2;

        $r4 = r0.<com.jidesoft.swing.LabeledTextField: javax.swing.KeyStroke _contextMenuKeyStroke>;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void registerContextMenuKeyStroke(javax.swing.KeyStroke)>($r4);

     label2:
        return;
    }

    static com.jidesoft.swing.DefaultOverlayable access$000(com.jidesoft.swing.LabeledTextField)
    {
        com.jidesoft.swing.LabeledTextField r0;
        com.jidesoft.swing.DefaultOverlayable $r1;

        r0 := @parameter0: com.jidesoft.swing.LabeledTextField;

        $r1 = r0.<com.jidesoft.swing.LabeledTextField: com.jidesoft.swing.DefaultOverlayable _hintOverlayable>;

        return $r1;
    }

    static void access$100(com.jidesoft.swing.LabeledTextField, javax.swing.JTextField, com.jidesoft.swing.Overlayable)
    {
        com.jidesoft.swing.LabeledTextField r0;
        javax.swing.JTextField r1;
        com.jidesoft.swing.Overlayable r2;

        r0 := @parameter0: com.jidesoft.swing.LabeledTextField;

        r1 := @parameter1: javax.swing.JTextField;

        r2 := @parameter2: com.jidesoft.swing.Overlayable;

        specialinvoke r0.<com.jidesoft.swing.LabeledTextField: void adjustOverlay(javax.swing.JTextField,com.jidesoft.swing.Overlayable)>(r1, r2);

        return;
    }
}
