public class nu.xom.jaxen.JaxenHandler extends java.lang.Object implements nu.xom.jaxen.saxpath.XPathHandler
{
    private nu.xom.jaxen.expr.XPathFactory xpathFactory;
    private nu.xom.jaxen.expr.XPathExpr xpath;
    protected boolean simplified;
    protected java.util.LinkedList stack;

    public void <init>()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.util.LinkedList $r1;
        nu.xom.jaxen.expr.DefaultXPathFactory $r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList stack> = $r1;

        $r2 = new nu.xom.jaxen.expr.DefaultXPathFactory;

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultXPathFactory: void <init>()>();

        r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory xpathFactory> = $r2;

        return;
    }

    public void setXPathFactory(nu.xom.jaxen.expr.XPathFactory)
    {
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.XPathFactory r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r1 := @parameter0: nu.xom.jaxen.expr.XPathFactory;

        r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory xpathFactory> = r1;

        return;
    }

    public nu.xom.jaxen.expr.XPathFactory getXPathFactory()
    {
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.XPathFactory $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory xpathFactory>;

        return $r1;
    }

    public nu.xom.jaxen.expr.XPathExpr getXPathExpr()
    {
        nu.xom.jaxen.expr.XPathExpr $r1;
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathExpr getXPathExpr(boolean)>(1);

        return $r1;
    }

    public nu.xom.jaxen.expr.XPathExpr getXPathExpr(boolean)
    {
        nu.xom.jaxen.expr.XPathExpr $r1, $r2;
        nu.xom.jaxen.JaxenHandler r0;
        boolean z0, $z1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = r0.<nu.xom.jaxen.JaxenHandler: boolean simplified>;

        if $z1 != 0 goto label1;

        $r1 = r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathExpr xpath>;

        interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathExpr: void simplify()>();

        r0.<nu.xom.jaxen.JaxenHandler: boolean simplified> = 1;

     label1:
        $r2 = r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathExpr xpath>;

        return $r2;
    }

    public void startXPath()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r0.<nu.xom.jaxen.JaxenHandler: boolean simplified> = 0;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        return;
    }

    public void endXPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathExpr $r4;
        nu.xom.jaxen.expr.Expr $r3;
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        $r3 = (nu.xom.jaxen.expr.Expr) $r2;

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.XPathExpr createXPath(nu.xom.jaxen.expr.Expr)>($r3);

        r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathExpr xpath> = $r4;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        return;
    }

    public void startPathExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        return;
    }

    public void endPathExpr() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.PathExpr $r7;
        nu.xom.jaxen.expr.FilterExpr r5;
        nu.xom.jaxen.expr.XPathFactory $r6;
        int $i0;
        nu.xom.jaxen.expr.LocationPath r4;
        java.lang.Object $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $i0 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: int stackSize()>();

        if $i0 != 2 goto label1;

        $r2 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.LocationPath) $r2;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r5 = (nu.xom.jaxen.expr.FilterExpr) $r3;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        $z0 = $r1 instanceof nu.xom.jaxen.expr.LocationPath;

        if $z0 == 0 goto label2;

        r4 = (nu.xom.jaxen.expr.LocationPath) $r1;

        r5 = null;

        goto label3;

     label2:
        r4 = null;

        r5 = (nu.xom.jaxen.expr.FilterExpr) $r1;

     label3:
        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r6 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r7 = interfaceinvoke $r6.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.PathExpr createPathExpr(nu.xom.jaxen.expr.FilterExpr,nu.xom.jaxen.expr.LocationPath)>(r5, r4);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r7);

        return;
    }

    public void startAbsoluteLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.LocationPath $r2;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.XPathFactory $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.LocationPath createAbsoluteLocationPath()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void endAbsoluteLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endLocationPath()>();

        return;
    }

    public void startRelativeLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.LocationPath $r2;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.XPathFactory $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.LocationPath createRelativeLocationPath()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void endRelativeLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endLocationPath()>();

        return;
    }

    protected void endLocationPath() throws nu.xom.jaxen.JaxenException
    {
        java.util.Iterator $r5;
        nu.xom.jaxen.expr.LocationPath r3;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r4;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (nu.xom.jaxen.expr.LocationPath) $r2;

        $r4 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void addSteps(nu.xom.jaxen.expr.LocationPath,java.util.Iterator)>(r3, $r5);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>(r3);

        return;
    }

    protected void addSteps(nu.xom.jaxen.expr.LocationPath, java.util.Iterator)
    {
        java.util.Iterator r0;
        nu.xom.jaxen.expr.Step $r3;
        nu.xom.jaxen.expr.LocationPath r1;
        java.lang.Object $r2;
        nu.xom.jaxen.JaxenHandler r4;
        boolean $z0;

        r4 := @this: nu.xom.jaxen.JaxenHandler;

        r1 := @parameter0: nu.xom.jaxen.expr.LocationPath;

        r0 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (nu.xom.jaxen.expr.Step) $r2;

        interfaceinvoke r1.<nu.xom.jaxen.expr.LocationPath: void addStep(nu.xom.jaxen.expr.Step)>($r3);

        goto label1;

     label2:
        return;
    }

    public void startNameStep(int, java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Step $r4;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.String r2, r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Step createNameStep(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

        return;
    }

    public void endNameStep()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endStep()>();

        return;
    }

    public void startTextNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Step $r2;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Step createTextNodeStep(int)>(i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void endTextNodeStep()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endStep()>();

        return;
    }

    public void startCommentNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Step $r2;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Step createCommentNodeStep(int)>(i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void endCommentNodeStep()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endStep()>();

        return;
    }

    public void startAllNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Step $r2;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Step createAllNodeStep(int)>(i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void endAllNodeStep()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endStep()>();

        return;
    }

    public void startProcessingInstructionNodeStep(int, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Step $r3;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.String r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r3 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Step createProcessingInstructionNodeStep(int,java.lang.String)>(i0, r2);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r3);

        return;
    }

    public void endProcessingInstructionNodeStep()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void endStep()>();

        return;
    }

    protected void endStep()
    {
        java.util.Iterator $r5;
        nu.xom.jaxen.expr.Step r3;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r4;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (nu.xom.jaxen.expr.Step) $r2;

        $r4 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void addPredicates(nu.xom.jaxen.expr.Predicated,java.util.Iterator)>(r3, $r5);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>(r3);

        return;
    }

    public void startPredicate()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        return;
    }

    public void endPredicate() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr $r3;
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.expr.Predicate $r4;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        $r3 = (nu.xom.jaxen.expr.Expr) $r2;

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Predicate createPredicate(nu.xom.jaxen.expr.Expr)>($r3);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

        return;
    }

    public void startFilterExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        return;
    }

    public void endFilterExpr() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r3;
        java.util.Iterator $r7;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.FilterExpr $r5;
        nu.xom.jaxen.expr.XPathFactory $r4;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r6;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (nu.xom.jaxen.expr.Expr) $r2;

        $r4 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r5 = interfaceinvoke $r4.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.FilterExpr createFilterExpr(nu.xom.jaxen.expr.Expr)>(r3);

        $r6 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r7 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void addPredicates(nu.xom.jaxen.expr.Predicated,java.util.Iterator)>($r5, $r7);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r5);

        return;
    }

    protected void addPredicates(nu.xom.jaxen.expr.Predicated, java.util.Iterator)
    {
        java.util.Iterator r0;
        nu.xom.jaxen.expr.Predicated r1;
        nu.xom.jaxen.expr.Predicate $r3;
        java.lang.Object $r2;
        nu.xom.jaxen.JaxenHandler r4;
        boolean $z0;

        r4 := @this: nu.xom.jaxen.JaxenHandler;

        r1 := @parameter0: nu.xom.jaxen.expr.Predicated;

        r0 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (nu.xom.jaxen.expr.Predicate) $r2;

        interfaceinvoke r1.<nu.xom.jaxen.expr.Predicated: void addPredicate(nu.xom.jaxen.expr.Predicate)>($r3);

        goto label1;

     label2:
        return;
    }

    protected void returnExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r1;
        nu.xom.jaxen.expr.Expr r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>(r2);

        return;
    }

    public void startOrExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endOrExpr(boolean) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createOrExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r4, r2);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startAndExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endAndExpr(boolean) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createAndExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r4, r2);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startEqualityExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endEqualityExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        int i0;
        java.lang.Object $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createEqualityExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr,int)>(r4, r2, i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startRelationalExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endRelationalExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        int i0;
        java.lang.Object $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createRelationalExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr,int)>(r4, r2, i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startAdditiveExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endAdditiveExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        int i0;
        java.lang.Object $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createAdditiveExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr,int)>(r4, r2, i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startMultiplicativeExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endMultiplicativeExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.BinaryExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        int i0;
        java.lang.Object $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.BinaryExpr createMultiplicativeExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr,int)>(r4, r2, i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void startUnaryExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endUnaryExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr $r3, $r4;
        nu.xom.jaxen.expr.XPathFactory $r1;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        $r3 = (nu.xom.jaxen.expr.Expr) $r2;

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.Expr createUnaryExpr(nu.xom.jaxen.expr.Expr,int)>($r3, i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

     label1:
        return;
    }

    public void startUnionExpr()
    {
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        return;
    }

    public void endUnionExpr(boolean) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r2, r4;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.UnionExpr $r6;
        nu.xom.jaxen.expr.XPathFactory $r5;
        java.lang.Object $r1, $r3;
        boolean z0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (nu.xom.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (nu.xom.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.UnionExpr createUnionExpr(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r4, r2);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void number(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.NumberExpr $r2;
        nu.xom.jaxen.expr.XPathFactory $r1;
        int i0;
        nu.xom.jaxen.JaxenHandler r0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.NumberExpr createNumberExpr(int)>(i0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void number(double) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.NumberExpr $r2;
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.JaxenHandler r0;
        double d0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r2 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.NumberExpr createNumberExpr(double)>(d0);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        return;
    }

    public void literal(java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.LiteralExpr $r3;
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.String r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r3 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.LiteralExpr createLiteralExpr(java.lang.String)>(r2);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r3);

        return;
    }

    public void variableReference(java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.JaxenHandler r0;
        nu.xom.jaxen.expr.VariableReferenceExpr $r4;
        java.lang.String r2, r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

        return;
    }

    public void startFunction(java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.FunctionCallExpr $r4;
        nu.xom.jaxen.expr.XPathFactory $r1;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.String r2, r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: nu.xom.jaxen.expr.XPathFactory getXPathFactory()>();

        $r4 = interfaceinvoke $r1.<nu.xom.jaxen.expr.XPathFactory: nu.xom.jaxen.expr.FunctionCallExpr createFunctionCallExpr(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

        return;
    }

    public void endFunction()
    {
        nu.xom.jaxen.expr.FunctionCallExpr r3;
        java.util.Iterator $r5;
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r4;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (nu.xom.jaxen.expr.FunctionCallExpr) $r2;

        $r4 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void addParameters(nu.xom.jaxen.expr.FunctionCallExpr,java.util.Iterator)>(r3, $r5);

        virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: void push(java.lang.Object)>(r3);

        return;
    }

    protected void addParameters(nu.xom.jaxen.expr.FunctionCallExpr, java.util.Iterator)
    {
        nu.xom.jaxen.expr.FunctionCallExpr r1;
        java.util.Iterator r0;
        nu.xom.jaxen.expr.Expr $r3;
        java.lang.Object $r2;
        nu.xom.jaxen.JaxenHandler r4;
        boolean $z0;

        r4 := @this: nu.xom.jaxen.JaxenHandler;

        r1 := @parameter0: nu.xom.jaxen.expr.FunctionCallExpr;

        r0 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (nu.xom.jaxen.expr.Expr) $r2;

        interfaceinvoke r1.<nu.xom.jaxen.expr.FunctionCallExpr: void addParameter(nu.xom.jaxen.expr.Expr)>($r3);

        goto label1;

     label2:
        return;
    }

    protected int stackSize()
    {
        int $i0;
        nu.xom.jaxen.JaxenHandler r0;
        java.util.LinkedList $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        return $i0;
    }

    protected void push(java.lang.Object)
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object r2;
        java.util.LinkedList $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        virtualinvoke $r1.<java.util.LinkedList: void addLast(java.lang.Object)>(r2);

        return;
    }

    protected java.lang.Object pop()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeLast()>();

        return $r2;
    }

    protected boolean canPop()
    {
        int $i0;
        nu.xom.jaxen.JaxenHandler r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList peekFrame()>();

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void pushFrame()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.util.LinkedList $r1, $r2;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r2 = r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList stack>;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>($r1);

        return;
    }

    protected java.util.LinkedList popFrame()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList stack>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeLast()>();

        $r3 = (java.util.LinkedList) $r2;

        return $r3;
    }

    protected java.util.LinkedList peekFrame()
    {
        nu.xom.jaxen.JaxenHandler r0;
        java.lang.Object $r2;
        java.util.LinkedList $r1, $r3;

        r0 := @this: nu.xom.jaxen.JaxenHandler;

        $r1 = r0.<nu.xom.jaxen.JaxenHandler: java.util.LinkedList stack>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r3 = (java.util.LinkedList) $r2;

        return $r3;
    }
}
