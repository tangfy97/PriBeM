public class org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes extends java.lang.Object implements org.w3c.dom.NodeList
{
    protected java.util.ArrayList nodes;
    private final org.apache.batik.bridge.svg12.DefaultContentSelector this$0;

    public void <init>(org.apache.batik.bridge.svg12.DefaultContentSelector)
    {
        org.apache.batik.bridge.svg12.DefaultContentSelector r1;
        org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes;

        r1 := @parameter0: org.apache.batik.bridge.svg12.DefaultContentSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.DefaultContentSelector this$0> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes> = $r2;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: boolean update()>();

        return;
    }

    protected boolean update()
    {
        java.util.ArrayList $r1, r3, $r4, $r8, $r9, $r11;
        org.w3c.dom.Node r13;
        int $i0, $i1, i2;
        boolean $z0;
        org.apache.batik.bridge.svg12.DefaultContentSelector $r5, $r7;
        org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes r0;
        org.w3c.dom.Element $r6;
        java.lang.Object $r2, $r10, $r12;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes;

        $r1 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object clone()>();

        r3 = (java.util.ArrayList) $r2;

        $r4 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.DefaultContentSelector this$0>;

        $r6 = $r5.<org.apache.batik.bridge.svg12.AbstractContentSelector: org.w3c.dom.Element boundElement>;

        r13 = interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label1:
        $r7 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.DefaultContentSelector this$0>;

        $z0 = virtualinvoke $r7.<org.apache.batik.bridge.svg12.AbstractContentSelector: boolean isSelected(org.w3c.dom.Node)>(r13);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r8 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label3:
        r13 = interfaceinvoke r13.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r13 != null goto label1;

        $r9 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 == $i0 goto label5;

        return 1;

     label5:
        i2 = 0;

        goto label8;

     label6:
        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r11 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r10 == $r12 goto label7;

        return 1;

     label7:
        i2 = i2 + 1;

     label8:
        if i2 < $i0 goto label6;

        return 0;
    }

    public org.w3c.dom.Node item(int)
    {
        org.w3c.dom.Node $r4;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.w3c.dom.Node) $r3;

        return $r4;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes;

        $r1 = r0.<org.apache.batik.bridge.svg12.DefaultContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }
}
