class JDOMAbout$Info extends java.lang.Object
{
    private final JDOMAbout this$0;
    java.lang.String title;
    java.lang.String version;
    java.lang.String copyright;
    java.lang.String description;
    java.util.List authors;
    java.lang.String license;
    java.lang.String support;
    java.lang.String website;

    void <init>(JDOMAbout) throws java.lang.Exception
    {
        java.util.jar.JarFile $r26, r28;
        org.jdom.Document $r6;
        java.util.zip.ZipEntry r29;
        JDOMAbout r1;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r24;
        java.lang.Exception $r27;
        java.util.List $r15, $r23;
        org.jdom.input.SAXBuilder $r2;
        java.util.StringTokenizer $r4;
        JDOMAbout$Author $r20;
        java.lang.String $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r21, $r22, $r25;
        java.util.LinkedList $r16;
        java.util.Iterator $r17;
        JDOMAbout$Info r0;
        java.lang.Object $r18;
        org.jdom.Element $r7, r19;
        java.io.InputStream $r5;

        r0 := @this: JDOMAbout$Info;

        r1 := @parameter0: JDOMAbout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<JDOMAbout$Info: JDOMAbout this$0> = r1;

        $r2 = new org.jdom.input.SAXBuilder;

        specialinvoke $r2.<org.jdom.input.SAXBuilder: void <init>()>();

        r28 = null;

        r29 = null;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r3, ";:");

        goto label5;

     label1:
        $r25 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label2:
        $r26 = new java.util.jar.JarFile;

        specialinvoke $r26.<java.util.jar.JarFile: void <init>(java.lang.String)>($r25);

        r28 = $r26;

        r29 = virtualinvoke $r26.<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("META-INF/info.xml");

     label3:
        goto label5;

     label4:
        $r27 := @caughtexception;

        goto label5;

     label5:
        $z1 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label6;

        if r29 == null goto label1;

     label6:
        if r29 != null goto label7;

        $r24 = new java.io.FileNotFoundException;

        specialinvoke $r24.<java.io.FileNotFoundException: void <init>(java.lang.String)>("META-INF/info.xml not found; it should be within the JDOM JAR but isn\'t");

        throw $r24;

     label7:
        $r5 = virtualinvoke r28.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r29);

        $r6 = virtualinvoke $r2.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>($r5);

        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r8 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("title");

        r0.<JDOMAbout$Info: java.lang.String title> = $r8;

        $r9 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("version");

        r0.<JDOMAbout$Info: java.lang.String version> = $r9;

        $r10 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("copyright");

        r0.<JDOMAbout$Info: java.lang.String copyright> = $r10;

        $r11 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("description");

        r0.<JDOMAbout$Info: java.lang.String description> = $r11;

        $r12 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("license");

        r0.<JDOMAbout$Info: java.lang.String license> = $r12;

        $r13 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("support");

        r0.<JDOMAbout$Info: java.lang.String support> = $r13;

        $r14 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("web-site");

        r0.<JDOMAbout$Info: java.lang.String website> = $r14;

        $r15 = virtualinvoke $r7.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("author");

        $r16 = new java.util.LinkedList;

        specialinvoke $r16.<java.util.LinkedList: void <init>()>();

        r0.<JDOMAbout$Info: java.util.List authors> = $r16;

        $r17 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        goto label9;

     label8:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.jdom.Element) $r18;

        $r20 = new JDOMAbout$Author;

        virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r20.<JDOMAbout$Author: void <init>(JDOMAbout)>(r1);

        $r21 = virtualinvoke r19.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("name");

        $r20.<JDOMAbout$Author: java.lang.String name> = $r21;

        $r22 = virtualinvoke r19.<org.jdom.Element: java.lang.String getChildTextTrim(java.lang.String)>("e-mail");

        $r20.<JDOMAbout$Author: java.lang.String email> = $r22;

        $r23 = r0.<JDOMAbout$Info: java.util.List authors>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r20);

     label9:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label8;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
