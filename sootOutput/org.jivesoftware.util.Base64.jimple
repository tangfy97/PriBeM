public class org.jivesoftware.util.Base64 extends java.lang.Object
{
    public static final int NO_OPTIONS;
    public static final int ENCODE;
    public static final int DECODE;
    public static final int GZIP;
    public static final int DONT_BREAK_LINES;
    public static final int URL_SAFE;
    public static final int ORDERED;
    private static final int MAX_LINE_LENGTH;
    private static final byte EQUALS_SIGN;
    private static final byte NEW_LINE;
    private static final java.lang.String PREFERRED_ENCODING;
    private static final byte WHITE_SPACE_ENC;
    private static final byte EQUALS_SIGN_ENC;
    private static final byte[] _STANDARD_ALPHABET;
    private static final byte[] _STANDARD_DECODABET;
    private static final byte[] _URL_SAFE_ALPHABET;
    private static final byte[] _URL_SAFE_DECODABET;
    private static final byte[] _ORDERED_ALPHABET;
    private static final byte[] _ORDERED_DECODABET;

    private static final byte[] getAlphabet(int)
    {
        byte[] $r0, $r1, $r2;
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 != 16 goto label1;

        $r2 = <org.jivesoftware.util.Base64: byte[] _URL_SAFE_ALPHABET>;

        return $r2;

     label1:
        $i2 = i0 & 32;

        if $i2 != 32 goto label2;

        $r1 = <org.jivesoftware.util.Base64: byte[] _ORDERED_ALPHABET>;

        return $r1;

     label2:
        $r0 = <org.jivesoftware.util.Base64: byte[] _STANDARD_ALPHABET>;

        return $r0;
    }

    private static final byte[] getDecodabet(int)
    {
        byte[] $r0, $r1, $r2;
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 != 16 goto label1;

        $r2 = <org.jivesoftware.util.Base64: byte[] _URL_SAFE_DECODABET>;

        return $r2;

     label1:
        $i2 = i0 & 32;

        if $i2 != 32 goto label2;

        $r1 = <org.jivesoftware.util.Base64: byte[] _ORDERED_DECODABET>;

        return $r1;

     label2:
        $r0 = <org.jivesoftware.util.Base64: byte[] _STANDARD_DECODABET>;

        return $r0;
    }

    private void <init>()
    {
        org.jivesoftware.util.Base64 r0;

        r0 := @this: org.jivesoftware.util.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, r2, r3, $r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 3 goto label1;

        staticinvoke <org.jivesoftware.util.Base64: void usage(java.lang.String)>("Not enough arguments.");

        goto label4;

     label1:
        r1 = r0[0];

        r2 = r0[1];

        r3 = r0[2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z0 == 0 goto label2;

        staticinvoke <org.jivesoftware.util.Base64: void encodeFileToFile(java.lang.String,java.lang.String)>(r2, r3);

        goto label4;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z1 == 0 goto label3;

        staticinvoke <org.jivesoftware.util.Base64: void decodeFileToFile(java.lang.String,java.lang.String)>(r2, r3);

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown flag: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.jivesoftware.util.Base64: void usage(java.lang.String)>($r7);

     label4:
        return;
    }

    private static final void usage(java.lang.String)
    {
        java.io.PrintStream $r1, $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Usage: java Base64 -e|-d inputfile outputfile");

        return;
    }

    private static byte[] encode3to4(byte[], byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;

        r1 := @parameter0: byte[];

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        staticinvoke <org.jivesoftware.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r0, 0, i0, r1, 0, i1);

        return r1;
    }

    private static byte[] encode3to4(byte[], int, int, byte[], int, int)
    {
        byte[] $r0, r1, r2;
        byte $b5, $b8, $b12, $b15, $b18, $b21, $b25, $b29, $b32, $b38, $b42, $b44;
        int i0, i1, $i2, i3, $i4, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i35, i36, $i37, $i39, $i40, $i41, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51;

        r2 := @parameter0: byte[];

        i36 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        i3 := @parameter4: int;

        i0 := @parameter5: int;

        $r0 = staticinvoke <org.jivesoftware.util.Base64: byte[] getAlphabet(int)>(i0);

        if i1 <= 0 goto label01;

        $b44 = r2[i36];

        $i49 = (int) $b44;

        $i45 = $i49 << 24;

        $i46 = $i45 >>> 8;

        goto label02;

     label01:
        $i46 = 0;

     label02:
        if i1 <= 1 goto label03;

        $i41 = i36 + 1;

        $b42 = r2[$i41];

        $i50 = (int) $b42;

        $i43 = $i50 << 24;

        $i47 = $i43 >>> 16;

        goto label04;

     label03:
        $i47 = 0;

     label04:
        $i2 = $i46 | $i47;

        if i1 <= 2 goto label05;

        $i37 = i36 + 2;

        $b38 = r2[$i37];

        $i51 = (int) $b38;

        $i39 = $i51 << 24;

        $i48 = $i39 >>> 24;

        goto label06;

     label05:
        $i48 = 0;

     label06:
        $i40 = $i2 | $i48;

        tableswitch(i1)
        {
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label07;
            default: goto label10;
        };

     label07:
        $i4 = $i40 >>> 18;

        $b5 = $r0[$i4];

        r1[i3] = $b5;

        $i9 = i3 + 1;

        $i6 = $i40 >>> 12;

        $i7 = $i6 & 63;

        $b8 = $r0[$i7];

        r1[$i9] = $b8;

        $i13 = i3 + 2;

        $i10 = $i40 >>> 6;

        $i11 = $i10 & 63;

        $b12 = $r0[$i11];

        r1[$i13] = $b12;

        $i16 = i3 + 3;

        $i14 = $i40 & 63;

        $b15 = $r0[$i14];

        r1[$i16] = $b15;

        return r1;

     label08:
        $i17 = $i40 >>> 18;

        $b18 = $r0[$i17];

        r1[i3] = $b18;

        $i22 = i3 + 1;

        $i19 = $i40 >>> 12;

        $i20 = $i19 & 63;

        $b21 = $r0[$i20];

        r1[$i22] = $b21;

        $i26 = i3 + 2;

        $i23 = $i40 >>> 6;

        $i24 = $i23 & 63;

        $b25 = $r0[$i24];

        r1[$i26] = $b25;

        $i27 = i3 + 3;

        r1[$i27] = 61;

        return r1;

     label09:
        $i28 = $i40 >>> 18;

        $b29 = $r0[$i28];

        r1[i3] = $b29;

        $i33 = i3 + 1;

        $i30 = $i40 >>> 12;

        $i31 = $i30 & 63;

        $b32 = $r0[$i31];

        r1[$i33] = $b32;

        $i34 = i3 + 2;

        r1[$i34] = 61;

        $i35 = i3 + 3;

        r1[$i35] = 61;

        return r1;

     label10:
        return r1;
    }

    public static java.lang.String encodeObject(java.io.Serializable)
    {
        java.lang.String $r1;
        java.io.Serializable r0;

        r0 := @parameter0: java.io.Serializable;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: java.lang.String encodeObject(java.io.Serializable,int)>(r0, 0);

        return $r1;
    }

    public static java.lang.String encodeObject(java.io.Serializable, int)
    {
        byte[] $r5, $r10;
        org.jivesoftware.util.Base64$OutputStream $r1, r26;
        java.lang.Exception $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24;
        java.io.Serializable r3;
        java.util.zip.GZIPOutputStream $r6, r28;
        java.io.UnsupportedEncodingException $r8;
        java.lang.Throwable $r15;
        java.io.ByteArrayOutputStream $r0, r25;
        int i0, i1, $i2;
        java.io.ObjectOutputStream $r2, $r7, r27;
        java.lang.String $r4, $r9;
        java.io.IOException $r20;

        r3 := @parameter0: java.io.Serializable;

        i0 := @parameter1: int;

        r25 = null;

        r26 = null;

        r27 = null;

        r28 = null;

        i1 = i0 & 2;

     label01:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        r25 = $r0;

        $r1 = new org.jivesoftware.util.Base64$OutputStream;

        $i2 = 1 | i0;

        specialinvoke $r1.<org.jivesoftware.util.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r0, $i2);

        r26 = $r1;

        if i1 != 2 goto label02;

        $r6 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r6.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r1);

        r28 = $r6;

        $r7 = new java.io.ObjectOutputStream;

        specialinvoke $r7.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r6);

        r27 = $r7;

        goto label03;

     label02:
        $r2 = new java.io.ObjectOutputStream;

        specialinvoke $r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r1);

        r27 = $r2;

     label03:
        virtualinvoke r27.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

     label04:
        virtualinvoke r27.<java.io.ObjectOutputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r24 := @caughtexception;

     label07:
        virtualinvoke r28.<java.util.zip.GZIPOutputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

     label10:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r22 := @caughtexception;

     label13:
        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

     label14:
        goto label44;

     label15:
        $r21 := @caughtexception;

        goto label44;

     label16:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label17:
        virtualinvoke r27.<java.io.ObjectOutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r19 := @caughtexception;

     label20:
        virtualinvoke r28.<java.util.zip.GZIPOutputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r18 := @caughtexception;

     label23:
        virtualinvoke r26.<java.io.OutputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r17 := @caughtexception;

     label26:
        virtualinvoke r25.<java.io.ByteArrayOutputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r16 := @caughtexception;

     label29:
        return null;

     label30:
        $r15 := @caughtexception;

     label31:
        virtualinvoke r27.<java.io.ObjectOutputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r14 := @caughtexception;

     label34:
        virtualinvoke r28.<java.util.zip.GZIPOutputStream: void close()>();

     label35:
        goto label37;

     label36:
        $r13 := @caughtexception;

     label37:
        virtualinvoke r26.<java.io.OutputStream: void close()>();

     label38:
        goto label40;

     label39:
        $r12 := @caughtexception;

     label40:
        virtualinvoke r25.<java.io.ByteArrayOutputStream: void close()>();

     label41:
        goto label43;

     label42:
        $r11 := @caughtexception;

     label43:
        throw $r15;

     label44:
        $r4 = new java.lang.String;

        $r5 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, "UTF-8");

     label45:
        return $r4;

     label46:
        $r8 := @caughtexception;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r9.<java.lang.String: void <init>(byte[])>($r10);

        return $r9;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.io.IOException from label01 to label04 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Throwable from label01 to label04 with label30;
        catch java.lang.Throwable from label16 to label17 with label30;
        catch java.lang.Exception from label31 to label32 with label33;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Exception from label40 to label41 with label42;
        catch java.lang.Throwable from label30 to label31 with label30;
        catch java.io.UnsupportedEncodingException from label44 to label45 with label46;
    }

    public static java.lang.String encodeBytes(byte[])
    {
        int $i0;
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, 0, $i0, 0);

        return $r1;
    }

    public static java.lang.String encodeBytes(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, 0, $i1, i0);

        return $r1;
    }

    public static java.lang.String encodeBytes(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, i0, i1, 0);

        return $r1;
    }

    public static java.lang.String encodeBytes(byte[], int, int, int)
    {
        byte[] r1, $r2, $r7, $r12;
        org.jivesoftware.util.Base64$OutputStream $r4, r26;
        byte $b16;
        boolean $z0, z1;
        java.lang.Exception $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r23;
        java.util.zip.GZIPOutputStream $r5, r25;
        java.io.UnsupportedEncodingException $r8, $r10;
        java.lang.Throwable $r16;
        java.io.ByteArrayOutputStream $r3, r24;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, i18, i19, i20;
        java.lang.String $r0, $r6, $r9, $r11;
        java.io.IOException $r20;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        i1 = i0 & 8;

        i2 = i0 & 2;

        if i2 != 2 goto label36;

        r24 = null;

        r25 = null;

        r26 = null;

     label01:
        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r24 = $r3;

        $r4 = new org.jivesoftware.util.Base64$OutputStream;

        $i15 = 1 | i0;

        specialinvoke $r4.<org.jivesoftware.util.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r3, $i15);

        r26 = $r4;

        $r5 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r5.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r4);

        r25 = $r5;

        virtualinvoke $r5.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>(r1, i8, i3);

        virtualinvoke $r5.<java.util.zip.GZIPOutputStream: void close()>();

     label02:
        virtualinvoke $r5.<java.util.zip.GZIPOutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r23 := @caughtexception;

     label05:
        virtualinvoke $r4.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r22 := @caughtexception;

     label08:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label09:
        goto label33;

     label10:
        $r21 := @caughtexception;

        goto label33;

     label11:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label12:
        virtualinvoke r25.<java.util.zip.GZIPOutputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r19 := @caughtexception;

     label15:
        virtualinvoke r26.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r18 := @caughtexception;

     label18:
        virtualinvoke r24.<java.io.ByteArrayOutputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r17 := @caughtexception;

     label21:
        return null;

     label22:
        $r16 := @caughtexception;

     label23:
        virtualinvoke r25.<java.util.zip.GZIPOutputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r15 := @caughtexception;

     label26:
        virtualinvoke r26.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r14 := @caughtexception;

     label29:
        virtualinvoke r24.<java.io.ByteArrayOutputStream: void close()>();

     label30:
        goto label32;

     label31:
        $r13 := @caughtexception;

     label32:
        throw $r16;

     label33:
        $r6 = new java.lang.String;

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "UTF-8");

     label34:
        return $r6;

     label35:
        $r10 := @caughtexception;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r12);

        return $r11;

     label36:
        if i1 != 0 goto label37;

        $z0 = 1;

        goto label38;

     label37:
        $z0 = 0;

     label38:
        z1 = $z0;

        $i4 = i3 * 4;

        $i14 = $i4 / 3;

        $i5 = i3 % 3;

        if $i5 <= 0 goto label39;

        $b16 = 4;

        goto label40;

     label39:
        $b16 = 0;

     label40:
        $i6 = $i14 + $b16;

        if z1 == 0 goto label41;

        $i17 = $i14 / 76;

        goto label42;

     label41:
        $i17 = 0;

     label42:
        $i7 = $i6 + $i17;

        $r2 = newarray (byte)[$i7];

        i18 = 0;

        i19 = 0;

        $i13 = i3 - 2;

        i20 = 0;

     label43:
        if i18 >= $i13 goto label45;

        $i11 = i18 + i8;

        staticinvoke <org.jivesoftware.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r1, $i11, 3, $r2, i19, i0);

        i20 = i20 + 4;

        if z1 == 0 goto label44;

        if i20 != 76 goto label44;

        $i12 = i19 + 4;

        $r2[$i12] = 10;

        i19 = i19 + 1;

        i20 = 0;

     label44:
        i18 = i18 + 3;

        i19 = i19 + 4;

        goto label43;

     label45:
        if i18 >= i3 goto label46;

        $i10 = i18 + i8;

        $i9 = i3 - i18;

        staticinvoke <org.jivesoftware.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r1, $i10, $i9, $r2, i19, i0);

        i19 = i19 + 4;

     label46:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r2, 0, i19, "UTF-8");

     label47:
        return $r0;

     label48:
        $r8 := @caughtexception;

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int)>($r2, 0, i19);

        return $r9;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label35;
        catch java.io.UnsupportedEncodingException from label46 to label47 with label48;
    }

    private static int decode4to3(byte[], int, byte[], int, int)
    {
        byte[] $r0, r1, r2;
        byte $b3, $b5, $b6, $b7, $b10, $b11, $b16, $b17, $b22, $b23, $b28, $b30, $b32, $b34, $b35, $b38, $b39, $b44, $b45, $b50, $b52, $b54, $b55, $b58, $b59, $b64, $b65, $b66, $b67, $b69, $b71, $b72, $b74, $b76, $b77, $b79, $b81, $b82;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35;
        short $s8, $s12, $s18, $s24, $s36, $s40, $s46, $s56, $s60, $s88, $s91, $s95, $s98, $s101, $s104, $s107, $s110, $s113;
        int i0, i1, $i2, $i4, $i9, $i13, $i14, $i15, $i19, $i20, $i21, $i25, i26, $i27, $i29, $i31, $i33, $i37, $i41, $i42, $i43, $i47, $i48, $i49, $i51, $i53, $i57, $i61, $i62, $i63, $i68, $i70, $i73, $i75, $i78, $i80, i83, i84, i85, $i86, $i87, $i89, $i90, $i92, $i93, $i94, $i96, $i97, $i99, $i100, $i102, $i103, $i105, $i106, $i108, $i109, $i111, $i112, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i128;
        java.io.PrintStream $r5, $r12, $r19, $r26;
        java.lang.Exception $r3;
        java.lang.String $r10, $r17, $r24, $r31;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        r2 := @parameter2: byte[];

        i26 := @parameter3: int;

        i0 := @parameter4: int;

        $r0 = staticinvoke <org.jivesoftware.util.Base64: byte[] getDecodabet(int)>(i0);

        $i2 = i1 + 2;

        $b3 = r1[$i2];

        $i86 = (int) $b3;

        if $i86 != 61 goto label1;

        $b54 = r1[i1];

        $i87 = (int) $b54;

        $b55 = $r0[$i87];

        $s88 = (short) $b55;

        $s56 = $s88 & 255;

        $i89 = (int) $s56;

        $i62 = $i89 << 18;

        $i57 = i1 + 1;

        $b58 = r1[$i57];

        $i90 = (int) $b58;

        $b59 = $r0[$i90];

        $s91 = (short) $b59;

        $s60 = $s91 & 255;

        $i92 = (int) $s60;

        $i61 = $i92 << 12;

        i83 = $i62 | $i61;

        $i63 = i83 >>> 16;

        $b64 = (byte) $i63;

        r2[i26] = $b64;

        return 1;

     label1:
        $i4 = i1 + 3;

        $b5 = r1[$i4];

        $i93 = (int) $b5;

        if $i93 != 61 goto label2;

        $b34 = r1[i1];

        $i94 = (int) $b34;

        $b35 = $r0[$i94];

        $s95 = (short) $b35;

        $s36 = $s95 & 255;

        $i96 = (int) $s36;

        $i42 = $i96 << 18;

        $i37 = i1 + 1;

        $b38 = r1[$i37];

        $i97 = (int) $b38;

        $b39 = $r0[$i97];

        $s98 = (short) $b39;

        $s40 = $s98 & 255;

        $i99 = (int) $s40;

        $i41 = $i99 << 12;

        $i48 = $i42 | $i41;

        $i43 = i1 + 2;

        $b44 = r1[$i43];

        $i100 = (int) $b44;

        $b45 = $r0[$i100];

        $s101 = (short) $b45;

        $s46 = $s101 & 255;

        $i102 = (int) $s46;

        $i47 = $i102 << 6;

        i84 = $i48 | $i47;

        $i49 = i84 >>> 16;

        $b50 = (byte) $i49;

        r2[i26] = $b50;

        $i53 = i26 + 1;

        $i51 = i84 >>> 8;

        $b52 = (byte) $i51;

        r2[$i53] = $b52;

        return 2;

     label2:
        $b6 = r1[i1];

        $i103 = (int) $b6;

        $b7 = $r0[$i103];

        $s104 = (short) $b7;

        $s8 = $s104 & 255;

        $i105 = (int) $s8;

        $i14 = $i105 << 18;

        $i9 = i1 + 1;

        $b10 = r1[$i9];

        $i106 = (int) $b10;

        $b11 = $r0[$i106];

        $s107 = (short) $b11;

        $s12 = $s107 & 255;

        $i108 = (int) $s12;

        $i13 = $i108 << 12;

        $i20 = $i14 | $i13;

        $i15 = i1 + 2;

        $b16 = r1[$i15];

        $i109 = (int) $b16;

        $b17 = $r0[$i109];

        $s110 = (short) $b17;

        $s18 = $s110 & 255;

        $i111 = (int) $s18;

        $i19 = $i111 << 6;

        $i25 = $i20 | $i19;

        $i21 = i1 + 3;

        $b22 = r1[$i21];

        $i112 = (int) $b22;

        $b23 = $r0[$i112];

        $s113 = (short) $b23;

        $s24 = $s113 & 255;

        $i114 = (int) $s24;

        i85 = $i25 | $i114;

        $i27 = i85 >> 16;

        $b28 = (byte) $i27;

        r2[i26] = $b28;

        $i31 = i26 + 1;

        $i29 = i85 >> 8;

        $b30 = (byte) $i29;

        r2[$i31] = $b30;

        $i33 = i26 + 2;

        $b32 = (byte) i85;

        r2[$i33] = $b32;

     label3:
        return 3;

     label4:
        $r3 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $b65 = r1[i1];

        $i115 = (int) $b65;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i115);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $b66 = r1[i1];

        $i116 = (int) $b66;

        $b67 = $r0[$i116];

        $i117 = (int) $b67;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i117);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i68 = i1 + 1;

        $b69 = r1[$i68];

        $i118 = (int) $b69;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i118);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i70 = i1 + 1;

        $b71 = r1[$i70];

        $i119 = (int) $b71;

        $b72 = $r0[$i119];

        $i120 = (int) $b72;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i120);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i73 = i1 + 2;

        $b74 = r1[$i73];

        $i121 = (int) $b74;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i75 = i1 + 2;

        $b76 = r1[$i75];

        $i122 = (int) $b76;

        $b77 = $r0[$i122];

        $i123 = (int) $b77;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i123);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i78 = i1 + 3;

        $b79 = r1[$i78];

        $i124 = (int) $b79;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i124);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i80 = i1 + 3;

        $b81 = r1[$i80];

        $i125 = (int) $b81;

        $b82 = $r0[$i125];

        $i126 = (int) $b82;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i126);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $i128 = (int) -1;

        return $i128;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static byte[] decode(byte[], int, int, int)
    {
        byte[] $r0, r1, r2, r3, $r12;
        byte $b6, $b7, $b8, b14, b15;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13;
        int i0, i1, $i2, i3, i4, $i5, $i9, $i10, i11, i12, i13, $i16, $i17, $i19, $i20, $i22, $i23, $i24;
        java.lang.String $r11;
        java.io.PrintStream $r5;

        r3 := @parameter0: byte[];

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $r0 = staticinvoke <org.jivesoftware.util.Base64: byte[] getDecodabet(int)>(i0);

        $i2 = i1 * 3;

        i3 = $i2 / 4;

        r1 = newarray (byte)[i3];

        i11 = 0;

        r2 = newarray (byte)[4];

        i12 = 0;

        i13 = i4;

     label1:
        $i5 = i4 + i1;

        if i13 >= $i5 goto label4;

        $b6 = r3[i13];

        $b7 = $b6 & 127;

        b14 = (byte) $b7;

        $i16 = (int) b14;

        b15 = $r0[$i16];

        $i17 = (int) b15;

        $i19 = (int) -5;

        if $i17 < $i19 goto label2;

        $i20 = (int) b15;

        $i22 = (int) -1;

        if $i20 < $i22 goto label3;

        $i9 = i12;

        i12 = i12 + 1;

        r2[$i9] = b14;

        if i12 <= 3 goto label3;

        $i10 = staticinvoke <org.jivesoftware.util.Base64: int decode4to3(byte[],int,byte[],int,int)>(r2, 0, r1, i11, i0);

        i11 = i11 + $i10;

        i12 = 0;

        $i23 = (int) b14;

        if $i23 != 61 goto label3;

        goto label4;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Base64 input character at ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $b8 = r3[i13];

        $i24 = (int) $b8;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(decimal)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);

        return null;

     label3:
        i13 = i13 + 1;

        goto label1;

     label4:
        $r12 = newarray (byte)[i11];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r12, 0, i11);

        return $r12;
    }

    public static byte[] decode(java.lang.String)
    {
        byte[] $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: byte[] decode(java.lang.String,int)>(r0, 0);

        return $r1;
    }

    public static byte[] decode(java.lang.String, int)
    {
        byte[] $r1, r2, r18, r19;
        java.util.zip.GZIPInputStream r21, $r25;
        byte $b3, $b4;
        java.io.ByteArrayInputStream r20, $r24;
        java.lang.Exception $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16;
        java.io.UnsupportedEncodingException $r17;
        java.lang.Throwable $r9;
        java.io.ByteArrayOutputStream r22, $r23;
        short $s7, $s10;
        int i0, $i1, $i2, $i5, $i6, $i8, i9, $i11, $i13, $i14, $i16;
        java.lang.String r0;
        java.io.IOException $r13;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label01:
        r18 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        r18 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

     label04:
        $i1 = lengthof r18;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: byte[] decode(byte[],int,int,int)>(r18, 0, $i1, i0);

        r19 = $r1;

        if $r1 == null goto label38;

        $i2 = lengthof $r1;

        if $i2 < 4 goto label38;

        $b3 = $r1[0];

        $s10 = (short) $b3;

        $s7 = $s10 & 255;

        $b4 = $r1[1];

        $i11 = (int) $b4;

        $i5 = $i11 << 8;

        $i13 = (int) 65280;

        $i6 = $i5 & $i13;

        $i14 = (int) $s7;

        i9 = $i14 | $i6;

        $i16 = (int) 35615;

        if $i16 != i9 goto label38;

        r20 = null;

        r21 = null;

        r22 = null;

        r2 = newarray (byte)[2048];

     label05:
        $r23 = new java.io.ByteArrayOutputStream;

        specialinvoke $r23.<java.io.ByteArrayOutputStream: void <init>()>();

        r22 = $r23;

        $r24 = new java.io.ByteArrayInputStream;

        specialinvoke $r24.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        r20 = $r24;

        $r25 = new java.util.zip.GZIPInputStream;

        specialinvoke $r25.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r24);

        r21 = $r25;

     label06:
        $i8 = virtualinvoke $r25.<java.util.zip.GZIPInputStream: int read(byte[])>(r2);

        if $i8 < 0 goto label07;

        virtualinvoke $r23.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i8);

        goto label06;

     label07:
        r19 = virtualinvoke $r23.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        virtualinvoke $r23.<java.io.ByteArrayOutputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

     label11:
        virtualinvoke $r25.<java.util.zip.GZIPInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

     label14:
        virtualinvoke $r24.<java.io.ByteArrayInputStream: void close()>();

     label15:
        goto label38;

     label16:
        $r14 := @caughtexception;

        goto label38;

     label17:
        $r13 := @caughtexception;

     label18:
        virtualinvoke r22.<java.io.ByteArrayOutputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r12 := @caughtexception;

     label21:
        virtualinvoke r21.<java.util.zip.GZIPInputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r11 := @caughtexception;

     label24:
        virtualinvoke r20.<java.io.ByteArrayInputStream: void close()>();

     label25:
        goto label38;

     label26:
        $r10 := @caughtexception;

        goto label38;

     label27:
        $r9 := @caughtexception;

     label28:
        virtualinvoke r22.<java.io.ByteArrayOutputStream: void close()>();

     label29:
        goto label31;

     label30:
        $r8 := @caughtexception;

     label31:
        virtualinvoke r21.<java.util.zip.GZIPInputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r7 := @caughtexception;

     label34:
        virtualinvoke r20.<java.io.ByteArrayInputStream: void close()>();

     label35:
        goto label37;

     label36:
        $r6 := @caughtexception;

     label37:
        throw $r9;

     label38:
        return r19;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label03;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.io.IOException from label05 to label08 with label17;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Throwable from label05 to label08 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Exception from label31 to label32 with label33;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public static java.lang.Object decodeToObject(java.lang.String)
    {
        java.lang.Throwable $r6;
        byte[] $r1;
        java.io.ObjectInputStream $r3, r16;
        java.io.ByteArrayInputStream $r2, r15;
        java.lang.String r0;
        java.io.IOException $r12;
        java.lang.Exception $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;
        java.lang.ClassNotFoundException $r9;
        java.lang.Object r17;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: byte[] decode(java.lang.String)>(r0);

        r15 = null;

        r16 = null;

     label01:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        r15 = $r2;

        $r3 = new java.io.ObjectInputStream;

        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r2);

        r16 = $r3;

        r17 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label02:
        virtualinvoke $r2.<java.io.ByteArrayInputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

     label05:
        virtualinvoke $r3.<java.io.ObjectInputStream: void close()>();

     label06:
        goto label30;

     label07:
        $r13 := @caughtexception;

        goto label30;

     label08:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        r17 = null;

     label09:
        virtualinvoke r15.<java.io.ByteArrayInputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r11 := @caughtexception;

     label12:
        virtualinvoke r16.<java.io.ObjectInputStream: void close()>();

     label13:
        goto label30;

     label14:
        $r10 := @caughtexception;

        goto label30;

     label15:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.ClassNotFoundException: void printStackTrace()>();

        r17 = null;

     label16:
        virtualinvoke r15.<java.io.ByteArrayInputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r8 := @caughtexception;

     label19:
        virtualinvoke r16.<java.io.ObjectInputStream: void close()>();

     label20:
        goto label30;

     label21:
        $r7 := @caughtexception;

        goto label30;

     label22:
        $r6 := @caughtexception;

     label23:
        virtualinvoke r15.<java.io.ByteArrayInputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r5 := @caughtexception;

     label26:
        virtualinvoke r16.<java.io.ObjectInputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r4 := @caughtexception;

     label29:
        throw $r6;

     label30:
        return r17;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.ClassNotFoundException from label01 to label02 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public static boolean encodeToFile(byte[], java.lang.String)
    {
        java.lang.Throwable $r5;
        byte[] r3;
        java.io.FileOutputStream $r1;
        java.io.IOException $r7;
        java.lang.Exception $r4, $r6, $r8;
        org.jivesoftware.util.Base64$OutputStream $r0, r9;
        java.lang.String r2;
        boolean z0;

        r3 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r9 = null;

     label01:
        $r0 = new org.jivesoftware.util.Base64$OutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r1, 1);

        r9 = $r0;

        virtualinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void write(byte[])>(r3);

        z0 = 1;

     label02:
        virtualinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r8 := @caughtexception;

        goto label14;

     label05:
        $r7 := @caughtexception;

        z0 = 0;

     label06:
        virtualinvoke r9.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r6 := @caughtexception;

        goto label14;

     label09:
        $r5 := @caughtexception;

     label10:
        virtualinvoke r9.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r4 := @caughtexception;

     label13:
        throw $r5;

     label14:
        return z0;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean decodeToFile(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r6;
        byte[] $r4;
        java.io.FileOutputStream $r1;
        java.io.IOException $r8;
        java.lang.Exception $r5, $r7, $r9;
        org.jivesoftware.util.Base64$OutputStream $r0, r10;
        java.lang.String r2, r3;
        boolean z0;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r10 = null;

     label01:
        $r0 = new org.jivesoftware.util.Base64$OutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r1, 0);

        r10 = $r0;

        $r4 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void write(byte[])>($r4);

        z0 = 1;

     label02:
        virtualinvoke $r0.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r9 := @caughtexception;

        goto label14;

     label05:
        $r8 := @caughtexception;

        z0 = 0;

     label06:
        virtualinvoke r10.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r7 := @caughtexception;

        goto label14;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke r10.<org.jivesoftware.util.Base64$OutputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r5 := @caughtexception;

     label13:
        throw $r6;

     label14:
        return z0;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static byte[] decodeFromFile(java.lang.String)
    {
        byte[] r22, r24;
        java.io.BufferedInputStream $r28;
        byte $b1;
        java.lang.Exception $r11, $r13, $r20, $r21;
        java.lang.StringBuilder $r7, $r8, $r9, $r17, $r18, $r26, $r30;
        java.lang.Throwable $r12;
        long $l0, $l2, $l5;
        int $i3, $i4, i6, $i7;
        java.lang.String r1, $r10, $r19;
        java.io.PrintStream $r6, $r16;
        java.io.IOException $r14;
        java.io.FileInputStream $r27;
        java.io.File $r25;
        org.jivesoftware.util.Base64$InputStream r23, $r29;

        r1 := @parameter0: java.lang.String;

        r22 = null;

        r23 = null;

     label01:
        $r25 = new java.io.File;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r1);

        i6 = 0;

        $l0 = virtualinvoke $r25.<java.io.File: long length()>();

        $b1 = $l0 cmp 2147483647L;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label06;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is too big for this convenience method (");

        $l5 = virtualinvoke $r25.<java.io.File: long length()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes).");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label02:
        virtualinvoke r23.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

     label05:
        return null;

     label06:
        $l2 = virtualinvoke $r25.<java.io.File: long length()>();

        $i3 = (int) $l2;

        r24 = newarray (byte)[$i3];

        $r29 = new org.jivesoftware.util.Base64$InputStream;

        $r28 = new java.io.BufferedInputStream;

        $r27 = new java.io.FileInputStream;

        specialinvoke $r27.<java.io.FileInputStream: void <init>(java.io.File)>($r25);

        specialinvoke $r28.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r27);

        specialinvoke $r29.<org.jivesoftware.util.Base64$InputStream: void <init>(java.io.InputStream,int)>($r28, 0);

        r23 = $r29;

     label07:
        $i4 = virtualinvoke $r29.<org.jivesoftware.util.Base64$InputStream: int read(byte[],int,int)>(r24, i6, 4096);

        if $i4 < 0 goto label08;

        i6 = i6 + $i4;

        goto label07;

     label08:
        r22 = newarray (byte)[i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 0, r22, 0, i6);

     label09:
        virtualinvoke $r29.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label10:
        goto label21;

     label11:
        $r20 := @caughtexception;

        goto label21;

     label12:
        $r14 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error decoding from file ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label13:
        virtualinvoke r23.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label14:
        goto label21;

     label15:
        $r13 := @caughtexception;

        goto label21;

     label16:
        $r12 := @caughtexception;

     label17:
        virtualinvoke r23.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r11 := @caughtexception;

     label20:
        throw $r12;

     label21:
        return r22;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label06 to label09 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label06 to label09 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static java.lang.String encodeFromFile(java.lang.String)
    {
        java.lang.Throwable $r8;
        byte[] r2;
        java.io.BufferedInputStream $r4;
        long $l0;
        int $i1, $i2, $i3, i4;
        java.lang.String r1, $r6, $r15, r17;
        double $d0, $d1;
        java.io.PrintStream $r12;
        java.io.IOException $r10;
        java.io.FileInputStream $r5;
        java.io.File $r0;
        java.lang.Exception $r7, $r9, $r16;
        org.jivesoftware.util.Base64$InputStream $r3, r18;
        java.lang.StringBuilder $r11, $r13, $r14;

        r1 := @parameter0: java.lang.String;

        r17 = null;

        r18 = null;

     label01:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $d0 = (double) $l0;

        $d1 = $d0 * 1.4;

        $i1 = (int) $d1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 40);

        r2 = newarray (byte)[$i2];

        i4 = 0;

        $r3 = new org.jivesoftware.util.Base64$InputStream;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r3.<org.jivesoftware.util.Base64$InputStream: void <init>(java.io.InputStream,int)>($r4, 1);

        r18 = $r3;

     label02:
        $i3 = virtualinvoke $r3.<org.jivesoftware.util.Base64$InputStream: int read(byte[],int,int)>(r2, i4, 4096);

        if $i3 < 0 goto label03;

        i4 = i4 + $i3;

        goto label02;

     label03:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r2, 0, i4, "UTF-8");

        r17 = $r6;

     label04:
        virtualinvoke $r3.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label05:
        goto label16;

     label06:
        $r16 := @caughtexception;

        goto label16;

     label07:
        $r10 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encoding from file ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label08:
        virtualinvoke r18.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label09:
        goto label16;

     label10:
        $r9 := @caughtexception;

        goto label16;

     label11:
        $r8 := @caughtexception;

     label12:
        virtualinvoke r18.<org.jivesoftware.util.Base64$InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r7 := @caughtexception;

     label15:
        throw $r8;

     label16:
        return r17;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.io.IOException from label01 to label04 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void encodeFileToFile(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        byte[] $r5;
        java.io.FileOutputStream $r3;
        java.io.IOException $r9;
        java.lang.Exception $r6, $r8, $r10;
        java.io.BufferedOutputStream $r2, r11;
        java.lang.String r0, $r1, r4;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: java.lang.String encodeFromFile(java.lang.String)>(r0);

        r11 = null;

     label01:
        $r2 = new java.io.BufferedOutputStream;

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r3);

        r11 = $r2;

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r5);

     label02:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r10 := @caughtexception;

        goto label14;

     label05:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label06:
        virtualinvoke r11.<java.io.OutputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r8 := @caughtexception;

        goto label14;

     label09:
        $r7 := @caughtexception;

     label10:
        virtualinvoke r11.<java.io.OutputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r6 := @caughtexception;

     label13:
        throw $r7;

     label14:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void decodeFileToFile(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r6;
        byte[] $r1;
        java.io.FileOutputStream $r3;
        java.io.IOException $r8;
        java.lang.Exception $r5, $r7, $r9;
        java.io.BufferedOutputStream $r2, r10;
        java.lang.String r0, r4;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.jivesoftware.util.Base64: byte[] decodeFromFile(java.lang.String)>(r0);

        r10 = null;

     label01:
        $r2 = new java.io.BufferedOutputStream;

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r3);

        r10 = $r2;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

     label02:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r9 := @caughtexception;

        goto label14;

     label05:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

     label06:
        virtualinvoke r10.<java.io.OutputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r7 := @caughtexception;

        goto label14;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke r10.<java.io.OutputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r5 := @caughtexception;

     label13:
        throw $r6;

     label14:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    static byte[] access$000(int)
    {
        int i0;
        byte[] $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.jivesoftware.util.Base64: byte[] getAlphabet(int)>(i0);

        return $r0;
    }

    static byte[] access$100(int)
    {
        int i0;
        byte[] $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.jivesoftware.util.Base64: byte[] getDecodabet(int)>(i0);

        return $r0;
    }

    static byte[] access$200(byte[], int, int, byte[], int, int)
    {
        byte[] r0, r1, $r2;
        int i0, i1, i2, i3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r2 = staticinvoke <org.jivesoftware.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r0, i0, i1, r1, i2, i3);

        return $r2;
    }

    static int access$300(byte[], int, byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, i2, $i3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i3 = staticinvoke <org.jivesoftware.util.Base64: int decode4to3(byte[],int,byte[],int,int)>(r0, i0, r1, i1, i2);

        return $i3;
    }

    static byte[] access$400(byte[], byte[], int, int)
    {
        byte[] r0, r1, $r2;
        int i0, i1;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <org.jivesoftware.util.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r0, r1, i0, i1);

        return $r2;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5;

        <org.jivesoftware.util.Base64: byte EQUALS_SIGN_ENC> = -1;

        <org.jivesoftware.util.Base64: byte WHITE_SPACE_ENC> = -5;

        <org.jivesoftware.util.Base64: java.lang.String PREFERRED_ENCODING> = "UTF-8";

        <org.jivesoftware.util.Base64: byte NEW_LINE> = 10;

        <org.jivesoftware.util.Base64: byte EQUALS_SIGN> = 61;

        <org.jivesoftware.util.Base64: int MAX_LINE_LENGTH> = 76;

        <org.jivesoftware.util.Base64: int ORDERED> = 32;

        <org.jivesoftware.util.Base64: int URL_SAFE> = 16;

        <org.jivesoftware.util.Base64: int DONT_BREAK_LINES> = 8;

        <org.jivesoftware.util.Base64: int GZIP> = 2;

        <org.jivesoftware.util.Base64: int DECODE> = 0;

        <org.jivesoftware.util.Base64: int ENCODE> = 1;

        <org.jivesoftware.util.Base64: int NO_OPTIONS> = 0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <org.jivesoftware.util.Base64: byte[] _STANDARD_ALPHABET> = $r0;

        $r1 = newarray (byte)[127];

        $r1[0] = -9;

        $r1[1] = -9;

        $r1[2] = -9;

        $r1[3] = -9;

        $r1[4] = -9;

        $r1[5] = -9;

        $r1[6] = -9;

        $r1[7] = -9;

        $r1[8] = -9;

        $r1[9] = -5;

        $r1[10] = -5;

        $r1[11] = -9;

        $r1[12] = -9;

        $r1[13] = -5;

        $r1[14] = -9;

        $r1[15] = -9;

        $r1[16] = -9;

        $r1[17] = -9;

        $r1[18] = -9;

        $r1[19] = -9;

        $r1[20] = -9;

        $r1[21] = -9;

        $r1[22] = -9;

        $r1[23] = -9;

        $r1[24] = -9;

        $r1[25] = -9;

        $r1[26] = -9;

        $r1[27] = -9;

        $r1[28] = -9;

        $r1[29] = -9;

        $r1[30] = -9;

        $r1[31] = -9;

        $r1[32] = -5;

        $r1[33] = -9;

        $r1[34] = -9;

        $r1[35] = -9;

        $r1[36] = -9;

        $r1[37] = -9;

        $r1[38] = -9;

        $r1[39] = -9;

        $r1[40] = -9;

        $r1[41] = -9;

        $r1[42] = -9;

        $r1[43] = 62;

        $r1[44] = -9;

        $r1[45] = -9;

        $r1[46] = -9;

        $r1[47] = 63;

        $r1[48] = 52;

        $r1[49] = 53;

        $r1[50] = 54;

        $r1[51] = 55;

        $r1[52] = 56;

        $r1[53] = 57;

        $r1[54] = 58;

        $r1[55] = 59;

        $r1[56] = 60;

        $r1[57] = 61;

        $r1[58] = -9;

        $r1[59] = -9;

        $r1[60] = -9;

        $r1[61] = -1;

        $r1[62] = -9;

        $r1[63] = -9;

        $r1[64] = -9;

        $r1[65] = 0;

        $r1[66] = 1;

        $r1[67] = 2;

        $r1[68] = 3;

        $r1[69] = 4;

        $r1[70] = 5;

        $r1[71] = 6;

        $r1[72] = 7;

        $r1[73] = 8;

        $r1[74] = 9;

        $r1[75] = 10;

        $r1[76] = 11;

        $r1[77] = 12;

        $r1[78] = 13;

        $r1[79] = 14;

        $r1[80] = 15;

        $r1[81] = 16;

        $r1[82] = 17;

        $r1[83] = 18;

        $r1[84] = 19;

        $r1[85] = 20;

        $r1[86] = 21;

        $r1[87] = 22;

        $r1[88] = 23;

        $r1[89] = 24;

        $r1[90] = 25;

        $r1[91] = -9;

        $r1[92] = -9;

        $r1[93] = -9;

        $r1[94] = -9;

        $r1[95] = -9;

        $r1[96] = -9;

        $r1[97] = 26;

        $r1[98] = 27;

        $r1[99] = 28;

        $r1[100] = 29;

        $r1[101] = 30;

        $r1[102] = 31;

        $r1[103] = 32;

        $r1[104] = 33;

        $r1[105] = 34;

        $r1[106] = 35;

        $r1[107] = 36;

        $r1[108] = 37;

        $r1[109] = 38;

        $r1[110] = 39;

        $r1[111] = 40;

        $r1[112] = 41;

        $r1[113] = 42;

        $r1[114] = 43;

        $r1[115] = 44;

        $r1[116] = 45;

        $r1[117] = 46;

        $r1[118] = 47;

        $r1[119] = 48;

        $r1[120] = 49;

        $r1[121] = 50;

        $r1[122] = 51;

        $r1[123] = -9;

        $r1[124] = -9;

        $r1[125] = -9;

        $r1[126] = -9;

        <org.jivesoftware.util.Base64: byte[] _STANDARD_DECODABET> = $r1;

        $r2 = newarray (byte)[64];

        $r2[0] = 65;

        $r2[1] = 66;

        $r2[2] = 67;

        $r2[3] = 68;

        $r2[4] = 69;

        $r2[5] = 70;

        $r2[6] = 71;

        $r2[7] = 72;

        $r2[8] = 73;

        $r2[9] = 74;

        $r2[10] = 75;

        $r2[11] = 76;

        $r2[12] = 77;

        $r2[13] = 78;

        $r2[14] = 79;

        $r2[15] = 80;

        $r2[16] = 81;

        $r2[17] = 82;

        $r2[18] = 83;

        $r2[19] = 84;

        $r2[20] = 85;

        $r2[21] = 86;

        $r2[22] = 87;

        $r2[23] = 88;

        $r2[24] = 89;

        $r2[25] = 90;

        $r2[26] = 97;

        $r2[27] = 98;

        $r2[28] = 99;

        $r2[29] = 100;

        $r2[30] = 101;

        $r2[31] = 102;

        $r2[32] = 103;

        $r2[33] = 104;

        $r2[34] = 105;

        $r2[35] = 106;

        $r2[36] = 107;

        $r2[37] = 108;

        $r2[38] = 109;

        $r2[39] = 110;

        $r2[40] = 111;

        $r2[41] = 112;

        $r2[42] = 113;

        $r2[43] = 114;

        $r2[44] = 115;

        $r2[45] = 116;

        $r2[46] = 117;

        $r2[47] = 118;

        $r2[48] = 119;

        $r2[49] = 120;

        $r2[50] = 121;

        $r2[51] = 122;

        $r2[52] = 48;

        $r2[53] = 49;

        $r2[54] = 50;

        $r2[55] = 51;

        $r2[56] = 52;

        $r2[57] = 53;

        $r2[58] = 54;

        $r2[59] = 55;

        $r2[60] = 56;

        $r2[61] = 57;

        $r2[62] = 45;

        $r2[63] = 95;

        <org.jivesoftware.util.Base64: byte[] _URL_SAFE_ALPHABET> = $r2;

        $r3 = newarray (byte)[127];

        $r3[0] = -9;

        $r3[1] = -9;

        $r3[2] = -9;

        $r3[3] = -9;

        $r3[4] = -9;

        $r3[5] = -9;

        $r3[6] = -9;

        $r3[7] = -9;

        $r3[8] = -9;

        $r3[9] = -5;

        $r3[10] = -5;

        $r3[11] = -9;

        $r3[12] = -9;

        $r3[13] = -5;

        $r3[14] = -9;

        $r3[15] = -9;

        $r3[16] = -9;

        $r3[17] = -9;

        $r3[18] = -9;

        $r3[19] = -9;

        $r3[20] = -9;

        $r3[21] = -9;

        $r3[22] = -9;

        $r3[23] = -9;

        $r3[24] = -9;

        $r3[25] = -9;

        $r3[26] = -9;

        $r3[27] = -9;

        $r3[28] = -9;

        $r3[29] = -9;

        $r3[30] = -9;

        $r3[31] = -9;

        $r3[32] = -5;

        $r3[33] = -9;

        $r3[34] = -9;

        $r3[35] = -9;

        $r3[36] = -9;

        $r3[37] = -9;

        $r3[38] = -9;

        $r3[39] = -9;

        $r3[40] = -9;

        $r3[41] = -9;

        $r3[42] = -9;

        $r3[43] = -9;

        $r3[44] = -9;

        $r3[45] = 62;

        $r3[46] = -9;

        $r3[47] = -9;

        $r3[48] = 52;

        $r3[49] = 53;

        $r3[50] = 54;

        $r3[51] = 55;

        $r3[52] = 56;

        $r3[53] = 57;

        $r3[54] = 58;

        $r3[55] = 59;

        $r3[56] = 60;

        $r3[57] = 61;

        $r3[58] = -9;

        $r3[59] = -9;

        $r3[60] = -9;

        $r3[61] = -1;

        $r3[62] = -9;

        $r3[63] = -9;

        $r3[64] = -9;

        $r3[65] = 0;

        $r3[66] = 1;

        $r3[67] = 2;

        $r3[68] = 3;

        $r3[69] = 4;

        $r3[70] = 5;

        $r3[71] = 6;

        $r3[72] = 7;

        $r3[73] = 8;

        $r3[74] = 9;

        $r3[75] = 10;

        $r3[76] = 11;

        $r3[77] = 12;

        $r3[78] = 13;

        $r3[79] = 14;

        $r3[80] = 15;

        $r3[81] = 16;

        $r3[82] = 17;

        $r3[83] = 18;

        $r3[84] = 19;

        $r3[85] = 20;

        $r3[86] = 21;

        $r3[87] = 22;

        $r3[88] = 23;

        $r3[89] = 24;

        $r3[90] = 25;

        $r3[91] = -9;

        $r3[92] = -9;

        $r3[93] = -9;

        $r3[94] = -9;

        $r3[95] = 63;

        $r3[96] = -9;

        $r3[97] = 26;

        $r3[98] = 27;

        $r3[99] = 28;

        $r3[100] = 29;

        $r3[101] = 30;

        $r3[102] = 31;

        $r3[103] = 32;

        $r3[104] = 33;

        $r3[105] = 34;

        $r3[106] = 35;

        $r3[107] = 36;

        $r3[108] = 37;

        $r3[109] = 38;

        $r3[110] = 39;

        $r3[111] = 40;

        $r3[112] = 41;

        $r3[113] = 42;

        $r3[114] = 43;

        $r3[115] = 44;

        $r3[116] = 45;

        $r3[117] = 46;

        $r3[118] = 47;

        $r3[119] = 48;

        $r3[120] = 49;

        $r3[121] = 50;

        $r3[122] = 51;

        $r3[123] = -9;

        $r3[124] = -9;

        $r3[125] = -9;

        $r3[126] = -9;

        <org.jivesoftware.util.Base64: byte[] _URL_SAFE_DECODABET> = $r3;

        $r4 = newarray (byte)[64];

        $r4[0] = 45;

        $r4[1] = 48;

        $r4[2] = 49;

        $r4[3] = 50;

        $r4[4] = 51;

        $r4[5] = 52;

        $r4[6] = 53;

        $r4[7] = 54;

        $r4[8] = 55;

        $r4[9] = 56;

        $r4[10] = 57;

        $r4[11] = 65;

        $r4[12] = 66;

        $r4[13] = 67;

        $r4[14] = 68;

        $r4[15] = 69;

        $r4[16] = 70;

        $r4[17] = 71;

        $r4[18] = 72;

        $r4[19] = 73;

        $r4[20] = 74;

        $r4[21] = 75;

        $r4[22] = 76;

        $r4[23] = 77;

        $r4[24] = 78;

        $r4[25] = 79;

        $r4[26] = 80;

        $r4[27] = 81;

        $r4[28] = 82;

        $r4[29] = 83;

        $r4[30] = 84;

        $r4[31] = 85;

        $r4[32] = 86;

        $r4[33] = 87;

        $r4[34] = 88;

        $r4[35] = 89;

        $r4[36] = 90;

        $r4[37] = 95;

        $r4[38] = 97;

        $r4[39] = 98;

        $r4[40] = 99;

        $r4[41] = 100;

        $r4[42] = 101;

        $r4[43] = 102;

        $r4[44] = 103;

        $r4[45] = 104;

        $r4[46] = 105;

        $r4[47] = 106;

        $r4[48] = 107;

        $r4[49] = 108;

        $r4[50] = 109;

        $r4[51] = 110;

        $r4[52] = 111;

        $r4[53] = 112;

        $r4[54] = 113;

        $r4[55] = 114;

        $r4[56] = 115;

        $r4[57] = 116;

        $r4[58] = 117;

        $r4[59] = 118;

        $r4[60] = 119;

        $r4[61] = 120;

        $r4[62] = 121;

        $r4[63] = 122;

        <org.jivesoftware.util.Base64: byte[] _ORDERED_ALPHABET> = $r4;

        $r5 = newarray (byte)[127];

        $r5[0] = -9;

        $r5[1] = -9;

        $r5[2] = -9;

        $r5[3] = -9;

        $r5[4] = -9;

        $r5[5] = -9;

        $r5[6] = -9;

        $r5[7] = -9;

        $r5[8] = -9;

        $r5[9] = -5;

        $r5[10] = -5;

        $r5[11] = -9;

        $r5[12] = -9;

        $r5[13] = -5;

        $r5[14] = -9;

        $r5[15] = -9;

        $r5[16] = -9;

        $r5[17] = -9;

        $r5[18] = -9;

        $r5[19] = -9;

        $r5[20] = -9;

        $r5[21] = -9;

        $r5[22] = -9;

        $r5[23] = -9;

        $r5[24] = -9;

        $r5[25] = -9;

        $r5[26] = -9;

        $r5[27] = -9;

        $r5[28] = -9;

        $r5[29] = -9;

        $r5[30] = -9;

        $r5[31] = -9;

        $r5[32] = -5;

        $r5[33] = -9;

        $r5[34] = -9;

        $r5[35] = -9;

        $r5[36] = -9;

        $r5[37] = -9;

        $r5[38] = -9;

        $r5[39] = -9;

        $r5[40] = -9;

        $r5[41] = -9;

        $r5[42] = -9;

        $r5[43] = -9;

        $r5[44] = -9;

        $r5[45] = 0;

        $r5[46] = -9;

        $r5[47] = -9;

        $r5[48] = 1;

        $r5[49] = 2;

        $r5[50] = 3;

        $r5[51] = 4;

        $r5[52] = 5;

        $r5[53] = 6;

        $r5[54] = 7;

        $r5[55] = 8;

        $r5[56] = 9;

        $r5[57] = 10;

        $r5[58] = -9;

        $r5[59] = -9;

        $r5[60] = -9;

        $r5[61] = -1;

        $r5[62] = -9;

        $r5[63] = -9;

        $r5[64] = -9;

        $r5[65] = 11;

        $r5[66] = 12;

        $r5[67] = 13;

        $r5[68] = 14;

        $r5[69] = 15;

        $r5[70] = 16;

        $r5[71] = 17;

        $r5[72] = 18;

        $r5[73] = 19;

        $r5[74] = 20;

        $r5[75] = 21;

        $r5[76] = 22;

        $r5[77] = 23;

        $r5[78] = 24;

        $r5[79] = 25;

        $r5[80] = 26;

        $r5[81] = 27;

        $r5[82] = 28;

        $r5[83] = 29;

        $r5[84] = 30;

        $r5[85] = 31;

        $r5[86] = 32;

        $r5[87] = 33;

        $r5[88] = 34;

        $r5[89] = 35;

        $r5[90] = 36;

        $r5[91] = -9;

        $r5[92] = -9;

        $r5[93] = -9;

        $r5[94] = -9;

        $r5[95] = 37;

        $r5[96] = -9;

        $r5[97] = 38;

        $r5[98] = 39;

        $r5[99] = 40;

        $r5[100] = 41;

        $r5[101] = 42;

        $r5[102] = 43;

        $r5[103] = 44;

        $r5[104] = 45;

        $r5[105] = 46;

        $r5[106] = 47;

        $r5[107] = 48;

        $r5[108] = 49;

        $r5[109] = 50;

        $r5[110] = 51;

        $r5[111] = 52;

        $r5[112] = 53;

        $r5[113] = 54;

        $r5[114] = 55;

        $r5[115] = 56;

        $r5[116] = 57;

        $r5[117] = 58;

        $r5[118] = 59;

        $r5[119] = 60;

        $r5[120] = 61;

        $r5[121] = 62;

        $r5[122] = 63;

        $r5[123] = -9;

        $r5[124] = -9;

        $r5[125] = -9;

        $r5[126] = -9;

        <org.jivesoftware.util.Base64: byte[] _ORDERED_DECODABET> = $r5;

        return;
    }
}
