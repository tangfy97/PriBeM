public final class org.apache.poi.hslf.dev.SlideShowRecordDumper extends java.lang.Object
{
    private boolean optVerbose;
    private boolean optEscher;
    private org.apache.poi.hslf.HSLFSlideShow doc;

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        int $i0, $i1, $i2, i3;
        org.apache.poi.hslf.dev.SlideShowRecordDumper $r1;
        java.lang.String $r2, $r3, $r4, $r5, r6;
        boolean $z0, $z1, $z2, z3, z4;

        r0 := @parameter0: java.lang.String[];

        z3 = 0;

        z4 = 0;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label6;

        $r2 = r0[i3];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 != 0 goto label2;

        goto label6;

     label2:
        $r4 = r0[i3];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("-escher");

        if $z1 == 0 goto label3;

        z4 = 1;

        goto label5;

     label3:
        $r5 = r0[i3];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("-verbose");

        if $z2 == 0 goto label4;

        z3 = 1;

        goto label5;

     label4:
        staticinvoke <org.apache.poi.hslf.dev.SlideShowRecordDumper: void printUsage()>();

        return;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label7;

        staticinvoke <org.apache.poi.hslf.dev.SlideShowRecordDumper: void printUsage()>();

        return;

     label7:
        r6 = r0[i3];

        $r1 = new org.apache.poi.hslf.dev.SlideShowRecordDumper;

        specialinvoke $r1.<org.apache.poi.hslf.dev.SlideShowRecordDumper: void <init>(java.lang.String,boolean,boolean)>(r6, z3, z4);

        virtualinvoke $r1.<org.apache.poi.hslf.dev.SlideShowRecordDumper: void printDump()>();

        return;
    }

    public static void printUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: SlideShowRecordDumper [-escher] [-verbose] <filename>");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Valid Options:");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("-escher\t\t: dump contents of escher records");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("-verbose\t: dump binary contents of each record");

        return;
    }

    public void <init>(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r0;
        java.lang.String r2;
        boolean z0, z1;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hslf.dev.SlideShowRecordDumper: boolean optVerbose> = z0;

        r0.<org.apache.poi.hslf.dev.SlideShowRecordDumper: boolean optEscher> = z1;

        $r1 = new org.apache.poi.hslf.HSLFSlideShow;

        specialinvoke $r1.<org.apache.poi.hslf.HSLFSlideShow: void <init>(java.lang.String)>(r2);

        r0.<org.apache.poi.hslf.dev.SlideShowRecordDumper: org.apache.poi.hslf.HSLFSlideShow doc> = $r1;

        return;
    }

    public void printDump() throws java.io.IOException
    {
        org.apache.poi.hslf.HSLFSlideShow $r1;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r0;
        org.apache.poi.hslf.record.Record[] $r2;

        r0 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        $r1 = r0.<org.apache.poi.hslf.dev.SlideShowRecordDumper: org.apache.poi.hslf.HSLFSlideShow doc>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.HSLFSlideShow: org.apache.poi.hslf.record.Record[] getRecords()>();

        virtualinvoke r0.<org.apache.poi.hslf.dev.SlideShowRecordDumper: void walkTree(int,int,org.apache.poi.hslf.record.Record[])>(0, 0, $r2);

        return;
    }

    public java.lang.String makeHex(int, int)
    {
        int i0, $i1, i2;
        java.lang.StringBuilder $r1, $r2, $r3;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r4;
        java.lang.String $r0, r5;

        r4 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        r5 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

     label1:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 >= i2 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r5;
    }

    public java.lang.String reverseHex(java.lang.String)
    {
        java.lang.StringBuffer $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6, i8, $i10;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r6;
        java.lang.String $r2, r7;
        char $c5, $c7;
        char[] $r1;
        java.lang.StringBuilder $r4, $r5, $r9;

        r6 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r7 := @parameter0: java.lang.String;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $i2 = $i1 * 2;

        $i3 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i2 == $i3 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = virtualinvoke r7.<java.lang.String: char[] toCharArray()>();

        i8 = lengthof $r1;

     label2:
        if i8 <= 0 goto label4;

        $i4 = i8 - 2;

        $c5 = $r1[$i4];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $i6 = i8 - 1;

        $c7 = $r1[$i6];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        if i8 == 2 goto label3;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        $i10 = (int) -2;

        i8 = i8 + $i10;

        goto label2;

     label4:
        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public int getDiskLen(org.apache.poi.hslf.record.Record) throws java.io.IOException
    {
        org.apache.poi.hslf.record.Record r0;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1;
        int $i0;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r3;

        r3 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r0 := @parameter0: org.apache.poi.hslf.record.Record;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r0.<org.apache.poi.hslf.record.Record: void writeOut(java.io.OutputStream)>($r1);

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i0 = lengthof $r2;

        return $i0;
    }

    public java.lang.String getPrintableRecordContents(org.apache.poi.hslf.record.Record) throws java.io.IOException
    {
        org.apache.poi.hslf.record.Record r0;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r4;
        java.lang.String $r3;

        r4 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r0 := @parameter0: org.apache.poi.hslf.record.Record;

        if r0 != null goto label1;

        return "<<null>>";

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r0.<org.apache.poi.hslf.record.Record: void writeOut(java.io.OutputStream)>($r1);

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r3 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String dump(byte[],long,int)>($r2, 0L, 0);

        return $r3;
    }

    public java.lang.String printEscherRecord(org.apache.poi.ddf.EscherRecord)
    {
        org.apache.poi.hslf.record.EscherTextboxWrapper $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.poi.ddf.EscherTextboxRecord $r9;
        org.apache.poi.ddf.EscherContainerRecord $r30;
        org.apache.poi.hslf.record.Record[] $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r12, $r15, $r16, $r32, $r35, $r36;
        org.apache.poi.hslf.record.Record $r11, $r13, $r18, $r19, $r20, $r23, $r24, $r28, $r33;
        org.apache.poi.hslf.record.TextCharsAtom $r25;
        org.apache.poi.ddf.EscherRecord r2;
        org.apache.poi.hslf.record.TextBytesAtom $r21;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r29;
        java.lang.String $r0, $r3, $r7, $r14, $r17, $r22, $r26, $r31, $r34, $r37, $r38;
        org.apache.poi.hslf.record.StyleTextPropAtom $r27;

        r29 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r2 := @parameter0: org.apache.poi.ddf.EscherRecord;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $z0 = r2 instanceof org.apache.poi.ddf.EscherContainerRecord;

        if $z0 == 0 goto label01;

        $r30 = (org.apache.poi.ddf.EscherContainerRecord) r2;

        $r31 = virtualinvoke r29.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String printEscherContainerRecord(org.apache.poi.ddf.EscherContainerRecord)>($r30);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        goto label12;

     label01:
        $z1 = r2 instanceof org.apache.poi.ddf.EscherTextboxRecord;

        if $z1 == 0 goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EscherTextboxRecord:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = new org.apache.poi.hslf.record.EscherTextboxWrapper;

        $r9 = (org.apache.poi.ddf.EscherTextboxRecord) r2;

        specialinvoke $r8.<org.apache.poi.hslf.record.EscherTextboxWrapper: void <init>(org.apache.poi.ddf.EscherTextboxRecord)>($r9);

        $r10 = virtualinvoke $r8.<org.apache.poi.hslf.record.EscherTextboxWrapper: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        i6 = 0;

     label02:
        $i0 = lengthof $r10;

        if i6 >= $i0 goto label10;

        $r11 = $r10[i6];

        $z2 = $r11 instanceof org.apache.poi.hslf.record.StyleTextPropAtom;

        if $z2 == 0 goto label08;

        if i6 <= 0 goto label06;

        $i1 = i6 - 1;

        $r18 = $r10[$i1];

        $z3 = $r18 instanceof org.apache.poi.hslf.record.TextCharsAtom;

        if $z3 != 0 goto label03;

        $i5 = i6 - 1;

        $r28 = $r10[$i5];

        $z5 = $r28 instanceof org.apache.poi.hslf.record.TextBytesAtom;

        if $z5 == 0 goto label06;

     label03:
        $i2 = i6 - 1;

        $r19 = $r10[$i2];

        $z4 = $r19 instanceof org.apache.poi.hslf.record.TextCharsAtom;

        if $z4 == 0 goto label04;

        $i4 = i6 - 1;

        $r24 = $r10[$i4];

        $r25 = (org.apache.poi.hslf.record.TextCharsAtom) $r24;

        $r26 = virtualinvoke $r25.<org.apache.poi.hslf.record.TextCharsAtom: java.lang.String getText()>();

        $i7 = virtualinvoke $r26.<java.lang.String: int length()>();

        goto label05;

     label04:
        $i3 = i6 - 1;

        $r20 = $r10[$i3];

        $r21 = (org.apache.poi.hslf.record.TextBytesAtom) $r20;

        $r22 = virtualinvoke $r21.<org.apache.poi.hslf.record.TextBytesAtom: java.lang.String getText()>();

        $i7 = virtualinvoke $r22.<java.lang.String: int length()>();

     label05:
        $r23 = $r10[i6];

        $r27 = (org.apache.poi.hslf.record.StyleTextPropAtom) $r23;

        virtualinvoke $r27.<org.apache.poi.hslf.record.StyleTextPropAtom: void setParentTextSize(int)>($i7);

        goto label07;

     label06:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error! Couldn\'t find preceding TextAtom for style\n");

     label07:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = $r10[i6];

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        goto label09;

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = $r10[i6];

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label09:
        i6 = i6 + 1;

        goto label02;

     label10:
        goto label12;

     label11:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label12:
        $r38 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r38;
    }

    public java.lang.String printEscherContainerRecord(org.apache.poi.ddf.EscherContainerRecord)
    {
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherContainerRecord r2;
        java.util.List $r30;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r49;
        org.apache.poi.ddf.EscherRecord $r51;
        short $s0, $s1;
        java.lang.StringBuffer $r1;
        int $i2, i3;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r45;
        java.lang.String $r0, $r7, $r10, $r20, $r25, $r34, $r36, $r44, $r46, $r50;
        java.util.Iterator $r3;
        java.lang.Class $r6;
        java.lang.Object $r37;

        r45 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        r2 := @parameter0: org.apache.poi.ddf.EscherContainerRecord;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

        $r3 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.Iterator getChildIterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if i3 >= 1 goto label2;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  children: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

     label2:
        $r37 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r51 = (org.apache.poi.ddf.EscherRecord) $r37;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke r45.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String printEscherRecord(org.apache.poi.ddf.EscherRecord)>($r51);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r10 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String getRecordName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  isContainer: ");

        $z1 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: boolean isContainerRecord()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  options: 0x");

        $s0 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: short getOptions()>();

        $r20 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  recordId: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $r25 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  numchildren: ");

        $r30 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.List getChildRecords()>();

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r34 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r36;
    }

    public void walkTree(int, int, org.apache.poi.hslf.record.Record[]) throws java.io.IOException
    {
        byte[] $r55;
        org.apache.poi.hslf.record.Record[] r0, $r45, $r46, $r80;
        org.apache.poi.ddf.DefaultEscherRecordFactory $r53;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r48, $r50, $r51, $r59, $r61, $r62, $r63, $r64, $r66, $r67, $r69, $r71, $r72, $r74, $r75, $r76;
        java.io.ByteArrayOutputStream $r54;
        long $l3, $l5;
        java.lang.String $r3, $r4, $r6, $r13, $r16, $r22, $r33, $r40, $r44, $r47, $r52, $r58, $r65, $r68, $r73, r77, r78;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.hslf.record.Record r1;
        org.apache.poi.ddf.EscherRecord $r56;
        int i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, i10, i11, i12;
        org.apache.poi.hslf.dev.SlideShowRecordDumper r2;
        java.io.PrintStream $r8, $r18, $r24, $r35, $r49, $r57, $r60, $r70, $r79;
        java.lang.Class $r5;

        r2 := @this: org.apache.poi.hslf.dev.SlideShowRecordDumper;

        i0 := @parameter0: int;

        i10 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.hslf.record.Record[];

        r77 = "";

        i11 = 0;

     label01:
        if i11 >= i0 goto label02;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        i11 = i11 + 1;

        goto label01;

     label02:
        i12 = 0;

     label03:
        $i1 = lengthof r0;

        if i12 >= $i1 goto label11;

        r1 = r0[i12];

        if r1 != null goto label04;

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At position ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r65 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String makeHex(int,int)>(i10, 6);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r68);

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning! Null record found.");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r73);

        goto label10;

     label04:
        $i2 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: int getDiskLen(org.apache.poi.hslf.record.Record)>(r1);

        $l3 = virtualinvoke r1.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $i4 = (int) $l3;

        $r3 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String makeHex(int,int)>($i4, 4);

        $r4 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String reverseHex(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();

        r78 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("class ");

        if $z0 == 0 goto label05;

        r78 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(6);

     label05:
        $z1 = virtualinvoke r78.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.poi.hslf.record.");

        if $z1 == 0 goto label06;

        r78 = virtualinvoke r78.<java.lang.String: java.lang.String substring(int)>(27);

     label06:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At position ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String makeHex(int,int)>(i10, 6);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Record is of type ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Type is ");

        $l5 = virtualinvoke r1.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Len is ");

        $i6 = $i2 - 8;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i7 = $i2 - 8;

        $r40 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String makeHex(int,int)>($i7, 8);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), on disk len is ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r44);

        $z2 = r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: boolean optEscher>;

        if $z2 == 0 goto label07;

        $z4 = virtualinvoke r78.<java.lang.String: boolean equals(java.lang.Object)>("PPDrawing");

        if $z4 == 0 goto label07;

        $r53 = new org.apache.poi.ddf.DefaultEscherRecordFactory;

        specialinvoke $r53.<org.apache.poi.ddf.DefaultEscherRecordFactory: void <init>()>();

        $r54 = new java.io.ByteArrayOutputStream;

        specialinvoke $r54.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<org.apache.poi.hslf.record.Record: void writeOut(java.io.OutputStream)>($r54);

        $r55 = virtualinvoke $r54.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r56 = virtualinvoke $r53.<org.apache.poi.ddf.DefaultEscherRecordFactory: org.apache.poi.ddf.EscherRecord createRecord(byte[],int)>($r55, 0);

        virtualinvoke $r56.<org.apache.poi.ddf.EscherRecord: int fillFields(byte[],int,org.apache.poi.ddf.EscherRecordFactory)>($r55, 0, $r53);

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r58 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String printEscherRecord(org.apache.poi.ddf.EscherRecord)>($r56);

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r58);

        goto label08;

     label07:
        $z3 = r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: boolean optVerbose>;

        if $z3 == 0 goto label08;

        $r46 = virtualinvoke r1.<org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        if $r46 != null goto label08;

        $r47 = virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: java.lang.String getPrintableRecordContents(org.apache.poi.hslf.record.Record)>(r1);

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label08:
        $r79 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r79.<java.io.PrintStream: void println()>();

        $r80 = virtualinvoke r1.<org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        if $r80 == null goto label09;

        $i8 = i0 + 3;

        $i9 = i10 + 8;

        $r45 = virtualinvoke r1.<org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        virtualinvoke r2.<org.apache.poi.hslf.dev.SlideShowRecordDumper: void walkTree(int,int,org.apache.poi.hslf.record.Record[])>($i8, $i9, $r45);

     label09:
        i10 = i10 + $i2;

     label10:
        i12 = i12 + 1;

        goto label03;

     label11:
        return;
    }
}
