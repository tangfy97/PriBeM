public class org.springframework.core.serializer.DefaultSerializer extends java.lang.Object implements org.springframework.core.serializer.Serializer
{

    public void <init>()
    {
        org.springframework.core.serializer.DefaultSerializer r0;

        r0 := @this: org.springframework.core.serializer.DefaultSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void serialize(java.lang.Object, java.io.OutputStream) throws java.io.IOException
    {
        org.springframework.core.serializer.DefaultSerializer r5;
        java.io.ObjectOutputStream $r1;
        java.lang.String $r7, $r8, $r12, $r15;
        boolean $z0;
        java.io.OutputStream r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object r0;
        java.lang.StringBuilder $r4, $r9, $r10, $r13, $r14;
        java.lang.Class $r6, $r11;

        r5 := @this: org.springframework.core.serializer.DefaultSerializer;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof java.io.Serializable;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires a Serializable payload ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but received an object of type [");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r3;

     label1:
        $r1 = new java.io.ObjectOutputStream;

        specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void flush()>();

        return;
    }
}
