public class org.apache.commons.collections.buffer.SynchronizedBuffer extends org.apache.commons.collections.collection.SynchronizedCollection implements org.apache.commons.collections.Buffer
{
    private static final long serialVersionUID;

    public static org.apache.commons.collections.Buffer decorate(org.apache.commons.collections.Buffer)
    {
        org.apache.commons.collections.Buffer r1;
        org.apache.commons.collections.buffer.SynchronizedBuffer $r0;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        $r0 = new org.apache.commons.collections.buffer.SynchronizedBuffer;

        specialinvoke $r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: void <init>(org.apache.commons.collections.Buffer)>(r1);

        return $r0;
    }

    protected void <init>(org.apache.commons.collections.Buffer)
    {
        org.apache.commons.collections.Buffer r1;
        org.apache.commons.collections.buffer.SynchronizedBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.SynchronizedBuffer;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        specialinvoke r0.<org.apache.commons.collections.collection.SynchronizedCollection: void <init>(java.util.Collection)>(r1);

        return;
    }

    protected void <init>(org.apache.commons.collections.Buffer, java.lang.Object)
    {
        org.apache.commons.collections.Buffer r1;
        java.lang.Object r2;
        org.apache.commons.collections.buffer.SynchronizedBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.SynchronizedBuffer;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.collection.SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>(r1, r2);

        return;
    }

    protected org.apache.commons.collections.Buffer getBuffer()
    {
        org.apache.commons.collections.Buffer $r2;
        org.apache.commons.collections.buffer.SynchronizedBuffer r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections.buffer.SynchronizedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: java.util.Collection collection>;

        $r2 = (org.apache.commons.collections.Buffer) $r1;

        return $r2;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.buffer.SynchronizedBuffer r0;
        org.apache.commons.collections.Buffer $r2;
        java.lang.Object $r1, $r3;

        r0 := @this: org.apache.commons.collections.buffer.SynchronizedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections.Buffer: java.lang.Object get()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object remove()
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.buffer.SynchronizedBuffer r0;
        org.apache.commons.collections.Buffer $r2;
        java.lang.Object $r1, $r3;

        r0 := @this: org.apache.commons.collections.buffer.SynchronizedBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections.Buffer: java.lang.Object remove()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.buffer.SynchronizedBuffer: long serialVersionUID> = -6859936183953626253L;

        return;
    }
}
