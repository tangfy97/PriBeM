final class org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton extends org.waveprotocol.wave.model.wave.undo.DocOpList
{
    final org.waveprotocol.wave.model.document.operation.DocOp docOp;

    void <init>(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton r0;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.undo.DocOpList: void <init>()>();

        r0.<org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton: org.waveprotocol.wave.model.document.operation.DocOp docOp> = r1;

        return;
    }

    void collectInto(org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector)
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector r0;
        org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton r1;

        r1 := @this: org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector;

        $r2 = r1.<org.waveprotocol.wave.model.wave.undo.DocOpList$Singleton: org.waveprotocol.wave.model.document.operation.DocOp docOp>;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.DocOpCollector: void add(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
