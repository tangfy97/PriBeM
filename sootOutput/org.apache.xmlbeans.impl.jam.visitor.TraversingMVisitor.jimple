public class org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor extends org.apache.xmlbeans.impl.jam.visitor.MVisitor
{
    private org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate;

    public void <init>(org.apache.xmlbeans.impl.jam.visitor.MVisitor)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.MVisitor;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null jv");

        throw $r2;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate> = r1;

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MPackage)
    {
        org.apache.xmlbeans.impl.jam.mutable.MPackage r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r4;
        org.apache.xmlbeans.impl.jam.mutable.MClass[] $r3;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MPackage;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MPackage: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MPackage: org.apache.xmlbeans.impl.jam.mutable.MClass[] getMutableClasses()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = $r3[i1];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MClass)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MClass)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MMethod[] $r5;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor $r7;
        org.apache.xmlbeans.impl.jam.mutable.MField $r8;
        org.apache.xmlbeans.impl.jam.mutable.MMethod $r6;
        int $i0, $i1, $i2, i3, i4, i5;
        org.apache.xmlbeans.impl.jam.mutable.MField[] $r3;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor[] $r4;
        org.apache.xmlbeans.impl.jam.mutable.MClass r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MClass: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MField[] getMutableFields()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r3;

        if i3 >= $i0 goto label2;

        $r8 = $r3[i3];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MField)>($r8);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MConstructor[] getMutableConstructors()>();

        i4 = 0;

     label3:
        $i1 = lengthof $r4;

        if i4 >= $i1 goto label4;

        $r7 = $r4[i4];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MConstructor)>($r7);

        i4 = i4 + 1;

        goto label3;

     label4:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MMethod[] getMutableMethods()>();

        i5 = 0;

     label5:
        $i2 = lengthof $r5;

        if i5 >= $i2 goto label6;

        $r6 = $r5[i5];

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MMethod)>($r6);

        i5 = i5 + 1;

        goto label5;

     label6:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MField)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MField r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MField;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MField: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MConstructor)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MConstructor;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MConstructor: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitParameters(org.apache.xmlbeans.impl.jam.mutable.MInvokable)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MMethod)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MMethod r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MMethod;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MMethod: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitParameters(org.apache.xmlbeans.impl.jam.mutable.MInvokable)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MParameter)
    {
        org.apache.xmlbeans.impl.jam.mutable.MParameter r0;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MParameter;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MParameter: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)>(r0);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MAnnotation)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MComment)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r1;
        org.apache.xmlbeans.impl.jam.mutable.MComment r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MComment;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor mDelegate>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MComment: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r2);

        return;
    }

    private void visitParameters(org.apache.xmlbeans.impl.jam.mutable.MInvokable)
    {
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r2;
        org.apache.xmlbeans.impl.jam.mutable.MParameter $r3;
        org.apache.xmlbeans.impl.jam.mutable.MInvokable r0;
        org.apache.xmlbeans.impl.jam.mutable.MParameter[] $r1;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MInvokable;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MInvokable: org.apache.xmlbeans.impl.jam.mutable.MParameter[] getMutableParameters()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MParameter)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void visitAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] $r1;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r3;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r2;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement r0;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] getMutableAnnotations()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MAnnotation)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void visitComment(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement)
    {
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor r2;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement r0;
        org.apache.xmlbeans.impl.jam.mutable.MComment $r1;

        r2 := @this: org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement: org.apache.xmlbeans.impl.jam.mutable.MComment getMutableComment()>();

        if $r1 == null goto label1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MComment)>($r1);

     label1:
        return;
    }
}
