public class org.codehaus.groovy.bsf.GroovyEngine extends org.apache.bsf.util.BSFEngineImpl
{
    protected groovy.lang.GroovyShell shell;

    public void <init>()
    {
        org.codehaus.groovy.bsf.GroovyEngine r0;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        specialinvoke r0.<org.apache.bsf.util.BSFEngineImpl: void <init>()>();

        return;
    }

    private java.lang.String convertToValidJavaClassname(java.lang.String)
    {
        org.codehaus.groovy.bsf.GroovyEngine r3;
        char $c2, c4;
        java.lang.StringBuffer $r4;
        int $i0, $i1, i3, $i5;
        java.lang.String r0, $r2;
        boolean $z0, $z1, $z2, z3, $z4;

        r3 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return "_";

     label2:
        $r4 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        z3 = 1;

        i3 = 0;

     label3:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label8;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        c4 = $c2;

        if z3 == 0 goto label4;

        $z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c2);

        if $z2 != 0 goto label4;

        c4 = 95;

        goto label5;

     label4:
        if z3 != 0 goto label5;

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z1 != 0 goto label5;

        $i5 = (int) $c2;

        if $i5 == 46 goto label5;

        c4 = 95;

     label5:
        if c4 != 46 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        z3 = $z4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

        i3 = i3 + 1;

        goto label3;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.Object apply(java.lang.String, int, int, java.lang.Object, java.util.Vector, java.util.Vector) throws org.apache.bsf.BSFException
    {
        org.codehaus.groovy.bsf.GroovyEngine r0;
        java.lang.Object[] $r6;
        groovy.lang.Closure r4;
        java.util.Vector r5, r8;
        int i0, i1;
        java.lang.Object r2, $r3, $r7;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        r8 := @parameter4: java.util.Vector;

        r5 := @parameter5: java.util.Vector;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: java.lang.Object eval(java.lang.String,int,int,java.lang.Object)>(r1, i0, i1, r2);

        $z0 = $r3 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label1;

        r4 = (groovy.lang.Closure) $r3;

        $r6 = virtualinvoke r5.<java.util.Vector: java.lang.Object[] toArray()>();

        $r7 = virtualinvoke r4.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r6);

        return $r7;

     label1:
        return $r3;
    }

    public java.lang.Object call(java.lang.Object, java.lang.String, java.lang.Object[]) throws org.apache.bsf.BSFException
    {
        org.codehaus.groovy.bsf.GroovyEngine r4;
        java.lang.Object[] r2;
        java.lang.Object r0, $r3;
        java.lang.String r1;

        r4 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

        return $r3;
    }

    public java.lang.Object eval(java.lang.String, int, int, java.lang.Object) throws org.apache.bsf.BSFException
    {
        java.lang.Throwable $r15;
        org.apache.bsf.BSFException $r14;
        java.lang.StringBuffer $r9, $r10, $r13;
        int i0, i1;
        java.lang.String $r1, $r4, $r11, r12;
        org.codehaus.groovy.bsf.GroovyEngine r0;
        groovy.lang.GroovyShell $r2;
        java.lang.Exception $r6;
        java.lang.Object r3, $r5;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

     label1:
        $r1 = specialinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: java.lang.String convertToValidJavaClassname(java.lang.String)>(r12);

        $r2 = virtualinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell getEvalShell()>();

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.lang.String,java.lang.String)>($r4, $r1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r14 = new org.apache.bsf.BSFException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception from Groovy: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.bsf.BSFException: void <init>(int,java.lang.String,java.lang.Throwable)>(100, $r11, $r6);

        $r15 = (java.lang.Throwable) $r14;

        throw $r15;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void exec(java.lang.String, int, int, java.lang.Object) throws org.apache.bsf.BSFException
    {
        java.lang.Throwable $r14;
        org.codehaus.groovy.bsf.GroovyEngine r0;
        org.apache.bsf.BSFException $r13;
        groovy.lang.GroovyShell $r2;
        java.lang.Exception $r5;
        java.lang.StringBuffer $r8, $r9, $r12;
        int i0, i1;
        java.lang.Object r3;
        java.lang.String $r1, $r4, $r10, r11;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

     label1:
        $r1 = specialinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: java.lang.String convertToValidJavaClassname(java.lang.String)>(r11);

        $r2 = virtualinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell getEvalShell()>();

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.lang.String,java.lang.String)>($r4, $r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r13 = new org.apache.bsf.BSFException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception from Groovy: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.bsf.BSFException: void <init>(int,java.lang.String,java.lang.Throwable)>(100, $r10, $r5);

        $r14 = (java.lang.Throwable) $r13;

        throw $r14;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void initialize(org.apache.bsf.BSFManager, java.lang.String, java.util.Vector) throws org.apache.bsf.BSFException
    {
        org.codehaus.groovy.bsf.GroovyEngine r0;
        org.apache.bsf.BSFDeclaredBean $r9;
        org.apache.bsf.BSFEngine $r12;
        org.apache.bsf.BSFManager r1;
        groovy.lang.GroovyShell $r7, $r10;
        java.util.Vector r3;
        int $i0, i1;
        java.lang.Object $r8;
        java.lang.String r2;
        java.lang.ClassLoader $r5;
        org.apache.bsf.util.BSFFunctions $r11;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r1 := @parameter0: org.apache.bsf.BSFManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Vector;

        specialinvoke r0.<org.apache.bsf.util.BSFEngineImpl: void initialize(org.apache.bsf.BSFManager,java.lang.String,java.util.Vector)>(r1, r2, r3);

        $r10 = new groovy.lang.GroovyShell;

        $r5 = virtualinvoke r1.<org.apache.bsf.BSFManager: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r10.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader)>($r5);

        r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell shell> = $r10;

        $r7 = r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell shell>;

        $r11 = new org.apache.bsf.util.BSFFunctions;

        $r12 = (org.apache.bsf.BSFEngine) r0;

        specialinvoke $r11.<org.apache.bsf.util.BSFFunctions: void <init>(org.apache.bsf.BSFManager,org.apache.bsf.BSFEngine)>(r1, $r12);

        virtualinvoke $r7.<groovy.lang.GroovyShell: void setVariable(java.lang.String,java.lang.Object)>("bsf", $r11);

        $i0 = virtualinvoke r3.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r8 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r9 = (org.apache.bsf.BSFDeclaredBean) $r8;

        virtualinvoke r0.<org.codehaus.groovy.bsf.GroovyEngine: void declareBean(org.apache.bsf.BSFDeclaredBean)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void declareBean(org.apache.bsf.BSFDeclaredBean) throws org.apache.bsf.BSFException
    {
        org.codehaus.groovy.bsf.GroovyEngine r0;
        org.apache.bsf.BSFDeclaredBean r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        groovy.lang.GroovyShell $r4;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r1 := @parameter0: org.apache.bsf.BSFDeclaredBean;

        $r4 = r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell shell>;

        $r3 = r1.<org.apache.bsf.BSFDeclaredBean: java.lang.String name>;

        $r2 = r1.<org.apache.bsf.BSFDeclaredBean: java.lang.Object bean>;

        virtualinvoke $r4.<groovy.lang.GroovyShell: void setVariable(java.lang.String,java.lang.Object)>($r3, $r2);

        return;
    }

    public void undeclareBean(org.apache.bsf.BSFDeclaredBean) throws org.apache.bsf.BSFException
    {
        org.codehaus.groovy.bsf.GroovyEngine r0;
        org.apache.bsf.BSFDeclaredBean r1;
        java.lang.String $r2;
        groovy.lang.GroovyShell $r3;

        r0 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        r1 := @parameter0: org.apache.bsf.BSFDeclaredBean;

        $r3 = r0.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell shell>;

        $r2 = r1.<org.apache.bsf.BSFDeclaredBean: java.lang.String name>;

        virtualinvoke $r3.<groovy.lang.GroovyShell: void setVariable(java.lang.String,java.lang.Object)>($r2, null);

        return;
    }

    protected groovy.lang.GroovyShell getEvalShell()
    {
        org.codehaus.groovy.bsf.GroovyEngine r1;
        groovy.lang.GroovyShell $r0, $r2;

        r1 := @this: org.codehaus.groovy.bsf.GroovyEngine;

        $r0 = new groovy.lang.GroovyShell;

        $r2 = r1.<org.codehaus.groovy.bsf.GroovyEngine: groovy.lang.GroovyShell shell>;

        specialinvoke $r0.<groovy.lang.GroovyShell: void <init>(groovy.lang.GroovyShell)>($r2);

        return $r0;
    }
}
