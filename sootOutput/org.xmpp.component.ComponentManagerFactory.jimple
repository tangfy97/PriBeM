public class org.xmpp.component.ComponentManagerFactory extends java.lang.Object
{
    private static org.xmpp.component.ComponentManager componentManager;

    public void <init>()
    {
        org.xmpp.component.ComponentManagerFactory r0;

        r0 := @this: org.xmpp.component.ComponentManagerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized org.xmpp.component.ComponentManager getComponentManager()
    {
        org.xmpp.component.ComponentManager $r0, $r5, $r6, $r7;
        java.lang.NullPointerException $r2;
        java.lang.Exception $r8;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String $r1;

        $r0 = <org.xmpp.component.ComponentManagerFactory: org.xmpp.component.ComponentManager componentManager>;

        if $r0 == null goto label1;

        $r7 = <org.xmpp.component.ComponentManagerFactory: org.xmpp.component.ComponentManager componentManager>;

        return $r7;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("whack.componentManagerClass");

        if $r1 == null goto label5;

     label2:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (org.xmpp.component.ComponentManager) $r4;

        <org.xmpp.component.ComponentManagerFactory: org.xmpp.component.ComponentManager componentManager> = $r5;

        $r6 = <org.xmpp.component.ComponentManagerFactory: org.xmpp.component.ComponentManager componentManager>;

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label5:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("No ComponentManager implementation available.");

        throw $r2;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void setComponentManager(org.xmpp.component.ComponentManager)
    {
        org.xmpp.component.ComponentManager r0;

        r0 := @parameter0: org.xmpp.component.ComponentManager;

        <org.xmpp.component.ComponentManagerFactory: org.xmpp.component.ComponentManager componentManager> = r0;

        return;
    }
}
