final class org.apache.lucene.index.TermVectorsTermsWriter extends org.apache.lucene.index.TermsHashConsumer
{
    final org.apache.lucene.index.DocumentsWriter docWriter;
    org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList;
    int freeCount;
    org.apache.lucene.store.IndexOutput tvx;
    org.apache.lucene.store.IndexOutput tvd;
    org.apache.lucene.store.IndexOutput tvf;
    int lastDocID;
    boolean hasVectors;
    int allocCount;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.DocumentsWriter)
    {
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] $r1;
        org.apache.lucene.index.DocumentsWriter r2;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r2 := @parameter0: org.apache.lucene.index.DocumentsWriter;

        specialinvoke r0.<org.apache.lucene.index.TermsHashConsumer: void <init>()>();

        $r1 = newarray (org.apache.lucene.index.TermVectorsTermsWriter$PerDoc)[1];

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList> = $r1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter> = r2;

        return;
    }

    public org.apache.lucene.index.TermsHashConsumerPerThread addThread(org.apache.lucene.index.TermsHashPerThread)
    {
        org.apache.lucene.index.TermsHashPerThread r1;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread $r0;
        org.apache.lucene.index.TermVectorsTermsWriter r2;

        r2 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerThread;

        $r0 = new org.apache.lucene.index.TermVectorsTermsWriterPerThread;

        specialinvoke $r0.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: void <init>(org.apache.lucene.index.TermsHashPerThread,org.apache.lucene.index.TermVectorsTermsWriter)>(r1, r2);

        return $r0;
    }

    synchronized void flush(java.util.Map, org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.TermsHashPerThread $r11;
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        org.apache.lucene.index.TermVectorsTermsWriterPerField r14;
        byte $b6;
        java.util.Map r2;
        org.apache.lucene.store.Directory $r23, $r29, $r34;
        java.io.Closeable[] $r17;
        org.apache.lucene.index.TermVectorsTermsWriterPerThread r39;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.TermsHashConsumerPerField r13;
        java.util.Collection $r8;
        java.util.Set $r3;
        java.lang.StringBuilder $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35;
        org.apache.lucene.index.TermsHashPerField $r15;
        long $l2, $l3, $l4, $l5, $l8;
        java.lang.AssertionError $r38;
        org.apache.lucene.index.SegmentWriteState r16;
        int $i0, $i1, $i7;
        java.lang.String $r21, $r22, $r36, $r37;
        org.apache.lucene.store.IndexOutput $r1, $r18, $r19, $r20;
        java.util.Map$Entry r6;
        java.util.Iterator $r4, $r9;
        java.lang.RuntimeException $r24;
        java.lang.Object $r5, $r7, $r10, $r12;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r2 := @parameter0: java.util.Map;

        r16 := @parameter1: org.apache.lucene.index.SegmentWriteState;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        if $r1 == null goto label3;

        $i0 = r16.<org.apache.lucene.index.SegmentWriteState: int numDocs>;

        virtualinvoke r0.<org.apache.lucene.index.TermVectorsTermsWriter: void fill(int)>($i0);

        $r17 = newarray (java.io.Closeable)[3];

        $r18 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r17[0] = $r18;

        $r19 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r17[1] = $r19;

        $r20 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r17[2] = $r20;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r17);

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx> = null;

        $z1 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r37 = r16.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentName>;

        if $r37 != null goto label1;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label1:
        $r21 = r16.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentName>;

        $r22 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r21, "tvx");

        $i1 = r16.<org.apache.lucene.index.SegmentWriteState: int numDocs>;

        $l2 = (long) $i1;

        $l3 = $l2 * 16L;

        $l4 = 4L + $l3;

        $r23 = r16.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $l5 = virtualinvoke $r23.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>($r22);

        $b6 = $l4 cmp $l5;

        if $b6 == 0 goto label2;

        $r24 = new java.lang.RuntimeException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after flush: tvx size mismatch: ");

        $i7 = r16.<org.apache.lucene.index.SegmentWriteState: int numDocs>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs vs ");

        $r29 = r16.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $l8 = virtualinvoke $r29.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>($r22);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length in bytes of ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file exists?=");

        $r34 = r16.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $z3 = virtualinvoke $r34.<org.apache.lucene.store.Directory: boolean fileExists(java.lang.String)>($r22);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r36);

        throw $r24;

     label2:
        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID> = 0;

        $z2 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: boolean hasVectors>;

        r16.<org.apache.lucene.index.SegmentWriteState: boolean hasVectors> = $z2;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: boolean hasVectors> = 0;

     label3:
        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.util.Collection) $r7;

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.lucene.index.TermsHashConsumerPerField) $r12;

        r14 = (org.apache.lucene.index.TermVectorsTermsWriterPerField) r13;

        $r15 = r14.<org.apache.lucene.index.TermVectorsTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r15.<org.apache.lucene.index.TermsHashPerField: void reset()>();

        virtualinvoke r14.<org.apache.lucene.index.TermVectorsTermsWriterPerField: void shrinkHash()>();

        goto label5;

     label6:
        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r39 = (org.apache.lucene.index.TermVectorsTermsWriterPerThread) $r10;

        $r11 = r39.<org.apache.lucene.index.TermVectorsTermsWriterPerThread: org.apache.lucene.index.TermsHashPerThread termsHashPerThread>;

        virtualinvoke $r11.<org.apache.lucene.index.TermsHashPerThread: void reset(boolean)>(1);

        goto label4;

     label7:
        return;
    }

    synchronized org.apache.lucene.index.TermVectorsTermsWriter$PerDoc getPerDoc()
    {
        java.lang.AssertionError $r6;
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc $r2, $r7;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] $r1, $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        $i0 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount>;

        if $i0 != 0 goto label3;

        $i3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int allocCount>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int allocCount> = $i4;

        $i6 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int allocCount>;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList>;

        $i5 = lengthof $r3;

        if $i6 <= $i5 goto label2;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i12 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int allocCount>;

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList>;

        $i10 = lengthof $r5;

        $i11 = 1 + $i10;

        if $i12 == $i11 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $i8 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int allocCount>;

        $i7 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i8, $i7);

        $r4 = newarray (org.apache.lucene.index.TermVectorsTermsWriter$PerDoc)[$i9];

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList> = $r4;

     label2:
        $r7 = new org.apache.lucene.index.TermVectorsTermsWriter$PerDoc;

        specialinvoke $r7.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: void <init>(org.apache.lucene.index.TermVectorsTermsWriter)>(r0);

        return $r7;

     label3:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList>;

        $i1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount>;

        $i2 = $i1 - 1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount> = $i2;

        $r2 = $r1[$i2];

        return $r2;
    }

    void fill(int) throws java.io.IOException
    {
        long $l2, $l4;
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        int i0, $i1, $i3, $i5, $i6;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        if $i1 >= i0 goto label2;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l2 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

     label1:
        $i3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        if $i3 >= i0 goto label2;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l4 = virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l4);

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(0);

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l2);

        $i5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID> = $i6;

        goto label1;

     label2:
        return;
    }

    synchronized void initTermVectorsWriter() throws java.io.IOException
    {
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        org.apache.lucene.index.DocumentsWriter $r2, $r3, $r8, $r9, $r14, $r15;
        org.apache.lucene.store.Directory $r4, $r10, $r16;
        java.io.Closeable[] $r23, $r28;
        boolean z0;
        java.lang.Throwable $r27;
        java.lang.String $r5, $r6, $r11, $r12, $r17, $r18;
        org.apache.lucene.store.IndexOutput $r1, $r7, $r13, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r29, $r30, $r31;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        if $r1 != null goto label06;

        z0 = 0;

     label01:
        r0.<org.apache.lucene.index.TermVectorsTermsWriter: boolean hasVectors> = 1;

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r4 = $r2.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r5 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r5, "tvx");

        $r7 = virtualinvoke $r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r6);

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx> = $r7;

        $r8 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r10 = $r8.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r9 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r11 = virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r12 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r11, "tvd");

        $r13 = virtualinvoke $r10.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r12);

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd> = $r13;

        $r14 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r16 = $r14.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r15 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r17 = virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r18 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r17, "tvf");

        $r19 = virtualinvoke $r16.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r18);

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf> = $r19;

        $r20 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r20.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        $r21 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r21.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        $r22 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r22.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        z0 = 1;

        goto label07;

     label02:
        goto label05;

     label03:
        $r27 := @caughtexception;

        goto label09;

     label04:
        throw $r27;

     label05:
        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID> = 0;

     label06:
        return;

     label07:
        if 1 != 0 goto label08;

        $r23 = newarray (java.io.Closeable)[3];

        $r24 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r23[0] = $r24;

        $r25 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r23[1] = $r25;

        $r26 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r23[2] = $r26;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r23);

     label08:
        goto label02;

     label09:
        if z0 != 0 goto label10;

        $r28 = newarray (java.io.Closeable)[3];

        $r29 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r28[0] = $r29;

        $r30 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r28[1] = $r30;

        $r31 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r28[2] = $r31;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r28);

     label10:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    synchronized void finishDocument(org.apache.lucene.index.TermVectorsTermsWriter$PerDoc) throws java.io.IOException
    {
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        org.apache.lucene.index.DocumentsWriter $r7, $r26;
        byte $b15;
        int[] $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.index.IndexWriter $r8, $r27;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        long $l1, $l2, l12, $l13, $l14, l18;
        java.lang.AssertionError $r9, $r10, $r23, $r28;
        long[] $r17, $r20, $r22;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i16, i17, i19, $i20;
        java.lang.String $r16;
        org.apache.lucene.store.IndexOutput $r2, $r3, $r4, $r5, $r6, $r18, $r21, $r25;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc r1;
        org.apache.lucene.store.RAMOutputStream $r19;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r1 := @parameter0: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r26 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r27 = $r26.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter writer>;

        $z5 = virtualinvoke $r27.<org.apache.lucene.index.IndexWriter: boolean testPoint(java.lang.String)>("TermVectorsTermsWriter.finishDocument start");

        if $z5 != 0 goto label1;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label1:
        virtualinvoke r0.<org.apache.lucene.index.TermVectorsTermsWriter: void initTermVectorsWriter()>();

        $i0 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID>;

        virtualinvoke r0.<org.apache.lucene.index.TermVectorsTermsWriter: void fill(int)>($i0);

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l1);

        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l2 = virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r5.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l2);

        $r6 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $i3 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i3);

        $i4 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields>;

        if $i4 <= 0 goto label7;

        i17 = 0;

     label2:
        $i11 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields>;

        if i17 >= $i11 goto label3;

        $r25 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r24 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int[] fieldNumbers>;

        $i16 = $r24[i17];

        virtualinvoke $r25.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i16);

        i17 = i17 + 1;

        goto label2;

     label3:
        $z4 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z4 != 0 goto label4;

        $r22 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: long[] fieldPointers>;

        $l14 = $r22[0];

        $b15 = 0L cmp $l14;

        if $b15 == 0 goto label4;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label4:
        $r17 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: long[] fieldPointers>;

        l18 = $r17[0];

        i19 = 1;

     label5:
        $i20 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields>;

        if i19 >= $i20 goto label6;

        $r20 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: long[] fieldPointers>;

        l12 = $r20[i19];

        $r21 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l13 = l12 - l18;

        virtualinvoke $r21.<org.apache.lucene.store.IndexOutput: void writeVLong(long)>($l13);

        l18 = l12;

        i19 = i19 + 1;

        goto label5;

     label6:
        $r19 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: org.apache.lucene.store.RAMOutputStream perDocTvf>;

        $r18 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r19.<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)>($r18);

        r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int numVectorFields> = 0;

     label7:
        $z1 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        $i8 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        $i7 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID>;

        if $i8 == $i7 goto label8;

        $r10 = new java.lang.AssertionError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastDocID=");

        $i9 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" perDoc.docID=");

        $i10 = r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: int docID>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r10;

     label8:
        $i5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID> = $i6;

        virtualinvoke r1.<org.apache.lucene.index.TermVectorsTermsWriter$PerDoc: void reset()>();

        virtualinvoke r0.<org.apache.lucene.index.TermVectorsTermsWriter: void free(org.apache.lucene.index.TermVectorsTermsWriter$PerDoc)>(r1);

        $z2 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label9;

        $r7 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r8 = $r7.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter writer>;

        $z3 = virtualinvoke $r8.<org.apache.lucene.index.IndexWriter: boolean testPoint(java.lang.String)>("TermVectorsTermsWriter.finishDocument end");

        if $z3 != 0 goto label9;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label9:
        return;
    }

    public void abort()
    {
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        org.apache.lucene.index.DocumentsWriter $r5, $r6, $r10, $r11, $r15, $r16;
        org.apache.lucene.store.Directory $r7, $r12, $r17;
        java.io.Closeable[] $r1;
        java.lang.String $r8, $r9, $r13, $r14, $r18, $r19;
        org.apache.lucene.store.IndexOutput $r2, $r3, $r4;
        java.io.IOException $r20, $r21, $r22, $r23;
        java.lang.RuntimeException $r24;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: boolean hasVectors> = 0;

     label01:
        $r1 = newarray (java.io.Closeable)[3];

        $r2 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r1[1] = $r3;

        $r4 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r1[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r1);

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r23);

        throw $r24;

     label04:
        $r5 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r7 = $r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r6 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r8 = virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r8, "tvx");

        virtualinvoke $r7.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>($r9);

     label05:
        goto label07;

     label06:
        $r22 := @caughtexception;

     label07:
        $r10 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r12 = $r10.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r11 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r13 = virtualinvoke $r11.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r14 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r13, "tvd");

        virtualinvoke $r12.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>($r14);

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

     label10:
        $r15 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r17 = $r15.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory>;

        $r16 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.DocumentsWriter docWriter>;

        $r18 = virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriter: java.lang.String getSegment()>();

        $r19 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>($r18, "tvf");

        virtualinvoke $r17.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>($r19);

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

     label13:
        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvf> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvd> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.store.IndexOutput tvx> = null;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int lastDocID> = 0;

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
    }

    synchronized void free(org.apache.lucene.index.TermVectorsTermsWriter$PerDoc)
    {
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc r2;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.TermVectorsTermsWriter r0;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.TermVectorsTermsWriter;

        r2 := @parameter0: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc;

        $z0 = <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount>;

        $r3 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList>;

        $i2 = lengthof $r3;

        if $i3 < $i2 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: org.apache.lucene.index.TermVectorsTermsWriter$PerDoc[] docFreeList>;

        $i0 = r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.index.TermVectorsTermsWriter: int freeCount> = $i1;

        $r1[$i0] = r2;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/TermVectorsTermsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermVectorsTermsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
