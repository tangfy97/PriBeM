public class org.bouncycastle.crypto.digests.TigerDigest extends java.lang.Object implements org.bouncycastle.crypto.ExtendedDigest
{
    private static final int BYTE_LENGTH;
    private static final long[] t1;
    private static final long[] t2;
    private static final long[] t3;
    private static final long[] t4;
    private static final int DIGEST_LENGTH;
    private long a;
    private long b;
    private long c;
    private long byteCount;
    private byte[] buf;
    private int bOff;
    private long[] x;
    private int xOff;

    public void <init>()
    {
        byte[] $r1;
        long[] $r2;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf> = $r1;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = 0;

        $r2 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x> = $r2;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = 0;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void reset()>();

        return;
    }

    public void <init>(org.bouncycastle.crypto.digests.TigerDigest)
    {
        byte[] $r1, $r7, $r8, $r9;
        long $l0, $l1, $l2, $l7;
        long[] $r2, $r4, $r5, $r6;
        int $i3, $i4, $i5, $i6;
        org.bouncycastle.crypto.digests.TigerDigest r0, r3;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        r3 := @parameter0: org.bouncycastle.crypto.digests.TigerDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf> = $r1;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = 0;

        $r2 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x> = $r2;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = 0;

        $l0 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l0;

        $l1 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l1;

        $l2 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l2;

        $r6 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $r5 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $r4 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $i3 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i3);

        $i4 = r3.<org.bouncycastle.crypto.digests.TigerDigest: int xOff>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = $i4;

        $r9 = r3.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $r8 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $r7 = r3.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $i5 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r8, 0, $i5);

        $i6 = r3.<org.bouncycastle.crypto.digests.TigerDigest: int bOff>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = $i6;

        $l7 = r3.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount>;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount> = $l7;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        return "Tiger";
    }

    public int getDigestSize()
    {
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        return 24;
    }

    private void processWord(byte[], int)
    {
        byte[] r2;
        byte $b4, $b8, $b14, $b20, $b26, $b32, $b38, $b44;
        long $l6, $l10, $l11, $l12, $l16, $l17, $l18, $l22, $l23, $l24, $l28, $l29, $l30, $l34, $l35, $l36, $l40, $l41, $l42, $l46, $l47, $l48;
        short $s5, $s9, $s15, $s21, $s27, $s33, $s39, $s45, $s51, $s52, $s53, $s54, $s55, $s56, $s57, $s58;
        long[] $r1, $r3;
        int $i0, $i1, i2, $i3, $i7, $i13, $i19, $i25, $i31, $i37, $i43, $i49, $i50;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        r2 := @parameter0: byte[];

        i2 := @parameter1: int;

        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $i0 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = $i1;

        $i3 = i2 + 7;

        $b4 = r2[$i3];

        $s51 = (short) $b4;

        $s5 = $s51 & 255;

        $l6 = (long) $s5;

        $l12 = $l6 << 56;

        $i7 = i2 + 6;

        $b8 = r2[$i7];

        $s52 = (short) $b8;

        $s9 = $s52 & 255;

        $l10 = (long) $s9;

        $l11 = $l10 << 48;

        $l18 = $l12 | $l11;

        $i13 = i2 + 5;

        $b14 = r2[$i13];

        $s53 = (short) $b14;

        $s15 = $s53 & 255;

        $l16 = (long) $s15;

        $l17 = $l16 << 40;

        $l24 = $l18 | $l17;

        $i19 = i2 + 4;

        $b20 = r2[$i19];

        $s54 = (short) $b20;

        $s21 = $s54 & 255;

        $l22 = (long) $s21;

        $l23 = $l22 << 32;

        $l30 = $l24 | $l23;

        $i25 = i2 + 3;

        $b26 = r2[$i25];

        $s55 = (short) $b26;

        $s27 = $s55 & 255;

        $l28 = (long) $s27;

        $l29 = $l28 << 24;

        $l36 = $l30 | $l29;

        $i31 = i2 + 2;

        $b32 = r2[$i31];

        $s56 = (short) $b32;

        $s33 = $s56 & 255;

        $l34 = (long) $s33;

        $l35 = $l34 << 16;

        $l42 = $l36 | $l35;

        $i37 = i2 + 1;

        $b38 = r2[$i37];

        $s57 = (short) $b38;

        $s39 = $s57 & 255;

        $l40 = (long) $s39;

        $l41 = $l40 << 8;

        $l47 = $l42 | $l41;

        $i43 = i2 + 0;

        $b44 = r2[$i43];

        $s58 = (short) $b44;

        $s45 = $s58 & 255;

        $l46 = (long) $s45;

        $l48 = $l47 | $l46;

        $r1[$i0] = $l48;

        $i50 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff>;

        $r3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $i49 = lengthof $r3;

        if $i50 != $i49 goto label1;

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void processBlock()>();

     label1:
        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = 0;

        return;
    }

    public void update(byte)
    {
        byte[] $r1, $r2, $r3;
        long $l5, $l6;
        byte b2;
        int $i0, $i1, $i3, $i4;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        b2 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $i0 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = $i1;

        $r1[$i0] = b2;

        $i4 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff>;

        $r2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void processWord(byte[],int)>($r3, 0);

     label1:
        $l5 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount>;

        $l6 = $l5 + 1L;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount> = $l6;

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        long $l2, $l3;
        byte $b1, $b4;
        int $i0, i5, i6, $i8, $i10, $i12;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff>;

        if $i0 == 0 goto label2;

        if i6 <= 0 goto label2;

        $b4 = r1[i5];

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void update(byte)>($b4);

        i5 = i5 + 1;

        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label2:
        if i6 <= 8 goto label3;

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void processWord(byte[],int)>(r1, i5);

        i5 = i5 + 8;

        $i10 = (int) -8;

        i6 = i6 + $i10;

        $l2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount>;

        $l3 = $l2 + 8L;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount> = $l3;

        goto label2;

     label3:
        if i6 <= 0 goto label4;

        $b1 = r1[i5];

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void update(byte)>($b1);

        i5 = i5 + 1;

        $i12 = (int) -1;

        i6 = i6 + $i12;

        goto label3;

     label4:
        return;
    }

    private void roundABC(long, long)
    {
        long l0, $l1, $l2, $l3, $l6, $l7, $l10, $l11, $l12, $l13, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l31, $l32, $l35, $l36, $l37, $l38, $l41, $l42, $l43, $l44, $l47, $l48, $l49, $l50, $l51, l52, $l53, $l54;
        org.bouncycastle.crypto.digests.TigerDigest r0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i4, $i5, $i8, $i9, $i14, $i15, $i20, $i21, $i29, $i30, $i33, $i34, $i39, $i40, $i45, $i46;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l0 := @parameter0: long;

        l52 := @parameter1: long;

        $l1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l2 = $l1 ^ l0;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l2;

        $l25 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $r1 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $i4 = (int) $l3;

        $i5 = $i4 & 255;

        $l11 = $r1[$i5];

        $r2 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l6 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l7 = $l6 >> 16;

        $i8 = (int) $l7;

        $i9 = $i8 & 255;

        $l10 = $r2[$i9];

        $l17 = $l11 ^ $l10;

        $r3 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l12 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l13 = $l12 >> 32;

        $i14 = (int) $l13;

        $i15 = $i14 & 255;

        $l16 = $r3[$i15];

        $l23 = $l17 ^ $l16;

        $r4 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l18 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l19 = $l18 >> 48;

        $i20 = (int) $l19;

        $i21 = $i20 & 255;

        $l22 = $r4[$i21];

        $l24 = $l23 ^ $l22;

        $l26 = $l25 - $l24;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l26;

        $l50 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $r5 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l27 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l28 = $l27 >> 8;

        $i29 = (int) $l28;

        $i30 = $i29 & 255;

        $l36 = $r5[$i30];

        $r6 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l31 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l32 = $l31 >> 24;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $l35 = $r6[$i34];

        $l42 = $l36 ^ $l35;

        $r7 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l37 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l38 = $l37 >> 40;

        $i39 = (int) $l38;

        $i40 = $i39 & 255;

        $l41 = $r7[$i40];

        $l48 = $l42 ^ $l41;

        $r8 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l43 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l44 = $l43 >> 56;

        $i45 = (int) $l44;

        $i46 = $i45 & 255;

        $l47 = $r8[$i46];

        $l49 = $l48 ^ $l47;

        $l51 = $l50 + $l49;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l51;

        $l53 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l54 = $l53 * l52;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l54;

        return;
    }

    private void roundBCA(long, long)
    {
        long l0, $l1, $l2, $l3, $l6, $l7, $l10, $l11, $l12, $l13, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l31, $l32, $l35, $l36, $l37, $l38, $l41, $l42, $l43, $l44, $l47, $l48, $l49, $l50, $l51, l52, $l53, $l54;
        org.bouncycastle.crypto.digests.TigerDigest r0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i4, $i5, $i8, $i9, $i14, $i15, $i20, $i21, $i29, $i30, $i33, $i34, $i39, $i40, $i45, $i46;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l0 := @parameter0: long;

        l52 := @parameter1: long;

        $l1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l2 = $l1 ^ l0;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l2;

        $l25 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $r1 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $i4 = (int) $l3;

        $i5 = $i4 & 255;

        $l11 = $r1[$i5];

        $r2 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l6 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l7 = $l6 >> 16;

        $i8 = (int) $l7;

        $i9 = $i8 & 255;

        $l10 = $r2[$i9];

        $l17 = $l11 ^ $l10;

        $r3 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l12 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l13 = $l12 >> 32;

        $i14 = (int) $l13;

        $i15 = $i14 & 255;

        $l16 = $r3[$i15];

        $l23 = $l17 ^ $l16;

        $r4 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l18 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l19 = $l18 >> 48;

        $i20 = (int) $l19;

        $i21 = $i20 & 255;

        $l22 = $r4[$i21];

        $l24 = $l23 ^ $l22;

        $l26 = $l25 - $l24;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l26;

        $l50 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $r5 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l27 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l28 = $l27 >> 8;

        $i29 = (int) $l28;

        $i30 = $i29 & 255;

        $l36 = $r5[$i30];

        $r6 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l31 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l32 = $l31 >> 24;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $l35 = $r6[$i34];

        $l42 = $l36 ^ $l35;

        $r7 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l37 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l38 = $l37 >> 40;

        $i39 = (int) $l38;

        $i40 = $i39 & 255;

        $l41 = $r7[$i40];

        $l48 = $l42 ^ $l41;

        $r8 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l43 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l44 = $l43 >> 56;

        $i45 = (int) $l44;

        $i46 = $i45 & 255;

        $l47 = $r8[$i46];

        $l49 = $l48 ^ $l47;

        $l51 = $l50 + $l49;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l51;

        $l53 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l54 = $l53 * l52;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l54;

        return;
    }

    private void roundCAB(long, long)
    {
        long l0, $l1, $l2, $l3, $l6, $l7, $l10, $l11, $l12, $l13, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l31, $l32, $l35, $l36, $l37, $l38, $l41, $l42, $l43, $l44, $l47, $l48, $l49, $l50, $l51, l52, $l53, $l54;
        org.bouncycastle.crypto.digests.TigerDigest r0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i4, $i5, $i8, $i9, $i14, $i15, $i20, $i21, $i29, $i30, $i33, $i34, $i39, $i40, $i45, $i46;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l0 := @parameter0: long;

        l52 := @parameter1: long;

        $l1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l2 = $l1 ^ l0;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l2;

        $l25 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $r1 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $i4 = (int) $l3;

        $i5 = $i4 & 255;

        $l11 = $r1[$i5];

        $r2 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l6 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l7 = $l6 >> 16;

        $i8 = (int) $l7;

        $i9 = $i8 & 255;

        $l10 = $r2[$i9];

        $l17 = $l11 ^ $l10;

        $r3 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l12 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l13 = $l12 >> 32;

        $i14 = (int) $l13;

        $i15 = $i14 & 255;

        $l16 = $r3[$i15];

        $l23 = $l17 ^ $l16;

        $r4 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l18 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l19 = $l18 >> 48;

        $i20 = (int) $l19;

        $i21 = $i20 & 255;

        $l22 = $r4[$i21];

        $l24 = $l23 ^ $l22;

        $l26 = $l25 - $l24;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l26;

        $l50 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $r5 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t4>;

        $l27 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l28 = $l27 >> 8;

        $i29 = (int) $l28;

        $i30 = $i29 & 255;

        $l36 = $r5[$i30];

        $r6 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t3>;

        $l31 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l32 = $l31 >> 24;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $l35 = $r6[$i34];

        $l42 = $l36 ^ $l35;

        $r7 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t2>;

        $l37 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l38 = $l37 >> 40;

        $i39 = (int) $l38;

        $i40 = $i39 & 255;

        $l41 = $r7[$i40];

        $l48 = $l42 ^ $l41;

        $r8 = <org.bouncycastle.crypto.digests.TigerDigest: long[] t1>;

        $l43 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l44 = $l43 >> 56;

        $i45 = (int) $l44;

        $i46 = $i45 & 255;

        $l47 = $r8[$i46];

        $l49 = $l48 ^ $l47;

        $l51 = $l50 + $l49;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l51;

        $l53 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l54 = $l53 * l52;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l54;

        return;
    }

    private void keySchedule()
    {
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, $l61, $l62, $l63, $l64, $l65;
        org.bouncycastle.crypto.digests.TigerDigest r0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l2 = $r1[0];

        $r2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l0 = $r2[7];

        $l1 = $l0 ^ -6510615555426900571L;

        $l3 = $l2 - $l1;

        $r1[0] = $l3;

        $r3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l5 = $r3[1];

        $r4 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l4 = $r4[0];

        $l6 = $l5 ^ $l4;

        $r3[1] = $l6;

        $r5 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l8 = $r5[2];

        $r6 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l7 = $r6[1];

        $l9 = $l8 + $l7;

        $r5[2] = $l9;

        $r7 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l15 = $r7[3];

        $r8 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l13 = $r8[2];

        $r9 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l10 = $r9[1];

        $l11 = $l10 ^ -1L;

        $l12 = $l11 << 19;

        $l14 = $l13 ^ $l12;

        $l16 = $l15 - $l14;

        $r7[3] = $l16;

        $r10 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l18 = $r10[4];

        $r11 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l17 = $r11[3];

        $l19 = $l18 ^ $l17;

        $r10[4] = $l19;

        $r12 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l21 = $r12[5];

        $r13 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l20 = $r13[4];

        $l22 = $l21 + $l20;

        $r12[5] = $l22;

        $r14 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l28 = $r14[6];

        $r15 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l26 = $r15[5];

        $r16 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l23 = $r16[4];

        $l24 = $l23 ^ -1L;

        $l25 = $l24 >>> 23;

        $l27 = $l26 ^ $l25;

        $l29 = $l28 - $l27;

        $r14[6] = $l29;

        $r17 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l31 = $r17[7];

        $r18 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l30 = $r18[6];

        $l32 = $l31 ^ $l30;

        $r17[7] = $l32;

        $r19 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l34 = $r19[0];

        $r20 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l33 = $r20[7];

        $l35 = $l34 + $l33;

        $r19[0] = $l35;

        $r21 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l41 = $r21[1];

        $r22 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l39 = $r22[0];

        $r23 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l36 = $r23[7];

        $l37 = $l36 ^ -1L;

        $l38 = $l37 << 19;

        $l40 = $l39 ^ $l38;

        $l42 = $l41 - $l40;

        $r21[1] = $l42;

        $r24 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l44 = $r24[2];

        $r25 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l43 = $r25[1];

        $l45 = $l44 ^ $l43;

        $r24[2] = $l45;

        $r26 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l47 = $r26[3];

        $r27 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l46 = $r27[2];

        $l48 = $l47 + $l46;

        $r26[3] = $l48;

        $r28 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l54 = $r28[4];

        $r29 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l52 = $r29[3];

        $r30 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l49 = $r30[2];

        $l50 = $l49 ^ -1L;

        $l51 = $l50 >>> 23;

        $l53 = $l52 ^ $l51;

        $l55 = $l54 - $l53;

        $r28[4] = $l55;

        $r31 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l57 = $r31[5];

        $r32 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l56 = $r32[4];

        $l58 = $l57 ^ $l56;

        $r31[5] = $l58;

        $r33 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l60 = $r33[6];

        $r34 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l59 = $r34[5];

        $l61 = $l60 + $l59;

        $r33[6] = $l61;

        $r35 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l64 = $r35[7];

        $r36 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l62 = $r36[6];

        $l63 = $l62 ^ 81985529216486895L;

        $l65 = $l64 - $l63;

        $r35[7] = $l65;

        return;
    }

    private void processBlock()
    {
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        int $i33, i34;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l0 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        l1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        l2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l3 = $r1[0];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l3, 5L);

        $r2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l4 = $r2[1];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l4, 5L);

        $r3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l5 = $r3[2];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l5, 5L);

        $r4 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l6 = $r4[3];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l6, 5L);

        $r5 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l7 = $r5[4];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l7, 5L);

        $r6 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l8 = $r6[5];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l8, 5L);

        $r7 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l9 = $r7[6];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l9, 5L);

        $r8 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l10 = $r8[7];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l10, 5L);

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void keySchedule()>();

        $r9 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l11 = $r9[0];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l11, 7L);

        $r10 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l12 = $r10[1];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l12, 7L);

        $r11 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l13 = $r11[2];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l13, 7L);

        $r12 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l14 = $r12[3];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l14, 7L);

        $r13 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l15 = $r13[4];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l15, 7L);

        $r14 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l16 = $r14[5];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l16, 7L);

        $r15 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l17 = $r15[6];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l17, 7L);

        $r16 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l18 = $r16[7];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l18, 7L);

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void keySchedule()>();

        $r17 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l19 = $r17[0];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l19, 9L);

        $r18 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l20 = $r18[1];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l20, 9L);

        $r19 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l21 = $r19[2];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l21, 9L);

        $r20 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l22 = $r20[3];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l22, 9L);

        $r21 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l23 = $r21[4];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l23, 9L);

        $r22 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l24 = $r22[5];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundABC(long,long)>($l24, 9L);

        $r23 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l25 = $r23[6];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundBCA(long,long)>($l25, 9L);

        $r24 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $l26 = $r24[7];

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void roundCAB(long,long)>($l26, 9L);

        $l27 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        $l28 = $l27 ^ l0;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = $l28;

        $l29 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $l30 = $l29 - l1;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = $l30;

        $l31 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $l32 = $l31 + l2;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = $l32;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = 0;

        i34 = 0;

     label1:
        $r25 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $i33 = lengthof $r25;

        if i34 == $i33 goto label2;

        $r26 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $r26[i34] = 0L;

        i34 = i34 + 1;

        goto label1;

     label2:
        return;
    }

    public void unpackWord(long, byte[], int)
    {
        byte[] r0;
        byte $b4, $b8, $b12, $b16, $b20, $b24, $b28, $b31;
        long l1, $l2, $l6, $l10, $l14, $l18, $l22, $l26;
        int i0, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i30;
        org.bouncycastle.crypto.digests.TigerDigest r1;

        r1 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l1 := @parameter0: long;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i5 = i0 + 7;

        $l2 = l1 >> 56;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        r0[$i5] = $b4;

        $i9 = i0 + 6;

        $l6 = l1 >> 48;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        r0[$i9] = $b8;

        $i13 = i0 + 5;

        $l10 = l1 >> 40;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        r0[$i13] = $b12;

        $i17 = i0 + 4;

        $l14 = l1 >> 32;

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        r0[$i17] = $b16;

        $i21 = i0 + 3;

        $l18 = l1 >> 24;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        r0[$i21] = $b20;

        $i25 = i0 + 2;

        $l22 = l1 >> 16;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        r0[$i25] = $b24;

        $i29 = i0 + 1;

        $l26 = l1 >> 8;

        $i27 = (int) $l26;

        $b28 = (byte) $i27;

        r0[$i29] = $b28;

        $i30 = (int) l1;

        $b31 = (byte) $i30;

        r0[i0] = $b31;

        return;
    }

    private void processLength(long)
    {
        long l0;
        long[] $r1;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        l0 := @parameter0: long;

        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $r1[7] = l0;

        return;
    }

    private void finish()
    {
        int $i2;
        long $l0, l1;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        $l0 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount>;

        l1 = $l0 << 3;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void update(byte)>(1);

     label1:
        $i2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff>;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void update(byte)>(0);

        goto label1;

     label2:
        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void processLength(long)>(l1);

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void processBlock()>();

        return;
    }

    public int doFinal(byte[], int)
    {
        byte[] r1;
        long $l1, $l3, $l5;
        int i0, $i2, $i4;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void finish()>();

        $l1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long a>;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void unpackWord(long,byte[],int)>($l1, r1, i0);

        $l3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long b>;

        $i2 = i0 + 8;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void unpackWord(long,byte[],int)>($l3, r1, $i2);

        $l5 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long c>;

        $i4 = i0 + 16;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void unpackWord(long,byte[],int)>($l5, r1, $i4);

        virtualinvoke r0.<org.bouncycastle.crypto.digests.TigerDigest: void reset()>();

        return 24;
    }

    public void reset()
    {
        byte[] $r2, $r3;
        long[] $r1, $r4;
        int $i0, $i1, i2, i3;
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long a> = 81985529216486895L;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long b> = -81985529216486896L;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: long c> = -1110518062304271993L;

        r0.<org.bouncycastle.crypto.digests.TigerDigest: int xOff> = 0;

        i2 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $i0 = lengthof $r1;

        if i2 == $i0 goto label2;

        $r4 = r0.<org.bouncycastle.crypto.digests.TigerDigest: long[] x>;

        $r4[i2] = 0L;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<org.bouncycastle.crypto.digests.TigerDigest: int bOff> = 0;

        i3 = 0;

     label3:
        $r2 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $i1 = lengthof $r2;

        if i3 == $i1 goto label4;

        $r3 = r0.<org.bouncycastle.crypto.digests.TigerDigest: byte[] buf>;

        $r3[i3] = 0;

        i3 = i3 + 1;

        goto label3;

     label4:
        r0.<org.bouncycastle.crypto.digests.TigerDigest: long byteCount> = 0L;

        return;
    }

    public int getByteLength()
    {
        org.bouncycastle.crypto.digests.TigerDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.TigerDigest;

        return 64;
    }

    static void <clinit>()
    {
        long[] $r0, $r1, $r2, $r3;

        <org.bouncycastle.crypto.digests.TigerDigest: int DIGEST_LENGTH> = 24;

        <org.bouncycastle.crypto.digests.TigerDigest: int BYTE_LENGTH> = 64;

        $r0 = newarray (long)[256];

        $r0[0] = 192161084409973854L;

        $r0[1] = -6034178070669973268L;

        $r0[2] = 8272369121297300691L;

        $r0[3] = 7854730284916899642L;

        $r0[4] = -3631738584360316525L;

        $r0[5] = 8463286011307239906L;

        $r0[6] = -5664346993730092093L;

        $r0[7] = 5082381371487377520L;

        $r0[8] = -1536603760329757466L;

        $r0[9] = -4232985935611735204L;

        $r0[10] = 5541490850629862524L;

        $r0[11] = 766444128913191948L;

        $r0[12] = 1204553577021685498L;

        $r0[13] = -4121719295987045526L;

        $r0[14] = 1401289229890216703L;

        $r0[15] = 1893918052108309022L;

        $r0[16] = 5461170853188208586L;

        $r0[17] = 2807403890869420487L;

        $r0[18] = -8822417684582283338L;

        $r0[19] = 5699452412975025298L;

        $r0[20] = -2914262034798377397L;

        $r0[21] = -8199292901130911363L;

        $r0[22] = 7624427211800470465L;

        $r0[23] = -5330070367527189138L;

        $r0[24] = 9043806901924967914L;

        $r0[25] = 7231827479902542914L;

        $r0[26] = -4667804575905660192L;

        $r0[27] = 6875646691050945796L;

        $r0[28] = -954047427515838778L;

        $r0[29] = 7786398710221814956L;

        $r0[30] = 8167597339425066981L;

        $r0[31] = 1830707105885056415L;

        $r0[32] = -192929137551915557L;

        $r0[33] = -4000909680243679221L;

        $r0[34] = -8790383730744944306L;

        $r0[35] = -6559119868654993229L;

        $r0[36] = -8046943608939121133L;

        $r0[37] = -2635222011098072079L;

        $r0[38] = 1783120314242633559L;

        $r0[39] = 248005612187258982L;

        $r0[40] = 7688500634458409525L;

        $r0[41] = -799055769434250085L;

        $r0[42] = 8591138587399736033L;

        $r0[43] = -2813706756098348539L;

        $r0[44] = -4803442773389201549L;

        $r0[45] = 5042603696143252264L;

        $r0[46] = 2053990370701680515L;

        $r0[47] = -8434990628116389527L;

        $r0[48] = 3741955435321465241L;

        $r0[49] = 4334407786093429776L;

        $r0[50] = -5399798173115342087L;

        $r0[51] = 1449859124008718907L;

        $r0[52] = -259597992345095852L;

        $r0[53] = -2299784421946890745L;

        $r0[54] = -8624947886301142065L;

        $r0[55] = -7850603641235491331L;

        $r0[56] = 3847074041673952000L;

        $r0[57] = 4649400157396704725L;

        $r0[58] = -4273499526689310132L;

        $r0[59] = -3840742565288711634L;

        $r0[60] = 2909491499011162061L;

        $r0[61] = 4458122598401901638L;

        $r0[62] = 7071481730398905774L;

        $r0[63] = 6725294491764459774L;

        $r0[64] = -6201551736110472662L;

        $r0[65] = -4372530048007926361L;

        $r0[66] = 1226483701329067140L;

        $r0[67] = -2522035007050864557L;

        $r0[68] = -3676115808446124170L;

        $r0[69] = -4975751036383735295L;

        $r0[70] = -1831728144282101387L;

        $r0[71] = -7732658914112356844L;

        $r0[72] = 479582384021555544L;

        $r0[73] = 8040612334407127321L;

        $r0[74] = -2798227069691230528L;

        $r0[75] = -1334228551670664750L;

        $r0[76] = 8751740296797632830L;

        $r0[77] = 6603430683508552489L;

        $r0[78] = 8942924799792477540L;

        $r0[79] = 3573742753214737511L;

        $r0[80] = -2419519573825602302L;

        $r0[81] = 6349030933445924429L;

        $r0[82] = -2501945979441900175L;

        $r0[83] = -6177453506703404958L;

        $r0[84] = -7885857697280165792L;

        $r0[85] = 5194369709296555225L;

        $r0[86] = 7174555471952375656L;

        $r0[87] = 7982812746821821468L;

        $r0[88] = -8707669106532426453L;

        $r0[89] = 3232013613859041307L;

        $r0[90] = -5747376245209101971L;

        $r0[91] = -2231459388012946321L;

        $r0[92] = 3112410413624570453L;

        $r0[93] = -2336602742119691332L;

        $r0[94] = 6658792778814911418L;

        $r0[95] = 6126246269502162262L;

        $r0[96] = -6070952467612144753L;

        $r0[97] = 4721051187472420532L;

        $r0[98] = -5533619424469951182L;

        $r0[99] = -4853025588084287359L;

        $r0[100] = 2663576151211431276L;

        $r0[101] = 928112258657309258L;

        $r0[102] = 5664920977038299994L;

        $r0[103] = 2704699625848084345L;

        $r0[104] = 2312925355491498803L;

        $r0[105] = -528812816973409076L;

        $r0[106] = 2964761606854114992L;

        $r0[107] = 4148718494125202372L;

        $r0[108] = 4082542483235864459L;

        $r0[109] = 5171535286737311423L;

        $r0[110] = 2166137813939512309L;

        $r0[111] = 8844224567096109974L;

        $r0[112] = -6373247044080797239L;

        $r0[113] = -8133614489572350707L;

        $r0[114] = 7053919794999990929L;

        $r0[115] = 5576291611870337032L;

        $r0[116] = -1374825740467639573L;

        $r0[117] = -734453569254161202L;

        $r0[118] = -705972172313107935L;

        $r0[119] = -6688726126811769884L;

        $r0[120] = -7468621655906046812L;

        $r0[121] = -3527580439205474383L;

        $r0[122] = -6956282119872554589L;

        $r0[123] = -6281089153129775081L;

        $r0[124] = 853355433004222246L;

        $r0[125] = -1924221946255713479L;

        $r0[126] = 2124075034376372323L;

        $r0[127] = 5881355904936746717L;

        $r0[128] = 1033318428544969251L;

        $r0[129] = 1692585388818821524L;

        $r0[130] = -1245985052454466526L;

        $r0[131] = 1107424405919510210L;

        $r0[132] = -9211670503851965599L;

        $r0[133] = -5975256720516651978L;

        $r0[134] = 963191604767572015L;

        $r0[135] = 4506934758573727688L;

        $r0[136] = -6511972687387035778L;

        $r0[137] = -6714534832456272315L;

        $r0[138] = 7421261837586505858L;

        $r0[139] = 3318186242040429129L;

        $r0[140] = -4402061108394378299L;

        $r0[141] = 1910808081503L;

        $r0[142] = 4771413979138012118L;

        $r0[143] = -3357965141731676491L;

        $r0[144] = -6811660122601107496L;

        $r0[145] = 3247421105326436348L;

        $r0[146] = -1009844908434318049L;

        $r0[147] = 8353265116968520410L;

        $r0[148] = -5881406294935394735L;

        $r0[149] = -7574869783018555510L;

        $r0[150] = 6528592316425799439L;

        $r0[151] = -3049672598698961616L;

        $r0[152] = -3303981966096002009L;

        $r0[153] = 7320455443630736945L;

        $r0[154] = -7351974990356818097L;

        $r0[155] = 2539802313181221187L;

        $r0[156] = -7307523792611951465L;

        $r0[157] = 6084456898448652712L;

        $r0[158] = 1615327116689102472L;

        $r0[159] = 8126548348642832045L;

        $r0[160] = -1094214848903295726L;

        $r0[161] = 6320848846662414801L;

        $r0[162] = -1163799684465161365L;

        $r0[163] = 3439926484095136410L;

        $r0[164] = -7218302546559918104L;

        $r0[165] = 4583261464596863494L;

        $r0[166] = 5278432013075676693L;

        $r0[167] = 672210957064462075L;

        $r0[168] = -5420889727701263133L;

        $r0[169] = -3948047341652367807L;

        $r0[170] = 3753742208681096767L;

        $r0[171] = -5185515461782971584L;

        $r0[172] = -460252340867529358L;

        $r0[173] = 111470777923844445L;

        $r0[174] = 1951374535466601971L;

        $r0[175] = -8875343681432095955L;

        $r0[176] = -4493729248843343338L;

        $r0[177] = 4830799035278983864L;

        $r0[178] = -5224728565293047538L;

        $r0[179] = 6842302225500364445L;

        $r0[180] = -7111193868311747516L;

        $r0[181] = -2729919277420993032L;

        $r0[182] = -5582278241003401657L;

        $r0[183] = -126421769187551098L;

        $r0[184] = -4035721366655415313L;

        $r0[185] = -1986169280154305277L;

        $r0[186] = 3977519900599801820L;

        $r0[187] = 9148781857317432677L;

        $r0[188] = 6468933130968205401L;

        $r0[189] = 8516219711084257782L;

        $r0[190] = 1539015908620793624L;

        $r0[191] = 7527026033758878374L;

        $r0[192] = -1647949680688450337L;

        $r0[193] = 3088835283432281588L;

        $r0[194] = 3651919061693825289L;

        $r0[195] = -8985256062000155568L;

        $r0[196] = -423165018983337331L;

        $r0[197] = -7032056788937726985L;

        $r0[198] = 308165109378616703L;

        $r0[199] = 8884692927086426203L;

        $r0[200] = 2438838841395254149L;

        $r0[201] = -3550173447755953499L;

        $r0[202] = 2823241734971430590L;

        $r0[203] = 3896218688877146334L;

        $r0[204] = 393786506094771122L;

        $r0[205] = -3117973570538943511L;

        $r0[206] = -7973569017697024389L;

        $r0[207] = -8368763565314219996L;

        $r0[208] = 6934559736714979565L;

        $r0[209] = -589348163057397487L;

        $r0[210] = -7554853961030558080L;

        $r0[211] = -6878676038788161577L;

        $r0[212] = -3798065817641571893L;

        $r0[213] = -9101961441510934879L;

        $r0[214] = -4559443103670756675L;

        $r0[215] = -7665374195348870830L;

        $r0[216] = -8336074436196531783L;

        $r0[217] = 4236391428300945648L;

        $r0[218] = 555138268555536248L;

        $r0[219] = 5351590591369890935L;

        $r0[220] = 4306521946498657944L;

        $r0[221] = -7151482210676895604L;

        $r0[222] = 4901816398460471456L;

        $r0[223] = -9033789479800328823L;

        $r0[224] = 7485939926152528684L;

        $r0[225] = -5105994143555176462L;

        $r0[226] = 6245128712556390173L;

        $r0[227] = -4718679834244078161L;

        $r0[228] = -325273111308121687L;

        $r0[229] = 7772052866533484500L;

        $r0[230] = 639373189613950878L;

        $r0[231] = 2515940555210603828L;

        $r0[232] = -2058685867725021174L;

        $r0[233] = 9187445612742136046L;

        $r0[234] = -5771987833248487369L;

        $r0[235] = -2125811817212952004L;

        $r0[236] = -3204735567712096048L;

        $r0[237] = -3393897870002714342L;

        $r0[238] = 1313621308117380133L;

        $r0[239] = 3526835097255131285L;

        $r0[240] = -4953033604042954265L;

        $r0[241] = 8704164972314360376L;

        $r0[242] = -920137909863202916L;

        $r0[243] = 5969067443919232116L;

        $r0[244] = 5791404459833380522L;

        $r0[245] = -1682712826007985785L;

        $r0[246] = 6001456072058810555L;

        $r0[247] = -8273861206301250160L;

        $r0[248] = 2241175407069758350L;

        $r0[249] = -2962551490920225208L;

        $r0[250] = 8359644330926224055L;

        $r0[251] = -8523485772611717717L;

        $r0[252] = -5183265553382750L;

        $r0[253] = -1789270636298447811L;

        $r0[254] = -6471656072873752544L;

        $r0[255] = -1458735953920612486L;

        <org.bouncycastle.crypto.digests.TigerDigest: long[] t1> = $r0;

        $r1 = newarray (long)[256];

        $r1[0] = -1826563305001377480L;

        $r1[1] = -5358963986493047656L;

        $r1[2] = 6213947727727520144L;

        $r1[3] = 5496303794639560149L;

        $r1[4] = -2795981259149962188L;

        $r1[5] = 642450021946863605L;

        $r1[6] = -2925749420550550287L;

        $r1[7] = -4252676236223476327L;

        $r1[8] = -2372897249057438062L;

        $r1[9] = -2455723000952046826L;

        $r1[10] = 8011611286970690052L;

        $r1[11] = 5372247966639775667L;

        $r1[12] = -6490268738015937967L;

        $r1[13] = -265982677241022690L;

        $r1[14] = -1711898199407229911L;

        $r1[15] = -2553549223344005918L;

        $r1[16] = -3655427155680827379L;

        $r1[17] = 1788379855404599063L;

        $r1[18] = 3792259505844355329L;

        $r1[19] = 857793142685420274L;

        $r1[20] = 2176386753693503798L;

        $r1[21] = -2281187609587102471L;

        $r1[22] = -12877901320348396L;

        $r1[23] = 6070247714570225101L;

        $r1[24] = 7358743242340641331L;

        $r1[25] = -8703516059324417162L;

        $r1[26] = 1522910625901990663L;

        $r1[27] = -2134847759353728262L;

        $r1[28] = 5235630359010597374L;

        $r1[29] = -5774648161970196758L;

        $r1[30] = 277273466943670671L;

        $r1[31] = 3580831169916433691L;

        $r1[32] = -1032406685548103719L;

        $r1[33] = 4657750985732713388L;

        $r1[34] = 1177149711660596421L;

        $r1[35] = 8685721698255572101L;

        $r1[36] = -3227632359902186326L;

        $r1[37] = -6349410231276355429L;

        $r1[38] = -4809500581665772080L;

        $r1[39] = -7923309769729008016L;

        $r1[40] = -6726740716384263588L;

        $r1[41] = -4587792071496920925L;

        $r1[42] = -658271017113840853L;

        $r1[43] = 3834592178494549117L;

        $r1[44] = -3853851402329989932L;

        $r1[45] = -8865288174312808228L;

        $r1[46] = 8774750272303345432L;

        $r1[47] = -8428026360225307604L;

        $r1[48] = -3404183201405868250L;

        $r1[49] = 6519077675840655372L;

        $r1[50] = 1009372798613472243L;

        $r1[51] = -4504928615151511518L;

        $r1[52] = 7670504156571609794L;

        $r1[53] = -9068448121725124008L;

        $r1[54] = 7481699948221361317L;

        $r1[55] = 2131352009749933493L;

        $r1[56] = 7854556580946198495L;

        $r1[57] = 5848046147829288198L;

        $r1[58] = 6811751916476253359L;

        $r1[59] = -635956774299390418L;

        $r1[60] = -4737535235939835750L;

        $r1[61] = -1614809042241653147L;

        $r1[62] = 8245611441321613668L;

        $r1[63] = 8087057586628171618L;

        $r1[64] = 5058061449640751271L;

        $r1[65] = -5151918184365513026L;

        $r1[66] = 7212395796113148780L;

        $r1[67] = 8872633840395976086L;

        $r1[68] = 8602726521519041395L;

        $r1[69] = -5885490816789515276L;

        $r1[70] = 6042660761688602872L;

        $r1[71] = 1642367900117110883L;

        $r1[72] = 25924001596622557L;

        $r1[73] = 7531865058110106323L;

        $r1[74] = 4223621278438660202L;

        $r1[75] = 3926684511422013614L;

        $r1[76] = -2064363959953346089L;

        $r1[77] = 5939130201053773422L;

        $r1[78] = 8312208923375399755L;

        $r1[79] = 5278156969609628584L;

        $r1[80] = -5712322089306707131L;

        $r1[81] = 3610014133393185213L;

        $r1[82] = -8850224129823554669L;

        $r1[83] = -7989215126425784091L;

        $r1[84] = 7953444341930717599L;

        $r1[85] = -5072589324995998940L;

        $r1[86] = -3677986556148923193L;

        $r1[87] = 5127306049615917691L;

        $r1[88] = 9121210965518562125L;

        $r1[89] = 8462056263389103903L;

        $r1[90] = -743704981880018871L;

        $r1[91] = 5658738406708581754L;

        $r1[92] = 3084862250275496789L;

        $r1[93] = -2839477530259368618L;

        $r1[94] = -3966384508771725354L;

        $r1[95] = -3487534071112132806L;

        $r1[96] = -123994483119243460L;

        $r1[97] = -1345606558677941971L;

        $r1[98] = -8999779576894164844L;

        $r1[99] = -4191785782441631580L;

        $r1[100] = 1116769798908306816L;

        $r1[101] = 1871732813531574911L;

        $r1[102] = -5639228995346094013L;

        $r1[103] = 2050857069623328786L;

        $r1[104] = 942713319182180155L;

        $r1[105] = -8555767913901511542L;

        $r1[106] = -1938713800388260250L;

        $r1[107] = 7028952989422544417L;

        $r1[108] = 9018945159409650955L;

        $r1[109] = -9098571702620193189L;

        $r1[110] = 512456053301416255L;

        $r1[111] = -4053543709501018729L;

        $r1[112] = -4330900206871259305L;

        $r1[113] = -1512795427272957464L;

        $r1[114] = -3102984968199159270L;

        $r1[115] = -7389706432295929941L;

        $r1[116] = -6638196300801425917L;

        $r1[117] = -7112719166685012944L;

        $r1[118] = 4569666897377300404L;

        $r1[119] = -7151449437793514816L;

        $r1[120] = 4462677101358564049L;

        $r1[121] = 3679240545963649394L;

        $r1[122] = -4129112553160565951L;

        $r1[123] = 776201060342576796L;

        $r1[124] = -1202834617519492059L;

        $r1[125] = -842133208882402856L;

        $r1[126] = -8445297248460022090L;

        $r1[127] = 3458390008116962295L;

        $r1[128] = -8107400727032609416L;

        $r1[129] = 6618311662604863029L;

        $r1[130] = 4790267690900900096L;

        $r1[131] = 1716087693007726108L;

        $r1[132] = 4148457837926911568L;

        $r1[133] = -5418957485852076861L;

        $r1[134] = 8968309666649857421L;

        $r1[135] = -2611360075161572255L;

        $r1[136] = 6968029403465067289L;

        $r1[137] = -3584187592496365262L;

        $r1[138] = 500987773930853904L;

        $r1[139] = -8168172799095912208L;

        $r1[140] = 2355660670689429871L;

        $r1[141] = 3178293543037890097L;

        $r1[142] = -5583593033549110520L;

        $r1[143] = -6297125087914569009L;

        $r1[144] = 894835714693979080L;

        $r1[145] = -5305826774090122525L;

        $r1[146] = -348051181029808153L;

        $r1[147] = 352461093517089771L;

        $r1[148] = 5441805419015688358L;

        $r1[149] = -3049381223523647492L;

        $r1[150] = 3501129463520285556L;

        $r1[151] = -4980126173351398283L;

        $r1[152] = -8303518980934164731L;

        $r1[153] = -7446347735086057113L;

        $r1[154] = 2615208954064994172L;

        $r1[155] = -522603252265687058L;

        $r1[156] = 2237558221535645089L;

        $r1[157] = -3911919600557704777L;

        $r1[158] = -5210711461681408094L;

        $r1[159] = 7102368496127332321L;

        $r1[160] = -7719366717024918019L;

        $r1[161] = 399232473491847935L;

        $r1[162] = 7140013836546489399L;

        $r1[163] = -8234741283244511424L;

        $r1[164] = -2231392863125672626L;

        $r1[165] = -7060197492102713059L;

        $r1[166] = 5038446221635409553L;

        $r1[167] = 6294769326316815049L;

        $r1[168] = -387802090031244907L;

        $r1[169] = -3350046130045840024L;

        $r1[170] = -2666808022981539793L;

        $r1[171] = -6161723600240465717L;

        $r1[172] = 2783168786742146440L;

        $r1[173] = 1986639352536355296L;

        $r1[174] = -1988727118208302602L;

        $r1[175] = 8799325730492140254L;

        $r1[176] = 7305467695957075406L;

        $r1[177] = 2551364576700533681L;

        $r1[178] = -6081001307066006598L;

        $r1[179] = -4889804522683628146L;

        $r1[180] = -7324859595388608820L;

        $r1[181] = -6885748294050442179L;

        $r1[182] = 5760535140236403614L;

        $r1[183] = 1501217875009212803L;

        $r1[184] = -1291632093432900094L;

        $r1[185] = -7706153952057205239L;

        $r1[186] = 6454505253869455699L;

        $r1[187] = 4319683495060363885L;

        $r1[188] = -6244922308576078969L;

        $r1[189] = -6818767823778904188L;

        $r1[190] = 2960027307368769952L;

        $r1[191] = 8570410701452901115L;

        $r1[192] = 160427886842421800L;

        $r1[193] = -4969938860820756853L;

        $r1[194] = -4627442630994782527L;

        $r1[195] = -3285648034072744413L;

        $r1[196] = -7606118162332863056L;

        $r1[197] = 6176075057452006273L;

        $r1[198] = 7582622308322968760L;

        $r1[199] = 6649763778434249567L;

        $r1[200] = -183456705028906550L;

        $r1[201] = 2699628156079216836L;

        $r1[202] = -1767231947251866451L;

        $r1[203] = 2945653313023238585L;

        $r1[204] = 2813841150172635667L;

        $r1[205] = 8163160757531991904L;

        $r1[206] = -7212422464109809801L;

        $r1[207] = -5924618728816493121L;

        $r1[208] = 649720531103423106L;

        $r1[209] = 6394120152722619742L;

        $r1[210] = -934965811117111118L;

        $r1[211] = 4753049982369101610L;

        $r1[212] = 2408845162401379802L;

        $r1[213] = 1253140645631747605L;

        $r1[214] = -7799048643966905049L;

        $r1[215] = -1584266091164108743L;

        $r1[216] = -456002869645138839L;

        $r1[217] = 8367255505928917714L;

        $r1[218] = 91400768704631494L;

        $r1[219] = -4464375255980341934L;

        $r1[220] = 1938401838693046941L;

        $r1[221] = -7520293791609324052L;

        $r1[222] = -8636597607271566304L;

        $r1[223] = 3990523136699180870L;

        $r1[224] = 7731749711829208666L;

        $r1[225] = 4875740361372990282L;

        $r1[226] = 9173201802070489451L;

        $r1[227] = 7834799413446679311L;

        $r1[228] = -6433392137177717442L;

        $r1[229] = 3325271250982575439L;

        $r1[230] = -8730608807451740020L;

        $r1[231] = -2389358865336045484L;

        $r1[232] = -9209652622095187875L;

        $r1[233] = 4359958813756723849L;

        $r1[234] = 4539467735137059035L;

        $r1[235] = -5508531677782308793L;

        $r1[236] = 1312945880979454078L;

        $r1[237] = -947428475416758718L;

        $r1[238] = 4958176066159770025L;

        $r1[239] = 1374196081931091686L;

        $r1[240] = -6918434684938959032L;

        $r1[241] = -1095184559281703237L;

        $r1[242] = -1411469442470588444L;

        $r1[243] = 3145683508650593868L;

        $r1[244] = -6039522865352658195L;

        $r1[245] = -3804467173852034031L;

        $r1[246] = -6563710254104815428L;

        $r1[247] = 6868326517302426863L;

        $r1[248] = 6758043032196830276L;

        $r1[249] = 5827167051130463242L;

        $r1[250] = 4074828688890126937L;

        $r1[251] = 3293442170241026694L;

        $r1[252] = -8065760984084440343L;

        $r1[253] = 5618223731912049521L;

        $r1[254] = -3014545685365689991L;

        $r1[255] = 2520538699101199374L;

        <org.bouncycastle.crypto.digests.TigerDigest: long[] t2> = $r1;

        $r2 = newarray (long)[256];

        $r2[0] = -819712100864953445L;

        $r2[1] = 5224129141031473793L;

        $r2[2] = -1683494792012715969L;

        $r2[3] = 3214246200928423523L;

        $r2[4] = -2720183745931134014L;

        $r2[5] = 3432136347919366758L;

        $r2[6] = -6844377996819786796L;

        $r2[7] = -4697838837464539535L;

        $r2[8] = -3480123136110369641L;

        $r2[9] = -5257202687841710057L;

        $r2[10] = -3160671586143389472L;

        $r2[11] = -8143604544638974599L;

        $r2[12] = -7582212342885995579L;

        $r2[13] = 7399204607179264370L;

        $r2[14] = 2410740665327626235L;

        $r2[15] = -5531319028708868287L;

        $r2[16] = -1132011872800708955L;

        $r2[17] = -8244108713684067595L;

        $r2[18] = -8100030830173699490L;

        $r2[19] = -865042824158552761L;

        $r2[20] = -1406263208487841571L;

        $r2[21] = -743744098937138031L;

        $r2[22] = -7255025749313877870L;

        $r2[23] = 5293216666010209768L;

        $r2[24] = -6686350151342941087L;

        $r2[25] = 505172698323928814L;

        $r2[26] = -8504163865352868456L;

        $r2[27] = -6039198373597746942L;

        $r2[28] = 2102395425312436973L;

        $r2[29] = -1480681786698906867L;

        $r2[30] = 6364975572501938982L;

        $r2[31] = -7035658141633266754L;

        $r2[32] = -8022507636838873565L;

        $r2[33] = -4480433668109774745L;

        $r2[34] = 2328871106231838244L;

        $r2[35] = 1378680973804076623L;

        $r2[36] = -3586772320324138908L;

        $r2[37] = -2755027987269747529L;

        $r2[38] = 7519553577929664460L;

        $r2[39] = 460638964809724379L;

        $r2[40] = -99820877092259348L;

        $r2[41] = 6562793443469826132L;

        $r2[42] = 1580997072160885165L;

        $r2[43] = 859005579845670993L;

        $r2[44] = -3058956174016989192L;

        $r2[45] = -3379814835910611228L;

        $r2[46] = -3936971176641920257L;

        $r2[47] = -8723858077265400670L;

        $r2[48] = 3784640730692549981L;

        $r2[49] = -2514946515147142870L;

        $r2[50] = -718211188705137671L;

        $r2[51] = 5877026246039211124L;

        $r2[52] = -8623573777109189598L;

        $r2[53] = -6383628662057423219L;

        $r2[54] = 4036482174343220762L;

        $r2[55] = -6451625591996463702L;

        $r2[56] = -5974472282720051687L;

        $r2[57] = -4119613249555124729L;

        $r2[58] = -4204805774663870152L;

        $r2[59] = 1637614953354483776L;

        $r2[60] = 1768420517056302872L;

        $r2[61] = -6063481615036972513L;

        $r2[62] = 4469119677486524438L;

        $r2[63] = 6862084742702193339L;

        $r2[64] = 2666591392741323510L;

        $r2[65] = 1958911907595193257L;

        $r2[66] = 2078226524874004819L;

        $r2[67] = 9182514826368667184L;

        $r2[68] = -5667455777910095811L;

        $r2[69] = -6961112304229951815L;

        $r2[70] = 7984583406477441100L;

        $r2[71] = 5152724216922222472L;

        $r2[72] = -2011927023009527807L;

        $r2[73] = -212234053999724107L;

        $r2[74] = 4838452819165657451L;

        $r2[75] = -8437636414480207278L;

        $r2[76] = -4364095106444861094L;

        $r2[77] = -8843563141488759799L;

        $r2[78] = -952547977505311611L;

        $r2[79] = 7192165871822020282L;

        $r2[80] = -8957588412064574366L;

        $r2[81] = 4293149567017494192L;

        $r2[82] = 6266031685674981260L;

        $r2[83] = 3297360663327026118L;

        $r2[84] = -7424220229153493459L;

        $r2[85] = 1848411117523063487L;

        $r2[86] = 4803542876947788811L;

        $r2[87] = -6514007507455064743L;

        $r2[88] = 3918859449562378630L;

        $r2[89] = 7730455268829558643L;

        $r2[90] = 2300310138214025757L;

        $r2[91] = 5073098731442674389L;

        $r2[92] = -1867327214174801803L;

        $r2[93] = -5119713925479725192L;

        $r2[94] = 2481833961960165662L;

        $r2[95] = 3483465760582650171L;

        $r2[96] = -3799159280037322961L;

        $r2[97] = -2614176868807805682L;

        $r2[98] = 3683901813415452623L;

        $r2[99] = -6586240258798896426L;

        $r2[100] = -6280196637815307286L;

        $r2[101] = -6878770741467980580L;

        $r2[102] = -8649528727307138543L;

        $r2[103] = 1263269478536931145L;

        $r2[104] = -7419991789716909164L;

        $r2[105] = -5769815365846261236L;

        $r2[106] = 7280608515770959015L;

        $r2[107] = 7790930297845911262L;

        $r2[108] = -5059374975740702796L;

        $r2[109] = -6705059931318638429L;

        $r2[110] = 8900403996915095151L;

        $r2[111] = 8816891275549542045L;

        $r2[112] = -476483339080012016L;

        $r2[113] = -1232282160203339243L;

        $r2[114] = 3119849171172694992L;

        $r2[115] = 7662494604586420558L;

        $r2[116] = 149203013753700084L;

        $r2[117] = 5530308158539891708L;

        $r2[118] = 4143436129840869576L;

        $r2[119] = -3411623459852687238L;

        $r2[120] = -1026352410626214551L;

        $r2[121] = -8324492521276276327L;

        $r2[122] = 6707891355510602429L;

        $r2[123] = 5715986277202524800L;

        $r2[124] = -393206988093480487L;

        $r2[125] = 4600951196636466039L;

        $r2[126] = -4593511655318796512L;

        $r2[127] = 9065747437067558111L;

        $r2[128] = -8901650410637853864L;

        $r2[129] = 2592076422926394627L;

        $r2[130] = 228032410479194937L;

        $r2[131] = 6667480117540136779L;

        $r2[132] = 588648581915253038L;

        $r2[133] = -2336950474993240516L;

        $r2[134] = 3634608293302267354L;

        $r2[135] = 1202024298738736502L;

        $r2[136] = 6299068367672194603L;

        $r2[137] = 1932346445954743183L;

        $r2[138] = 7573861666572117031L;

        $r2[139] = -61815566784892605L;

        $r2[140] = 3549459440654955014L;

        $r2[141] = 8158286332358861718L;

        $r2[142] = -7670372790848096527L;

        $r2[143] = -515956617046547146L;

        $r2[144] = -3963219078081420846L;

        $r2[145] = 8464707252757847009L;

        $r2[146] = 397230465775035974L;

        $r2[147] = -4957137534187579283L;

        $r2[148] = 675316509725923312L;

        $r2[149] = 2628613740627889320L;

        $r2[150] = -2532211618462009391L;

        $r2[151] = 5345232712238813773L;

        $r2[152] = -4776658006885916949L;

        $r2[153] = 3062009004852183467L;

        $r2[154] = -2381228231588757251L;

        $r2[155] = 74184876899443393L;

        $r2[156] = -1882978417976974457L;

        $r2[157] = 9131956796466541322L;

        $r2[158] = 8604540880985875509L;

        $r2[159] = 22099178757704754L;

        $r2[160] = -1755823172185693422L;

        $r2[161] = -7115222264497037070L;

        $r2[162] = 2945473010562318822L;

        $r2[163] = -3264392033958139096L;

        $r2[164] = 2789803412788518275L;

        $r2[165] = -5023951698716947073L;

        $r2[166] = -2879016497062593138L;

        $r2[167] = 1017933909609308228L;

        $r2[168] = -2136777458168640962L;

        $r2[169] = 8230916861376446652L;

        $r2[170] = -4050239832011059757L;

        $r2[171] = 8983610917420146076L;

        $r2[172] = 8543542228473779244L;

        $r2[173] = 1721876046845854392L;

        $r2[174] = -2252284190053484385L;

        $r2[175] = 5559864569757380000L;

        $r2[176] = 4937681992884682033L;

        $r2[177] = -5441254327629638811L;

        $r2[178] = -9066842030330493037L;

        $r2[179] = 5670390740934713304L;

        $r2[180] = 2219071780988037499L;

        $r2[181] = 7008521987288882964L;

        $r2[182] = 6028345117330418825L;

        $r2[183] = -7500176903196747008L;

        $r2[184] = 7071075452076274675L;

        $r2[185] = -1604175089662029304L;

        $r2[186] = 1445978213955986826L;

        $r2[187] = -7979034942316814172L;

        $r2[188] = 951333080223670799L;

        $r2[189] = 6099155138413436065L;

        $r2[190] = -4305900099056973791L;

        $r2[191] = -6236769450809946705L;

        $r2[192] = -2912898243239114769L;

        $r2[193] = -2065740773420267803L;

        $r2[194] = -3827177893057145596L;

        $r2[195] = 1340472571717533606L;

        $r2[196] = -3648363291767490877L;

        $r2[197] = -5756567784146095673L;

        $r2[198] = 4461163794677446508L;

        $r2[199] = -5848717005041324781L;

        $r2[200] = 3341940384398866564L;

        $r2[201] = -4882598382547103543L;

        $r2[202] = 3829921822543532494L;

        $r2[203] = 899996630714791418L;

        $r2[204] = 6478536468284266291L;

        $r2[205] = 2994597028103565543L;

        $r2[206] = 6124895672834828926L;

        $r2[207] = -8376542604899771579L;

        $r2[208] = -4412652237062246342L;

        $r2[209] = -7724700941812371646L;

        $r2[210] = 728866099714851926L;

        $r2[211] = 339635816873858970L;

        $r2[212] = -1153572816294167456L;

        $r2[213] = -592215260546165052L;

        $r2[214] = -7150089944179092253L;

        $r2[215] = 8700134485486622004L;

        $r2[216] = -5552633324984327062L;

        $r2[217] = -1298517758115136471L;

        $r2[218] = 8749621007278605595L;

        $r2[219] = -6133576477421907076L;

        $r2[220] = 4199955888901663150L;

        $r2[221] = -5341432795218012713L;

        $r2[222] = -239890188217778377L;

        $r2[223] = 8106773277103211697L;

        $r2[224] = -2229320058079270256L;

        $r2[225] = 5930619164422717276L;

        $r2[226] = 4368075505682949467L;

        $r2[227] = 4623369983466747106L;

        $r2[228] = 8403817438537116875L;

        $r2[229] = -5327756068839670070L;

        $r2[230] = 1151085119119418028L;

        $r2[231] = 6933250016240323664L;

        $r2[232] = 6814675599201764477L;

        $r2[233] = -2995490164984896514L;

        $r2[234] = 5778917359701360712L;

        $r2[235] = -7334472845550608018L;

        $r2[236] = -9212347808668562614L;

        $r2[237] = -7786744047088363785L;

        $r2[238] = 4025584697920591189L;

        $r2[239] = 5446500518121291045L;

        $r2[240] = -7866665254384488512L;

        $r2[241] = -352887593087136842L;

        $r2[242] = 8290028954029701554L;

        $r2[243] = -9087549732707247512L;

        $r2[244] = 7234639242841923679L;

        $r2[245] = 2860911103167493259L;

        $r2[246] = -3716770017321781837L;

        $r2[247] = 7444204691177324181L;

        $r2[248] = 8012224255291120002L;

        $r2[249] = 6549509778060988165L;

        $r2[250] = -4656265058823564969L;

        $r2[251] = -1532696805485516055L;

        $r2[252] = 4993489137437819341L;

        $r2[253] = 4727924503904151836L;

        $r2[254] = -3180601338503688336L;

        $r2[255] = 7858325008468642462L;

        <org.bouncycastle.crypto.digests.TigerDigest: long[] t3> = $r2;

        $r3 = newarray (long)[256];

        $r3[0] = 6561287832113134677L;

        $r3[1] = 1893413629145602549L;

        $r3[2] = -6205320776685678598L;

        $r3[3] = 7334764389497132503L;

        $r3[4] = 421942495471316930L;

        $r3[5] = -9085229951450268347L;

        $r3[6] = 5948965432456907277L;

        $r3[7] = -6872877502453521409L;

        $r3[8] = 4831763938021002582L;

        $r3[9] = -4272888574428519313L;

        $r3[10] = 5678704711006605406L;

        $r3[11] = 4536654317168965104L;

        $r3[12] = 802439540090739142L;

        $r3[13] = 1728614842704535657L;

        $r3[14] = 7852250862810361152L;

        $r3[15] = -2970083550513149273L;

        $r3[16] = 6999787169451700297L;

        $r3[17] = 327545298748531618L;

        $r3[18] = -2764213178345403342L;

        $r3[19] = 9213801181845131435L;

        $r3[20] = -5950018878971805109L;

        $r3[21] = -2186876610533351532L;

        $r3[22] = -3100863505161590557L;

        $r3[23] = -194921935069456237L;

        $r3[24] = 2629011484744925146L;

        $r3[25] = 679658461659738748L;

        $r3[26] = -3068808746888436091L;

        $r3[27] = 2845612796809381245L;

        $r3[28] = -7722098226173915145L;

        $r3[29] = 7273530125705028225L;

        $r3[30] = 4410076014410041819L;

        $r3[31] = -2304212329100317967L;

        $r3[32] = -45936371244098582L;

        $r3[33] = -5712723046817425393L;

        $r3[34] = 8922873767131958175L;

        $r3[35] = -3382299200423854708L;

        $r3[36] = -3236816455951139535L;

        $r3[37] = -4036747678298392505L;

        $r3[38] = 5226125132195873799L;

        $r3[39] = 2940247444995640068L;

        $r3[40] = -4418018165041970817L;

        $r3[41] = 6671397049608501367L;

        $r3[42] = 8821388386505911040L;

        $r3[43] = -3580187736799586652L;

        $r3[44] = -1447046360908978430L;

        $r3[45] = 2147098610462912262L;

        $r3[46] = -1956265881574637814L;

        $r3[47] = -2856917834249223582L;

        $r3[48] = 5141735866072457044L;

        $r3[49] = 3265027362719053310L;

        $r3[50] = -6450920645962515936L;

        $r3[51] = 6017965846669640613L;

        $r3[52] = 4287051124723328232L;

        $r3[53] = 8655371236021312991L;

        $r3[54] = -1156847972119148173L;

        $r3[55] = 2365060307249772354L;

        $r3[56] = 1630631832073154105L;

        $r3[57] = 1828719980936758421L;

        $r3[58] = 2674037562503248056L;

        $r3[59] = -7295616781251116690L;

        $r3[60] = -1363141094472255887L;

        $r3[61] = 204405347605452144L;

        $r3[62] = 5797523068258732423L;

        $r3[63] = 8122903338174012641L;

        $r3[64] = 8739821670855295734L;

        $r3[65] = 961841682317282412L;

        $r3[66] = 3487881148722869326L;

        $r3[67] = -7995384159388863717L;

        $r3[68] = 7665614591556333409L;

        $r3[69] = -7831409025227614873L;

        $r3[70] = -822907162794399275L;

        $r3[71] = -1691135090558933875L;

        $r3[72] = 3797048810173566205L;

        $r3[73] = -2578904300750297763L;

        $r3[74] = -3410711173298709536L;

        $r3[75] = 577633178325057199L;

        $r3[76] = -7379212936790430923L;

        $r3[77] = -9035774148364232240L;

        $r3[78] = 2754939666238358593L;

        $r3[79] = 8444132705799138470L;

        $r3[80] = -7894221632442939675L;

        $r3[81] = 3065464070595795438L;

        $r3[82] = -6610449357786147779L;

        $r3[83] = 3184382822055416328L;

        $r3[84] = 5740274767717360273L;

        $r3[85] = 6179930651821454089L;

        $r3[86] = -4826152258144849421L;

        $r3[87] = 5115645765347262247L;

        $r3[88] = 4602739923119569497L;

        $r3[89] = -3465801151231271281L;

        $r3[90] = -6359599548771540712L;

        $r3[91] = -1926152657970122275L;

        $r3[92] = -8468989295385802946L;

        $r3[93] = -6500580506154635033L;

        $r3[94] = 4125629484990072616L;

        $r3[95] = -6834670983768857044L;

        $r3[96] = -4845179353893108027L;

        $r3[97] = 4230689665262407186L;

        $r3[98] = -1849684427061896393L;

        $r3[99] = 9047540561879224854L;

        $r3[100] = 1112218670439199625L;

        $r3[101] = 8426162753992594376L;

        $r3[102] = -5990769681480860131L;

        $r3[103] = -2503790423972405993L;

        $r3[104] = 4028912247909671416L;

        $r3[105] = -409156412951274838L;

        $r3[106] = -8377831951645714695L;

        $r3[107] = -1152570669068554652L;

        $r3[108] = -6327418252815316840L;

        $r3[109] = -3725559206061705268L;

        $r3[110] = 1964465731879646024L;

        $r3[111] = -2441760721249263597L;

        $r3[112] = 6946242362685775318L;

        $r3[113] = -3298979752616086841L;

        $r3[114] = -7236283555339513389L;

        $r3[115] = -1419193050620496778L;

        $r3[116] = -93735727476260563L;

        $r3[117] = -5905399081030416230L;

        $r3[118] = 2507248404937789251L;

        $r3[119] = 7581261321693772141L;

        $r3[120] = -8836566033099333598L;

        $r3[121] = 520172056875071564L;

        $r3[122] = 3738403388662150470L;

        $r3[123] = -2357506837776452040L;

        $r3[124] = -5002739851233418934L;

        $r3[125] = 930169001927683533L;

        $r3[126] = 6889748805645999668L;

        $r3[127] = -1031349426815687751L;

        $r3[128] = 7941113837267854943L;

        $r3[129] = -1243211017071393764L;

        $r3[130] = -2154628650105719635L;

        $r3[131] = 6332043450707792835L;

        $r3[132] = 3386824618901547762L;

        $r3[133] = 7130458179308482168L;

        $r3[134] = 1271522336860346025L;

        $r3[135] = -997034324337437613L;

        $r3[136] = 4823850509807911142L;

        $r3[137] = 3107332511049695348L;

        $r3[138] = 5437793788182680416L;

        $r3[139] = -8315628002795417155L;

        $r3[140] = 1494290439970088554L;

        $r3[141] = -8609438560643873897L;

        $r3[142] = -8207953325454440687L;

        $r3[143] = -5432621302919780015L;

        $r3[144] = 1159256241058966379L;

        $r3[145] = 1026141471931805870L;

        $r3[146] = -8215608786054685932L;

        $r3[147] = -609691062749569444L;

        $r3[148] = 7511556330643118785L;

        $r3[149] = -3915792337899679783L;

        $r3[150] = 3932170512244996561L;

        $r3[151] = 6834333685245251200L;

        $r3[152] = 4355290964656419152L;

        $r3[153] = 6487547078612259600L;

        $r3[154] = 6267880520331323438L;

        $r3[155] = -1545475867304599653L;

        $r3[156] = 8190919284549556346L;

        $r3[157] = 3366895789332200348L;

        $r3[158] = 2444540809879438627L;

        $r3[159] = 6459524513146455969L;

        $r3[160] = 4077716903750958194L;

        $r3[161] = -6168929569432701476L;

        $r3[162] = -6973483665415634802L;

        $r3[163] = -5197441416039796052L;

        $r3[164] = 7734160491610189202L;

        $r3[165] = 7910254887717195099L;

        $r3[166] = 3836881802794822270L;

        $r3[167] = 8311228008842563790L;

        $r3[168] = 730509642500215940L;

        $r3[169] = -650400159804944995L;

        $r3[170] = -5124223765383482859L;

        $r3[171] = 3579688877020158541L;

        $r3[172] = 8591780283260295173L;

        $r3[173] = 5028082178778891827L;

        $r3[174] = -498814760953987530L;

        $r3[175] = -2709709455026140056L;

        $r3[176] = 5487541034902828271L;

        $r3[177] = 8530400576707172340L;

        $r3[178] = -7604535187505054453L;

        $r3[179] = -869656751120750718L;

        $r3[180] = 4656569414526204412L;

        $r3[181] = 491061932033469878L;

        $r3[182] = 8035458231926703496L;

        $r3[183] = 137019260109594401L;

        $r3[184] = 7421708309958176805L;

        $r3[185] = 8223709417363553275L;

        $r3[186] = 5401705824239018731L;

        $r3[187] = -7162608250562934562L;

        $r3[188] = 5308870500428712900L;

        $r3[189] = -5508949737295341638L;

        $r3[190] = 1376856236535589493L;

        $r3[191] = -5655908917112005032L;

        $r3[192] = -7100674984259216372L;

        $r3[193] = 1332977380922036690L;

        $r3[194] = 3015788518022419172L;

        $r3[195] = -6718854486329987908L;

        $r3[196] = 6396540069380292132L;

        $r3[197] = 2034188120276215631L;

        $r3[198] = -1655134238111203034L;

        $r3[199] = -509741179510489141L;

        $r3[200] = 3623665942510192329L;

        $r3[201] = -9164935270648710301L;

        $r3[202] = 1765784450088366494L;

        $r3[203] = 5837777785993897047L;

        $r3[204] = 1564973338399864744L;

        $r3[205] = -2605395199060435761L;

        $r3[206] = 4964475598524693274L;

        $r3[207] = -5312043978489901415L;

        $r3[208] = 6706291041494563888L;

        $r3[209] = -789946623649963734L;

        $r3[210] = -8091303779971721549L;

        $r3[211] = 7456716478970921562L;

        $r3[212] = -335263357675197259L;

        $r3[213] = -8515348892102079999L;

        $r3[214] = -7048796562806032069L;

        $r3[215] = -233028078259189719L;

        $r3[216] = 284725780453796946L;

        $r3[217] = -3832073186324226638L;

        $r3[218] = -4921235094493811069L;

        $r3[219] = -5089093504863659344L;

        $r3[220] = -5607539644671350465L;

        $r3[221] = -8911681616096439592L;

        $r3[222] = -4743899514573401058L;

        $r3[223] = -7664321526450198170L;

        $r3[224] = -4599281686566632149L;

        $r3[225] = 2560491659082246267L;

        $r3[226] = 8971180328015050686L;

        $r3[227] = 2265540171276805379L;

        $r3[228] = 6093561527083620308L;

        $r3[229] = 12169565841013306L;

        $r3[230] = 9128413284208255679L;

        $r3[231] = -4178722056535276608L;

        $r3[232] = -8960148414521589626L;

        $r3[233] = -4216952774774654326L;

        $r3[234] = -5374970407177951367L;

        $r3[235] = -6668788646589711127L;

        $r3[236] = -2946910590031425822L;

        $r3[237] = -8674853389405194592L;

        $r3[238] = -7535980417822448849L;

        $r3[239] = -6115357923114297461L;

        $r3[240] = -8065837346967928004L;

        $r3[241] = -7487037274649424496L;

        $r3[242] = -2061373546992596293L;

        $r3[243] = -5783192355322733388L;

        $r3[244] = 7153300451507295513L;

        $r3[245] = -8779488031786375734L;

        $r3[246] = 2187906506867626476L;

        $r3[247] = 5612681432830855607L;

        $r3[248] = -4653220181978985551L;

        $r3[249] = 4688837593722596333L;

        $r3[250] = -3815667051463559517L;

        $r3[251] = -1779743783662362556L;

        $r3[252] = -3650491565905270770L;

        $r3[253] = -4529053496248414107L;

        $r3[254] = -4021111997381021802L;

        $r3[255] = -4350414089199835873L;

        <org.bouncycastle.crypto.digests.TigerDigest: long[] t4> = $r3;

        return;
    }
}
