public final class org.apache.poi.ss.formula.constant.ConstantValueParser extends java.lang.Object
{
    private static final int TYPE_EMPTY;
    private static final int TYPE_NUMBER;
    private static final int TYPE_STRING;
    private static final int TYPE_BOOLEAN;
    private static final int TYPE_ERROR_CODE;
    private static final int TRUE_ENCODING;
    private static final int FALSE_ENCODING;
    private static final java.lang.Object EMPTY_REPRESENTATION;

    private void <init>()
    {
        org.apache.poi.ss.formula.constant.ConstantValueParser r0;

        r0 := @this: org.apache.poi.ss.formula.constant.ConstantValueParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object[] parse(org.apache.poi.util.LittleEndianInput, int)
    {
        java.lang.Object[] r0;
        int i0, $i1, i2;
        org.apache.poi.util.LittleEndianInput r1;
        java.lang.Object $r2;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        i0 := @parameter1: int;

        r0 = newarray (java.lang.Object)[i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object readAConstantValue(org.apache.poi.util.LittleEndianInput)>(r1);

        r0[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static java.lang.Object readAConstantValue(org.apache.poi.util.LittleEndianInput)
    {
        java.lang.Double $r12;
        byte $b0;
        org.apache.poi.util.LittleEndianInput r0;
        int $i1, $i2, $i3;
        java.lang.String $r3, $r11;
        double $d0;
        org.apache.poi.ss.formula.constant.ErrorConstant $r1;
        java.lang.RuntimeException $r14;
        java.lang.Object $r2, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r13;

        r0 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $b0 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: byte readByte()>();

        $i2 = (int) $b0;

        lookupswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 4: goto label4;
            case 16: goto label5;
            default: goto label6;
        };

     label1:
        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: long readLong()>();

        $r5 = <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object EMPTY_REPRESENTATION>;

        return $r5;

     label2:
        $r12 = new java.lang.Double;

        $d0 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: double readDouble()>();

        specialinvoke $r12.<java.lang.Double: void <init>(double)>($d0);

        return $r12;

     label3:
        $r3 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String readUnicodeString(org.apache.poi.util.LittleEndianInput)>(r0);

        return $r3;

     label4:
        $r2 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object readBoolean(org.apache.poi.util.LittleEndianInput)>(r0);

        return $r2;

     label5:
        $i1 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        $r1 = staticinvoke <org.apache.poi.ss.formula.constant.ErrorConstant: org.apache.poi.ss.formula.constant.ErrorConstant valueOf(int)>($i1);

        return $r1;

     label6:
        $r14 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown grbit value (");

        $i3 = (int) $b0;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r14;
    }

    private static java.lang.Object readBoolean(org.apache.poi.util.LittleEndianInput)
    {
        long $l0;
        java.lang.RuntimeException $r10;
        byte b2;
        org.apache.poi.util.LittleEndianInput r0;
        int $i1, $i3, $i4;
        java.lang.Boolean $r1, $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $l0 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: long readLong()>();

        $i1 = (int) $l0;

        b2 = (byte) $i1;

        $i3 = (int) b2;

        lookupswitch($i3)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r2;

     label2:
        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r1;

     label3:
        $r10 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected boolean encoding (");

        $i4 = (int) b2;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r10;
    }

    public static int getEncodedSize(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        i3 = $i0 * 1;

        i4 = 0;

     label1:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label2;

        $r1 = r0[i4];

        $i2 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: int getEncodedSize(java.lang.Object)>($r1);

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    private static int getEncodedSize(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0, $r1;
        java.lang.Class $r2;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object EMPTY_REPRESENTATION>;

        if r0 != $r1 goto label1;

        return 8;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Ljava/lang/Boolean;" goto label2;

        if $r2 == class "Ljava/lang/Double;" goto label2;

        if $r2 != class "Lorg/apache/poi/ss/formula/constant/ErrorConstant;" goto label3;

     label2:
        return 8;

     label3:
        r3 = (java.lang.String) r0;

        $i0 = staticinvoke <org.apache.poi.util.StringUtil: int getEncodedSize(java.lang.String)>(r3);

        return $i0;
    }

    public static void encode(org.apache.poi.util.LittleEndianOutput, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.poi.util.LittleEndianOutput r1;
        int $i0, i1;
        java.lang.Object $r2;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        r0 := @parameter1: java.lang.Object[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: void encodeSingleValue(org.apache.poi.util.LittleEndianOutput,java.lang.Object)>(r1, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void encodeSingleValue(org.apache.poi.util.LittleEndianOutput, java.lang.Object)
    {
        java.lang.IllegalStateException $r2;
        java.lang.Double r12;
        long $l1, l2;
        org.apache.poi.util.LittleEndianOutput r10;
        int $i0;
        java.lang.Boolean r11;
        java.lang.String $r6, $r9, r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        org.apache.poi.ss.formula.constant.ErrorConstant r14;
        java.lang.Object r0, $r1;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;

        r10 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        r0 := @parameter1: java.lang.Object;

        $r1 = <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object EMPTY_REPRESENTATION>;

        if r0 != $r1 goto label1;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(0);

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeLong(long)>(0L);

        return;

     label1:
        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label4;

        r11 = (java.lang.Boolean) r0;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(4);

        $z4 = virtualinvoke r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label2;

        $l1 = 1L;

        goto label3;

     label2:
        $l1 = 0L;

     label3:
        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeLong(long)>($l1);

        return;

     label4:
        $z1 = r0 instanceof java.lang.Double;

        if $z1 == 0 goto label5;

        r12 = (java.lang.Double) r0;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(1);

        $d0 = virtualinvoke r12.<java.lang.Double: double doubleValue()>();

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeDouble(double)>($d0);

        return;

     label5:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label6;

        r13 = (java.lang.String) r0;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(2);

        staticinvoke <org.apache.poi.util.StringUtil: void writeUnicodeString(org.apache.poi.util.LittleEndianOutput,java.lang.String)>(r10, r13);

        return;

     label6:
        $z3 = r0 instanceof org.apache.poi.ss.formula.constant.ErrorConstant;

        if $z3 == 0 goto label7;

        r14 = (org.apache.poi.ss.formula.constant.ErrorConstant) r0;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(16);

        $i0 = virtualinvoke r14.<org.apache.poi.ss.formula.constant.ErrorConstant: int getErrorCode()>();

        l2 = (long) $i0;

        interfaceinvoke r10.<org.apache.poi.util.LittleEndianOutput: void writeLong(long)>(l2);

        return;

     label7:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected value type (");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }

    static void <clinit>()
    {
        <org.apache.poi.ss.formula.constant.ConstantValueParser: int FALSE_ENCODING> = 0;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TRUE_ENCODING> = 1;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TYPE_ERROR_CODE> = 16;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TYPE_BOOLEAN> = 4;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TYPE_STRING> = 2;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TYPE_NUMBER> = 1;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: int TYPE_EMPTY> = 0;

        <org.apache.poi.ss.formula.constant.ConstantValueParser: java.lang.Object EMPTY_REPRESENTATION> = null;

        return;
    }
}
