public class ucar.nc2.iosp.sigmet.SigmetIOServiceProvider extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    private static final java.lang.String def_datafile;
    private ucar.nc2.NetcdfFile ncfile;
    java.util.ArrayList varList;
    ucar.unidata.io.RandomAccessFile myRaf;
    int[] tsu_sec;
    int[] sweep_bins;
    java.lang.String date0;
    public static java.util.Map recHdr;
    private ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan;

    public void <init>()
    {
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.NetcdfFile ncfile> = null;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.ArrayList varList> = null;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.unidata.io.RandomAccessFile myRaf> = null;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] tsu_sec> = null;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins> = null;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r7, $r12, $r14, r15;
        java.io.PrintStream $r1, $r4, $r10;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r13;
        ucar.nc2.NetcdfFile $r2;

        r0 := @parameter0: java.lang.String[];

        r15 = " ";

        $i0 = lengthof r0;

        if $i0 != 1 goto label1;

        r15 = r0[0];

        goto label2;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: java SigmetIOServiceProvider inputFile");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label2:
        staticinvoke <ucar.nc2.NetcdfFile: void registerIOProvider(java.lang.Class)>(class "Lucar/nc2/iosp/sigmet/SigmetIOServiceProvider;");

        $r2 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>(r15);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ncfile = \n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAIN!!!   ");

        $r12 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        return "SIGMET-IRIS";
    }

    public java.lang.String getFileTypeVersion()
    {
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        return "SIGMET-IRIS";
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        return "SIGMET";
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        java.io.PrintStream $r3;
        ucar.unidata.io.RandomAccessFile r0;
        java.io.IOException $r1;
        short $s0;
        int $i1;
        java.lang.StringBuilder $r4, $r6, $r9;
        java.lang.String $r5, $r7;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r8;
        boolean $z0;

        r8 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

     label1:
        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>(24L);

        $s0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $i1 = (int) $s0;

        if $i1 != 15 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r1 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In isValidFile(): ");

        $r5 = virtualinvoke $r1.<java.io.IOException: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return 0;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r5, $r6;
        ucar.nc2.util.CancelTask r7;
        ucar.nc2.iosp.sigmet.SigmetVolumeScan $r4;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r1 := @parameter1: ucar.nc2.NetcdfFile;

        r7 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.NetcdfFile ncfile> = r1;

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.unidata.io.RandomAccessFile myRaf> = r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = new ucar.nc2.iosp.sigmet.SigmetVolumeScan;

        $r5 = r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.ArrayList varList>;

        specialinvoke $r4.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: void <init>(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile,java.util.ArrayList)>(r2, r1, $r5);

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan> = $r4;

        $r6 = virtualinvoke r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.ArrayList init(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile,java.util.Map)>(r2, r1, $r3);

        r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.ArrayList varList> = $r6;

        return;
    }

    public static java.util.Map readRecordsHdr(ucar.unidata.io.RandomAccessFile)
    {
        java.lang.Float $r24, $r25, $r26;
        ucar.unidata.io.RandomAccessFile r1;
        java.lang.Integer $r27, $r28, $r31, $r32, $r35, $r41;
        java.lang.Short $r29, $r30, $r33, $r34, $r36, $r37, $r38, $r39, $r40;
        java.lang.Exception $r20;
        float $f0, $f1, $f2;
        java.util.HashMap $r23;
        short $s4, $s5, $s6, $s9, $s12, $s15, $s17, $s18, $s19, s25;
        int $i0, $i1, $i2, $i3, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i20, $i21, $i22, i23, i24, $i26, $i27;
        java.lang.String $r22;
        java.io.PrintStream $r21;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

     label1:
        i23 = 0;

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(452L);

        $i0 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(480L);

        $i1 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $f0 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcNyquist(int,int)>($i0, $i1);

        $r24 = new java.lang.Float;

        specialinvoke $r24.<java.lang.Float: void <init>(float)>($f0);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("vNyq", $r24);

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6324L);

        $i2 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $i3 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $s4 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $s5 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $s6 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(2);

        $i7 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6648L);

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6652L);

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6772L);

        $i8 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        i24 = 0;

     label2:
        if i24 >= 32 goto label3;

        $i21 = $i8 >> i24;

        $i22 = $i21 & 1;

        i23 = i23 + $i22;

        i24 = i24 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6912L);

        $s9 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(7408L);

        $i10 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $i11 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(2);

        $s12 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        s25 = $s12;

        $i26 = (int) $s12;

        $i13 = $i26 % 2;

        if $i13 == 0 goto label4;

        $i27 = (int) $s12;

        $i20 = $i27 + 1;

        s25 = (short) $i20;

     label4:
        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $i14 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(7574L);

        $s15 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(12312L);

        $i16 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(2);

        $s17 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $s18 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $s19 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $r25 = new java.lang.Float;

        $f1 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcAngle(int)>($i2);

        specialinvoke $r25.<java.lang.Float: void <init>(float)>($f1);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("radar_lat", $r25);

        $r26 = new java.lang.Float;

        $f2 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcAngle(int)>($i3);

        specialinvoke $r26.<java.lang.Float: void <init>(float)>($f2);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("radar_lon", $r26);

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>($i10);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("range_first", $r27);

        $r28 = new java.lang.Integer;

        specialinvoke $r28.<java.lang.Integer: void <init>(int)>($i11);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("range_last", $r28);

        $r29 = new java.lang.Short;

        specialinvoke $r29.<java.lang.Short: void <init>(short)>($s4);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ground_height", $r29);

        $r30 = new java.lang.Short;

        specialinvoke $r30.<java.lang.Short: void <init>(short)>($s5);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("radar_height", $r30);

        $r31 = new java.lang.Integer;

        specialinvoke $r31.<java.lang.Integer: void <init>(int)>($i7);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("radar_alt", $r31);

        $r32 = new java.lang.Integer;

        specialinvoke $r32.<java.lang.Integer: void <init>(int)>($i14);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("step", $r32);

        $r33 = new java.lang.Short;

        specialinvoke $r33.<java.lang.Short: void <init>(short)>(s25);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bins", $r33);

        $r34 = new java.lang.Short;

        specialinvoke $r34.<java.lang.Short: void <init>(short)>($s6);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("num_rays", $r34);

        $r35 = new java.lang.Integer;

        specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i23);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nparams", $r35);

        $r36 = new java.lang.Short;

        specialinvoke $r36.<java.lang.Short: void <init>(short)>($s9);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("multiprf", $r36);

        $r37 = new java.lang.Short;

        specialinvoke $r37.<java.lang.Short: void <init>(short)>($s15);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("number_sweeps", $r37);

        $r38 = new java.lang.Short;

        specialinvoke $r38.<java.lang.Short: void <init>(short)>($s17);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("year", $r38);

        $r39 = new java.lang.Short;

        specialinvoke $r39.<java.lang.Short: void <init>(short)>($s18);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("month", $r39);

        $r40 = new java.lang.Short;

        specialinvoke $r40.<java.lang.Short: void <init>(short)>($s19);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("day", $r40);

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>($i16);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("base_time", $r41);

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r22 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r22);

        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label7:
        return $r23;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public java.util.Map readStnNames(ucar.unidata.io.RandomAccessFile)
    {
        java.io.PrintStream $r7;
        ucar.unidata.io.RandomAccessFile r1;
        java.util.HashMap $r0;
        java.lang.Exception $r6;
        java.lang.String $r2, $r3, $r4, $r5, $r8;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r9;

        r9 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

     label1:
        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6288L);

        $r2 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(16);

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(6306L);

        $r3 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(16);

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("StationName", $r4);

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("StationName_SetupUtility", $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label4:
        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.util.ArrayList init(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, java.util.Map) throws java.io.IOException
    {
        java.lang.Integer $r25, $r34, $r37, $r43, $r55, $r191, $r342, $r344;
        ucar.nc2.Attribute $r296, $r297, $r298, $r299, $r307, $r308, $r309, $r310, $r313, $r314, $r315, $r316, $r319, $r320, $r321, $r322, $r325, $r326, $r327, $r329, $r330, $r331, $r332, $r333, $r335, $r337, $r339, $r341, $r343, $r345, $r347, $r349, $r351, $r353, $r355, $r357, $r358, $r359;
        int[] $r2, $r56, $r66, $r68, $r108, $r217, $r261, $r265, $r267;
        ucar.ma2.DataType $r70, $r116, $r135, $r156, $r177, $r231;
        int $i2, i3, $i6, $i7, $i9, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71;
        java.lang.Float $r13, $r16, $r148, $r169, $r249, $r334, $r336, $r354, $r356;
        ucar.nc2.constants.AxisType $r125, $r143, $r164, $r186;
        java.util.ArrayList $r289, $r290, $r291, $r292, $r293;
        java.lang.String r8, r10, $r110, $r127, $r145, $r166, $r183, $r188, $r200, $r202, $r203, $r204, $r206, $r212, $r214, $r218, $r221, $r241, $r255, r270, r271, r274, r275, r277, r279, r281, r283, r284;
        ucar.nc2.Dimension $r118, $r233, $r259, $r285, $r286, $r288;
        ucar.unidata.io.RandomAccessFile r3;
        java.util.Map $r4, $r6, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r104, r269;
        java.lang.StringBuilder $r112, $r113, $r114, $r131, $r132, $r133, $r152, $r153, $r154, $r173, $r174, $r175, $r195, $r196, $r197, $r199, $r201, $r207, $r208, $r209, $r210, $r211, $r215, $r216, $r219, $r220, $r223, $r224, $r226, $r227, $r256, $r257, $r258, $r263, $r264, $r287, $r294, $r300, $r301, $r302, $r303, $r304, $r305, $r311, $r317, $r323, $r348;
        short $s0, $s1, $s4, $s5, $s8, $s10, $s11, $s12;
        ucar.nc2.iosp.sigmet.SigmetVolumeScan $r67, $r100, $r101, $r102, $r103, $r266;
        java.lang.Short $r19, $r22, $r28, $r31, $r40, $r46, $r49, $r52, $r338, $r340, $r346, $r350, $r352;
        ucar.nc2.Variable[] $r229, $r230, $r234, $r236, $r239, $r243, $r246, $r250, $r252, r276, r278, r280, r282;
        ucar.nc2.Variable $r117, $r119, $r121, $r123, $r126, $r128, $r129, $r136, $r137, $r139, $r141, $r144, $r147, $r149, $r150, $r157, $r158, $r160, $r162, $r165, $r168, $r170, $r171, $r178, $r179, $r181, $r184, $r187, $r190, $r192, $r193, $r232, $r235, $r238, $r242, $r245, $r248, $r251, $r253, $r295, $r306, $r312, $r318, $r324, $r328;
        java.lang.Object $r7, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54;
        float $f0, $f1, $f2, f3, $f4, f5;
        ucar.nc2.NetcdfFile r59;
        short[] $r105, $r106, $r107;
        ucar.nc2.Variable[][] r65;
        java.lang.String[] $r0, $r1, r272, r273;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r5;
        ucar.nc2.Dimension[] $r268;

        r5 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r3 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r59 := @parameter1: ucar.nc2.NetcdfFile;

        r269 := @parameter2: java.util.Map;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = " ";

        $r0[1] = "TotalPower";

        $r0[2] = "Reflectivity";

        $r0[3] = "Velocity";

        $r0[4] = "Width";

        $r0[5] = "Differential_Reflectivity";

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = " ";

        $r1[1] = "dbZ";

        $r1[2] = "dbZ";

        $r1[3] = "m/sec";

        $r1[4] = "m/sec";

        $r1[5] = "dB";

        $r2 = newarray (int)[5];

        $r2[0] = 1;

        $r2[1] = 2;

        $r2[2] = 3;

        $r2[3] = 4;

        $r2[4] = 5;

        $r4 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map readRecordsHdr(ucar.unidata.io.RandomAccessFile)>(r3);

        <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr> = $r4;

        $r6 = virtualinvoke r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map readStnNames(ucar.unidata.io.RandomAccessFile)>(r3);

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("StationName");

        r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("StationName_SetupUtility");

        r10 = (java.lang.String) $r9;

        $r11 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_lat");

        $r13 = (java.lang.Float) $r12;

        $f0 = virtualinvoke $r13.<java.lang.Float: float floatValue()>();

        $r14 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_lon");

        $r16 = (java.lang.Float) $r15;

        $f1 = virtualinvoke $r16.<java.lang.Float: float floatValue()>();

        $r17 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("ground_height");

        $r19 = (java.lang.Short) $r18;

        $s0 = virtualinvoke $r19.<java.lang.Short: short shortValue()>();

        $r20 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_height");

        $r22 = (java.lang.Short) $r21;

        $s1 = virtualinvoke $r22.<java.lang.Short: short shortValue()>();

        $r23 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_alt");

        $r25 = (java.lang.Integer) $r24;

        $i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        i3 = $i2 / 100;

        $r26 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>("num_rays");

        $r28 = (java.lang.Short) $r27;

        $s4 = virtualinvoke $r28.<java.lang.Short: short shortValue()>();

        $r29 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("bins");

        $r31 = (java.lang.Short) $r30;

        $s5 = virtualinvoke $r31.<java.lang.Short: short shortValue()>();

        $r32 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("range_first");

        $r34 = (java.lang.Integer) $r33;

        $i6 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i6;

        f3 = $f2 * 0.01F;

        $r35 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("range_last");

        $r37 = (java.lang.Integer) $r36;

        $i7 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        $f4 = (float) $i7;

        f5 = $f4 * 0.01F;

        $r38 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("number_sweeps");

        $r40 = (java.lang.Short) $r39;

        $s8 = virtualinvoke $r40.<java.lang.Short: short shortValue()>();

        $r41 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("nparams");

        $r43 = (java.lang.Integer) $r42;

        $i9 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        $r44 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>("year");

        $r46 = (java.lang.Short) $r45;

        $s10 = virtualinvoke $r46.<java.lang.Short: short shortValue()>();

        $r47 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r48 = interfaceinvoke $r47.<java.util.Map: java.lang.Object get(java.lang.Object)>("month");

        $r49 = (java.lang.Short) $r48;

        $s11 = virtualinvoke $r49.<java.lang.Short: short shortValue()>();

        $r50 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.lang.Object get(java.lang.Object)>("day");

        $r52 = (java.lang.Short) $r51;

        $s12 = virtualinvoke $r52.<java.lang.Short: short shortValue()>();

        $r53 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $r54 = interfaceinvoke $r53.<java.util.Map: java.lang.Object get(java.lang.Object)>("base_time");

        $r55 = (java.lang.Integer) $r54;

        virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        $i38 = (int) $s8;

        $i13 = $i9 * $i38;

        $r56 = newarray (int)[$i13];

        r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins> = $r56;

        $i39 = (int) $s8;

        if $i39 <= 1 goto label01;

        $r266 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r267 = virtualinvoke $r266.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: int[] getNumberGates()>();

        r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins> = $r267;

        goto label03;

     label01:
        i25 = 0;

     label02:
        if i25 >= $i9 goto label03;

        $r265 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins>;

        $i40 = (int) $s5;

        $r265[i25] = $i40;

        i25 = i25 + 1;

        goto label02;

     label03:
        $r285 = new ucar.nc2.Dimension;

        $i41 = (int) $s8;

        specialinvoke $r285.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("scanR", $i41, 1);

        $r286 = new ucar.nc2.Dimension;

        $i42 = (int) $s4;

        specialinvoke $r286.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("radial", $i42, 1);

        $i43 = (int) $s8;

        $r268 = newarray (ucar.nc2.Dimension)[$i43];

        r270 = "gateR";

        i26 = 0;

     label04:
        $i44 = (int) $s8;

        if i26 >= $i44 goto label06;

        $i45 = (int) $s8;

        if $i45 <= 1 goto label05;

        $r287 = new java.lang.StringBuilder;

        specialinvoke $r287.<java.lang.StringBuilder: void <init>()>();

        $r263 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gateR_sweep_");

        $i24 = i26 + 1;

        $r264 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        r270 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r288 = new ucar.nc2.Dimension;

        $r261 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins>;

        $i23 = $r261[i26];

        specialinvoke $r288.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>(r270, $i23, 1);

        $r268[i26] = $r288;

        i26 = i26 + 1;

        goto label04;

     label06:
        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r285);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r286);

        i27 = 0;

     label07:
        $i46 = (int) $s8;

        if i27 >= $i46 goto label08;

        $r259 = $r268[i27];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r259);

        i27 = i27 + 1;

        goto label07;

     label08:
        $r289 = new java.util.ArrayList;

        specialinvoke $r289.<java.util.ArrayList: void <init>()>();

        $r290 = new java.util.ArrayList;

        specialinvoke $r290.<java.util.ArrayList: void <init>()>();

        $r291 = new java.util.ArrayList;

        specialinvoke $r291.<java.util.ArrayList: void <init>()>();

        $r292 = new java.util.ArrayList;

        specialinvoke $r292.<java.util.ArrayList: void <init>()>();

        $r293 = new java.util.ArrayList;

        specialinvoke $r293.<java.util.ArrayList: void <init>()>();

        $i47 = (int) $s8;

        r65 = newmultiarray (ucar.nc2.Variable)[$i9][$i47];

        i28 = 0;

     label09:
        if i28 >= $i9 goto label13;

        i29 = $r2[i28];

        r271 = $r0[i29];

        i30 = 0;

     label10:
        $i48 = (int) $s8;

        if i30 >= $i48 goto label12;

        $i49 = (int) $s8;

        if $i49 <= 1 goto label11;

        $r294 = new java.lang.StringBuilder;

        specialinvoke $r294.<java.lang.StringBuilder: void <init>()>();

        $r255 = $r0[i29];

        $r256 = virtualinvoke $r294.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);

        $r257 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sweep_");

        $i22 = i30 + 1;

        $r258 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        r271 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r229 = r65[i28];

        $r295 = new ucar.nc2.Variable;

        specialinvoke $r295.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, r271);

        $r229[i30] = $r295;

        $r230 = r65[i28];

        $r232 = $r230[i30];

        $r231 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r232.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r231);

        virtualinvoke $r291.<java.util.ArrayList: boolean add(java.lang.Object)>($r286);

        $r233 = $r268[i30];

        virtualinvoke $r291.<java.util.ArrayList: boolean add(java.lang.Object)>($r233);

        $r234 = r65[i28];

        $r235 = $r234[i30];

        virtualinvoke $r235.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r291);

        $r236 = r65[i28];

        $r238 = $r236[i30];

        $r296 = new ucar.nc2.Attribute;

        specialinvoke $r296.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r271);

        virtualinvoke $r238.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r296);

        $r239 = r65[i28];

        $r242 = $r239[i30];

        $r297 = new ucar.nc2.Attribute;

        $r241 = $r1[i29];

        specialinvoke $r297.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r241);

        virtualinvoke $r242.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r297);

        $r243 = r65[i28];

        $r245 = $r243[i30];

        $r298 = new ucar.nc2.Attribute;

        specialinvoke $r298.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "time elevationR azimuthR distanceR");

        virtualinvoke $r245.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r298);

        $r246 = r65[i28];

        $r248 = $r246[i30];

        $r299 = new ucar.nc2.Attribute;

        $r249 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-999.99F);

        specialinvoke $r299.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r249);

        virtualinvoke $r248.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r299);

        $r250 = r65[i28];

        $r251 = $r250[i30];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r251);

        $r252 = r65[i28];

        $r253 = $r252[i30];

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r253);

        virtualinvoke $r291.<java.util.ArrayList: void clear()>();

        i30 = i30 + 1;

        goto label10;

     label12:
        i28 = i28 + 1;

        goto label09;

     label13:
        $i50 = (int) $s8;

        $r66 = newarray (int)[$i50];

        r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] tsu_sec> = $r66;

        $i51 = (int) $s8;

        r272 = newarray (java.lang.String)[$i51];

        $i52 = (int) $s8;

        r273 = newarray (java.lang.String)[$i52];

        $r67 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r68 = virtualinvoke $r67.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: int[] getStartSweep()>();

        r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] tsu_sec> = $r68;

        i31 = 0;

     label14:
        $i53 = (int) $s8;

        if i31 >= $i53 goto label17;

        $r203 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s11);

        r274 = $r203;

        $i19 = virtualinvoke $r203.<java.lang.String: int length()>();

        if $i19 >= 2 goto label15;

        $r300 = new java.lang.StringBuilder;

        specialinvoke $r300.<java.lang.StringBuilder: void <init>()>();

        $r226 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r203);

        r274 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r204 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s12);

        r275 = $r204;

        $i20 = virtualinvoke $r204.<java.lang.String: int length()>();

        if $i20 >= 2 goto label16;

        $r301 = new java.lang.StringBuilder;

        specialinvoke $r301.<java.lang.StringBuilder: void <init>()>();

        $r223 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204);

        r275 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r302 = new java.lang.StringBuilder;

        specialinvoke $r302.<java.lang.StringBuilder: void <init>()>();

        $i54 = (int) $s10;

        $r206 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i54);

        $r207 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r206);

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r274);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r275);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.String toString()>();

        r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String date0> = $r212;

        $r303 = new java.lang.StringBuilder;

        specialinvoke $r303.<java.lang.StringBuilder: void <init>()>();

        $r214 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String date0>;

        $r215 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r214);

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T");

        $r217 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] tsu_sec>;

        $i21 = $r217[i31];

        $r218 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String calcTime(int,int)>($i21, 0);

        $r219 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r218);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Z");

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.String toString()>();

        r272[i31] = $r221;

        i31 = i31 + 1;

        goto label14;

     label17:
        i32 = 0;

     label18:
        $i55 = (int) $s8;

        if i32 >= $i55 goto label19;

        $r304 = new java.lang.StringBuilder;

        specialinvoke $r304.<java.lang.StringBuilder: void <init>()>();

        $r199 = virtualinvoke $r304.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("secs since ");

        $r200 = r272[i32];

        $r201 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r200);

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        r273[i32] = $r202;

        i32 = i32 + 1;

        goto label18;

     label19:
        virtualinvoke $r289.<java.util.ArrayList: boolean add(java.lang.Object)>($r286);

        $i56 = (int) $s8;

        r276 = newarray (ucar.nc2.Variable)[$i56];

        i33 = 0;

     label20:
        $i57 = (int) $s8;

        if i33 >= $i57 goto label22;

        r277 = "time";

        $i58 = (int) $s8;

        if $i58 <= 1 goto label21;

        $r305 = new java.lang.StringBuilder;

        specialinvoke $r305.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time");

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sweep_");

        $i18 = i33 + 1;

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        r277 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r306 = new ucar.nc2.Variable;

        specialinvoke $r306.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, r277);

        r276[i33] = $r306;

        $r178 = r276[i33];

        $r177 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r178.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r177);

        $r179 = r276[i33];

        virtualinvoke $r179.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r289);

        $r181 = r276[i33];

        $r307 = new ucar.nc2.Attribute;

        specialinvoke $r307.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time from start of sweep");

        virtualinvoke $r181.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r307);

        $r184 = r276[i33];

        $r308 = new ucar.nc2.Attribute;

        $r183 = r273[i33];

        specialinvoke $r308.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r183);

        virtualinvoke $r184.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r308);

        $r187 = r276[i33];

        $r309 = new ucar.nc2.Attribute;

        $r186 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r188 = virtualinvoke $r186.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r309.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r188);

        virtualinvoke $r187.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r309);

        $r190 = r276[i33];

        $r310 = new ucar.nc2.Attribute;

        $i60 = (int) -99;

        $r191 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i60);

        specialinvoke $r310.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r191);

        virtualinvoke $r190.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r310);

        $r192 = r276[i33];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r192);

        $r193 = r276[i33];

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r193);

        i33 = i33 + 1;

        goto label20;

     label22:
        $i61 = (int) $s8;

        r278 = newarray (ucar.nc2.Variable)[$i61];

        i34 = 0;

     label23:
        $i62 = (int) $s8;

        if i34 >= $i62 goto label25;

        r279 = "elevationR";

        $i63 = (int) $s8;

        if $i63 <= 1 goto label24;

        $r311 = new java.lang.StringBuilder;

        specialinvoke $r311.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("elevationR");

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sweep_");

        $i17 = i34 + 1;

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        r279 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        $r312 = new ucar.nc2.Variable;

        specialinvoke $r312.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, r279);

        r278[i34] = $r312;

        $r157 = r278[i34];

        $r156 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r157.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r156);

        $r158 = r278[i34];

        virtualinvoke $r158.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r289);

        $r160 = r278[i34];

        $r313 = new ucar.nc2.Attribute;

        specialinvoke $r313.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "elevation angle");

        virtualinvoke $r160.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r313);

        $r162 = r278[i34];

        $r314 = new ucar.nc2.Attribute;

        specialinvoke $r314.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees");

        virtualinvoke $r162.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r314);

        $r165 = r278[i34];

        $r315 = new ucar.nc2.Attribute;

        $r164 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialElevation>;

        $r166 = virtualinvoke $r164.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r315.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r166);

        virtualinvoke $r165.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r315);

        $r168 = r278[i34];

        $r316 = new ucar.nc2.Attribute;

        $r169 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-999.99F);

        specialinvoke $r316.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r169);

        virtualinvoke $r168.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r316);

        $r170 = r278[i34];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r170);

        $r171 = r278[i34];

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r171);

        i34 = i34 + 1;

        goto label23;

     label25:
        $i64 = (int) $s8;

        r280 = newarray (ucar.nc2.Variable)[$i64];

        i35 = 0;

     label26:
        $i65 = (int) $s8;

        if i35 >= $i65 goto label28;

        r281 = "azimuthR";

        $i66 = (int) $s8;

        if $i66 <= 1 goto label27;

        $r317 = new java.lang.StringBuilder;

        specialinvoke $r317.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r317.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("azimuthR");

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sweep_");

        $i16 = i35 + 1;

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        r281 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();

     label27:
        $r318 = new ucar.nc2.Variable;

        specialinvoke $r318.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, r281);

        r280[i35] = $r318;

        $r136 = r280[i35];

        $r135 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r136.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r135);

        $r137 = r280[i35];

        virtualinvoke $r137.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r289);

        $r139 = r280[i35];

        $r319 = new ucar.nc2.Attribute;

        specialinvoke $r319.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "azimuth angle");

        virtualinvoke $r139.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r319);

        $r141 = r280[i35];

        $r320 = new ucar.nc2.Attribute;

        specialinvoke $r320.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees");

        virtualinvoke $r141.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r320);

        $r144 = r280[i35];

        $r321 = new ucar.nc2.Attribute;

        $r143 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialAzimuth>;

        $r145 = virtualinvoke $r143.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r321.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r145);

        virtualinvoke $r144.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r321);

        $r147 = r280[i35];

        $r322 = new ucar.nc2.Attribute;

        $r148 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-999.99F);

        specialinvoke $r322.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r148);

        virtualinvoke $r147.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r322);

        $r149 = r280[i35];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r149);

        $r150 = r280[i35];

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r150);

        i35 = i35 + 1;

        goto label26;

     label28:
        $i67 = (int) $s8;

        r282 = newarray (ucar.nc2.Variable)[$i67];

        i36 = 0;

     label29:
        $i68 = (int) $s8;

        if i36 >= $i68 goto label31;

        r283 = "distanceR";

        $i69 = (int) $s8;

        if $i69 <= 1 goto label30;

        $r323 = new java.lang.StringBuilder;

        specialinvoke $r323.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke $r323.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distanceR");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_sweep_");

        $i15 = i36 + 1;

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        r283 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        $r324 = new ucar.nc2.Variable;

        specialinvoke $r324.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, r283);

        r282[i36] = $r324;

        $r117 = r282[i36];

        $r116 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r117.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r116);

        $r118 = $r268[i36];

        virtualinvoke $r290.<java.util.ArrayList: boolean add(java.lang.Object)>($r118);

        $r119 = r282[i36];

        virtualinvoke $r119.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r290);

        $r121 = r282[i36];

        $r325 = new ucar.nc2.Attribute;

        specialinvoke $r325.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "radial distance");

        virtualinvoke $r121.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r325);

        $r123 = r282[i36];

        $r326 = new ucar.nc2.Attribute;

        specialinvoke $r326.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "m");

        virtualinvoke $r123.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r326);

        $r126 = r282[i36];

        $r327 = new ucar.nc2.Attribute;

        $r125 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialDistance>;

        $r127 = virtualinvoke $r125.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r327.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r127);

        virtualinvoke $r126.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r327);

        $r128 = r282[i36];

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r128);

        $r129 = r282[i36];

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r129);

        virtualinvoke $r290.<java.util.ArrayList: void clear()>();

        i36 = i36 + 1;

        goto label29;

     label31:
        virtualinvoke $r292.<java.util.ArrayList: boolean add(java.lang.Object)>($r285);

        $r328 = new ucar.nc2.Variable;

        specialinvoke $r328.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r59, null, null, "numGates");

        $r70 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r328.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r70);

        virtualinvoke $r328.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r292);

        $r329 = new ucar.nc2.Attribute;

        specialinvoke $r329.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of gates in the sweep");

        virtualinvoke $r328.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r329);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r328);

        virtualinvoke $r293.<java.util.ArrayList: boolean add(java.lang.Object)>($r328);

        $r330 = new ucar.nc2.Attribute;

        specialinvoke $r330.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("definition", "SIGMET-IRIS RAW");

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r330);

        $r331 = new ucar.nc2.Attribute;

        specialinvoke $r331.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("description", "SIGMET-IRIS data are reading by Netcdf IOSP");

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r331);

        $r332 = new ucar.nc2.Attribute;

        specialinvoke $r332.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("StationName", r8);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r332);

        $r333 = new ucar.nc2.Attribute;

        specialinvoke $r333.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("StationName_SetupUtility", r10);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r333);

        $r335 = new ucar.nc2.Attribute;

        $r334 = new java.lang.Float;

        specialinvoke $r334.<java.lang.Float: void <init>(float)>($f0);

        specialinvoke $r335.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("radar_lat", $r334);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r335);

        $r337 = new ucar.nc2.Attribute;

        $r336 = new java.lang.Float;

        specialinvoke $r336.<java.lang.Float: void <init>(float)>($f1);

        specialinvoke $r337.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("radar_lon", $r336);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r337);

        $r339 = new ucar.nc2.Attribute;

        $r338 = new java.lang.Short;

        specialinvoke $r338.<java.lang.Short: void <init>(short)>($s0);

        specialinvoke $r339.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("ground_height", $r338);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r339);

        $r341 = new ucar.nc2.Attribute;

        $r340 = new java.lang.Short;

        specialinvoke $r340.<java.lang.Short: void <init>(short)>($s1);

        specialinvoke $r341.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("radar_height", $r340);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r341);

        $r343 = new ucar.nc2.Attribute;

        $r342 = new java.lang.Integer;

        specialinvoke $r342.<java.lang.Integer: void <init>(int)>(i3);

        specialinvoke $r343.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("radar_alt", $r342);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r343);

        $r345 = new ucar.nc2.Attribute;

        $r344 = new java.lang.Integer;

        specialinvoke $r344.<java.lang.Integer: void <init>(int)>($i9);

        specialinvoke $r345.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("num_data_types", $r344);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r345);

        $r347 = new ucar.nc2.Attribute;

        $r346 = new java.lang.Short;

        specialinvoke $r346.<java.lang.Short: void <init>(short)>($s8);

        specialinvoke $r347.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("number_sweeps", $r346);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r347);

        i37 = 0;

     label32:
        $i70 = (int) $s8;

        if i37 >= $i70 goto label34;

        r284 = "start_sweep";

        $i71 = (int) $s8;

        if $i71 <= 1 goto label33;

        $r348 = new java.lang.StringBuilder;

        specialinvoke $r348.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start_sweep");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i14 = i37 + 1;

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        r284 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

     label33:
        $r349 = new ucar.nc2.Attribute;

        $r110 = r272[i37];

        specialinvoke $r349.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>(r284, $r110);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r349);

        i37 = i37 + 1;

        goto label32;

     label34:
        $r351 = new ucar.nc2.Attribute;

        $r350 = new java.lang.Short;

        specialinvoke $r350.<java.lang.Short: void <init>(short)>($s4);

        specialinvoke $r351.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("num_rays", $r350);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r351);

        $r353 = new ucar.nc2.Attribute;

        $r352 = new java.lang.Short;

        specialinvoke $r352.<java.lang.Short: void <init>(short)>($s5);

        specialinvoke $r353.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("max_number_gates", $r352);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r353);

        $r355 = new ucar.nc2.Attribute;

        $r354 = new java.lang.Float;

        specialinvoke $r354.<java.lang.Float: void <init>(float)>(f3);

        specialinvoke $r355.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("range_first", $r354);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r355);

        $r357 = new ucar.nc2.Attribute;

        $r356 = new java.lang.Float;

        specialinvoke $r356.<java.lang.Float: void <init>(float)>(f5);

        specialinvoke $r357.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("range_last", $r356);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r357);

        $r358 = new ucar.nc2.Attribute;

        specialinvoke $r358.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("DataType", "Radial");

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r358);

        $r359 = new ucar.nc2.Attribute;

        specialinvoke $r359.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "_Coordinates");

        virtualinvoke r59.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r359);

        $r100 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r108 = $r100.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: int[] base_time>;

        $r101 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r107 = $r101.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: short[] year>;

        $r102 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r106 = $r102.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: short[] month>;

        $r103 = r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r105 = $r103.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: short[] day>;

        $r104 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        virtualinvoke r5.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: void doNetcdfFileCoordinate(ucar.nc2.NetcdfFile,int[],short[],short[],short[],java.util.ArrayList,java.util.Map)>(r59, $r108, $r107, $r106, $r105, $r293, $r104);

        virtualinvoke r59.<ucar.nc2.NetcdfFile: void finish()>();

        return $r293;
    }

    public void doNetcdfFileCoordinate(ucar.nc2.NetcdfFile, int[], short[], short[], short[], java.util.ArrayList, java.util.Map)
    {
        java.lang.Integer $r11, $r15, $r17, $r21;
        ucar.nc2.Attribute $r223, $r224;
        ucar.ma2.Array $r73, $r93, $r113, $r133, $r157;
        int[] r51, $r72, $r92, $r112, $r132, $r156, $r161;
        ucar.ma2.DataType $r71, $r91, $r111, $r131, $r155;
        int $i1, $i2, $i4, $i7, $i9, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i30, $i33, $i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100;
        java.io.PrintStream $r190;
        java.lang.Float $r3, $r5;
        java.lang.Exception $r189;
        java.util.ArrayList r66;
        java.lang.String $r26, $r28, $r31, $r37, $r38, $r39, $r41, $r47, $r52, $r55, $r59, $r62, $r89, $r104, $r105, $r124, $r125, $r144, $r145, $r166, $r167, $r191, r192, r193, r194, r195, r196, r200, r205, r210;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.ma2.ArrayFloat$D1[] $r178, r203, r208;
        ucar.ma2.ArrayFloat$D2[] $r174;
        java.util.List $r68, r83, $r106, $r126, $r146, $r151, r198;
        ucar.nc2.iosp.sigmet.Ray $r24, $r84, $r87, $r100, $r102, $r120, $r122, $r140, $r142;
        java.util.Map r1;
        java.lang.StringBuilder $r32, $r33, $r34, $r35, $r36, $r42, $r43, $r44, $r45, $r46, $r49, $r50, $r53, $r54, $r57, $r58, $r60, $r61, $r108, $r109, $r128, $r129, $r148, $r149, $r169, $r170, $r172, $r173, $r181, $r182, $r184, $r185, $r187, $r188, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r225, $r226, $r227, $r228;
        short $s0, $s3, $s5, $s6, $s8, $s10, $s12, $s15, $s18, $s26, $s29, $s31, $s32;
        ucar.nc2.iosp.sigmet.Ray[] $r176;
        ucar.ma2.ArrayInt$D1 $r77, $r134, $r135, $r138, r214;
        ucar.ma2.Index $r74, $r85, $r96, $r97, $r99, $r116, $r117, $r119, $r136, $r137, $r139, $r160, $r162, $r164;
        ucar.nc2.iosp.sigmet.SigmetVolumeScan $r23, $r67, $r152;
        java.util.List[] $r153;
        java.lang.Short $r7, $r9, $r13, $r19;
        ucar.nc2.Variable[] $r177, r199, r202, r207;
        ucar.ma2.ArrayInt$D1[] r69;
        ucar.nc2.Variable $r76, $r78, $r80, $r82, $r90, $r110, $r130, $r154, r197, r201, r206, r211, r212, r213;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r86, $r88, $r101, $r103, $r121, $r123, $r141, $r143, $r150, $r165;
        ucar.ma2.ArrayFloat$D1 $r75, $r79, $r81, $r94, $r95, $r98, $r114, $r115, $r118, $r158, $r159, $r163;
        ucar.ma2.Index[] r70, $r175, $r179, r204, r209;
        float $f0, f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        short[] r25, r27, r30;
        ucar.nc2.NetcdfFile r63;
        java.lang.String[] $r0;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r22;

        r22 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r63 := @parameter0: ucar.nc2.NetcdfFile;

        r51 := @parameter1: int[];

        r30 := @parameter2: short[];

        r25 := @parameter3: short[];

        r27 := @parameter4: short[];

        r66 := @parameter5: java.util.ArrayList;

        r1 := @parameter6: java.util.Map;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = " ";

        $r0[1] = "dbZ";

        $r0[2] = "dbZ";

        $r0[3] = "m/sec";

        $r0[4] = "m/sec";

        $r0[5] = "dB";

        staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(80);

        staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(6);

        $r2 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_lat");

        $r3 = (java.lang.Float) $r2;

        virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_lon");

        $r5 = (java.lang.Float) $r4;

        virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ground_height");

        $r7 = (java.lang.Short) $r6;

        virtualinvoke $r7.<java.lang.Short: short shortValue()>();

        $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_height");

        $r9 = (java.lang.Short) $r8;

        virtualinvoke $r9.<java.lang.Short: short shortValue()>();

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("radar_alt");

        $r11 = (java.lang.Integer) $r10;

        virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("num_rays");

        $r13 = (java.lang.Short) $r12;

        $s0 = virtualinvoke $r13.<java.lang.Short: short shortValue()>();

        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("range_first");

        $r15 = (java.lang.Integer) $r14;

        $i1 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i1;

        f1 = $f0 * 0.01F;

        $r16 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("range_last");

        $r17 = (java.lang.Integer) $r16;

        $i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i2;

        f3 = $f2 * 0.01F;

        $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("number_sweeps");

        $r19 = (java.lang.Short) $r18;

        $s3 = virtualinvoke $r19.<java.lang.Short: short shortValue()>();

        $r20 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("nparams");

        $r21 = (java.lang.Integer) $r20;

        $i4 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r23 = r22.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r24 = $r23.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: ucar.nc2.iosp.sigmet.Ray lastRay>;

        $s5 = virtualinvoke $r24.<ucar.nc2.iosp.sigmet.Ray: short getTime()>();

        $s6 = r25[0];

        $r26 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s6);

        r192 = $r26;

        $i7 = virtualinvoke $r26.<java.lang.String: int length()>();

        if $i7 >= 2 goto label01;

        $r215 = new java.lang.StringBuilder;

        specialinvoke $r215.<java.lang.StringBuilder: void <init>()>();

        $r187 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        r192 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $s8 = r27[0];

        $r28 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s8);

        r193 = $r28;

        $i9 = virtualinvoke $r28.<java.lang.String: int length()>();

        if $i9 >= 2 goto label02;

        $r216 = new java.lang.StringBuilder;

        specialinvoke $r216.<java.lang.StringBuilder: void <init>()>();

        $r184 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        r193 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r217 = new java.lang.StringBuilder;

        specialinvoke $r217.<java.lang.StringBuilder: void <init>()>();

        $s10 = r30[0];

        $i56 = (int) $s10;

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i56);

        $r32 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r192);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r193);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $i57 = (int) $s3;

        $i11 = $i57 - 1;

        $s12 = r25[$i11];

        $r38 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s12);

        r194 = $r38;

        $i13 = virtualinvoke $r38.<java.lang.String: int length()>();

        if $i13 >= 2 goto label03;

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r181 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r194 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $i58 = (int) $s3;

        $i14 = $i58 - 1;

        $s15 = r27[$i14];

        $r39 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s15);

        r195 = $r39;

        $i16 = virtualinvoke $r39.<java.lang.String: int length()>();

        if $i16 >= 2 goto label04;

        $r219 = new java.lang.StringBuilder;

        specialinvoke $r219.<java.lang.StringBuilder: void <init>()>();

        $r172 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        r195 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r220 = new java.lang.StringBuilder;

        specialinvoke $r220.<java.lang.StringBuilder: void <init>()>();

        $i59 = (int) $s3;

        $i17 = $i59 - 1;

        $s18 = r30[$i17];

        $i60 = (int) $s18;

        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i60);

        $r42 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r194);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r195);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T");

        $i19 = r51[0];

        $r52 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String calcTime(int,int)>($i19, 0);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Z");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T");

        $i61 = (int) $s3;

        $i20 = $i61 - 1;

        $i21 = r51[$i20];

        $i62 = (int) $s5;

        $r59 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String calcTime(int,int)>($i21, $i62);

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Z");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        $r223 = new ucar.nc2.Attribute;

        specialinvoke $r223.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_start", $r55);

        virtualinvoke r63.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r223);

        $r224 = new ucar.nc2.Attribute;

        specialinvoke $r224.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_end", $r62);

        virtualinvoke r63.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r224);

     label05:
        $i22 = virtualinvoke r66.<java.util.ArrayList: int size()>();

        $i63 = (int) $s3;

        $i23 = $i4 * $i63;

        $r174 = newarray (ucar.ma2.ArrayFloat$D2)[$i23];

        $i64 = (int) $s3;

        $i24 = $i4 * $i64;

        $r175 = newarray (ucar.ma2.Index)[$i24];

        $i65 = (int) $s0;

        $r176 = newarray (ucar.nc2.iosp.sigmet.Ray)[$i65];

        $i66 = (int) $s3;

        $r177 = newarray (ucar.nc2.Variable)[$i66];

        $i67 = (int) $s3;

        $r178 = newarray (ucar.ma2.ArrayFloat$D1)[$i67];

        $i68 = (int) $s3;

        $r179 = newarray (ucar.ma2.Index)[$i68];

        r196 = "distanceR";

        i35 = 0;

     label06:
        $i69 = (int) $s3;

        if i35 >= $i69 goto label13;

        $i70 = (int) $s3;

        if $i70 <= 1 goto label07;

        $r225 = new java.lang.StringBuilder;

        specialinvoke $r225.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distanceR_sweep_");

        $i34 = i35 + 1;

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        r196 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        i36 = 0;

     label08:
        if i36 >= $i22 goto label10;

        $r165 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>(i36);

        r197 = (ucar.nc2.Variable) $r165;

        $r166 = virtualinvoke r197.<ucar.nc2.Variable: java.lang.String getName()>();

        $r167 = virtualinvoke r196.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke $r166.<java.lang.String: boolean equals(java.lang.Object)>($r167);

        if $z4 == 0 goto label09;

        $r177[i35] = r197;

        goto label10;

     label09:
        i36 = i36 + 1;

        goto label08;

     label10:
        $r155 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r154 = $r177[i35];

        $r156 = virtualinvoke $r154.<ucar.nc2.Variable: int[] getShape()>();

        $r157 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r155, $r156);

        $r158 = (ucar.ma2.ArrayFloat$D1) $r157;

        $r178[i35] = $r158;

        $r159 = $r178[i35];

        $r160 = virtualinvoke $r159.<ucar.ma2.ArrayFloat$D1: ucar.ma2.Index getIndex()>();

        $r179[i35] = $r160;

        $r161 = r22.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: int[] sweep_bins>;

        $i33 = $r161[i35];

        $s32 = (short) $i33;

        $f6 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcStep(float,float,short)>(f1, f3, $s32);

        i37 = 0;

     label11:
        if i37 >= $i33 goto label12;

        $r163 = $r178[i35];

        $r162 = $r179[i35];

        $r164 = virtualinvoke $r162.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i37);

        $f7 = (float) i37;

        $f8 = $f7 * $f6;

        $f9 = f1 + $f8;

        virtualinvoke $r163.<ucar.ma2.ArrayFloat$D1: void setFloat(ucar.ma2.Index,float)>($r164, $f9);

        i37 = i37 + 1;

        goto label11;

     label12:
        i35 = i35 + 1;

        goto label06;

     label13:
        $r67 = r22.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r68 = virtualinvoke $r67.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getTotalPowerGroups()>();

        r198 = $r68;

        $i25 = interfaceinvoke $r68.<java.util.List: int size()>();

        if $i25 != 0 goto label14;

        $r152 = r22.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r198 = virtualinvoke $r152.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getReflectivityGroups()>();

     label14:
        $i71 = (int) $s3;

        $r153 = newarray (java.util.ArrayList)[$i71];

        i38 = 0;

     label15:
        $i72 = (int) $s3;

        if i38 >= $i72 goto label16;

        $s31 = (short) i38;

        $i73 = (int) $s31;

        $r150 = interfaceinvoke r198.<java.util.List: java.lang.Object get(int)>($i73);

        $r151 = (java.util.List) $r150;

        $r153[i38] = $r151;

        i38 = i38 + 1;

        goto label15;

     label16:
        $i74 = (int) $s3;

        r199 = newarray (ucar.nc2.Variable)[$i74];

        $i75 = (int) $s3;

        r69 = newarray (ucar.ma2.ArrayInt$D1)[$i75];

        $i76 = (int) $s3;

        r70 = newarray (ucar.ma2.Index)[$i76];

        r200 = "time";

        i39 = 0;

     label17:
        $i77 = (int) $s3;

        if i39 >= $i77 goto label26;

        $i78 = (int) $s3;

        if $i78 <= 1 goto label18;

        $r226 = new java.lang.StringBuilder;

        specialinvoke $r226.<java.lang.StringBuilder: void <init>()>();

        $r148 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time_sweep_");

        $i30 = i39 + 1;

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        r200 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        i40 = 0;

     label19:
        if i40 >= $i22 goto label21;

        $r143 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>(i40);

        r201 = (ucar.nc2.Variable) $r143;

        $r144 = virtualinvoke r201.<ucar.nc2.Variable: java.lang.String getName()>();

        $r145 = virtualinvoke r200.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke $r144.<java.lang.String: boolean equals(java.lang.Object)>($r145);

        if $z3 == 0 goto label20;

        r199[i39] = r201;

        goto label21;

     label20:
        i40 = i40 + 1;

        goto label19;

     label21:
        $r131 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r130 = r199[i39];

        $r132 = virtualinvoke $r130.<ucar.nc2.Variable: int[] getShape()>();

        $r133 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r131, $r132);

        $r134 = (ucar.ma2.ArrayInt$D1) $r133;

        r69[i39] = $r134;

        $r135 = r69[i39];

        $r136 = virtualinvoke $r135.<ucar.ma2.ArrayInt$D1: ucar.ma2.Index getIndex()>();

        r70[i39] = $r136;

        $r146 = $r153[i39];

        i41 = 0;

     label22:
        $i79 = (int) $s0;

        if i41 >= $i79 goto label23;

        $r141 = interfaceinvoke $r146.<java.util.List: java.lang.Object get(int)>(i41);

        $r142 = (ucar.nc2.iosp.sigmet.Ray) $r141;

        $r176[i41] = $r142;

        i41 = i41 + 1;

        goto label22;

     label23:
        i42 = 0;

     label24:
        $i80 = (int) $s0;

        if i42 >= $i80 goto label25;

        $r138 = r69[i39];

        $r137 = r70[i39];

        $r139 = virtualinvoke $r137.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i42);

        $r140 = $r176[i42];

        $s29 = virtualinvoke $r140.<ucar.nc2.iosp.sigmet.Ray: short getTime()>();

        $i81 = (int) $s29;

        virtualinvoke $r138.<ucar.ma2.ArrayInt$D1: void setInt(ucar.ma2.Index,int)>($r139, $i81);

        i42 = i42 + 1;

        goto label24;

     label25:
        i39 = i39 + 1;

        goto label17;

     label26:
        $i82 = (int) $s3;

        r202 = newarray (ucar.nc2.Variable)[$i82];

        $i83 = (int) $s3;

        r203 = newarray (ucar.ma2.ArrayFloat$D1)[$i83];

        $i84 = (int) $s3;

        r204 = newarray (ucar.ma2.Index)[$i84];

        r205 = "azimuthR";

        i43 = 0;

     label27:
        $i85 = (int) $s3;

        if i43 >= $i85 goto label36;

        $i86 = (int) $s3;

        if $i86 <= 1 goto label28;

        $r227 = new java.lang.StringBuilder;

        specialinvoke $r227.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("azimuthR_sweep_");

        $i28 = i43 + 1;

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        r205 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

     label28:
        i44 = 0;

     label29:
        if i44 >= $i22 goto label31;

        $r123 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>(i44);

        r206 = (ucar.nc2.Variable) $r123;

        $r124 = virtualinvoke r206.<ucar.nc2.Variable: java.lang.String getName()>();

        $r125 = virtualinvoke r205.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>($r125);

        if $z2 == 0 goto label30;

        r202[i43] = r206;

        goto label31;

     label30:
        i44 = i44 + 1;

        goto label29;

     label31:
        $r111 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r110 = r202[i43];

        $r112 = virtualinvoke $r110.<ucar.nc2.Variable: int[] getShape()>();

        $r113 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r111, $r112);

        $r114 = (ucar.ma2.ArrayFloat$D1) $r113;

        r203[i43] = $r114;

        $r115 = r203[i43];

        $r116 = virtualinvoke $r115.<ucar.ma2.ArrayFloat$D1: ucar.ma2.Index getIndex()>();

        r204[i43] = $r116;

        $r126 = $r153[i43];

        i45 = 0;

     label32:
        $i87 = (int) $s0;

        if i45 >= $i87 goto label33;

        $r121 = interfaceinvoke $r126.<java.util.List: java.lang.Object get(int)>(i45);

        $r122 = (ucar.nc2.iosp.sigmet.Ray) $r121;

        $r176[i45] = $r122;

        i45 = i45 + 1;

        goto label32;

     label33:
        i46 = 0;

     label34:
        $i88 = (int) $s0;

        if i46 >= $i88 goto label35;

        $r118 = r203[i43];

        $r117 = r204[i43];

        $r119 = virtualinvoke $r117.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i46);

        $r120 = $r176[i46];

        $f5 = virtualinvoke $r120.<ucar.nc2.iosp.sigmet.Ray: float getAz()>();

        virtualinvoke $r118.<ucar.ma2.ArrayFloat$D1: void setFloat(ucar.ma2.Index,float)>($r119, $f5);

        i46 = i46 + 1;

        goto label34;

     label35:
        i43 = i43 + 1;

        goto label27;

     label36:
        $i89 = (int) $s3;

        r207 = newarray (ucar.nc2.Variable)[$i89];

        $i90 = (int) $s3;

        r208 = newarray (ucar.ma2.ArrayFloat$D1)[$i90];

        $i91 = (int) $s3;

        r209 = newarray (ucar.ma2.Index)[$i91];

        r210 = "elevationR";

        i47 = 0;

     label37:
        $i92 = (int) $s3;

        if i47 >= $i92 goto label46;

        $i93 = (int) $s3;

        if $i93 <= 1 goto label38;

        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("elevationR_sweep_");

        $i27 = i47 + 1;

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        r210 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

     label38:
        i48 = 0;

     label39:
        if i48 >= $i22 goto label41;

        $r103 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>(i48);

        r211 = (ucar.nc2.Variable) $r103;

        $r104 = virtualinvoke r211.<ucar.nc2.Variable: java.lang.String getName()>();

        $r105 = virtualinvoke r210.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r104.<java.lang.String: boolean equals(java.lang.Object)>($r105);

        if $z1 == 0 goto label40;

        r207[i47] = r211;

        goto label41;

     label40:
        i48 = i48 + 1;

        goto label39;

     label41:
        $r91 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r90 = r207[i47];

        $r92 = virtualinvoke $r90.<ucar.nc2.Variable: int[] getShape()>();

        $r93 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r91, $r92);

        $r94 = (ucar.ma2.ArrayFloat$D1) $r93;

        r208[i47] = $r94;

        $r95 = r208[i47];

        $r96 = virtualinvoke $r95.<ucar.ma2.ArrayFloat$D1: ucar.ma2.Index getIndex()>();

        r209[i47] = $r96;

        $r106 = $r153[i47];

        i49 = 0;

     label42:
        $i94 = (int) $s0;

        if i49 >= $i94 goto label43;

        $r101 = interfaceinvoke $r106.<java.util.List: java.lang.Object get(int)>(i49);

        $r102 = (ucar.nc2.iosp.sigmet.Ray) $r101;

        $r176[i49] = $r102;

        i49 = i49 + 1;

        goto label42;

     label43:
        i50 = 0;

     label44:
        $i95 = (int) $s0;

        if i50 >= $i95 goto label45;

        $r98 = r208[i47];

        $r97 = r209[i47];

        $r99 = virtualinvoke $r97.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i50);

        $r100 = $r176[i50];

        $f4 = virtualinvoke $r100.<ucar.nc2.iosp.sigmet.Ray: float getElev()>();

        virtualinvoke $r98.<ucar.ma2.ArrayFloat$D1: void setFloat(ucar.ma2.Index,float)>($r99, $f4);

        i50 = i50 + 1;

        goto label44;

     label45:
        i47 = i47 + 1;

        goto label37;

     label46:
        r212 = null;

        i51 = 0;

     label47:
        $i96 = (int) $s3;

        if i51 >= $i96 goto label51;

        i52 = 0;

     label48:
        if i52 >= $i22 goto label50;

        $r88 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>(i52);

        r213 = (ucar.nc2.Variable) $r88;

        $r89 = virtualinvoke r213.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>("numGates");

        if $z0 == 0 goto label49;

        r212 = r213;

        goto label50;

     label49:
        i52 = i52 + 1;

        goto label48;

     label50:
        i51 = i51 + 1;

        goto label47;

     label51:
        $r71 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r72 = virtualinvoke r212.<ucar.nc2.Variable: int[] getShape()>();

        $r73 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r71, $r72);

        r214 = (ucar.ma2.ArrayInt$D1) $r73;

        $r74 = virtualinvoke r214.<ucar.ma2.ArrayInt$D1: ucar.ma2.Index getIndex()>();

        i53 = 0;

     label52:
        $i97 = (int) $s3;

        if i53 >= $i97 goto label55;

        r83 = $r153[i53];

        i54 = 0;

     label53:
        $i98 = (int) $s0;

        if i54 >= $i98 goto label54;

        $r86 = interfaceinvoke r83.<java.util.List: java.lang.Object get(int)>(i54);

        $r87 = (ucar.nc2.iosp.sigmet.Ray) $r86;

        $r176[i54] = $r87;

        i54 = i54 + 1;

        goto label53;

     label54:
        $r84 = $r176[0];

        $s26 = virtualinvoke $r84.<ucar.nc2.iosp.sigmet.Ray: short getBins()>();

        $r85 = virtualinvoke $r74.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i53);

        $i99 = (int) $s26;

        virtualinvoke r214.<ucar.ma2.ArrayInt$D1: void setInt(ucar.ma2.Index,int)>($r85, $i99);

        i53 = i53 + 1;

        goto label52;

     label55:
        i55 = 0;

     label56:
        $i100 = (int) $s3;

        if i55 >= $i100 goto label57;

        $r76 = $r177[i55];

        $r75 = $r178[i55];

        virtualinvoke $r76.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r75, 0);

        $r78 = r199[i55];

        $r77 = r69[i55];

        virtualinvoke $r78.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r77, 0);

        $r80 = r202[i55];

        $r79 = r203[i55];

        virtualinvoke $r80.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r79, 0);

        $r82 = r207[i55];

        $r81 = r208[i55];

        virtualinvoke $r82.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r81, 0);

        i55 = i55 + 1;

        goto label56;

     label57:
        virtualinvoke r212.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r214, 0);

     label58:
        goto label60;

     label59:
        $r189 := @caughtexception;

        $r190 = <java.lang.System: java.io.PrintStream out>;

        $r191 = virtualinvoke $r189.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r190.<java.io.PrintStream: void println(java.lang.String)>($r191);

        virtualinvoke $r189.<java.lang.Exception: void printStackTrace()>();

     label60:
        return;

        catch java.lang.Exception from label05 to label58 with label59;
    }

    public ucar.ma2.Array readData1(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r0;
        ucar.nc2.iosp.LayoutRegular $r4;
        ucar.ma2.DataType $r3;
        ucar.ma2.Array r9;
        int[] $r1, $r5;
        int $i0;
        ucar.nc2.Variable r2;
        java.lang.String $r6, $r7;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r8;
        boolean $z0, $z1, $z2;

        r8 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r2 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        $r1 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r3, $r1);

        $r4 = new ucar.nc2.iosp.LayoutRegular;

        $i0 = virtualinvoke r2.<ucar.nc2.Variable: int getElementSize()>();

        $r5 = virtualinvoke r2.<ucar.nc2.Variable: int[] getShape()>();

        specialinvoke $r4.<ucar.nc2.iosp.LayoutRegular: void <init>(long,int,int[],ucar.ma2.Section)>(0L, $i0, $r5, r0);

        $r6 = virtualinvoke r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("time");

        $r7 = virtualinvoke r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("numGates");

        $z2 = $z0 | $z1;

        if $z2 == 0 goto label1;

        r9 = virtualinvoke r8.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.ma2.Array readIntData(ucar.nc2.iosp.LayoutRegular,ucar.nc2.Variable)>($r4, r2);

        goto label2;

     label1:
        r9 = virtualinvoke r8.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.ma2.Array readFloatData(ucar.nc2.iosp.LayoutRegular,ucar.nc2.Variable)>($r4, r2);

     label2:
        return r9;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        int[] $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.ma2.Range $r8, $r9, $r10, $r14, $r15;
        ucar.ma2.DataType $r1;
        java.util.List $r13, r22, r23;
        ucar.ma2.Section r3;
        int $i0, $i1, $i2, i3;
        ucar.nc2.Variable r0;
        java.lang.String $r7;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r11;
        ucar.ma2.IndexIterator $r6;
        ucar.ma2.Array $r5;
        ucar.nc2.iosp.sigmet.SigmetVolumeScan $r17, $r18, $r19, $r20, $r21;
        java.lang.Class $r2;
        java.lang.Object $r12, $r16;

        r11 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r0 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.Section;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r4 = virtualinvoke r3.<ucar.ma2.Section: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r2, $r4);

        $r6 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        r22 = null;

        $r7 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Reflectivity");

        if $z0 == 0 goto label1;

        $r21 = r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r22 = virtualinvoke $r21.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getReflectivityGroups()>();

        goto label5;

     label1:
        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Velocity");

        if $z1 == 0 goto label2;

        $r20 = r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r22 = virtualinvoke $r20.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getVelocityGroups()>();

        goto label5;

     label2:
        $z2 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("TotalPower");

        if $z2 == 0 goto label3;

        $r19 = r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r22 = virtualinvoke $r19.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getTotalPowerGroups()>();

        goto label5;

     label3:
        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Width");

        if $z3 == 0 goto label4;

        $r18 = r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r22 = virtualinvoke $r18.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getWidthGroups()>();

        goto label5;

     label4:
        $z4 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("DiffReflectivity");

        if $z4 == 0 goto label5;

        $r17 = r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        r22 = virtualinvoke $r17.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: java.util.List getDifferentialReflectivityGroups()>();

     label5:
        $i2 = virtualinvoke r3.<ucar.ma2.Section: int getRank()>();

        if $i2 != 2 goto label6;

        $r14 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r15 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $r16 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(0);

        r23 = (java.util.List) $r16;

        specialinvoke r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: void readOneScan(java.util.List,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.IndexIterator)>(r23, $r14, $r15, $r6);

        goto label8;

     label6:
        $r8 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r9 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $r10 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(2);

        i3 = virtualinvoke $r8.<ucar.ma2.Range: int first()>();

     label7:
        $i0 = virtualinvoke $r8.<ucar.ma2.Range: int last()>();

        if i3 > $i0 goto label8;

        $r12 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i3);

        $r13 = (java.util.List) $r12;

        specialinvoke r11.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: void readOneScan(java.util.List,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.IndexIterator)>($r13, $r9, $r10, $r6);

        $i1 = virtualinvoke $r8.<ucar.ma2.Range: int stride()>();

        i3 = i3 + $i1;

        goto label7;

     label8:
        return $r5;
    }

    private void readOneScan(java.util.List, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.IndexIterator) throws java.io.IOException
    {
        ucar.ma2.Range r1, r5;
        ucar.ma2.IndexIterator r6;
        ucar.nc2.iosp.sigmet.Ray r3;
        java.util.List r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r4;

        r4 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: ucar.ma2.Range;

        r5 := @parameter2: ucar.ma2.Range;

        r6 := @parameter3: ucar.ma2.IndexIterator;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i3 = virtualinvoke r1.<ucar.ma2.Range: int first()>();

     label1:
        $i1 = virtualinvoke r1.<ucar.ma2.Range: int last()>();

        if i3 > $i1 goto label4;

        if i3 < $i0 goto label2;

        specialinvoke r4.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: void readOneRadial(ucar.nc2.iosp.sigmet.Ray,ucar.ma2.Range,ucar.ma2.IndexIterator)>(null, r5, r6);

        goto label3;

     label2:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (ucar.nc2.iosp.sigmet.Ray) $r2;

        specialinvoke r4.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: void readOneRadial(ucar.nc2.iosp.sigmet.Ray,ucar.ma2.Range,ucar.ma2.IndexIterator)>(r3, r5, r6);

     label3:
        $i2 = virtualinvoke r1.<ucar.ma2.Range: int stride()>();

        i3 = i3 + $i2;

        goto label1;

     label4:
        return;
    }

    private void readOneRadial(ucar.nc2.iosp.sigmet.Ray, ucar.ma2.Range, ucar.ma2.IndexIterator) throws java.io.IOException
    {
        ucar.ma2.Range r3;
        ucar.unidata.io.RandomAccessFile $r5;
        ucar.ma2.IndexIterator r4;
        ucar.nc2.iosp.sigmet.Ray r0;
        ucar.nc2.iosp.sigmet.SigmetVolumeScan $r2;
        int $i0, $i1, i2;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r1;

        r1 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r0 := @parameter0: ucar.nc2.iosp.sigmet.Ray;

        r3 := @parameter1: ucar.ma2.Range;

        r4 := @parameter2: ucar.ma2.IndexIterator;

        if r0 != null goto label3;

        i2 = virtualinvoke r3.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke r3.<ucar.ma2.Range: int last()>();

        if i2 > $i0 goto label2;

        interfaceinvoke r4.<ucar.ma2.IndexIterator: void setFloatNext(float)>(#NaNF);

        $i1 = virtualinvoke r3.<ucar.ma2.Range: int stride()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = r1.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.nc2.iosp.sigmet.SigmetVolumeScan volScan>;

        $r5 = $r2.<ucar.nc2.iosp.sigmet.SigmetVolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void readData(ucar.unidata.io.RandomAccessFile,ucar.ma2.Range,ucar.ma2.IndexIterator)>($r5, r3, r4);

        return;
    }

    public ucar.ma2.Array readIntData(ucar.nc2.iosp.LayoutRegular, ucar.nc2.Variable) throws java.io.IOException
    {
        long $l0, $l2, $l5;
        int[] $r5, r6, r8;
        int $i1, $i3, $i4, $i6, $i7;
        ucar.nc2.Variable r0;
        ucar.nc2.iosp.Layout$Chunk $r10;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r11;
        boolean $z0;
        ucar.nc2.iosp.LayoutRegular r7;
        ucar.ma2.DataType $r2;
        ucar.ma2.Array $r1, $r9;
        java.lang.Class $r3;
        java.lang.Object $r4;

        r11 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r7 := @parameter0: ucar.nc2.iosp.LayoutRegular;

        r0 := @parameter1: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r3 = virtualinvoke $r2.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r4 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r3);

        $r5 = (int[]) $r4;

        r6 = (int[]) $r5;

        $l0 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: long getTotalNelems()>();

        $i1 = (int) $l0;

        r8 = newarray (int)[$i1];

     label1:
        $z0 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: ucar.nc2.iosp.Layout$Chunk next()>();

        $l2 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: long getSrcPos()>();

        $i3 = (int) $l2;

        $i4 = $i3 / 4;

        $l5 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: long getDestElem()>();

        $i6 = (int) $l5;

        $i7 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: int getNelems()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, $i4, r8, $i6, $i7);

        goto label1;

     label2:
        $r9 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Object)>(r8);

        return $r9;
    }

    public ucar.ma2.Array readFloatData(ucar.nc2.iosp.LayoutRegular, ucar.nc2.Variable) throws java.io.IOException
    {
        float[] $r5, r6, r8;
        long $l0, $l2, $l5;
        int $i1, $i3, $i4, $i6, $i7;
        ucar.nc2.Variable r0;
        ucar.nc2.iosp.Layout$Chunk $r10;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r11;
        boolean $z0;
        ucar.nc2.iosp.LayoutRegular r7;
        ucar.ma2.DataType $r2;
        ucar.ma2.Array $r1, $r9;
        java.lang.Class $r3;
        java.lang.Object $r4;

        r11 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r7 := @parameter0: ucar.nc2.iosp.LayoutRegular;

        r0 := @parameter1: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r3 = virtualinvoke $r2.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r4 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r3);

        $r5 = (float[]) $r4;

        r6 = (float[]) $r5;

        $l0 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: long getTotalNelems()>();

        $i1 = (int) $l0;

        r8 = newarray (float)[$i1];

     label1:
        $z0 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r7.<ucar.nc2.iosp.LayoutRegular: ucar.nc2.iosp.Layout$Chunk next()>();

        $l2 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: long getSrcPos()>();

        $i3 = (int) $l2;

        $i4 = $i3 / 4;

        $l5 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: long getDestElem()>();

        $i6 = (int) $l5;

        $i7 = interfaceinvoke $r10.<ucar.nc2.iosp.Layout$Chunk: int getNelems()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, $i4, r8, $i6, $i7);

        goto label1;

     label2:
        $r9 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Object)>(r8);

        return $r9;
    }

    public long readToByteChannel11(ucar.nc2.Variable, ucar.ma2.Section, java.nio.channels.WritableByteChannel) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r5;
        java.lang.Float $r15;
        ucar.ma2.Section r2;
        long $l0, $l2, $l7;
        float[] r4;
        java.nio.ByteBuffer $r7, $r8;
        byte $b8, $b9;
        int $i1, $i3, $i4, $i5, $i6, i10;
        ucar.nc2.Variable r1;
        java.lang.String $r14;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;
        boolean $z0, $z1;
        java.io.PrintStream $r11;
        ucar.ma2.IndexIterator $r6;
        ucar.ma2.Array $r3;
        java.nio.channels.WritableByteChannel r9;
        float $f0, $f1;
        java.lang.StringBuilder $r10, $r12, $r13;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.ma2.Section;

        r9 := @parameter2: java.nio.channels.WritableByteChannel;

        $r3 = virtualinvoke r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.ma2.Array readData(ucar.nc2.Variable,ucar.ma2.Section)>(r1, r2);

        $l0 = virtualinvoke $r3.<ucar.ma2.Array: long getSize()>();

        $i1 = (int) $l0;

        r4 = newarray (float)[$i1];

        $l2 = virtualinvoke $r3.<ucar.ma2.Array: long getSize()>();

        $i3 = (int) $l2;

        $i4 = $i3 * 4;

        r5 = newarray (byte)[$i4];

        $r6 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i10 = 0;

        $i5 = lengthof r5;

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i5);

     label1:
        $z0 = interfaceinvoke $r6.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $f0 = interfaceinvoke $r6.<ucar.ma2.IndexIterator: float getFloatNext()>();

        r4[i10] = $f0;

        $r15 = new java.lang.Float;

        $f1 = r4[i10];

        specialinvoke $r15.<java.lang.Float: void <init>(float)>($f1);

        $b8 = virtualinvoke $r15.<java.lang.Float: byte byteValue()>();

        r5[i10] = $b8;

        $b9 = r5[i10];

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b9);

        i10 = i10 + 1;

        goto label1;

     label2:
        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5);

        $i6 = interfaceinvoke r9.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r8);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COUNT=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $z1 = virtualinvoke $r8.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z1 == 0 goto label3;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer compact()>();

        goto label4;

     label3:
        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label4:
        $l7 = (long) $i6;

        return $l7;
    }

    static float calcAngle(short)
    {
        java.math.BigDecimal $r2, $r3;
        short s0;
        byte $b1;
        int $i2;
        float $f0;
        double $d0, $d1, d2;
        java.math.RoundingMode $r1;

        s0 := @parameter0: short;

        d2 = (double) s0;

        $b1 = d2 cmpg 0.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        d2 = 65536.0 + d2;

     label1:
        $d0 = d2 / 65536.0;

        $d1 = $d0 * 360.0;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>($d1);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r1);

        $f0 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f0;
    }

    static float calcAngle(int)
    {
        java.math.BigDecimal $r0, $r2;
        int i0;
        float $f0;
        double $d0, $d1, d2;
        java.math.RoundingMode $r1;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 / 4.294967296E9;

        d2 = $d1 * 360.0;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d2);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(3, $r1);

        $f0 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f0;
    }

    static float calcElev(short)
    {
        java.math.BigDecimal $r2, $r3;
        short s0, $s1, $s5;
        int $i2, $i3, $i6;
        float $f0;
        double $d0, $d1, d2;
        java.math.RoundingMode $r1;

        s0 := @parameter0: short;

        d2 = (double) s0;

        $i3 = (int) s0;

        if $i3 >= 0 goto label1;

        $s5 = (short) -1;

        $s1 = s0 ^ $s5;

        $i6 = (int) $s1;

        $i2 = $i6 + 1;

        d2 = (double) $i2;

     label1:
        $d0 = d2 / 65536.0;

        $d1 = $d0 * 360.0;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>($d1);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r1);

        $f0 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f0;
    }

    static float calcStep(float, float, short)
    {
        java.math.BigDecimal $r2, $r3;
        short s0;
        int $i1, $i2;
        float f0, f1, $f2, $f3, f4, $f5;
        double $d0;
        java.math.RoundingMode $r1;

        f1 := @parameter0: float;

        f0 := @parameter1: float;

        s0 := @parameter2: short;

        $f3 = f0 - f1;

        $i2 = (int) s0;

        $i1 = $i2 - 1;

        $f2 = (float) $i1;

        f4 = $f3 / $f2;

        $r3 = new java.math.BigDecimal;

        $d0 = (double) f4;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>($d0);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r1);

        $f5 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f5;
    }

    static float calcAz(short, short)
    {
        java.math.BigDecimal $r2, $r3;
        short s0, s1;
        byte $b2;
        int $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, d4;
        java.math.RoundingMode $r1;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $f0 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcAngle(short)>(s0);

        $f1 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcAngle(short)>(s1);

        $f2 = $f0 - $f1;

        f7 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $i3 = (int) s0;

        if $i3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i4 = (int) s1;

        if $i4 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z2 = $z0 & $z1;

        if $z2 == 0 goto label5;

        $f4 = 360.0F - $f0;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        f7 = $f5 + $f6;

     label5:
        $d2 = (double) $f0;

        $d0 = (double) f7;

        $d1 = $d0 * 0.5;

        $d3 = $d2 + $d1;

        d4 = $d3;

        $b2 = $d3 cmpl 360.0;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label6;

        d4 = $d3 - 360.0;

     label6:
        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(d4);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r1);

        $f3 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f3;
    }

    static float calcData(java.util.Map, short, byte)
    {
        java.lang.Float $r5;
        java.math.BigDecimal $r8, $r9;
        byte b2;
        java.lang.Short $r3;
        java.util.Map r1;
        java.math.RoundingMode $r7;
        float $f0, $f1;
        short[] $r0;
        short $s0, s1, $s3, $s5, $s7, $s8, $s9, $s11, $s12, $s15, $s17, $s20, $s23, $s24;
        int $i4, $i6, $i10, $i13, $i14, $i16, $i18, $i19, $i21, $i22, $i25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15;
        java.lang.Object $r2, $r4;

        r1 := @parameter0: java.util.Map;

        s1 := @parameter1: short;

        b2 := @parameter2: byte;

        $r0 = newarray (short)[4];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 3;

        $r0[3] = 4;

        $r2 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("multiprf");

        $r3 = (java.lang.Short) $r2;

        $s0 = virtualinvoke $r3.<java.lang.Short: short shortValue()>();

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("vNyq");

        $r5 = (java.lang.Float) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        d14 = -999.99;

        $i14 = (int) s1;

        tableswitch($i14)
        {
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label1;
        };

     label1:
        if b2 == 0 goto label5;

        $s15 = (short) b2;

        $s12 = $s15 & 255;

        $i16 = (int) $s12;

        $i13 = $i16 - 64;

        $d13 = (double) $i13;

        d14 = $d13 * 0.5;

        goto label5;

     label2:
        if b2 == 0 goto label5;

        $s17 = (short) b2;

        $s9 = $s17 & 255;

        $i18 = (int) $s9;

        $i10 = $i18 - 128;

        $d8 = (double) $i10;

        $d10 = $d8 / 127.0;

        $d9 = (double) $f0;

        $d12 = $d10 * $d9;

        $i19 = (int) $s0;

        $s11 = $r0[$i19];

        $d11 = (double) $s11;

        d14 = $d12 * $d11;

        goto label5;

     label3:
        if b2 == 0 goto label5;

        $s20 = (short) b2;

        $s5 = $s20 & 255;

        $i21 = (int) $s5;

        $i6 = $i21 - 128;

        $d1 = (double) $i6;

        $d3 = $d1 / 127.0;

        $d2 = (double) $f0;

        $d5 = $d3 * $d2;

        $i22 = (int) $s0;

        $s7 = $r0[$i22];

        $d4 = (double) $s7;

        d15 = $d5 * $d4;

        $s23 = (short) b2;

        $s8 = $s23 & 255;

        $d6 = (double) $s8;

        $d7 = $d6 / 256.0;

        d14 = $d7 * d15;

        goto label5;

     label4:
        if b2 == 0 goto label5;

        $s24 = (short) b2;

        $s3 = $s24 & 255;

        $i25 = (int) $s3;

        $i4 = $i25 - 128;

        $d0 = (double) $i4;

        d14 = $d0 / 16.0;

     label5:
        $r9 = new java.math.BigDecimal;

        specialinvoke $r9.<java.math.BigDecimal: void <init>(double)>(d14);

        $r7 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r8 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r7);

        $f1 = virtualinvoke $r8.<java.math.BigDecimal: float floatValue()>();

        return $f1;
    }

    static java.lang.String calcTime(int, int)
    {
        int[] r1;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String $r2, $r3, r10;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r1 = newarray (int)[3];

        $i2 = i0 + i1;

        i3 = $i2 / 60;

        $i4 = i0 + i1;

        $i5 = $i4 % 60;

        r1[2] = $i5;

        $i6 = i3 / 60;

        r1[0] = $i6;

        $i7 = i3 % 60;

        r1[1] = $i7;

        i11 = 0;

     label1:
        if i11 >= 3 goto label4;

        $i8 = r1[i11];

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        r10 = $r3;

        $i9 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i9 >= 2 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $i10 = r1[i11];

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        if i11 == 2 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        i11 = i11 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static float calcNyquist(int, int)
    {
        java.math.BigDecimal $r0, $r2;
        int i0, i1, $i2;
        float $f0;
        double $d0, $d1, d2, d3;
        java.math.RoundingMode $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 * i1;

        $d0 = (double) $i2;

        $d1 = $d0 * 0.01;

        d2 = $d1 * 0.25;

        d3 = d2 * 0.01;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d3);

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $r2 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r1);

        $f0 = virtualinvoke $r2.<java.math.BigDecimal: float floatValue()>();

        return $f0;
    }

    public ucar.ma2.Array readNestedData(ucar.nc2.Variable, java.util.List) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.Variable r1;
        java.util.List r2;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: java.util.List;

        return null;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        $r1 = r0.<ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    public void setSpecial(java.lang.Object)
    {
        java.lang.Object r1;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public java.lang.String toStringDebug(java.lang.Object)
    {
        java.lang.Object r1;
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public java.lang.String getDetailInfo()
    {
        ucar.nc2.iosp.sigmet.SigmetIOServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.sigmet.SigmetIOServiceProvider;

        return null;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.lang.String def_datafile> = "SIGMET-IRIS";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr> = $r0;

        return;
    }
}
