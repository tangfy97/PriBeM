public class com.google.gxp.compiler.base.BundleType extends com.google.gxp.compiler.base.Type
{
    private final com.google.gxp.compiler.schema.Schema schema;
    private final com.google.gxp.com.google.common.collect.ImmutableMap attrMap;

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, com.google.gxp.compiler.schema.Schema, java.util.Map)
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        com.google.gxp.compiler.schema.Schema r3, $r5;
        java.util.Map r6;
        com.google.gxp.com.google.common.collect.ImmutableMap $r7;
        com.google.gxp.compiler.base.BundleType r0;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.gxp.compiler.schema.Schema;

        r6 := @parameter3: java.util.Map;

        specialinvoke r0.<com.google.gxp.compiler.base.Type: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (com.google.gxp.compiler.schema.Schema) $r4;

        r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema schema> = $r5;

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap copyOf(java.util.Map)>(r6);

        r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.com.google.common.collect.ImmutableMap attrMap> = $r7;

        return;
    }

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.Schema, java.util.Map)
    {
        com.google.gxp.compiler.base.Node r1;
        java.util.Map r5;
        com.google.gxp.com.google.common.collect.ImmutableMap $r6;
        com.google.gxp.compiler.base.BundleType r0;
        com.google.gxp.compiler.schema.Schema r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r5 := @parameter2: java.util.Map;

        specialinvoke r0.<com.google.gxp.compiler.base.Type: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.gxp.compiler.schema.Schema) $r3;

        r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema schema> = $r4;

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap copyOf(java.util.Map)>(r5);

        r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.com.google.common.collect.ImmutableMap attrMap> = $r6;

        return;
    }

    public com.google.gxp.compiler.schema.Schema getSchema()
    {
        com.google.gxp.compiler.base.BundleType r0;
        com.google.gxp.compiler.schema.Schema $r1;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        $r1 = r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema schema>;

        return $r1;
    }

    public java.util.Map getAttrMap()
    {
        com.google.gxp.compiler.base.BundleType r0;
        com.google.gxp.com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        $r1 = r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.com.google.common.collect.ImmutableMap attrMap>;

        return $r1;
    }

    public com.google.gxp.compiler.schema.AttributeValidator getValidator(java.lang.String)
    {
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        com.google.gxp.compiler.schema.AttributeValidator $r4;
        com.google.gxp.compiler.base.BundleType r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.com.google.common.collect.ImmutableMap attrMap>;

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.google.gxp.compiler.schema.AttributeValidator) $r3;

        return $r4;
    }

    public boolean takesDefaultParam()
    {
        com.google.gxp.compiler.base.BundleType r0;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        return 0;
    }

    public boolean onlyAllowedInParam()
    {
        com.google.gxp.compiler.base.BundleType r0;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        return 1;
    }

    public com.google.gxp.compiler.base.Expression parseObjectConstant(java.lang.String, com.google.gxp.compiler.base.ObjectConstant, com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.base.Expression $r10;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r5;
        com.google.gxp.compiler.alerts.common.InvalidAttributeValueError $r11;
        com.google.gxp.compiler.base.StringConstant $r13;
        com.google.gxp.compiler.base.ObjectConstant r3;
        com.google.gxp.compiler.base.BooleanConstant $r12;
        com.google.gxp.compiler.alerts.AlertSink r8;
        com.google.gxp.compiler.schema.AttributeValidator $r2;
        java.lang.Boolean $r7;
        com.google.gxp.compiler.base.BundleType r0;
        java.lang.String r1, $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.google.gxp.compiler.base.ObjectConstant;

        r8 := @parameter2: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.AttributeValidator getValidator(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.base.ObjectConstant: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<com.google.gxp.compiler.schema.AttributeValidator: boolean isValidValue(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r11 = new com.google.gxp.compiler.alerts.common.InvalidAttributeValueError;

        specialinvoke $r11.<com.google.gxp.compiler.alerts.common.InvalidAttributeValueError: void <init>(com.google.gxp.compiler.base.Node)>(r3);

        interfaceinvoke r8.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r11);

     label1:
        $r5 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag BOOLEAN>;

        $z1 = virtualinvoke $r2.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r5);

        if $z1 == 0 goto label2;

        $r12 = new com.google.gxp.compiler.base.BooleanConstant;

        $r10 = $r12;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r12.<com.google.gxp.compiler.base.BooleanConstant: void <init>(com.google.gxp.compiler.base.Node,java.lang.Boolean)>(r3, $r7);

        goto label3;

     label2:
        $r13 = new com.google.gxp.compiler.base.StringConstant;

        $r10 = $r13;

        $r6 = virtualinvoke r3.<com.google.gxp.compiler.base.ObjectConstant: java.lang.String getValue()>();

        specialinvoke $r13.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r3, null, $r6);

     label3:
        return $r10;
    }

    public java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)
    {
        com.google.gxp.compiler.base.TypeVisitor r0;
        com.google.gxp.compiler.base.BundleType r1;
        java.lang.Object $r2;

        r1 := @this: com.google.gxp.compiler.base.BundleType;

        r0 := @parameter0: com.google.gxp.compiler.base.TypeVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.TypeVisitor: java.lang.Object visitBundleType(com.google.gxp.compiler.base.BundleType)>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.google.gxp.com.google.common.collect.ImmutableSet $r3;
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        java.lang.StringBuilder $r0;
        com.google.gxp.compiler.base.BundleType r1;
        java.lang.String $r4;

        r1 := @this: com.google.gxp.compiler.base.BundleType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("AttributeBundle(");

        $r2 = r1.<com.google.gxp.compiler.base.BundleType: com.google.gxp.com.google.common.collect.ImmutableMap attrMap>;

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableSet keySet()>();

        staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Iterable)>($r0, ", ", $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean matches(com.google.gxp.compiler.base.Type)
    {
        com.google.gxp.compiler.schema.Schema $r3, $r4;
        com.google.gxp.compiler.base.Type r0;
        java.util.Map $r5, $r6;
        com.google.gxp.compiler.base.BundleType r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.google.gxp.compiler.base.BundleType;

        r0 := @parameter0: com.google.gxp.compiler.base.Type;

        $z0 = r0 instanceof com.google.gxp.compiler.base.BundleType;

        if $z0 == 0 goto label3;

        r1 = (com.google.gxp.compiler.base.BundleType) r0;

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r2.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.BundleType r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.base.BundleType;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.base.BundleType) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.base.BundleType: boolean equals(com.google.gxp.compiler.base.BundleType)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.BundleType)
    {
        com.google.gxp.compiler.schema.Schema $r2, $r3;
        java.util.Map $r4, $r5;
        com.google.gxp.compiler.base.BundleType r0, r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.gxp.compiler.base.BundleType;

        r1 := @parameter0: com.google.gxp.compiler.base.BundleType;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.BundleType: boolean equalsType(com.google.gxp.compiler.base.Type)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        java.util.Map $r4;
        int $i0, $i1;
        com.google.gxp.compiler.base.BundleType r1;
        com.google.gxp.compiler.schema.Schema $r3;
        java.lang.Integer $r2;

        r1 := @this: com.google.gxp.compiler.base.BundleType;

        $r0 = newarray (java.lang.Object)[3];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: int typeHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r0[1] = $r3;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $r0[2] = $r4;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
