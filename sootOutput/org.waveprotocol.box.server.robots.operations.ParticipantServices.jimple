public class org.waveprotocol.box.server.robots.operations.ParticipantServices extends java.lang.Object implements org.waveprotocol.box.server.robots.operations.OperationService
{
    private static final org.waveprotocol.wave.util.logging.Log LOG;

    private void <init>()
    {
        org.waveprotocol.box.server.robots.operations.ParticipantServices r0;

        r0 := @this: org.waveprotocol.box.server.robots.operations.ParticipantServices;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(com.google.wave.api.OperationRequest, org.waveprotocol.box.server.robots.OperationContext, org.waveprotocol.wave.model.wave.ParticipantId) throws com.google.wave.api.InvalidRequestException
    {
        org.waveprotocol.box.server.robots.operations.ParticipantServices r55;
        org.waveprotocol.wave.model.wave.ParticipantId r2, $r8;
        org.waveprotocol.wave.model.conversation.ObservableConversation $r4;
        int[] $r13;
        java.lang.Long $r18, $r31;
        org.waveprotocol.wave.model.conversation.ObservableConversationView $r3;
        org.waveprotocol.wave.util.logging.Log $r25, $r38, $r53;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r5;
        boolean $z0, $z1;
        org.waveprotocol.box.server.robots.OperationContext r0;
        java.util.Set $r14, $r27;
        com.google.wave.api.event.WaveletParticipantsChangedEvent $r16, $r29, r56;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r32, $r34, $r35, $r36, $r41, $r42, $r44, $r47, $r48, $r49, $r50, $r51;
        com.google.wave.api.OperationRequest r1;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r46;
        long $l2, $l3;
        com.google.wave.api.OperationType $r12;
        java.util.ArrayList $r10, $r11;
        int $i0, $i1;
        java.lang.String r7, $r9, $r15, $r17, $r20, $r24, $r28, $r30, $r33, $r37, $r43, $r45, $r52;
        com.google.wave.api.InvalidRequestException $r26, $r39, $r54;
        java.lang.UnsupportedOperationException $r40;
        java.lang.Object $r6;

        r55 := @this: org.waveprotocol.box.server.robots.operations.ParticipantServices;

        r1 := @parameter0: com.google.wave.api.OperationRequest;

        r0 := @parameter1: org.waveprotocol.box.server.robots.OperationContext;

        r2 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        $r3 = interfaceinvoke r0.<org.waveprotocol.box.server.robots.OperationContext: org.waveprotocol.wave.model.conversation.ObservableConversationView openConversation(com.google.wave.api.OperationRequest,org.waveprotocol.wave.model.wave.ParticipantId)>(r1, r2);

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.conversation.ObservableConversationView: org.waveprotocol.wave.model.conversation.ObservableConversation getRoot()>();

        $r5 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PARTICIPANT_ID>;

        $r6 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: java.lang.Object getRequiredParameter(com.google.wave.api.OperationRequest,com.google.wave.api.JsonRpcConstant$ParamsProperty)>(r1, $r5);

        r7 = (java.lang.String) $r6;

     label01:
        $r8 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>(r7);

     label02:
        goto label04;

     label03:
        $r46 := @caughtexception;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target ParticipantId ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("valid");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = <org.waveprotocol.box.server.robots.operations.ParticipantServices: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r53.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r52);

        $r54 = new com.google.wave.api.InvalidRequestException;

        specialinvoke $r54.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String)>($r52);

        throw $r54;

     label04:
        $r9 = staticinvoke <org.waveprotocol.box.server.robots.util.ConversationUtil: java.lang.String getRootBlipId(org.waveprotocol.wave.model.conversation.Conversation)>($r4);

        $r10 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r11 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r12 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: com.google.wave.api.OperationType getOperationType(com.google.wave.api.OperationRequest)>(r1);

        $r13 = <org.waveprotocol.box.server.robots.operations.ParticipantServices$1: int[] $SwitchMap$com$google$wave$api$OperationType>;

        $i0 = virtualinvoke $r12.<com.google.wave.api.OperationType: int ordinal()>();

        $i1 = $r13[$i0];

        lookupswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label07;
            default: goto label09;
        };

     label05:
        $r27 = interfaceinvoke $r4.<org.waveprotocol.wave.model.conversation.ObservableConversation: java.util.Set getParticipantIds()>();

        $z1 = interfaceinvoke $r27.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z1 == 0 goto label06;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r8.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already a ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("member of wavelet");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = <org.waveprotocol.box.server.robots.operations.ParticipantServices: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r38.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r37);

        $r39 = new com.google.wave.api.InvalidRequestException;

        specialinvoke $r39.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String,com.google.wave.api.OperationRequest)>($r37, r1);

        throw $r39;

     label06:
        interfaceinvoke $r4.<org.waveprotocol.wave.model.conversation.ObservableConversation: void addParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>($r8);

        $r28 = virtualinvoke $r8.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = new com.google.wave.api.event.WaveletParticipantsChangedEvent;

        $r30 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        specialinvoke $r29.<com.google.wave.api.event.WaveletParticipantsChangedEvent: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,java.lang.Long,java.lang.String,java.util.List,java.util.List)>(null, null, $r30, $r31, $r9, $r10, $r11);

        r56 = $r29;

        goto label10;

     label07:
        $r14 = interfaceinvoke $r4.<org.waveprotocol.wave.model.conversation.ObservableConversation: java.util.Set getParticipantIds()>();

        $z0 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 != 0 goto label08;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r8.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("member of wavelet");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = <org.waveprotocol.box.server.robots.operations.ParticipantServices: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r25.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r24);

        $r26 = new com.google.wave.api.InvalidRequestException;

        specialinvoke $r26.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String,com.google.wave.api.OperationRequest)>($r24, r1);

        throw $r26;

     label08:
        interfaceinvoke $r4.<org.waveprotocol.wave.model.conversation.ObservableConversation: void removeParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>($r8);

        $r15 = virtualinvoke $r8.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new com.google.wave.api.event.WaveletParticipantsChangedEvent;

        $r17 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        specialinvoke $r16.<com.google.wave.api.event.WaveletParticipantsChangedEvent: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,java.lang.Long,java.lang.String,java.util.List,java.util.List)>(null, null, $r17, $r18, $r9, $r10, $r11);

        r56 = $r16;

        goto label10;

     label09:
        $r40 = new java.lang.UnsupportedOperationException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This OperationService does not implement operation of type ");

        $r43 = virtualinvoke $r12.<com.google.wave.api.OperationType: java.lang.String method()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r45);

        throw $r40;

     label10:
        interfaceinvoke r0.<org.waveprotocol.box.server.robots.OperationContext: void processEvent(com.google.wave.api.OperationRequest,com.google.wave.api.event.Event)>(r1, r56);

        return;

        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label01 to label02 with label03;
    }

    public static org.waveprotocol.box.server.robots.operations.ParticipantServices create()
    {
        org.waveprotocol.box.server.robots.operations.ParticipantServices $r0;

        $r0 = new org.waveprotocol.box.server.robots.operations.ParticipantServices;

        specialinvoke $r0.<org.waveprotocol.box.server.robots.operations.ParticipantServices: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/operations/ParticipantServices;");

        <org.waveprotocol.box.server.robots.operations.ParticipantServices: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
