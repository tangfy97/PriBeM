public class com.jidesoft.swing.JideSplitPaneDivider$DragController extends java.lang.Object
{
    int initialLocation;
    int maxLocation;
    int minLocation;
    int offset;
    final com.jidesoft.swing.JideSplitPaneDivider this$0;

    protected void <init>(com.jidesoft.swing.JideSplitPaneDivider, java.awt.event.MouseEvent)
    {
        java.util.Map $r19, $r28;
        java.awt.Component r3, r4, $r15, $r24, $r33, $r34;
        com.jidesoft.swing.JideBoxLayout $r18, $r27;
        java.awt.event.MouseEvent r6;
        java.awt.ComponentOrientation $r2;
        com.jidesoft.swing.JideSplitPane $r8, $r10, $r11, $r12, $r14, $r16, $r23, $r25, $r32;
        java.awt.Point $r5;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z7, $z8;
        java.awt.Dimension $r9, $r13, $r21, $r22, $r30, $r31;
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, $i23, $i24, $i26, $i28;
        java.awt.LayoutManager $r17, $r26;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        java.lang.Object $r7, $r20, $r29;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        r6 := @parameter1: java.awt.event.MouseEvent;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label01;

        $r32 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i18 = virtualinvoke $r32.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        if $i18 != 1 goto label01;

        $z8 = 1;

        $z7 = 1;

        goto label02;

     label01:
        $z8 = 0;

        $z7 = 0;

     label02:
        z1 = $z7;

        if $z8 == 0 goto label03;

        $r33 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component getSecondComponent(boolean)>(0);

        goto label04;

     label03:
        $r33 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component getFirstComponent(boolean)>(0);

     label04:
        r3 = $r33;

        if z1 == 0 goto label05;

        $r34 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component getFirstComponent(boolean)>(0);

        goto label06;

     label05:
        $r34 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Component getSecondComponent(boolean)>(0);

     label06:
        r4 = $r34;

        $r5 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Point getLocation()>();

        $i0 = $r5.<java.awt.Point: int x>;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int initialLocation> = $i0;

        $r7 = virtualinvoke r6.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        if $r7 != r1 goto label07;

        $i17 = virtualinvoke r6.<java.awt.event.MouseEvent: int getX()>();

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset> = $i17;

        goto label08;

     label07:
        $i1 = virtualinvoke r6.<java.awt.event.MouseEvent: int getX()>();

        $i2 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int initialLocation>;

        $i3 = $i1 - $i2;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset> = $i3;

     label08:
        if r3 == null goto label09;

        if r4 == null goto label09;

        $i4 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset>;

        $i26 = (int) -1;

        if $i4 < $i26 goto label09;

        $i5 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset>;

        $r8 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r9 = virtualinvoke $r8.<com.jidesoft.swing.JideSplitPane: java.awt.Dimension getSize()>();

        $i6 = $r9.<java.awt.Dimension: int width>;

        if $i5 < $i6 goto label10;

     label09:
        $i28 = (int) -1;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation> = $i28;

        goto label25;

     label10:
        $r10 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i7 = virtualinvoke $r10.<com.jidesoft.swing.JideSplitPane: int indexOf(java.awt.Component)>(r1);

        i19 = 0;

        i20 = 0;

        i21 = 0;

     label11:
        if i21 >= $i7 goto label15;

        $r23 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r24 = virtualinvoke $r23.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i21);

        $z4 = $r24 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z4 == 0 goto label12;

        $d10 = (double) i19;

        $r31 = virtualinvoke $r24.<java.awt.Component: java.awt.Dimension getSize()>();

        $d11 = virtualinvoke $r31.<java.awt.Dimension: double getWidth()>();

        $d12 = $d10 + $d11;

        i19 = (int) $d12;

        goto label14;

     label12:
        $z5 = virtualinvoke $r24.<java.awt.Component: boolean isVisible()>();

        if $z5 == 0 goto label14;

        $r25 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r26 = virtualinvoke $r25.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r27 = (com.jidesoft.swing.JideBoxLayout) $r26;

        $r28 = virtualinvoke $r27.<com.jidesoft.swing.JideBoxLayout: java.util.Map getConstraintMap()>();

        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        if $r29 != "fix" goto label13;

        $i16 = virtualinvoke $r24.<java.awt.Component: int getWidth()>();

        i19 = i19 + $i16;

        goto label14;

     label13:
        $d7 = (double) i19;

        $r30 = virtualinvoke $r24.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $d8 = virtualinvoke $r30.<java.awt.Dimension: double getWidth()>();

        $d9 = $d7 + $d8;

        i19 = (int) $d9;

     label14:
        i21 = i21 + 1;

        goto label11;

     label15:
        i22 = $i7 + 1;

     label16:
        $r11 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i8 = virtualinvoke $r11.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if i22 >= $i8 goto label20;

        $r14 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r15 = virtualinvoke $r14.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i22);

        $z2 = $r15 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z2 == 0 goto label17;

        $d4 = (double) i20;

        $r22 = virtualinvoke $r15.<java.awt.Component: java.awt.Dimension getSize()>();

        $d5 = virtualinvoke $r22.<java.awt.Dimension: double getWidth()>();

        $d6 = $d4 + $d5;

        i20 = (int) $d6;

        goto label19;

     label17:
        $z3 = virtualinvoke $r15.<java.awt.Component: boolean isVisible()>();

        if $z3 == 0 goto label19;

        $r16 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r17 = virtualinvoke $r16.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r18 = (com.jidesoft.swing.JideBoxLayout) $r17;

        $r19 = virtualinvoke $r18.<com.jidesoft.swing.JideBoxLayout: java.util.Map getConstraintMap()>();

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        if $r20 != "fix" goto label18;

        $i15 = virtualinvoke $r15.<java.awt.Component: int getWidth()>();

        i20 = i20 + $i15;

        goto label19;

     label18:
        $d1 = (double) i20;

        $r21 = virtualinvoke $r15.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $d2 = virtualinvoke $r21.<java.awt.Dimension: double getWidth()>();

        $d3 = $d1 + $d2;

        i20 = (int) $d3;

     label19:
        i22 = i22 + 1;

        goto label16;

     label20:
        if z1 == 0 goto label21;

        $i23 = i20;

        goto label22;

     label21:
        $i23 = i19;

     label22:
        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int minLocation> = $i23;

        $r12 = r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i9 = virtualinvoke $r12.<com.jidesoft.swing.JideSplitPane: int getWidth()>();

        if z1 == 0 goto label23;

        $i24 = i19;

        goto label24;

     label23:
        $i24 = i20;

     label24:
        $r13 = virtualinvoke r1.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Dimension getSize()>();

        $d0 = virtualinvoke $r13.<java.awt.Dimension: double getWidth()>();

        $i10 = (int) $d0;

        $i11 = $i24 + $i10;

        $i12 = $i9 - $i11;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation> = $i12;

        $i14 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation>;

        $i13 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int minLocation>;

        if $i14 >= $i13 goto label25;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation> = 0;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int minLocation> = 0;

     label25:
        return;
    }

    protected boolean isValid()
    {
        int $i0;
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        $i0 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int positionForMouseEvent(java.awt.event.MouseEvent)
    {
        java.awt.Point $r10;
        com.jidesoft.swing.JideSplitPaneDivider$DragController r2;
        com.jidesoft.swing.JideSplitPaneDivider $r3, $r4, $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.awt.event.MouseEvent r0;
        com.jidesoft.swing.JideSplitPane $r5, $r8;
        java.lang.Object $r1;

        r2 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        $r3 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        if $r1 != $r3 goto label1;

        $i11 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $r9 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r10 = virtualinvoke $r9.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Point getLocation()>();

        $i12 = $r10.<java.awt.Point: int x>;

        $i13 = $i11 + $i12;

        goto label2;

     label1:
        $i13 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

     label2:
        $i3 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation>;

        $i2 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int minLocation>;

        $i0 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset>;

        $i1 = $i13 - $i0;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        i14 = $i5;

        $r4 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r5 = $r4.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i6 = virtualinvoke $r5.<com.jidesoft.swing.JideSplitPane: int getDividerStepSize()>();

        if $i6 == 0 goto label3;

        $r6 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i7 = virtualinvoke $r6.<com.jidesoft.swing.JideSplitPaneDivider: int getX()>();

        i8 = $i5 - $i7;

        $r7 = r2.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r8 = $r7.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i9 = virtualinvoke $r8.<com.jidesoft.swing.JideSplitPane: int getDividerStepSize()>();

        $i10 = i8 % $i9;

        i14 = $i5 - $i10;

     label3:
        return i14;
    }

    protected int getNeededLocation(int, int)
    {
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider $r1, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, i12, i13;
        com.jidesoft.swing.JideSplitPane $r2, $r5;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        i0 := @parameter0: int;

        i12 := @parameter1: int;

        $i4 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int maxLocation>;

        $i3 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int minLocation>;

        $i1 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int offset>;

        $i2 = i0 - $i1;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        i13 = $i6;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r2 = $r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i7 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPane: int getDividerStepSize()>();

        if $i7 == 0 goto label1;

        $r3 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i8 = virtualinvoke $r3.<com.jidesoft.swing.JideSplitPaneDivider: int getX()>();

        i9 = $i6 - $i8;

        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r5 = $r4.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $i10 = virtualinvoke $r5.<com.jidesoft.swing.JideSplitPane: int getDividerStepSize()>();

        $i11 = i9 % $i10;

        i13 = $i6 - $i11;

     label1:
        return i13;
    }

    protected void continueDrag(int, int)
    {
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider $r1;
        int i0, i1, $i2;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int getNeededLocation(int,int)>(i0, i1);

        virtualinvoke $r1.<com.jidesoft.swing.JideSplitPaneDivider: void dragDividerTo(int)>($i2);

        return;
    }

    protected void continueDrag(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider $r2;
        int $i0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int positionForMouseEvent(java.awt.event.MouseEvent)>(r1);

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider: void dragDividerTo(int)>($i0);

        return;
    }

    protected void completeDrag(int, int)
    {
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider $r1;
        int i0, i1, $i2;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int getNeededLocation(int,int)>(i0, i1);

        virtualinvoke $r1.<com.jidesoft.swing.JideSplitPaneDivider: void finishDraggingTo(int)>($i2);

        return;
    }

    protected void completeDrag(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.JideSplitPaneDivider$DragController r0;
        com.jidesoft.swing.JideSplitPaneDivider $r2;
        int $i0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$DragController;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $r2 = r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$DragController: int positionForMouseEvent(java.awt.event.MouseEvent)>(r1);

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider: void finishDraggingTo(int)>($i0);

        return;
    }
}
