public class com.hp.hpl.jena.ontology.OntTools$DisjointSet extends java.lang.Object
{
    private com.hp.hpl.jena.rdf.model.Resource m_node;
    private com.hp.hpl.jena.ontology.OntTools$DisjointSet m_parent;
    private int m_rank;
    private com.hp.hpl.jena.ontology.OntTools$DisjointSet m_ancestor;
    private boolean m_black;
    private boolean m_used;

    public void <init>(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_black> = 0;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_used> = 0;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.rdf.model.Resource m_node> = r1;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int m_rank> = 0;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet m_parent> = r0;

        return;
    }

    public com.hp.hpl.jena.rdf.model.Resource getNode()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;
        com.hp.hpl.jena.rdf.model.Resource $r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r1 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.rdf.model.Resource m_node>;

        return $r1;
    }

    public com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, $r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r1 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet m_parent>;

        return $r1;
    }

    public void setParent(com.hp.hpl.jena.ontology.OntTools$DisjointSet)
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet m_parent> = r1;

        return;
    }

    public int getRank()
    {
        int $i0;
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $i0 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int m_rank>;

        return $i0;
    }

    public void incrementRank()
    {
        int $i0, $i1;
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $i0 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int m_rank>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int m_rank> = $i1;

        return;
    }

    public com.hp.hpl.jena.ontology.OntTools$DisjointSet getAncestor()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, $r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r1 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet m_ancestor>;

        return $r1;
    }

    public void setAncestor(com.hp.hpl.jena.ontology.OntTools$DisjointSet)
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r1 := @parameter0: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet m_ancestor> = r1;

        return;
    }

    public void setBlack()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_black> = 1;

        return;
    }

    public boolean isBlack()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $z0 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_black>;

        return $z0;
    }

    public boolean used()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $z0 = r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_used>;

        return $z0;
    }

    public void setUsed()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_used> = 1;

        return;
    }

    public com.hp.hpl.jena.ontology.OntTools$DisjointSet find()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, $r1, $r2, $r3, r4;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        if $r1 != r0 goto label1;

        r4 = r0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet find()>();

        r4 = $r3;

        virtualinvoke r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: void setParent(com.hp.hpl.jena.ontology.OntTools$DisjointSet)>($r3);

     label2:
        return r4;
    }

    public void union(com.hp.hpl.jena.ontology.OntTools$DisjointSet)
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r0, $r1, r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        r2 := @parameter0: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet find()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet find()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int getRank()>();

        $i1 = virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int getRank()>();

        if $i0 <= $i1 goto label1;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: void setParent(com.hp.hpl.jena.ontology.OntTools$DisjointSet)>($r1);

        goto label3;

     label1:
        $i2 = virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int getRank()>();

        $i3 = virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int getRank()>();

        if $i2 <= $i3 goto label2;

        virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: void setParent(com.hp.hpl.jena.ontology.OntTools$DisjointSet)>($r3);

        goto label3;

     label2:
        if $r1 == $r3 goto label3;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: void setParent(com.hp.hpl.jena.ontology.OntTools$DisjointSet)>($r1);

        virtualinvoke $r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: void incrementRank()>();

     label3:
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r1, $r3, $r4, $r5, $r6, $r7, $r10;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r8, $r9, $r11, $r12;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DisjointSet{node=");

        $r2 = r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.rdf.model.Resource m_node>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",anc=");

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getAncestor()>();

        if $r3 != r1 goto label1;

        $r9 = "self";

        goto label3;

     label1:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getAncestor()>();

        if $r4 != null goto label2;

        $r9 = "null";

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getAncestor()>();

        $r9 = virtualinvoke $r5.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: java.lang.String toShortString()>();

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",parent=");

        $r10 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        if $r10 != r1 goto label4;

        $r11 = "self";

        goto label6;

     label4:
        $r6 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        if $r6 != null goto label5;

        $r11 = "null";

        goto label6;

     label5:
        $r7 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        $r11 = virtualinvoke $r7.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: java.lang.String toShortString()>();

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",rank=");

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: int getRank()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $z0 = r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: boolean m_black>;

        if $z0 == 0 goto label7;

        $r12 = ",black";

        goto label8;

     label7:
        $r12 = ",white";

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String toShortString()
    {
        com.hp.hpl.jena.ontology.OntTools$DisjointSet r1, $r3, $r4, $r5;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        java.lang.StringBuffer $r0;
        java.lang.String $r6, $r7;

        r1 := @this: com.hp.hpl.jena.ontology.OntTools$DisjointSet;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DisjointSet{node=");

        $r2 = r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.rdf.model.Resource m_node>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",parent=");

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        if $r3 != r1 goto label1;

        $r6 = "self";

        goto label3;

     label1:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        if $r4 != null goto label2;

        $r6 = "null";

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: com.hp.hpl.jena.ontology.OntTools$DisjointSet getParent()>();

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.ontology.OntTools$DisjointSet: java.lang.String toShortString()>();

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...}");

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
