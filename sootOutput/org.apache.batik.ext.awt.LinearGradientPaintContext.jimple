final class org.apache.batik.ext.awt.LinearGradientPaintContext extends org.apache.batik.ext.awt.MultipleGradientPaintContext
{
    private float dgdX;
    private float dgdY;
    private float gc;
    private float pixSz;
    private static final int DEFAULT_IMPL;
    private static final int ANTI_ALIAS_IMPL;
    private int fillMethod;

    public void <init>(java.awt.image.ColorModel, java.awt.Rectangle, java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform, java.awt.RenderingHints, java.awt.geom.Point2D, java.awt.geom.Point2D, float[], java.awt.Color[], org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum, org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum) throws java.awt.geom.NoninvertibleTransformException
    {
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum r8, $r18;
        java.awt.geom.Rectangle2D r3;
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        byte $b0;
        java.awt.geom.AffineTransform r4;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum r9;
        float[] r6;
        java.awt.geom.Point2D$Float $r22, $r23;
        java.awt.RenderingHints$Key $r14, $r16;
        java.awt.Color[] r7;
        java.awt.geom.Point2D r11, r13;
        java.awt.RenderingHints r5;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, f9, $f10, $f11, f12, f13, f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37;
        java.awt.Rectangle r2;
        int $i1;
        double $d0, $d1, $d2, $d3;
        java.awt.image.ColorModel r1;
        java.lang.Object $r15, $r17, $r19, $r20, $r21;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r1 := @parameter0: java.awt.image.ColorModel;

        r2 := @parameter1: java.awt.Rectangle;

        r3 := @parameter2: java.awt.geom.Rectangle2D;

        r4 := @parameter3: java.awt.geom.AffineTransform;

        r5 := @parameter4: java.awt.RenderingHints;

        r11 := @parameter5: java.awt.geom.Point2D;

        r13 := @parameter6: java.awt.geom.Point2D;

        r6 := @parameter7: float[];

        r7 := @parameter8: java.awt.Color[];

        r8 := @parameter9: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum;

        r9 := @parameter10: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum;

        specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void <init>(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

        $r22 = new java.awt.geom.Point2D$Float;

        $d0 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        $d1 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        specialinvoke $r22.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, $f1);

        $r23 = new java.awt.geom.Point2D$Float;

        $d2 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        $f2 = (float) $d2;

        $d3 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        $f3 = (float) $d3;

        specialinvoke $r23.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f2, $f3);

        $f5 = $r23.<java.awt.geom.Point2D$Float: float x>;

        $f4 = $r22.<java.awt.geom.Point2D$Float: float x>;

        f6 = $f5 - $f4;

        $f8 = $r23.<java.awt.geom.Point2D$Float: float y>;

        $f7 = $r22.<java.awt.geom.Point2D$Float: float y>;

        f9 = $f8 - $f7;

        $f11 = f6 * f6;

        $f10 = f9 * f9;

        f12 = $f11 + $f10;

        f13 = f6 / f12;

        f14 = f9 / f12;

        $f15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a00>;

        $f18 = $f15 * f13;

        $f16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a10>;

        $f17 = $f16 * f14;

        $f19 = $f18 + $f17;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX> = $f19;

        $f20 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a01>;

        $f23 = $f20 * f13;

        $f21 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a11>;

        $f22 = $f21 * f14;

        $f24 = $f23 + $f22;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY> = $f24;

        $f25 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f26 = staticinvoke <java.lang.Math: float abs(float)>($f25);

        $f27 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $f28 = staticinvoke <java.lang.Math: float abs(float)>($f27);

        $b0 = $f26 cmpl $f28;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float pixSz> = $f26;

        goto label2;

     label1:
        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float pixSz> = $f28;

     label2:
        $f30 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a02>;

        $f29 = $r22.<java.awt.geom.Point2D$Float: float x>;

        $f31 = $f30 - $f29;

        $f36 = $f31 * f13;

        $f33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a12>;

        $f32 = $r22.<java.awt.geom.Point2D$Float: float y>;

        $f34 = $f33 - $f32;

        $f35 = $f34 * f14;

        $f37 = $f36 + $f35;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc> = $f37;

        $r14 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_COLOR_RENDERING>;

        $r15 = virtualinvoke r5.<java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>($r14);

        $r16 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_RENDERING>;

        $r17 = virtualinvoke r5.<java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>($r16);

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: int fillMethod> = 1;

        $r18 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if r8 == $r18 goto label3;

        $z0 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity>;

        if $z0 == 0 goto label6;

     label3:
        $r19 = <java.awt.RenderingHints: java.lang.Object VALUE_RENDER_QUALITY>;

        if $r17 != $r19 goto label4;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: int fillMethod> = 3;

     label4:
        $r20 = <java.awt.RenderingHints: java.lang.Object VALUE_COLOR_RENDER_SPEED>;

        if $r15 != $r20 goto label5;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: int fillMethod> = 1;

        goto label6;

     label5:
        $r21 = <java.awt.RenderingHints: java.lang.Object VALUE_COLOR_RENDER_QUALITY>;

        if $r15 != $r21 goto label6;

        r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: int fillMethod> = 3;

     label6:
        return;
    }

    protected void fillHardNoCycle(int[], int, int, int, int, int, int)
    {
        byte $b6, $b7, $b8, $b9, $b10, $b12, $b13, $b25, $b27, $b36, $b37, $b41;
        float[] $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15;
        int[] r6, $r17, r18, r19;
        int i0, i1, i2, $i3, i4, i5, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, $i23, $i24, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i38, $i39, $i40, $i42, $i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i71, $i72, $i74, $i75, $i77, $i79;
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        int[][] $r3, $r9, $r16;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, f64, f65, f66, f67, f68;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r6 := @parameter0: int[];

        i44 := @parameter1: int;

        i21 := @parameter2: int;

        i0 := @parameter3: int;

        i2 := @parameter4: int;

        i4 := @parameter5: int;

        i1 := @parameter6: int;

        $f1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f0 = (float) i0;

        $f3 = $f1 * $f0;

        $f2 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc>;

        f4 = $f3 + $f2;

        i45 = 0;

        goto label44;

     label01:
        $f6 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i3 = i2 + i45;

        $f5 = (float) $i3;

        $f7 = $f6 * $f5;

        f64 = f4 + $f7;

        i5 = i44 + i4;

        $f8 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $b6 = $f8 cmpl 0.0F;

        if $b6 != 0 goto label10;

        $b36 = f64 cmpg 0.0F;

        $i61 = (int) $b36;

        if $i61 > 0 goto label02;

        i46 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        goto label09;

     label02:
        $b37 = f64 cmpl 1.0F;

        $i62 = (int) $b37;

        if $i62 < 0 goto label03;

        i46 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        goto label09;

     label03:
        i47 = 0;

        goto label06;

     label04:
        $r13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i40 = i47 + 1;

        $f57 = $r13[$i40];

        $b41 = f64 cmpg $f57;

        $i63 = (int) $b41;

        if $i63 >= 0 goto label05;

        goto label07;

     label05:
        i47 = i47 + 1;

     label06:
        $i38 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        $i39 = $i38 - 1;

        if i47 < $i39 goto label04;

     label07:
        $r14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f58 = $r14[i47];

        $f62 = f64 - $f58;

        $f60 = $f62 * 255.0F;

        $r15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f59 = $r15[i47];

        $f61 = $f60 / $f59;

        $f63 = $f61 + 0.5F;

        $r16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r17 = $r16[i47];

        $i42 = (int) $f63;

        i46 = $r17[$i42];

        goto label09;

     label08:
        $i43 = i44;

        i44 = i44 + 1;

        r6[$i43] = i46;

     label09:
        if i44 < i5 goto label08;

        goto label43;

     label10:
        $f9 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $b7 = $f9 cmpl 0.0F;

        $i64 = (int) $b7;

        if $i64 < 0 goto label11;

        $f53 = 1.0F - f64;

        $f52 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        f65 = $f53 / $f52;

        $f55 = 0.0F - f64;

        $f54 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f56 = $f55 / $f54;

        $d16 = (double) $f56;

        $d17 = staticinvoke <java.lang.Math: double ceil(double)>($d16);

        f66 = (float) $d17;

        i48 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        i49 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        goto label12;

     label11:
        $f11 = 0.0F - f64;

        $f10 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        f65 = $f11 / $f10;

        $f13 = 1.0F - f64;

        $f12 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f14 = $f13 / $f12;

        $d0 = (double) $f14;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f66 = (float) $d1;

        i48 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        i49 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

     label12:
        $f15 = (float) i4;

        $b8 = f65 cmpl $f15;

        $i65 = (int) $b8;

        if $i65 <= 0 goto label13;

        i50 = i4;

        goto label14;

     label13:
        i50 = (int) f65;

     label14:
        $f16 = (float) i4;

        $b9 = f66 cmpl $f16;

        $i66 = (int) $b9;

        if $i66 <= 0 goto label15;

        i51 = i4;

        goto label16;

     label15:
        i51 = (int) f66;

     label16:
        $i35 = i44 + i50;

        if i51 <= 0 goto label19;

        i52 = i44 + i51;

        goto label18;

     label17:
        $i34 = i44;

        i44 = i44 + 1;

        r6[$i34] = i48;

     label18:
        if i44 < i52 goto label17;

        $f50 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f49 = (float) i51;

        $f51 = $f50 * $f49;

        f64 = f64 + $f51;

     label19:
        $f17 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $b10 = $f17 cmpl 0.0F;

        $i67 = (int) $b10;

        if $i67 <= 0 goto label30;

        i53 = 0;

        goto label22;

     label20:
        $r7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i24 = i53 + 1;

        $f33 = $r7[$i24];

        $b25 = f64 cmpg $f33;

        $i68 = (int) $b25;

        if $i68 >= 0 goto label21;

        goto label29;

     label21:
        i53 = i53 + 1;

     label22:
        $i22 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        $i23 = $i22 - 1;

        if i53 < $i23 goto label20;

        goto label29;

     label23:
        $r8 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f34 = $r8[i53];

        f67 = f64 - $f34;

        $r9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        r18 = $r9[i53];

        $r10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i26 = i53 + 1;

        $f35 = $r10[$i26];

        $f37 = $f35 - f64;

        $f36 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f38 = $f37 / $f36;

        $d9 = (double) $f38;

        $d10 = staticinvoke <java.lang.Math: double ceil(double)>($d9);

        $d11 = (double) i4;

        $b27 = $d10 cmpl $d11;

        $i69 = (int) $b27;

        if $i69 <= 0 goto label24;

        i54 = i4;

        goto label25;

     label24:
        i54 = (int) $d10;

     label25:
        $i33 = i44 + i54;

        i55 = $i33;

        if $i33 <= $i35 goto label26;

        i55 = $i35;

     label26:
        $f40 = f67 * 255.0F;

        $r11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f39 = $r11[i53];

        $f41 = $f40 / $f39;

        $f42 = $f41 * 65536.0F;

        $i28 = (int) $f42;

        $i71 = (int) 32768;

        i56 = $i28 + $i71;

        $f43 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f45 = $f43 * 255.0F;

        $r12 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f44 = $r12[i53];

        $f46 = $f45 / $f44;

        $f47 = $f46 * 65536.0F;

        $i32 = (int) $f47;

        goto label28;

     label27:
        $i29 = i44;

        i44 = i44 + 1;

        $i30 = i56 >> 16;

        $i31 = r18[$i30];

        r6[$i29] = $i31;

        i56 = i56 + $i32;

     label28:
        if i44 < i55 goto label27;

        $d14 = (double) f64;

        $f48 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $d12 = (double) $f48;

        $d13 = $d12 * $d10;

        $d15 = $d14 + $d13;

        f64 = (float) $d15;

        i53 = i53 + 1;

     label29:
        if i44 < $i35 goto label23;

        goto label42;

     label30:
        $i11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        i57 = $i11 - 1;

        goto label33;

     label31:
        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f18 = $r1[i57];

        $b12 = f64 cmpl $f18;

        $i72 = (int) $b12;

        if $i72 <= 0 goto label32;

        goto label40;

     label32:
        $i74 = (int) -1;

        i57 = i57 + $i74;

     label33:
        if i57 > 0 goto label31;

        goto label40;

     label34:
        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f19 = $r2[i57];

        f68 = f64 - $f19;

        $r3 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        r19 = $r3[i57];

        $f20 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f21 = neg $f20;

        $f22 = f68 / $f21;

        $d2 = (double) $f22;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $d4 = (double) i4;

        $b13 = $d3 cmpl $d4;

        $i75 = (int) $b13;

        if $i75 <= 0 goto label35;

        i58 = i4;

        goto label36;

     label35:
        i58 = (int) $d3;

     label36:
        $i19 = i44 + i58;

        i59 = $i19;

        if $i19 <= $i35 goto label37;

        i59 = $i35;

     label37:
        $f24 = f68 * 255.0F;

        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f23 = $r4[i57];

        $f25 = $f24 / $f23;

        $f26 = $f25 * 65536.0F;

        $i14 = (int) $f26;

        $i77 = (int) 32768;

        i60 = $i14 + $i77;

        $f27 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f29 = $f27 * 255.0F;

        $r5 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f28 = $r5[i57];

        $f30 = $f29 / $f28;

        $f31 = $f30 * 65536.0F;

        $i18 = (int) $f31;

        goto label39;

     label38:
        $i15 = i44;

        i44 = i44 + 1;

        $i16 = i60 >> 16;

        $i17 = r19[$i16];

        r6[$i15] = $i17;

        i60 = i60 + $i18;

     label39:
        if i44 < i59 goto label38;

        $d7 = (double) f64;

        $f32 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $d5 = (double) $f32;

        $d6 = $d5 * $d3;

        $d8 = $d7 + $d6;

        f64 = (float) $d8;

        $i79 = (int) -1;

        i57 = i57 + $i79;

     label40:
        if i44 < $i35 goto label34;

        goto label42;

     label41:
        $i20 = i44;

        i44 = i44 + 1;

        r6[$i20] = i49;

     label42:
        if i44 < i5 goto label41;

     label43:
        i44 = i44 + i21;

        i45 = i45 + 1;

     label44:
        if i45 < i1 goto label01;

        return;
    }

    protected void fillSimpleNoCycle(int[], int, int, int, int, int, int)
    {
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        byte $b10, $b11, $b12, $b23, $b25;
        int[] r1, r2;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35;
        int i0, $i1, i2, i3, i4, $i5, $i6, i7, i8, $i9, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22, $i24, $i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36, $i37, $i38, $i39, $i40;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r2 := @parameter0: int[];

        i28 := @parameter1: int;

        i18 := @parameter2: int;

        i0 := @parameter3: int;

        i4 := @parameter4: int;

        i7 := @parameter5: int;

        i3 := @parameter6: int;

        $f1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f0 = (float) i0;

        $f3 = $f1 * $f0;

        $f2 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc>;

        f4 = $f3 + $f2;

        $f6 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $i1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f5 = (float) $i1;

        f7 = $f6 * $f5;

        $f8 = f7 * 65536.0F;

        i2 = (int) $f8;

        r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i29 = 0;

        goto label20;

     label01:
        $f10 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i5 = i4 + i29;

        $f9 = (float) $i5;

        $f11 = $f10 * $f9;

        f32 = f4 + $f11;

        $i6 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f12 = (float) $i6;

        f33 = f32 * $f12;

        $d0 = (double) f33;

        $d1 = $d0 + 0.5;

        f34 = (float) $d1;

        i8 = i28 + i7;

        $f14 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $i9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f13 = (float) $i9;

        $f16 = $f14 * $f13;

        $f15 = (float) i7;

        f35 = $f16 * $f15;

        $b10 = f35 cmpg 0.0F;

        $i36 = (int) $b10;

        if $i36 >= 0 goto label02;

        f35 = neg f35;

     label02:
        $d2 = (double) f35;

        $b11 = $d2 cmpg 0.3;

        $i37 = (int) $b11;

        if $i37 >= 0 goto label07;

        $b23 = f34 cmpg 0.0F;

        $i38 = (int) $b23;

        if $i38 > 0 goto label03;

        i30 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        goto label06;

     label03:
        $i24 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f31 = (float) $i24;

        $b25 = f34 cmpl $f31;

        $i39 = (int) $b25;

        if $i39 < 0 goto label04;

        i30 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        goto label06;

     label04:
        $i26 = (int) f34;

        i30 = r1[$i26];

        goto label06;

     label05:
        $i27 = i28;

        i28 = i28 + 1;

        r2[$i27] = i30;

     label06:
        if i28 < i8 goto label05;

        goto label19;

     label07:
        $f17 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $b12 = $f17 cmpl 0.0F;

        $i40 = (int) $b12;

        if $i40 <= 0 goto label08;

        $i22 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f26 = (float) $i22;

        $f27 = $f26 - f34;

        $f28 = $f27 / f7;

        i31 = (int) $f28;

        $f29 = f34 / f7;

        $f30 = 0.0F - $f29;

        $d5 = (double) $f30;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        i32 = (int) $d6;

        i33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        i34 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        goto label09;

     label08:
        $f18 = 0.0F - f34;

        $f19 = $f18 / f7;

        i31 = (int) $f19;

        $i13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f20 = (float) $i13;

        $f21 = $f20 - f34;

        $f22 = $f21 / f7;

        $d3 = (double) $f22;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        i32 = (int) $d4;

        i33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        i34 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

     label09:
        if i31 <= i7 goto label10;

        i31 = i7;

     label10:
        $i21 = i28 + i31;

        if i32 <= 0 goto label14;

        if i32 <= i7 goto label11;

        i32 = i7;

     label11:
        $i20 = i28 + i32;

        goto label13;

     label12:
        $i19 = i28;

        i28 = i28 + 1;

        r2[$i19] = i33;

     label13:
        if i28 < $i20 goto label12;

        $f24 = (float) i32;

        $f25 = f7 * $f24;

        f34 = f34 + $f25;

     label14:
        $f23 = f34 * 65536.0F;

        i35 = (int) $f23;

        goto label16;

     label15:
        $i14 = i28;

        i28 = i28 + 1;

        $i15 = i35 >> 16;

        $i16 = r1[$i15];

        r2[$i14] = $i16;

        i35 = i35 + i2;

     label16:
        if i28 < $i21 goto label15;

        goto label18;

     label17:
        $i17 = i28;

        i28 = i28 + 1;

        r2[$i17] = i34;

     label18:
        if i28 < i8 goto label17;

     label19:
        i28 = i28 + i18;

        i29 = i29 + 1;

     label20:
        if i29 < i3 goto label01;

        return;
    }

    protected void fillSimpleRepeat(int[], int, int, int, int, int, int)
    {
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        byte $b3, $b8;
        int[] r1, $r2;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20, f21;
        int i0, $i1, $i2, i4, i5, $i6, $i7, $i9, i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, i19, i20, i21, $i22, $i23;
        double $d0, $d1;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r1 := @parameter0: int[];

        i19 := @parameter1: int;

        i16 := @parameter2: int;

        i0 := @parameter3: int;

        i5 := @parameter4: int;

        i10 := @parameter5: int;

        i4 := @parameter6: int;

        $f1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f0 = (float) i0;

        $f3 = $f1 * $f0;

        $f2 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc>;

        f4 = $f3 + $f2;

        $f7 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f5 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $i1 = (int) $f5;

        $f6 = (float) $i1;

        $f9 = $f7 - $f6;

        $i2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f8 = (float) $i2;

        f18 = $f9 * $f8;

        $b3 = f18 cmpg 0.0F;

        $i22 = (int) $b3;

        if $i22 >= 0 goto label1;

        $i18 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f17 = (float) $i18;

        f18 = f18 + $f17;

     label1:
        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i20 = 0;

        goto label7;

     label2:
        $f11 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i6 = i5 + i20;

        $f10 = (float) $i6;

        $f12 = $f11 * $f10;

        f19 = f4 + $f12;

        $i7 = (int) f19;

        $f13 = (float) $i7;

        f20 = f19 - $f13;

        $b8 = f20 cmpg 0.0F;

        $i23 = (int) $b8;

        if $i23 >= 0 goto label3;

        f20 = f20 + 1.0F;

     label3:
        $i9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f14 = (float) $i9;

        $f16 = f20 * $f14;

        $d0 = (double) $f16;

        $d1 = $d0 + 0.5;

        f21 = (float) $d1;

        $i17 = i19 + i10;

        goto label6;

     label4:
        i21 = (int) f21;

        $i11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        if i21 < $i11 goto label5;

        $i14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f15 = (float) $i14;

        f21 = f21 - $f15;

        $i15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        i21 = i21 - $i15;

     label5:
        $i12 = i19;

        i19 = i19 + 1;

        $i13 = $r2[i21];

        r1[$i12] = $i13;

        f21 = f21 + f18;

     label6:
        if i19 < $i17 goto label4;

        i19 = i19 + i16;

        i20 = i20 + 1;

     label7:
        if i20 < i4 goto label2;

        return;
    }

    protected void fillSimpleReflect(int[], int, int, int, int, int, int)
    {
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        byte $b6, $b8;
        int[] r1, r2;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, f21, f22, f23;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, i22, i23, i24, $i25, $i26;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r2 := @parameter0: int[];

        i22 := @parameter1: int;

        i19 := @parameter2: int;

        i0 := @parameter3: int;

        i2 := @parameter4: int;

        i12 := @parameter5: int;

        i1 := @parameter6: int;

        $f1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f0 = (float) i0;

        $f3 = $f1 * $f0;

        $f2 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc>;

        f4 = $f3 + $f2;

        r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i23 = 0;

        goto label9;

     label1:
        $f6 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i3 = i2 + i23;

        $f5 = (float) $i3;

        $f7 = $f6 * $f5;

        f19 = f4 + $f7;

        $f8 = f19 / 2.0F;

        $i4 = (int) $f8;

        $i5 = 2 * $i4;

        $f9 = (float) $i5;

        f20 = f19 - $f9;

        f21 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $b6 = f20 cmpg 0.0F;

        $i25 = (int) $b6;

        if $i25 >= 0 goto label2;

        f20 = neg f20;

        f21 = neg f21;

     label2:
        $i7 = (int) f21;

        $f10 = (float) $i7;

        $f11 = $f10 / 2.0F;

        $f12 = 2.0F * $f11;

        $f18 = f21 - $f12;

        f22 = $f18;

        $b8 = $f18 cmpg 0.0F;

        $i26 = (int) $b8;

        if $i26 >= 0 goto label3;

        $d2 = (double) $f18;

        $d3 = $d2 + 2.0;

        f22 = (float) $d3;

     label3:
        $i9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $i20 = 2 * $i9;

        $i10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f13 = (float) $i10;

        $f16 = f20 * $f13;

        $d0 = (double) $f16;

        $d1 = $d0 + 0.5;

        f23 = (float) $d1;

        $i11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f14 = (float) $i11;

        $f17 = f22 * $f14;

        $i21 = i22 + i12;

        goto label8;

     label4:
        i24 = (int) f23;

        if i24 < $i20 goto label5;

        $f15 = (float) $i20;

        f23 = f23 - $f15;

        i24 = i24 - $i20;

     label5:
        $i13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        if i24 > $i13 goto label6;

        $i17 = i22;

        i22 = i22 + 1;

        $i18 = r1[i24];

        r2[$i17] = $i18;

        goto label7;

     label6:
        $i14 = i22;

        i22 = i22 + 1;

        $i15 = $i20 - i24;

        $i16 = r1[$i15];

        r2[$i14] = $i16;

     label7:
        f23 = f23 + $f17;

     label8:
        if i22 < $i21 goto label4;

        i22 = i22 + i19;

        i23 = i23 + 1;

     label9:
        if i23 < i1 goto label1;

        return;
    }

    protected void fillRaster(int[], int, int, int, int, int, int)
    {
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum $r1, $r2, $r3, $r4, $r6, $r7;
        org.apache.batik.ext.awt.LinearGradientPaintContext r0;
        int[] r5;
        boolean $z0;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14, f15;
        int i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;

        r0 := @this: org.apache.batik.ext.awt.LinearGradientPaintContext;

        r5 := @parameter0: int[];

        i12 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        $f1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        $f0 = (float) i0;

        $f3 = $f1 * $f0;

        $f2 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float gc>;

        f4 = $f3 + $f2;

        $i1 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: int fillMethod>;

        if $i1 != 3 goto label05;

        i13 = 0;

        goto label04;

     label01:
        $f10 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i9 = i3 + i13;

        $f9 = (float) $i9;

        $f11 = $f10 * $f9;

        f14 = f4 + $f11;

        i14 = i12 + i4;

        goto label03;

     label02:
        $i10 = i12;

        i12 = i12 + 1;

        $f12 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float pixSz>;

        $i11 = virtualinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int indexGradientAntiAlias(float,float)>(f14, $f12);

        r5[$i10] = $i11;

        $f13 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        f14 = f14 + $f13;

     label03:
        if i12 < i14 goto label02;

        i12 = i12 + i2;

        i13 = i13 + 1;

     label04:
        if i13 < i5 goto label01;

        goto label14;

     label05:
        $z0 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup>;

        if $z0 != 0 goto label11;

        $r7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r6 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum NO_CYCLE>;

        if $r7 != $r6 goto label06;

        virtualinvoke r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: void fillHardNoCycle(int[],int,int,int,int,int,int)>(r5, i12, i2, i0, i3, i4, i5);

        goto label14;

     label06:
        i15 = 0;

        goto label10;

     label07:
        $f6 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdY>;

        $i6 = i3 + i15;

        $f5 = (float) $i6;

        $f7 = $f6 * $f5;

        f15 = f4 + $f7;

        i16 = i12 + i4;

        goto label09;

     label08:
        $i7 = i12;

        i12 = i12 + 1;

        $i8 = virtualinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int indexIntoGradientsArrays(float)>(f15);

        r5[$i7] = $i8;

        $f8 = r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: float dgdX>;

        f15 = f15 + $f8;

     label09:
        if i12 < i16 goto label08;

        i12 = i12 + i2;

        i15 = i15 + 1;

     label10:
        if i15 < i5 goto label07;

        goto label14;

     label11:
        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r1 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum NO_CYCLE>;

        if $r2 != $r1 goto label12;

        virtualinvoke r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: void fillSimpleNoCycle(int[],int,int,int,int,int,int)>(r5, i12, i2, i0, i3, i4, i5);

        goto label14;

     label12:
        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if $r4 != $r3 goto label13;

        virtualinvoke r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: void fillSimpleRepeat(int[],int,int,int,int,int,int)>(r5, i12, i2, i0, i3, i4, i5);

        goto label14;

     label13:
        virtualinvoke r0.<org.apache.batik.ext.awt.LinearGradientPaintContext: void fillSimpleReflect(int[],int,int,int,int,int,int)>(r5, i12, i2, i0, i3, i4, i5);

     label14:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.LinearGradientPaintContext: int ANTI_ALIAS_IMPL> = 3;

        <org.apache.batik.ext.awt.LinearGradientPaintContext: int DEFAULT_IMPL> = 1;

        return;
    }
}
