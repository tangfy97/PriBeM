public abstract class org.apache.zookeeper.server.ServerCnxnFactory extends java.lang.Object
{
    public static final java.lang.String ZOOKEEPER_SERVER_CNXN_FACTORY;
    org.slf4j.Logger LOG;
    static final java.nio.ByteBuffer closeConn;
    protected org.apache.zookeeper.server.auth.SaslServerCallbackHandler saslServerCallbackHandler;
    public org.apache.zookeeper.Login login;
    protected org.apache.zookeeper.server.ZooKeeperServer zkServer;
    private final java.util.HashMap connectionBeans;
    protected final java.util.HashSet cnxns;

    public void <init>()
    {
        java.util.HashSet $r3;
        org.slf4j.Logger $r1;
        org.apache.zookeeper.server.ServerCnxnFactory r0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/ServerCnxnFactory;");

        r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.slf4j.Logger LOG> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashMap connectionBeans> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashSet cnxns> = $r3;

        return;
    }

    public abstract int getLocalPort();

    public abstract java.lang.Iterable getConnections();

    public int getNumAliveConnections()
    {
        java.util.HashSet $r1, $r2;
        java.lang.Throwable $r3;
        int $i0;
        org.apache.zookeeper.server.ServerCnxnFactory r0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashSet cnxns>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public abstract void closeSession(long);

    public abstract void configure(java.net.InetSocketAddress, int) throws java.io.IOException;

    public abstract int getMaxClientCnxnsPerHost();

    public abstract void setMaxClientCnxnsPerHost(int);

    public abstract void startup(org.apache.zookeeper.server.ZooKeeperServer) throws java.io.IOException, java.lang.InterruptedException;

    public abstract void join() throws java.lang.InterruptedException;

    public abstract void shutdown();

    public abstract void start();

    public final void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)
    {
        org.apache.zookeeper.server.ZooKeeperServer r1;
        org.apache.zookeeper.server.ServerCnxnFactory r0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        r1 := @parameter0: org.apache.zookeeper.server.ZooKeeperServer;

        r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer> = r1;

        if r1 == null goto label1;

        virtualinvoke r1.<org.apache.zookeeper.server.ZooKeeperServer: void setServerCnxnFactory(org.apache.zookeeper.server.ServerCnxnFactory)>(r0);

     label1:
        return;
    }

    public abstract void closeAll();

    public static org.apache.zookeeper.server.ServerCnxnFactory createFactory() throws java.io.IOException
    {
        org.apache.zookeeper.server.ServerCnxnFactory $r3;
        java.io.IOException $r6;
        java.lang.Exception $r5;
        java.lang.Class $r1, $r4;
        java.lang.Object $r2;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r0, $r10, r11;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.serverCnxnFactory");

        r11 = $r0;

        if $r0 != null goto label1;

        $r4 = class "Lorg/apache/zookeeper/server/NIOServerCnxnFactory;";

        r11 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r11);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.apache.zookeeper.server.ServerCnxnFactory) $r2;

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t instantiate ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r10);

        virtualinvoke $r6.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.apache.zookeeper.server.ServerCnxnFactory createFactory(int, int) throws java.io.IOException
    {
        int i0, i1;
        org.apache.zookeeper.server.ServerCnxnFactory $r1;
        java.net.InetSocketAddress $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.net.InetSocketAddress;

        specialinvoke $r0.<java.net.InetSocketAddress: void <init>(int)>(i0);

        $r1 = staticinvoke <org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress,int)>($r0, i1);

        return $r1;
    }

    public static org.apache.zookeeper.server.ServerCnxnFactory createFactory(java.net.InetSocketAddress, int) throws java.io.IOException
    {
        int i0;
        org.apache.zookeeper.server.ServerCnxnFactory $r0;
        java.net.InetSocketAddress r1;

        r1 := @parameter0: java.net.InetSocketAddress;

        i0 := @parameter1: int;

        $r0 = staticinvoke <org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ServerCnxnFactory createFactory()>();

        virtualinvoke $r0.<org.apache.zookeeper.server.ServerCnxnFactory: void configure(java.net.InetSocketAddress,int)>(r1, i0);

        return $r0;
    }

    public abstract java.net.InetSocketAddress getLocalAddress();

    public void unregisterConnection(org.apache.zookeeper.server.ServerCnxn)
    {
        org.apache.zookeeper.jmx.MBeanRegistry $r5;
        org.apache.zookeeper.server.ServerCnxnFactory r0;
        org.apache.zookeeper.server.ServerCnxn r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        org.apache.zookeeper.server.ConnectionBean r4;

        r0 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        r1 := @parameter0: org.apache.zookeeper.server.ServerCnxn;

        $r2 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashMap connectionBeans>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.zookeeper.server.ConnectionBean) $r3;

        if r4 == null goto label1;

        $r5 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        virtualinvoke $r5.<org.apache.zookeeper.jmx.MBeanRegistry: void unregister(org.apache.zookeeper.jmx.ZKMBeanInfo)>(r4);

     label1:
        return;
    }

    public void registerConnection(org.apache.zookeeper.server.ServerCnxn)
    {
        org.slf4j.Logger $r10;
        org.apache.zookeeper.jmx.MBeanRegistry $r5;
        org.apache.zookeeper.server.ServerCnxnFactory r0;
        java.util.HashMap $r8;
        org.apache.zookeeper.server.ConnectionBean $r2;
        org.apache.zookeeper.server.ZooKeeperServer $r1, $r4, $r6;
        org.apache.zookeeper.server.ZooKeeperServerBean $r7;
        javax.management.JMException $r9;
        org.apache.zookeeper.server.ServerCnxn r3;

        r0 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        r3 := @parameter0: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r1 == null goto label4;

        $r2 = new org.apache.zookeeper.server.ConnectionBean;

        $r4 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        specialinvoke $r2.<org.apache.zookeeper.server.ConnectionBean: void <init>(org.apache.zookeeper.server.ServerCnxn,org.apache.zookeeper.server.ZooKeeperServer)>(r3, $r4);

     label1:
        $r5 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r6 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r7 = $r6.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ZooKeeperServerBean jmxServerBean>;

        virtualinvoke $r5.<org.apache.zookeeper.jmx.MBeanRegistry: void register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo)>($r2, $r7);

        $r8 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: java.util.HashMap connectionBeans>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.zookeeper.server.ServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Could not register connection", $r9);

     label4:
        return;

        catch javax.management.JMException from label1 to label2 with label3;
    }

    protected void configureSaslLogin() throws java.io.IOException
    {
        javax.security.auth.login.LoginException $r26;
        org.apache.zookeeper.Login $r5, $r7;
        java.lang.SecurityException $r32, r34;
        javax.security.auth.login.Configuration $r1, $r4;
        javax.security.auth.login.AppConfigurationEntry[] r33;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler $r3, $r6;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30;
        org.apache.zookeeper.server.ServerCnxnFactory r2;
        java.lang.String $r0, $r8, $r9, $r10, $r15, $r31, r35;
        org.slf4j.Logger $r16;
        java.io.IOException $r17, $r27;

        r2 := @this: org.apache.zookeeper.server.ServerCnxnFactory;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("zookeeper.sasl.serverconfig", "Server");

        r33 = null;

        r34 = null;

     label01:
        $r1 = staticinvoke <javax.security.auth.login.Configuration: javax.security.auth.login.Configuration getConfiguration()>();

        r33 = virtualinvoke $r1.<javax.security.auth.login.Configuration: javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)>($r0);

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        r34 = $r32;

     label04:
        if r33 != null goto label09;

        $r8 = <org.apache.zookeeper.Environment: java.lang.String JAAS_CONF_KEY>;

        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r8);

        $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.sasl.serverconfig");

        if r34 == null goto label08;

        if $r10 != null goto label05;

        if $r9 == null goto label08;

     label05:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No JAAS configuration section named \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was found");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = $r15;

        if $r9 == null goto label06;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        r35 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        if $r10 == null goto label07;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" But zookeeper.sasl.serverconfig was set.");

        r35 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r16 = r2.<org.apache.zookeeper.server.ServerCnxnFactory: org.slf4j.Logger LOG>;

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>(r35);

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>(r35);

        throw $r17;

     label08:
        return;

     label09:
        $r3 = new org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        $r4 = staticinvoke <javax.security.auth.login.Configuration: javax.security.auth.login.Configuration getConfiguration()>();

        specialinvoke $r3.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: void <init>(javax.security.auth.login.Configuration)>($r4);

        r2.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.auth.SaslServerCallbackHandler saslServerCallbackHandler> = $r3;

        $r5 = new org.apache.zookeeper.Login;

        $r6 = r2.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.server.auth.SaslServerCallbackHandler saslServerCallbackHandler>;

        specialinvoke $r5.<org.apache.zookeeper.Login: void <init>(java.lang.String,javax.security.auth.callback.CallbackHandler)>($r0, $r6);

        r2.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.Login login> = $r5;

        $r7 = r2.<org.apache.zookeeper.server.ServerCnxnFactory: org.apache.zookeeper.Login login>;

        virtualinvoke $r7.<org.apache.zookeeper.Login: void startThreadIfNeeded()>();

     label10:
        goto label12;

     label11:
        $r26 := @caughtexception;

        $r27 = new java.io.IOException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not configure server because SASL configuration did not allow the  ZooKeeper server to authenticate itself properly: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label12:
        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch javax.security.auth.login.LoginException from label09 to label10 with label11;
    }

    static void <clinit>()
    {
        java.nio.ByteBuffer $r0;

        <org.apache.zookeeper.server.ServerCnxnFactory: java.lang.String ZOOKEEPER_SERVER_CNXN_FACTORY> = "zookeeper.serverCnxnFactory";

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(0);

        <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn> = $r0;

        return;
    }
}
