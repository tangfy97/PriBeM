class org.waveprotocol.box.server.frontend.ClientFrontendImpl$1 extends java.lang.Object implements org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener
{
    final org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener;
    final org.waveprotocol.wave.model.wave.ParticipantId val$author;
    final java.lang.String val$channelId;
    final org.waveprotocol.wave.model.id.WaveletName val$waveletName;
    final org.waveprotocol.box.server.frontend.ClientFrontendImpl this$0;

    void <init>(org.waveprotocol.box.server.frontend.ClientFrontendImpl, org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener, org.waveprotocol.wave.model.wave.ParticipantId, java.lang.String, org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.id.WaveletName r5;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl$1 r0;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener r2;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        java.lang.String r4;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl r1;

        r0 := @this: org.waveprotocol.box.server.frontend.ClientFrontendImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.frontend.ClientFrontendImpl;

        r2 := @parameter1: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.waveprotocol.wave.model.id.WaveletName;

        r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.frontend.ClientFrontendImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener> = r2;

        r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.wave.ParticipantId val$author> = r3;

        r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: java.lang.String val$channelId> = r4;

        r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(int, org.waveprotocol.wave.model.version.HashedVersion, long)
    {
        org.waveprotocol.wave.model.id.WaveletName $r7;
        org.waveprotocol.box.server.frontend.WaveletInfo $r4;
        long l1;
        org.waveprotocol.wave.model.wave.ParticipantId $r5;
        org.waveprotocol.box.server.frontend.UserManager $r6;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl$1 r0;
        int i0;
        org.waveprotocol.wave.model.version.HashedVersion r1;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener $r2;
        java.lang.String $r8;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl $r3;

        r0 := @this: org.waveprotocol.box.server.frontend.ClientFrontendImpl$1;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        l1 := @parameter2: long;

        $r2 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener>;

        interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener: void onSuccess(int,org.waveprotocol.wave.model.version.HashedVersion,long)>(i0, r1, l1);

        $r3 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.frontend.ClientFrontendImpl this$0>;

        $r4 = staticinvoke <org.waveprotocol.box.server.frontend.ClientFrontendImpl: org.waveprotocol.box.server.frontend.WaveletInfo access$000(org.waveprotocol.box.server.frontend.ClientFrontendImpl)>($r3);

        $r5 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.wave.ParticipantId val$author>;

        $r6 = virtualinvoke $r4.<org.waveprotocol.box.server.frontend.WaveletInfo: org.waveprotocol.box.server.frontend.UserManager getUserManager(org.waveprotocol.wave.model.wave.ParticipantId)>($r5);

        $r8 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: java.lang.String val$channelId>;

        $r7 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        virtualinvoke $r6.<org.waveprotocol.box.server.frontend.UserManager: void submitResponse(java.lang.String,org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.version.HashedVersion)>($r8, $r7, r1);

        return;
    }

    public void onFailure(java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName $r7;
        org.waveprotocol.box.server.frontend.WaveletInfo $r4;
        org.waveprotocol.wave.model.wave.ParticipantId $r5;
        org.waveprotocol.box.server.frontend.UserManager $r6;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl$1 r0;
        java.lang.String r1, $r8;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener $r2;
        org.waveprotocol.box.server.frontend.ClientFrontendImpl $r3;

        r0 := @this: org.waveprotocol.box.server.frontend.ClientFrontendImpl$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener>;

        interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener: void onFailure(java.lang.String)>(r1);

        $r3 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.box.server.frontend.ClientFrontendImpl this$0>;

        $r4 = staticinvoke <org.waveprotocol.box.server.frontend.ClientFrontendImpl: org.waveprotocol.box.server.frontend.WaveletInfo access$000(org.waveprotocol.box.server.frontend.ClientFrontendImpl)>($r3);

        $r5 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.wave.ParticipantId val$author>;

        $r6 = virtualinvoke $r4.<org.waveprotocol.box.server.frontend.WaveletInfo: org.waveprotocol.box.server.frontend.UserManager getUserManager(org.waveprotocol.wave.model.wave.ParticipantId)>($r5);

        $r8 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: java.lang.String val$channelId>;

        $r7 = r0.<org.waveprotocol.box.server.frontend.ClientFrontendImpl$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        virtualinvoke $r6.<org.waveprotocol.box.server.frontend.UserManager: void submitResponse(java.lang.String,org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.version.HashedVersion)>($r8, $r7, null);

        return;
    }
}
