class com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1 extends com.mycila.inject.internal.cglib.core.CodeEmitter
{
    private boolean transformInit;
    private final com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer this$0;

    void <init>(com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer, com.mycila.inject.internal.cglib.core.CodeEmitter)
    {
        com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1 r0;
        com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer r2;
        com.mycila.inject.internal.cglib.core.CodeEmitter r1;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1;

        r2 := @parameter0: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer;

        r1 := @parameter1: com.mycila.inject.internal.cglib.core.CodeEmitter;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void <init>(com.mycila.inject.internal.cglib.core.CodeEmitter)>(r1);

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer this$0> = r2;

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: boolean transformInit> = 1;

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.cglib.core.Signature $r8;
        com.mycila.inject.internal.asm.Type $r5, $r7;
        com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1 r0;
        int i0;
        com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer $r4, $r6;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        $z0 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: boolean transformInit>;

        if $z0 == 0 goto label1;

        if i0 != 183 goto label1;

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void load_this()>();

        $r4 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer this$0>;

        $r5 = staticinvoke <com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer: com.mycila.inject.internal.asm.Type access$000(com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer)>($r4);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void new_instance(com.mycila.inject.internal.asm.Type)>($r5);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void dup()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void load_this()>();

        $r6 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer this$0>;

        $r7 = staticinvoke <com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer: com.mycila.inject.internal.asm.Type access$000(com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer)>($r6);

        $r8 = staticinvoke <com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer: com.mycila.inject.internal.cglib.core.Signature access$100()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void invoke_constructor(com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.cglib.core.Signature)>($r7, $r8);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: void putfield(java.lang.String)>("$CGLIB_DELEGATE");

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddDelegateTransformer$1: boolean transformInit> = 0;

     label1:
        return;
    }
}
