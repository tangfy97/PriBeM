class org.apache.batik.script.rhino.EventTargetWrapper extends org.mozilla.javascript.NativeJavaObject
{
    protected static java.util.WeakHashMap mapOfListenerMap;
    public static final java.lang.String ADD_NAME;
    public static final java.lang.String ADDNS_NAME;
    public static final java.lang.String REMOVE_NAME;
    public static final java.lang.String REMOVENS_NAME;
    protected org.apache.batik.script.rhino.RhinoInterpreter interpreter;

    void <init>(org.mozilla.javascript.Scriptable, org.w3c.dom.events.EventTarget, org.apache.batik.script.rhino.RhinoInterpreter)
    {
        org.mozilla.javascript.Scriptable r1;
        org.w3c.dom.events.EventTarget r2;
        org.apache.batik.script.rhino.EventTargetWrapper r0;
        org.apache.batik.script.rhino.RhinoInterpreter r3;

        r0 := @this: org.apache.batik.script.rhino.EventTargetWrapper;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: org.w3c.dom.events.EventTarget;

        r3 := @parameter2: org.apache.batik.script.rhino.RhinoInterpreter;

        specialinvoke r0.<org.mozilla.javascript.NativeJavaObject: void <init>(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r1, r2, null);

        r0.<org.apache.batik.script.rhino.EventTargetWrapper: org.apache.batik.script.rhino.RhinoInterpreter interpreter> = r3;

        return;
    }

    public java.lang.Object get(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveProxy $r11;
        java.util.Map $r6, $r10, $r13, $r17;
        org.mozilla.javascript.Function $r5, $r9, $r12, $r16;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.script.rhino.RhinoInterpreter $r8, $r15;
        org.mozilla.javascript.Scriptable r2;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddNSProxy $r7;
        org.apache.batik.script.rhino.EventTargetWrapper r0;
        java.lang.Object $r3, r18;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveNSProxy $r4;
        org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy $r14;

        r0 := @this: org.apache.batik.script.rhino.EventTargetWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r3 = specialinvoke r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r1, r2);

        r18 = $r3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("addEventListener");

        if $z0 == 0 goto label1;

        $r14 = new org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy;

        $r15 = r0.<org.apache.batik.script.rhino.EventTargetWrapper: org.apache.batik.script.rhino.RhinoInterpreter interpreter>;

        $r16 = (org.mozilla.javascript.Function) $r3;

        $r17 = virtualinvoke r0.<org.apache.batik.script.rhino.EventTargetWrapper: java.util.Map initMap()>();

        specialinvoke $r14.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddProxy: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,java.util.Map)>($r15, $r16, $r17);

        r18 = $r14;

        goto label4;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("removeEventListener");

        if $z1 == 0 goto label2;

        $r11 = new org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveProxy;

        $r12 = (org.mozilla.javascript.Function) $r3;

        $r13 = virtualinvoke r0.<org.apache.batik.script.rhino.EventTargetWrapper: java.util.Map initMap()>();

        specialinvoke $r11.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveProxy: void <init>(org.mozilla.javascript.Function,java.util.Map)>($r12, $r13);

        r18 = $r11;

        goto label4;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("addEventListenerNS");

        if $z2 == 0 goto label3;

        $r7 = new org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddNSProxy;

        $r8 = r0.<org.apache.batik.script.rhino.EventTargetWrapper: org.apache.batik.script.rhino.RhinoInterpreter interpreter>;

        $r9 = (org.mozilla.javascript.Function) $r3;

        $r10 = virtualinvoke r0.<org.apache.batik.script.rhino.EventTargetWrapper: java.util.Map initMap()>();

        specialinvoke $r7.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionAddNSProxy: void <init>(org.apache.batik.script.rhino.RhinoInterpreter,org.mozilla.javascript.Function,java.util.Map)>($r8, $r9, $r10);

        r18 = $r7;

        goto label4;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("removeEventListenerNS");

        if $z3 == 0 goto label4;

        $r4 = new org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveNSProxy;

        $r5 = (org.mozilla.javascript.Function) $r3;

        $r6 = virtualinvoke r0.<org.apache.batik.script.rhino.EventTargetWrapper: java.util.Map initMap()>();

        specialinvoke $r4.<org.apache.batik.script.rhino.EventTargetWrapper$FunctionRemoveNSProxy: void <init>(org.mozilla.javascript.Function,java.util.Map)>($r5, $r6);

        r18 = $r4;

     label4:
        return r18;
    }

    public java.util.Map initMap()
    {
        java.util.Map $r5, r10;
        org.apache.batik.script.rhino.EventTargetWrapper r1;
        java.lang.Object $r3, $r4, $r7;
        java.util.WeakHashMap $r0, $r2, $r6, $r8, $r9;

        r1 := @this: org.apache.batik.script.rhino.EventTargetWrapper;

        $r0 = <org.apache.batik.script.rhino.EventTargetWrapper: java.util.WeakHashMap mapOfListenerMap>;

        if $r0 != null goto label1;

        $r9 = new java.util.WeakHashMap;

        specialinvoke $r9.<java.util.WeakHashMap: void <init>(int)>(10);

        <org.apache.batik.script.rhino.EventTargetWrapper: java.util.WeakHashMap mapOfListenerMap> = $r9;

     label1:
        $r2 = <org.apache.batik.script.rhino.EventTargetWrapper: java.util.WeakHashMap mapOfListenerMap>;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object unwrap()>();

        $r4 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.Map) $r4;

        r10 = $r5;

        if $r5 != null goto label2;

        $r6 = <org.apache.batik.script.rhino.EventTargetWrapper: java.util.WeakHashMap mapOfListenerMap>;

        $r7 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object unwrap()>();

        $r8 = new java.util.WeakHashMap;

        specialinvoke $r8.<java.util.WeakHashMap: void <init>(int)>(2);

        r10 = $r8;

        virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label2:
        return r10;
    }

    public static void <clinit>()
    {
        <org.apache.batik.script.rhino.EventTargetWrapper: java.lang.String REMOVENS_NAME> = "removeEventListenerNS";

        <org.apache.batik.script.rhino.EventTargetWrapper: java.lang.String REMOVE_NAME> = "removeEventListener";

        <org.apache.batik.script.rhino.EventTargetWrapper: java.lang.String ADDNS_NAME> = "addEventListenerNS";

        <org.apache.batik.script.rhino.EventTargetWrapper: java.lang.String ADD_NAME> = "addEventListener";

        return;
    }
}
