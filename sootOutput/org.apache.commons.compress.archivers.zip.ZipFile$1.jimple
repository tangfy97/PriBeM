class org.apache.commons.compress.archivers.zip.ZipFile$1 extends java.util.zip.InflaterInputStream
{
    final java.util.zip.Inflater val$inflater;
    final org.apache.commons.compress.archivers.zip.ZipFile this$0;

    void <init>(org.apache.commons.compress.archivers.zip.ZipFile, java.io.InputStream, java.util.zip.Inflater, java.util.zip.Inflater)
    {
        org.apache.commons.compress.archivers.zip.ZipFile$1 r0;
        java.util.zip.Inflater r2, r4;
        org.apache.commons.compress.archivers.zip.ZipFile r1;
        java.io.InputStream r3;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipFile$1;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipFile;

        r3 := @parameter1: java.io.InputStream;

        r4 := @parameter2: java.util.zip.Inflater;

        r2 := @parameter3: java.util.zip.Inflater;

        r0.<org.apache.commons.compress.archivers.zip.ZipFile$1: org.apache.commons.compress.archivers.zip.ZipFile this$0> = r1;

        r0.<org.apache.commons.compress.archivers.zip.ZipFile$1: java.util.zip.Inflater val$inflater> = r2;

        specialinvoke r0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>(r3, r4);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.zip.ZipFile$1 r0;
        java.util.zip.Inflater $r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipFile$1;

        specialinvoke r0.<java.util.zip.InflaterInputStream: void close()>();

        $r1 = r0.<org.apache.commons.compress.archivers.zip.ZipFile$1: java.util.zip.Inflater val$inflater>;

        virtualinvoke $r1.<java.util.zip.Inflater: void end()>();

        return;
    }
}
