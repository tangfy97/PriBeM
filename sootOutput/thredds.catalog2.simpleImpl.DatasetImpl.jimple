class thredds.catalog2.simpleImpl.DatasetImpl extends thredds.catalog2.simpleImpl.DatasetNodeImpl implements thredds.catalog2.Dataset, thredds.catalog2.builder.DatasetBuilder
{
    private java.util.List accessImplList;
    private boolean isBuilt;

    void <init>(java.lang.String, thredds.catalog2.simpleImpl.CatalogImpl, thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r3;
        thredds.catalog2.simpleImpl.CatalogImpl r2;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.lang.String r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog2.simpleImpl.CatalogImpl;

        r3 := @parameter2: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        specialinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: void <init>(java.lang.String,thredds.catalog2.simpleImpl.CatalogImpl,thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r1, r2, r3);

        r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt> = 0;

        return;
    }

    public thredds.catalog2.builder.AccessBuilder addAccessBuilder()
    {
        thredds.catalog2.simpleImpl.AccessImpl $r1;
        java.lang.IllegalStateException $r5;
        java.util.List $r2, $r3;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        boolean $z0;
        java.util.ArrayList $r4;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetBuilder has been built.");

        throw $r5;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.AccessImpl;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.AccessImpl: void <init>(thredds.catalog2.simpleImpl.DatasetImpl)>(r0);

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList> = $r4;

     label2:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $r1;
    }

    public boolean removeAccessBuilder(thredds.catalog2.builder.AccessBuilder)
    {
        thredds.catalog2.simpleImpl.AccessImpl $r3;
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        thredds.catalog2.builder.AccessBuilder r2;
        java.util.List $r1, $r4;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        r2 := @parameter0: thredds.catalog2.builder.AccessBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetBuilder has been built.");

        throw $r5;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r1 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $r3 = (thredds.catalog2.simpleImpl.AccessImpl) r2;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r3);

        return $z1;
    }

    public boolean isAccessible()
    {
        java.util.List $r1, $r2;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.util.List getAccesses()
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Dataset has escaped its DatasetBuilder before build() was called.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public java.util.List getAccessesByType(thredds.catalog.ServiceType)
    {
        thredds.catalog2.simpleImpl.AccessImpl r6;
        java.lang.IllegalStateException $r10;
        java.util.Iterator $r4;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.util.ArrayList $r1;
        java.util.List $r2, $r3;
        thredds.catalog.ServiceType $r8, r9;
        java.lang.Object $r5;
        thredds.catalog2.Service $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        r9 := @parameter0: thredds.catalog.ServiceType;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Dataset has escaped its DatasetBuilder before build() was called.");

        throw $r10;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r2 == null goto label4;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.AccessImpl) $r5;

        $r7 = interfaceinvoke r6.<thredds.catalog2.Access: thredds.catalog2.Service getService()>();

        $r8 = interfaceinvoke $r7.<thredds.catalog2.Service: thredds.catalog.ServiceType getType()>();

        $z2 = virtualinvoke $r8.<thredds.catalog.ServiceType: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        goto label2;

     label4:
        return $r1;
    }

    public java.util.List getAccessBuilders()
    {
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetBuilder has been built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public java.util.List getAccessBuildersByType(thredds.catalog.ServiceType)
    {
        thredds.catalog2.simpleImpl.AccessImpl r6;
        thredds.catalog2.builder.ServiceBuilder $r7;
        java.lang.IllegalStateException $r10;
        java.util.Iterator $r4;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.util.ArrayList $r1;
        java.util.List $r2, $r3;
        thredds.catalog.ServiceType $r8, r9;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        r9 := @parameter0: thredds.catalog.ServiceType;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetBuilder has been built.");

        throw $r10;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r2 == null goto label4;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.AccessImpl) $r5;

        $r7 = interfaceinvoke r6.<thredds.catalog2.builder.AccessBuilder: thredds.catalog2.builder.ServiceBuilder getServiceBuilder()>();

        $r8 = interfaceinvoke $r7.<thredds.catalog2.builder.ServiceBuilder: thredds.catalog.ServiceType getType()>();

        $z2 = virtualinvoke $r8.<thredds.catalog.ServiceType: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        goto label2;

     label4:
        return $r1;
    }

    public boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        return $z0;
    }

    public thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.simpleImpl.AccessImpl r6;
        java.util.Iterator $r4;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        thredds.catalog2.builder.BuilderIssues $r1, $r7;
        java.util.List $r2, $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $r1 = specialinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.builder.BuilderIssues getIssues()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r2 == null goto label2;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.AccessImpl) $r5;

        $r7 = interfaceinvoke r6.<thredds.catalog2.builder.AccessBuilder: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r1.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r7);

        goto label1;

     label2:
        return $r1;
    }

    public thredds.catalog2.Dataset build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.AccessImpl r5;
        java.util.Iterator $r3;
        thredds.catalog2.simpleImpl.DatasetImpl r0;
        java.util.List $r1, $r2;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        specialinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.DatasetNode build()>();

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        if $r1 == null goto label3;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetImpl: java.util.List accessImplList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog2.simpleImpl.AccessImpl) $r4;

        interfaceinvoke r5.<thredds.catalog2.builder.AccessBuilder: thredds.catalog2.Access build()>();

        goto label2;

     label3:
        r0.<thredds.catalog2.simpleImpl.DatasetImpl: boolean isBuilt> = 1;

        return r0;
    }

    public volatile thredds.catalog2.DatasetNode build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.Dataset $r1;
        thredds.catalog2.simpleImpl.DatasetImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetImpl: thredds.catalog2.Dataset build()>();

        return $r1;
    }

    public volatile java.lang.Object build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.Dataset $r1;
        thredds.catalog2.simpleImpl.DatasetImpl r0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetImpl: thredds.catalog2.Dataset build()>();

        return $r1;
    }
}
