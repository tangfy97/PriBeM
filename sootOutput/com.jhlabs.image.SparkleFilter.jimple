public class com.jhlabs.image.SparkleFilter extends com.jhlabs.image.PointFilter implements java.io.Serializable
{
    static final long serialVersionUID;
    private int rays;
    private int radius;
    private int amount;
    private int color;
    private int randomness;
    private int width;
    private int height;
    private int centreX;
    private int centreY;
    private long seed;
    private float[] rayLengths;
    private java.util.Random randomNumbers;

    public void <init>()
    {
        int $i1;
        java.util.Random $r2;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.SparkleFilter: int rays> = 50;

        r0.<com.jhlabs.image.SparkleFilter: int radius> = 25;

        r0.<com.jhlabs.image.SparkleFilter: int amount> = 50;

        $i1 = (int) -1;

        r0.<com.jhlabs.image.SparkleFilter: int color> = $i1;

        r0.<com.jhlabs.image.SparkleFilter: int randomness> = 25;

        r0.<com.jhlabs.image.SparkleFilter: long seed> = 371L;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<com.jhlabs.image.SparkleFilter: java.util.Random randomNumbers> = $r2;

        return;
    }

    public void setColor(int)
    {
        int i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SparkleFilter: int color> = i0;

        return;
    }

    public int getColor()
    {
        int $i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        $i0 = r0.<com.jhlabs.image.SparkleFilter: int color>;

        return $i0;
    }

    public void setRandomness(int)
    {
        int i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SparkleFilter: int randomness> = i0;

        return;
    }

    public int getRandomness()
    {
        int $i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        $i0 = r0.<com.jhlabs.image.SparkleFilter: int randomness>;

        return $i0;
    }

    public void setAmount(int)
    {
        int i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SparkleFilter: int amount> = i0;

        return;
    }

    public int getAmount()
    {
        int $i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        $i0 = r0.<com.jhlabs.image.SparkleFilter: int amount>;

        return $i0;
    }

    public void setRays(int)
    {
        int i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SparkleFilter: int rays> = i0;

        return;
    }

    public int getRays()
    {
        int $i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        $i0 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        return $i0;
    }

    public void setRadius(int)
    {
        int i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.SparkleFilter: int radius> = i0;

        return;
    }

    public int getRadius()
    {
        int $i0;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        $i0 = r0.<com.jhlabs.image.SparkleFilter: int radius>;

        return $i0;
    }

    public void setDimensions(int, int)
    {
        long $l4;
        java.util.Random $r1, $r3;
        float[] $r2, $r4;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, i10;
        double $d0;
        com.jhlabs.image.SparkleFilter r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.jhlabs.image.SparkleFilter: int width> = i0;

        r0.<com.jhlabs.image.SparkleFilter: int height> = i1;

        $i2 = i0 / 2;

        r0.<com.jhlabs.image.SparkleFilter: int centreX> = $i2;

        $i3 = i1 / 2;

        r0.<com.jhlabs.image.SparkleFilter: int centreY> = $i3;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void setDimensions(int,int)>(i0, i1);

        $r1 = r0.<com.jhlabs.image.SparkleFilter: java.util.Random randomNumbers>;

        $l4 = r0.<com.jhlabs.image.SparkleFilter: long seed>;

        virtualinvoke $r1.<java.util.Random: void setSeed(long)>($l4);

        $i5 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        $r2 = newarray (float)[$i5];

        r0.<com.jhlabs.image.SparkleFilter: float[] rayLengths> = $r2;

        i10 = 0;

     label1:
        $i6 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        if i10 >= $i6 goto label2;

        $r4 = r0.<com.jhlabs.image.SparkleFilter: float[] rayLengths>;

        $i7 = r0.<com.jhlabs.image.SparkleFilter: int radius>;

        $f3 = (float) $i7;

        $i8 = r0.<com.jhlabs.image.SparkleFilter: int randomness>;

        $f0 = (float) $i8;

        $f2 = $f0 / 100.0F;

        $i9 = r0.<com.jhlabs.image.SparkleFilter: int radius>;

        $f1 = (float) $i9;

        $f4 = $f2 * $f1;

        $r3 = r0.<com.jhlabs.image.SparkleFilter: java.util.Random randomNumbers>;

        $d0 = virtualinvoke $r3.<java.util.Random: double nextGaussian()>();

        $f5 = (float) $d0;

        $f6 = $f4 * $f5;

        $f7 = $f3 + $f6;

        $r4[i10] = $f7;

        i10 = i10 + 1;

        goto label1;

     label2:
        return;
    }

    public int filterRGB(int, int, int)
    {
        float f0, f1, $f2, $f3, f4, f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20, f21, f22;
        float[] $r1, $r2;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i9 := @parameter2: int;

        $i1 = r0.<com.jhlabs.image.SparkleFilter: int centreX>;

        $i2 = i0 - $i1;

        f0 = (float) $i2;

        $i4 = r0.<com.jhlabs.image.SparkleFilter: int centreY>;

        $i5 = i3 - $i4;

        f1 = (float) $i5;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        f4 = $f3 + $f2;

        $d1 = (double) f1;

        $d0 = (double) f0;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        f5 = (float) $d2;

        $f6 = f5 + 3.1415927F;

        $f8 = $f6 / 6.2831855F;

        $i6 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        $f7 = (float) $i6;

        f9 = $f8 * $f7;

        i7 = (int) f9;

        $f10 = (float) i7;

        f18 = f9 - $f10;

        $i8 = r0.<com.jhlabs.image.SparkleFilter: int radius>;

        if $i8 == 0 goto label1;

        $r1 = r0.<com.jhlabs.image.SparkleFilter: float[] rayLengths>;

        $i12 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        $i13 = i7 % $i12;

        $f13 = $r1[$i13];

        $r2 = r0.<com.jhlabs.image.SparkleFilter: float[] rayLengths>;

        $i15 = i7 + 1;

        $i14 = r0.<com.jhlabs.image.SparkleFilter: int rays>;

        $i16 = $i15 % $i14;

        $f12 = $r2[$i16];

        $f14 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f18, $f13, $f12);

        $f16 = $f14 * $f14;

        $f15 = f4 + 1.0E-4F;

        f19 = $f16 / $f15;

        $d5 = (double) f19;

        $i17 = r0.<com.jhlabs.image.SparkleFilter: int amount>;

        $i18 = 100 - $i17;

        $d3 = (double) $i18;

        $d4 = $d3 / 50.0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, $d4);

        f20 = (float) $d6;

        f21 = f18 - 0.5F;

        $f17 = f21 * f21;

        f22 = 1.0F - $f17;

        f18 = f22 * f20;

     label1:
        $f11 = staticinvoke <com.jhlabs.image.ImageMath: float clamp(float,float,float)>(f18, 0.0F, 1.0F);

        $i10 = r0.<com.jhlabs.image.SparkleFilter: int color>;

        $i11 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f11, i9, $i10);

        return $i11;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.SparkleFilter r0;

        r0 := @this: com.jhlabs.image.SparkleFilter;

        return "Stylize/Sparkle...";
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.SparkleFilter: long serialVersionUID> = 1692413049411710802L;

        return;
    }
}
