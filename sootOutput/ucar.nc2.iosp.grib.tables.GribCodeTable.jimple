public class ucar.nc2.iosp.grib.tables.GribCodeTable extends java.lang.Object implements java.lang.Comparable
{
    private static java.util.Map tables;
    public java.lang.String name;
    public int m1;
    public int m2;
    public boolean isParameter;
    public int discipline;
    public int category;
    public java.util.List entries;
    private static int[] badones;
    static java.lang.String resourceName;
    static boolean showDiff;

    public static ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry getEntry(int, int, int)
    {
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry $r4;
        java.util.Map $r0;
        int i0, i1, i2;
        java.lang.Object $r2;
        java.lang.String $r1;
        ucar.nc2.iosp.grib.tables.GribCodeTable r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.Map tables>;

        $r1 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String getId(int,int)>(i0, i1);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<ucar.nc2.iosp.grib.tables.GribCodeTable: ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry get(int)>(i2);

        return $r4;
    }

    private static java.lang.String getId(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    void <init>(java.lang.String)
    {
        java.lang.String[] $r3, $r5;
        java.util.ArrayList $r13;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String r2, r4, $r10, $r11, $r12;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8, $r9, $r14;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i4 = (int) -1;

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline> = $i4;

        $i6 = (int) -1;

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category> = $i6;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries> = $r13;

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name> = r2;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r4 = $r3[2];

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r5;

        if $i0 != 2 goto label1;

        $r11 = $r5[0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1> = $i1;

        $r12 = $r5[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2> = $i2;

        goto label2;

     label1:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HEY bad= %s%n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label2:
        return;
    }

    void <init>(java.lang.String, java.lang.String)
    {
        ucar.nc2.iosp.grib.tables.GribCodeTable r0;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r21;
        java.lang.StringBuilder $r8, $r10, $r23;
        java.lang.String[] $r3, $r5, $r14;
        java.util.ArrayList $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i12, $i14;
        java.lang.String r2, r4, $r9, $r11, r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        java.io.PrintStream $r7;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r2 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i12 = (int) -1;

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline> = $i12;

        $i14 = (int) -1;

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category> = $i14;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries> = $r22;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r4 = $r3[2];

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r5;

        if $i0 != 2 goto label01;

        $r19 = $r5[0];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1> = $i7;

        $r20 = $r5[1];

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2> = $i8;

        goto label02;

     label01:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HEY bad= %s%n");

        $r9 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label02:
        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name> = r12;

        $r13 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name>;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ :]+");

     label03:
        i9 = 0;

     label04:
        $i10 = lengthof $r14;

        if i9 >= $i10 goto label07;

        $r15 = $r14[i9];

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("discipline");

        if $z0 == 0 goto label05;

        $i5 = i9 + 1;

        $r18 = $r14[$i5];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline> = $i6;

     label05:
        $r16 = $r14[i9];

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("category");

        if $z1 == 0 goto label06;

        $i3 = i9 + 1;

        $r17 = $r14[$i3];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category> = $i4;

     label06:
        i9 = i9 + 1;

        goto label04;

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

     label09:
        $i1 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        if $i1 < 0 goto label10;

        $i2 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        if $i2 < 0 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: boolean isParameter> = $z2;

        return;

        catch java.lang.Exception from label03 to label07 with label08;
    }

    void add(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.List $r7;
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry $r1;
        java.lang.String r2, r3, r4, r5, r6;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        $r7 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries>;

        $r1 = new ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry;

        specialinvoke $r1.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: void <init>(ucar.nc2.iosp.grib.tables.GribCodeTable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r2, r3, r4, r5, r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry get(int)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry r4;
        int i0, $i1;
        java.lang.Object $r3;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry) $r3;

        $i1 = r4.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int start>;

        if $i1 != i0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int compareTo(ucar.nc2.iosp.grib.tables.GribCodeTable)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0, r1;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r1 := @parameter0: ucar.nc2.iosp.grib.tables.GribCodeTable;

        $i1 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $i0 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        if $i1 == $i0 goto label1;

        $i16 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $i15 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $i17 = $i16 - $i15;

        return $i17;

     label1:
        $i3 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $i2 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        if $i3 == $i2 goto label2;

        $i13 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $i12 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $i14 = $i13 - $i12;

        return $i14;

     label2:
        $i5 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $i4 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        if $i5 == $i4 goto label3;

        $i10 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $i9 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $i11 = $i10 - $i9;

        return $i11;

     label3:
        $i7 = r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $i6 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $i8 = $i7 - $i6;

        return $i8;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r17;
        ucar.nc2.iosp.grib.tables.GribCodeTable r2;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r2 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GribCodeTable{name=\'");

        $r3 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", m1=");

        $i0 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", m2=");

        $i1 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isParameter=");

        $z0 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: boolean isParameter>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", discipline=");

        $i2 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", category=");

        $i3 = r2.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private boolean remove(ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry)
    {
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry r4;
        int[] $r0, $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        ucar.nc2.iosp.grib.tables.GribCodeTable r1;

        r1 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r4 := @parameter0: ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry;

        i9 = 0;

     label1:
        $r0 = <ucar.nc2.iosp.grib.tables.GribCodeTable: int[] badones>;

        $i0 = lengthof $r0;

        if i9 >= $i0 goto label3;

        $i2 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $r2 = <ucar.nc2.iosp.grib.tables.GribCodeTable: int[] badones>;

        $i1 = $r2[i9];

        if $i2 != $i1 goto label2;

        $i5 = r1.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r3 = <ucar.nc2.iosp.grib.tables.GribCodeTable: int[] badones>;

        $i3 = i9 + 1;

        $i4 = $r3[$i3];

        if $i5 != $i4 goto label2;

        $i8 = r4.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int number>;

        $r5 = <ucar.nc2.iosp.grib.tables.GribCodeTable: int[] badones>;

        $i6 = i9 + 2;

        $i7 = $r5[$i6];

        if $i8 != $i7 goto label2;

        return 1;

     label2:
        i9 = i9 + 3;

        goto label1;

     label3:
        return 0;
    }

    private static java.util.List readGribCodes(java.io.InputStream) throws java.io.IOException
    {
        org.jdom.Document $r2;
        org.jdom.JDOMException $r30;
        java.util.Map $r27;
        boolean $z0, $z1;
        ucar.nc2.iosp.grib.tables.GribCodeTable $r26, $r29, r34, r37, r38;
        java.util.Collection $r9;
        java.util.List $r6, $r12;
        org.jdom.input.SAXBuilder $r0;
        java.util.HashMap $r4, $r5;
        java.util.ArrayList $r8;
        int $i0, $i1;
        java.lang.String $r14, $r15, $r16, $r17, r20, r22, $r24, $r28, $r32, $r35, $r36;
        java.util.Iterator $r7, $r10;
        java.io.IOException $r31;
        java.lang.Object $r11, $r13, $r18, $r25;
        org.jdom.Element $r3, $r19, $r21, $r23, r33;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

     label01:
        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(r1);

     label02:
        goto label04;

     label03:
        $r30 := @caughtexception;

        $r31 = new java.io.IOException;

        $r32 = virtualinvoke $r30.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r32);

        throw $r31;

     label04:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.Map tables> = $r5;

        $r6 = virtualinvoke $r3.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("ForExport_CodeFlag_E");

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.jdom.Element) $r13;

        $r14 = virtualinvoke r33.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("No");

        $r15 = virtualinvoke r33.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("TableTitle_E");

        $r16 = virtualinvoke r33.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("CodeFlag");

        $r17 = virtualinvoke r33.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("Meaning_E");

        $r18 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        r34 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r18;

        if r34 != null goto label06;

        $r29 = new ucar.nc2.iosp.grib.tables.GribCodeTable;

        specialinvoke $r29.<ucar.nc2.iosp.grib.tables.GribCodeTable: void <init>(java.lang.String)>($r15);

        r34 = $r29;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r29);

     label06:
        $r19 = virtualinvoke r33.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("AsciiUnit_x002F_Description_E");

        if $r19 != null goto label07;

        $r35 = null;

        goto label08;

     label07:
        $r35 = virtualinvoke $r19.<org.jdom.Element: java.lang.String getTextNormalize()>();

     label08:
        r20 = $r35;

        $r21 = virtualinvoke r33.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("Status");

        if $r21 != null goto label09;

        $r36 = null;

        goto label10;

     label09:
        $r36 = virtualinvoke $r21.<org.jdom.Element: java.lang.String getTextNormalize()>();

     label10:
        r22 = $r36;

        $r23 = virtualinvoke r33.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("TableSubTitle_E");

        if $r23 == null goto label12;

        $r24 = virtualinvoke $r23.<org.jdom.Element: java.lang.String getTextNormalize()>();

        $r25 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        r37 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r25;

        if r37 != null goto label11;

        $r26 = new ucar.nc2.iosp.grib.tables.GribCodeTable;

        specialinvoke $r26.<ucar.nc2.iosp.grib.tables.GribCodeTable: void <init>(java.lang.String,java.lang.String)>($r15, $r24);

        r37 = $r26;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r27 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.Map tables>;

        $i1 = $r26.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $i0 = $r26.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r28 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String getId(int,int)>($i1, $i0);

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r26);

     label11:
        virtualinvoke r37.<ucar.nc2.iosp.grib.tables.GribCodeTable: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, $r16, $r17, r20, r22);

        goto label13;

     label12:
        virtualinvoke r34.<ucar.nc2.iosp.grib.tables.GribCodeTable: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, $r16, $r17, r20, $r36);

     label13:
        goto label05;

     label14:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        $r8 = new java.util.ArrayList;

        $r9 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        $r10 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r38 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r11;

        $r12 = r38.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r12);

        goto label15;

     label16:
        return $r8;

        catch org.jdom.JDOMException from label01 to label02 with label03;
    }

    public static java.util.Map readGribCodes() throws java.io.IOException
    {
        java.lang.Object[] $r19;
        java.util.HashMap $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r12, $r20, r22;
        boolean $z0, $z1;
        ucar.nc2.iosp.grib.tables.GribCodeTable r7;
        java.io.PrintStream $r21;
        java.util.Iterator $r5;
        java.util.List $r3;
        java.lang.Class r0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        java.io.InputStream $r2;

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r19[0] = $r20;

        virtualinvoke $r21.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r19);

        return null;

     label1:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List readGribCodes(java.io.InputStream)>($r2);

        $r4 = new java.util.HashMap;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 2 * $i0;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>($i1);

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i2 = r7.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i3 = r7.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = $r12;

        $z1 = r7.<ucar.nc2.iosp.grib.tables.GribCodeTable: boolean isParameter>;

        if $z1 == 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i4 = r7.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i5 = r7.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r7);

        goto label2;

     label4:
        return $r4;
    }

    public static java.util.List getWmoStandard() throws java.io.IOException
    {
        java.io.PrintStream $r6;
        java.lang.Throwable $r7;
        java.lang.Object[] $r4;
        java.util.List $r3;
        java.lang.Class r0;
        java.lang.String $r1, $r5;
        java.io.InputStream $r2;

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r4[0] = $r5;

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r4);

        return null;

     label1:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List readGribCodes(java.io.InputStream)>($r2);

     label2:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return $r3;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.Integer $r10, $r11, $r12, $r13, $r14, $r29, $r30, $r31, $r32, $r40, $r41, $r52, $r53, $r54;
        java.lang.Object[] $r5, $r8, $r27, $r37, $r43, $r51;
        java.lang.String $r1, $r21, $r23, $r24, $r25, $r33, $r38, $r42, $r44, $r49, $r55;
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry r20, r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        ucar.nc2.iosp.grib.tables.GribCodeTable r16, r47;
        java.util.List $r3, $r17, $r34;
        java.lang.String[] r46;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i16, $i17, $i18;
        java.io.PrintStream $r6, $r9, $r28, $r39, $r45, $r50;
        java.util.Iterator $r4, $r7, $r18, $r35;
        ucar.grid.GridParameter $r22;
        java.lang.Class r0;
        java.lang.Object $r15, $r19, $r26, $r36;
        java.io.InputStream $r2;

        r46 := @parameter0: java.lang.String[];

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label01;

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r43 = newarray (java.lang.Object)[1];

        $r44 = <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName>;

        $r43[0] = $r44;

        virtualinvoke $r45.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r43);

        return;

     label01:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List readGribCodes(java.io.InputStream)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r26 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r47 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r26;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = newarray (java.lang.Object)[5];

        $i5 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m1>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r27[0] = $r29;

        $i6 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: int m2>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r27[1] = $r30;

        $i7 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r27[2] = $r31;

        $i8 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r27[3] = $r32;

        $r33 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String name>;

        $r27[4] = $r33;

        virtualinvoke $r28.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%d.%d (%d,%d) %s %n", $r27);

        $r34 = r47.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries>;

        $r35 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry) $r36;

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r37 = newarray (java.lang.Object)[4];

        $r38 = r48.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String code>;

        $r37[0] = $r38;

        $i9 = r48.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int start>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r37[1] = $r40;

        $i10 = r48.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int stop>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r37[2] = $r41;

        $r42 = r48.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        $r37[3] = $r42;

        virtualinvoke $r39.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  %s (%d-%d) = %s %n", $r37);

        goto label03;

     label04:
        goto label02;

     label05:
        $z1 = <ucar.nc2.iosp.grib.tables.GribCodeTable: boolean showDiff>;

        if $z1 == 0 goto label20;

        i11 = 0;

        i12 = 0;

        i13 = 0;

        i14 = 0;

        i15 = 0;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("DIFFERENCES with current parameter table", $r5);

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label19;

        $r15 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r15;

        $z2 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: boolean isParameter>;

        if $z2 != 0 goto label07;

        goto label06;

     label07:
        $r17 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.List entries>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z9 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label18;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry) $r19;

        $r21 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Missing");

        if $z3 == 0 goto label09;

        goto label08;

     label09:
        $i1 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int start>;

        $i0 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int stop>;

        if $i1 == $i0 goto label10;

        goto label08;

     label10:
        $i4 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $i3 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $i2 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int start>;

        $r22 = staticinvoke <ucar.grib.grib2.ParameterTable: ucar.grid.GridParameter getParameter(int,int,int)>($i4, $i3, $i2);

        $r23 = virtualinvoke $r22.<ucar.grid.GridParameter: java.lang.String getDescription()>();

        $z4 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("Unknown");

        if $z4 == 0 goto label11;

        i15 = i15 + 1;

     label11:
        $r24 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z5 == 0 goto label12;

        i12 = i12 + 1;

     label12:
        $r25 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r25);

        if $z6 == 0 goto label13;

        i13 = i13 + 1;

        goto label14;

     label13:
        i14 = i14 + 1;

     label14:
        i11 = i11 + 1;

        if $z5 == 0 goto label15;

        $r49 = "  ";

        goto label17;

     label15:
        if $z6 == 0 goto label16;

        $r49 = "* ";

        goto label17;

     label16:
        $r49 = "**";

     label17:
        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r51 = newarray (java.lang.Object)[6];

        $r51[0] = $r49;

        $i16 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: int discipline>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r51[1] = $r52;

        $i17 = r16.<ucar.nc2.iosp.grib.tables.GribCodeTable: int category>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r51[2] = $r53;

        $i18 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: int start>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r51[3] = $r54;

        $r55 = r20.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        $r51[4] = $r55;

        $r51[5] = $r23;

        virtualinvoke $r50.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%d %d %d%n %s%n %s%n", $r51);

        goto label08;

     label18:
        goto label06;

     label19:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = newarray (java.lang.Object)[5];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r8[2] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        $r8[3] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $r8[4] = $r14;

        virtualinvoke $r9.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Total=%d same=%d sameIgn=%d dif=%d unknown=%d%n", $r8);

     label20:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0, $r2;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grib.tables.GribCodeTable) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: int compareTo(ucar.nc2.iosp.grib.tables.GribCodeTable)>($r2);

        return $i0;
    }

    static boolean access$000(ucar.nc2.iosp.grib.tables.GribCodeTable, ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry)
    {
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry r1;
        ucar.nc2.iosp.grib.tables.GribCodeTable r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.grib.tables.GribCodeTable;

        r1 := @parameter1: ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.grib.tables.GribCodeTable: boolean remove(ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[33];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 51;

        $r0[3] = 0;

        $r0[4] = 6;

        $r0[5] = 25;

        $r0[6] = 0;

        $r0[7] = 19;

        $r0[8] = 22;

        $r0[9] = 0;

        $r0[10] = 191;

        $r0[11] = 0;

        $r0[12] = 1;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 1;

        $r0[16] = 0;

        $r0[17] = 1;

        $r0[18] = 1;

        $r0[19] = 1;

        $r0[20] = 0;

        $r0[21] = 1;

        $r0[22] = 1;

        $r0[23] = 1;

        $r0[24] = 1;

        $r0[25] = 1;

        $r0[26] = 2;

        $r0[27] = 2;

        $r0[28] = 0;

        $r0[29] = 0;

        $r0[30] = 10;

        $r0[31] = 191;

        $r0[32] = 0;

        <ucar.nc2.iosp.grib.tables.GribCodeTable: int[] badones> = $r0;

        <ucar.nc2.iosp.grib.tables.GribCodeTable: java.lang.String resourceName> = "/resources/grib/wmo/GRIB2_5_2_0_CodeFlag_E.xml";

        <ucar.nc2.iosp.grib.tables.GribCodeTable: boolean showDiff> = 1;

        return;
    }
}
