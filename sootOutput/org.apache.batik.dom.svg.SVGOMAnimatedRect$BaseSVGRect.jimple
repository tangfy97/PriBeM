public class org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect extends org.apache.batik.dom.svg.SVGOMRect
{
    protected boolean valid;
    private final org.apache.batik.dom.svg.SVGOMAnimatedRect this$0;

    protected void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0> = r1;

        return;
    }

    public void invalidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: boolean valid> = 0;

        return;
    }

    protected void reset()
    {
        java.lang.Throwable $r19;
        java.lang.StringBuffer $r5, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r7, $r8, $r9, $r17;
        org.apache.batik.dom.svg.AbstractElement $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2, $r3, $r4, $r18, $r20;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

     label1:
        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r1.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing> = 1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r6 = $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r7 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r8 = $r4.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $f0 = r0.<org.apache.batik.dom.svg.SVGOMRect: float x>;

        $r9 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f1 = r0.<org.apache.batik.dom.svg.SVGOMRect: float y>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f2 = r0.<org.apache.batik.dom.svg.SVGOMRect: float w>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f3 = r0.<org.apache.batik.dom.svg.SVGOMRect: float h>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r17);

        goto label6;

     label2:
        goto label5;

     label3:
        $r19 := @caughtexception;

        goto label7;

     label4:
        throw $r19;

     label5:
        return;

     label6:
        $r18 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r18.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing> = 0;

        goto label2;

     label7:
        $r20 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r20.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing> = 0;

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    protected void revalidate()
    {
        float[] $r11;
        org.w3c.dom.Attr $r7;
        java.lang.String $r4, $r5, $r12;
        org.apache.batik.dom.svg.AbstractElement $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedRect$1 $r9;
        boolean $z0;
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        org.apache.batik.parser.NumberListParser $r8;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2, $r3, $r10;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: boolean valid>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r6 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r5 = $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r4 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r7 = virtualinvoke $r6.<org.apache.batik.dom.AbstractElement: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>($r5, $r4);

        if $r7 != null goto label2;

        $r10 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r12 = $r10.<org.apache.batik.dom.svg.SVGOMAnimatedRect: java.lang.String defaultValue>;

        goto label3;

     label2:
        $r12 = interfaceinvoke $r7.<org.w3c.dom.Attr: java.lang.String getValue()>();

     label3:
        $r11 = newarray (float)[4];

        $r8 = new org.apache.batik.parser.NumberListParser;

        specialinvoke $r8.<org.apache.batik.parser.NumberListParser: void <init>()>();

        $r9 = new org.apache.batik.dom.svg.SVGOMAnimatedRect$1;

        specialinvoke $r9.<org.apache.batik.dom.svg.SVGOMAnimatedRect$1: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect,java.lang.String,float[])>(r0, $r12, $r11);

        virtualinvoke $r8.<org.apache.batik.parser.NumberListParser: void setNumberListHandler(org.apache.batik.parser.NumberListHandler)>($r9);

        virtualinvoke $r8.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>($r12);

        $f0 = $r11[0];

        r0.<org.apache.batik.dom.svg.SVGOMRect: float x> = $f0;

        $f1 = $r11[1];

        r0.<org.apache.batik.dom.svg.SVGOMRect: float y> = $f1;

        $f2 = $r11[2];

        r0.<org.apache.batik.dom.svg.SVGOMRect: float w> = $f2;

        $f3 = $r11[3];

        r0.<org.apache.batik.dom.svg.SVGOMRect: float h> = $f3;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: boolean valid> = 1;

        return;
    }

    public float getX()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void revalidate()>();

        $f0 = r0.<org.apache.batik.dom.svg.SVGOMRect: float x>;

        return $f0;
    }

    public void setX(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float x> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void reset()>();

        return;
    }

    public float getY()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void revalidate()>();

        $f0 = r0.<org.apache.batik.dom.svg.SVGOMRect: float y>;

        return $f0;
    }

    public void setY(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float y> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void reset()>();

        return;
    }

    public float getWidth()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void revalidate()>();

        $f0 = r0.<org.apache.batik.dom.svg.SVGOMRect: float w>;

        return $f0;
    }

    public void setWidth(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float w> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void reset()>();

        return;
    }

    public float getHeight()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void revalidate()>();

        $f0 = r0.<org.apache.batik.dom.svg.SVGOMRect: float h>;

        return $f0;
    }

    public void setHeight(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float h> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void reset()>();

        return;
    }

    static org.apache.batik.dom.svg.SVGOMAnimatedRect access$000(org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect r0;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1;

        r0 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        return $r1;
    }
}
