public class com.hp.hpl.jena.vocabulary.RDFS$Nodes extends java.lang.Object
{
    public static final com.hp.hpl.jena.graph.Node Class;
    public static final com.hp.hpl.jena.graph.Node Datatype;
    public static final com.hp.hpl.jena.graph.Node Container;
    public static final com.hp.hpl.jena.graph.Node ContainerMembershipProperty;
    public static final com.hp.hpl.jena.graph.Node Literal;
    public static final com.hp.hpl.jena.graph.Node Resource;
    public static final com.hp.hpl.jena.graph.Node comment;
    public static final com.hp.hpl.jena.graph.Node domain;
    public static final com.hp.hpl.jena.graph.Node label;
    public static final com.hp.hpl.jena.graph.Node isDefinedBy;
    public static final com.hp.hpl.jena.graph.Node range;
    public static final com.hp.hpl.jena.graph.Node seeAlso;
    public static final com.hp.hpl.jena.graph.Node subClassOf;
    public static final com.hp.hpl.jena.graph.Node subPropertyOf;
    public static final com.hp.hpl.jena.graph.Node member;

    public void <init>()
    {
        com.hp.hpl.jena.vocabulary.RDFS$Nodes r0;

        r0 := @this: com.hp.hpl.jena.vocabulary.RDFS$Nodes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.graph.Node $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        com.hp.hpl.jena.rdf.model.Property $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28;
        com.hp.hpl.jena.rdf.model.Resource $r0, $r2, $r4, $r6, $r8, $r10;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node Class> = $r1;

        $r2 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Datatype>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node Datatype> = $r3;

        $r4 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Container>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node Container> = $r5;

        $r6 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource ContainerMembershipProperty>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node ContainerMembershipProperty> = $r7;

        $r8 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Literal>;

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node Literal> = $r9;

        $r10 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Resource>;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node Resource> = $r11;

        $r12 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property comment>;

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node comment> = $r13;

        $r14 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property domain>;

        $r15 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node domain> = $r15;

        $r16 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property label>;

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node label> = $r17;

        $r18 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property isDefinedBy>;

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node isDefinedBy> = $r19;

        $r20 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property range>;

        $r21 = interfaceinvoke $r20.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node range> = $r21;

        $r22 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property seeAlso>;

        $r23 = interfaceinvoke $r22.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node seeAlso> = $r23;

        $r24 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property subClassOf>;

        $r25 = interfaceinvoke $r24.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node subClassOf> = $r25;

        $r26 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property subPropertyOf>;

        $r27 = interfaceinvoke $r26.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node subPropertyOf> = $r27;

        $r28 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property member>;

        $r29 = interfaceinvoke $r28.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        <com.hp.hpl.jena.vocabulary.RDFS$Nodes: com.hp.hpl.jena.graph.Node member> = $r29;

        return;
    }
}
