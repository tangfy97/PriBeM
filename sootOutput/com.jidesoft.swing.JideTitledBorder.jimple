public class com.jidesoft.swing.JideTitledBorder extends javax.swing.border.AbstractBorder
{
    private static final long serialVersionUID;
    protected java.lang.String title;
    protected javax.swing.border.Border border;
    protected int titlePosition;
    protected int titleJustification;
    protected java.awt.Font titleFont;
    protected java.awt.Color titleColor;
    private java.awt.Point textLoc;
    public static final int DEFAULT_POSITION;
    public static final int ABOVE_TOP;
    public static final int TOP;
    public static final int BELOW_TOP;
    public static final int ABOVE_BOTTOM;
    public static final int BOTTOM;
    public static final int BELOW_BOTTOM;
    public static final int DEFAULT_JUSTIFICATION;
    public static final int LEFT;
    public static final int CENTER;
    public static final int RIGHT;
    public static final int LEADING;
    public static final int TRAILING;
    protected static final int EDGE_SPACING;
    protected static final int TITLE_MARGIN;
    protected static final int TEXT_SPACING;
    protected static final int TEXT_INSET_H;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.jidesoft.swing.JideTitledBorder: void <init>(javax.swing.border.Border,java.lang.String,int,int,java.awt.Font,java.awt.Color)>(null, r1, 4, 2, null, null);

        return;
    }

    public void <init>(javax.swing.border.Border)
    {
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: javax.swing.border.Border;

        specialinvoke r0.<com.jidesoft.swing.JideTitledBorder: void <init>(javax.swing.border.Border,java.lang.String,int,int,java.awt.Font,java.awt.Color)>(r1, "", 4, 2, null, null);

        return;
    }

    public void <init>(javax.swing.border.Border, java.lang.String)
    {
        java.lang.String r2;
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: javax.swing.border.Border;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.jidesoft.swing.JideTitledBorder: void <init>(javax.swing.border.Border,java.lang.String,int,int,java.awt.Font,java.awt.Color)>(r1, r2, 4, 2, null, null);

        return;
    }

    public void <init>(javax.swing.border.Border, java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r2;
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: javax.swing.border.Border;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.jidesoft.swing.JideTitledBorder: void <init>(javax.swing.border.Border,java.lang.String,int,int,java.awt.Font,java.awt.Color)>(r1, r2, i0, i1, null, null);

        return;
    }

    public void <init>(javax.swing.border.Border, java.lang.String, int, int, java.awt.Font)
    {
        java.awt.Font r3;
        int i0, i1;
        java.lang.String r2;
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: javax.swing.border.Border;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.awt.Font;

        specialinvoke r0.<com.jidesoft.swing.JideTitledBorder: void <init>(javax.swing.border.Border,java.lang.String,int,int,java.awt.Font,java.awt.Color)>(r1, r2, i0, i1, r3, null);

        return;
    }

    public void <init>(javax.swing.border.Border, java.lang.String, int, int, java.awt.Font, java.awt.Color)
    {
        java.awt.Color r5;
        java.awt.Font r4;
        java.awt.Point $r1;
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r3;
        int i0, i1;
        java.lang.String r2;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r3 := @parameter0: javax.swing.border.Border;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r4 := @parameter4: java.awt.Font;

        r5 := @parameter5: java.awt.Color;

        specialinvoke r0.<javax.swing.border.AbstractBorder: void <init>()>();

        $r1 = new java.awt.Point;

        specialinvoke $r1.<java.awt.Point: void <init>()>();

        r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc> = $r1;

        r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String title> = r2;

        r0.<com.jidesoft.swing.JideTitledBorder: javax.swing.border.Border border> = r3;

        r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font titleFont> = r4;

        r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Color titleColor> = r5;

        virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: void setTitleJustification(int)>(i0);

        virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: void setTitlePosition(int)>(i1);

        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r8, $r36;
        javax.swing.border.Border $r1;
        java.awt.ComponentOrientation $r35;
        com.jidesoft.swing.JideTitledBorder r0;
        java.awt.Insets $r12, r34;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, i139, $i140, i141, $i142, $i143;
        java.awt.Component r3;
        java.lang.String $r2, $r5, $r11, $r38;
        java.awt.FontMetrics $r10;
        java.awt.Point $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r39, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.Font $r7, $r9;
        java.awt.Graphics r4;
        java.awt.Rectangle $r6, $r16, $r17;
        javax.swing.JComponent $r37;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r3 := @parameter0: java.awt.Component;

        r4 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: javax.swing.border.Border getBorder()>();

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        if $r2 == null goto label01;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label03;

     label01:
        if $r1 == null goto label02;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, i0, i1, i2, i3);

     label02:
        return;

     label03:
        $r6 = new java.awt.Rectangle;

        $i7 = i0 + 2;

        $i6 = i1 + 2;

        $i5 = i2 - 4;

        $i4 = i3 - 4;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i7, $i6, $i5, $i4);

        $r7 = virtualinvoke r4.<java.awt.Graphics: java.awt.Font getFont()>();

        $r8 = virtualinvoke r4.<java.awt.Graphics: java.awt.Color getColor()>();

        $r9 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font getFont(java.awt.Component)>(r3);

        virtualinvoke r4.<java.awt.Graphics: void setFont(java.awt.Font)>($r9);

        $r10 = virtualinvoke r4.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $i8 = virtualinvoke $r10.<java.awt.FontMetrics: int getHeight()>();

        $i9 = virtualinvoke $r10.<java.awt.FontMetrics: int getDescent()>();

        $i10 = virtualinvoke $r10.<java.awt.FontMetrics: int getAscent()>();

        $r11 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $i11 = virtualinvoke $r10.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r11);

        if $r1 == null goto label04;

        r34 = interfaceinvoke $r1.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r3);

        goto label05;

     label04:
        $r12 = new java.awt.Insets;

        specialinvoke $r12.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r34 = $r12;

     label05:
        $i12 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: int getTitlePosition()>();

        tableswitch($i12)
        {
            case 0: goto label07;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            default: goto label12;
        };

     label06:
        $i114 = $i10 + $i9;

        $i115 = staticinvoke <java.lang.Math: int max(int,int)>(2, 4);

        $i116 = $i115 - 2;

        i139 = $i114 + $i116;

        $i117 = $r6.<java.awt.Rectangle: int y>;

        $i118 = $i117 + i139;

        $r6.<java.awt.Rectangle: int y> = $i118;

        $i119 = $r6.<java.awt.Rectangle: int height>;

        $i120 = $i119 - i139;

        $r6.<java.awt.Rectangle: int height> = $i120;

        $r32 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i122 = $r6.<java.awt.Rectangle: int y>;

        $i121 = $i9 + 2;

        $i123 = $i122 - $i121;

        $r32.<java.awt.Point: int y> = $i123;

        goto label12;

     label07:
        $i124 = $i10 >> 1;

        $i125 = $i124 + 2;

        $i126 = $i125 - 2;

        $i127 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i126);

        $i128 = $r6.<java.awt.Rectangle: int y>;

        $i129 = $i128 + $i127;

        $r6.<java.awt.Rectangle: int y> = $i129;

        $i130 = $r6.<java.awt.Rectangle: int height>;

        $i131 = $i130 - $i127;

        $r6.<java.awt.Rectangle: int height> = $i131;

        $r33 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i132 = $r6.<java.awt.Rectangle: int y>;

        $i137 = $i132 - $i9;

        $i133 = r34.<java.awt.Insets: int top>;

        $i134 = $i133 + $i10;

        $i135 = $i134 + $i9;

        $i136 = $i135 >> 1;

        $i138 = $i137 + $i136;

        $r33.<java.awt.Point: int y> = $i138;

        goto label12;

     label08:
        $r31 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i110 = $r6.<java.awt.Rectangle: int y>;

        $i109 = r34.<java.awt.Insets: int top>;

        $i111 = $i110 + $i109;

        $i112 = $i111 + $i10;

        $i113 = $i112 + 2;

        $r31.<java.awt.Point: int y> = $i113;

        goto label12;

     label09:
        $r30 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i103 = $r6.<java.awt.Rectangle: int y>;

        $i102 = $r6.<java.awt.Rectangle: int height>;

        $i107 = $i103 + $i102;

        $i104 = r34.<java.awt.Insets: int bottom>;

        $i105 = $i104 + $i9;

        $i106 = $i105 + 2;

        $i108 = $i107 - $i106;

        $r30.<java.awt.Point: int y> = $i108;

        goto label12;

     label10:
        $i91 = $r6.<java.awt.Rectangle: int height>;

        $i90 = $i8 >> 1;

        $i92 = $i91 - $i90;

        $r6.<java.awt.Rectangle: int height> = $i92;

        $r29 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i94 = $r6.<java.awt.Rectangle: int y>;

        $i93 = $r6.<java.awt.Rectangle: int height>;

        $i95 = $i94 + $i93;

        $i100 = $i95 - $i9;

        $i97 = $i10 + $i9;

        $i96 = r34.<java.awt.Insets: int bottom>;

        $i98 = $i97 - $i96;

        $i99 = $i98 >> 1;

        $i101 = $i100 + $i99;

        $r29.<java.awt.Point: int y> = $i101;

        goto label12;

     label11:
        $i13 = $r6.<java.awt.Rectangle: int height>;

        $i14 = $i13 - $i8;

        $r6.<java.awt.Rectangle: int height> = $i14;

        $r13 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i16 = $r6.<java.awt.Rectangle: int y>;

        $i15 = $r6.<java.awt.Rectangle: int height>;

        $i17 = $i16 + $i15;

        $i18 = $i17 + $i10;

        $i19 = $i18 + 2;

        $r13.<java.awt.Point: int y> = $i19;

     label12:
        $i140 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: int getTitleJustification()>();

        i141 = $i140;

        $r35 = virtualinvoke r3.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();

        $z5 = virtualinvoke $r35.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z5 == 0 goto label15;

        if $i140 == 4 goto label13;

        if $i140 != 0 goto label14;

     label13:
        i141 = 1;

        goto label18;

     label14:
        if $i140 != 5 goto label18;

        i141 = 3;

        goto label18;

     label15:
        if $i140 == 4 goto label16;

        if $i140 != 0 goto label17;

     label16:
        i141 = 3;

        goto label18;

     label17:
        if $i140 != 5 goto label18;

        i141 = 1;

     label18:
        tableswitch(i141)
        {
            case 1: goto label19;
            case 2: goto label21;
            case 3: goto label20;
            default: goto label22;
        };

     label19:
        $r28 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i86 = $r6.<java.awt.Rectangle: int x>;

        $i88 = $i86 + 0;

        $i87 = r34.<java.awt.Insets: int left>;

        $i89 = $i88 + $i87;

        $r28.<java.awt.Point: int x> = $i89;

        goto label22;

     label20:
        $r14 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i21 = $r6.<java.awt.Rectangle: int x>;

        $i20 = $r6.<java.awt.Rectangle: int width>;

        $i25 = $i21 + $i20;

        $i23 = $i11 + 0;

        $i22 = r34.<java.awt.Insets: int right>;

        $i24 = $i23 + $i22;

        $i26 = $i25 - $i24;

        $r14.<java.awt.Point: int x> = $i26;

        goto label22;

     label21:
        $r27 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i84 = $r6.<java.awt.Rectangle: int x>;

        $i81 = $r6.<java.awt.Rectangle: int width>;

        $i82 = $i81 - $i11;

        $i83 = $i82 >> 1;

        $i85 = $i84 + $i83;

        $r27.<java.awt.Point: int x> = $i85;

     label22:
        if $r1 == null goto label32;

        if $i12 == 2 goto label23;

        if $i12 != 0 goto label24;

     label23:
        $i29 = $r6.<java.awt.Rectangle: int y>;

        $r15 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i27 = $r15.<java.awt.Point: int y>;

        $i28 = $i27 - $i10;

        if $i29 > $i28 goto label25;

     label24:
        if $i12 != 5 goto label31;

        $i77 = $r6.<java.awt.Rectangle: int y>;

        $i76 = $r6.<java.awt.Rectangle: int height>;

        $i80 = $i77 + $i76;

        $r26 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i78 = $r26.<java.awt.Point: int y>;

        $i79 = $i78 + $i9;

        if $i80 >= $i79 goto label31;

     label25:
        $r16 = new java.awt.Rectangle;

        specialinvoke $r16.<java.awt.Rectangle: void <init>()>();

        $r17 = virtualinvoke r4.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        virtualinvoke $r16.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r17);

        $r18 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i30 = $r18.<java.awt.Point: int x>;

        $i31 = $i30 - 5;

        $i32 = $i31 - i0;

        $z1 = staticinvoke <com.jidesoft.swing.JideTitledBorder: boolean computeIntersection(java.awt.Rectangle,int,int,int,int)>($r16, i0, i1, $i32, i3);

        if $z1 == 0 goto label26;

        virtualinvoke r4.<java.awt.Graphics: void setClip(java.awt.Shape)>($r16);

        $i71 = $r6.<java.awt.Rectangle: int x>;

        $i70 = $r6.<java.awt.Rectangle: int y>;

        $i69 = $r6.<java.awt.Rectangle: int width>;

        $i68 = $r6.<java.awt.Rectangle: int height>;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, $i71, $i70, $i69, $i68);

     label26:
        virtualinvoke $r16.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r17);

        $r19 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i33 = $r19.<java.awt.Point: int x>;

        $i34 = $i33 + $i11;

        $i40 = $i34 + 5;

        $i38 = i0 + i2;

        $r20 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i35 = $r20.<java.awt.Point: int x>;

        $i36 = $i35 + $i11;

        $i37 = $i36 + 5;

        $i39 = $i38 - $i37;

        $z2 = staticinvoke <com.jidesoft.swing.JideTitledBorder: boolean computeIntersection(java.awt.Rectangle,int,int,int,int)>($r16, $i40, i1, $i39, i3);

        if $z2 == 0 goto label27;

        virtualinvoke r4.<java.awt.Graphics: void setClip(java.awt.Shape)>($r16);

        $i67 = $r6.<java.awt.Rectangle: int x>;

        $i66 = $r6.<java.awt.Rectangle: int y>;

        $i65 = $r6.<java.awt.Rectangle: int width>;

        $i64 = $r6.<java.awt.Rectangle: int height>;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, $i67, $i66, $i65, $i64);

     label27:
        if $i12 == 2 goto label28;

        if $i12 != 0 goto label29;

     label28:
        virtualinvoke $r16.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r17);

        $r21 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i41 = $r21.<java.awt.Point: int x>;

        $i49 = $i41 - 5;

        $r22 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i42 = $r22.<java.awt.Point: int y>;

        $i48 = $i42 + $i9;

        $i47 = $i11 + 10;

        $i44 = i1 + i3;

        $r23 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i43 = $r23.<java.awt.Point: int y>;

        $i45 = $i44 - $i43;

        $i46 = $i45 - $i9;

        $z3 = staticinvoke <com.jidesoft.swing.JideTitledBorder: boolean computeIntersection(java.awt.Rectangle,int,int,int,int)>($r16, $i49, $i48, $i47, $i46);

        if $z3 == 0 goto label30;

        virtualinvoke r4.<java.awt.Graphics: void setClip(java.awt.Shape)>($r16);

        $i53 = $r6.<java.awt.Rectangle: int x>;

        $i52 = $r6.<java.awt.Rectangle: int y>;

        $i51 = $r6.<java.awt.Rectangle: int width>;

        $i50 = $r6.<java.awt.Rectangle: int height>;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, $i53, $i52, $i51, $i50);

        goto label30;

     label29:
        virtualinvoke $r16.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r17);

        $r24 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i54 = $r24.<java.awt.Point: int x>;

        $i59 = $i54 - 5;

        $i58 = $i11 + 10;

        $r25 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i55 = $r25.<java.awt.Point: int y>;

        $i56 = $i55 - $i10;

        $i57 = $i56 - i1;

        $z4 = staticinvoke <com.jidesoft.swing.JideTitledBorder: boolean computeIntersection(java.awt.Rectangle,int,int,int,int)>($r16, $i59, i1, $i58, $i57);

        if $z4 == 0 goto label30;

        virtualinvoke r4.<java.awt.Graphics: void setClip(java.awt.Shape)>($r16);

        $i63 = $r6.<java.awt.Rectangle: int x>;

        $i62 = $r6.<java.awt.Rectangle: int y>;

        $i61 = $r6.<java.awt.Rectangle: int width>;

        $i60 = $r6.<java.awt.Rectangle: int height>;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, $i63, $i62, $i61, $i60);

     label30:
        virtualinvoke r4.<java.awt.Graphics: void setClip(java.awt.Shape)>($r17);

        goto label32;

     label31:
        $i75 = $r6.<java.awt.Rectangle: int x>;

        $i74 = $r6.<java.awt.Rectangle: int y>;

        $i73 = $r6.<java.awt.Rectangle: int width>;

        $i72 = $r6.<java.awt.Rectangle: int height>;

        interfaceinvoke $r1.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r3, r4, $i75, $i74, $i73, $i72);

     label32:
        $r36 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Color getTitleColor()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r36);

        $r37 = (javax.swing.JComponent) r3;

        $r38 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $r39 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i142 = $r39.<java.awt.Point: int x>;

        $r40 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Point textLoc>;

        $i143 = $r40.<java.awt.Point: int y>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>($r37, r4, $r38, $i142, $i143);

        virtualinvoke r4.<java.awt.Graphics: void setFont(java.awt.Font)>($r7);

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r2, $r3;
        java.awt.Component r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.awt.Component;

        $r2 = new java.awt.Insets;

        specialinvoke $r2.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)>(r1, $r2);

        return $r3;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)
    {
        javax.swing.border.Border $r1;
        byte $b46, $b47, $b48, $b49;
        boolean $z0, $z1;
        java.awt.Font $r6;
        java.awt.Component r3;
        com.jidesoft.swing.JideTitledBorder r0;
        java.awt.Insets r2, $r8;
        javax.swing.border.AbstractBorder $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, $i45;
        java.lang.String $r4, $r5;
        java.awt.FontMetrics $r7;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r3 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Insets;

        i42 = 0;

        i43 = 16;

        i44 = 16;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: javax.swing.border.Border getBorder()>();

        if $r1 == null goto label02;

        $z1 = $r1 instanceof javax.swing.border.AbstractBorder;

        if $z1 == 0 goto label01;

        $r9 = (javax.swing.border.AbstractBorder) $r1;

        virtualinvoke $r9.<javax.swing.border.AbstractBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)>(r3, r2);

        goto label03;

     label01:
        $r8 = interfaceinvoke $r1.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r3);

        $i38 = $r8.<java.awt.Insets: int top>;

        r2.<java.awt.Insets: int top> = $i38;

        $i39 = $r8.<java.awt.Insets: int right>;

        r2.<java.awt.Insets: int right> = $i39;

        $i40 = $r8.<java.awt.Insets: int bottom>;

        r2.<java.awt.Insets: int bottom> = $i40;

        $i41 = $r8.<java.awt.Insets: int left>;

        r2.<java.awt.Insets: int left> = $i41;

        goto label03;

     label02:
        r2.<java.awt.Insets: int bottom> = 0;

        r2.<java.awt.Insets: int right> = 0;

        r2.<java.awt.Insets: int top> = 0;

        r2.<java.awt.Insets: int left> = 0;

     label03:
        $i1 = r2.<java.awt.Insets: int left>;

        $i45 = r2.<java.awt.Insets: int left>;

        if $i45 <= 0 goto label04;

        $b46 = 2;

        goto label05;

     label04:
        $b46 = 0;

     label05:
        $i0 = 2 + $b46;

        $i2 = $i1 + $i0;

        r2.<java.awt.Insets: int left> = $i2;

        $i5 = r2.<java.awt.Insets: int right>;

        $i3 = r2.<java.awt.Insets: int right>;

        if $i3 <= 0 goto label06;

        $b47 = 2;

        goto label07;

     label06:
        $b47 = 0;

     label07:
        $i4 = 2 + $b47;

        $i6 = $i5 + $i4;

        r2.<java.awt.Insets: int right> = $i6;

        $i9 = r2.<java.awt.Insets: int top>;

        $i7 = r2.<java.awt.Insets: int top>;

        if $i7 <= 0 goto label08;

        $b48 = 2;

        goto label09;

     label08:
        $b48 = 0;

     label09:
        $i8 = 2 + $b48;

        $i10 = $i9 + $i8;

        r2.<java.awt.Insets: int top> = $i10;

        $i13 = r2.<java.awt.Insets: int bottom>;

        $i11 = r2.<java.awt.Insets: int bottom>;

        if $i11 <= 0 goto label10;

        $b49 = 2;

        goto label11;

     label10:
        $b49 = 0;

     label11:
        $i12 = 2 + $b49;

        $i14 = $i13 + $i12;

        r2.<java.awt.Insets: int bottom> = $i14;

        if r3 == null goto label12;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        if $r4 == null goto label12;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label13;

     label12:
        return r2;

     label13:
        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font getFont(java.awt.Component)>(r3);

        $r7 = virtualinvoke r3.<java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r6);

        if $r7 == null goto label14;

        i42 = virtualinvoke $r7.<java.awt.FontMetrics: int getDescent()>();

        i43 = virtualinvoke $r7.<java.awt.FontMetrics: int getAscent()>();

        i44 = virtualinvoke $r7.<java.awt.FontMetrics: int getHeight()>();

     label14:
        $i15 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: int getTitlePosition()>();

        tableswitch($i15)
        {
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            default: goto label21;
        };

     label15:
        $i29 = r2.<java.awt.Insets: int top>;

        $i30 = i43 + i42;

        $i31 = staticinvoke <java.lang.Math: int max(int,int)>(2, 4);

        $i32 = $i31 - 2;

        $i33 = $i30 + $i32;

        $i34 = $i29 + $i33;

        r2.<java.awt.Insets: int top> = $i34;

        goto label21;

     label16:
        $i36 = r2.<java.awt.Insets: int top>;

        $i35 = i43 + i42;

        $i37 = $i36 + $i35;

        r2.<java.awt.Insets: int top> = $i37;

        goto label21;

     label17:
        $i27 = r2.<java.awt.Insets: int top>;

        $i25 = i43 + i42;

        $i26 = $i25 + 2;

        $i28 = $i27 + $i26;

        r2.<java.awt.Insets: int top> = $i28;

        goto label21;

     label18:
        $i23 = r2.<java.awt.Insets: int bottom>;

        $i21 = i43 + i42;

        $i22 = $i21 + 2;

        $i24 = $i23 + $i22;

        r2.<java.awt.Insets: int bottom> = $i24;

        goto label21;

     label19:
        $i19 = r2.<java.awt.Insets: int bottom>;

        $i18 = i43 + i42;

        $i20 = $i19 + $i18;

        r2.<java.awt.Insets: int bottom> = $i20;

        goto label21;

     label20:
        $i16 = r2.<java.awt.Insets: int bottom>;

        $i17 = $i16 + i44;

        r2.<java.awt.Insets: int bottom> = $i17;

     label21:
        return r2;
    }

    public boolean isBorderOpaque()
    {
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        return 0;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        $r1 = r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String title>;

        return $r1;
    }

    public javax.swing.border.Border getBorder()
    {
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 = r0.<com.jidesoft.swing.JideTitledBorder: javax.swing.border.Border border>;

        if r1 != null goto label1;

        r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("TitledBorder.border");

     label1:
        return r1;
    }

    public int getTitlePosition()
    {
        int $i0;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        $i0 = r0.<com.jidesoft.swing.JideTitledBorder: int titlePosition>;

        return $i0;
    }

    public int getTitleJustification()
    {
        int $i0;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        $i0 = r0.<com.jidesoft.swing.JideTitledBorder: int titleJustification>;

        return $i0;
    }

    public java.awt.Font getTitleFont()
    {
        com.jidesoft.swing.JideTitledBorder r0;
        java.awt.Font r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font titleFont>;

        if r1 != null goto label1;

        r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Font getFont(java.lang.Object)>("TitledBorder.font");

     label1:
        return r1;
    }

    public java.awt.Color getTitleColor()
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 = r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Color titleColor>;

        if r1 != null goto label1;

        r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("TitledBorder.titleColor");

     label1:
        return r1;
    }

    public void setTitle(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String title> = r1;

        return;
    }

    public void setBorder(javax.swing.border.Border)
    {
        com.jidesoft.swing.JideTitledBorder r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: javax.swing.border.Border;

        r0.<com.jidesoft.swing.JideTitledBorder: javax.swing.border.Border border> = r1;

        return;
    }

    public void setTitlePosition(int)
    {
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            default: goto label2;
        };

     label1:
        r0.<com.jidesoft.swing.JideTitledBorder: int titlePosition> = i0;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid title position.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        return;
    }

    public void setTitleJustification(int)
    {
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        r0.<com.jidesoft.swing.JideTitledBorder: int titleJustification> = i0;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid title justification.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        return;
    }

    public void setTitleFont(java.awt.Font)
    {
        com.jidesoft.swing.JideTitledBorder r0;
        java.awt.Font r1;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.awt.Font;

        r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font titleFont> = r1;

        return;
    }

    public void setTitleColor(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Color titleColor> = r1;

        return;
    }

    public java.awt.Dimension getMinimumSize(java.awt.Component)
    {
        java.awt.Insets $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r6, $r7;
        java.awt.Font $r4;
        java.awt.Component r1;
        com.jidesoft.swing.JideTitledBorder r0;
        java.awt.Dimension $r3;
        java.awt.FontMetrics $r5;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r1 := @parameter0: java.awt.Component;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $r3 = new java.awt.Dimension;

        $i1 = $r2.<java.awt.Insets: int right>;

        $i0 = $r2.<java.awt.Insets: int left>;

        $i5 = $i1 + $i0;

        $i3 = $r2.<java.awt.Insets: int top>;

        $i2 = $r2.<java.awt.Insets: int bottom>;

        $i4 = $i3 + $i2;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i5, $i4);

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font getFont(java.awt.Component)>(r1);

        $r5 = virtualinvoke r1.<java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r4);

        $i6 = r0.<com.jidesoft.swing.JideTitledBorder: int titlePosition>;

        tableswitch($i6)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label1;
            default: goto label2;
        };

     label1:
        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $i7 = virtualinvoke $r5.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r6);

        $i8 = $r3.<java.awt.Dimension: int width>;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        $r3.<java.awt.Dimension: int width> = $i9;

        goto label3;

     label2:
        $i10 = $r3.<java.awt.Dimension: int width>;

        $r7 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.lang.String getTitle()>();

        $i11 = virtualinvoke $r5.<java.awt.FontMetrics: int stringWidth(java.lang.String)>($r7);

        $i12 = $i10 + $i11;

        $r3.<java.awt.Dimension: int width> = $i12;

     label3:
        return $r3;
    }

    protected java.awt.Font getFont(java.awt.Component)
    {
        java.awt.Font $r1, $r3, $r4;
        java.awt.Component r2;
        com.jidesoft.swing.JideTitledBorder r0;

        r0 := @this: com.jidesoft.swing.JideTitledBorder;

        r2 := @parameter0: java.awt.Component;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideTitledBorder: java.awt.Font getTitleFont()>();

        if $r1 == null goto label1;

        return $r1;

     label1:
        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<java.awt.Component: java.awt.Font getFont()>();

        if $r4 == null goto label2;

        return $r4;

     label2:
        $r3 = new java.awt.Font;

        specialinvoke $r3.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 0, 12);

        return $r3;
    }

    private static boolean computeIntersection(java.awt.Rectangle, int, int, int, int)
    {
        java.awt.Rectangle r0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;

        r0 := @parameter0: java.awt.Rectangle;

        i0 := @parameter1: int;

        i9 := @parameter2: int;

        i3 := @parameter3: int;

        i12 := @parameter4: int;

        $i1 = r0.<java.awt.Rectangle: int x>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i1);

        $i7 = i0 + i3;

        $i5 = r0.<java.awt.Rectangle: int x>;

        $i4 = r0.<java.awt.Rectangle: int width>;

        $i6 = $i5 + $i4;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        $i10 = r0.<java.awt.Rectangle: int y>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(i9, $i10);

        $i16 = i9 + i12;

        $i14 = r0.<java.awt.Rectangle: int y>;

        $i13 = r0.<java.awt.Rectangle: int height>;

        $i15 = $i14 + $i13;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        r0.<java.awt.Rectangle: int x> = $i2;

        r0.<java.awt.Rectangle: int y> = $i11;

        $i18 = $i8 - $i2;

        r0.<java.awt.Rectangle: int width> = $i18;

        $i19 = $i17 - $i11;

        r0.<java.awt.Rectangle: int height> = $i19;

        $i20 = r0.<java.awt.Rectangle: int width>;

        if $i20 <= 0 goto label1;

        $i21 = r0.<java.awt.Rectangle: int height>;

        if $i21 > 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.JideTitledBorder: int TEXT_INSET_H> = 0;

        <com.jidesoft.swing.JideTitledBorder: int TEXT_SPACING> = 2;

        <com.jidesoft.swing.JideTitledBorder: int TITLE_MARGIN> = 5;

        <com.jidesoft.swing.JideTitledBorder: int EDGE_SPACING> = 2;

        <com.jidesoft.swing.JideTitledBorder: int TRAILING> = 5;

        <com.jidesoft.swing.JideTitledBorder: int LEADING> = 4;

        <com.jidesoft.swing.JideTitledBorder: int RIGHT> = 3;

        <com.jidesoft.swing.JideTitledBorder: int CENTER> = 2;

        <com.jidesoft.swing.JideTitledBorder: int LEFT> = 1;

        <com.jidesoft.swing.JideTitledBorder: int DEFAULT_JUSTIFICATION> = 0;

        <com.jidesoft.swing.JideTitledBorder: int BELOW_BOTTOM> = 6;

        <com.jidesoft.swing.JideTitledBorder: int BOTTOM> = 5;

        <com.jidesoft.swing.JideTitledBorder: int ABOVE_BOTTOM> = 4;

        <com.jidesoft.swing.JideTitledBorder: int BELOW_TOP> = 3;

        <com.jidesoft.swing.JideTitledBorder: int TOP> = 2;

        <com.jidesoft.swing.JideTitledBorder: int ABOVE_TOP> = 1;

        <com.jidesoft.swing.JideTitledBorder: int DEFAULT_POSITION> = 0;

        <com.jidesoft.swing.JideTitledBorder: long serialVersionUID> = 5409659168893849250L;

        return;
    }
}
