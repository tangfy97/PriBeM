public class org.apache.lucene.analysis.charfilter.MappingCharFilter extends org.apache.lucene.analysis.charfilter.BaseCharFilter
{
    private final org.apache.lucene.util.fst.Outputs outputs;
    private final org.apache.lucene.util.fst.FST map;
    private final org.apache.lucene.util.fst.FST$BytesReader fstReader;
    private final org.apache.lucene.analysis.util.RollingCharBuffer buffer;
    private final org.apache.lucene.util.fst.FST$Arc scratchArc;
    private final java.util.Map cachedRootArcs;
    private org.apache.lucene.util.CharsRef replacement;
    private int replacementPointer;
    private int inputOff;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.analysis.charfilter.NormalizeCharMap, java.io.Reader)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer $r3, $r5;
        org.apache.lucene.util.fst.FST$BytesReader $r11;
        org.apache.lucene.analysis.charfilter.MappingCharFilter r0;
        java.io.Reader r1;
        org.apache.lucene.util.fst.FST$Arc $r4;
        org.apache.lucene.analysis.charfilter.NormalizeCharMap r6;
        java.util.Map $r8;
        org.apache.lucene.util.fst.FST $r7, $r9, $r10;
        org.apache.lucene.util.fst.CharSequenceOutputs $r2;

        r0 := @this: org.apache.lucene.analysis.charfilter.MappingCharFilter;

        r6 := @parameter0: org.apache.lucene.analysis.charfilter.NormalizeCharMap;

        r1 := @parameter1: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.charfilter.BaseCharFilter: void <init>(java.io.Reader)>(r1);

        $r2 = staticinvoke <org.apache.lucene.util.fst.CharSequenceOutputs: org.apache.lucene.util.fst.CharSequenceOutputs getSingleton()>();

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.Outputs outputs> = $r2;

        $r3 = new org.apache.lucene.analysis.util.RollingCharBuffer;

        specialinvoke $r3.<org.apache.lucene.analysis.util.RollingCharBuffer: void <init>()>();

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer> = $r3;

        $r4 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r4.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST$Arc scratchArc> = $r4;

        $r5 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        virtualinvoke $r5.<org.apache.lucene.analysis.util.RollingCharBuffer: void reset(java.io.Reader)>(r1);

        $r7 = r6.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: org.apache.lucene.util.fst.FST map>;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST map> = $r7;

        $r8 = r6.<org.apache.lucene.analysis.charfilter.NormalizeCharMap: java.util.Map cachedRootArcs>;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: java.util.Map cachedRootArcs> = $r8;

        $r9 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST map>;

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST map>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST$BytesReader fstReader> = $r11;

        goto label2;

     label1:
        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST$BytesReader fstReader> = null;

     label2:
        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.util.RollingCharBuffer $r3;
        org.apache.lucene.analysis.charfilter.MappingCharFilter r0;
        java.io.Reader $r1, $r2;

        r0 := @this: org.apache.lucene.analysis.charfilter.MappingCharFilter;

        $r1 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: java.io.Reader input>;

        virtualinvoke $r1.<java.io.Reader: void reset()>();

        $r3 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        $r2 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: java.io.Reader input>;

        virtualinvoke $r3.<org.apache.lucene.analysis.util.RollingCharBuffer: void reset(java.io.Reader)>($r2);

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement> = null;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff> = 0;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r11, $r13, r27;
        java.lang.Character $r6;
        java.util.Map $r5;
        java.lang.AssertionError $r29;
        org.apache.lucene.util.fst.Outputs $r15, $r18;
        org.apache.lucene.util.CharsRef $r1, $r22, $r23, $r24, r26, r28;
        org.apache.lucene.util.fst.FST $r12;
        char[] $r25;
        org.apache.lucene.analysis.util.RollingCharBuffer $r2, $r3, $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.util.fst.FST$BytesReader $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i31, i32, i33, i34, i35, $i36, $i38, $i40, $i42, $i44;
        org.apache.lucene.analysis.charfilter.MappingCharFilter r0;
        char $c20, $c30;
        java.lang.Object $r7, $r8, $r14, $r16, $r17, $r19, $r20;

        r0 := @this: org.apache.lucene.analysis.charfilter.MappingCharFilter;

     label01:
        $r1 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement>;

        if $r1 == null goto label02;

        $i25 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int replacementPointer>;

        $r22 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement>;

        $i24 = $r22.<org.apache.lucene.util.CharsRef: int length>;

        if $i25 >= $i24 goto label02;

        $r23 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement>;

        $r25 = $r23.<org.apache.lucene.util.CharsRef: char[] chars>;

        $r24 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement>;

        $i28 = $r24.<org.apache.lucene.util.CharsRef: int offset>;

        $i26 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int replacementPointer>;

        $i27 = $i26 + 1;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int replacementPointer> = $i27;

        $i29 = $i28 + $i26;

        $c30 = $r25[$i29];

        $i36 = (int) $c30;

        return $i36;

     label02:
        $i38 = (int) -1;

        i31 = $i38;

        r26 = null;

        $r2 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        $i0 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.analysis.util.RollingCharBuffer: int get(int)>($i0);

        $i40 = (int) -1;

        if $i1 == $i40 goto label10;

        $r5 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: java.util.Map cachedRootArcs>;

        $c20 = (char) $i1;

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c20);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r27 = (org.apache.lucene.util.fst.FST$Arc) $r7;

        if r27 == null goto label10;

        $z0 = staticinvoke <org.apache.lucene.util.fst.FST: boolean targetHasArcs(org.apache.lucene.util.fst.FST$Arc)>(r27);

        if $z0 != 0 goto label04;

        $z3 = <org.apache.lucene.analysis.charfilter.MappingCharFilter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label03;

        $z4 = virtualinvoke r27.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z4 != 0 goto label03;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label03:
        i31 = 1;

        $r20 = r27.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        r26 = (org.apache.lucene.util.CharsRef) $r20;

        goto label10;

     label04:
        i32 = 0;

        $r8 = r27.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        r28 = (org.apache.lucene.util.CharsRef) $r8;

     label05:
        i32 = i32 + 1;

        $z1 = virtualinvoke r27.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z1 == 0 goto label06;

        i31 = i32;

        $r18 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.Outputs outputs>;

        $r17 = r27.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r19 = virtualinvoke $r18.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r28, $r17);

        r26 = (org.apache.lucene.util.CharsRef) $r19;

     label06:
        $z2 = staticinvoke <org.apache.lucene.util.fst.FST: boolean targetHasArcs(org.apache.lucene.util.fst.FST$Arc)>(r27);

        if $z2 != 0 goto label07;

        goto label10;

     label07:
        $r9 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        $i21 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i22 = $i21 + i32;

        $i23 = virtualinvoke $r9.<org.apache.lucene.analysis.util.RollingCharBuffer: int get(int)>($i22);

        $i42 = (int) -1;

        if $i23 != $i42 goto label08;

        goto label10;

     label08:
        $r12 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST map>;

        $r11 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST$Arc scratchArc>;

        $r10 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc findTargetArc(int,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($i23, r27, $r11, $r10);

        r27 = $r13;

        if $r13 != null goto label09;

        goto label10;

     label09:
        $r15 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.fst.Outputs outputs>;

        $r14 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r28, $r14);

        r28 = (org.apache.lucene.util.CharsRef) $r16;

        goto label05;

     label10:
        if r26 == null goto label14;

        $i7 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i8 = $i7 + i31;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff> = $i8;

        $i9 = r26.<org.apache.lucene.util.CharsRef: int length>;

        i33 = i31 - $i9;

        if i33 == 0 goto label13;

        $i10 = virtualinvoke r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int getLastCumulativeDiff()>();

        if i33 <= 0 goto label11;

        $i16 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i17 = $i16 - i33;

        $i19 = $i17 - $i10;

        $i18 = $i10 + i33;

        virtualinvoke r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: void addOffCorrectMap(int,int)>($i19, $i18);

        goto label13;

     label11:
        $i11 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        i34 = $i11 - $i10;

        i35 = 0;

     label12:
        $i12 = neg i33;

        if i35 >= $i12 goto label13;

        $i15 = i34 + i35;

        $i13 = $i10 - i35;

        $i14 = $i13 - 1;

        virtualinvoke r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: void addOffCorrectMap(int,int)>($i15, $i14);

        i35 = i35 + 1;

        goto label12;

     label13:
        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.util.CharsRef replacement> = r26;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int replacementPointer> = 0;

        goto label16;

     label14:
        $r3 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        $i2 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i3 = virtualinvoke $r3.<org.apache.lucene.analysis.util.RollingCharBuffer: int get(int)>($i2);

        $i44 = (int) -1;

        if $i3 == $i44 goto label15;

        $i4 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff> = $i5;

        $r4 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: org.apache.lucene.analysis.util.RollingCharBuffer buffer>;

        $i6 = r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int inputOff>;

        virtualinvoke $r4.<org.apache.lucene.analysis.util.RollingCharBuffer: void freeBefore(int)>($i6);

     label15:
        return $i3;

     label16:
        goto label01;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.lucene.analysis.charfilter.MappingCharFilter r0;
        char $c4;
        int i0, i1, $i2, $i3, i5, i6, $i7, $i9, $i11;
        char[] r1;

        r0 := @this: org.apache.lucene.analysis.charfilter.MappingCharFilter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 = 0;

        i6 = i0;

     label1:
        $i2 = i0 + i1;

        if i6 >= $i2 goto label3;

        $i3 = virtualinvoke r0.<org.apache.lucene.analysis.charfilter.MappingCharFilter: int read()>();

        $i9 = (int) -1;

        if $i3 != $i9 goto label2;

        goto label3;

     label2:
        $c4 = (char) $i3;

        r1[i6] = $c4;

        i5 = i5 + 1;

        i6 = i6 + 1;

        goto label1;

     label3:
        if i5 != 0 goto label4;

        $i11 = (int) -1;

        $i7 = $i11;

        goto label5;

     label4:
        $i7 = i5;

     label5:
        return $i7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/charfilter/MappingCharFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.charfilter.MappingCharFilter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
