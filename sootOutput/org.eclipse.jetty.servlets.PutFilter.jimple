public class org.eclipse.jetty.servlets.PutFilter extends java.lang.Object implements javax.servlet.Filter
{
    public static final java.lang.String __PUT;
    public static final java.lang.String __DELETE;
    public static final java.lang.String __MOVE;
    public static final java.lang.String __OPTIONS;
    java.util.Set _operations;
    private java.util.concurrent.ConcurrentMap _hidden;
    private javax.servlet.ServletContext _context;
    private java.lang.String _baseURI;
    private boolean _delAllowed;
    private boolean _putAtomic;
    private java.io.File _tmpdir;

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        org.eclipse.jetty.servlets.PutFilter r0;

        r0 := @this: org.eclipse.jetty.servlets.PutFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden> = $r2;

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        org.eclipse.jetty.servlets.PutFilter r0;
        java.lang.String $r7, $r8, $r11, $r13;
        java.net.URI $r12;
        boolean $z0, $z1, $z2;
        java.util.Set $r14, $r15, $r16, $r17;
        java.io.File $r5, $r9;
        javax.servlet.UnavailableException $r18;
        javax.servlet.FilterConfig r1;
        javax.servlet.ServletContext $r2, $r3, $r6, $r10;
        java.lang.Object $r4;

        r0 := @this: org.eclipse.jetty.servlets.PutFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        r0.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context> = $r2;

        $r3 = r0.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r4 = interfaceinvoke $r3.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.context.tempdir");

        $r5 = (java.io.File) $r4;

        r0.<org.eclipse.jetty.servlets.PutFilter: java.io.File _tmpdir> = $r5;

        $r6 = r0.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r7 = interfaceinvoke $r6.<javax.servlet.ServletContext: java.lang.String getRealPath(java.lang.String)>("/");

        if $r7 != null goto label1;

        $r18 = new javax.servlet.UnavailableException;

        specialinvoke $r18.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("Packed war");

        throw $r18;

     label1:
        $r8 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("baseURI");

        if $r8 == null goto label2;

        r0.<org.eclipse.jetty.servlets.PutFilter: java.lang.String _baseURI> = $r8;

        goto label3;

     label2:
        $r9 = new java.io.File;

        $r10 = r0.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r11 = interfaceinvoke $r10.<javax.servlet.ServletContext: java.lang.String getRealPath(java.lang.String)>("/");

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r9.<java.io.File: java.net.URI toURI()>();

        $r13 = virtualinvoke $r12.<java.net.URI: java.lang.String toString()>();

        r0.<org.eclipse.jetty.servlets.PutFilter: java.lang.String _baseURI> = $r13;

     label3:
        $z0 = specialinvoke r0.<org.eclipse.jetty.servlets.PutFilter: boolean getInitBoolean(javax.servlet.FilterConfig,java.lang.String)>(r1, "delAllowed");

        r0.<org.eclipse.jetty.servlets.PutFilter: boolean _delAllowed> = $z0;

        $z1 = specialinvoke r0.<org.eclipse.jetty.servlets.PutFilter: boolean getInitBoolean(javax.servlet.FilterConfig,java.lang.String)>(r1, "putAtomic");

        r0.<org.eclipse.jetty.servlets.PutFilter: boolean _putAtomic> = $z1;

        $r14 = r0.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("OPTIONS");

        $r15 = r0.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("PUT");

        $z2 = r0.<org.eclipse.jetty.servlets.PutFilter: boolean _delAllowed>;

        if $z2 == 0 goto label4;

        $r16 = r0.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>("DELETE");

        $r17 = r0.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations>;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>("MOVE");

     label4:
        return;
    }

    private boolean getInitBoolean(javax.servlet.FilterConfig, java.lang.String)
    {
        org.eclipse.jetty.servlets.PutFilter r3;
        javax.servlet.FilterConfig r0;
        int $i0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r3 := @this: org.eclipse.jetty.servlets.PutFilter;

        r0 := @parameter0: javax.servlet.FilterConfig;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("t");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("T");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("y");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Y");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        java.lang.IllegalStateException $r15;
        javax.servlet.FilterChain r12;
        org.eclipse.jetty.servlets.PutFilter r7;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String $r4, $r5, $r6, $r8, $r9, $r10, $r18;
        java.net.URI $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.servlet.ServletRequest r0;
        javax.servlet.http.HttpServletResponse r3;
        java.util.Set $r11;
        java.io.File $r13;
        java.lang.Exception $r16;
        javax.servlet.ServletResponse r2;
        javax.servlet.ServletContext $r17;

        r7 := @this: org.eclipse.jetty.servlets.PutFilter;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        r12 := @parameter2: javax.servlet.FilterChain;

        r1 = (javax.servlet.http.HttpServletRequest) r0;

        r3 = (javax.servlet.http.HttpServletResponse) r2;

        $r4 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        $r5 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r6 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r4, $r5);

        $r8 = r7.<org.eclipse.jetty.servlets.PutFilter: java.lang.String _baseURI>;

        $r9 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r8, $r6);

        $r10 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $r11 = r7.<org.eclipse.jetty.servlets.PutFilter: java.util.Set _operations>;

        $z0 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label11;

     label01:
        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS");

        if $z2 == 0 goto label02;

        virtualinvoke r7.<org.eclipse.jetty.servlets.PutFilter: void handleOptions(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r12, r1, r3);

        goto label08;

     label02:
        $r13 = new java.io.File;

        $r14 = new java.net.URI;

        specialinvoke $r14.<java.net.URI: void <init>(java.lang.String)>($r9);

        specialinvoke $r13.<java.io.File: void <init>(java.net.URI)>($r14);

        $z3 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label04;

        $z7 = virtualinvoke r7.<org.eclipse.jetty.servlets.PutFilter: boolean passConditionalHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.io.File)>(r1, r3, $r13);

        if $z7 != 0 goto label04;

     label03:
        return;

     label04:
        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("PUT");

        if $z4 == 0 goto label05;

        virtualinvoke r7.<org.eclipse.jetty.servlets.PutFilter: void handlePut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.io.File)>(r1, r3, $r6, $r13);

        goto label08;

     label05:
        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("DELETE");

        if $z5 == 0 goto label06;

        virtualinvoke r7.<org.eclipse.jetty.servlets.PutFilter: void handleDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.io.File)>(r1, r3, $r6, $r13);

        goto label08;

     label06:
        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("MOVE");

        if $z6 == 0 goto label07;

        virtualinvoke r7.<org.eclipse.jetty.servlets.PutFilter: void handleMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.io.File)>(r1, r3, $r6, $r13);

        goto label08;

     label07:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>();

        throw $r15;

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        $r17 = r7.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r18 = virtualinvoke $r16.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r17.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r18, $r16);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int)>(500);

     label10:
        goto label14;

     label11:
        $z1 = specialinvoke r7.<org.eclipse.jetty.servlets.PutFilter: boolean isHidden(java.lang.String)>($r6);

        if $z1 == 0 goto label12;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int)>(404);

        goto label13;

     label12:
        interfaceinvoke r12.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r3);

     label13:
        return;

     label14:
        return;

        catch java.lang.Exception from label01 to label03 with label09;
        catch java.lang.Exception from label04 to label08 with label09;
    }

    private boolean isHidden(java.lang.String)
    {
        org.eclipse.jetty.servlets.PutFilter r0;
        java.lang.String r1;
        java.util.concurrent.ConcurrentMap $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.PutFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden>;

        $z0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public void destroy()
    {
        org.eclipse.jetty.servlets.PutFilter r0;

        r0 := @this: org.eclipse.jetty.servlets.PutFilter;

        return;
    }

    public void handlePut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, java.io.File) throws javax.servlet.ServletException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Exception $r21, $r25, $r28, $r31;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.Throwable $r24;
        org.eclipse.jetty.servlets.PutFilter r2;
        javax.servlet.ServletInputStream $r6;
        long $l1, $l2;
        java.util.concurrent.ConcurrentMap $r3, $r34, $r35, $r36;
        javax.servlet.http.HttpServletRequest r5;
        short $s3;
        int $i0;
        java.lang.String r1, $r9, $r20, $r23, $r27, $r30, $r33;
        javax.servlet.http.HttpServletResponse r8;
        java.io.FileOutputStream $r7, $r12;
        java.io.IOException $r13;
        java.io.File r0, $r4, $r10, $r11;
        javax.servlet.ServletContext $r22, $r26, $r29, $r32;

        r2 := @this: org.eclipse.jetty.servlets.PutFilter;

        r5 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: java.lang.String;

        r0 := @parameter3: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label03;

        if $z0 != 0 goto label02;

        $z5 = virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        if $z5 != 0 goto label01;

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        goto label30;

     label01:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(201);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        goto label30;

     label02:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        goto label30;

     label03:
        $r3 = r2.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden>;

        interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);

        $r4 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $i0 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: int getContentLength()>();

        $r6 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $z2 = r2.<org.eclipse.jetty.servlets.PutFilter: boolean _putAtomic>;

        if $z2 == 0 goto label07;

        $r9 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r10 = r2.<org.eclipse.jetty.servlets.PutFilter: java.io.File _tmpdir>;

        $r11 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r9, null, $r10);

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r11, 0);

        if $i0 < 0 goto label04;

        $l2 = (long) $i0;

        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream,long)>($r6, $r12, $l2);

        goto label05;

     label04:
        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r6, $r12);

     label05:
        virtualinvoke $r12.<java.io.OutputStream: void close()>();

        $z4 = virtualinvoke $r11.<java.io.File: boolean renameTo(java.io.File)>(r0);

        if $z4 != 0 goto label06;

        $r13 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rename from ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r13;

     label06:
        goto label10;

     label07:
        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r0, 0);

        if $i0 < 0 goto label08;

        $l1 = (long) $i0;

        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream,long)>($r6, $r7, $l1);

        goto label09;

     label08:
        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r6, $r7);

     label09:
        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label10:
        if $z0 == 0 goto label11;

        $s3 = 200;

        goto label12;

     label11:
        $s3 = 201;

     label12:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>($s3);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

     label13:
        if 1 != 0 goto label17;

     label14:
        $z3 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label15;

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label15:
        goto label17;

     label16:
        $r31 := @caughtexception;

        $r32 = r2.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r33 = virtualinvoke $r31.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r32.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r33, $r31);

     label17:
        $r34 = r2.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden>;

        interfaceinvoke $r34.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);

        goto label30;

     label18:
        $r28 := @caughtexception;

        $r29 = r2.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r30 = virtualinvoke $r28.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r29.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r30, $r28);

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

     label19:
        if 0 != 0 goto label23;

     label20:
        $z7 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z7 == 0 goto label21;

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label21:
        goto label23;

     label22:
        $r25 := @caughtexception;

        $r26 = r2.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r27 = virtualinvoke $r25.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r26.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r27, $r25);

     label23:
        $r35 = r2.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden>;

        interfaceinvoke $r35.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);

        goto label30;

     label24:
        $r24 := @caughtexception;

     label25:
        if 0 != 0 goto label29;

     label26:
        $z6 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label27;

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label27:
        goto label29;

     label28:
        $r21 := @caughtexception;

        $r22 = r2.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r22.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r23, $r21);

     label29:
        $r36 = r2.<org.eclipse.jetty.servlets.PutFilter: java.util.concurrent.ConcurrentMap _hidden>;

        interfaceinvoke $r36.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);

        throw $r24;

     label30:
        return;

        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label03 to label13 with label18;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Throwable from label03 to label13 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public void handleDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, java.io.File) throws javax.servlet.ServletException, java.io.IOException
    {
        org.eclipse.jetty.servlets.PutFilter r3;
        javax.servlet.http.HttpServletResponse r1;
        java.io.File r0;
        javax.servlet.http.HttpServletRequest r6;
        java.lang.SecurityException $r2;
        javax.servlet.ServletContext $r4;
        java.lang.String $r5, r7;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.servlets.PutFilter;

        r6 := @parameter0: javax.servlet.http.HttpServletRequest;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        r7 := @parameter2: java.lang.String;

        r0 := @parameter3: java.io.File;

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(204);

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        goto label3;

     label2:
        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        $r4 = r3.<org.eclipse.jetty.servlets.PutFilter: javax.servlet.ServletContext _context>;

        $r5 = virtualinvoke $r2.<java.lang.SecurityException: java.lang.String toString()>();

        interfaceinvoke $r4.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r5, $r2);

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

     label5:
        return;

        catch java.lang.SecurityException from label1 to label3 with label4;
    }

    public void handleMove(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, java.io.File) throws javax.servlet.ServletException, java.io.IOException, java.net.URISyntaxException
    {
        org.eclipse.jetty.servlets.PutFilter r4;
        javax.servlet.http.HttpServletResponse r10;
        java.io.File $r7, r9;
        javax.servlet.http.HttpServletRequest r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r5, $r6, r11, r12;
        java.net.URI $r8;
        boolean $z0;

        r4 := @this: org.eclipse.jetty.servlets.PutFilter;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r10 := @parameter1: javax.servlet.http.HttpServletResponse;

        r11 := @parameter2: java.lang.String;

        r9 := @parameter3: java.io.File;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("new-uri");

        $r2 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String canonicalPath(java.lang.String)>($r1);

        if $r2 != null goto label1;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void sendError(int)>(400);

        return;

     label1:
        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label2;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void sendError(int)>(405);

        return;

     label2:
        r12 = $r2;

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r12 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label3:
        $r5 = r4.<org.eclipse.jetty.servlets.PutFilter: java.lang.String _baseURI>;

        $r6 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r5, r12);

        $r7 = new java.io.File;

        $r8 = new java.net.URI;

        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>($r6);

        specialinvoke $r7.<java.io.File: void <init>(java.net.URI)>($r8);

        virtualinvoke r9.<java.io.File: boolean renameTo(java.io.File)>($r7);

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(204);

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        return;
    }

    public void handleOptions(javax.servlet.FilterChain, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.FilterChain r0;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.servlets.PutFilter$1 $r2;
        org.eclipse.jetty.servlets.PutFilter r3;
        javax.servlet.http.HttpServletResponse r4;

        r3 := @this: org.eclipse.jetty.servlets.PutFilter;

        r0 := @parameter0: javax.servlet.FilterChain;

        r1 := @parameter1: javax.servlet.http.HttpServletRequest;

        r4 := @parameter2: javax.servlet.http.HttpServletResponse;

        $r2 = new org.eclipse.jetty.servlets.PutFilter$1;

        specialinvoke $r2.<org.eclipse.jetty.servlets.PutFilter$1: void <init>(org.eclipse.jetty.servlets.PutFilter,javax.servlet.http.HttpServletResponse)>(r3, r4);

        interfaceinvoke r0.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, $r2);

        return;
    }

    protected boolean passConditionalHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.io.File) throws java.io.IOException
    {
        org.eclipse.jetty.servlets.PutFilter r3;
        long $l0, $l2, $l4, $l5, $l6, $l8, $l9, $l10;
        javax.servlet.http.HttpServletRequest r0;
        byte $b1, $b3, $b7, $b11;
        int $i12, $i13, $i14, $i15;
        javax.servlet.http.HttpServletResponse r2;
        java.io.File r1;

        r3 := @this: org.eclipse.jetty.servlets.PutFilter;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: java.io.File;

        $l0 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("if-unmodified-since");

        $b1 = $l0 cmp 0L;

        $i12 = (int) $b1;

        if $i12 <= 0 goto label1;

        $l8 = virtualinvoke r1.<java.io.File: long lastModified()>();

        $l10 = $l8 / 1000L;

        $l9 = $l0 / 1000L;

        $b11 = $l10 cmp $l9;

        $i13 = (int) $b11;

        if $i13 <= 0 goto label1;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int)>(412);

        return 0;

     label1:
        $l2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("if-modified-since");

        $b3 = $l2 cmp 0L;

        $i14 = (int) $b3;

        if $i14 <= 0 goto label2;

        $l4 = virtualinvoke r1.<java.io.File: long lastModified()>();

        $l6 = $l4 / 1000L;

        $l5 = $l2 / 1000L;

        $b7 = $l6 cmp $l5;

        $i15 = (int) $b7;

        if $i15 > 0 goto label2;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void reset()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(304);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <org.eclipse.jetty.servlets.PutFilter: java.lang.String __OPTIONS> = "OPTIONS";

        <org.eclipse.jetty.servlets.PutFilter: java.lang.String __MOVE> = "MOVE";

        <org.eclipse.jetty.servlets.PutFilter: java.lang.String __DELETE> = "DELETE";

        <org.eclipse.jetty.servlets.PutFilter: java.lang.String __PUT> = "PUT";

        return;
    }
}
