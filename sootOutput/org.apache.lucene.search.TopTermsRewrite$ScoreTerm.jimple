final class org.apache.lucene.search.TopTermsRewrite$ScoreTerm extends java.lang.Object implements java.lang.Comparable
{
    public final java.util.Comparator termComp;
    public final org.apache.lucene.util.BytesRef bytes;
    public float boost;
    public final org.apache.lucene.index.TermContext termState;

    public void <init>(java.util.Comparator, org.apache.lucene.index.TermContext)
    {
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.search.TopTermsRewrite$ScoreTerm r0;
        java.util.Comparator r2;
        org.apache.lucene.index.TermContext r3;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        r2 := @parameter0: java.util.Comparator;

        r3 := @parameter1: org.apache.lucene.index.TermContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes> = $r1;

        r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: java.util.Comparator termComp> = r2;

        r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.index.TermContext termState> = r3;

        return;
    }

    public int compareTo(org.apache.lucene.search.TopTermsRewrite$ScoreTerm)
    {
        org.apache.lucene.util.BytesRef $r2, $r3;
        byte $b0;
        org.apache.lucene.search.TopTermsRewrite$ScoreTerm r0, r1;
        int $i1, $i2;
        float $f0, $f1, $f2, $f3;
        java.util.Comparator $r4;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        r1 := @parameter0: org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        $f1 = r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $f0 = r1.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        $r4 = r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: java.util.Comparator termComp>;

        $r3 = r1.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        $r2 = r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        $i2 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $i2;

     label1:
        $f3 = r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $f2 = r1.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        return $i1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.lucene.search.TopTermsRewrite$ScoreTerm r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.search.TopTermsRewrite$ScoreTerm) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: int compareTo(org.apache.lucene.search.TopTermsRewrite$ScoreTerm)>($r2);

        return $i0;
    }
}
