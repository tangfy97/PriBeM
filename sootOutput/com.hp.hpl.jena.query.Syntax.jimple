public class com.hp.hpl.jena.query.Syntax extends com.hp.hpl.jena.sparql.util.Symbol
{
    public static final com.hp.hpl.jena.query.Syntax syntaxSPARQL_10;
    public static final com.hp.hpl.jena.query.Syntax syntaxSPARQL_11;
    public static final com.hp.hpl.jena.query.Syntax syntaxARQ;
    public static final com.hp.hpl.jena.query.Syntax syntaxAlgebra;
    public static com.hp.hpl.jena.query.Syntax defaultSyntax;
    public static com.hp.hpl.jena.query.Syntax defaultQuerySyntax;
    public static com.hp.hpl.jena.query.Syntax defaultUpdateSyntax;
    public static final com.hp.hpl.jena.query.Syntax syntaxSPARQL;
    public static com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames;
    public static com.hp.hpl.jena.sparql.util.TranslationTable updateSyntaxNames;

    protected void <init>(java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.query.Syntax;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.Symbol: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r0, r1;

        r0 := @this: com.hp.hpl.jena.query.Syntax;

        r1 := @parameter0: com.hp.hpl.jena.query.Syntax;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.Symbol: void <init>(com.hp.hpl.jena.sparql.util.Symbol)>(r1);

        return;
    }

    public static com.hp.hpl.jena.query.Syntax make(java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String r0;
        com.hp.hpl.jena.sparql.util.Symbol $r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>(r0);

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Symbol: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r11 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        return $r11;

     label2:
        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        $z1 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Symbol: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r10 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        return $r10;

     label3:
        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_10>;

        $z2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Symbol: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label4;

        $r9 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_10>;

        return $r9;

     label4:
        $r5 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        $z3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Symbol: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label5;

        $r8 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        return $r8;

     label5:
        $r6 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        $z4 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Symbol: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label6;

        $r7 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        return $r7;

     label6:
        return null;
    }

    public static com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        $r2 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".arq");

        if $z0 == 0 goto label1;

        $r6 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".rq");

        if $z1 == 0 goto label2;

        $r5 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        return $r5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".aru");

        if $z2 == 0 goto label3;

        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        return $r4;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".ru");

        if $z3 == 0 goto label4;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        return $r3;

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".sse");

        if $z4 == 0 goto label5;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        return $r2;

     label5:
        return r1;
    }

    public static com.hp.hpl.jena.query.Syntax guessQueryFileSyntax(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultQuerySyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Syntax guessQueryFileSyntax(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r1, $r2, $r3, $r4;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".arq");

        if $z0 == 0 goto label1;

        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        return $r4;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".rq");

        if $z1 == 0 goto label2;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        return $r3;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".sse");

        if $z2 == 0 goto label3;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        return $r2;

     label3:
        return r1;
    }

    public static com.hp.hpl.jena.query.Syntax guessUpdateFileSyntax(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessUpdateFileSyntax(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.query.Syntax guessUpdateFileSyntax(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r1, $r2, $r3, $r4;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".aru");

        if $z0 == 0 goto label1;

        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        return $r4;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".ru");

        if $z1 == 0 goto label2;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        return $r3;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".sse");

        if $z2 == 0 goto label3;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        return $r2;

     label3:
        return r1;
    }

    public static com.hp.hpl.jena.query.Syntax lookup(java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r3;
        com.hp.hpl.jena.sparql.util.TranslationTable $r1;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.TranslationTable: java.lang.Object lookup(java.lang.String)>(r0);

        $r3 = (com.hp.hpl.jena.query.Syntax) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.query.Syntax $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r26, $r28, $r30;
        com.hp.hpl.jena.sparql.util.TranslationTable $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r25, $r27, $r29, $r31;

        $r0 = new com.hp.hpl.jena.query.Syntax;

        specialinvoke $r0.<com.hp.hpl.jena.query.Syntax: void <init>(java.lang.String)>("http://jena.hpl.hp.com/2003/07/query/SPARQL_10");

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_10> = $r0;

        $r1 = new com.hp.hpl.jena.query.Syntax;

        specialinvoke $r1.<com.hp.hpl.jena.query.Syntax: void <init>(java.lang.String)>("http://jena.hpl.hp.com/2003/07/query/SPARQL_11");

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11> = $r1;

        $r2 = new com.hp.hpl.jena.query.Syntax;

        specialinvoke $r2.<com.hp.hpl.jena.query.Syntax: void <init>(java.lang.String)>("http://jena.hpl.hp.com/2003/07/query/ARQ");

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ> = $r2;

        $r3 = new com.hp.hpl.jena.query.Syntax;

        specialinvoke $r3.<com.hp.hpl.jena.query.Syntax: void <init>(java.lang.String)>("http://jena.hpl.hp.com/2003/07/query/SPARQL_Algebra");

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra> = $r3;

        $r4 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultSyntax> = $r4;

        $r5 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultQuerySyntax> = $r5;

        $r6 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax> = $r6;

        $r7 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL> = $r7;

        $r8 = new com.hp.hpl.jena.sparql.util.TranslationTable;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.util.TranslationTable: void <init>(boolean)>(1);

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames> = $r8;

        $r10 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r9 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql", $r9);

        $r12 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r11 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_10>;

        virtualinvoke $r12.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql10", $r11);

        $r14 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r13 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_10>;

        virtualinvoke $r14.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql_10", $r13);

        $r16 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r15 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        virtualinvoke $r16.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql11", $r15);

        $r18 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r17 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        virtualinvoke $r18.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql_11", $r17);

        $r20 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r19 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        virtualinvoke $r20.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("arq", $r19);

        $r22 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r21 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        virtualinvoke $r22.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("alg", $r21);

        $r24 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r23 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxAlgebra>;

        virtualinvoke $r24.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("op", $r23);

        $r25 = new com.hp.hpl.jena.sparql.util.TranslationTable;

        specialinvoke $r25.<com.hp.hpl.jena.sparql.util.TranslationTable: void <init>(boolean)>(1);

        <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable updateSyntaxNames> = $r25;

        $r27 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r26 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL>;

        virtualinvoke $r27.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql", $r26);

        $r29 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r28 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        virtualinvoke $r29.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("sparql_11", $r28);

        $r31 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.sparql.util.TranslationTable querySyntaxNames>;

        $r30 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        virtualinvoke $r31.<com.hp.hpl.jena.sparql.util.TranslationTable: void put(java.lang.String,java.lang.Object)>("arq", $r30);

        return;
    }
}
