class org.wiztools.commons.Statistics$ModeCompute extends java.lang.Object
{
    private java.util.Map map;
    private int maxFrequency;

    private void <init>()
    {
        org.wiztools.commons.Statistics$ModeCompute r0;
        java.util.HashMap $r1;

        r0 := @this: org.wiztools.commons.Statistics$ModeCompute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.wiztools.commons.Statistics$ModeCompute: java.util.Map map> = $r1;

        r0.<org.wiztools.commons.Statistics$ModeCompute: int maxFrequency> = 0;

        return;
    }

    void add(java.lang.Number)
    {
        org.wiztools.commons.Statistics$ModeCompute r0;
        java.lang.Integer $r6, $r8;
        java.util.Map $r2, $r4, $r7;
        int $i0, $i1, $i2;
        java.lang.Object $r3, $r5;
        java.lang.Number r1;

        r0 := @this: org.wiztools.commons.Statistics$ModeCompute;

        r1 := @parameter0: java.lang.Number;

        $r2 = r0.<org.wiztools.commons.Statistics$ModeCompute: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $i2 = 1;

        goto label2;

     label1:
        $r4 = r0.<org.wiztools.commons.Statistics$ModeCompute: java.util.Map map>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i2 = $i0 + 1;

     label2:
        $r7 = r0.<org.wiztools.commons.Statistics$ModeCompute: java.util.Map map>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        $i1 = r0.<org.wiztools.commons.Statistics$ModeCompute: int maxFrequency>;

        if $i2 <= $i1 goto label3;

        r0.<org.wiztools.commons.Statistics$ModeCompute: int maxFrequency> = $i2;

     label3:
        return;
    }

    java.util.List getMode()
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        org.wiztools.commons.Statistics$ModeCompute r1;
        java.util.Set $r3;
        java.lang.Integer $r8;
        java.util.ArrayList $r0;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.Object $r5, $r7, $r9;
        boolean $z0;

        r1 := @this: org.wiztools.commons.Statistics$ModeCompute;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.wiztools.commons.Statistics$ModeCompute: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i1 = r1.<org.wiztools.commons.Statistics$ModeCompute: int maxFrequency>;

        if $i0 != $i1 goto label2;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    void <init>(org.wiztools.commons.Statistics$1)
    {
        org.wiztools.commons.Statistics$ModeCompute r0;
        org.wiztools.commons.Statistics$1 r1;

        r0 := @this: org.wiztools.commons.Statistics$ModeCompute;

        r1 := @parameter0: org.wiztools.commons.Statistics$1;

        specialinvoke r0.<org.wiztools.commons.Statistics$ModeCompute: void <init>()>();

        return;
    }
}
