public class org.apache.batik.css.engine.value.svg.FilterManager extends org.apache.batik.css.engine.value.AbstractValueManager
{

    public void <init>()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValueManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        return 0;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        return "filter";
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        return 20;
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.svg.FilterManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        $r0 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r8;
        short $s0, $s1;
        org.apache.batik.css.engine.value.svg.FilterManager r2;
        org.w3c.dom.DOMException $r4, $r13;
        org.w3c.css.sac.LexicalUnit r0;
        int $i2;
        org.apache.batik.css.engine.value.URIValue $r14;
        java.lang.String $r1, $r3, $r7, $r10, $r11;
        boolean $z0;
        org.apache.batik.css.engine.value.Value $r5, $r12;
        org.apache.batik.util.ParsedURL $r9;

        r2 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r8 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i2 = (int) $s0;

        lookupswitch($i2)
        {
            case 12: goto label1;
            case 24: goto label2;
            case 35: goto label3;
            default: goto label5;
        };

     label1:
        $r12 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value INHERIT_VALUE>;

        return $r12;

     label2:
        $r14 = new org.apache.batik.css.engine.value.URIValue;

        $r7 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r9 = virtualinvoke r8.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL getCSSBaseURI()>();

        $r10 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r11 = staticinvoke <org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String resolveURI(org.apache.batik.util.ParsedURL,java.lang.String)>($r9, $r10);

        specialinvoke $r14.<org.apache.batik.css.engine.value.URIValue: void <init>(java.lang.String,java.lang.String)>($r7, $r11);

        return $r14;

     label3:
        $r1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z0 == 0 goto label4;

        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        return $r5;

     label4:
        $r3 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r4 = virtualinvoke r2.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>($r3);

        throw $r4;

     label5:
        $s1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r13 = virtualinvoke r2.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s1);

        throw $r13;
    }

    public org.apache.batik.css.engine.value.Value createStringValue(short, java.lang.String, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.Value $r8;
        org.apache.batik.css.engine.CSSEngine r4;
        short s0;
        org.apache.batik.css.engine.value.svg.FilterManager r0;
        org.apache.batik.util.ParsedURL $r5;
        org.w3c.dom.DOMException $r1, $r7;
        int $i1, $i2;
        org.apache.batik.css.engine.value.URIValue $r9;
        java.lang.String r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FilterManager;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        $i1 = (int) s0;

        if $i1 != 21 goto label2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z0 == 0 goto label1;

        $r8 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        return $r8;

     label1:
        $r7 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>(r3);

        throw $r7;

     label2:
        $i2 = (int) s0;

        if $i2 != 20 goto label3;

        $r9 = new org.apache.batik.css.engine.value.URIValue;

        $r5 = virtualinvoke r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL getCSSBaseURI()>();

        $r6 = staticinvoke <org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String resolveURI(org.apache.batik.util.ParsedURL,java.lang.String)>($r5, r3);

        specialinvoke $r9.<org.apache.batik.css.engine.value.URIValue: void <init>(java.lang.String,java.lang.String)>(r3, $r6);

        return $r9;

     label3:
        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidStringTypeDOMException(short)>(s0);

        throw $r1;
    }
}
