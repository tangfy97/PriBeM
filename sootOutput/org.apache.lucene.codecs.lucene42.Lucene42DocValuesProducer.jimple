class org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer extends org.apache.lucene.codecs.DocValuesProducer
{
    private final java.util.Map numerics;
    private final java.util.Map binaries;
    private final java.util.Map fsts;
    private final org.apache.lucene.store.IndexInput data;
    private final java.util.Map numericInstances;
    private final java.util.Map binaryInstances;
    private final java.util.Map fstInstances;
    private final int maxDoc;

    void <init>(org.apache.lucene.index.SegmentReadState, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.store.Directory $r12, $r26;
        java.io.Closeable[] $r19, $r30, $r32, $r33;
        org.apache.lucene.index.FieldInfos $r18;
        org.apache.lucene.store.IOContext $r11, $r25;
        org.apache.lucene.index.SegmentReadState r4;
        org.apache.lucene.index.SegmentInfo $r5, $r6, $r20;
        java.lang.Throwable $r31;
        java.util.HashMap $r1, $r2, $r3, $r15, $r16, $r17;
        int $i0;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        java.lang.String r7, $r8, $r9, $r10, r14, r21, $r22, $r23, $r24, r28;
        org.apache.lucene.store.IndexInput $r13, $r27, $r29;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r4 := @parameter0: org.apache.lucene.index.SegmentReadState;

        r28 := @parameter1: java.lang.String;

        r21 := @parameter2: java.lang.String;

        r14 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.lucene.codecs.DocValuesProducer: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numericInstances> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaryInstances> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fstInstances> = $r3;

        $r5 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r5.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: int maxDoc> = $i0;

        $r6 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r9 = $r6.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r8 = r4.<org.apache.lucene.index.SegmentReadState: java.lang.String segmentSuffix>;

        $r10 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r9, $r8, r7);

        $r12 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.Directory directory>;

        $r11 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r10, $r11);

     label1:
        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r13, r14, 0, 0);

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numerics> = $r15;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaries> = $r16;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fsts> = $r17;

        $r18 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: void readFields(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos)>($r13, $r18);

     label2:
        if 1 == 0 goto label3;

        $r30 = newarray (java.io.Closeable)[1];

        $r30[0] = $r13;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r30);

        goto label8;

     label3:
        $r19 = newarray (java.io.Closeable)[1];

        $r19[0] = $r13;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r19);

        goto label8;

     label4:
        $r31 := @caughtexception;

     label5:
        if 0 == 0 goto label6;

        $r33 = newarray (java.io.Closeable)[1];

        $r33[0] = $r13;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r33);

        goto label7;

     label6:
        $r32 = newarray (java.io.Closeable)[1];

        $r32[0] = $r13;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r32);

     label7:
        throw $r31;

     label8:
        $r20 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r23 = $r20.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r22 = r4.<org.apache.lucene.index.SegmentReadState: java.lang.String segmentSuffix>;

        $r24 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r23, $r22, r21);

        $r26 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.Directory directory>;

        $r25 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r27 = virtualinvoke $r26.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r24, $r25);

        r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data> = $r27;

        $r29 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r29, r28, 0, 0);

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void readFields(org.apache.lucene.store.IndexInput, org.apache.lucene.index.FieldInfos) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry $r20;
        java.lang.Integer $r11, $r14, $r17;
        org.apache.lucene.index.CorruptIndexException $r23;
        byte $b0, $b12, $b13;
        java.util.Map $r10, $r13, $r16;
        org.apache.lucene.index.FieldInfos r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r22;
        long $l1, $l2, $l3, $l4, $l11;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i14, i15, $i17, $i18, $i19, $i20;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r9;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry $r21;
        java.lang.String $r7;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry $r19;

        r9 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        r18 := @parameter1: org.apache.lucene.index.FieldInfos;

        i15 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

     label1:
        $i17 = (int) -1;

        if i15 == $i17 goto label8;

        $b0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: byte readByte()>();

        if $b0 != 0 goto label3;

        $r19 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry;

        specialinvoke $r19.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: void <init>()>();

        $l11 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r19.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: long offset> = $l11;

        $b12 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $r19.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: byte format> = $b12;

        $b13 = $r19.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: byte format>;

        $i18 = (int) $b13;

        if $i18 == 2 goto label2;

        $i14 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r19.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: int packedIntsVersion> = $i14;

     label2:
        $r16 = r9.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numerics>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r19);

        goto label7;

     label3:
        if $b0 != 1 goto label5;

        $r20 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry;

        specialinvoke $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: void <init>()>();

        $l3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: long offset> = $l3;

        $l4 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: long numBytes> = $l4;

        $i5 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int minLength> = $i5;

        $i6 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int maxLength> = $i6;

        $i8 = $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int minLength>;

        $i7 = $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int maxLength>;

        if $i8 == $i7 goto label4;

        $i9 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int packedIntsVersion> = $i9;

        $i10 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r20.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int blockSize> = $i10;

     label4:
        $r13 = r9.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaries>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r20);

        goto label7;

     label5:
        $i19 = (int) $b0;

        if $i19 != 2 goto label6;

        $r21 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry;

        specialinvoke $r21.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: void <init>()>();

        $l1 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r21.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: long offset> = $l1;

        $l2 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $r21.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: long numOrds> = $l2;

        $r10 = r9.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fsts>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r21);

        goto label7;

     label6:
        $r23 = new org.apache.lucene.index.CorruptIndexException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry type: ");

        $i20 = (int) $b0;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", input=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r7);

        throw $r23;

     label7:
        i15 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        goto label1;

     label8:
        return;
    }

    public synchronized org.apache.lucene.index.NumericDocValues getNumeric(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r5, r8;
        java.lang.Integer $r3, $r7;
        java.util.Map $r2, $r6;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numericInstances>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r8 = (org.apache.lucene.index.NumericDocValues) $r4;

        if r8 != null goto label1;

        $r5 = specialinvoke r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.index.NumericDocValues loadNumeric(org.apache.lucene.index.FieldInfo)>(r1);

        r8 = $r5;

        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numericInstances>;

        $i1 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5);

     label1:
        return r8;
    }

    private org.apache.lucene.index.NumericDocValues loadNumeric(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        byte[] r23;
        java.lang.IllegalStateException $r28;
        java.lang.Integer $r3;
        byte $b2, $b3, $b4;
        java.util.Map $r2;
        org.apache.lucene.util.packed.PackedInts$Reader $r19;
        long $l1, $l9, $l17;
        long[] r22;
        int $i0, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, $i19;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        org.apache.lucene.store.IndexInput $r6, $r8, $r10, $r12, $r14, $r15, $r16, $r17, $r21;
        org.apache.lucene.util.packed.PackedInts$Format $r18;
        org.apache.lucene.util.packed.BlockPackedReader $r25;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$1 $r24;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry r5;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$2 $r26;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Object $r4;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$3 $r27;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map numerics>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry) $r4;

        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l1 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: long offset>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $b2 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: byte format>;

        if $b2 != 1 goto label3;

        $r14 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i11 = virtualinvoke $r14.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r22 = newarray (long)[$i11];

        i18 = 0;

     label1:
        $i12 = lengthof r22;

        if i18 >= $i12 goto label2;

        $r21 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l17 = virtualinvoke $r21.<org.apache.lucene.store.IndexInput: long readLong()>();

        r22[i18] = $l17;

        i18 = i18 + 1;

        goto label1;

     label2:
        $r15 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i13 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r16 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i14 = virtualinvoke $r16.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r17 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $r18 = staticinvoke <org.apache.lucene.util.packed.PackedInts$Format: org.apache.lucene.util.packed.PackedInts$Format byId(int)>($i13);

        $i16 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: int packedIntsVersion>;

        $i15 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: int maxDoc>;

        $r19 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReaderNoHeader(org.apache.lucene.store.DataInput,org.apache.lucene.util.packed.PackedInts$Format,int,int,int)>($r17, $r18, $i16, $i15, $i14);

        $r24 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$1;

        specialinvoke $r24.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$1: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,long[],org.apache.lucene.util.packed.PackedInts$Reader)>(r0, r22, $r19);

        return $r24;

     label3:
        $b3 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: byte format>;

        if $b3 != 0 goto label4;

        $r10 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i7 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r25 = new org.apache.lucene.util.packed.BlockPackedReader;

        $r12 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i10 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: int packedIntsVersion>;

        $i8 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: int maxDoc>;

        $l9 = (long) $i8;

        specialinvoke $r25.<org.apache.lucene.util.packed.BlockPackedReader: void <init>(org.apache.lucene.store.IndexInput,int,int,long,boolean)>($r12, $i10, $i7, $l9, 0);

        $r26 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$2;

        specialinvoke $r26.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$2: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,org.apache.lucene.util.packed.BlockPackedReader)>(r0, $r25);

        return $r26;

     label4:
        $b4 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$NumericEntry: byte format>;

        $i19 = (int) $b4;

        if $i19 != 2 goto label5;

        $i5 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: int maxDoc>;

        r23 = newarray (byte)[$i5];

        $r8 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i6 = lengthof r23;

        virtualinvoke $r8.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r23, 0, $i6);

        $r27 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$3;

        specialinvoke $r27.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$3: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,byte[])>(r0, r23);

        return $r27;

     label5:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>()>();

        throw $r28;
    }

    public synchronized org.apache.lucene.index.BinaryDocValues getBinary(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.Integer $r3, $r7;
        java.util.Map $r2, $r6;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        java.lang.Object $r4;
        org.apache.lucene.index.BinaryDocValues $r5, r8;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaryInstances>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r8 = (org.apache.lucene.index.BinaryDocValues) $r4;

        if r8 != null goto label1;

        $r5 = specialinvoke r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.index.BinaryDocValues loadBinary(org.apache.lucene.index.FieldInfo)>(r1);

        r8 = $r5;

        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaryInstances>;

        $i1 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5);

     label1:
        return r8;
    }

    private org.apache.lucene.index.BinaryDocValues loadBinary(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry r5;
        long $l1, $l2, $l6;
        org.apache.lucene.util.PagedBytes $r7;
        org.apache.lucene.util.PagedBytes$Reader $r9;
        java.lang.Integer $r3;
        java.util.Map $r2;
        int $i0, $i3, $i4, $i5, $i7, $i8, i9;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        org.apache.lucene.store.IndexInput $r6, $r8, $r11;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$5 $r12;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Object $r4;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$4 $r13;
        org.apache.lucene.util.packed.MonotonicBlockPackedReader $r10;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map binaries>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry) $r4;

        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l1 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: long offset>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r7 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r7.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        $r8 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l2 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: long numBytes>;

        virtualinvoke $r7.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>($r8, $l2);

        $r9 = virtualinvoke $r7.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $i4 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int minLength>;

        $i3 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int maxLength>;

        if $i4 != $i3 goto label1;

        i9 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int minLength>;

        $r13 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$4;

        specialinvoke $r13.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$4: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,org.apache.lucene.util.PagedBytes$Reader,int)>(r0, $r9, i9);

        return $r13;

     label1:
        $r10 = new org.apache.lucene.util.packed.MonotonicBlockPackedReader;

        $r11 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $i8 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int packedIntsVersion>;

        $i7 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$BinaryEntry: int blockSize>;

        $i5 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: int maxDoc>;

        $l6 = (long) $i5;

        specialinvoke $r10.<org.apache.lucene.util.packed.MonotonicBlockPackedReader: void <init>(org.apache.lucene.store.IndexInput,int,int,long,boolean)>($r11, $i8, $i7, $l6, 0);

        $r12 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$5;

        specialinvoke $r12.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$5: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,org.apache.lucene.util.packed.MonotonicBlockPackedReader,org.apache.lucene.util.PagedBytes$Reader)>(r0, $r10, $r9);

        return $r12;
    }

    public org.apache.lucene.index.SortedDocValues getSorted(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.Throwable $r22;
        org.apache.lucene.util.fst.FST$BytesReader $r10;
        org.apache.lucene.index.NumericDocValues $r9;
        org.apache.lucene.util.fst.PositiveIntOutputs $r19;
        long $l2;
        java.lang.Integer $r3, $r7, $r21;
        org.apache.lucene.util.fst.FST$Arc $r11, $r12;
        org.apache.lucene.util.IntsRef $r13;
        java.util.Map $r2, $r6, $r20;
        int $i0, $i1, $i3;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry r5;
        org.apache.lucene.store.IndexInput $r16, $r18;
        org.apache.lucene.util.fst.BytesRefFSTEnum $r14;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$6 $r15;
        org.apache.lucene.util.fst.FST $r17, r23;
        java.lang.Object $r4, $r8;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fsts>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry) $r4;

        entermonitor r0;

     label1:
        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fstInstances>;

        $i1 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r23 = (org.apache.lucene.util.fst.FST) $r8;

        if r23 != null goto label2;

        $r16 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l2 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: long offset>;

        virtualinvoke $r16.<org.apache.lucene.store.IndexInput: void seek(long)>($l2);

        $r17 = new org.apache.lucene.util.fst.FST;

        $r18 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $r19 = staticinvoke <org.apache.lucene.util.fst.PositiveIntOutputs: org.apache.lucene.util.fst.PositiveIntOutputs getSingleton(boolean)>(1);

        specialinvoke $r17.<org.apache.lucene.util.fst.FST: void <init>(org.apache.lucene.store.DataInput,org.apache.lucene.util.fst.Outputs)>($r18, $r19);

        r23 = $r17;

        $r20 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fstInstances>;

        $i3 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r17);

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r22;

     label6:
        $r9 = virtualinvoke r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.index.NumericDocValues getNumeric(org.apache.lucene.index.FieldInfo)>(r1);

        $r10 = virtualinvoke r23.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        $r11 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r11.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r12 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r12.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r13 = new org.apache.lucene.util.IntsRef;

        specialinvoke $r13.<org.apache.lucene.util.IntsRef: void <init>()>();

        $r14 = new org.apache.lucene.util.fst.BytesRefFSTEnum;

        specialinvoke $r14.<org.apache.lucene.util.fst.BytesRefFSTEnum: void <init>(org.apache.lucene.util.fst.FST)>(r23);

        $r15 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$6;

        specialinvoke $r15.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$6: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,org.apache.lucene.index.NumericDocValues,org.apache.lucene.util.fst.FST$BytesReader,org.apache.lucene.util.fst.FST,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.IntsRef,org.apache.lucene.util.fst.BytesRefFSTEnum,org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry)>(r0, $r9, $r10, r23, $r11, $r12, $r13, $r14, r5);

        return $r15;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.lucene.index.SortedSetDocValues getSortedSet(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        org.apache.lucene.store.ByteArrayDataInput $r16;
        java.lang.Integer $r3, $r7, $r23;
        org.apache.lucene.util.fst.FST$Arc $r11, $r12;
        org.apache.lucene.util.IntsRef $r13;
        byte $b2;
        java.util.Map $r2, $r6, $r22;
        org.apache.lucene.util.fst.BytesRefFSTEnum $r14;
        org.apache.lucene.util.BytesRef $r15;
        org.apache.lucene.index.BinaryDocValues $r9;
        java.lang.Throwable $r25;
        org.apache.lucene.util.fst.FST$BytesReader $r10;
        org.apache.lucene.util.fst.PositiveIntOutputs $r21;
        long $l1, $l4;
        int $i0, $i3, $i5;
        org.apache.lucene.index.SortedSetDocValues $r24;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry r5;
        org.apache.lucene.store.IndexInput $r18, $r20;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.util.fst.FST $r19, r26;
        java.lang.Object $r4, $r8;
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$7 $r17;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fsts>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry) $r4;

        $l1 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: long numOrds>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r24 = <org.apache.lucene.index.SortedSetDocValues: org.apache.lucene.index.SortedSetDocValues EMPTY>;

        return $r24;

     label1:
        entermonitor r0;

     label2:
        $r6 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fstInstances>;

        $i3 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r26 = (org.apache.lucene.util.fst.FST) $r8;

        if r26 != null goto label3;

        $r18 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $l4 = r5.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry: long offset>;

        virtualinvoke $r18.<org.apache.lucene.store.IndexInput: void seek(long)>($l4);

        $r19 = new org.apache.lucene.util.fst.FST;

        $r20 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        $r21 = staticinvoke <org.apache.lucene.util.fst.PositiveIntOutputs: org.apache.lucene.util.fst.PositiveIntOutputs getSingleton(boolean)>(1);

        specialinvoke $r19.<org.apache.lucene.util.fst.FST: void <init>(org.apache.lucene.store.DataInput,org.apache.lucene.util.fst.Outputs)>($r20, $r21);

        r26 = $r19;

        $r22 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: java.util.Map fstInstances>;

        $i5 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r19);

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r25 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r25;

     label7:
        $r9 = virtualinvoke r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.index.BinaryDocValues getBinary(org.apache.lucene.index.FieldInfo)>(r1);

        $r10 = virtualinvoke r26.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        $r11 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r11.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r12 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r12.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r13 = new org.apache.lucene.util.IntsRef;

        specialinvoke $r13.<org.apache.lucene.util.IntsRef: void <init>()>();

        $r14 = new org.apache.lucene.util.fst.BytesRefFSTEnum;

        specialinvoke $r14.<org.apache.lucene.util.fst.BytesRefFSTEnum: void <init>(org.apache.lucene.util.fst.FST)>(r26);

        $r15 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r15.<org.apache.lucene.util.BytesRef: void <init>()>();

        $r16 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r16.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        $r17 = new org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$7;

        specialinvoke $r17.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$7: void <init>(org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer,org.apache.lucene.store.ByteArrayDataInput,org.apache.lucene.index.BinaryDocValues,org.apache.lucene.util.BytesRef,org.apache.lucene.util.fst.FST$BytesReader,org.apache.lucene.util.fst.FST,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.IntsRef,org.apache.lucene.util.fst.BytesRefFSTEnum,org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer$FSTEntry)>(r0, $r16, $r9, $r15, $r10, r26, $r11, $r12, $r13, $r14, r5);

        return $r17;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @this: org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer;

        $r1 = r0.<org.apache.lucene.codecs.lucene42.Lucene42DocValuesProducer: org.apache.lucene.store.IndexInput data>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void close()>();

        return;
    }
}
