public class com.hp.hpl.jena.sparql.engine.QueryEngineRegistry extends java.lang.Object
{
    java.util.List factories;
    static com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry;

    public static com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0, $r1;

        $r0 = <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry>;

        if $r0 != null goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void init()>();

     label1:
        $r1 = <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry>;

        return $r1;
    }

    private void <init>()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories> = $r1;

        return;
    }

    private static synchronized void init()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r2, $r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0, $r1, $r3;

        $r0 = new com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void <init>()>();

        <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry> = $r0;

        $r1 = <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: com.hp.hpl.jena.sparql.engine.QueryEngineFactory getFactory()>();

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void add(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r2);

        $r3 = <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineFactoryWrapper: com.hp.hpl.jena.sparql.engine.QueryEngineFactory get()>();

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void add(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r4);

        return;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r3;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        $r4 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3);

        return $r4;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;
        com.hp.hpl.jena.sparql.util.Context r3;
        com.hp.hpl.jena.sparql.algebra.Op r1;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r3 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        $r4 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3);

        return $r4;
    }

    public com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r3;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, null);

        return $r3;
    }

    public com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r5;
        java.util.ListIterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r6;
        com.hp.hpl.jena.sparql.util.Context r7;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r5 := @parameter0: com.hp.hpl.jena.query.Query;

        r6 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r7 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.engine.QueryEngineFactory) $r3;

        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: boolean accept(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r5, r6, r7);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public com.hp.hpl.jena.sparql.engine.QueryEngineFactory find(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        java.util.ListIterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r6;
        com.hp.hpl.jena.sparql.util.Context r7;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.algebra.Op r5;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r5 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r6 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r7 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.engine.QueryEngineFactory) $r3;

        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: boolean accept(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r5, r6, r7);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static void addFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void add(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>(r1);

        return;
    }

    public void add(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        return;
    }

    public static void removeFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void remove(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>(r1);

        return;
    }

    public void remove(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.List factories()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        return $r1;
    }

    public static boolean containsFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry $r0;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry get()>();

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: boolean contains(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>(r1);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r1;
        com.hp.hpl.jena.sparql.engine.QueryEngineRegistry r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: java.util.List factories>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void init()>();

        <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineRegistry registry> = null;

        return;
    }
}
