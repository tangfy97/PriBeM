public abstract class org.apache.lucene.store.DataInput extends java.lang.Object implements java.lang.Cloneable
{

    public void <init>()
    {
        org.apache.lucene.store.DataInput r0;

        r0 := @this: org.apache.lucene.store.DataInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract byte readByte() throws java.io.IOException;

    public abstract void readBytes(byte[], int, int) throws java.io.IOException;

    public void readBytes(byte[], int, int, boolean) throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r0;
        byte[] r1;
        int i0, i1;
        boolean z0;

        r0 := @this: org.apache.lucene.store.DataInput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.lucene.store.DataInput: void readBytes(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public short readShort() throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r0;
        short $s1, $s4, $s6, $s7, $s9;
        byte $b0, $b3;
        int $i2, $i5, $i8, $i10;

        r0 := @this: org.apache.lucene.store.DataInput;

        $b0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s7 = (short) $b0;

        $s1 = $s7 & 255;

        $i8 = (int) $s1;

        $i2 = $i8 << 8;

        $b3 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s9 = (short) $b3;

        $s4 = $s9 & 255;

        $i10 = (int) $s4;

        $i5 = $i2 | $i10;

        $s6 = (short) $i5;

        return $s6;
    }

    public int readInt() throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r0;
        short $s1, $s4, $s8, $s12, $s14, $s16, $s18, $s20;
        byte $b0, $b3, $b7, $b11;
        int $i2, $i5, $i6, $i9, $i10, $i13, $i15, $i17, $i19, $i21;

        r0 := @this: org.apache.lucene.store.DataInput;

        $b0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s14 = (short) $b0;

        $s1 = $s14 & 255;

        $i15 = (int) $s1;

        $i2 = $i15 << 24;

        $b3 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s16 = (short) $b3;

        $s4 = $s16 & 255;

        $i17 = (int) $s4;

        $i5 = $i17 << 16;

        $i6 = $i2 | $i5;

        $b7 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s18 = (short) $b7;

        $s8 = $s18 & 255;

        $i19 = (int) $s8;

        $i9 = $i19 << 8;

        $i10 = $i6 | $i9;

        $b11 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s20 = (short) $b11;

        $s12 = $s20 & 255;

        $i21 = (int) $s12;

        $i13 = $i10 | $i21;

        return $i13;
    }

    public int readVInt() throws java.io.IOException
    {
        byte $b0, $b1, $b2, $b4, $b5, $b7, $b8, $b10, $b11, b14;
        org.apache.lucene.store.DataInput r0;
        short $s13, $s29;
        int $i3, $i6, $i9, $i12, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.io.IOException $r2;

        r0 := @this: org.apache.lucene.store.DataInput;

        $b0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $i19 = (int) $b0;

        if $i19 < 0 goto label1;

        $i20 = (int) $b0;

        return $i20;

     label1:
        b14 = $b0 & 127;

        $b1 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $b2 = $b1 & 127;

        $i21 = (int) $b2;

        $i3 = $i21 << 7;

        $i22 = (int) b14;

        i15 = $i22 | $i3;

        $i23 = (int) $b1;

        if $i23 < 0 goto label2;

        return i15;

     label2:
        $b4 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $b5 = $b4 & 127;

        $i24 = (int) $b5;

        $i6 = $i24 << 14;

        i16 = i15 | $i6;

        $i25 = (int) $b4;

        if $i25 < 0 goto label3;

        return i16;

     label3:
        $b7 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $b8 = $b7 & 127;

        $i26 = (int) $b8;

        $i9 = $i26 << 21;

        i17 = i16 | $i9;

        $i27 = (int) $b7;

        if $i27 < 0 goto label4;

        return i17;

     label4:
        $b10 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $b11 = $b10 & 15;

        $i28 = (int) $b11;

        $i12 = $i28 << 28;

        i18 = i17 | $i12;

        $s29 = (short) $b10;

        $s13 = $s29 & 240;

        if $s13 != 0 goto label5;

        return i18;

     label5:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Invalid vInt detected (too many bits)");

        throw $r2;
    }

    public long readLong() throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r0;
        long $l1, $l2, $l4, $l5, $l6;
        int $i0, $i3;

        r0 := @this: org.apache.lucene.store.DataInput;

        $i0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: int readInt()>();

        $l1 = (long) $i0;

        $l2 = $l1 << 32;

        $i3 = virtualinvoke r0.<org.apache.lucene.store.DataInput: int readInt()>();

        $l4 = (long) $i3;

        $l5 = $l4 & 4294967295L;

        $l6 = $l2 | $l5;

        return $l6;
    }

    public long readVLong() throws java.io.IOException
    {
        byte $b0, $b2, $b6, $b10, $b14, $b18, $b22, $b26, $b30;
        org.apache.lucene.store.DataInput r0;
        long $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l21, $l23, $l24, $l25, $l27, $l28, $l29, $l31, $l32, $l33, $l34, l35, l36, l37, l38, l39, l40, l41, l42, l43;
        int $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        java.io.IOException $r2;

        r0 := @this: org.apache.lucene.store.DataInput;

        $b0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $i44 = (int) $b0;

        if $i44 < 0 goto label1;

        $l34 = (long) $b0;

        return $l34;

     label1:
        $l1 = (long) $b0;

        l35 = $l1 & 127L;

        $b2 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l3 = (long) $b2;

        $l4 = $l3 & 127L;

        $l5 = $l4 << 7;

        l36 = l35 | $l5;

        $i45 = (int) $b2;

        if $i45 < 0 goto label2;

        return l36;

     label2:
        $b6 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l7 = (long) $b6;

        $l8 = $l7 & 127L;

        $l9 = $l8 << 14;

        l37 = l36 | $l9;

        $i46 = (int) $b6;

        if $i46 < 0 goto label3;

        return l37;

     label3:
        $b10 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l11 = (long) $b10;

        $l12 = $l11 & 127L;

        $l13 = $l12 << 21;

        l38 = l37 | $l13;

        $i47 = (int) $b10;

        if $i47 < 0 goto label4;

        return l38;

     label4:
        $b14 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l15 = (long) $b14;

        $l16 = $l15 & 127L;

        $l17 = $l16 << 28;

        l39 = l38 | $l17;

        $i48 = (int) $b14;

        if $i48 < 0 goto label5;

        return l39;

     label5:
        $b18 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l19 = (long) $b18;

        $l20 = $l19 & 127L;

        $l21 = $l20 << 35;

        l40 = l39 | $l21;

        $i49 = (int) $b18;

        if $i49 < 0 goto label6;

        return l40;

     label6:
        $b22 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l23 = (long) $b22;

        $l24 = $l23 & 127L;

        $l25 = $l24 << 42;

        l41 = l40 | $l25;

        $i50 = (int) $b22;

        if $i50 < 0 goto label7;

        return l41;

     label7:
        $b26 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l27 = (long) $b26;

        $l28 = $l27 & 127L;

        $l29 = $l28 << 49;

        l42 = l41 | $l29;

        $i51 = (int) $b26;

        if $i51 < 0 goto label8;

        return l42;

     label8:
        $b30 = virtualinvoke r0.<org.apache.lucene.store.DataInput: byte readByte()>();

        $l31 = (long) $b30;

        $l32 = $l31 & 127L;

        $l33 = $l32 << 56;

        l43 = l42 | $l33;

        $i52 = (int) $b30;

        if $i52 < 0 goto label9;

        return l43;

     label9:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Invalid vLong detected (negative values disallowed)");

        throw $r2;
    }

    public java.lang.String readString() throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r0;
        byte[] r1;
        java.nio.charset.Charset $r3;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.store.DataInput;

        $i0 = virtualinvoke r0.<org.apache.lucene.store.DataInput: int readVInt()>();

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<org.apache.lucene.store.DataInput: void readBytes(byte[],int,int)>(r1, 0, $i0);

        $r2 = new java.lang.String;

        $r3 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, $i0, $r3);

        return $r2;
    }

    public org.apache.lucene.store.DataInput clone()
    {
        org.apache.lucene.store.DataInput r0, $r2;
        java.lang.Error $r4;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.lucene.store.DataInput;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.store.DataInput) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>("This cannot happen: Failing to clone DataInput");

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.util.Map readStringStringMap() throws java.io.IOException
    {
        org.apache.lucene.store.DataInput r1;
        int $i0, i1;
        java.util.HashMap $r0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.lucene.store.DataInput;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.lucene.store.DataInput: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.lucene.store.DataInput: java.lang.String readString()>();

        $r3 = virtualinvoke r1.<org.apache.lucene.store.DataInput: java.lang.String readString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public java.util.Set readStringSet() throws java.io.IOException
    {
        java.util.HashSet $r0;
        org.apache.lucene.store.DataInput r1;
        int $i0, i1;
        java.lang.String $r2;

        r1 := @this: org.apache.lucene.store.DataInput;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.lucene.store.DataInput: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.lucene.store.DataInput: java.lang.String readString()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.store.DataInput r0, $r1;

        r0 := @this: org.apache.lucene.store.DataInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.DataInput: org.apache.lucene.store.DataInput clone()>();

        return $r1;
    }
}
