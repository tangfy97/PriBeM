class nu.xom.jaxen.saxpath.base.TokenTypes extends java.lang.Object
{
    static final int EOF;
    static final int SKIP;
    static final int ERROR;
    static final int EQUALS;
    static final int NOT_EQUALS;
    static final int LESS_THAN_SIGN;
    static final int LESS_THAN_OR_EQUALS_SIGN;
    static final int GREATER_THAN_SIGN;
    static final int GREATER_THAN_OR_EQUALS_SIGN;
    static final int PLUS;
    static final int MINUS;
    static final int STAR;
    static final int MOD;
    static final int DIV;
    static final int SLASH;
    static final int DOUBLE_SLASH;
    static final int DOT;
    static final int DOT_DOT;
    static final int IDENTIFIER;
    static final int AT;
    static final int PIPE;
    static final int COLON;
    static final int DOUBLE_COLON;
    static final int LEFT_BRACKET;
    static final int RIGHT_BRACKET;
    static final int LEFT_PAREN;
    static final int RIGHT_PAREN;
    static final int DOLLAR;
    static final int LITERAL;
    static final int AND;
    static final int OR;
    static final int DOUBLE;
    static final int COMMA;
    static final int STAR_OPERATOR;

    void <init>()
    {
        nu.xom.jaxen.saxpath.base.TokenTypes r0;

        r0 := @this: nu.xom.jaxen.saxpath.base.TokenTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String getTokenText(int)
    {
        java.lang.StringBuffer $r0, $r1, $r2;
        int i0;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -3: goto label01;
            case -2: goto label02;
            case -1: goto label03;
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label16;
            case 11: goto label15;
            case 12: goto label17;
            case 13: goto label18;
            case 14: goto label19;
            case 15: goto label20;
            case 16: goto label21;
            case 17: goto label22;
            case 18: goto label23;
            case 19: goto label24;
            case 20: goto label25;
            case 21: goto label26;
            case 22: goto label27;
            case 23: goto label28;
            case 24: goto label29;
            case 25: goto label30;
            case 26: goto label31;
            case 27: goto label32;
            case 28: goto label33;
            case 29: goto label34;
            case 30: goto label35;
            case 31: goto label14;
            default: goto label36;
        };

     label01:
        return "(error)";

     label02:
        return "(skip)";

     label03:
        return "(eof)";

     label04:
        return "Unrecognized token type: 0";

     label05:
        return "=";

     label06:
        return "!=";

     label07:
        return "<";

     label08:
        return "<=";

     label09:
        return ">";

     label10:
        return ">=";

     label11:
        return "+";

     label12:
        return "-";

     label13:
        return "*";

     label14:
        return "*";

     label15:
        return "div";

     label16:
        return "mod";

     label17:
        return "/";

     label18:
        return "//";

     label19:
        return ".";

     label20:
        return "..";

     label21:
        return "(identifier)";

     label22:
        return "@";

     label23:
        return "|";

     label24:
        return ":";

     label25:
        return "::";

     label26:
        return "[";

     label27:
        return "]";

     label28:
        return "(";

     label29:
        return ")";

     label30:
        return "$";

     label31:
        return "(literal)";

     label32:
        return "and";

     label33:
        return "or";

     label34:
        return "(double)";

     label35:
        return ",";

     label36:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized token type: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.saxpath.base.TokenTypes: int STAR_OPERATOR> = 31;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int COMMA> = 30;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOUBLE> = 29;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int OR> = 28;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int AND> = 27;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int LITERAL> = 26;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOLLAR> = 25;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int RIGHT_PAREN> = 24;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int LEFT_PAREN> = 23;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int RIGHT_BRACKET> = 22;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int LEFT_BRACKET> = 21;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOUBLE_COLON> = 20;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int COLON> = 19;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int PIPE> = 18;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int AT> = 17;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int IDENTIFIER> = 16;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOT_DOT> = 15;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOT> = 14;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DOUBLE_SLASH> = 13;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int SLASH> = 12;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int DIV> = 11;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int MOD> = 10;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int STAR> = 9;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int MINUS> = 8;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int PLUS> = 7;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int GREATER_THAN_OR_EQUALS_SIGN> = 6;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int GREATER_THAN_SIGN> = 5;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int LESS_THAN_OR_EQUALS_SIGN> = 4;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int LESS_THAN_SIGN> = 3;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int NOT_EQUALS> = 2;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int EQUALS> = 1;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int ERROR> = -3;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int SKIP> = -2;

        <nu.xom.jaxen.saxpath.base.TokenTypes: int EOF> = -1;

        return;
    }
}
