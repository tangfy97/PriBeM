public class ucar.ma2.ArraySequence extends ucar.ma2.ArrayStructure
{
    private ucar.ma2.StructureDataIterator iter;
    private int initial;

    protected void <init>(ucar.ma2.StructureMembers, int[])
    {
        ucar.ma2.ArraySequence r0;
        ucar.ma2.StructureMembers r1;
        int[] r2;

        r0 := @this: ucar.ma2.ArraySequence;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r2 := @parameter1: int[];

        specialinvoke r0.<ucar.ma2.ArrayStructure: void <init>(ucar.ma2.StructureMembers,int[])>(r1, r2);

        r0.<ucar.ma2.ArraySequence: int initial> = 1000;

        return;
    }

    public void <init>(ucar.ma2.StructureMembers, ucar.ma2.StructureDataIterator, int)
    {
        ucar.ma2.ArraySequence r0;
        ucar.ma2.StructureMembers r1;
        int[] $r2;
        ucar.ma2.StructureDataIterator r3;
        int i0;

        r0 := @this: ucar.ma2.ArraySequence;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r3 := @parameter1: ucar.ma2.StructureDataIterator;

        i0 := @parameter2: int;

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        specialinvoke r0.<ucar.ma2.ArrayStructure: void <init>(ucar.ma2.StructureMembers,int[])>(r1, $r2);

        r0.<ucar.ma2.ArraySequence: int initial> = 1000;

        r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter> = r3;

        r0.<ucar.ma2.ArraySequence: int nelems> = i0;

        return;
    }

    public java.lang.Class getElementType()
    {
        ucar.ma2.ArraySequence r0;

        r0 := @this: ucar.ma2.ArraySequence;

        return class "Lucar/ma2/StructureDataIterator;";
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator() throws java.io.IOException
    {
        ucar.ma2.ArraySequence r0;
        ucar.ma2.StructureDataIterator $r1, $r2, $r3;

        r0 := @this: ucar.ma2.ArraySequence;

        $r1 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureDataIterator reset()>();

        r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter> = $r2;

        $r3 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        return $r3;
    }

    public int getStructureDataCount()
    {
        int $i0;
        ucar.ma2.ArraySequence r0;

        r0 := @this: ucar.ma2.ArraySequence;

        $i0 = r0.<ucar.ma2.ArraySequence: int nelems>;

        return $i0;
    }

    public long getSizeBytes()
    {
        ucar.ma2.ArraySequence r0;
        ucar.ma2.StructureMembers $r1;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: ucar.ma2.ArraySequence;

        $i0 = r0.<ucar.ma2.ArraySequence: int nelems>;

        $r1 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureMembers members>;

        $i1 = virtualinvoke $r1.<ucar.ma2.StructureMembers: int getStructureSize()>();

        $i2 = $i0 * $i1;

        $l3 = (long) $i2;

        return $l3;
    }

    protected ucar.ma2.StructureData makeStructureData(ucar.ma2.ArrayStructure, int)
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.ma2.ArraySequence r1;
        ucar.ma2.ArrayStructure r2;
        int i0;

        r1 := @this: ucar.ma2.ArraySequence;

        r2 := @parameter0: ucar.ma2.ArrayStructure;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot subset a Sequence");

        throw $r0;
    }

    public ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member) throws java.io.IOException
    {
        byte[] $r16;
        ucar.ma2.StructureDataIterator $r7, $r29;
        ucar.ma2.StructureMembers$Member r0, $r12;
        byte $b8, b19;
        ucar.ma2.StructureMembers $r10, $r52, $r53;
        double[] $r35;
        float[] $r34;
        long $l12, l26;
        short $s9, s21;
        ucar.ma2.ArrayStructureW $r54;
        java.lang.String $r11, $r51, r60;
        ucar.ma2.Array $r1, $r55, $r58, r59;
        char[] $r32;
        ucar.ma2.ArrayStructure $r28;
        ucar.ma2.StructureData $r9, $r30, $r50;
        int[] $r3, $r22, $r57;
        boolean z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r2, $r5, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r56;
        float $f0, f1;
        short[] $r19;
        java.lang.String[] $r31;
        long[] $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i13, i14, i15, i16, i17, i18, i20, i22, i23, i24, i25, i27, i28, i30, i31;
        double $d0, d1;
        ucar.ma2.IndexIterator $r8;
        char $c11, c29;
        ucar.ma2.ArraySequence r4, $r49;
        java.lang.Class $r6;

        r4 := @this: ucar.ma2.ArraySequence;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.Array getDataArray()>();

        if $r1 == null goto label01;

        $r58 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.Array getDataArray()>();

        return $r58;

     label01:
        $r2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        if $i0 == 1 goto label02;

        $r56 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r2 != $r56 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        $r3 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int[] getShape()>();

        $i1 = lengthof $r3;

        $i13 = 1 + $i1;

        $r57 = newarray (int)[$i13];

        $i2 = r4.<ucar.ma2.ArraySequence: int nelems>;

        $r57[0] = $i2;

        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r57, 1, $i3);

        $i4 = r4.<ucar.ma2.ArraySequence: int nelems>;

        if $i4 >= 0 goto label05;

        $r55 = specialinvoke r4.<ucar.ma2.ArraySequence: ucar.ma2.Array extractMemberArrayFromIteration(ucar.ma2.StructureMembers$Member,int[])>(r0, $r57);

        return $r55;

     label05:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r2 != $r5 goto label06;

        $r52 = new ucar.ma2.StructureMembers;

        $r53 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke $r52.<ucar.ma2.StructureMembers: void <init>(ucar.ma2.StructureMembers)>($r53);

        $r54 = new ucar.ma2.ArrayStructureW;

        specialinvoke $r54.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[])>($r52, $r57);

        r59 = $r54;

        goto label07;

     label06:
        $r6 = virtualinvoke $r2.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        r59 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r6, $r57);

     label07:
        $r7 = virtualinvoke r4.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        $r8 = virtualinvoke r59.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label08:
        $z3 = interfaceinvoke $r7.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z3 == 0 goto label51;

        $r9 = interfaceinvoke $r7.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r10 = virtualinvoke $r9.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r11 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r11);

        if z0 == 0 goto label21;

        $r36 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r2 != $r36 goto label09;

        $d0 = virtualinvoke $r9.<ucar.ma2.StructureData: double getScalarDouble(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setDoubleNext(double)>($d0);

        goto label50;

     label09:
        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r2 != $r37 goto label10;

        $f0 = virtualinvoke $r9.<ucar.ma2.StructureData: float getScalarFloat(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setFloatNext(float)>($f0);

        goto label50;

     label10:
        $r38 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r2 == $r38 goto label11;

        $r39 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if $r2 != $r39 goto label12;

     label11:
        $b8 = virtualinvoke $r9.<ucar.ma2.StructureData: byte getScalarByte(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setByteNext(byte)>($b8);

        goto label50;

     label12:
        $r40 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r2 == $r40 goto label13;

        $r41 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if $r2 != $r41 goto label14;

     label13:
        $s9 = virtualinvoke $r9.<ucar.ma2.StructureData: short getScalarShort(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setShortNext(short)>($s9);

        goto label50;

     label14:
        $r42 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r2 == $r42 goto label15;

        $r43 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if $r2 != $r43 goto label16;

     label15:
        $i10 = virtualinvoke $r9.<ucar.ma2.StructureData: int getScalarInt(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setIntNext(int)>($i10);

        goto label50;

     label16:
        $r44 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r2 != $r44 goto label17;

        $l12 = virtualinvoke $r9.<ucar.ma2.StructureData: long getScalarLong(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setLongNext(long)>($l12);

        goto label50;

     label17:
        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r2 != $r45 goto label18;

        $c11 = virtualinvoke $r9.<ucar.ma2.StructureData: char getScalarChar(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setCharNext(char)>($c11);

        goto label50;

     label18:
        $r46 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r2 != $r46 goto label19;

        $r51 = virtualinvoke $r9.<ucar.ma2.StructureData: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r51);

        goto label50;

     label19:
        $r47 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r2 != $r47 goto label20;

        $r50 = virtualinvoke $r9.<ucar.ma2.StructureData: ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r50);

        goto label50;

     label20:
        $r48 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r2 != $r48 goto label50;

        $r49 = virtualinvoke $r9.<ucar.ma2.StructureData: ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)>($r12);

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r49);

        goto label50;

     label21:
        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r2 != $r13 goto label24;

        $r35 = virtualinvoke $r9.<ucar.ma2.StructureData: double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)>($r12);

        i14 = lengthof $r35;

        i15 = 0;

     label22:
        if i15 >= i14 goto label23;

        d1 = $r35[i15];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setDoubleNext(double)>(d1);

        i15 = i15 + 1;

        goto label22;

     label23:
        goto label50;

     label24:
        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r2 != $r14 goto label27;

        $r34 = virtualinvoke $r9.<ucar.ma2.StructureData: float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)>($r12);

        i16 = lengthof $r34;

        i17 = 0;

     label25:
        if i17 >= i16 goto label26;

        f1 = $r34[i17];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setFloatNext(float)>(f1);

        i17 = i17 + 1;

        goto label25;

     label26:
        goto label50;

     label27:
        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r2 == $r15 goto label28;

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if $r2 != $r17 goto label31;

     label28:
        $r16 = virtualinvoke $r9.<ucar.ma2.StructureData: byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)>($r12);

        $i7 = lengthof $r16;

        i18 = 0;

     label29:
        if i18 >= $i7 goto label30;

        b19 = $r16[i18];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setByteNext(byte)>(b19);

        i18 = i18 + 1;

        goto label29;

     label30:
        goto label50;

     label31:
        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r2 == $r18 goto label32;

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if $r2 != $r20 goto label35;

     label32:
        $r19 = virtualinvoke $r9.<ucar.ma2.StructureData: short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)>($r12);

        $i6 = lengthof $r19;

        i20 = 0;

     label33:
        if i20 >= $i6 goto label34;

        s21 = $r19[i20];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setShortNext(short)>(s21);

        i20 = i20 + 1;

        goto label33;

     label34:
        goto label50;

     label35:
        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r2 == $r21 goto label36;

        $r23 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if $r2 != $r23 goto label39;

     label36:
        $r22 = virtualinvoke $r9.<ucar.ma2.StructureData: int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)>($r12);

        $i5 = lengthof $r22;

        i22 = 0;

     label37:
        if i22 >= $i5 goto label38;

        i23 = $r22[i22];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setIntNext(int)>(i23);

        i22 = i22 + 1;

        goto label37;

     label38:
        goto label50;

     label39:
        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r2 != $r24 goto label42;

        $r33 = virtualinvoke $r9.<ucar.ma2.StructureData: long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)>($r12);

        i24 = lengthof $r33;

        i25 = 0;

     label40:
        if i25 >= i24 goto label41;

        l26 = $r33[i25];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setLongNext(long)>(l26);

        i25 = i25 + 1;

        goto label40;

     label41:
        goto label50;

     label42:
        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r2 != $r25 goto label45;

        $r32 = virtualinvoke $r9.<ucar.ma2.StructureData: char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)>($r12);

        i27 = lengthof $r32;

        i28 = 0;

     label43:
        if i28 >= i27 goto label44;

        c29 = $r32[i28];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setCharNext(char)>(c29);

        i28 = i28 + 1;

        goto label43;

     label44:
        goto label50;

     label45:
        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r2 != $r26 goto label48;

        $r31 = virtualinvoke $r9.<ucar.ma2.StructureData: java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)>($r12);

        i30 = lengthof $r31;

        i31 = 0;

     label46:
        if i31 >= i30 goto label47;

        r60 = $r31[i31];

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>(r60);

        i31 = i31 + 1;

        goto label46;

     label47:
        goto label50;

     label48:
        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r2 != $r27 goto label50;

        $r28 = virtualinvoke $r9.<ucar.ma2.StructureData: ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)>($r12);

        $r29 = virtualinvoke $r28.<ucar.ma2.ArrayStructure: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

     label49:
        $z1 = interfaceinvoke $r29.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z1 == 0 goto label50;

        $r30 = interfaceinvoke $r29.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r30);

        goto label49;

     label50:
        goto label08;

     label51:
        return r59;
    }

    private ucar.ma2.Array extractMemberArrayFromIteration(ucar.ma2.StructureMembers$Member, int[]) throws java.io.IOException
    {
        byte[] $r15, r104;
        ucar.ma2.StructureDataIterator $r3, $r53;
        java.lang.Integer $r38, r109;
        byte $b3, b40;
        java.lang.Long $r80, r111;
        ucar.ma2.StructureMembers $r12, $r23, $r34, $r46, $r49, $r59, $r67, $r76, $r85, $r94, $r129;
        long $l24, l52;
        float[] $r88, r102;
        short $s7, s44;
        ucar.ma2.ArrayStructureW $r130;
        ucar.ma2.StructureData[] r117;
        ucar.ma2.Array $r119;
        ucar.ma2.ArrayStructure $r52;
        int[] r9, $r37, r108;
        java.lang.Short $r27, r107;
        ucar.ma2.DataType $r1, $r4, $r5, $r6, $r17, $r18, $r28, $r29, $r39, $r40, $r41, $r42, $r43;
        long[] $r79, r110;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i41, i42, i43, i45, i46, i47, i48, i49, i50, i51, i53, i54, i55, i57, i58, i59, i60;
        java.lang.Object $r10, $r21, $r32, $r57, $r65, $r74, $r83, $r92, r99, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138;
        java.lang.Class $r118;
        java.lang.Float $r89, r103;
        ucar.ma2.StructureMembers$Member r0, $r14, $r25, $r36, $r51, $r61, $r69, $r78, $r87, $r96;
        java.lang.Character $r71, r113;
        java.lang.Double $r98, r101;
        double[] $r97, r100;
        java.util.ArrayList $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128;
        java.lang.String $r13, $r24, $r35, $r50, $r60, $r68, $r77, $r86, $r95, r114, r116;
        char[] $r70, r112;
        ucar.ma2.StructureData $r11, $r22, $r33, $r48, $r54, $r58, $r66, $r75, $r84, $r93;
        java.lang.Byte $r16, r105;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        float $f0, f1;
        short[] $r26, r106;
        java.lang.String[] $r62, r115;
        double $d0, d1;
        java.util.Iterator $r8, $r20, $r31, $r56, $r64, $r73, $r82, $r91;
        char $c20, c56;
        ucar.ma2.ArraySequence r2;

        r2 := @this: ucar.ma2.ArraySequence;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        r9 := @parameter1: int[];

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r3 = virtualinvoke r2.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        r99 = null;

        i31 = 0;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r1 != $r4 goto label07;

        $r120 = new java.util.ArrayList;

        $i28 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r120.<java.util.ArrayList: void <init>(int)>($i28);

     label01:
        $z13 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z13 == 0 goto label04;

        $r93 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r94 = virtualinvoke $r93.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r95 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r96 = virtualinvoke $r94.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r95);

        $r97 = virtualinvoke $r93.<ucar.ma2.StructureData: double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)>($r96);

        i32 = lengthof $r97;

        i33 = 0;

     label02:
        if i33 >= i32 goto label03;

        d1 = $r97[i33];

        $r98 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        virtualinvoke $r120.<java.util.ArrayList: boolean add(java.lang.Object)>($r98);

        i33 = i33 + 1;

        goto label02;

     label03:
        i31 = i31 + 1;

        goto label01;

     label04:
        $i29 = virtualinvoke $r120.<java.util.ArrayList: int size()>();

        r100 = newarray (double)[$i29];

        i34 = 0;

        $r91 = virtualinvoke $r120.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z14 = interfaceinvoke $r91.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label06;

        $r92 = interfaceinvoke $r91.<java.util.Iterator: java.lang.Object next()>();

        r101 = (java.lang.Double) $r92;

        $i30 = i34;

        i34 = i34 + 1;

        $d0 = virtualinvoke r101.<java.lang.Double: double doubleValue()>();

        r100[$i30] = $d0;

        goto label05;

     label06:
        $r131 = (java.lang.Object) r100;

        r99 = $r131;

        goto label64;

     label07:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r1 != $r5 goto label14;

        $r121 = new java.util.ArrayList;

        $i25 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r121.<java.util.ArrayList: void <init>(int)>($i25);

     label08:
        $z11 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z11 == 0 goto label11;

        $r84 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r85 = virtualinvoke $r84.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r86 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r87 = virtualinvoke $r85.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r86);

        $r88 = virtualinvoke $r84.<ucar.ma2.StructureData: float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)>($r87);

        i35 = lengthof $r88;

        i36 = 0;

     label09:
        if i36 >= i35 goto label10;

        f1 = $r88[i36];

        $r89 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        virtualinvoke $r121.<java.util.ArrayList: boolean add(java.lang.Object)>($r89);

        i36 = i36 + 1;

        goto label09;

     label10:
        i31 = i31 + 1;

        goto label08;

     label11:
        $i26 = virtualinvoke $r121.<java.util.ArrayList: int size()>();

        r102 = newarray (float)[$i26];

        i37 = 0;

        $r82 = virtualinvoke $r121.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z12 = interfaceinvoke $r82.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label13;

        $r83 = interfaceinvoke $r82.<java.util.Iterator: java.lang.Object next()>();

        r103 = (java.lang.Float) $r83;

        $i27 = i37;

        i37 = i37 + 1;

        $f0 = virtualinvoke r103.<java.lang.Float: float floatValue()>();

        r102[$i27] = $f0;

        goto label12;

     label13:
        $r132 = (java.lang.Object) r102;

        r99 = $r132;

        goto label64;

     label14:
        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r1 == $r6 goto label15;

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if $r1 != $r17 goto label22;

     label15:
        $r122 = new java.util.ArrayList;

        $i0 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r122.<java.util.ArrayList: void <init>(int)>($i0);

     label16:
        $z15 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z15 == 0 goto label19;

        $r11 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r12 = virtualinvoke $r11.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r13 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<ucar.ma2.StructureData: byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)>($r14);

        i38 = lengthof $r15;

        i39 = 0;

     label17:
        if i39 >= i38 goto label18;

        b40 = $r15[i39];

        $r16 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b40);

        virtualinvoke $r122.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i39 = i39 + 1;

        goto label17;

     label18:
        i31 = i31 + 1;

        goto label16;

     label19:
        $i1 = virtualinvoke $r122.<java.util.ArrayList: int size()>();

        r104 = newarray (byte)[$i1];

        i41 = 0;

        $r8 = virtualinvoke $r122.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r105 = (java.lang.Byte) $r10;

        $i2 = i41;

        i41 = i41 + 1;

        $b3 = virtualinvoke r105.<java.lang.Byte: byte byteValue()>();

        r104[$i2] = $b3;

        goto label20;

     label21:
        $r133 = (java.lang.Object) r104;

        r99 = $r133;

        goto label64;

     label22:
        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r1 == $r18 goto label23;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if $r1 != $r28 goto label30;

     label23:
        $r123 = new java.util.ArrayList;

        $i4 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r123.<java.util.ArrayList: void <init>(int)>($i4);

     label24:
        $z16 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z16 == 0 goto label27;

        $r22 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r23 = virtualinvoke $r22.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r24 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r24);

        $r26 = virtualinvoke $r22.<ucar.ma2.StructureData: short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)>($r25);

        i42 = lengthof $r26;

        i43 = 0;

     label25:
        if i43 >= i42 goto label26;

        s44 = $r26[i43];

        $r27 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s44);

        virtualinvoke $r123.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        i43 = i43 + 1;

        goto label25;

     label26:
        i31 = i31 + 1;

        goto label24;

     label27:
        $i5 = virtualinvoke $r123.<java.util.ArrayList: int size()>();

        r106 = newarray (short)[$i5];

        i45 = 0;

        $r20 = virtualinvoke $r123.<java.util.ArrayList: java.util.Iterator iterator()>();

     label28:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label29;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r107 = (java.lang.Short) $r21;

        $i6 = i45;

        i45 = i45 + 1;

        $s7 = virtualinvoke r107.<java.lang.Short: short shortValue()>();

        r106[$i6] = $s7;

        goto label28;

     label29:
        $r134 = (java.lang.Object) r106;

        r99 = $r134;

        goto label64;

     label30:
        $r29 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r1 == $r29 goto label31;

        $r39 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if $r1 != $r39 goto label38;

     label31:
        $r124 = new java.util.ArrayList;

        $i8 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r124.<java.util.ArrayList: void <init>(int)>($i8);

     label32:
        $z17 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z17 == 0 goto label35;

        $r33 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r34 = virtualinvoke $r33.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r35 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r35);

        $r37 = virtualinvoke $r33.<ucar.ma2.StructureData: int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)>($r36);

        i46 = lengthof $r37;

        i47 = 0;

     label33:
        if i47 >= i46 goto label34;

        i48 = $r37[i47];

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i48);

        virtualinvoke $r124.<java.util.ArrayList: boolean add(java.lang.Object)>($r38);

        i47 = i47 + 1;

        goto label33;

     label34:
        i31 = i31 + 1;

        goto label32;

     label35:
        $i9 = virtualinvoke $r124.<java.util.ArrayList: int size()>();

        r108 = newarray (int)[$i9];

        i49 = 0;

        $r31 = virtualinvoke $r124.<java.util.ArrayList: java.util.Iterator iterator()>();

     label36:
        $z2 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label37;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r109 = (java.lang.Integer) $r32;

        $i10 = i49;

        i49 = i49 + 1;

        $i11 = virtualinvoke r109.<java.lang.Integer: int intValue()>();

        r108[$i10] = $i11;

        goto label36;

     label37:
        $r135 = (java.lang.Object) r108;

        r99 = $r135;

        goto label64;

     label38:
        $r40 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r1 != $r40 goto label45;

        $r125 = new java.util.ArrayList;

        $i21 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r125.<java.util.ArrayList: void <init>(int)>($i21);

     label39:
        $z9 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z9 == 0 goto label42;

        $r75 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r76 = virtualinvoke $r75.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r77 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r78 = virtualinvoke $r76.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r77);

        $r79 = virtualinvoke $r75.<ucar.ma2.StructureData: long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)>($r78);

        i50 = lengthof $r79;

        i51 = 0;

     label40:
        if i51 >= i50 goto label41;

        l52 = $r79[i51];

        $r80 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l52);

        virtualinvoke $r125.<java.util.ArrayList: boolean add(java.lang.Object)>($r80);

        i51 = i51 + 1;

        goto label40;

     label41:
        i31 = i31 + 1;

        goto label39;

     label42:
        $i22 = virtualinvoke $r125.<java.util.ArrayList: int size()>();

        r110 = newarray (long)[$i22];

        i53 = 0;

        $r73 = virtualinvoke $r125.<java.util.ArrayList: java.util.Iterator iterator()>();

     label43:
        $z10 = interfaceinvoke $r73.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label44;

        $r74 = interfaceinvoke $r73.<java.util.Iterator: java.lang.Object next()>();

        r111 = (java.lang.Long) $r74;

        $i23 = i53;

        i53 = i53 + 1;

        $l24 = virtualinvoke r111.<java.lang.Long: long longValue()>();

        r110[$i23] = $l24;

        goto label43;

     label44:
        $r136 = (java.lang.Object) r110;

        r99 = $r136;

        goto label64;

     label45:
        $r41 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 != $r41 goto label52;

        $r126 = new java.util.ArrayList;

        $i17 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r126.<java.util.ArrayList: void <init>(int)>($i17);

     label46:
        $z7 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z7 == 0 goto label49;

        $r66 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r67 = virtualinvoke $r66.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r68 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r69 = virtualinvoke $r67.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r68);

        $r70 = virtualinvoke $r66.<ucar.ma2.StructureData: char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)>($r69);

        i54 = lengthof $r70;

        i55 = 0;

     label47:
        if i55 >= i54 goto label48;

        c56 = $r70[i55];

        $r71 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c56);

        virtualinvoke $r126.<java.util.ArrayList: boolean add(java.lang.Object)>($r71);

        i55 = i55 + 1;

        goto label47;

     label48:
        i31 = i31 + 1;

        goto label46;

     label49:
        $i18 = virtualinvoke $r126.<java.util.ArrayList: int size()>();

        r112 = newarray (char)[$i18];

        i57 = 0;

        $r64 = virtualinvoke $r126.<java.util.ArrayList: java.util.Iterator iterator()>();

     label50:
        $z8 = interfaceinvoke $r64.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label51;

        $r65 = interfaceinvoke $r64.<java.util.Iterator: java.lang.Object next()>();

        r113 = (java.lang.Character) $r65;

        $i19 = i57;

        i57 = i57 + 1;

        $c20 = virtualinvoke r113.<java.lang.Character: char charValue()>();

        r112[$i19] = $c20;

        goto label50;

     label51:
        $r137 = (java.lang.Object) r112;

        r99 = $r137;

        goto label64;

     label52:
        $r42 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r1 != $r42 goto label59;

        $r127 = new java.util.ArrayList;

        $i14 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r127.<java.util.ArrayList: void <init>(int)>($i14);

     label53:
        $z5 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z5 == 0 goto label56;

        $r58 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r59 = virtualinvoke $r58.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r60 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r61 = virtualinvoke $r59.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r60);

        $r62 = virtualinvoke $r58.<ucar.ma2.StructureData: java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)>($r61);

        i58 = lengthof $r62;

        i59 = 0;

     label54:
        if i59 >= i58 goto label55;

        r114 = $r62[i59];

        virtualinvoke $r127.<java.util.ArrayList: boolean add(java.lang.Object)>(r114);

        i59 = i59 + 1;

        goto label54;

     label55:
        i31 = i31 + 1;

        goto label53;

     label56:
        $i15 = virtualinvoke $r127.<java.util.ArrayList: int size()>();

        r115 = newarray (java.lang.String)[$i15];

        i60 = 0;

        $r56 = virtualinvoke $r127.<java.util.ArrayList: java.util.Iterator iterator()>();

     label57:
        $z6 = interfaceinvoke $r56.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label58;

        $r57 = interfaceinvoke $r56.<java.util.Iterator: java.lang.Object next()>();

        r116 = (java.lang.String) $r57;

        $i16 = i60;

        i60 = i60 + 1;

        r115[$i16] = r116;

        goto label57;

     label58:
        $r138 = (java.lang.Object) r115;

        r99 = $r138;

        goto label64;

     label59:
        $r43 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r1 != $r43 goto label64;

        $r128 = new java.util.ArrayList;

        $i12 = r2.<ucar.ma2.ArraySequence: int initial>;

        specialinvoke $r128.<java.util.ArrayList: void <init>(int)>($i12);

     label60:
        $z3 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z3 == 0 goto label63;

        $r48 = interfaceinvoke $r3.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r49 = virtualinvoke $r48.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r50 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r51 = virtualinvoke $r49.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r50);

        $r52 = virtualinvoke $r48.<ucar.ma2.StructureData: ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)>($r51);

        $r53 = virtualinvoke $r52.<ucar.ma2.ArrayStructure: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

     label61:
        $z4 = interfaceinvoke $r53.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z4 == 0 goto label62;

        $r54 = interfaceinvoke $r53.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        virtualinvoke $r128.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);

        goto label61;

     label62:
        i31 = i31 + 1;

        goto label60;

     label63:
        $i13 = virtualinvoke $r128.<java.util.ArrayList: int size()>();

        r117 = newarray (ucar.ma2.StructureData)[$i13];

        r9[0] = i31;

        $r129 = new ucar.ma2.StructureMembers;

        $r46 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke $r129.<ucar.ma2.StructureMembers: void <init>(ucar.ma2.StructureMembers)>($r46);

        $r130 = new ucar.ma2.ArrayStructureW;

        specialinvoke $r130.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[],ucar.ma2.StructureData[])>($r129, r9, r117);

        return $r130;

     label64:
        r9[0] = i31;

        $r118 = virtualinvoke $r1.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r119 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r118, r9, r99);

        return $r119;
    }

    public java.lang.String toString()
    {
        ucar.ma2.ArraySequence r1;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;

        r1 := @this: ucar.ma2.ArraySequence;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nelems=");

        $i0 = r1.<ucar.ma2.ArraySequence: int nelems>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void showInternal(java.util.Formatter, java.lang.String)
    {
        java.lang.Object[] $r3;
        ucar.ma2.ArrayStructure $r12;
        ucar.ma2.ArrayStructure$ArrayStructureIterator r11;
        ucar.ma2.StructureDataIterator $r4, $r7, $r9, $r10;
        java.lang.Integer $r8;
        java.util.Formatter r1;
        int $i0;
        java.lang.String r2, $r6, $r16;
        boolean $z0;
        ucar.ma2.ArraySequence r0;
        java.lang.Class $r5;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: ucar.ma2.ArraySequence;

        r1 := @parameter0: java.util.Formatter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.ma2.ArrayStructure: void showInternal(java.util.Formatter,java.lang.String)>(r1, r2);

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r2;

        $r4 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r3[1] = $r6;

        $r7 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        $i0 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r8;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sStructureDataIterator Class=%s hash=0x%x%n", $r3);

        $r9 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        $z0 = $r9 instanceof ucar.ma2.ArrayStructure$ArrayStructureIterator;

        if $z0 == 0 goto label1;

        $r10 = r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator iter>;

        r11 = (ucar.ma2.ArrayStructure$ArrayStructureIterator) $r10;

        $r12 = virtualinvoke r11.<ucar.ma2.ArrayStructure$ArrayStructureIterator: ucar.ma2.ArrayStructure getArrayStructure()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<ucar.ma2.ArrayStructure: void showInternal(java.util.Formatter,java.lang.String)>(r1, $r16);

     label1:
        return;
    }
}
