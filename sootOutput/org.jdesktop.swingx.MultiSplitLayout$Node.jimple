public abstract class org.jdesktop.swingx.MultiSplitLayout$Node extends java.lang.Object
{
    private org.jdesktop.swingx.MultiSplitLayout$Split parent;
    private java.awt.Rectangle bounds;
    private double weight;
    private boolean isVisible;

    public void <init>()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        java.awt.Rectangle $r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Split parent> = null;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: java.awt.Rectangle bounds> = $r1;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: double weight> = 0.0;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible> = 1;

        return;
    }

    public void setVisible(boolean)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible> = z0;

        return;
    }

    public boolean isVisible()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $z0 = r0.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible>;

        return $z0;
    }

    public org.jdesktop.swingx.MultiSplitLayout$Split getParent()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        org.jdesktop.swingx.MultiSplitLayout$Split $r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r1 = r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Split parent>;

        return $r1;
    }

    public void setParent(org.jdesktop.swingx.MultiSplitLayout$Split)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        org.jdesktop.swingx.MultiSplitLayout$Split r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        r1 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Split;

        r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Split parent> = r1;

        return;
    }

    public java.awt.Rectangle getBounds()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r1;
        java.awt.Rectangle $r0, $r2;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r0 = new java.awt.Rectangle;

        $r2 = r1.<org.jdesktop.swingx.MultiSplitLayout$Node: java.awt.Rectangle bounds>;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r2);

        return $r0;
    }

    public void setBounds(java.awt.Rectangle)
    {
        java.awt.Rectangle r0, $r2;
        org.jdesktop.swingx.MultiSplitLayout$Node r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        r0 := @parameter0: java.awt.Rectangle;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null bounds");

        throw $r3;

     label1:
        $r2 = new java.awt.Rectangle;

        specialinvoke $r2.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>(r0);

        r1.<org.jdesktop.swingx.MultiSplitLayout$Node: java.awt.Rectangle bounds> = $r2;

        return;
    }

    public double getWeight()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        double $d0;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $d0 = r0.<org.jdesktop.swingx.MultiSplitLayout$Node: double weight>;

        return $d0;
    }

    public void setWeight(double)
    {
        byte $b0, $b1;
        org.jdesktop.swingx.MultiSplitLayout$Node r1;
        int $i2, $i3;
        java.lang.IllegalArgumentException $r2;
        double d0;

        r1 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $b1 = d0 cmpl 1.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid weight");

        throw $r2;

     label2:
        r1.<org.jdesktop.swingx.MultiSplitLayout$Node: double weight> = d0;

        return;
    }

    private org.jdesktop.swingx.MultiSplitLayout$Node siblingAtOffset(int)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0, $r4;
        org.jdesktop.swingx.MultiSplitLayout$Split $r1;
        java.util.List $r2;
        int $i0, i1, $i2, i3, $i5, $i7;
        java.lang.Object $r3;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Split getParent()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout$Split: java.util.List getChildren()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r0);

        $i5 = (int) -1;

        if $i0 != $i5 goto label2;

        return null;

     label2:
        i3 = $i0 + i1;

        $i7 = (int) -1;

        if i3 <= $i7 goto label3;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (org.jdesktop.swingx.MultiSplitLayout$Node) $r3;

        goto label4;

     label3:
        $r4 = null;

     label4:
        return $r4;
    }

    public org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0, $r1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node siblingAtOffset(int)>(1);

        return $r1;
    }

    public org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0, $r1;
        int $i1;

        r0 := @this: org.jdesktop.swingx.MultiSplitLayout$Node;

        $i1 = (int) -1;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.MultiSplitLayout$Node: org.jdesktop.swingx.MultiSplitLayout$Node siblingAtOffset(int)>($i1);

        return $r1;
    }

    static boolean access$000(org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r0;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node;

        $z0 = r0.<org.jdesktop.swingx.MultiSplitLayout$Node: boolean isVisible>;

        return $z0;
    }
}
