class org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final org.waveprotocol.wave.model.util.ReadableStringSet val$ignoreSet;
    final org.waveprotocol.wave.model.document.operation.Nindo$Builder val$builder;
    final org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic, org.waveprotocol.wave.model.util.ReadableStringSet, org.waveprotocol.wave.model.document.operation.Nindo$Builder)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r3;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3 r0;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic;

        r2 := @parameter1: org.waveprotocol.wave.model.util.ReadableStringSet;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3: org.waveprotocol.wave.model.util.ReadableStringSet val$ignoreSet> = r2;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$builder> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r3;
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3 r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3: org.waveprotocol.wave.model.util.ReadableStringSet val$ignoreSet>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.ReadableStringSet: boolean contains(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$3: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$builder>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void endAnnotation(java.lang.String)>(r1);

     label1:
        return;
    }
}
