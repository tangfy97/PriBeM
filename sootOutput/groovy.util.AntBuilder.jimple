public class groovy.util.AntBuilder extends groovy.util.BuilderSupport
{
    private static final java.lang.Class[] ADD_TASK_PARAM_TYPES;
    private final java.util.logging.Logger log;
    private org.apache.tools.ant.Project project;
    private final org.apache.tools.ant.helper.AntXMLContext antXmlContext;
    private final org.apache.tools.ant.helper.ProjectHelper2$ElementHandler antElementHandler;
    private final org.apache.tools.ant.helper.ProjectHelper2$TargetHandler antTargetHandler;
    private final org.apache.tools.ant.Target collectorTarget;
    private final org.apache.tools.ant.Target implicitTarget;
    private java.lang.Object lastCompletedNode;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$ant$FileScanner;

    public void <init>()
    {
        org.apache.tools.ant.Project $r1;
        groovy.util.AntBuilder r0;

        r0 := @this: groovy.util.AntBuilder;

        $r1 = staticinvoke <groovy.util.AntBuilder: org.apache.tools.ant.Project createProject()>();

        specialinvoke r0.<groovy.util.AntBuilder: void <init>(org.apache.tools.ant.Project)>($r1);

        return;
    }

    public void <init>(org.apache.tools.ant.Project)
    {
        org.apache.tools.ant.Project r1;
        groovy.util.AntBuilder r0;
        org.apache.tools.ant.Target $r2;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: org.apache.tools.ant.Project;

        $r2 = new org.apache.tools.ant.Target;

        specialinvoke $r2.<org.apache.tools.ant.Target: void <init>()>();

        specialinvoke r0.<groovy.util.AntBuilder: void <init>(org.apache.tools.ant.Project,org.apache.tools.ant.Target)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.tools.ant.Project, org.apache.tools.ant.Target)
    {
        org.apache.tools.ant.input.InputHandler $r32;
        org.apache.tools.ant.helper.ProjectHelper2$TargetHandler $r26;
        java.util.HashMap $r30;
        org.apache.tools.ant.helper.ProjectHelper2$ElementHandler $r25;
        org.apache.tools.ant.helper.AntXMLContext $r13, $r15, $r17, $r22, $r28;
        org.apache.tools.ant.Project r6, $r8;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        groovy.util.AntBuilder r0;
        org.apache.tools.ant.input.DefaultInputHandler $r27;
        java.lang.Class $r1, $r23, $r24;
        org.apache.tools.ant.Target r9, $r11, $r12, $r19, $r20, $r21, $r31;
        groovy.util.AntBuilderLocator $r29;

        r0 := @this: groovy.util.AntBuilder;

        r6 := @parameter0: org.apache.tools.ant.Project;

        r9 := @parameter1: org.apache.tools.ant.Target;

        specialinvoke r0.<groovy.util.BuilderSupport: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        r0.<groovy.util.AntBuilder: java.util.logging.Logger log> = $r3;

        $r25 = new org.apache.tools.ant.helper.ProjectHelper2$ElementHandler;

        specialinvoke $r25.<org.apache.tools.ant.helper.ProjectHelper2$ElementHandler: void <init>()>();

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$ElementHandler antElementHandler> = $r25;

        $r26 = new org.apache.tools.ant.helper.ProjectHelper2$TargetHandler;

        specialinvoke $r26.<org.apache.tools.ant.helper.ProjectHelper2$TargetHandler: void <init>()>();

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$TargetHandler antTargetHandler> = $r26;

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project> = r6;

        $r8 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        $r27 = new org.apache.tools.ant.input.DefaultInputHandler;

        specialinvoke $r27.<org.apache.tools.ant.input.DefaultInputHandler: void <init>()>();

        $r32 = (org.apache.tools.ant.input.InputHandler) $r27;

        virtualinvoke $r8.<org.apache.tools.ant.Project: void setInputHandler(org.apache.tools.ant.input.InputHandler)>($r32);

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target collectorTarget> = r9;

        $r28 = new org.apache.tools.ant.helper.AntXMLContext;

        specialinvoke $r28.<org.apache.tools.ant.helper.AntXMLContext: void <init>(org.apache.tools.ant.Project)>(r6);

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext> = $r28;

        $r11 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target collectorTarget>;

        virtualinvoke $r11.<org.apache.tools.ant.Target: void setProject(org.apache.tools.ant.Project)>(r6);

        $r13 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r12 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target collectorTarget>;

        virtualinvoke $r13.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTarget(org.apache.tools.ant.Target)>($r12);

        $r15 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r29 = new groovy.util.AntBuilderLocator;

        specialinvoke $r29.<groovy.util.AntBuilderLocator: void <init>()>();

        virtualinvoke $r15.<org.apache.tools.ant.helper.AntXMLContext: void setLocator(org.xml.sax.Locator)>($r29);

        $r17 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r30 = new java.util.HashMap;

        specialinvoke $r30.<java.util.HashMap: void <init>()>();

        virtualinvoke $r17.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTargets(java.util.Map)>($r30);

        $r31 = new org.apache.tools.ant.Target;

        specialinvoke $r31.<org.apache.tools.ant.Target: void <init>()>();

        r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target implicitTarget> = $r31;

        $r19 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target implicitTarget>;

        virtualinvoke $r19.<org.apache.tools.ant.Target: void setProject(org.apache.tools.ant.Project)>(r6);

        $r20 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target implicitTarget>;

        virtualinvoke $r20.<org.apache.tools.ant.Target: void setName(java.lang.String)>("");

        $r22 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r21 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target implicitTarget>;

        virtualinvoke $r22.<org.apache.tools.ant.helper.AntXMLContext: void setImplicitTarget(org.apache.tools.ant.Target)>($r21);

        $r23 = <groovy.util.AntBuilder: java.lang.Class class$org$codehaus$groovy$ant$FileScanner>;

        if $r23 != null goto label1;

        $r24 = staticinvoke <groovy.util.AntBuilder: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.ant.FileScanner");

        <groovy.util.AntBuilder: java.lang.Class class$org$codehaus$groovy$ant$FileScanner> = $r24;

        goto label2;

     label1:
        $r24 = <groovy.util.AntBuilder: java.lang.Class class$org$codehaus$groovy$ant$FileScanner>;

     label2:
        virtualinvoke r6.<org.apache.tools.ant.Project: void addDataTypeDefinition(java.lang.String,java.lang.Class)>("fileScanner", $r24);

        return;
    }

    public void <init>(org.apache.tools.ant.Task)
    {
        org.apache.tools.ant.Task r1;
        org.apache.tools.ant.Location $r9;
        groovy.util.AntBuilder r0;
        org.apache.tools.ant.RuntimeConfigurable $r11, $r12, $r14;
        org.apache.tools.ant.helper.AntXMLContext $r13;
        org.apache.tools.ant.Project $r2, $r6;
        org.apache.tools.ant.UnknownElement $r4;
        java.lang.String $r5, $r7, $r8;
        org.apache.tools.ant.Target $r3, $r10;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: org.apache.tools.ant.Task;

        $r2 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.Project getProject()>();

        $r3 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.Target getOwningTarget()>();

        specialinvoke r0.<groovy.util.AntBuilder: void <init>(org.apache.tools.ant.Project,org.apache.tools.ant.Target)>($r2, $r3);

        $r4 = new org.apache.tools.ant.UnknownElement;

        $r5 = virtualinvoke r1.<org.apache.tools.ant.Task: java.lang.String getTaskName()>();

        specialinvoke $r4.<org.apache.tools.ant.UnknownElement: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setProject(org.apache.tools.ant.Project)>($r6);

        $r7 = virtualinvoke r1.<org.apache.tools.ant.Task: java.lang.String getTaskType()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setTaskType(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<org.apache.tools.ant.Task: java.lang.String getTaskName()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setTaskName(java.lang.String)>($r8);

        $r9 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.Location getLocation()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setLocation(org.apache.tools.ant.Location)>($r9);

        $r10 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.Target getOwningTarget()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setOwningTarget(org.apache.tools.ant.Target)>($r10);

        $r11 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.RuntimeConfigurable getRuntimeConfigurableWrapper()>();

        virtualinvoke $r4.<org.apache.tools.ant.UnknownElement: void setRuntimeConfigurableWrapper(org.apache.tools.ant.RuntimeConfigurable)>($r11);

        $r12 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.RuntimeConfigurable getRuntimeConfigurableWrapper()>();

        virtualinvoke $r12.<org.apache.tools.ant.RuntimeConfigurable: void setProxy(java.lang.Object)>($r4);

        $r13 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r14 = virtualinvoke r1.<org.apache.tools.ant.Task: org.apache.tools.ant.RuntimeConfigurable getRuntimeConfigurableWrapper()>();

        virtualinvoke $r13.<org.apache.tools.ant.helper.AntXMLContext: void pushWrapper(org.apache.tools.ant.RuntimeConfigurable)>($r14);

        return;
    }

    public org.apache.tools.ant.Project getProject()
    {
        org.apache.tools.ant.Project $r1;
        groovy.util.AntBuilder r0;

        r0 := @this: groovy.util.AntBuilder;

        $r1 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        return $r1;
    }

    protected static org.apache.tools.ant.Project createProject()
    {
        java.io.PrintStream $r4, $r5;
        org.apache.tools.ant.NoBannerLogger $r7;
        org.apache.tools.ant.BuildListener $r11;
        org.apache.tools.ant.BuildLogger $r8, $r9, $r10;
        java.util.Vector $r2;
        org.apache.tools.ant.Project $r6;
        org.apache.tools.ant.ProjectHelper $r1;

        $r6 = new org.apache.tools.ant.Project;

        specialinvoke $r6.<org.apache.tools.ant.Project: void <init>()>();

        $r1 = staticinvoke <org.apache.tools.ant.ProjectHelper: org.apache.tools.ant.ProjectHelper getProjectHelper()>();

        virtualinvoke $r6.<org.apache.tools.ant.Project: void addReference(java.lang.String,java.lang.Object)>("ant.projectHelper", $r1);

        $r2 = virtualinvoke $r1.<org.apache.tools.ant.ProjectHelper: java.util.Vector getImportStack()>();

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>("AntBuilder");

        $r7 = new org.apache.tools.ant.NoBannerLogger;

        specialinvoke $r7.<org.apache.tools.ant.NoBannerLogger: void <init>()>();

        $r8 = (org.apache.tools.ant.BuildLogger) $r7;

        interfaceinvoke $r8.<org.apache.tools.ant.BuildLogger: void setMessageOutputLevel(int)>(2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r9 = (org.apache.tools.ant.BuildLogger) $r7;

        interfaceinvoke $r9.<org.apache.tools.ant.BuildLogger: void setOutputPrintStream(java.io.PrintStream)>($r4);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r10 = (org.apache.tools.ant.BuildLogger) $r7;

        interfaceinvoke $r10.<org.apache.tools.ant.BuildLogger: void setErrorPrintStream(java.io.PrintStream)>($r5);

        $r11 = (org.apache.tools.ant.BuildListener) $r7;

        virtualinvoke $r6.<org.apache.tools.ant.Project: void addBuildListener(org.apache.tools.ant.BuildListener)>($r11);

        virtualinvoke $r6.<org.apache.tools.ant.Project: void init()>();

        virtualinvoke $r6.<org.apache.tools.ant.Project: java.io.File getBaseDir()>();

        return $r6;
    }

    protected void setParent(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        groovy.util.AntBuilder r0;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    protected java.lang.Object doInvokeMethod(java.lang.String, java.lang.Object, java.lang.Object)
    {
        groovy.util.AntBuilder r0;
        java.lang.Object r2, r3, $r4;
        java.lang.String r1;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.BuilderSupport: java.lang.Object doInvokeMethod(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        $r4 = r0.<groovy.util.AntBuilder: java.lang.Object lastCompletedNode>;

        return $r4;
    }

    protected void nodeCompleted(java.lang.Object, java.lang.Object)
    {
        org.apache.tools.ant.helper.ProjectHelper2$ElementHandler $r2;
        org.apache.tools.ant.helper.AntXMLContext $r1, $r7, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.logging.Logger $r21;
        groovy.util.AntBuilder r0;
        org.apache.tools.ant.DemuxInputStream $r27;
        java.lang.Throwable $r22;
        org.apache.tools.ant.Task $r8, $r13;
        org.apache.tools.ant.Project $r5, $r11, $r14, $r18, $r20, $r23;
        java.lang.String $r9, $r15;
        org.apache.tools.ant.RuntimeConfigurable r26;
        org.apache.tools.ant.UnknownElement r25;
        java.lang.Object r3, r4, r24;
        org.apache.tools.ant.Target $r6, $r16;
        java.io.InputStream r10, $r12, $r28;

        r0 := @this: groovy.util.AntBuilder;

        r4 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$ElementHandler antElementHandler>;

        $r1 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        virtualinvoke $r2.<org.apache.tools.ant.helper.ProjectHelper2$ElementHandler: void onEndElement(java.lang.String,java.lang.String,org.apache.tools.ant.helper.AntXMLContext)>(null, null, $r1);

        r0.<groovy.util.AntBuilder: java.lang.Object lastCompletedNode> = r3;

        if r4 == null goto label01;

        $z6 = r4 instanceof org.apache.tools.ant.Target;

        if $z6 != 0 goto label01;

        $r21 = r0.<groovy.util.AntBuilder: java.util.logging.Logger log>;

        virtualinvoke $r21.<java.util.logging.Logger: void finest(java.lang.String)>("parent is not null: no perform on nodeCompleted");

        return;

     label01:
        $z0 = r3 instanceof org.apache.tools.ant.Task;

        if $z0 == 0 goto label09;

        r24 = r3;

        $z2 = r3 instanceof org.apache.tools.ant.UnknownElement;

        if $z2 == 0 goto label02;

        r25 = (org.apache.tools.ant.UnknownElement) r3;

        virtualinvoke r25.<org.apache.tools.ant.UnknownElement: void maybeConfigure()>();

        r24 = virtualinvoke r25.<org.apache.tools.ant.UnknownElement: java.lang.Object getRealThing()>();

     label02:
        r0.<groovy.util.AntBuilder: java.lang.Object lastCompletedNode> = r24;

        $z3 = r24 instanceof org.apache.tools.ant.Task;

        if $z3 == 0 goto label08;

        $r8 = (org.apache.tools.ant.Task) r24;

        $r9 = virtualinvoke $r8.<org.apache.tools.ant.Task: java.lang.String getTaskName()>();

        r10 = <java.lang.System: java.io.InputStream in>;

        $r11 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        $r12 = virtualinvoke $r11.<org.apache.tools.ant.Project: java.io.InputStream getDefaultInputStream()>();

        $z4 = r10 instanceof org.apache.tools.ant.DemuxInputStream;

        if $z4 != 0 goto label03;

        $r18 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        virtualinvoke $r18.<org.apache.tools.ant.Project: void setDefaultInputStream(java.io.InputStream)>(r10);

        $r27 = new org.apache.tools.ant.DemuxInputStream;

        $r20 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        specialinvoke $r27.<org.apache.tools.ant.DemuxInputStream: void <init>(org.apache.tools.ant.Project)>($r20);

        $r28 = (java.io.InputStream) $r27;

        staticinvoke <java.lang.System: void setIn(java.io.InputStream)>($r28);

     label03:
        $r13 = (org.apache.tools.ant.Task) r24;

        virtualinvoke $r13.<org.apache.tools.ant.Task: void perform()>();

     label04:
        $r14 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        virtualinvoke $r14.<org.apache.tools.ant.Project: void setDefaultInputStream(java.io.InputStream)>($r12);

        staticinvoke <java.lang.System: void setIn(java.io.InputStream)>(r10);

        goto label07;

     label05:
        $r22 := @caughtexception;

     label06:
        $r23 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        virtualinvoke $r23.<org.apache.tools.ant.Project: void setDefaultInputStream(java.io.InputStream)>($r12);

        staticinvoke <java.lang.System: void setIn(java.io.InputStream)>(r10);

        throw $r22;

     label07:
        $r15 = "import";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label08;

        $r17 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r16 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target collectorTarget>;

        virtualinvoke $r17.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTarget(org.apache.tools.ant.Target)>($r16);

     label08:
        goto label11;

     label09:
        $z1 = r3 instanceof org.apache.tools.ant.Target;

        if $z1 == 0 goto label10;

        $r7 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r6 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Target collectorTarget>;

        virtualinvoke $r7.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTarget(org.apache.tools.ant.Target)>($r6);

        goto label11;

     label10:
        r26 = (org.apache.tools.ant.RuntimeConfigurable) r3;

        $r5 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        virtualinvoke r26.<org.apache.tools.ant.RuntimeConfigurable: void maybeConfigure(org.apache.tools.ant.Project)>($r5);

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    protected java.lang.Object createNode(java.lang.Object)
    {
        groovy.util.AntBuilder r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        $r3 = virtualinvoke r0.<groovy.util.AntBuilder: java.lang.Object createNode(java.lang.Object,java.util.Map)>(r1, $r2);

        return $r3;
    }

    protected java.lang.Object createNode(java.lang.Object, java.lang.Object)
    {
        groovy.util.AntBuilder r0;
        java.lang.Object r1, $r2, r3;
        java.lang.String $r4;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<groovy.util.AntBuilder: java.lang.Object createNode(java.lang.Object)>(r1);

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<groovy.util.AntBuilder: void setText(java.lang.Object,java.lang.String)>($r2, $r4);

        return $r2;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map, java.lang.Object)
    {
        groovy.util.AntBuilder r0;
        java.util.Map r2;
        java.lang.Object r1, $r3, r4;
        java.lang.String $r5;

        r0 := @this: groovy.util.AntBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r4 := @parameter2: java.lang.Object;

        $r3 = virtualinvoke r0.<groovy.util.AntBuilder: java.lang.Object createNode(java.lang.Object,java.util.Map)>(r1, r2);

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<groovy.util.AntBuilder: void setText(java.lang.Object,java.lang.String)>($r3, $r5);

        return $r3;
    }

    protected static org.xml.sax.Attributes buildAttributes(java.util.Map)
    {
        org.xml.sax.helpers.AttributesImpl $r0;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map r1;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String r7, $r9;
        boolean $z0;

        r1 := @parameter0: java.util.Map;

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        virtualinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r7, r7, "CDATA", $r9);

        goto label1;

     label2:
        return $r0;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map)
    {
        org.apache.tools.ant.helper.ProjectHelper2$ElementHandler $r7;
        java.util.logging.Level $r18;
        java.util.Vector $r9;
        java.lang.StringBuffer $r16, $r19, $r20;
        java.util.Map r0;
        org.xml.sax.Attributes $r1;
        org.apache.tools.ant.helper.AntXMLContext $r6, $r8, $r14;
        java.lang.String $r3, $r4, $r21, r23, r24;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r17;
        org.xml.sax.SAXParseException $r15;
        groovy.util.AntBuilder r5;
        org.apache.tools.ant.RuntimeConfigurable $r22;
        java.lang.Object r2, $r10, $r11;
        org.apache.tools.ant.Target $r12, $r13;
        groovy.xml.QName r25;

        r5 := @this: groovy.util.AntBuilder;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.util.Map;

        $r1 = staticinvoke <groovy.util.AntBuilder: org.xml.sax.Attributes buildAttributes(java.util.Map)>(r0);

        r23 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r24 = "";

        $z0 = r2 instanceof groovy.xml.QName;

        if $z0 == 0 goto label1;

        r25 = (groovy.xml.QName) r2;

        r23 = virtualinvoke r25.<groovy.xml.QName: java.lang.String getLocalPart()>();

        r24 = virtualinvoke r25.<groovy.xml.QName: java.lang.String getNamespaceURI()>();

     label1:
        $r3 = "import";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r14 = r5.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r13 = r5.<groovy.util.AntBuilder: org.apache.tools.ant.Target implicitTarget>;

        virtualinvoke $r14.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTarget(org.apache.tools.ant.Target)>($r13);

        goto label3;

     label2:
        $r4 = "target";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        $r12 = specialinvoke r5.<groovy.util.AntBuilder: org.apache.tools.ant.Target onStartTarget(org.xml.sax.Attributes,java.lang.String,java.lang.String)>($r1, r23, r24);

        return $r12;

     label3:
        $r7 = r5.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$ElementHandler antElementHandler>;

        $r6 = r5.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        virtualinvoke $r7.<org.apache.tools.ant.helper.ProjectHelper2$ElementHandler: void onStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.apache.tools.ant.helper.AntXMLContext)>(r24, r23, r23, $r1, $r6);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        $r17 = r5.<groovy.util.AntBuilder: java.util.logging.Logger log>;

        $r18 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r18, $r21, $r15);

     label6:
        $r8 = r5.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r9 = virtualinvoke $r8.<org.apache.tools.ant.helper.AntXMLContext: java.util.Vector getWrapperStack()>();

        $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object lastElement()>();

        $r22 = (org.apache.tools.ant.RuntimeConfigurable) $r10;

        $r11 = virtualinvoke $r22.<org.apache.tools.ant.RuntimeConfigurable: java.lang.Object getProxy()>();

        return $r11;

        catch org.xml.sax.SAXParseException from label3 to label4 with label5;
    }

    private org.apache.tools.ant.Target onStartTarget(org.xml.sax.Attributes, java.lang.String, java.lang.String)
    {
        org.apache.tools.ant.helper.ProjectHelper2$TargetHandler $r10;
        java.util.Enumeration $r16;
        java.util.Vector $r15;
        org.apache.tools.ant.helper.AntXMLContext $r4, $r9, $r18;
        boolean $z0;
        java.util.logging.Logger $r26;
        groovy.util.AntBuilder r1;
        org.apache.tools.ant.Location $r3;
        org.xml.sax.Locator $r5;
        java.util.logging.Level $r27;
        java.lang.StringBuffer $r25, $r28, $r29;
        org.xml.sax.Attributes r8;
        org.apache.tools.ant.Project $r2, $r11, $r17, $r21;
        java.lang.String r6, r7, $r13, r20, $r30;
        java.util.Hashtable $r12, $r22;
        org.xml.sax.SAXParseException $r24;
        java.lang.Object $r14, $r19, $r23;
        org.apache.tools.ant.Target $r0, r31;

        r1 := @this: groovy.util.AntBuilder;

        r8 := @parameter0: org.xml.sax.Attributes;

        r7 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r0 = new org.apache.tools.ant.Target;

        specialinvoke $r0.<org.apache.tools.ant.Target: void <init>()>();

        $r2 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        virtualinvoke $r0.<org.apache.tools.ant.Target: void setProject(org.apache.tools.ant.Project)>($r2);

        $r3 = new org.apache.tools.ant.Location;

        $r4 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        $r5 = virtualinvoke $r4.<org.apache.tools.ant.helper.AntXMLContext: org.xml.sax.Locator getLocator()>();

        specialinvoke $r3.<org.apache.tools.ant.Location: void <init>(org.xml.sax.Locator)>($r5);

        virtualinvoke $r0.<org.apache.tools.ant.Target: void setLocation(org.apache.tools.ant.Location)>($r3);

     label1:
        $r10 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$TargetHandler antTargetHandler>;

        $r9 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        virtualinvoke $r10.<org.apache.tools.ant.helper.ProjectHelper2$TargetHandler: void onStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.apache.tools.ant.helper.AntXMLContext)>(r6, r7, r7, r8, $r9);

        $r11 = virtualinvoke r1.<groovy.util.AntBuilder: org.apache.tools.ant.Project getProject()>();

        $r12 = virtualinvoke $r11.<org.apache.tools.ant.Project: java.util.Hashtable getTargets()>();

        $r13 = interfaceinvoke r8.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r14 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r13);

        r31 = (org.apache.tools.ant.Target) $r14;

        $r15 = new java.util.Vector;

        specialinvoke $r15.<java.util.Vector: void <init>()>();

        $r16 = virtualinvoke r31.<org.apache.tools.ant.Target: java.util.Enumeration getDependencies()>();

     label2:
        $z0 = interfaceinvoke $r16.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r19 = interfaceinvoke $r16.<java.util.Enumeration: java.lang.Object nextElement()>();

        r20 = (java.lang.String) $r19;

        $r21 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        $r22 = virtualinvoke $r21.<org.apache.tools.ant.Project: java.util.Hashtable getTargets()>();

        $r23 = virtualinvoke $r22.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r20);

        virtualinvoke $r15.<java.util.Vector: boolean add(java.lang.Object)>($r23);

        goto label2;

     label3:
        $r17 = virtualinvoke r1.<groovy.util.AntBuilder: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r17.<org.apache.tools.ant.Project: void executeSortedTargets(java.util.Vector)>($r15);

        $r18 = r1.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        virtualinvoke $r18.<org.apache.tools.ant.helper.AntXMLContext: void setCurrentTarget(org.apache.tools.ant.Target)>(r31);

     label4:
        return r31;

     label5:
        $r24 := @caughtexception;

        $r26 = r1.<groovy.util.AntBuilder: java.util.logging.Logger log>;

        $r27 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r24);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r27, $r30, $r24);

        return null;

        catch org.xml.sax.SAXParseException from label1 to label4 with label5;
    }

    protected void setText(java.lang.Object, java.lang.String)
    {
        org.apache.tools.ant.helper.ProjectHelper2$ElementHandler $r4;
        java.util.logging.Level $r8;
        java.lang.StringBuffer $r6, $r9, $r11, $r12, $r13;
        org.apache.tools.ant.helper.AntXMLContext $r3;
        int $i0;
        java.lang.String r0, $r14;
        java.util.logging.Logger $r7;
        org.xml.sax.SAXParseException $r5;
        groovy.util.AntBuilder r2;
        char[] $r1;
        java.lang.Object r10;

        r2 := @this: groovy.util.AntBuilder;

        r10 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label1:
        $r4 = r2.<groovy.util.AntBuilder: org.apache.tools.ant.helper.ProjectHelper2$ElementHandler antElementHandler>;

        $i0 = lengthof $r1;

        $r3 = r2.<groovy.util.AntBuilder: org.apache.tools.ant.helper.AntXMLContext antXmlContext>;

        virtualinvoke $r4.<org.apache.tools.ant.helper.ProjectHelper2$ElementHandler: void characters(char[],int,int,org.apache.tools.ant.helper.AntXMLContext)>($r1, 0, $i0, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = r2.<groovy.util.AntBuilder: java.util.logging.Logger log>;

        $r8 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SetText failed: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Reason: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, $r14, $r5);

     label4:
        return;

        catch org.xml.sax.SAXParseException from label1 to label2 with label3;
    }

    public org.apache.tools.ant.Project getAntProject()
    {
        org.apache.tools.ant.Project $r1;
        groovy.util.AntBuilder r0;

        r0 := @this: groovy.util.AntBuilder;

        $r1 = r0.<groovy.util.AntBuilder: org.apache.tools.ant.Project project>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1, $r2;

        $r0 = newarray (java.lang.Class)[1];

        $r1 = <groovy.util.AntBuilder: java.lang.Class class$java$lang$String>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <groovy.util.AntBuilder: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.AntBuilder: java.lang.Class class$java$lang$String> = $r2;

        goto label2;

     label1:
        $r2 = <groovy.util.AntBuilder: java.lang.Class class$java$lang$String>;

     label2:
        $r0[0] = $r2;

        <groovy.util.AntBuilder: java.lang.Class[] ADD_TASK_PARAM_TYPES> = $r0;

        return;
    }
}
