public abstract class org.apache.poi.hwpf.model.types.FLDAbstractType extends java.lang.Object implements org.apache.poi.hdf.model.hdftypes.HDFType
{
    protected byte field_1_chHolder;
    private static org.apache.poi.util.BitField ch;
    private static org.apache.poi.util.BitField reserved;
    protected byte field_2_flt;
    private static org.apache.poi.util.BitField fDiffer;
    private static org.apache.poi.util.BitField fZombieEmbed;
    private static org.apache.poi.util.BitField fResultDirty;
    private static org.apache.poi.util.BitField fResultEdited;
    private static org.apache.poi.util.BitField fLocked;
    private static org.apache.poi.util.BitField fPrivateResult;
    private static org.apache.poi.util.BitField fNested;
    private static org.apache.poi.util.BitField fHasSep;

    public void <init>()
    {
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        byte $b2, $b4;
        int i0, $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $b2 = r1[$i1];

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder> = $b2;

        $i3 = 1 + i0;

        $b4 = r1[$i3];

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b4;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        byte $b1, $b3;
        int i0, $i2, $i4;
        org.apache.poi.hwpf.model.types.FLDAbstractType r1;

        r1 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $b1 = r1.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        r0[$i2] = $b1;

        $i4 = 1 + i0;

        $b3 = r1.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        r0[$i4] = $b3;

        return;
    }

    public java.lang.String toString()
    {
        byte $b0, $b1, $b2, $b3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27;
        int $i4, $i5, $i6, $i7;
        java.lang.String $r26;

        r2 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[FLD]\n");

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .chHolder             = ");

        $r1 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte getChHolder()>();

        $i4 = (int) $b0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )\n");

        $r4 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .ch                       = ");

        $b1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte getCh()>();

        $i5 = (int) $b1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r6 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .reserved                 = ");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte getReserved()>();

        $i6 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .flt                  = ");

        $r8 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte getFlt()>();

        $i7 = (int) $b3;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )\n");

        $r10 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fDiffer                  = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFDiffer()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r12 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fZombieEmbed             = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFZombieEmbed()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r14 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fResultDirty             = ");

        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFResultDirty()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r16 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fResultEdited            = ");

        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFResultEdited()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z3);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r18 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fLocked                  = ");

        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFLocked()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z4);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r20 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fPrivateResult           = ");

        $z5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFPrivateResult()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z5);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r22 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fNested                  = ");

        $z6 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFNested()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z6);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r24 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fHasSep                  = ");

        $z7 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.FLDAbstractType: boolean isFHasSep()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z7);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/FLD]\n");

        $r26 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r26;
    }

    public static int getSize()
    {
        return 6;
    }

    public byte getChHolder()
    {
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        byte $b0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        return $b0;
    }

    public void setChHolder(byte)
    {
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        byte b0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder> = b0;

        return;
    }

    public byte getFlt()
    {
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        byte $b0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        return $b0;
    }

    public void setFlt(byte)
    {
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        byte b0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = b0;

        return;
    }

    public void setCh(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField ch>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder> = $b3;

        return;
    }

    public byte getCh()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField ch>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setReserved(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        int $i2, $i4, $i5;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField reserved>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder> = $b3;

        return;
    }

    public byte getReserved()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField reserved>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_1_chHolder>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setFDiffer(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fDiffer>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFDiffer()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fDiffer>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFZombieEmbed(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fZombieEmbed>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFZombieEmbed()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fZombieEmbed>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFResultDirty(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultDirty>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFResultDirty()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultDirty>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFResultEdited(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultEdited>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFResultEdited()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultEdited>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFLocked(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fLocked>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFLocked()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fLocked>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFPrivateResult(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fPrivateResult>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFPrivateResult()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fPrivateResult>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFNested(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fNested>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFNested()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fNested>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFHasSep(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        int $i1, $i3;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fHasSep>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt> = $b2;

        return;
    }

    public boolean isFHasSep()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        org.apache.poi.hwpf.model.types.FLDAbstractType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.FLDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fHasSep>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.FLDAbstractType: byte field_2_flt>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(31);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField ch> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(224);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField reserved> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(1);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fDiffer> = $r2;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(2);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fZombieEmbed> = $r3;

        $r4 = new org.apache.poi.util.BitField;

        specialinvoke $r4.<org.apache.poi.util.BitField: void <init>(int)>(4);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultDirty> = $r4;

        $r5 = new org.apache.poi.util.BitField;

        specialinvoke $r5.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fResultEdited> = $r5;

        $r6 = new org.apache.poi.util.BitField;

        specialinvoke $r6.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fLocked> = $r6;

        $r7 = new org.apache.poi.util.BitField;

        specialinvoke $r7.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fPrivateResult> = $r7;

        $r8 = new org.apache.poi.util.BitField;

        specialinvoke $r8.<org.apache.poi.util.BitField: void <init>(int)>(64);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fNested> = $r8;

        $r9 = new org.apache.poi.util.BitField;

        specialinvoke $r9.<org.apache.poi.util.BitField: void <init>(int)>(64);

        <org.apache.poi.hwpf.model.types.FLDAbstractType: org.apache.poi.util.BitField fHasSep> = $r9;

        return;
    }
}
