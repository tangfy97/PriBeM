public class org.waveprotocol.wave.model.document.operation.impl.DocOpUtil extends java.lang.Object
{
    public static final java.lang.String PI_TARGET;

    private void <init>()
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.document.operation.DocInitialization asInitialization(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$1 $r1;
        org.waveprotocol.wave.model.document.operation.DocOp r0;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r2;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $z0 = r0 instanceof org.waveprotocol.wave.model.document.operation.DocInitialization;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocInitialization) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$1: void <init>(org.waveprotocol.wave.model.document.operation.DocOp)>(r0);

        return $r1;
    }

    public static java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocOpCursor createConciseStringBuilder(org.waveprotocol.wave.model.document.operation.DocOp,java.lang.StringBuilder)>(r1, $r0);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOpCursor createConciseStringBuilder(org.waveprotocol.wave.model.document.operation.DocOp, java.lang.StringBuilder)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r2;
        java.lang.StringBuilder r1;
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$2 $r0;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r1 := @parameter1: java.lang.StringBuilder;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$2;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$2: void <init>(java.lang.StringBuilder)>(r1);

        return $r0;
    }

    public static java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.Attributes)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.waveprotocol.wave.model.document.operation.Attributes r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r5, $r7, $r9;
        java.lang.String $r4, $r8, $r10, $r11;
        boolean $z0, $z1, z2;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.Attributes: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        z2 = 1;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        if z2 == 0 goto label3;

        z2 = 0;

        goto label4;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r10);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label2;

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        int $i0, $i1, i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if $i0 != 0 goto label1;

        return "{}";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        i2 = 0;

     label2:
        $i1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i2 >= $i1 goto label4;

        if i2 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i2);

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i2);

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i2 = i2 + 1;

        goto label2;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        int $i0, $i1, i2, i3;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean z0, z1, z2, z3;
        java.lang.StringBuilder $r0;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        z0 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        i2 = 0;

     label01:
        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if i2 >= $i0 goto label04;

        if z2 == 0 goto label02;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label03;

     label02:
        z0 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

     label03:
        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i2);

        $r9 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i2 = i2 + 1;

        goto label01;

     label04:
        i3 = 0;

     label05:
        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if i3 >= $i1 goto label08;

        if z3 == 0 goto label06;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label07;

     label06:
        z0 = 1;

        z3 = 1;

        z1 = 1;

     label07:
        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i3);

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getOldValue(int)>(i3);

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i3);

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i3 = i3 + 1;

        goto label05;

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        if z1 == 0 goto label09;

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r10 = "{}";

     label10:
        return $r10;
    }

    private static java.lang.String escapeLiteral(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "\\\\");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "\\\"");

        return $r2;
    }

    private static java.lang.String literalString(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String r0, $r3, $r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r6 = "null";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String escapeLiteral(java.lang.String)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r6;
    }

    public static java.lang.String toXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        int $i1;
        org.waveprotocol.wave.model.document.operation.DocInitialization r0;
        java.lang.String $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $i1 = (int) -1;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String toPrettyXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization,int)>(r0, $i1);

        return $r1;
    }

    public static java.lang.String toPrettyXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization, int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.DocInitialization r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: void buildXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization,int,java.lang.StringBuilder)>(r1, i0, $r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void buildXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization, int, java.lang.StringBuilder)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$3 $r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.DocInitialization r0;
        java.lang.StringBuilder r2;
        java.lang.RuntimeException $r3, $r4;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.StringBuilder;

     label1:
        $r1 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$3;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$3: void <init>(java.lang.StringBuilder)>(r2);

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocInitialization: void apply(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("toXmlString: DocInitialization was probably ill-formed", $r3);

        throw $r4;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static java.lang.String debugToXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.operation.OpCursorException $r2;
        org.waveprotocol.wave.model.document.operation.DocInitialization r0;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r1, $r5, $r8;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

     label1:
        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String toXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toXmlString: DocInitialization was internally broken. (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

        catch org.waveprotocol.wave.model.operation.OpCursorException from label1 to label2 with label3;
    }

    public static java.lang.String attributeString(org.waveprotocol.wave.model.document.operation.Attributes)
    {
        java.lang.String $r4, $r9, $r16, $r17, $r21, $r22;
        boolean $z0, z1;
        java.util.Map$Entry r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.waveprotocol.wave.model.document.operation.Attributes r1;
        java.lang.StringBuilder $r0, $r7, $r10, $r11, $r13, $r14, $r18, $r19, $r20;
        java.lang.Object $r5, $r8, $r12, $r15;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        z1 = 1;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        if z1 == 0 goto label2;

        z1 = 0;

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r12 != null goto label4;

        $r22 = "null";

        goto label5;

     label4:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.String) $r15;

        $r17 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String xmlAttrEscape(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        goto label1;

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String xmlAttrEscape(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"", "&quot;");

        return $r1;
    }

    public static java.lang.String xmlTextEscape(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&", "&amp;");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<", "&lt;");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(">", "&gt;");

        return $r3;
    }

    public static java.lang.String annotationEscape(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "\\\\");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "\\\"");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("?", "\\q");

        return $r3;
    }

    public static java.lang.String xmlTextUnEscape(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&gt;", ">");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&lt;", "<");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&amp;", "&");

        return $r3;
    }

    public static java.lang.String annotationUnEscape(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\q", "?");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\"", "\"");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\\", "\\");

        return $r3;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp normalize(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp r3, $r5;
        java.lang.Object $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer $r0;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        $r1 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer: void <init>()>();

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r2);

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $r4 = interfaceinvoke $r0.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        $r5 = (org.waveprotocol.wave.model.document.operation.DocOp) $r4;

        return $r5;
    }

    public static org.waveprotocol.wave.model.document.operation.DocInitialization normalize(org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer $r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r5;
        org.waveprotocol.wave.model.document.operation.DocInitialization r3, $r6;
        java.lang.Object $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer $r0;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r0 = new org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        $r1 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuffer: void <init>()>();

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r2);

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)>($r1);

        interfaceinvoke r3.<org.waveprotocol.wave.model.document.operation.DocInitialization: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $r4 = interfaceinvoke $r0.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        $r5 = (org.waveprotocol.wave.model.document.operation.DocOp) $r4;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocInitialization asInitialization(org.waveprotocol.wave.model.document.operation.DocOp)>($r5);

        return $r6;
    }

    public static int initialDocumentLength(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        int[] $r0;
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        int $i0;
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$4 $r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = newarray (int)[1];

        $r0[0] = 0;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$4;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$4: void <init>(int[])>($r0);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r2);

        $i0 = $r0[0];

        return $i0;
    }

    public static int resultingDocumentLength(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        int[] $r0;
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        int $i0;
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$5 $r2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r0 = newarray (int)[1];

        $r0[0] = 0;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$5;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$5: void <init>(int[])>($r0);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r2);

        $i0 = $r0[0];

        return $i0;
    }

    public static java.lang.String[] visualiseOpWithDocument(org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.document.operation.DocOp r6;
        java.lang.String[] $r11;
        java.lang.StringBuilder[] $r3;
        int $i0, $i2;
        java.lang.String $r12, $r13, $r14;
        org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer $r18;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r7;
        org.waveprotocol.wave.model.document.operation.DocInitialization r4, $r5, $r10;
        org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$6 $r19;
        java.lang.StringBuilder $r15, $r16, $r17;

        r4 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r6 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.StringBuilder)[3];

        $r3[0] = $r15;

        $r3[1] = $r16;

        $r3[2] = $r17;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp: org.waveprotocol.wave.model.document.operation.DocInitialization explode(org.waveprotocol.wave.model.document.operation.DocInitialization)>(r4);

        $i0 = interfaceinvoke $r5.<org.waveprotocol.wave.model.document.operation.DocInitialization: int size()>();

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocOpCursor createConciseStringBuilder(org.waveprotocol.wave.model.document.operation.DocOp,java.lang.StringBuilder)>(r6, $r16);

        $r18 = new org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer;

        specialinvoke $r18.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer: void <init>()>();

        $r19 = new org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$6;

        specialinvoke $r19.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$6: void <init>(java.lang.StringBuilder,int,org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer,java.lang.StringBuilder[],org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r17, $i0, $r5, $r18, $r3, r6, $r7);

        virtualinvoke $r19.<org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$6: void run()>();

        $r10 = virtualinvoke $r18.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer: org.waveprotocol.wave.model.document.operation.DocInitialization finish()>();

        $i2 = (int) -1;

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: void buildXmlString(org.waveprotocol.wave.model.document.operation.DocInitialization,int,java.lang.StringBuilder)>($r10, $i2, $r15);

        $r11 = newarray (java.lang.String)[3];

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r12;

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[1] = $r13;

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[2] = $r14;

        return $r11;
    }

    public static org.waveprotocol.wave.model.document.operation.DocInitialization docInitializationFromXml(java.lang.String) throws org.waveprotocol.wave.model.document.parser.XmlParseException
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r3;
        org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder $r2;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap $r13;
        org.waveprotocol.wave.model.util.StringMap $r22;
        int[] $r5;
        int $i0, $i1;
        java.lang.String r0, $r7, $r9, $r10, r17, r19, $r20, $r21;
        org.waveprotocol.wave.model.document.parser.XmlPullParser $r1;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder $r8;
        java.util.Iterator $r12;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r4;
        org.waveprotocol.wave.model.util.Pair r15;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r23;
        java.util.List $r11;
        org.waveprotocol.wave.model.document.parser.ItemType $r6;
        java.lang.Object $r14, $r16, $r18;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.parser.XmlParserFactory: org.waveprotocol.wave.model.document.parser.XmlPullParser unbuffered(java.lang.String)>(r0);

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: void <init>()>();

     label01:
        $z2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r5 = <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil$7: int[] $SwitchMap$org$waveprotocol$wave$model$document$parser$ItemType>;

        $r6 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: org.waveprotocol.wave.model.document.parser.ItemType next()>();

        $i0 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.parser.ItemType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            default: goto label10;
        };

     label02:
        $r21 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: java.lang.String getTagName()>();

        $r22 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: org.waveprotocol.wave.model.util.StringMap getAttributes()>();

        $r23 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl fromStringMap(org.waveprotocol.wave.model.util.ReadableStringMap)>($r22);

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r21, $r23);

        goto label01;

     label03:
        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder elementEnd()>();

        goto label01;

     label04:
        $r20 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: java.lang.String getText()>();

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder characters(java.lang.String)>($r20);

        goto label01;

     label05:
        $r7 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: java.lang.String getProcessingInstructionName()>();

        $r8 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        specialinvoke $r8.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: void <init>()>();

        $r9 = "a";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label01;

        $r10 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.parser.XmlPullParser: java.lang.String getProcessingInstructionValue()>();

        $r11 = staticinvoke <org.waveprotocol.wave.model.document.parser.AnnotationParser: java.util.List parseAnnotations(java.lang.String)>($r10);

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.waveprotocol.wave.model.util.Pair) $r14;

        $r16 = r15.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        r17 = (java.lang.String) $r16;

        $r18 = r15.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        r19 = (java.lang.String) $r18;

        if r19 != null goto label07;

        virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder end(java.lang.String)>(r17);

        goto label08;

     label07:
        virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder change(java.lang.String,java.lang.String,java.lang.String)>(r17, null, r19);

     label08:
        goto label06;

     label09:
        $r13 = virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap build()>();

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>($r13);

        goto label01;

     label10:
        goto label01;

     label11:
        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: org.waveprotocol.wave.model.document.operation.DocInitialization asInitialization(org.waveprotocol.wave.model.document.operation.DocOp)>($r3);

        return $r4;
    }

    static java.lang.String access$000(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String literalString(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String PI_TARGET> = "a";

        return;
    }
}
