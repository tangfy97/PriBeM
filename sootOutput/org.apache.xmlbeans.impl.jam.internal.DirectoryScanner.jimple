public class org.apache.xmlbeans.impl.jam.internal.DirectoryScanner extends java.lang.Object
{
    private boolean mCaseSensitive;
    private java.io.File mRoot;
    private org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger;
    private java.util.List mIncludeList;
    private java.util.List mExcludeList;
    private java.lang.String[] mIncludes;
    private java.lang.String[] mExcludes;
    private java.util.Vector mFilesIncluded;
    private java.util.Vector mDirsIncluded;
    private boolean mIsDirty;
    private java.lang.String[] mIncludedFilesCache;

    public void <init>(java.io.File, org.apache.xmlbeans.impl.jam.provider.JamLogger)
    {
        org.apache.xmlbeans.impl.jam.provider.JamLogger r1;
        java.lang.IllegalArgumentException $r3;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        java.io.File r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r2 := @parameter0: java.io.File;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.provider.JamLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mCaseSensitive> = 1;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mIsDirty> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache> = null;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null logger");

        throw $r3;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger> = r1;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.io.File mRoot> = r2;

        return;
    }

    public void include(java.lang.String)
    {
        java.util.List $r1, $r3;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList> = $r4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mIsDirty> = 1;

        return;
    }

    public void exclude(java.lang.String)
    {
        java.util.List $r1, $r3;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList> = $r4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mIsDirty> = 1;

        return;
    }

    public java.lang.String[] getIncludedFiles() throws java.io.IOException
    {
        java.lang.String[] $r4, $r5, $r7, $r12, $r13, r14, r15;
        java.util.Vector $r3, $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r1, $r2, $r8, $r9, $r10, $r11;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mIsDirty>;

        if $z0 != 0 goto label1;

        $r12 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache>;

        if $r12 == null goto label1;

        $r13 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache>;

        return $r13;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList>;

        if $r1 == null goto label2;

        $r10 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList>;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        r14 = newarray (java.lang.String)[$i2];

        $r11 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mIncludeList>;

        interfaceinvoke $r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r14);

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void setIncludes(java.lang.String[])>(r14);

        goto label3;

     label2:
        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void setIncludes(java.lang.String[])>(null);

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList>;

        if $r2 == null goto label4;

        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        r15 = newarray (java.lang.String)[$i1];

        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.List mExcludeList>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r15);

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void setExcludes(java.lang.String[])>(r15);

        goto label5;

     label4:
        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void setExcludes(java.lang.String[])>(null);

     label5:
        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void scan()>();

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mFilesIncluded>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache> = $r4;

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mFilesIncluded>;

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache>;

        virtualinvoke $r6.<java.util.Vector: void copyInto(java.lang.Object[])>($r5);

        $r7 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludedFilesCache>;

        return $r7;
    }

    public void setDirty()
    {
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mIsDirty> = 1;

        return;
    }

    public java.io.File getRoot()
    {
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.io.File mRoot>;

        return $r1;
    }

    private void setIncludes(java.lang.String[])
    {
        java.lang.String[] r0, $r2, $r7;
        java.lang.StringBuffer $r8, $r9, $r10;
        int $i0, $i1, i4;
        java.lang.String $r3, $r4, $r5, $r6, r11;
        boolean $z0;
        char $c2, $c3;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes> = null;

        goto label4;

     label1:
        $i0 = lengthof r0;

        $r2 = newarray (java.lang.String)[$i0];

        r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes> = $r2;

        i4 = 0;

     label2:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label4;

        $r3 = r0[i4];

        $c2 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, $c2);

        $c3 = <java.io.File: char separatorChar>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(92, $c3);

        r11 = $r5;

        $r6 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("**");

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r7 = r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $r7[i4] = r11;

        i4 = i4 + 1;

        goto label2;

     label4:
        return;
    }

    private void setExcludes(java.lang.String[])
    {
        java.lang.String[] r0, $r2, $r7;
        java.lang.StringBuffer $r8, $r9, $r10;
        int $i0, $i1, i4;
        java.lang.String $r3, $r4, $r5, $r6, r11;
        boolean $z0;
        char $c2, $c3;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes> = null;

        goto label4;

     label1:
        $i0 = lengthof r0;

        $r2 = newarray (java.lang.String)[$i0];

        r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes> = $r2;

        i4 = 0;

     label2:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label4;

        $r3 = r0[i4];

        $c2 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, $c2);

        $c3 = <java.io.File: char separatorChar>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(92, $c3);

        r11 = $r5;

        $r6 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("**");

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r7 = r1.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes>;

        $r7[i4] = r11;

        i4 = i4 + 1;

        goto label2;

     label4:
        return;
    }

    private void scan() throws java.lang.IllegalStateException, java.io.IOException
    {
        java.lang.String[] $r1, $r2, $r6, $r7, $r8;
        java.io.File $r9;
        java.util.Vector $r3, $r4, $r5;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        if $r1 != null goto label1;

        $r7 = newarray (java.lang.String)[1];

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes> = $r7;

        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $r8[0] = "**";

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes>;

        if $r2 != null goto label2;

        $r6 = newarray (java.lang.String)[0];

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes> = $r6;

     label2:
        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mFilesIncluded> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mDirsIncluded> = $r4;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isIncluded(java.lang.String)>("");

        if $z0 == 0 goto label3;

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isExcluded(java.lang.String)>("");

        if $z1 != 0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mDirsIncluded>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>("");

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.io.File mRoot>;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)>($r9, "", 1);

        return;
    }

    private void scandir(java.io.File, java.lang.String, boolean) throws java.io.IOException
    {
        java.util.Vector $r20, $r34;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        java.lang.StringBuffer $r4, $r6, $r8, $r13, $r15, $r16, $r17, $r18, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r32, $r36, $r37, $r39, $r41, $r43, $r44, $r47, $r48, $r50, $r52, $r54, $r55, $r56, $r57, $r58;
        java.lang.String r5, $r7, $r9, $r11, $r19, $r28, $r31, $r33, $r38, $r40, $r45, $r49, $r51, $r59;
        java.io.IOException $r46;
        java.io.File r2, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r1, $r12, $r14, $r21, $r23, $r35, $r42, $r53;
        java.lang.String[] $r3;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r2 := @parameter0: java.io.File;

        r5 := @parameter1: java.lang.String;

        z9 := @parameter2: boolean;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r53 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[DirectoryScanner] scanning dir ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for \'");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r53.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r59);

     label1:
        $r3 = virtualinvoke r2.<java.io.File: java.lang.String[] list()>();

        if $r3 != null goto label2;

        $r46 = new java.io.IOException;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IO error scanning directory ");

        $r49 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r51);

        throw $r46;

     label2:
        i1 = 0;

     label3:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label9;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = $r3[i1];

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = new java.io.File;

        $r11 = $r3[i1];

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r11);

        $z1 = virtualinvoke $r10.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label6;

        $z7 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isIncluded(java.lang.String)>($r9);

        if $z7 == 0 goto label5;

        $z10 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isExcluded(java.lang.String)>($r9);

        if $z10 != 0 goto label5;

        $r34 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mDirsIncluded>;

        virtualinvoke $r34.<java.util.Vector: void addElement(java.lang.Object)>($r9);

        $r35 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $z11 = interfaceinvoke $r35.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r0);

        if $z11 == 0 goto label4;

        $r42 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...including dir ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r42.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r45);

     label4:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r38 = <java.io.File: java.lang.String separator>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)>($r10, $r40, z9);

        goto label8;

     label5:
        $z8 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean couldHoldIncluded(java.lang.String)>($r9);

        if $z8 == 0 goto label8;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r31 = <java.io.File: java.lang.String separator>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)>($r10, $r33, z9);

        goto label8;

     label6:
        $z2 = virtualinvoke $r10.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label8;

        $z3 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isIncluded(java.lang.String)>($r9);

        if $z3 == 0 goto label8;

        $z4 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean isExcluded(java.lang.String)>($r9);

        if $z4 != 0 goto label7;

        $r20 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector mFilesIncluded>;

        virtualinvoke $r20.<java.util.Vector: void addElement(java.lang.Object)>($r9);

        $r21 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $z6 = interfaceinvoke $r21.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r0);

        if $z6 == 0 goto label8;

        $r23 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...including ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" under \'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r23.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r28);

        goto label8;

     label7:
        $r12 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $z5 = interfaceinvoke $r12.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r0);

        if $z5 == 0 goto label8;

        $r14 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: org.apache.xmlbeans.impl.jam.provider.JamLogger mLogger>;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...EXCLUDING ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" under \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r19);

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        return;
    }

    private boolean isIncluded(java.lang.String)
    {
        java.lang.String[] $r1, $r2;
        int $i0, i1;
        java.lang.String r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r3 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $r4 = $r2[i1];

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mCaseSensitive>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean matchPath(java.lang.String,java.lang.String,boolean)>($r4, r3, $z0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean couldHoldIncluded(java.lang.String)
    {
        java.lang.String[] $r1, $r2;
        int $i0, i1;
        java.lang.String r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r3 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mIncludes>;

        $r4 = $r2[i1];

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mCaseSensitive>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean matchPatternStart(java.lang.String,java.lang.String,boolean)>($r4, r3, $z0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isExcluded(java.lang.String)
    {
        java.lang.String[] $r1, $r2;
        int $i0, i1;
        java.lang.String r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.DirectoryScanner r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.DirectoryScanner;

        r3 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.lang.String[] mExcludes>;

        $r4 = $r2[i1];

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean mCaseSensitive>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean matchPath(java.lang.String,java.lang.String,boolean)>($r4, r3, $z0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static boolean matchPatternStart(java.lang.String, java.lang.String, boolean)
    {
        java.util.Vector $r4, $r5;
        int $i0, i1, $i2, i3, i4, i5;
        java.lang.String r0, $r1, r2, $r3, r7, $r9;
        boolean $z0, $z1, $z2, z3, $z4;
        java.lang.Object $r6, $r8;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        z3 := @parameter2: boolean;

        $r1 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        $r3 = <java.io.File: java.lang.String separator>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == $z1 goto label1;

        return 0;

     label1:
        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector tokenizePath(java.lang.String)>(r2);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector tokenizePath(java.lang.String)>(r0);

        i4 = 0;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        i5 = 0;

        $i2 = virtualinvoke $r5.<java.util.Vector: int size()>();

        i3 = $i2 - 1;

     label2:
        if i4 > i1 goto label5;

        if i5 > i3 goto label5;

        $r6 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        r7 = (java.lang.String) $r6;

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z2 == 0 goto label3;

        goto label5;

     label3:
        $r8 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        $r9 = (java.lang.String) $r8;

        $z4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean match(java.lang.String,java.lang.String,boolean)>(r7, $r9, z3);

        if $z4 != 0 goto label4;

        return 0;

     label4:
        i4 = i4 + 1;

        i5 = i5 + 1;

        goto label2;

     label5:
        if i5 <= i3 goto label6;

        return 1;

     label6:
        if i4 <= i1 goto label7;

        return 0;

     label7:
        return 1;
    }

    private static boolean matchPath(java.lang.String, java.lang.String, boolean)
    {
        java.util.Vector $r4, $r5;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, $i25, $i27, $i29, $i31, $i33;
        java.lang.String r0, $r1, r2, $r3, r8, r10, $r15, $r19, r20, r21;
        java.lang.Object $r6, $r7, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        z3 := @parameter2: boolean;

        $r1 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        $r3 = <java.io.File: java.lang.String separator>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == $z1 goto label01;

        return 0;

     label01:
        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector tokenizePath(java.lang.String)>(r2);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: java.util.Vector tokenizePath(java.lang.String)>(r0);

        i11 = 0;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i12 = $i0 - 1;

        i13 = 0;

        $i1 = virtualinvoke $r5.<java.util.Vector: int size()>();

        i14 = $i1 - 1;

     label02:
        if i11 > i12 goto label05;

        if i13 > i14 goto label05;

        $r17 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i11);

        r20 = (java.lang.String) $r17;

        $z10 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z10 == 0 goto label03;

        goto label05;

     label03:
        $r18 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i13);

        $r19 = (java.lang.String) $r18;

        $z11 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean match(java.lang.String,java.lang.String,boolean)>(r20, $r19, z3);

        if $z11 != 0 goto label04;

        return 0;

     label04:
        i11 = i11 + 1;

        i13 = i13 + 1;

        goto label02;

     label05:
        if i13 <= i14 goto label09;

        i15 = i11;

     label06:
        if i15 > i12 goto label08;

        $r16 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i15);

        $z9 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>("**");

        if $z9 != 0 goto label07;

        return 0;

     label07:
        i15 = i15 + 1;

        goto label06;

     label08:
        return 1;

     label09:
        if i11 <= i12 goto label10;

        return 0;

     label10:
        if i11 > i12 goto label13;

        if i13 > i14 goto label13;

        $r13 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i12);

        r21 = (java.lang.String) $r13;

        $z7 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z7 == 0 goto label11;

        goto label13;

     label11:
        $r14 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i14);

        $r15 = (java.lang.String) $r14;

        $z8 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean match(java.lang.String,java.lang.String,boolean)>(r21, $r15, z3);

        if $z8 != 0 goto label12;

        return 0;

     label12:
        $i25 = (int) -1;

        i12 = i12 + $i25;

        $i27 = (int) -1;

        i14 = i14 + $i27;

        goto label10;

     label13:
        if i13 <= i14 goto label17;

        i16 = i11;

     label14:
        if i16 > i12 goto label16;

        $r12 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i16);

        $z6 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>("**");

        if $z6 != 0 goto label15;

        return 0;

     label15:
        i16 = i16 + 1;

        goto label14;

     label16:
        return 1;

     label17:
        if i11 == i12 goto label29;

        if i13 > i14 goto label29;

        $i29 = (int) -1;

        i17 = $i29;

        i18 = i11 + 1;

     label18:
        if i18 > i12 goto label20;

        $r11 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i18);

        $z5 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>("**");

        if $z5 == 0 goto label19;

        i17 = i18;

        goto label20;

     label19:
        i18 = i18 + 1;

        goto label18;

     label20:
        $i2 = i11 + 1;

        if i17 != $i2 goto label21;

        i11 = i11 + 1;

        goto label17;

     label21:
        $i3 = i17 - i11;

        i19 = $i3 - 1;

        $i4 = i14 - i13;

        i5 = $i4 + 1;

        $i31 = (int) -1;

        i20 = $i31;

        i21 = 0;

     label22:
        $i6 = i5 - i19;

        if i21 > $i6 goto label27;

        i22 = 0;

     label23:
        if i22 >= i19 goto label25;

        $i7 = i11 + i22;

        $i8 = $i7 + 1;

        $r7 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>($i8);

        r8 = (java.lang.String) $r7;

        $i9 = i13 + i21;

        $i10 = $i9 + i22;

        $r9 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i10);

        r10 = (java.lang.String) $r9;

        $z4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean match(java.lang.String,java.lang.String,boolean)>(r8, r10, z3);

        if $z4 != 0 goto label24;

        goto label26;

     label24:
        i22 = i22 + 1;

        goto label23;

     label25:
        i20 = i13 + i21;

        goto label27;

     label26:
        i21 = i21 + 1;

        goto label22;

     label27:
        $i33 = (int) -1;

        if i20 != $i33 goto label28;

        return 0;

     label28:
        i11 = i17;

        i13 = i20 + i19;

        goto label17;

     label29:
        i23 = i11;

     label30:
        if i23 > i12 goto label32;

        $r6 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i23);

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>("**");

        if $z2 != 0 goto label31;

        return 0;

     label31:
        i23 = i23 + 1;

        goto label30;

     label32:
        return 1;
    }

    private static boolean match(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r2;
        char[] $r1, $r3;
        boolean z0, z1;
        int $i0, $i1, $i2, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i14, $i15, $i18, $i19, i37, i38, i39, i40, i41, i42, i44, i45, i46, i47, i48, i49, i50, i51, i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i74, $i76, $i77, $i79, $i80, $i82, $i83, $i84, $i85, $i86, $i87, $i89, $i90;
        char $c3, $c4, $c5, $c13, $c16, $c17, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c36, c43, c52;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i37 = 0;

        $i0 = lengthof $r1;

        i38 = $i0 - 1;

        i39 = 0;

        $i1 = lengthof $r3;

        i40 = $i1 - 1;

        z1 = 0;

        i41 = 0;

     label01:
        $i2 = lengthof $r1;

        if i41 >= $i2 goto label03;

        $c36 = $r1[i41];

        $i54 = (int) $c36;

        if $i54 != 42 goto label02;

        z1 = 1;

        goto label03;

     label02:
        i41 = i41 + 1;

        goto label01;

     label03:
        if z1 != 0 goto label09;

        if i38 == i40 goto label04;

        return 0;

     label04:
        i42 = 0;

     label05:
        if i42 > i38 goto label08;

        c43 = $r1[i42];

        $i55 = (int) c43;

        if $i55 == 63 goto label07;

        if z0 == 0 goto label06;

        $c35 = $r3[i42];

        $i56 = (int) c43;

        $i57 = (int) $c35;

        if $i56 == $i57 goto label06;

        return 0;

     label06:
        if z0 != 0 goto label07;

        $c32 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c43);

        $c33 = $r3[i42];

        $c34 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c33);

        $i58 = (int) $c32;

        $i59 = (int) $c34;

        if $i58 == $i59 goto label07;

        return 0;

     label07:
        i42 = i42 + 1;

        goto label05;

     label08:
        return 1;

     label09:
        if i38 != 0 goto label10;

        return 1;

     label10:
        $c3 = $r1[i37];

        $i60 = (int) $c3;

        if $i60 == 42 goto label13;

        if i39 > i40 goto label13;

        $i61 = (int) $c3;

        if $i61 == 63 goto label12;

        if z0 == 0 goto label11;

        $c31 = $r3[i39];

        $i62 = (int) $c3;

        $i63 = (int) $c31;

        if $i62 == $i63 goto label11;

        return 0;

     label11:
        if z0 != 0 goto label12;

        $c28 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

        $c29 = $r3[i39];

        $c30 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c29);

        $i64 = (int) $c28;

        $i65 = (int) $c30;

        if $i64 == $i65 goto label12;

        return 0;

     label12:
        i37 = i37 + 1;

        i39 = i39 + 1;

        goto label10;

     label13:
        if i39 <= i40 goto label17;

        i44 = i37;

     label14:
        if i44 > i38 goto label16;

        $c27 = $r1[i44];

        $i66 = (int) $c27;

        if $i66 == 42 goto label15;

        return 0;

     label15:
        i44 = i44 + 1;

        goto label14;

     label16:
        return 1;

     label17:
        $c4 = $r1[i38];

        $i67 = (int) $c4;

        if $i67 == 42 goto label20;

        if i39 > i40 goto label20;

        $i68 = (int) $c4;

        if $i68 == 63 goto label19;

        if z0 == 0 goto label18;

        $c26 = $r3[i40];

        $i69 = (int) $c4;

        $i70 = (int) $c26;

        if $i69 == $i70 goto label18;

        return 0;

     label18:
        if z0 != 0 goto label19;

        $c23 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $c24 = $r3[i40];

        $c25 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c24);

        $i71 = (int) $c23;

        $i72 = (int) $c25;

        if $i71 == $i72 goto label19;

        return 0;

     label19:
        $i74 = (int) -1;

        i38 = i38 + $i74;

        $i76 = (int) -1;

        i40 = i40 + $i76;

        goto label17;

     label20:
        if i39 <= i40 goto label24;

        i45 = i37;

     label21:
        if i45 > i38 goto label23;

        $c22 = $r1[i45];

        $i77 = (int) $c22;

        if $i77 == 42 goto label22;

        return 0;

     label22:
        i45 = i45 + 1;

        goto label21;

     label23:
        return 1;

     label24:
        if i37 == i38 goto label37;

        if i39 > i40 goto label37;

        $i79 = (int) -1;

        i46 = $i79;

        i47 = i37 + 1;

     label25:
        if i47 > i38 goto label27;

        $c21 = $r1[i47];

        $i80 = (int) $c21;

        if $i80 != 42 goto label26;

        i46 = i47;

        goto label27;

     label26:
        i47 = i47 + 1;

        goto label25;

     label27:
        $i6 = i37 + 1;

        if i46 != $i6 goto label28;

        i37 = i37 + 1;

        goto label24;

     label28:
        $i7 = i46 - i37;

        i48 = $i7 - 1;

        $i8 = i40 - i39;

        i9 = $i8 + 1;

        $i82 = (int) -1;

        i49 = $i82;

        i50 = 0;

     label29:
        $i10 = i9 - i48;

        if i50 > $i10 goto label35;

        i51 = 0;

     label30:
        if i51 >= i48 goto label33;

        $i11 = i37 + i51;

        $i12 = $i11 + 1;

        c52 = $r1[$i12];

        $i83 = (int) c52;

        if $i83 == 63 goto label32;

        if z0 == 0 goto label31;

        $i18 = i39 + i50;

        $i19 = $i18 + i51;

        $c20 = $r3[$i19];

        $i84 = (int) c52;

        $i85 = (int) $c20;

        if $i84 == $i85 goto label31;

        goto label34;

     label31:
        if z0 != 0 goto label32;

        $c13 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c52);

        $i14 = i39 + i50;

        $i15 = $i14 + i51;

        $c16 = $r3[$i15];

        $c17 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c16);

        $i86 = (int) $c13;

        $i87 = (int) $c17;

        if $i86 == $i87 goto label32;

        goto label34;

     label32:
        i51 = i51 + 1;

        goto label30;

     label33:
        i49 = i39 + i50;

        goto label35;

     label34:
        i50 = i50 + 1;

        goto label29;

     label35:
        $i89 = (int) -1;

        if i49 != $i89 goto label36;

        return 0;

     label36:
        i37 = i46;

        i39 = i49 + i48;

        goto label24;

     label37:
        i53 = i37;

     label38:
        if i53 > i38 goto label40;

        $c5 = $r1[i53];

        $i90 = (int) $c5;

        if $i90 == 42 goto label39;

        return 0;

     label39:
        i53 = i53 + 1;

        goto label38;

     label40:
        return 1;
    }

    private static java.util.Vector tokenizePath(java.lang.String)
    {
        java.util.Vector $r0;
        java.util.StringTokenizer $r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        $r3 = <java.io.File: java.lang.String separator>;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, $r3);

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }
}
