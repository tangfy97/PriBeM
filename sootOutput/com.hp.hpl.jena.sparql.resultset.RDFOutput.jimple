public class com.hp.hpl.jena.sparql.resultset.RDFOutput extends java.lang.Object
{
    private boolean reportAllVars;
    private boolean includeTypeProperties;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.resultset.RDFOutput r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean reportAllVars> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean includeTypeProperties> = 0;

        return;
    }

    public boolean getAllVars()
    {
        com.hp.hpl.jena.sparql.resultset.RDFOutput r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean reportAllVars>;

        return $z0;
    }

    public void setAllVars(boolean)
    {
        com.hp.hpl.jena.sparql.resultset.RDFOutput r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean reportAllVars> = z0;

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model toModel(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.rdf.model.Model $r0;
        com.hp.hpl.jena.sparql.resultset.RDFOutput r1;
        java.lang.String $r3, $r4, $r5, $r6;
        com.hp.hpl.jena.query.ResultSet r2;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        r2 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.RDFOutput: com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.query.ResultSet)>($r0, r2);

        $r3 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: java.lang.String getNsPrefixURI(java.lang.String)>("rs");

        if $r3 != null goto label1;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: java.lang.String getURI()>();

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("rs", $r6);

     label1:
        $r4 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: java.lang.String getNsPrefixURI(java.lang.String)>("rdf");

        if $r4 != null goto label2;

        $r5 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("rdf", $r5);

     label2:
        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.rdf.model.Property $r3, $r7, $r12, $r19, $r20, $r21, $r23, $r25, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.rdf.model.RDFNode $r18;
        com.hp.hpl.jena.query.ResultSet r4;
        java.util.List $r5, $r13;
        com.hp.hpl.jena.rdf.model.Literal $r8;
        com.hp.hpl.jena.sparql.resultset.RDFOutput r9;
        int i0;
        java.lang.String r17, r28;
        java.util.Iterator $r6, r14, $r29;
        com.hp.hpl.jena.rdf.model.Resource $r1, $r2, $r11, $r15, $r22, $r24;
        com.hp.hpl.jena.query.QuerySolution $r10;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.lang.Object $r16, $r26;

        r9 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r2 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Resource ResultSet>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, $r2);

        $r5 = interfaceinvoke r4.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r26 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r26;

        $r27 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property resultVariable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r27, r28);

        goto label01;

     label02:
        i0 = 0;

     label03:
        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z1 == 0 goto label11;

        i0 = i0 + 1;

        $r10 = interfaceinvoke r4.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $r11 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $z2 = r9.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean includeTypeProperties>;

        if $z2 == 0 goto label04;

        $r25 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r24 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Resource ResultSolution>;

        interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r25, $r24);

     label04:
        $r12 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property solution>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r12, $r11);

        $z3 = virtualinvoke r9.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean getAllVars()>();

        if $z3 == 0 goto label05;

        $r29 = interfaceinvoke $r10.<com.hp.hpl.jena.query.QuerySolution: java.util.Iterator varNames()>();

        goto label06;

     label05:
        $r13 = interfaceinvoke r4.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        $r29 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label06:
        r14 = $r29;

     label07:
        $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r15 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r16 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke $r10.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r17);

        if $r18 != null goto label08;

        goto label07;

     label08:
        $z4 = r9.<com.hp.hpl.jena.sparql.resultset.RDFOutput: boolean includeTypeProperties>;

        if $z4 == 0 goto label09;

        $r23 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r22 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Resource ResultBinding>;

        interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r23, $r22);

     label09:
        $r19 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property variable>;

        interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r19, r17);

        $r20 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property value>;

        interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r20, $r18);

        $r21 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property binding>;

        interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r21, $r15);

        goto label07;

     label10:
        goto label03;

     label11:
        $r7 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property size>;

        $r8 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r7, $r8);

        specialinvoke r9.<com.hp.hpl.jena.sparql.resultset.RDFOutput: void addPrefixes(com.hp.hpl.jena.rdf.model.Model)>(r0);

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Model toModel(boolean)
    {
        com.hp.hpl.jena.rdf.model.Model $r0;
        com.hp.hpl.jena.sparql.resultset.RDFOutput r1;
        boolean z0;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.RDFOutput: com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model,boolean)>($r0, z0);

        specialinvoke r1.<com.hp.hpl.jena.sparql.resultset.RDFOutput: void addPrefixes(com.hp.hpl.jena.rdf.model.Model)>($r0);

        return $r0;
    }

    private void addPrefixes(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.sparql.resultset.RDFOutput r6;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r6 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: java.lang.String getNsPrefixURI(java.lang.String)>("rs");

        if $r1 != null goto label1;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: java.lang.String getURI()>();

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("rs", $r5);

     label1:
        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: java.lang.String getNsPrefixURI(java.lang.String)>("rdf");

        if $r2 != null goto label2;

        $r4 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("rdf", $r4);

     label2:
        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: java.lang.String getNsPrefixURI(java.lang.String)>("xsd");

        if $r3 != null goto label3;

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("xsd", "http://www.w3.org/2001/XMLSchema#");

     label3:
        return;
    }

    public com.hp.hpl.jena.rdf.model.Resource asRDF(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.sparql.resultset.RDFOutput r6;
        com.hp.hpl.jena.rdf.model.Resource $r1, $r2;
        com.hp.hpl.jena.rdf.model.Property $r3, $r5;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        boolean z0;

        r6 := @this: com.hp.hpl.jena.sparql.resultset.RDFOutput;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r2 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Resource ResultSet>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, $r2);

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r5 = <com.hp.hpl.jena.sparql.vocabulary.ResultSetGraphVocab: com.hp.hpl.jena.rdf.model.Property p_boolean>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r5, $r4);

        return $r1;
    }
}
