public class com.hp.hpl.jena.update.UpdateFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.update.UpdateFactory r0;

        r0 := @this: com.hp.hpl.jena.update.UpdateFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.update.UpdateRequest create()
    {
        com.hp.hpl.jena.update.UpdateRequest $r0;

        $r0 = new com.hp.hpl.jena.update.UpdateRequest;

        specialinvoke $r0.<com.hp.hpl.jena.update.UpdateRequest: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.update.UpdateRequest create(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest create(java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest create(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest create(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r2;
        java.lang.String r0, r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest create(java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r3;
        java.lang.String r1, r2;
        com.hp.hpl.jena.update.UpdateRequest $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r0 = new com.hp.hpl.jena.update.UpdateRequest;

        specialinvoke $r0.<com.hp.hpl.jena.update.UpdateRequest: void <init>()>();

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r0, r1, r2, r3);

        return $r0;
    }

    private static void make(com.hp.hpl.jena.update.UpdateRequest, java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.sparql.modify.UpdateRequestSink $r4;
        com.hp.hpl.jena.query.Syntax r2;
        com.hp.hpl.jena.sparql.lang.UpdateParser $r3;
        java.lang.String r1, r5;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.sparql.lang.UpdateParser setupParser(com.hp.hpl.jena.sparql.core.Prologue,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2);

        $r4 = new com.hp.hpl.jena.sparql.modify.UpdateRequestSink;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateRequestSink: void <init>(com.hp.hpl.jena.update.UpdateRequest)>(r0);

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.lang.UpdateParser: void parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.lang.String)>($r4, r5);

        return;
    }

    public static void parse(com.hp.hpl.jena.update.UpdateRequest, java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.query.Syntax $r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, null, $r2);

        return;
    }

    public static void parse(com.hp.hpl.jena.update.UpdateRequest, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.String r1;
        com.hp.hpl.jena.query.Syntax r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, null, r2);

        return;
    }

    public static void parse(com.hp.hpl.jena.update.UpdateRequest, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r3;
        java.lang.String r1, r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, $r3);

        return;
    }

    public static void parse(com.hp.hpl.jena.update.UpdateRequest, java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r3;
        java.lang.String r1, r2;
        com.hp.hpl.jena.update.UpdateRequest r0;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.hp.hpl.jena.query.Syntax;

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, r3);

        return;
    }

    protected static com.hp.hpl.jena.sparql.lang.UpdateParser setupParser(com.hp.hpl.jena.sparql.core.Prologue, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r0, $r1, $r11;
        com.hp.hpl.jena.sparql.core.Prologue r3;
        com.hp.hpl.jena.n3.IRIResolver $r4, $r5;
        java.lang.String $r10, $r16, r18, r19;
        java.lang.UnsupportedOperationException $r6, $r12;
        java.lang.Exception $r17;
        com.hp.hpl.jena.sparql.lang.UpdateParser $r2;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15;

        r3 := @parameter0: com.hp.hpl.jena.sparql.core.Prologue;

        r18 := @parameter1: java.lang.String;

        r0 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxSPARQL_11>;

        if r0 == $r1 goto label1;

        $r11 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        if r0 == $r11 goto label1;

        $r12 = new java.lang.UnsupportedOperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized syntax for parsing update: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.sparql.lang.UpdateParser: com.hp.hpl.jena.sparql.lang.UpdateParser createParser(com.hp.hpl.jena.query.Syntax)>(r0);

        if $r2 != null goto label2;

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized syntax for parsing update: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r4 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.n3.IRIResolver getResolver()>();

        if $r4 != null goto label7;

     label3:
        r19 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String chooseBaseURI(java.lang.String)>(r18);

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        r19 = "http://localhost/defaultBase#";

     label6:
        $r5 = new com.hp.hpl.jena.n3.IRIResolver;

        specialinvoke $r5.<com.hp.hpl.jena.n3.IRIResolver: void <init>(java.lang.String)>(r19);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.core.Prologue: void setResolver(com.hp.hpl.jena.n3.IRIResolver)>($r5);

     label7:
        return $r2;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r2;
        java.lang.String r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, null, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax $r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.String r0;
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r2;
        java.lang.String r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        com.hp.hpl.jena.sparql.modify.UsingList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, null, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r2;
        java.lang.String r0, r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>(null, r0, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.lang.String, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r4;
        com.hp.hpl.jena.update.UpdateException $r6;
        com.hp.hpl.jena.update.UpdateRequest $r5;
        com.hp.hpl.jena.sparql.modify.UsingList r2;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r0, r3, $r10;
        boolean $z0;
        java.io.InputStream $r1, r11;

        r2 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.query.Syntax;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label1;

        r11 = <java.lang.System: java.io.InputStream in>;

        goto label2;

     label1:
        $r1 = staticinvoke <org.apache.jena.atlas.io.IO: java.io.InputStream openFile(java.lang.String)>(r0);

        r11 = $r1;

        if $r1 != null goto label2;

        $r6 = new com.hp.hpl.jena.update.UpdateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File could not be opened: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.hp.hpl.jena.update.UpdateException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r5 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r2, r11, r3, r4);

        return $r5;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream)
    {
        com.hp.hpl.jena.query.Syntax $r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream,com.hp.hpl.jena.query.Syntax)>(r0, $r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.io.InputStream)
    {
        com.hp.hpl.jena.query.Syntax $r2;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: java.io.InputStream;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,com.hp.hpl.jena.query.Syntax)>(r0, r1, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r1;
        com.hp.hpl.jena.update.UpdateRequest $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: com.hp.hpl.jena.query.Syntax;

        $r2 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, null, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.io.InputStream, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r2;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, null, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r2;
        java.lang.String r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, $r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.query.Syntax $r3;
        java.lang.String r2;
        com.hp.hpl.jena.update.UpdateRequest $r4;
        com.hp.hpl.jena.sparql.modify.UsingList r0;
        java.io.InputStream r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: java.lang.String;

        $r3 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax defaultUpdateSyntax>;

        $r4 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2, $r3);

        return $r4;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(java.io.InputStream, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r2;
        java.lang.String r1;
        com.hp.hpl.jena.update.UpdateRequest $r3;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>(null, r0, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.update.UpdateRequest read(com.hp.hpl.jena.sparql.modify.UsingList, java.io.InputStream, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.query.Syntax r4;
        java.lang.String r3;
        com.hp.hpl.jena.update.UpdateRequest $r0;
        com.hp.hpl.jena.sparql.modify.UsingList r1;
        java.io.InputStream r2;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.UsingList;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.query.Syntax;

        $r0 = new com.hp.hpl.jena.update.UpdateRequest;

        specialinvoke $r0.<com.hp.hpl.jena.update.UpdateRequest: void <init>()>();

        staticinvoke <com.hp.hpl.jena.update.UpdateFactory: void make(com.hp.hpl.jena.update.UpdateRequest,com.hp.hpl.jena.sparql.modify.UsingList,java.io.InputStream,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r0, r1, r2, r3, r4);

        return $r0;
    }

    private static void make(com.hp.hpl.jena.update.UpdateRequest, com.hp.hpl.jena.sparql.modify.UsingList, java.io.InputStream, java.lang.String, com.hp.hpl.jena.query.Syntax)
    {
        java.lang.Throwable $r8;
        com.hp.hpl.jena.query.Syntax r2;
        com.hp.hpl.jena.update.UpdateRequest r0;
        com.hp.hpl.jena.sparql.modify.UsingUpdateSink $r4;
        com.hp.hpl.jena.sparql.modify.UsingList r6;
        com.hp.hpl.jena.sparql.modify.UpdateRequestSink $r5;
        com.hp.hpl.jena.sparql.lang.UpdateParser $r3;
        java.lang.String r1;
        java.io.InputStream r7;

        r0 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r6 := @parameter1: com.hp.hpl.jena.sparql.modify.UsingList;

        r7 := @parameter2: java.io.InputStream;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: com.hp.hpl.jena.query.Syntax;

        $r3 = staticinvoke <com.hp.hpl.jena.update.UpdateFactory: com.hp.hpl.jena.sparql.lang.UpdateParser setupParser(com.hp.hpl.jena.sparql.core.Prologue,java.lang.String,com.hp.hpl.jena.query.Syntax)>(r0, r1, r2);

        $r4 = new com.hp.hpl.jena.sparql.modify.UsingUpdateSink;

        $r5 = new com.hp.hpl.jena.sparql.modify.UpdateRequestSink;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.modify.UpdateRequestSink: void <init>(com.hp.hpl.jena.update.UpdateRequest)>(r0);

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.UsingUpdateSink: void <init>(com.hp.hpl.jena.sparql.modify.UpdateSink,com.hp.hpl.jena.sparql.modify.UsingList)>($r5, r6);

     label1:
        virtualinvoke $r3.<com.hp.hpl.jena.sparql.lang.UpdateParser: void parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.io.InputStream)>($r4, r7);

     label2:
        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateSink: void close()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.modify.UpdateSink: void close()>();

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
