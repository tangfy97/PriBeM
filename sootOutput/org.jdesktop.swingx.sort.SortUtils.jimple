public class org.jdesktop.swingx.sort.SortUtils extends java.lang.Object
{

    public static javax.swing.RowSorter$SortKey getFirstSortingKey(java.util.List)
    {
        javax.swing.RowSorter$SortKey r3;
        javax.swing.SortOrder $r4;
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.swing.RowSorter$SortKey) $r2;

        $r4 = virtualinvoke r3.<javax.swing.RowSorter$SortKey: javax.swing.SortOrder getSortOrder()>();

        $z1 = staticinvoke <org.jdesktop.swingx.sort.SortUtils: boolean isSorted(javax.swing.SortOrder)>($r4);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static javax.swing.RowSorter$SortKey getFirstSortKeyForColumn(java.util.List, int)
    {
        javax.swing.RowSorter$SortKey r3;
        java.util.List r0;
        java.util.Iterator $r1;
        int $i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.swing.RowSorter$SortKey) $r2;

        $i0 = virtualinvoke r3.<javax.swing.RowSorter$SortKey: int getColumn()>();

        if $i0 != i1 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static javax.swing.RowSorter$SortKey removeFirstSortKeyForColumn(java.util.List, int)
    {
        javax.swing.RowSorter$SortKey r3;
        java.util.List r0;
        java.util.Iterator $r1;
        int $i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.swing.RowSorter$SortKey) $r2;

        $i0 = virtualinvoke r3.<javax.swing.RowSorter$SortKey: int getColumn()>();

        if $i0 != i1 goto label2;

        interfaceinvoke r0.<java.util.List: boolean remove(java.lang.Object)>(r3);

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static boolean isSorted(javax.swing.SortOrder)
    {
        javax.swing.SortOrder r0, $r1;
        boolean $z0;

        r0 := @parameter0: javax.swing.SortOrder;

        if r0 == null goto label1;

        $r1 = <javax.swing.SortOrder: javax.swing.SortOrder UNSORTED>;

        if $r1 == r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isAscending(javax.swing.SortOrder)
    {
        javax.swing.SortOrder r0, $r1;
        boolean $z0;

        r0 := @parameter0: javax.swing.SortOrder;

        $r1 = <javax.swing.SortOrder: javax.swing.SortOrder ASCENDING>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSorted(javax.swing.SortOrder, boolean)
    {
        javax.swing.SortOrder r0;
        boolean $z0, z1, $z2, $z3;

        r0 := @parameter0: javax.swing.SortOrder;

        z1 := @parameter1: boolean;

        $z0 = staticinvoke <org.jdesktop.swingx.sort.SortUtils: boolean isSorted(javax.swing.SortOrder)>(r0);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <org.jdesktop.swingx.sort.SortUtils: boolean isAscending(javax.swing.SortOrder)>(r0);

        if z1 != $z2 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private void <init>()
    {
        org.jdesktop.swingx.sort.SortUtils r0;

        r0 := @this: org.jdesktop.swingx.sort.SortUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
