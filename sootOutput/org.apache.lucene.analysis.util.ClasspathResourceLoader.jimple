public final class org.apache.lucene.analysis.util.ClasspathResourceLoader extends java.lang.Object implements org.apache.lucene.analysis.util.ResourceLoader
{
    private final java.lang.Class clazz;
    private final java.lang.ClassLoader loader;

    public void <init>()
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.lang.ClassLoader $r2;
        java.lang.Thread $r1;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        specialinvoke r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: void <init>(java.lang.ClassLoader)>($r2);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: void <init>(java.lang.Class,java.lang.ClassLoader)>(null, r1);

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.lang.Class r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: void <init>(java.lang.Class,java.lang.ClassLoader)>(r1, $r2);

        return;
    }

    private void <init>(java.lang.Class, java.lang.ClassLoader)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.lang.Class r1;
        java.lang.ClassLoader r2;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.Class clazz> = r1;

        r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.ClassLoader loader> = r2;

        return;
    }

    public java.io.InputStream openResource(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.io.IOException $r4;
        java.lang.Class $r1, $r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r2, $r8;
        java.lang.ClassLoader $r3;
        java.io.InputStream $r10;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.Class clazz>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.Class clazz>;

        $r10 = virtualinvoke $r9.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r2);

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.ClassLoader loader>;

        $r10 = virtualinvoke $r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r2);

     label2:
        if $r10 != null goto label3;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource not found: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        return $r10;
    }

    public java.lang.Class findClass(java.lang.String, java.lang.Class)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r1;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r6;
        java.lang.Class $r3, r4, $r5;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r0, $r11;
        java.lang.ClassLoader $r2;

        r1 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

     label1:
        $r2 = r1.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.ClassLoader loader>;

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r2);

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load class: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.Object newInstance(java.lang.String, java.lang.Class)
    {
        org.apache.lucene.analysis.util.ClasspathResourceLoader r0;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r5;
        java.lang.Class r2, $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, $r10;

        r0 := @this: org.apache.lucene.analysis.util.ClasspathResourceLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.util.ClasspathResourceLoader: java.lang.Class findClass(java.lang.String,java.lang.Class)>(r1, r2);

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
