class com.mongodb.util.ThreadPool$MyThread extends java.lang.Thread
{
    final com.mongodb.util.ThreadPool this$0;

    void <init>(com.mongodb.util.ThreadPool)
    {
        java.util.List $r8;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r10;
        com.mongodb.util.ThreadPool$MyThreadGroup $r2;
        com.mongodb.util.ThreadPool r1;
        com.mongodb.util.ThreadPool$MyThread r0;

        r0 := @this: com.mongodb.util.ThreadPool$MyThread;

        r1 := @parameter0: com.mongodb.util.ThreadPool;

        r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0> = r1;

        $r2 = staticinvoke <com.mongodb.util.ThreadPool: com.mongodb.util.ThreadPool$MyThreadGroup access$100(com.mongodb.util.ThreadPool)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadPool.MyThread:");

        $r5 = r1.<com.mongodb.util.ThreadPool: java.lang.String _name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = staticinvoke <com.mongodb.util.ThreadPool: java.util.List access$000(com.mongodb.util.ThreadPool)>(r1);

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>($r2, $r10);

        virtualinvoke r0.<com.mongodb.util.ThreadPool$MyThread: void setDaemon(boolean)>(1);

        virtualinvoke r0.<com.mongodb.util.ThreadPool$MyThread: void start()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r6;
        java.util.concurrent.atomic.AtomicInteger $r2, $r5, $r8, $r12;
        com.mongodb.util.ThreadPool $r1, $r3, $r4, $r7, $r10, $r11, $r15;
        com.mongodb.util.ThreadPool$MyThread r0;
        java.util.concurrent.BlockingQueue $r16;
        java.lang.Exception $r9;
        java.lang.InterruptedException $r13;
        java.lang.Object r14;

        r0 := @this: com.mongodb.util.ThreadPool$MyThread;

     label01:
        r14 = null;

     label02:
        $r15 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        $r16 = staticinvoke <com.mongodb.util.ThreadPool: java.util.concurrent.BlockingQueue access$200(com.mongodb.util.ThreadPool)>($r15);

        r14 = interfaceinvoke $r16.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

     label03:
        goto label05;

     label04:
        $r13 := @caughtexception;

     label05:
        if r14 != null goto label06;

        goto label01;

     label06:
        $r1 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        $r2 = staticinvoke <com.mongodb.util.ThreadPool: java.util.concurrent.atomic.AtomicInteger access$300(com.mongodb.util.ThreadPool)>($r1);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r3 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        virtualinvoke $r3.<com.mongodb.util.ThreadPool: void handle(java.lang.Object)>(r14);

     label07:
        $r4 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        $r5 = staticinvoke <com.mongodb.util.ThreadPool: java.util.concurrent.atomic.AtomicInteger access$300(com.mongodb.util.ThreadPool)>($r4);

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        goto label12;

     label08:
        $r9 := @caughtexception;

        $r10 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        virtualinvoke $r10.<com.mongodb.util.ThreadPool: void handleError(java.lang.Object,java.lang.Exception)>(r14, $r9);

     label09:
        $r11 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        $r12 = staticinvoke <com.mongodb.util.ThreadPool: java.util.concurrent.atomic.AtomicInteger access$300(com.mongodb.util.ThreadPool)>($r11);

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        goto label12;

     label10:
        $r6 := @caughtexception;

     label11:
        $r7 = r0.<com.mongodb.util.ThreadPool$MyThread: com.mongodb.util.ThreadPool this$0>;

        $r8 = staticinvoke <com.mongodb.util.ThreadPool: java.util.concurrent.atomic.AtomicInteger access$300(com.mongodb.util.ThreadPool)>($r7);

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        throw $r6;

     label12:
        goto label01;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }
}
