public abstract class org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase extends org.codehaus.stax2.typed.TypedValueDecoder
{
    static final long L_BILLION;
    static final long L_MAX_INT;
    static final long L_MIN_INT;
    static final java.math.BigInteger BD_MIN_LONG;
    static final java.math.BigInteger BD_MAX_LONG;
    protected int mNextPtr;

    protected void <init>()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        specialinvoke r0.<org.codehaus.stax2.typed.TypedValueDecoder: void <init>()>();

        return;
    }

    public abstract java.lang.String getType();

    public void handleEmptyValue()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r3;
        java.lang.StringBuffer $r1, $r2, $r5;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r0;

        r3 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Empty value (all white space) not a valid lexical representation of ");

        $r4 = virtualinvoke r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String getType()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    protected void verifyDigits(java.lang.String, int, int)
    {
        char $c1;
        java.lang.IllegalArgumentException $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r1;
        int i0, i2, $i3, $i4;
        java.lang.String r0;

        r1 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        if i2 >= i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 > 57 goto label2;

        $i4 = (int) $c1;

        if $i4 >= 48 goto label3;

     label2:
        $r2 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(java.lang.String)>(r0);

        throw $r2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    protected void verifyDigits(char[], int, int, int)
    {
        char c1;
        java.lang.IllegalArgumentException $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r1;
        int i0, i2, i3, $i4, $i5;
        char[] r0;

        r1 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r0 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i3 := @parameter3: int;

     label1:
        if i3 >= i0 goto label4;

        c1 = r0[i3];

        $i4 = (int) c1;

        if $i4 > 57 goto label2;

        $i5 = (int) c1;

        if $i5 >= 48 goto label3;

     label2:
        $r2 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(char[],int,int)>(r0, i2, i0);

        throw $r2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    protected int skipSignAndZeroes(java.lang.String, char, boolean, int)
    {
        char $c1, c4;
        java.lang.IllegalArgumentException $r2, $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r0;
        int i0, i2, $i3, i5, i6, $i7, $i8;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r1 := @parameter0: java.lang.String;

        c4 := @parameter1: char;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if z0 == 0 goto label2;

        if 1 < i0 goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(java.lang.String)>(r1);

        throw $r3;

     label1:
        i5 = 2;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        goto label3;

     label2:
        i5 = 1;

     label3:
        $i7 = (int) c4;

        $i3 = $i7 - 48;

        i6 = $i3;

        if $i3 < 0 goto label4;

        if $i3 <= 9 goto label5;

     label4:
        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(java.lang.String)>(r1);

        throw $r2;

     label5:
        if i6 != 0 goto label7;

        if i5 >= i0 goto label7;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        $i8 = (int) $c1;

        i2 = $i8 - 48;

        if i2 < 0 goto label7;

        if i2 <= 9 goto label6;

        goto label7;

     label6:
        i5 = i5 + 1;

        i6 = i2;

        goto label5;

     label7:
        r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int mNextPtr> = i5;

        return i6;
    }

    protected int skipSignAndZeroes(char[], char, boolean, int, int)
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r0;
        int i0, i1, i3, $i4, $i5, i7, i8, $i9, $i10;
        boolean z0;
        char $c2, c6;
        java.lang.IllegalArgumentException $r2, $r3;
        char[] r1;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r1 := @parameter0: char[];

        c6 := @parameter1: char;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i7 = i0 + 1;

        if z0 == 0 goto label2;

        if i7 < i1 goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(char[],int,int)>(r1, i0, i1);

        throw $r3;

     label1:
        $i4 = i7;

        i7 = i7 + 1;

        c6 = r1[$i4];

     label2:
        $i9 = (int) c6;

        $i5 = $i9 - 48;

        i8 = $i5;

        if $i5 < 0 goto label3;

        if $i5 <= 9 goto label4;

     label3:
        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.IllegalArgumentException constructInvalidValue(char[],int,int)>(r1, i0, i1);

        throw $r2;

     label4:
        if i8 != 0 goto label6;

        if i7 >= i1 goto label6;

        $c2 = r1[i7];

        $i10 = (int) $c2;

        i3 = $i10 - 48;

        if i3 < 0 goto label6;

        if i3 <= 9 goto label5;

        goto label6;

     label5:
        i7 = i7 + 1;

        i8 = i3;

        goto label4;

     label6:
        r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int mNextPtr> = i7;

        return i8;
    }

    protected static final int parseInt(char[], int, int)
    {
        int i1, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        char $c0, $c2, $c5, $c8, $c11, $c14, $c17, $c20, $c23;
        char[] r0;

        r0 := @parameter0: char[];

        i26 := @parameter1: int;

        i1 := @parameter2: int;

        $c0 = r0[i26];

        $i36 = (int) $c0;

        i27 = $i36 - 48;

        i28 = i26 + 1;

        if i28 >= i1 goto label1;

        $i4 = i27 * 10;

        $c2 = r0[i28];

        $i37 = (int) $c2;

        $i3 = $i37 - 48;

        i27 = $i4 + $i3;

        i29 = i28 + 1;

        if i29 >= i1 goto label1;

        $i7 = i27 * 10;

        $c5 = r0[i29];

        $i38 = (int) $c5;

        $i6 = $i38 - 48;

        i27 = $i7 + $i6;

        i30 = i29 + 1;

        if i30 >= i1 goto label1;

        $i10 = i27 * 10;

        $c8 = r0[i30];

        $i39 = (int) $c8;

        $i9 = $i39 - 48;

        i27 = $i10 + $i9;

        i31 = i30 + 1;

        if i31 >= i1 goto label1;

        $i13 = i27 * 10;

        $c11 = r0[i31];

        $i40 = (int) $c11;

        $i12 = $i40 - 48;

        i27 = $i13 + $i12;

        i32 = i31 + 1;

        if i32 >= i1 goto label1;

        $i16 = i27 * 10;

        $c14 = r0[i32];

        $i41 = (int) $c14;

        $i15 = $i41 - 48;

        i27 = $i16 + $i15;

        i33 = i32 + 1;

        if i33 >= i1 goto label1;

        $i19 = i27 * 10;

        $c17 = r0[i33];

        $i42 = (int) $c17;

        $i18 = $i42 - 48;

        i27 = $i19 + $i18;

        i34 = i33 + 1;

        if i34 >= i1 goto label1;

        $i22 = i27 * 10;

        $c20 = r0[i34];

        $i43 = (int) $c20;

        $i21 = $i43 - 48;

        i27 = $i22 + $i21;

        i35 = i34 + 1;

        if i35 >= i1 goto label1;

        $i25 = i27 * 10;

        $c23 = r0[i35];

        $i44 = (int) $c23;

        $i24 = $i44 - 48;

        i27 = $i25 + $i24;

     label1:
        return i27;
    }

    protected static final int parseInt(int, char[], int, int)
    {
        int $i1, $i2, i3, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        char $c0, $c4, $c7, $c10, $c13, $c16, $c19, $c22;
        char[] r0;

        i25 := @parameter0: int;

        r0 := @parameter1: char[];

        i26 := @parameter2: int;

        i3 := @parameter3: int;

        $i2 = i25 * 10;

        $c0 = r0[i26];

        $i35 = (int) $c0;

        $i1 = $i35 - 48;

        i27 = $i2 + $i1;

        i28 = i26 + 1;

        if i28 >= i3 goto label1;

        $i6 = i27 * 10;

        $c4 = r0[i28];

        $i36 = (int) $c4;

        $i5 = $i36 - 48;

        i27 = $i6 + $i5;

        i29 = i28 + 1;

        if i29 >= i3 goto label1;

        $i9 = i27 * 10;

        $c7 = r0[i29];

        $i37 = (int) $c7;

        $i8 = $i37 - 48;

        i27 = $i9 + $i8;

        i30 = i29 + 1;

        if i30 >= i3 goto label1;

        $i12 = i27 * 10;

        $c10 = r0[i30];

        $i38 = (int) $c10;

        $i11 = $i38 - 48;

        i27 = $i12 + $i11;

        i31 = i30 + 1;

        if i31 >= i3 goto label1;

        $i15 = i27 * 10;

        $c13 = r0[i31];

        $i39 = (int) $c13;

        $i14 = $i39 - 48;

        i27 = $i15 + $i14;

        i32 = i31 + 1;

        if i32 >= i3 goto label1;

        $i18 = i27 * 10;

        $c16 = r0[i32];

        $i40 = (int) $c16;

        $i17 = $i40 - 48;

        i27 = $i18 + $i17;

        i33 = i32 + 1;

        if i33 >= i3 goto label1;

        $i21 = i27 * 10;

        $c19 = r0[i33];

        $i41 = (int) $c19;

        $i20 = $i41 - 48;

        i27 = $i21 + $i20;

        i34 = i33 + 1;

        if i34 >= i3 goto label1;

        $i24 = i27 * 10;

        $c22 = r0[i34];

        $i42 = (int) $c22;

        $i23 = $i42 - 48;

        i27 = $i24 + $i23;

     label1:
        return i27;
    }

    protected static final int parseInt(java.lang.String, int, int)
    {
        int i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        java.lang.String r0;
        char $c0, $c3, $c6, $c9, $c12, $c15, $c18, $c21, $c24;

        r0 := @parameter0: java.lang.String;

        i26 := @parameter1: int;

        i1 := @parameter2: int;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i26);

        $i36 = (int) $c0;

        i27 = $i36 - 48;

        i28 = i26 + 1;

        if i28 >= i1 goto label1;

        $i2 = i27 * 10;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i28);

        $i37 = (int) $c3;

        $i4 = $i37 - 48;

        i27 = $i2 + $i4;

        i29 = i28 + 1;

        if i29 >= i1 goto label1;

        $i5 = i27 * 10;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i29);

        $i38 = (int) $c6;

        $i7 = $i38 - 48;

        i27 = $i5 + $i7;

        i30 = i29 + 1;

        if i30 >= i1 goto label1;

        $i8 = i27 * 10;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i30);

        $i39 = (int) $c9;

        $i10 = $i39 - 48;

        i27 = $i8 + $i10;

        i31 = i30 + 1;

        if i31 >= i1 goto label1;

        $i11 = i27 * 10;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i31);

        $i40 = (int) $c12;

        $i13 = $i40 - 48;

        i27 = $i11 + $i13;

        i32 = i31 + 1;

        if i32 >= i1 goto label1;

        $i14 = i27 * 10;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i32);

        $i41 = (int) $c15;

        $i16 = $i41 - 48;

        i27 = $i14 + $i16;

        i33 = i32 + 1;

        if i33 >= i1 goto label1;

        $i17 = i27 * 10;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i33);

        $i42 = (int) $c18;

        $i19 = $i42 - 48;

        i27 = $i17 + $i19;

        i34 = i33 + 1;

        if i34 >= i1 goto label1;

        $i20 = i27 * 10;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i34);

        $i43 = (int) $c21;

        $i22 = $i43 - 48;

        i27 = $i20 + $i22;

        i35 = i34 + 1;

        if i35 >= i1 goto label1;

        $i23 = i27 * 10;

        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i35);

        $i44 = (int) $c24;

        $i25 = $i44 - 48;

        i27 = $i23 + $i25;

     label1:
        return i27;
    }

    protected static final int parseInt(int, java.lang.String, int, int)
    {
        int $i0, $i2, i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        java.lang.String r0;
        char $c1, $c5, $c8, $c11, $c14, $c17, $c20, $c23;

        i25 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        i26 := @parameter2: int;

        i3 := @parameter3: int;

        $i0 = i25 * 10;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i26);

        $i35 = (int) $c1;

        $i2 = $i35 - 48;

        i27 = $i0 + $i2;

        i28 = i26 + 1;

        if i28 >= i3 goto label1;

        $i4 = i27 * 10;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i28);

        $i36 = (int) $c5;

        $i6 = $i36 - 48;

        i27 = $i4 + $i6;

        i29 = i28 + 1;

        if i29 >= i3 goto label1;

        $i7 = i27 * 10;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i29);

        $i37 = (int) $c8;

        $i9 = $i37 - 48;

        i27 = $i7 + $i9;

        i30 = i29 + 1;

        if i30 >= i3 goto label1;

        $i10 = i27 * 10;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i30);

        $i38 = (int) $c11;

        $i12 = $i38 - 48;

        i27 = $i10 + $i12;

        i31 = i30 + 1;

        if i31 >= i3 goto label1;

        $i13 = i27 * 10;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i31);

        $i39 = (int) $c14;

        $i15 = $i39 - 48;

        i27 = $i13 + $i15;

        i32 = i31 + 1;

        if i32 >= i3 goto label1;

        $i16 = i27 * 10;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i32);

        $i40 = (int) $c17;

        $i18 = $i40 - 48;

        i27 = $i16 + $i18;

        i33 = i32 + 1;

        if i33 >= i3 goto label1;

        $i19 = i27 * 10;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i33);

        $i41 = (int) $c20;

        $i21 = $i41 - 48;

        i27 = $i19 + $i21;

        i34 = i33 + 1;

        if i34 >= i3 goto label1;

        $i22 = i27 * 10;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i34);

        $i42 = (int) $c23;

        $i24 = $i42 - 48;

        i27 = $i22 + $i24;

     label1:
        return i27;
    }

    protected static final long parseLong(char[], int, int)
    {
        long $l4, l5, $l7, $l8;
        int i0, i1, i2, $i3, $i6;
        char[] r0;

        r0 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 - 9;

        $i3 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int parseInt(char[],int,int)>(r0, i2, i1);

        $l4 = (long) $i3;

        l5 = $l4 * 1000000000L;

        $i6 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int parseInt(char[],int,int)>(r0, i1, i0);

        $l7 = (long) $i6;

        $l8 = l5 + $l7;

        return $l8;
    }

    protected static final long parseLong(java.lang.String, int, int)
    {
        long $l4, l5, $l7, $l8;
        int i0, i1, i2, $i3, $i6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 - 9;

        $i3 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int parseInt(java.lang.String,int,int)>(r0, i2, i1);

        $l4 = (long) $i3;

        l5 = $l4 * 1000000000L;

        $i6 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: int parseInt(java.lang.String,int,int)>(r0, i1, i0);

        $l7 = (long) $i6;

        $l8 = l5 + $l7;

        return $l8;
    }

    protected java.lang.IllegalArgumentException constructInvalidValue(java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r6;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r8;
        java.lang.String r3, $r7, $r9;

        r6 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value \"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not a valid lexical representation of ");

        $r7 = virtualinvoke r6.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String getType()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        return $r0;
    }

    protected java.lang.IllegalArgumentException constructInvalidValue(char[], int, int)
    {
        java.lang.IllegalArgumentException $r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r3;
        java.lang.StringBuffer $r1, $r2, $r6, $r7, $r9;
        int i0, i1;
        char[] r4;
        java.lang.String $r5, $r8, $r10;

        r3 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r4 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value \"");

        $r5 = virtualinvoke r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String lexicalDesc(char[],int,int)>(r4, i0, i1);

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not a valid lexical representation of ");

        $r8 = virtualinvoke r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String getType()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        return $r0;
    }

    protected java.lang.String lexicalDesc(char[], int, int)
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r0;
        int i0, i1, $i2;
        char[] r2;
        java.lang.String $r1, $r3;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        $i2 = i1 - i0;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, $i2);

        $r3 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String _clean(java.lang.String)>($r1);

        return $r3;
    }

    protected java.lang.String lexicalDesc(java.lang.String)
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r0;
        java.lang.String r1, $r2;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.lang.String _clean(java.lang.String)>(r1);

        return $r2;
    }

    protected java.lang.String _clean(java.lang.String)
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase r2;
        java.lang.String r0, $r1;

        r2 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0, $r1;

        <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: long L_MIN_INT> = -2147483648L;

        <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: long L_MAX_INT> = 2147483647L;

        <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: long L_BILLION> = 1000000000L;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-9223372036854775808L);

        <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.math.BigInteger BD_MIN_LONG> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L);

        <org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: java.math.BigInteger BD_MAX_LONG> = $r1;

        return;
    }
}
