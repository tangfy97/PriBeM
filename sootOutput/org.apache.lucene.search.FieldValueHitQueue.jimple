public abstract class org.apache.lucene.search.FieldValueHitQueue extends org.apache.lucene.util.PriorityQueue
{
    protected final org.apache.lucene.search.SortField[] fields;
    protected final org.apache.lucene.search.FieldComparator[] comparators;
    protected org.apache.lucene.search.FieldComparator firstComparator;
    protected final int[] reverseMul;

    private void <init>(org.apache.lucene.search.SortField[], int)
    {
        int[] $r3;
        int i0, i1;
        org.apache.lucene.search.SortField[] r1;
        org.apache.lucene.search.FieldComparator[] $r2;
        org.apache.lucene.search.FieldValueHitQueue r0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        r1 := @parameter0: org.apache.lucene.search.SortField[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>(int)>(i0);

        r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.SortField[] fields> = r1;

        i1 = lengthof r1;

        $r2 = newarray (org.apache.lucene.search.FieldComparator)[i1];

        r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] comparators> = $r2;

        $r3 = newarray (int)[i1];

        r0.<org.apache.lucene.search.FieldValueHitQueue: int[] reverseMul> = $r3;

        return;
    }

    public static org.apache.lucene.search.FieldValueHitQueue create(org.apache.lucene.search.SortField[], int) throws java.io.IOException
    {
        org.apache.lucene.search.FieldValueHitQueue$MultiComparatorsFieldValueHitQueue $r1;
        org.apache.lucene.search.FieldValueHitQueue$OneComparatorFieldValueHitQueue $r2;
        org.apache.lucene.search.SortField[] r0;
        int $i0, $i1, i2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.lucene.search.SortField[];

        i2 := @parameter1: int;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sort must contain at least one field");

        throw $r3;

     label1:
        $i1 = lengthof r0;

        if $i1 != 1 goto label2;

        $r2 = new org.apache.lucene.search.FieldValueHitQueue$OneComparatorFieldValueHitQueue;

        specialinvoke $r2.<org.apache.lucene.search.FieldValueHitQueue$OneComparatorFieldValueHitQueue: void <init>(org.apache.lucene.search.SortField[],int)>(r0, i2);

        return $r2;

     label2:
        $r1 = new org.apache.lucene.search.FieldValueHitQueue$MultiComparatorsFieldValueHitQueue;

        specialinvoke $r1.<org.apache.lucene.search.FieldValueHitQueue$MultiComparatorsFieldValueHitQueue: void <init>(org.apache.lucene.search.SortField[],int)>(r0, i2);

        return $r1;
    }

    public org.apache.lucene.search.FieldComparator[] getComparators()
    {
        org.apache.lucene.search.FieldComparator[] $r1;
        org.apache.lucene.search.FieldValueHitQueue r0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        $r1 = r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        return $r1;
    }

    public int[] getReverseMul()
    {
        org.apache.lucene.search.FieldValueHitQueue r0;
        int[] $r1;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        $r1 = r0.<org.apache.lucene.search.FieldValueHitQueue: int[] reverseMul>;

        return $r1;
    }

    public void setComparator(int, org.apache.lucene.search.FieldComparator)
    {
        int i0;
        org.apache.lucene.search.FieldComparator[] $r2;
        org.apache.lucene.search.FieldComparator r1;
        org.apache.lucene.search.FieldValueHitQueue r0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.search.FieldComparator;

        if i0 != 0 goto label1;

        r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator firstComparator> = r1;

     label1:
        $r2 = r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        $r2[i0] = r1;

        return;
    }

    protected abstract boolean lessThan(org.apache.lucene.search.FieldValueHitQueue$Entry, org.apache.lucene.search.FieldValueHitQueue$Entry);

    org.apache.lucene.search.FieldDoc fillFields(org.apache.lucene.search.FieldValueHitQueue$Entry)
    {
        org.apache.lucene.search.FieldValueHitQueue$Entry r4;
        java.lang.Object[] r2;
        org.apache.lucene.search.FieldComparator $r6;
        org.apache.lucene.search.FieldValueHitQueue r0;
        org.apache.lucene.search.FieldDoc $r3;
        int i0, $i1, $i2, i3;
        org.apache.lucene.search.FieldComparator[] $r1, $r5;
        float $f0;
        java.lang.Object $r7;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        r4 := @parameter0: org.apache.lucene.search.FieldValueHitQueue$Entry;

        $r1 = r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        i0 = lengthof $r1;

        r2 = newarray (java.lang.Object)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r5 = r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        $r6 = $r5[i3];

        $i2 = r4.<org.apache.lucene.search.FieldValueHitQueue$Entry: int slot>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.search.FieldComparator: java.lang.Object value(int)>($i2);

        r2[i3] = $r7;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = new org.apache.lucene.search.FieldDoc;

        $i1 = r4.<org.apache.lucene.search.FieldValueHitQueue$Entry: int doc>;

        $f0 = r4.<org.apache.lucene.search.FieldValueHitQueue$Entry: float score>;

        specialinvoke $r3.<org.apache.lucene.search.FieldDoc: void <init>(int,float,java.lang.Object[])>($i1, $f0, r2);

        return $r3;
    }

    org.apache.lucene.search.SortField[] getFields()
    {
        org.apache.lucene.search.SortField[] $r1;
        org.apache.lucene.search.FieldValueHitQueue r0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        $r1 = r0.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.SortField[] fields>;

        return $r1;
    }

    protected volatile boolean lessThan(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.search.FieldValueHitQueue$Entry $r3, $r4;
        java.lang.Object r1, r2;
        org.apache.lucene.search.FieldValueHitQueue r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.search.FieldValueHitQueue$Entry) r1;

        $r3 = (org.apache.lucene.search.FieldValueHitQueue$Entry) r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.search.FieldValueHitQueue: boolean lessThan(org.apache.lucene.search.FieldValueHitQueue$Entry,org.apache.lucene.search.FieldValueHitQueue$Entry)>($r4, $r3);

        return $z0;
    }

    void <init>(org.apache.lucene.search.SortField[], int, org.apache.lucene.search.FieldValueHitQueue$1)
    {
        org.apache.lucene.search.FieldValueHitQueue$1 r2;
        org.apache.lucene.search.SortField[] r1;
        int i0;
        org.apache.lucene.search.FieldValueHitQueue r0;

        r0 := @this: org.apache.lucene.search.FieldValueHitQueue;

        r1 := @parameter0: org.apache.lucene.search.SortField[];

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.search.FieldValueHitQueue$1;

        specialinvoke r0.<org.apache.lucene.search.FieldValueHitQueue: void <init>(org.apache.lucene.search.SortField[],int)>(r1, i0);

        return;
    }
}
