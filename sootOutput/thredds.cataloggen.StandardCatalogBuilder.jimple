public class thredds.cataloggen.StandardCatalogBuilder extends java.lang.Object implements thredds.cataloggen.CatalogBuilder
{
    private static org.slf4j.Logger log;
    private java.lang.String collectionPath;
    private java.lang.String collectionName;
    private thredds.crawlabledataset.CrawlableDataset collectionCrDs;
    private thredds.crawlabledataset.CrawlableDatasetFilter filter;
    private thredds.catalog.InvService service;
    private java.lang.String collectionId;
    private thredds.crawlabledataset.CrawlableDatasetLabeler identifier;
    private thredds.crawlabledataset.CrawlableDatasetLabeler namer;
    private boolean doAddDatasetSize;
    private thredds.crawlabledataset.CrawlableDatasetSorter sorter;
    private java.util.Map proxyDatasetHandlers;
    private java.util.List childEnhancerList;
    private thredds.catalog.InvDatasetImpl topLevelMetadataContainer;
    private thredds.cataloggen.CatalogRefExpander catalogRefExpander;

    public void <init>(java.lang.String, java.lang.String, thredds.crawlabledataset.CrawlableDataset, thredds.crawlabledataset.CrawlableDatasetFilter, thredds.catalog.InvService, java.lang.String, thredds.crawlabledataset.CrawlableDatasetLabeler, thredds.crawlabledataset.CrawlableDatasetLabeler, boolean, thredds.crawlabledataset.CrawlableDatasetSorter, java.util.Map, java.util.List, thredds.catalog.InvDatasetImpl, thredds.cataloggen.CatalogRefExpander)
    {
        thredds.catalog.InvService r5;
        thredds.crawlabledataset.CrawlableDatasetLabeler r7, r8;
        thredds.crawlabledataset.CrawlableDataset r3;
        thredds.crawlabledataset.CrawlableDatasetFilter r4;
        java.util.List r11;
        thredds.cataloggen.CatalogRefExpander r13;
        java.util.Map r10;
        thredds.crawlabledataset.CrawlableDatasetSorter r9;
        java.lang.String r1, r2, r6;
        thredds.cataloggen.StandardCatalogBuilder r0;
        thredds.catalog.InvDatasetImpl r12;
        boolean z0;

        r0 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: thredds.crawlabledataset.CrawlableDataset;

        r4 := @parameter3: thredds.crawlabledataset.CrawlableDatasetFilter;

        r5 := @parameter4: thredds.catalog.InvService;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: thredds.crawlabledataset.CrawlableDatasetLabeler;

        r8 := @parameter7: thredds.crawlabledataset.CrawlableDatasetLabeler;

        z0 := @parameter8: boolean;

        r9 := @parameter9: thredds.crawlabledataset.CrawlableDatasetSorter;

        r10 := @parameter10: java.util.Map;

        r11 := @parameter11: java.util.List;

        r12 := @parameter12: thredds.catalog.InvDatasetImpl;

        r13 := @parameter13: thredds.cataloggen.CatalogRefExpander;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionPath> = r1;

        r0.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionName> = r2;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDataset collectionCrDs> = r3;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetFilter filter> = r4;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvService service> = r5;

        r0.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionId> = r6;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler identifier> = r7;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler namer> = r8;

        r0.<thredds.cataloggen.StandardCatalogBuilder: boolean doAddDatasetSize> = z0;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetSorter sorter> = r9;

        r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.Map proxyDatasetHandlers> = r10;

        r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.List childEnhancerList> = r11;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvDatasetImpl topLevelMetadataContainer> = r12;

        r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CatalogRefExpander catalogRefExpander> = r13;

        return;
    }

    public thredds.crawlabledataset.CrawlableDataset requestCrawlableDataset(java.lang.String) throws java.io.IOException
    {
        java.util.Map $r8;
        thredds.cataloggen.CollectionLevelScanner $r11;
        boolean $z0, $z1;
        thredds.crawlabledataset.CrawlableDataset $r3, $r4, $r6, $r7, $r14;
        java.util.List $r12;
        java.lang.StringBuilder $r17, $r18, $r19, $r23, $r24, $r25, $r29, $r30, $r31, $r35, $r36, $r37, $r41, $r42, $r43, $r44;
        thredds.cataloggen.StandardCatalogBuilder r0;
        thredds.cataloggen.InvCrawlablePair $r13;
        thredds.crawlabledataset.CrawlableDatasetFilter $r2, $r5;
        int $i0, $i1, $i3;
        java.lang.String r1, $r20, $r26, $r32, $r38, r39, r40;
        thredds.cataloggen.ProxyDatasetHandler r10;
        org.slf4j.Logger $r16, $r22, $r28, $r34;
        java.lang.Object $r9;

        r0 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r2 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $r4 = staticinvoke <thredds.cataloggen.CatalogBuilderHelper: thredds.crawlabledataset.CrawlableDataset verifyDescendantDataset(thredds.crawlabledataset.CrawlableDataset,java.lang.String,thredds.crawlabledataset.CrawlableDatasetFilter)>($r3, r1, $r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 == $i3 goto label2;

        $i1 = $i0 + 1;

        r39 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        r40 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label3;

     label2:
        r39 = r1;

        r40 = "";

     label3:
        $r6 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r5 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $r7 = staticinvoke <thredds.cataloggen.CatalogBuilderHelper: thredds.crawlabledataset.CrawlableDataset verifyDescendantDataset(thredds.crawlabledataset.CrawlableDataset,java.lang.String,thredds.crawlabledataset.CrawlableDatasetFilter)>($r6, r40, $r5);

        if $r7 != null goto label4;

        $r34 = <thredds.cataloggen.StandardCatalogBuilder: org.slf4j.Logger log>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestCrawlableDataset(): Parent dataset <");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not allowed by filter.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String)>($r38);

        return null;

     label4:
        $z0 = interfaceinvoke $r7.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z0 != 0 goto label5;

        $r28 = <thredds.cataloggen.StandardCatalogBuilder: org.slf4j.Logger log>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestCrawlableDataset(): Parent dataset <");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is not a collection dataset.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r32);

        return null;

     label5:
        $r8 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.Map proxyDatasetHandlers>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r39);

        r10 = (thredds.cataloggen.ProxyDatasetHandler) $r9;

        if r10 != null goto label6;

        $r22 = <thredds.cataloggen.StandardCatalogBuilder: org.slf4j.Logger log>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestCrawlableDataset(): Dataset name <");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> has no corresponding proxy dataset handler.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r26);

        return null;

     label6:
        $z1 = interfaceinvoke r10.<thredds.cataloggen.ProxyDatasetHandler: boolean isProxyDatasetResolver()>();

        if $z1 == 0 goto label7;

        $r16 = <thredds.cataloggen.StandardCatalogBuilder: org.slf4j.Logger log>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestCrawlableDataset(): Proxy dataset <");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is a resolver, not valid dataset request.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r20);

        return null;

     label7:
        $r11 = specialinvoke r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CollectionLevelScanner setupAndScan(thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset)>($r7, null);

        $r12 = virtualinvoke $r11.<thredds.cataloggen.CollectionLevelScanner: java.util.List getAtomicDsInfo()>();

        $r13 = interfaceinvoke r10.<thredds.cataloggen.ProxyDatasetHandler: thredds.cataloggen.InvCrawlablePair getActualDataset(java.util.List)>($r12);

        $r14 = virtualinvoke $r13.<thredds.cataloggen.InvCrawlablePair: thredds.crawlabledataset.CrawlableDataset getCrawlableDataset()>();

        return $r14;
    }

    public thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset) throws java.io.IOException
    {
        thredds.cataloggen.CatalogRefExpander $r4, $r9;
        java.util.Map $r20;
        thredds.crawlabledataset.CrawlableDatasetSorter $r19;
        thredds.cataloggen.CollectionLevelScanner $r2, $r10;
        boolean $z0, $z1, $z2, z3;
        thredds.catalog.InvDataset $r25, $r26, $r27;
        thredds.crawlabledataset.CrawlableDatasetLabeler $r17, $r18;
        thredds.crawlabledataset.CrawlableDataset r1, $r12, $r13;
        thredds.cataloggen.DatasetEnhancer $r35;
        java.util.List $r6, $r21, $r23, $r32;
        thredds.catalog.InvCatalogImpl $r3, $r22;
        thredds.cataloggen.StandardCatalogBuilder r0;
        thredds.cataloggen.InvCrawlablePair r8;
        thredds.crawlabledataset.CrawlableDatasetFilter $r15;
        java.util.ArrayList $r5;
        int $i0;
        java.lang.String $r11, $r16;
        thredds.catalog.InvService $r14;
        java.util.Iterator $r33;
        java.lang.Object $r7, $r34;
        thredds.catalog.InvDatasetImpl $r24, $r28, $r29, $r30, $r31;

        r0 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r2 = specialinvoke r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CollectionLevelScanner setupAndScan(thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset)>(r1, null);

        $r3 = virtualinvoke $r2.<thredds.cataloggen.CollectionLevelScanner: thredds.catalog.InvCatalogImpl generateCatalog()>();

        z3 = 0;

        $r4 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CatalogRefExpander catalogRefExpander>;

        if $r4 == null goto label5;

        $r5 = new java.util.ArrayList;

        $r6 = virtualinvoke $r2.<thredds.cataloggen.CollectionLevelScanner: java.util.List getCatRefInfo()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (thredds.cataloggen.InvCrawlablePair) $r7;

        $r9 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CatalogRefExpander catalogRefExpander>;

        $z0 = interfaceinvoke $r9.<thredds.cataloggen.CatalogRefExpander: boolean expandCatalogRef(thredds.cataloggen.InvCrawlablePair)>(r8);

        if $z0 == 0 goto label4;

        $r10 = new thredds.cataloggen.CollectionLevelScanner;

        $r11 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionPath>;

        $r12 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r13 = virtualinvoke r8.<thredds.cataloggen.InvCrawlablePair: thredds.crawlabledataset.CrawlableDataset getCrawlableDataset()>();

        $r15 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $r14 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvService service>;

        specialinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void <init>(java.lang.String,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvService)>($r11, $r12, r1, $r13, $r15, $r14);

        $r16 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionId>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setCollectionId(java.lang.String)>($r16);

        $r17 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler identifier>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setIdentifier(thredds.crawlabledataset.CrawlableDatasetLabeler)>($r17);

        $r18 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler namer>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setNamer(thredds.crawlabledataset.CrawlableDatasetLabeler)>($r18);

        $z1 = r0.<thredds.cataloggen.StandardCatalogBuilder: boolean doAddDatasetSize>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setDoAddDataSize(boolean)>($z1);

        $r19 = r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetSorter sorter>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setSorter(thredds.crawlabledataset.CrawlableDatasetSorter)>($r19);

        $r20 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.Map proxyDatasetHandlers>;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void setProxyDsHandlers(java.util.Map)>($r20);

        $r21 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.List childEnhancerList>;

        if $r21 == null goto label3;

        $r32 = r0.<thredds.cataloggen.StandardCatalogBuilder: java.util.List childEnhancerList>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        $r35 = (thredds.cataloggen.DatasetEnhancer) $r34;

        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void addChildEnhancer(thredds.cataloggen.DatasetEnhancer)>($r35);

        goto label2;

     label3:
        virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: void scan()>();

        $r22 = virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: thredds.catalog.InvCatalogImpl generateCatalog()>();

        $r23 = virtualinvoke $r10.<thredds.cataloggen.CollectionLevelScanner: java.util.List getCatRefInfo()>();

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r23);

        $r24 = virtualinvoke $r22.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $r25 = virtualinvoke r8.<thredds.cataloggen.InvCrawlablePair: thredds.catalog.InvDataset getInvDataset()>();

        $r26 = virtualinvoke r8.<thredds.cataloggen.InvCrawlablePair: thredds.catalog.InvDataset getInvDataset()>();

        $r27 = virtualinvoke $r26.<thredds.catalog.InvDataset: thredds.catalog.InvDataset getParent()>();

        $r29 = (thredds.catalog.InvDatasetImpl) $r27;

        $r28 = (thredds.catalog.InvDatasetImpl) $r25;

        virtualinvoke $r29.<thredds.catalog.InvDatasetImpl: boolean removeDataset(thredds.catalog.InvDatasetImpl)>($r28);

        $r31 = (thredds.catalog.InvDatasetImpl) $r27;

        $r30 = (thredds.catalog.InvDatasetImpl) $r24;

        virtualinvoke $r31.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r30);

        z3 = 1;

     label4:
        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);

        goto label1;

     label5:
        if z3 == 0 goto label6;

        virtualinvoke $r3.<thredds.catalog.InvCatalogImpl: boolean finish()>();

     label6:
        return $r3;
    }

    public thredds.catalog.InvCatalogImpl generateProxyDsResolverCatalog(thredds.crawlabledataset.CrawlableDataset, thredds.cataloggen.ProxyDatasetHandler) throws java.io.IOException
    {
        thredds.cataloggen.ProxyDatasetHandler r2;
        thredds.crawlabledataset.CrawlableDataset r0;
        java.lang.IllegalArgumentException $r1, $r7;
        thredds.catalog.InvCatalogImpl $r6;
        java.util.Map $r4;
        thredds.cataloggen.CollectionLevelScanner $r5;
        thredds.cataloggen.StandardCatalogBuilder r3;
        boolean $z0;

        r3 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r0 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        r2 := @parameter1: thredds.cataloggen.ProxyDatasetHandler;

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null parameters not allowed.");

        throw $r1;

     label2:
        $r4 = r3.<thredds.cataloggen.StandardCatalogBuilder: java.util.Map proxyDatasetHandlers>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsValue(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown ProxyDatasetHandler.");

        throw $r7;

     label3:
        $r5 = specialinvoke r3.<thredds.cataloggen.StandardCatalogBuilder: thredds.cataloggen.CollectionLevelScanner setupAndScan(thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset)>(r0, null);

        $r6 = virtualinvoke $r5.<thredds.cataloggen.CollectionLevelScanner: thredds.catalog.InvCatalogImpl generateProxyDsResolverCatalog(thredds.cataloggen.ProxyDatasetHandler)>(r2);

        return $r6;
    }

    private thredds.cataloggen.CollectionLevelScanner setupAndScan(thredds.crawlabledataset.CrawlableDataset, thredds.crawlabledataset.CrawlableDataset) throws java.io.IOException
    {
        thredds.crawlabledataset.CrawlableDatasetFilter $r5;
        java.util.Map $r13;
        thredds.crawlabledataset.CrawlableDatasetSorter $r12;
        thredds.cataloggen.CollectionLevelScanner $r0;
        java.lang.String $r7, $r8, $r9;
        boolean $z0, $z1;
        thredds.catalog.InvService $r4;
        java.util.Iterator $r17;
        thredds.crawlabledataset.CrawlableDatasetLabeler $r10, $r11;
        thredds.crawlabledataset.CrawlableDataset r2, r3, $r6;
        thredds.cataloggen.DatasetEnhancer $r19;
        java.util.List $r14, $r16;
        java.lang.Object $r18;
        thredds.cataloggen.StandardCatalogBuilder r1;
        thredds.catalog.InvDatasetImpl $r15;

        r1 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r2 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        r3 := @parameter1: thredds.crawlabledataset.CrawlableDataset;

        $r0 = new thredds.cataloggen.CollectionLevelScanner;

        $r7 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionPath>;

        $r6 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r5 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $r4 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvService service>;

        specialinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void <init>(java.lang.String,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvService)>($r7, $r6, r2, r3, $r5, $r4);

        $r8 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionId>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setCollectionId(java.lang.String)>($r8);

        $r9 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.lang.String collectionName>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setCollectionName(java.lang.String)>($r9);

        $r10 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler identifier>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setIdentifier(thredds.crawlabledataset.CrawlableDatasetLabeler)>($r10);

        $r11 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetLabeler namer>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setNamer(thredds.crawlabledataset.CrawlableDatasetLabeler)>($r11);

        $z0 = r1.<thredds.cataloggen.StandardCatalogBuilder: boolean doAddDatasetSize>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setDoAddDataSize(boolean)>($z0);

        $r12 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.crawlabledataset.CrawlableDatasetSorter sorter>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setSorter(thredds.crawlabledataset.CrawlableDatasetSorter)>($r12);

        $r13 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.util.Map proxyDatasetHandlers>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setProxyDsHandlers(java.util.Map)>($r13);

        $r14 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.util.List childEnhancerList>;

        if $r14 == null goto label2;

        $r16 = r1.<thredds.cataloggen.StandardCatalogBuilder: java.util.List childEnhancerList>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (thredds.cataloggen.DatasetEnhancer) $r18;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void addChildEnhancer(thredds.cataloggen.DatasetEnhancer)>($r19);

        goto label1;

     label2:
        $r15 = r1.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvDatasetImpl topLevelMetadataContainer>;

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void setTopLevelMetadataContainer(thredds.catalog.InvDatasetImpl)>($r15);

        virtualinvoke $r0.<thredds.cataloggen.CollectionLevelScanner: void scan()>();

        return $r0;
    }

    public org.jdom.Document generateCatalogAsDocument(thredds.crawlabledataset.CrawlableDataset) throws java.io.IOException
    {
        org.jdom.Document $r3;
        thredds.catalog.InvCatalogImpl $r2;
        thredds.crawlabledataset.CrawlableDataset r1;
        thredds.cataloggen.StandardCatalogBuilder r0;

        r0 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r2 = virtualinvoke r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset)>(r1);

        $r3 = staticinvoke <thredds.cataloggen.CatalogBuilderHelper: org.jdom.Document convertCatalogToDocument(thredds.catalog.InvCatalog)>($r2);

        return $r3;
    }

    public java.lang.String generateCatalogAsString(thredds.crawlabledataset.CrawlableDataset) throws java.io.IOException
    {
        thredds.catalog.InvCatalogImpl $r2;
        thredds.crawlabledataset.CrawlableDataset r1;
        java.lang.String $r3;
        thredds.cataloggen.StandardCatalogBuilder r0;

        r0 := @this: thredds.cataloggen.StandardCatalogBuilder;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r2 = virtualinvoke r0.<thredds.cataloggen.StandardCatalogBuilder: thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset)>(r1);

        $r3 = staticinvoke <thredds.cataloggen.CatalogBuilderHelper: java.lang.String convertCatalogToString(thredds.catalog.InvCatalog)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/StandardCatalogBuilder;");

        <thredds.cataloggen.StandardCatalogBuilder: org.slf4j.Logger log> = $r0;

        return;
    }
}
