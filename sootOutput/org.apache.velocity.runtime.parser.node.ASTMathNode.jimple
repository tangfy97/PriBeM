public abstract class org.apache.velocity.runtime.parser.node.ASTMathNode extends org.apache.velocity.runtime.parser.node.SimpleNode
{
    protected boolean strictMode;

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTMathNode r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: boolean strictMode> = 0;

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.Parser r1;
        org.apache.velocity.runtime.parser.node.ASTMathNode r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: boolean strictMode> = 0;

        return;
    }

    public java.lang.Object init(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.runtime.RuntimeServices $r3;
        org.apache.velocity.runtime.parser.node.ASTMathNode r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>(r1, r2);

        $r3 = r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.strict.math", 0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: boolean strictMode> = $z0;

        return r2;
    }

    public java.lang.Object jjtAccept(org.apache.velocity.runtime.parser.node.ParserVisitor, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTMathNode r1;
        org.apache.velocity.runtime.parser.node.ParserVisitor r0;
        java.lang.Object r2, $r3;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<org.apache.velocity.runtime.parser.node.ParserVisitor: java.lang.Object visit(org.apache.velocity.runtime.parser.node.SimpleNode,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Object value(org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        byte $b0;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7;
        org.apache.velocity.runtime.parser.node.ASTMathNode r0;
        org.apache.velocity.util.TemplateNumber $r23, $r24;
        java.lang.StringBuffer $r7, $r8, $r11, $r12, $r13, $r15, $r27;
        java.lang.String $r10, $r14, $r16, $r28, $r29;
        org.apache.velocity.runtime.parser.node.Node $r1, $r4, $r9;
        java.lang.Number $r20, $r21, $r22;
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.exception.MathException $r19;
        org.apache.velocity.runtime.log.Log $r17, $r18;
        java.lang.Object $r3, $r5, $r6, r25, r26;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        r2 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r3 = interfaceinvoke $r1.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r2);

        r25 = $r3;

        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(1);

        $r5 = interfaceinvoke $r4.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r2);

        r26 = $r5;

        $r6 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: java.lang.Object handleSpecial(java.lang.Object,java.lang.Object,org.apache.velocity.context.InternalContextAdapter)>($r3, $r5, r2);

        if $r6 == null goto label01;

        return $r6;

     label01:
        $z0 = $r3 instanceof org.apache.velocity.util.TemplateNumber;

        if $z0 == 0 goto label02;

        $r24 = (org.apache.velocity.util.TemplateNumber) $r3;

        r25 = interfaceinvoke $r24.<org.apache.velocity.util.TemplateNumber: java.lang.Number getAsNumber()>();

     label02:
        $z1 = $r5 instanceof org.apache.velocity.util.TemplateNumber;

        if $z1 == 0 goto label03;

        $r23 = (org.apache.velocity.util.TemplateNumber) $r5;

        r26 = interfaceinvoke $r23.<org.apache.velocity.util.TemplateNumber: java.lang.Number getAsNumber()>();

     label03:
        $z2 = r25 instanceof java.lang.Number;

        if $z2 == 0 goto label04;

        $z5 = r26 instanceof java.lang.Number;

        if $z5 != 0 goto label16;

     label04:
        $z6 = r25 instanceof java.lang.Number;

        if $z6 == 0 goto label06;

        if r26 == null goto label05;

        $z7 = 1;

        goto label08;

     label05:
        $z7 = 0;

        goto label08;

     label06:
        if r25 == null goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z3 = $z7;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        if $z6 == 0 goto label09;

        $r28 = "Right";

        goto label10;

     label09:
        $r28 = "Left";

     label10:
        $r7 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" side of math operation (");

        if $z6 == 0 goto label11;

        $b0 = 1;

        goto label12;

     label11:
        $b0 = 0;

     label12:
        $r9 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($b0);

        $r10 = interfaceinvoke $r9.<org.apache.velocity.runtime.parser.node.Node: java.lang.String literal()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        if z3 == 0 goto label13;

        $r29 = "is not a Number. ";

        goto label14;

     label13:
        $r29 = "has a null value. ";

     label14:
        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r14 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: java.lang.String getLocation(org.apache.velocity.context.InternalContextAdapter)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $z4 = r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: boolean strictMode>;

        if $z4 == 0 goto label15;

        $r18 = r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r18.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r16);

        $r19 = new org.apache.velocity.exception.MathException;

        specialinvoke $r19.<org.apache.velocity.exception.MathException: void <init>(java.lang.String)>($r16);

        throw $r19;

     label15:
        $r17 = r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r16);

        return null;

     label16:
        $r21 = (java.lang.Number) r25;

        $r20 = (java.lang.Number) r26;

        $r22 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMathNode: java.lang.Number perform(java.lang.Number,java.lang.Number,org.apache.velocity.context.InternalContextAdapter)>($r21, $r20, r2);

        return $r22;
    }

    protected java.lang.Object handleSpecial(java.lang.Object, java.lang.Object, org.apache.velocity.context.InternalContextAdapter)
    {
        org.apache.velocity.context.InternalContextAdapter r3;
        org.apache.velocity.runtime.parser.node.ASTMathNode r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMathNode;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.velocity.context.InternalContextAdapter;

        return null;
    }

    public abstract java.lang.Number perform(java.lang.Number, java.lang.Number, org.apache.velocity.context.InternalContextAdapter);
}
