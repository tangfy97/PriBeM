public class org.fife.ui.rtextarea.RTextAreaUI extends javax.swing.plaf.basic.BasicTextAreaUI implements javax.swing.text.ViewFactory
{
    private static final java.lang.String SHARED_ACTION_MAP_NAME;
    private static final java.lang.String SHARED_INPUT_MAP_NAME;
    protected org.fife.ui.rtextarea.RTextArea textArea;
    private static final javax.swing.text.EditorKit defaultKit;
    private static final javax.swing.TransferHandler defaultTransferHandler;
    private static final java.lang.String RTEXTAREA_KEYMAP_NAME;

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.fife.ui.rtextarea.RTextAreaUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.fife.ui.rtextarea.RTextAreaUI;

        specialinvoke $r0.<org.fife.ui.rtextarea.RTextAreaUI: void <init>(javax.swing.JComponent)>(r1);

        return $r0;
    }

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextAreaUI: void <init>()>();

        $z0 = r1 instanceof org.fife.ui.rtextarea.RTextArea;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RTextAreaUI is for instances of RTextArea only!");

        throw $r3;

     label1:
        $r2 = (org.fife.ui.rtextarea.RTextArea) r1;

        r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea> = $r2;

        return;
    }

    private void correctNimbusDefaultProblems(javax.swing.text.JTextComponent)
    {
        java.awt.Color $r1, $r2, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, r20, $r21, r22, $r23, r24;
        java.awt.Insets $r3;
        javax.swing.border.Border $r25;
        org.fife.ui.rtextarea.RTextAreaUI r19;
        javax.swing.plaf.ColorUIResource $r8, $r12, $r16;
        javax.swing.text.JTextComponent r0;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r5;
        javax.swing.plaf.InsetsUIResource $r4;

        r19 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r0 := @parameter0: javax.swing.text.JTextComponent;

        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Color getCaretColor()>();

        if $r1 != null goto label1;

        $r18 = staticinvoke <org.fife.ui.rtextarea.RTextArea: java.awt.Color getDefaultCaretColor()>();

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setCaretColor(java.awt.Color)>($r18);

     label1:
        $r2 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Color getSelectionColor()>();

        if $r2 != null goto label3;

        $r14 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("nimbusSelectionBackground");

        r20 = $r14;

        if $r14 != null goto label2;

        $r15 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("textHighlight");

        r20 = $r15;

        if $r15 != null goto label2;

        $r16 = new javax.swing.plaf.ColorUIResource;

        $r17 = <java.awt.Color: java.awt.Color BLUE>;

        specialinvoke $r16.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r17);

        r20 = $r16;

     label2:
        virtualinvoke r0.<javax.swing.text.JTextComponent: void setSelectionColor(java.awt.Color)>(r20);

     label3:
        $r21 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Color getSelectedTextColor()>();

        if $r21 != null goto label5;

        $r10 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("nimbusSelectedText");

        r22 = $r10;

        if $r10 != null goto label4;

        $r11 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("textHighlightText");

        r22 = $r11;

        if $r11 != null goto label4;

        $r12 = new javax.swing.plaf.ColorUIResource;

        $r13 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke $r12.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r13);

        r22 = $r12;

     label4:
        virtualinvoke r0.<javax.swing.text.JTextComponent: void setSelectedTextColor(java.awt.Color)>(r22);

     label5:
        $r23 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Color getDisabledTextColor()>();

        if $r23 != null goto label7;

        $r6 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("nimbusDisabledText");

        r24 = $r6;

        if $r6 != null goto label6;

        $r7 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("textInactiveText");

        r24 = $r7;

        if $r7 != null goto label6;

        $r8 = new javax.swing.plaf.ColorUIResource;

        $r9 = <java.awt.Color: java.awt.Color DARK_GRAY>;

        specialinvoke $r8.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r9);

        r24 = $r8;

     label6:
        virtualinvoke r0.<javax.swing.text.JTextComponent: void setDisabledTextColor(java.awt.Color)>(r24);

     label7:
        $r25 = virtualinvoke r0.<javax.swing.text.JTextComponent: javax.swing.border.Border getBorder()>();

        if $r25 != null goto label8;

        $r5 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r5.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setBorder(javax.swing.border.Border)>($r5);

     label8:
        $r3 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Insets getMargin()>();

        if $r3 != null goto label9;

        $r4 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r4.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setMargin(java.awt.Insets)>($r4);

     label9:
        return;
    }

    public javax.swing.text.View create(javax.swing.text.Element)
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1, $r5;
        javax.swing.text.PlainView $r2;
        javax.swing.text.WrappedPlainView $r4;
        javax.swing.text.Element r3;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r3 := @parameter0: javax.swing.text.Element;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: boolean getLineWrap()>();

        if $z0 == 0 goto label1;

        $r4 = new javax.swing.text.WrappedPlainView;

        $r5 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $z1 = virtualinvoke $r5.<org.fife.ui.rtextarea.RTextArea: boolean getWrapStyleWord()>();

        specialinvoke $r4.<javax.swing.text.WrappedPlainView: void <init>(javax.swing.text.Element,boolean)>(r3, $z1);

        return $r4;

     label1:
        $r2 = new javax.swing.text.PlainView;

        specialinvoke $r2.<javax.swing.text.PlainView: void <init>(javax.swing.text.Element)>(r3);

        return $r2;
    }

    protected javax.swing.text.Caret createCaret()
    {
        org.fife.ui.rtextarea.RTextAreaUI r1;
        org.fife.ui.rtextarea.ConfigurableCaret $r0;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r0 = new org.fife.ui.rtextarea.ConfigurableCaret;

        specialinvoke $r0.<org.fife.ui.rtextarea.ConfigurableCaret: void <init>()>();

        interfaceinvoke $r0.<javax.swing.text.Caret: void setBlinkRate(int)>(500);

        return $r0;
    }

    protected javax.swing.text.Keymap createKeymap()
    {
        org.fife.ui.rtextarea.RTextAreaUI r4;
        javax.swing.text.Keymap $r0, $r1, $r2, r5;
        org.fife.ui.rtextarea.RTextAreaEditorKit$DefaultKeyTypedAction $r3;

        r4 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r0 = staticinvoke <javax.swing.text.JTextComponent: javax.swing.text.Keymap getKeymap(java.lang.String)>("RTextAreaKeymap");

        r5 = $r0;

        if $r0 != null goto label1;

        $r1 = staticinvoke <javax.swing.text.JTextComponent: javax.swing.text.Keymap getKeymap(java.lang.String)>("default");

        $r2 = staticinvoke <javax.swing.text.JTextComponent: javax.swing.text.Keymap addKeymap(java.lang.String,javax.swing.text.Keymap)>("RTextAreaKeymap", $r1);

        r5 = $r2;

        $r3 = new org.fife.ui.rtextarea.RTextAreaEditorKit$DefaultKeyTypedAction;

        specialinvoke $r3.<org.fife.ui.rtextarea.RTextAreaEditorKit$DefaultKeyTypedAction: void <init>()>();

        interfaceinvoke $r2.<javax.swing.text.Keymap: void setDefaultAction(javax.swing.Action)>($r3);

     label1:
        return r5;
    }

    protected javax.swing.ActionMap createRTextAreaActionMap()
    {
        javax.swing.Action $r4, $r6, $r7, $r9, $r10, $r12, r13;
        javax.swing.plaf.ActionMapUIResource $r0;
        int i0, i1;
        javax.swing.Action[] $r3;
        org.fife.ui.rtextarea.RTextAreaUI r1;
        org.fife.ui.rtextarea.RTextArea $r2;
        java.lang.Object $r5, $r8, $r11, $r14;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r0 = new javax.swing.plaf.ActionMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.ActionMapUIResource: void <init>()>();

        $r2 = r1.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextArea: javax.swing.Action[] getActions()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r13 = $r3[i1];

        $r14 = interfaceinvoke r13.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>($r14, r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCutAction()>();

        $r5 = interfaceinvoke $r4.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r6 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCutAction()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>($r5, $r6);

        $r7 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>();

        $r8 = interfaceinvoke $r7.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r9 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>($r8, $r9);

        $r10 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>();

        $r11 = interfaceinvoke $r10.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r12 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>();

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>($r11, $r12);

        return $r0;
    }

    protected java.lang.String getActionMapName()
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        return "RTextAreaUI.actionMap";
    }

    public javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)
    {
        javax.swing.text.EditorKit $r0;
        org.fife.ui.rtextarea.RTextAreaUI r1;
        javax.swing.text.JTextComponent r2;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r2 := @parameter0: javax.swing.text.JTextComponent;

        $r0 = <org.fife.ui.rtextarea.RTextAreaUI: javax.swing.text.EditorKit defaultKit>;

        return $r0;
    }

    public org.fife.ui.rtextarea.RTextArea getRTextArea()
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        return $r1;
    }

    private javax.swing.ActionMap getRTextAreaActionMap()
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        javax.swing.plaf.ActionMapUIResource $r3;
        java.lang.Object $r2;
        java.lang.String $r1, $r6;
        javax.swing.ActionMap $r5, r7;
        org.fife.ui.rtextarea.RTextAreaUI$FocusAction $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: java.lang.String getActionMapName()>();

        $r2 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (javax.swing.ActionMap) $r2;

        if r7 != null goto label1;

        $r5 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: javax.swing.ActionMap createRTextAreaActionMap()>();

        r7 = $r5;

        $r6 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: java.lang.String getActionMapName()>();

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

     label1:
        $r3 = new javax.swing.plaf.ActionMapUIResource;

        specialinvoke $r3.<javax.swing.plaf.ActionMapUIResource: void <init>()>();

        $r4 = new org.fife.ui.rtextarea.RTextAreaUI$FocusAction;

        specialinvoke $r4.<org.fife.ui.rtextarea.RTextAreaUI$FocusAction: void <init>(org.fife.ui.rtextarea.RTextAreaUI)>(r0);

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("requestFocus", $r4);

        if r7 == null goto label2;

        virtualinvoke $r3.<javax.swing.ActionMap: void setParent(javax.swing.ActionMap)>(r7);

     label2:
        return $r3;
    }

    protected javax.swing.InputMap getRTextAreaInputMap()
    {
        javax.swing.plaf.InputMapUIResource $r0;
        org.fife.ui.rtextarea.RTextAreaUI r3;
        org.fife.ui.rtextarea.RTADefaultInputMap $r2;
        java.lang.Object $r1;
        javax.swing.InputMap r4;

        r3 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r0 = new javax.swing.plaf.InputMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.InputMapUIResource: void <init>()>();

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("RTextAreaUI.inputMap");

        r4 = (javax.swing.InputMap) $r1;

        if r4 != null goto label1;

        $r2 = new org.fife.ui.rtextarea.RTADefaultInputMap;

        specialinvoke $r2.<org.fife.ui.rtextarea.RTADefaultInputMap: void <init>()>();

        r4 = $r2;

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>("RTextAreaUI.inputMap", $r2);

     label1:
        virtualinvoke $r0.<javax.swing.InputMap: void setParent(javax.swing.InputMap)>(r4);

        return $r0;
    }

    protected java.awt.Rectangle getVisibleEditorRect()
    {
        java.awt.Rectangle $r2;
        java.awt.Insets $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1, $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: java.awt.Rectangle getBounds()>();

        $i0 = $r2.<java.awt.Rectangle: int width>;

        if $i0 <= 0 goto label1;

        $i1 = $r2.<java.awt.Rectangle: int height>;

        if $i1 <= 0 goto label1;

        $r2.<java.awt.Rectangle: int y> = 0;

        $r2.<java.awt.Rectangle: int x> = 0;

        $r3 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: java.awt.Insets getInsets()>();

        $i3 = $r2.<java.awt.Rectangle: int x>;

        $i2 = $r4.<java.awt.Insets: int left>;

        $i4 = $i3 + $i2;

        $r2.<java.awt.Rectangle: int x> = $i4;

        $i6 = $r2.<java.awt.Rectangle: int y>;

        $i5 = $r4.<java.awt.Insets: int top>;

        $i7 = $i6 + $i5;

        $r2.<java.awt.Rectangle: int y> = $i7;

        $i11 = $r2.<java.awt.Rectangle: int width>;

        $i9 = $r4.<java.awt.Insets: int left>;

        $i8 = $r4.<java.awt.Insets: int right>;

        $i10 = $i9 + $i8;

        $i12 = $i11 - $i10;

        $r2.<java.awt.Rectangle: int width> = $i12;

        $i16 = $r2.<java.awt.Rectangle: int height>;

        $i14 = $r4.<java.awt.Insets: int top>;

        $i13 = $r4.<java.awt.Insets: int bottom>;

        $i15 = $i14 + $i13;

        $i17 = $i16 - $i15;

        $r2.<java.awt.Rectangle: int height> = $i17;

        return $r2;

     label1:
        return null;
    }

    protected void installDefaults()
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        javax.swing.TransferHandler $r3;
        java.awt.Font $r2;
        javax.swing.text.JTextComponent $r1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextAreaUI: void installDefaults()>();

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: javax.swing.text.JTextComponent getComponent()>();

        $r2 = staticinvoke <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Font getDefaultFont()>();

        virtualinvoke $r1.<javax.swing.text.JTextComponent: void setFont(java.awt.Font)>($r2);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void correctNimbusDefaultProblems(javax.swing.text.JTextComponent)>($r1);

        $r3 = <org.fife.ui.rtextarea.RTextAreaUI: javax.swing.TransferHandler defaultTransferHandler>;

        virtualinvoke $r1.<javax.swing.text.JTextComponent: void setTransferHandler(javax.swing.TransferHandler)>($r3);

        return;
    }

    protected void installKeyboardActions()
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        javax.swing.text.Keymap $r2;
        javax.swing.InputMap $r3;
        javax.swing.ActionMap $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea getRTextArea()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: javax.swing.text.Keymap createKeymap()>();

        virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: void setKeymap(javax.swing.text.Keymap)>($r2);

        $r3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: javax.swing.InputMap getRTextAreaInputMap()>();

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r1, 0, $r3);

        $r4 = specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: javax.swing.ActionMap getRTextAreaActionMap()>();

        if $r4 == null goto label1;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r1, $r4);

     label1:
        return;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        org.fife.ui.rtextarea.RTextAreaUI r1;
        java.lang.Error $r2;
        boolean $z0;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r0 := @parameter0: javax.swing.JComponent;

        $z0 = r0 instanceof org.fife.ui.rtextarea.RTextArea;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("RTextAreaUI needs an instance of RTextArea!");

        throw $r2;

     label1:
        specialinvoke r1.<javax.swing.plaf.basic.BasicTextAreaUI: void installUI(javax.swing.JComponent)>(r0);

        return;
    }

    protected void paintBackground(java.awt.Graphics)
    {
        java.awt.Color $r2;
        java.awt.Rectangle $r4, $r6;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1, $r3;
        java.awt.Graphics r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r5 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: java.awt.Color getBackground()>();

        if $r2 == null goto label1;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        $r6 = virtualinvoke r5.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $i3 = $r6.<java.awt.Rectangle: int x>;

        $i2 = $r6.<java.awt.Rectangle: int y>;

        $i1 = $r6.<java.awt.Rectangle: int width>;

        $i0 = $r6.<java.awt.Rectangle: int height>;

        virtualinvoke r5.<java.awt.Graphics: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

     label1:
        $r3 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: java.awt.Rectangle getVisibleRect()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void paintLineHighlights(java.awt.Graphics)>(r5);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void paintCurrentLineHighlight(java.awt.Graphics,java.awt.Rectangle)>(r5, $r4);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: void paintMarginLine(java.awt.Graphics,java.awt.Rectangle)>(r5, $r4);

        return;
    }

    protected void paintCurrentLineHighlight(java.awt.Graphics, java.awt.Rectangle)
    {
        java.awt.Color $r5, $r13, $r16;
        boolean $z0, $z1;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        java.awt.Graphics r8;
        float $f0, $f1;
        java.awt.Rectangle r9;
        java.awt.Graphics2D r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.fife.ui.rtextarea.RTextArea $r1, $r2, $r4, $r6, $r7, $r10, $r12, $r15;
        javax.swing.text.Caret $r3;
        java.awt.GradientPaint $r14;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r8 := @parameter0: java.awt.Graphics;

        r9 := @parameter1: java.awt.Rectangle;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: boolean getHighlightCurrentLine()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Caret getCaret()>();

        $i0 = interfaceinvoke $r3.<javax.swing.text.Caret: int getDot()>();

        $i1 = interfaceinvoke $r3.<javax.swing.text.Caret: int getMark()>();

        if $i0 != $i1 goto label4;

        $r4 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r5 = virtualinvoke $r4.<org.fife.ui.rtextarea.RTextArea: java.awt.Color getCurrentLineHighlightColor()>();

        $r6 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $i2 = virtualinvoke $r6.<org.fife.ui.rtextarea.RTextArea: int getLineHeight()>();

        $r7 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $z1 = virtualinvoke $r7.<org.fife.ui.rtextarea.RTextArea: boolean getFadeCurrentLineHighlight()>();

        if $z1 == 0 goto label3;

        r11 = (java.awt.Graphics2D) r8;

        $r12 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r13 = virtualinvoke $r12.<org.fife.ui.rtextarea.RTextArea: java.awt.Color getBackground()>();

        $r14 = new java.awt.GradientPaint;

        $i6 = r9.<java.awt.Rectangle: int x>;

        $f1 = (float) $i6;

        $i8 = r9.<java.awt.Rectangle: int x>;

        $i7 = r9.<java.awt.Rectangle: int width>;

        $i9 = $i8 + $i7;

        $f0 = (float) $i9;

        if $r13 != null goto label1;

        $r16 = <java.awt.Color: java.awt.Color WHITE>;

        goto label2;

     label1:
        $r16 = $r13;

     label2:
        specialinvoke $r14.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>($f1, 0.0F, $r5, $f0, 0.0F, $r16);

        virtualinvoke r11.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14);

        $i12 = r9.<java.awt.Rectangle: int x>;

        $r15 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $i11 = $r15.<org.fife.ui.rtextarea.RTextArea: int currentCaretY>;

        $i10 = r9.<java.awt.Rectangle: int width>;

        virtualinvoke r11.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i12, $i11, $i10, $i2);

        goto label4;

     label3:
        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i5 = r9.<java.awt.Rectangle: int x>;

        $r10 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $i4 = $r10.<org.fife.ui.rtextarea.RTextArea: int currentCaretY>;

        $i3 = r9.<java.awt.Rectangle: int width>;

        virtualinvoke r8.<java.awt.Graphics: void fillRect(int,int,int,int)>($i5, $i4, $i3, $i2);

     label4:
        return;
    }

    protected void paintLineHighlights(java.awt.Graphics)
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        org.fife.ui.rtextarea.LineHighlightManager $r2;
        java.awt.Graphics r3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r3 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.LineHighlightManager getLineHighlightManager()>();

        if $r2 == null goto label1;

        virtualinvoke $r2.<org.fife.ui.rtextarea.LineHighlightManager: void paintLineHighlights(java.awt.Graphics)>(r3);

     label1:
        return;
    }

    protected void paintMarginLine(java.awt.Graphics, java.awt.Rectangle)
    {
        java.awt.Color $r4;
        java.awt.Rectangle r8;
        java.awt.Insets $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1, $r3, $r5, $r7;
        java.awt.Graphics r2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        r2 := @parameter0: java.awt.Graphics;

        r8 := @parameter1: java.awt.Rectangle;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $z0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: boolean isMarginLineEnabled()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: java.awt.Color getMarginLineColor()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $r5 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r6 = virtualinvoke $r5.<org.fife.ui.rtextarea.RTextArea: java.awt.Insets getInsets()>();

        $r7 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $i0 = virtualinvoke $r7.<org.fife.ui.rtextarea.RTextArea: int getMarginLinePixelLocation()>();

        if $r6 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = $r6.<java.awt.Insets: int left>;

     label2:
        $i5 = $i0 + $i6;

        $i4 = r8.<java.awt.Rectangle: int y>;

        $i2 = r8.<java.awt.Rectangle: int y>;

        $i1 = r8.<java.awt.Rectangle: int height>;

        $i3 = $i2 + $i1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i5, $i4, $i5, $i3);

     label3:
        return;
    }

    public int yForLine(int) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        int i0, $i1, $i2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $i1 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: int getLineStartOffset(int)>(i0);

        $i2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: int yForLineContaining(int)>($i1);

        return $i2;
    }

    public int yForLineContaining(int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r2;
        org.fife.ui.rtextarea.RTextAreaUI r0;
        org.fife.ui.rtextarea.RTextArea $r1;
        int i0, $i1, $i3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaUI;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaUI: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int)>($r1, i0);

        if $r2 == null goto label1;

        $i1 = $r2.<java.awt.Rectangle: int y>;

        goto label2;

     label1:
        $i3 = (int) -1;

        $i1 = $i3;

     label2:
        return $i1;
    }

    static void <clinit>()
    {
        org.fife.ui.rtextarea.RTextAreaEditorKit $r0;
        org.fife.ui.rtextarea.RTATextTransferHandler $r1;

        <org.fife.ui.rtextarea.RTextAreaUI: java.lang.String RTEXTAREA_KEYMAP_NAME> = "RTextAreaKeymap";

        <org.fife.ui.rtextarea.RTextAreaUI: java.lang.String SHARED_INPUT_MAP_NAME> = "RTextAreaUI.inputMap";

        <org.fife.ui.rtextarea.RTextAreaUI: java.lang.String SHARED_ACTION_MAP_NAME> = "RTextAreaUI.actionMap";

        $r0 = new org.fife.ui.rtextarea.RTextAreaEditorKit;

        specialinvoke $r0.<org.fife.ui.rtextarea.RTextAreaEditorKit: void <init>()>();

        <org.fife.ui.rtextarea.RTextAreaUI: javax.swing.text.EditorKit defaultKit> = $r0;

        $r1 = new org.fife.ui.rtextarea.RTATextTransferHandler;

        specialinvoke $r1.<org.fife.ui.rtextarea.RTATextTransferHandler: void <init>()>();

        <org.fife.ui.rtextarea.RTextAreaUI: javax.swing.TransferHandler defaultTransferHandler> = $r1;

        return;
    }
}
