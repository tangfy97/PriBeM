public class org.apache.batik.dom.svg.SVGOMAnimatedRect extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue implements org.w3c.dom.svg.SVGAnimatedRect
{
    protected org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal;
    protected org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal;
    protected boolean changing;
    protected java.lang.String defaultValue;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3, r4;
        org.apache.batik.dom.svg.AbstractElement r1;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: java.lang.String defaultValue> = r4;

        return;
    }

    public org.w3c.dom.svg.SVGRect getBaseVal()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect $r1, $r2, $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        return $r2;
    }

    public org.w3c.dom.svg.SVGRect getAnimVal()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect $r1, $r2, $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal>;

        return $r2;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect $r3, $r4, $r5;
        org.apache.batik.anim.values.AnimatableRectValue r2;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r1;
        org.apache.batik.anim.values.AnimatableValue r0;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        if r0 != null goto label1;

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        goto label3;

     label1:
        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        r2 = (org.apache.batik.anim.values.AnimatableRectValue) r0;

        $r3 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal>;

        if $r3 != null goto label2;

        $r5 = new org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        specialinvoke $r5.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect)>(r1);

        r1.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal> = $r5;

     label2:
        $r4 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect animVal>;

        $f0 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableRectValue: float getX()>();

        $f1 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableRectValue: float getY()>();

        $f2 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableRectValue: float getWidth()>();

        $f3 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableRectValue: float getHeight()>();

        virtualinvoke $r4.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: void setAnimatedValue(float,float,float,float)>($f0, $f1, $f2, $f3);

     label3:
        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r3;
        org.apache.batik.anim.values.AnimatableRectValue $r2;
        org.w3c.dom.svg.SVGRect $r1;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r3 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.w3c.dom.svg.SVGRect getBaseVal()>();

        $r2 = new org.apache.batik.anim.values.AnimatableRectValue;

        $f0 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGRect: float getX()>();

        $f1 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGRect: float getY()>();

        $f2 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGRect: float getWidth()>();

        $f3 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGRect: float getHeight()>();

        specialinvoke $r2.<org.apache.batik.anim.values.AnimatableRectValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,float,float,float,float)>(r3, $f0, $f1, $f2, $f3);

        return $r2;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect $r1, $r2;
        java.lang.String r4;
        org.w3c.dom.Attr r3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Attr r3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect $r1, $r2;
        java.lang.String r4, r5;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect $r1, $r2;
        java.lang.String r4;
        org.w3c.dom.Attr r3;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect$BaseSVGRect: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }
}
