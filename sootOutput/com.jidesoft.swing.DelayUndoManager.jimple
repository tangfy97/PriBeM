public class com.jidesoft.swing.DelayUndoManager extends javax.swing.undo.UndoManager
{
    private static final long serialVersionUID;
    private int _delay;
    private javax.swing.undo.CompoundEdit _cache;
    private static final java.util.logging.Logger LOGGER;
    protected javax.swing.Timer _timer;

    public void <init>()
    {
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        specialinvoke r0.<javax.swing.undo.UndoManager: void <init>()>();

        r0.<com.jidesoft.swing.DelayUndoManager: int _delay> = 500;

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.undo.UndoManager: void <init>()>();

        r0.<com.jidesoft.swing.DelayUndoManager: int _delay> = 500;

        r0.<com.jidesoft.swing.DelayUndoManager: int _delay> = i0;

        return;
    }

    public boolean isCacheEmpty()
    {
        javax.swing.undo.CompoundEdit $r1;
        com.jidesoft.swing.DelayUndoManager r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        $r1 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public synchronized void commitCache()
    {
        javax.swing.undo.CompoundEdit $r1, $r2, $r8;
        java.util.logging.Logger $r4, $r6;
        java.util.logging.Level $r3;
        com.jidesoft.swing.DelayUndoManager r0;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        $r1 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        if $r1 == null goto label2;

        $r2 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        virtualinvoke $r2.<javax.swing.undo.CompoundEdit: void end()>();

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void addEditWithoutCaching()>();

        $r4 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z0 == 0 goto label1;

        $r6 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit cache: ");

        $r8 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void fine(java.lang.String)>($r10);

     label1:
        r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache> = null;

     label2:
        return;
    }

    public void addEditWithoutCaching()
    {
        javax.swing.undo.CompoundEdit $r1;
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        $r1 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        staticinvoke <com.jidesoft.swing.DelayUndoManager: boolean access$001(com.jidesoft.swing.DelayUndoManager,javax.swing.undo.UndoableEdit)>(r0, $r1);

        return;
    }

    public synchronized void discardCache()
    {
        com.jidesoft.swing.DelayUndoManager r0;
        javax.swing.Timer $r1, $r2;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache> = null;

        $r1 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        virtualinvoke $r2.<javax.swing.Timer: void stop()>();

        r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer> = null;

     label1:
        return;
    }

    public synchronized boolean addEdit(javax.swing.undo.UndoableEdit)
    {
        javax.swing.undo.CompoundEdit $r1, $r6, $r15, $r16;
        java.util.logging.Level $r2, $r13;
        com.jidesoft.swing.DelayUndoManager r0;
        int $i0;
        java.lang.String $r12, $r25;
        com.jidesoft.swing.DelayUndoManager$1 $r18;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.Timer $r4, $r7, $r17, $r19, $r20;
        javax.swing.undo.UndoableEdit r5;
        java.util.logging.Logger $r3, $r9, $r14, $r22;
        java.lang.StringBuilder $r8, $r10, $r11, $r21, $r23, $r24;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        r5 := @parameter0: javax.swing.undo.UndoableEdit;

        $r1 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        if $r1 != null goto label3;

        $r14 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r14.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r13);

        if $z2 == 0 goto label1;

        $r22 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create cache: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.logging.Logger: void fine(java.lang.String)>($r25);

     label1:
        $r15 = new javax.swing.undo.CompoundEdit;

        specialinvoke $r15.<javax.swing.undo.CompoundEdit: void <init>()>();

        r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache> = $r15;

        $r16 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        $z3 = virtualinvoke $r16.<javax.swing.undo.CompoundEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>(r5);

        if $z3 == 0 goto label2;

        $r17 = new javax.swing.Timer;

        $i0 = r0.<com.jidesoft.swing.DelayUndoManager: int _delay>;

        $r18 = new com.jidesoft.swing.DelayUndoManager$1;

        specialinvoke $r18.<com.jidesoft.swing.DelayUndoManager$1: void <init>(com.jidesoft.swing.DelayUndoManager)>(r0);

        specialinvoke $r17.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i0, $r18);

        r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer> = $r17;

        $r19 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        virtualinvoke $r19.<javax.swing.Timer: void setRepeats(boolean)>(0);

        $r20 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        virtualinvoke $r20.<javax.swing.Timer: void start()>();

     label2:
        return $z3;

     label3:
        $r3 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label4;

        $r9 = <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add to cache: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

     label4:
        $r4 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        if $r4 == null goto label5;

        $r7 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.Timer _timer>;

        virtualinvoke $r7.<javax.swing.Timer: void restart()>();

     label5:
        $r6 = r0.<com.jidesoft.swing.DelayUndoManager: javax.swing.undo.CompoundEdit _cache>;

        $z1 = virtualinvoke $r6.<javax.swing.undo.CompoundEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>(r5);

        return $z1;
    }

    public synchronized boolean canUndo()
    {
        com.jidesoft.swing.DelayUndoManager r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void commitCache()>();

        $z0 = specialinvoke r0.<javax.swing.undo.UndoManager: boolean canUndo()>();

        return $z0;
    }

    public synchronized boolean canRedo()
    {
        com.jidesoft.swing.DelayUndoManager r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void commitCache()>();

        $z0 = specialinvoke r0.<javax.swing.undo.UndoManager: boolean canRedo()>();

        return $z0;
    }

    public synchronized void undo() throws javax.swing.undo.CannotUndoException
    {
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void commitCache()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void undo()>();

        return;
    }

    public synchronized void redo() throws javax.swing.undo.CannotRedoException
    {
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void commitCache()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void redo()>();

        return;
    }

    public synchronized void discardAllEdits()
    {
        com.jidesoft.swing.DelayUndoManager r0;

        r0 := @this: com.jidesoft.swing.DelayUndoManager;

        specialinvoke r0.<javax.swing.undo.UndoManager: void discardAllEdits()>();

        virtualinvoke r0.<com.jidesoft.swing.DelayUndoManager: void discardCache()>();

        return;
    }

    static boolean access$001(com.jidesoft.swing.DelayUndoManager, javax.swing.undo.UndoableEdit)
    {
        javax.swing.undo.UndoableEdit r1;
        com.jidesoft.swing.DelayUndoManager r0;
        boolean $z0;

        r0 := @parameter0: com.jidesoft.swing.DelayUndoManager;

        r1 := @parameter1: javax.swing.undo.UndoableEdit;

        $z0 = specialinvoke r0.<javax.swing.undo.UndoManager: boolean addEdit(javax.swing.undo.UndoableEdit)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.jidesoft.swing.DelayUndoManager: long serialVersionUID> = -2910365359251677780L;

        $r0 = class "Lcom/jidesoft/swing/DelayUndoManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.jidesoft.swing.DelayUndoManager: java.util.logging.Logger LOGGER> = $r2;

        return;
    }
}
