class org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction extends org.springframework.aop.support.DelegatingIntroductionInterceptor implements org.springframework.beans.factory.NamedBean
{
    private final java.lang.String beanName;

    public void <init>(java.lang.String)
    {
        org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.aop.support.DelegatingIntroductionInterceptor: void <init>()>();

        r0.<org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction: java.lang.String beanName> = r1;

        return;
    }

    public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        java.lang.IllegalStateException $r6;
        org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction r3;
        org.aopalliance.intercept.MethodInvocation r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8;
        java.lang.String $r2, $r4, $r9;
        org.springframework.aop.ProxyMethodInvocation r1;
        boolean $z0;

        r3 := @this: org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction;

        r0 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $z0 = r0 instanceof org.springframework.aop.ProxyMethodInvocation;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("MethodInvocation is not a Spring ProxyMethodInvocation: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label1:
        r1 = (org.springframework.aop.ProxyMethodInvocation) r0;

        $r2 = staticinvoke <org.springframework.aop.interceptor.ExposeBeanNameAdvisors: java.lang.String access$0()>();

        $r4 = r3.<org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction: java.lang.String beanName>;

        interfaceinvoke r1.<org.springframework.aop.ProxyMethodInvocation: void setUserAttribute(java.lang.String,java.lang.Object)>($r2, $r4);

        $r5 = specialinvoke r3.<org.springframework.aop.support.DelegatingIntroductionInterceptor: java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation)>(r0);

        return $r5;
    }

    public java.lang.String getBeanName()
    {
        org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction;

        $r1 = r0.<org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction: java.lang.String beanName>;

        return $r1;
    }
}
