public class org.springframework.beans.propertyeditors.LocaleEditor extends java.beans.PropertyEditorSupport
{

    public void <init>()
    {
        org.springframework.beans.propertyeditors.LocaleEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.LocaleEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        return;
    }

    public void setAsText(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.propertyeditors.LocaleEditor r0;
        java.util.Locale $r2;

        r0 := @this: org.springframework.beans.propertyeditors.LocaleEditor;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>(r1);

        virtualinvoke r0.<org.springframework.beans.propertyeditors.LocaleEditor: void setValue(java.lang.Object)>($r2);

        return;
    }

    public java.lang.String getAsText()
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        org.springframework.beans.propertyeditors.LocaleEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.LocaleEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.LocaleEditor: java.lang.Object getValue()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = "";

     label2:
        return $r2;
    }
}
