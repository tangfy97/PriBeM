public class com.hp.hpl.jena.graph.impl.CollectionGraph extends com.hp.hpl.jena.graph.impl.GraphBase
{
    private com.hp.hpl.jena.graph.Capabilities cgCapabilities;
    private java.util.Collection triples;

    public void <init>()
    {
        java.util.HashSet $r1;
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: void <init>(java.util.Collection)>($r1);

        return;
    }

    public void <init>(java.util.Collection)
    {
        com.hp.hpl.jena.graph.impl.CollectionGraph$1 $r1;
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;
        java.util.Collection r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphBase: void <init>()>();

        $r1 = new com.hp.hpl.jena.graph.impl.CollectionGraph$1;

        specialinvoke $r1.<com.hp.hpl.jena.graph.impl.CollectionGraph$1: void <init>(com.hp.hpl.jena.graph.impl.CollectionGraph)>(r0);

        r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: com.hp.hpl.jena.graph.Capabilities cgCapabilities> = $r1;

        r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: java.util.Collection triples> = r2;

        return;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator graphBaseFind(com.hp.hpl.jena.graph.TripleMatch)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        java.util.Iterator $r2;
        com.hp.hpl.jena.util.iterator.WrappedIterator $r3;
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;
        java.util.Collection $r1;
        com.hp.hpl.jena.graph.impl.CollectionGraph$MatchFilter $r4;
        com.hp.hpl.jena.graph.TripleMatch r5;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        r5 := @parameter0: com.hp.hpl.jena.graph.TripleMatch;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: java.util.Collection triples>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.WrappedIterator createNoRemove(java.util.Iterator)>($r2);

        $r4 = new com.hp.hpl.jena.graph.impl.CollectionGraph$MatchFilter;

        specialinvoke $r4.<com.hp.hpl.jena.graph.impl.CollectionGraph$MatchFilter: void <init>(com.hp.hpl.jena.graph.impl.CollectionGraph,com.hp.hpl.jena.graph.TripleMatch)>(r0, r5);

        $r6 = virtualinvoke $r3.<com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r4);

        return $r6;
    }

    public void performAdd(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;
        java.util.Collection $r2, $r3;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: java.util.Collection triples>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: java.util.Collection triples>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void performDelete(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;
        com.hp.hpl.jena.graph.Triple r1;
        java.util.Collection $r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: java.util.Collection triples>;

        interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public com.hp.hpl.jena.graph.Capabilities getCapabilities()
    {
        com.hp.hpl.jena.graph.impl.CollectionGraph r0;
        com.hp.hpl.jena.graph.Capabilities $r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.CollectionGraph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.CollectionGraph: com.hp.hpl.jena.graph.Capabilities cgCapabilities>;

        return $r1;
    }
}
