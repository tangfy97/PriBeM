public class org.apache.zookeeper.server.LogFormatter extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;

    public void <init>()
    {
        org.apache.zookeeper.server.LogFormatter r0;

        r0 := @this: org.apache.zookeeper.server.LogFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        byte[] $r65;
        byte $b8, $b15;
        org.apache.jute.Record $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r34, $r40, $r41, $r42, $r43, $r47, $r48, $r49, $r53, $r55, $r61, $r62, $r63, $r68, $r69, $r70, $r71, $r73, $r76;
        long $l3, $l7, $l9, $l10, $l12, $l13, $l16, $l18;
        java.lang.String $r2, $r11, $r19, $r22, $r25, $r28, $r31, $r35, $r44, $r50, $r54, $r56, $r64;
        java.io.IOException $r74;
        org.apache.zookeeper.txn.TxnHeader $r75;
        java.util.Date $r77;
        java.util.zip.Adler32 $r72;
        java.text.DateFormat $r17;
        java.io.EOFException $r58, $r78;
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i11, $i14, i17, $i19;
        java.io.PrintStream $r6, $r16, $r46, $r52, $r57, $r60;
        org.slf4j.Logger $r36;
        org.apache.zookeeper.server.persistence.FileHeader $r67;
        java.io.FileInputStream $r66;
        org.apache.jute.BinaryInputArchive $r3;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("USAGE: LogFormatter log_file");

        staticinvoke <java.lang.System: void exit(int)>(2);

     label1:
        $r66 = new java.io.FileInputStream;

        $r2 = r0[0];

        specialinvoke $r66.<java.io.FileInputStream: void <init>(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.jute.BinaryInputArchive: org.apache.jute.BinaryInputArchive getArchive(java.io.InputStream)>($r66);

        $r67 = new org.apache.zookeeper.server.persistence.FileHeader;

        specialinvoke $r67.<org.apache.zookeeper.server.persistence.FileHeader: void <init>()>();

        virtualinvoke $r67.<org.apache.zookeeper.server.persistence.FileHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r3, "fileheader");

        $i1 = virtualinvoke $r67.<org.apache.zookeeper.server.persistence.FileHeader: int getMagic()>();

        $i2 = <org.apache.zookeeper.server.persistence.FileTxnLog: int TXNLOG_MAGIC>;

        if $i1 == $i2 goto label2;

        $r52 = <java.lang.System: java.io.PrintStream err>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid magic number for ");

        $r54 = r0[0];

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r56);

        staticinvoke <java.lang.System: void exit(int)>(2);

     label2:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZooKeeper Transactional Log File with dbid ");

        $l3 = virtualinvoke $r67.<org.apache.zookeeper.server.persistence.FileHeader: long getDbid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txnlog format version ");

        $i4 = virtualinvoke $r67.<org.apache.zookeeper.server.persistence.FileHeader: int getVersion()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

        i17 = 0;

     label3:
        $l18 = virtualinvoke $r3.<org.apache.jute.BinaryInputArchive: long readLong(java.lang.String)>("crcvalue");

        $r65 = virtualinvoke $r3.<org.apache.jute.BinaryInputArchive: byte[] readBuffer(java.lang.String)>("txnEntry");

     label4:
        goto label6;

     label5:
        $r58 := @caughtexception;

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EOF reached after ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txns.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r64);

        return;

     label6:
        $i5 = lengthof $r65;

        if $i5 != 0 goto label7;

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EOF reached after ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txns.");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r50);

        return;

     label7:
        $r72 = new java.util.zip.Adler32;

        specialinvoke $r72.<java.util.zip.Adler32: void <init>()>();

        $i6 = lengthof $r65;

        interfaceinvoke $r72.<java.util.zip.Checksum: void update(byte[],int,int)>($r65, 0, $i6);

        $l7 = interfaceinvoke $r72.<java.util.zip.Checksum: long getValue()>();

        $b8 = $l18 cmp $l7;

        if $b8 == 0 goto label8;

        $r74 = new java.io.IOException;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRC doesn\'t match ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $l16 = interfaceinvoke $r72.<java.util.zip.Checksum: long getValue()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.io.IOException: void <init>(java.lang.String)>($r44);

        throw $r74;

     label8:
        $r75 = new org.apache.zookeeper.txn.TxnHeader;

        specialinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: void <init>()>();

        $r14 = staticinvoke <org.apache.zookeeper.server.util.SerializeUtils: org.apache.jute.Record deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader)>($r65, $r75);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r17 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 1);

        $r77 = new java.util.Date;

        $l9 = virtualinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: long getTime()>();

        specialinvoke $r77.<java.util.Date: void <init>(long)>($l9);

        $r19 = virtualinvoke $r17.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r77);

        $r20 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session 0x");

        $l10 = virtualinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r22 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cxid 0x");

        $i11 = virtualinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: int getCxid()>();

        $l12 = (long) $i11;

        $r25 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" zxid 0x");

        $l13 = virtualinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $r28 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i14 = virtualinvoke $r75.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r31 = staticinvoke <org.apache.zookeeper.server.TraceFormatter: java.lang.String op2String(int)>($i14);

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $b15 = virtualinvoke $r3.<org.apache.jute.BinaryInputArchive: byte readByte(java.lang.String)>("EOR");

        $i19 = (int) $b15;

        if $i19 == 66 goto label9;

        $r36 = <org.apache.zookeeper.server.LogFormatter: org.slf4j.Logger LOG>;

        interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String)>("Last transaction was partial.");

        $r78 = new java.io.EOFException;

        specialinvoke $r78.<java.io.EOFException: void <init>(java.lang.String)>("Last transaction was partial.");

        throw $r78;

     label9:
        i17 = i17 + 1;

        goto label3;

        catch java.io.EOFException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/LogFormatter;");

        <org.apache.zookeeper.server.LogFormatter: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
