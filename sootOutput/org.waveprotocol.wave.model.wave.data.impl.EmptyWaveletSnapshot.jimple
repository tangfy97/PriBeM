public class org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.ReadableWaveletData
{
    private final org.waveprotocol.wave.model.id.WaveId waveId;
    private final org.waveprotocol.wave.model.id.WaveletId waveletId;
    private final org.waveprotocol.wave.model.wave.ParticipantId creator;
    private final long creationTime;
    private final org.waveprotocol.wave.model.version.HashedVersion hashedVersion;

    public void <init>(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.version.HashedVersion, long)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.version.HashedVersion r4;
        org.waveprotocol.wave.model.id.WaveletId r2;
        long l0;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        r4 := @parameter3: org.waveprotocol.wave.model.version.HashedVersion;

        l0 := @parameter4: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.id.WaveletId waveletId> = r2;

        r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.wave.ParticipantId creator> = r3;

        r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.version.HashedVersion hashedVersion> = r4;

        r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: long creationTime> = l0;

        return;
    }

    public long getCreationTime()
    {
        long $l0;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $l0 = r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: long creationTime>;

        return $l0;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getCreator()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r1;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.wave.ParticipantId creator>;

        return $r1;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getHashedVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.version.HashedVersion hashedVersion>;

        return $r1;
    }

    public org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.util.Set getDocumentIds()
    {
        java.util.Set $r0;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public long getLastModifiedTime()
    {
        long $l0;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $l0 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: long getCreationTime()>();

        return $l0;
    }

    public java.util.Set getParticipants()
    {
        java.util.Set $r0;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r0 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r0;
    }

    public long getVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        long $l0;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.version.HashedVersion getHashedVersion()>();

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        return $l0;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.id.WaveId $r1;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.id.WaveId waveId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.id.WaveletId $r1;
        org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.EmptyWaveletSnapshot: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        return $r1;
    }
}
