public class org.apache.http.impl.client.DefaultProxyAuthenticationHandler extends org.apache.http.impl.client.AbstractAuthenticationHandler
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultProxyAuthenticationHandler r0;

        r0 := @this: org.apache.http.impl.client.DefaultProxyAuthenticationHandler;

        specialinvoke r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()>();

        return;
    }

    public boolean isAuthenticationRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.protocol.HttpContext r4;
        int $i0;
        org.apache.http.HttpResponse r0;
        org.apache.http.impl.client.DefaultProxyAuthenticationHandler r3;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.StatusLine $r1;
        boolean $z0;

        r3 := @this: org.apache.http.impl.client.DefaultProxyAuthenticationHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r4 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r2;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r1.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 407 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.util.Map getChallenges(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.Header[] $r1;
        org.apache.http.protocol.HttpContext r5;
        java.util.Map $r3;
        org.apache.http.HttpResponse r0;
        org.apache.http.impl.client.DefaultProxyAuthenticationHandler r2;
        java.lang.IllegalArgumentException $r4;

        r2 := @this: org.apache.http.impl.client.DefaultProxyAuthenticationHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r5 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r4;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Proxy-Authenticate");

        $r3 = virtualinvoke r2.<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])>($r1);

        return $r3;
    }

    protected java.util.List getAuthPreferences(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        java.util.List r3, $r6;
        org.apache.http.protocol.HttpContext r5;
        org.apache.http.params.HttpParams $r1;
        org.apache.http.HttpResponse r0;
        org.apache.http.impl.client.DefaultProxyAuthenticationHandler r4;
        java.lang.Object $r2;

        r4 := @this: org.apache.http.impl.client.DefaultProxyAuthenticationHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r5 := @parameter1: org.apache.http.protocol.HttpContext;

        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        $r2 = interfaceinvoke $r1.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.auth.proxy-scheme-pref");

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        $r6 = specialinvoke r4.<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r0, r5);

        return $r6;
    }
}
