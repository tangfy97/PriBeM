public class org.apache.pdfbox.util.LayerUtility extends java.lang.Object
{
    private static final boolean DEBUG;
    private org.apache.pdfbox.pdmodel.PDDocument targetDoc;
    private org.apache.pdfbox.util.PDFCloneUtility cloner;
    private static final java.util.Set PAGE_TO_FORM_FILTER;

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument)
    {
        org.apache.pdfbox.util.PDFCloneUtility $r2;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.util.LayerUtility r0;

        r0 := @this: org.apache.pdfbox.util.LayerUtility;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument targetDoc> = r1;

        $r2 = new org.apache.pdfbox.util.PDFCloneUtility;

        specialinvoke $r2.<org.apache.pdfbox.util.PDFCloneUtility: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r1);

        r0.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.util.PDFCloneUtility cloner> = $r2;

        return;
    }

    public org.apache.pdfbox.pdmodel.PDDocument getDocument()
    {
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        org.apache.pdfbox.util.LayerUtility r0;

        r0 := @this: org.apache.pdfbox.util.LayerUtility;

        $r1 = r0.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument targetDoc>;

        return $r1;
    }

    public void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        byte[] $r7, $r13;
        org.apache.pdfbox.cos.COSArray $r25, r28;
        java.lang.String $r6, $r12, $r22, $r24;
        org.apache.pdfbox.cos.COSStream $r4, $r10, r27;
        boolean $z0, $z1;
        java.io.OutputStream $r5, $r11;
        org.apache.pdfbox.cos.COSName $r16, $r26;
        org.apache.pdfbox.cos.COSDocument $r3, $r9;
        org.apache.pdfbox.pdmodel.PDDocument $r2, $r8;
        java.io.IOException $r18;
        org.apache.pdfbox.util.LayerUtility r1;
        org.apache.pdfbox.cos.COSDictionary $r0, $r15;
        org.apache.pdfbox.cos.COSBase $r17;
        org.apache.pdfbox.pdmodel.PDPage r14;
        java.lang.StringBuilder $r19, $r20, $r23;
        java.lang.Class $r21;

        r1 := @this: org.apache.pdfbox.util.LayerUtility;

        r14 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        $r0 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument getDocument()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)>($r0);

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r6 = "q\n";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

        $r8 = virtualinvoke r1.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument getDocument()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)>($r0);

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r12 = "Q\n";

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r13);

        virtualinvoke $r11.<java.io.OutputStream: void flush()>();

        $r15 = virtualinvoke r14.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        $r17 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r16);

        $z0 = $r17 instanceof org.apache.pdfbox.cos.COSStream;

        if $z0 == 0 goto label1;

        r27 = (org.apache.pdfbox.cos.COSStream) $r17;

        $r25 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r25.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        virtualinvoke $r25.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r4);

        virtualinvoke $r25.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r27);

        virtualinvoke $r25.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r10);

        $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        virtualinvoke $r15.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r26, $r25);

        goto label3;

     label1:
        $z1 = $r17 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label2;

        r28 = (org.apache.pdfbox.cos.COSArray) $r17;

        virtualinvoke r28.<org.apache.pdfbox.cos.COSArray: void add(int,org.apache.pdfbox.cos.COSBase)>(0, $r4);

        virtualinvoke r28.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r10);

        goto label3;

     label2:
        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents are unknown type: ");

        $r21 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label3:
        return;
    }

    public org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument, int) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm $r6;
        org.apache.pdfbox.util.LayerUtility r5;
        java.util.List $r2;
        int i0;
        java.lang.Object $r3;
        org.apache.pdfbox.pdmodel.PDPage r4;

        r5 := @this: org.apache.pdfbox.util.LayerUtility;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (org.apache.pdfbox.pdmodel.PDPage) $r3;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)>(r0, r4);

        return $r6;
    }

    public org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r6, r22;
        java.util.Set $r14;
        org.apache.pdfbox.pdmodel.PDResources $r9, $r10;
        java.awt.geom.AffineTransform r16, $r23;
        org.apache.pdfbox.cos.COSBase $r2;
        org.apache.pdfbox.pdmodel.PDPage r0;
        org.apache.fontbox.util.BoundingBox $r20;
        org.apache.pdfbox.util.PDFCloneUtility $r11;
        org.apache.pdfbox.pdmodel.common.PDStream $r1, $r4;
        org.apache.pdfbox.util.LayerUtility r5;
        boolean $z0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm $r8;
        org.apache.pdfbox.cos.COSDictionary $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29;
        int $i0;
        org.apache.pdfbox.cos.COSStream r3, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r17, $r18, r19, $r21, $r24;
        org.apache.pdfbox.util.Matrix $r15;
        java.io.InputStream $r7;

        r5 := @this: org.apache.pdfbox.util.LayerUtility;

        r22 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter1: org.apache.pdfbox.pdmodel.PDPage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDStream getContents()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        r3 = (org.apache.pdfbox.cos.COSStream) $r2;

        $r4 = new org.apache.pdfbox.pdmodel.common.PDStream;

        $r6 = r5.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument targetDoc>;

        $r7 = virtualinvoke r3.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)>($r6, $r7, 0);

        $r8 = new org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm;

        specialinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: void <init>(org.apache.pdfbox.pdmodel.common.PDStream)>($r4);

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        $r10 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r10.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        $r11 = r5.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.util.PDFCloneUtility cloner>;

        virtualinvoke $r11.<org.apache.pdfbox.util.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r9, $r10);

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r10);

        $r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r13 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r14 = <org.apache.pdfbox.util.LayerUtility: java.util.Set PAGE_TO_FORM_FILTER>;

        specialinvoke r5.<org.apache.pdfbox.util.LayerUtility: void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)>($r12, $r13, $r14, 1);

        $r15 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: org.apache.pdfbox.util.Matrix getMatrix()>();

        if $r15 == null goto label1;

        $r23 = virtualinvoke $r15.<org.apache.pdfbox.util.Matrix: java.awt.geom.AffineTransform createAffineTransform()>();

        goto label2;

     label1:
        $r23 = new java.awt.geom.AffineTransform;

        specialinvoke $r23.<java.awt.geom.AffineTransform: void <init>()>();

     label2:
        r16 = $r23;

        $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findMediaBox()>();

        $r18 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        if $r18 == null goto label3;

        $r24 = $r18;

        goto label4;

     label3:
        $r24 = $r17;

     label4:
        r19 = $r24;

        $i0 = staticinvoke <org.apache.pdfbox.util.LayerUtility: int getNormalizedRotation(org.apache.pdfbox.pdmodel.PDPage)>(r0);

        $f0 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $f1 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $f2 = $f0 - $f1;

        $d0 = (double) $f2;

        $f3 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>();

        $f4 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>();

        $f5 = $f3 - $f4;

        $d1 = (double) $f5;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void translate(double,double)>($d0, $d1);

        lookupswitch($i0)
        {
            case 90: goto label5;
            case 180: goto label6;
            case 270: goto label7;
            default: goto label8;
        };

     label5:
        $f19 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f20 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f21 = $f19 / $f20;

        $d7 = (double) $f21;

        $f22 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f23 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f24 = $f22 / $f23;

        $d8 = (double) $f24;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void scale(double,double)>($d7, $d8);

        $f25 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $d9 = (double) $f25;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void translate(double,double)>(0.0, $d9);

        virtualinvoke r16.<java.awt.geom.AffineTransform: void rotate(double)>(-1.5707963267948966);

        goto label8;

     label6:
        $f17 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $d5 = (double) $f17;

        $f18 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $d6 = (double) $f18;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void translate(double,double)>($d5, $d6);

        virtualinvoke r16.<java.awt.geom.AffineTransform: void rotate(double)>(-3.141592653589793);

        goto label8;

     label7:
        $f6 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f7 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f8 = $f6 / $f7;

        $d2 = (double) $f8;

        $f9 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f10 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f11 = $f9 / $f10;

        $d3 = (double) $f11;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void scale(double,double)>($d2, $d3);

        $f12 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $d4 = (double) $f12;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void translate(double,double)>($d4, 0.0);

        virtualinvoke r16.<java.awt.geom.AffineTransform: void rotate(double)>(-4.71238898038469);

     label8:
        $f26 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $f27 = neg $f26;

        $d10 = (double) $f27;

        $f28 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>();

        $f29 = neg $f28;

        $d11 = (double) $f29;

        virtualinvoke r16.<java.awt.geom.AffineTransform: void translate(double,double)>($d10, $d11);

        $z0 = virtualinvoke r16.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z0 != 0 goto label9;

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: void setMatrix(java.awt.geom.AffineTransform)>(r16);

     label9:
        $r20 = new org.apache.fontbox.util.BoundingBox;

        specialinvoke $r20.<org.apache.fontbox.util.BoundingBox: void <init>()>();

        $f13 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        virtualinvoke $r20.<org.apache.fontbox.util.BoundingBox: void setLowerLeftX(float)>($f13);

        $f14 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>();

        virtualinvoke $r20.<org.apache.fontbox.util.BoundingBox: void setLowerLeftY(float)>($f14);

        $f15 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>();

        virtualinvoke $r20.<org.apache.fontbox.util.BoundingBox: void setUpperRightX(float)>($f15);

        $f16 = virtualinvoke r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>();

        virtualinvoke $r20.<org.apache.fontbox.util.BoundingBox: void setUpperRightY(float)>($f16);

        $r21 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r21.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.fontbox.util.BoundingBox)>($r20);

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm: void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r21);

        return $r8;
    }

    public org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm, java.awt.geom.AffineTransform, java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties $r3, $r20, r21;
        int i0;
        java.lang.String r4, $r19, $r26;
        org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup $r5, $r28;
        boolean $z0;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r2;
        org.apache.pdfbox.cos.COSName $r11, $r27;
        org.apache.pdfbox.pdmodel.PDDocument $r1, $r10;
        org.apache.pdfbox.pdmodel.edit.PDPageContentStream $r9;
        org.apache.pdfbox.pdmodel.PDResources $r7;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm r12;
        java.awt.geom.AffineTransform r13;
        java.lang.IllegalArgumentException $r15;
        org.apache.pdfbox.util.LayerUtility r0;
        org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList $r8, $r14, r22;
        org.apache.pdfbox.pdmodel.PDPage r6;
        java.lang.StringBuilder $r16, $r17, $r18, $r23, $r24, $r25;

        r0 := @this: org.apache.pdfbox.util.LayerUtility;

        r6 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r12 := @parameter1: org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectForm;

        r13 := @parameter2: java.awt.geom.AffineTransform;

        r4 := @parameter3: java.lang.String;

        $r1 = r0.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument targetDoc>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties getOCProperties()>();

        r21 = $r3;

        if $r3 != null goto label1;

        $r20 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties;

        specialinvoke $r20.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: void <init>()>();

        r21 = $r20;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)>($r20);

     label1:
        $z0 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: boolean hasGroup(java.lang.String)>(r4);

        if $z0 == 0 goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Optional group (layer) already exists: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label2:
        $r5 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: void <init>(java.lang.String)>(r4);

        virtualinvoke r21.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)>($r5);

        $r7 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList getProperties()>();

        r22 = $r8;

        if $r8 != null goto label3;

        $r14 = new org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList;

        specialinvoke $r14.<org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList: void <init>()>();

        r22 = $r14;

        virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDResources: void setProperties(org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList)>($r14);

     label3:
        i0 = 0;

     label4:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MC");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r26);

        $r28 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getOptionalContentGroup(org.apache.pdfbox.cos.COSName)>($r27);

        i0 = i0 + 1;

        if $r28 != null goto label4;

        virtualinvoke r22.<org.apache.pdfbox.pdmodel.markedcontent.PDPropertyList: void putMapping(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)>($r27, $r5);

        $r9 = new org.apache.pdfbox.pdmodel.edit.PDPageContentStream;

        $r10 = r0.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.pdmodel.PDDocument targetDoc>;

        specialinvoke $r9.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean)>($r10, r6, 1, 0);

        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OC>;

        virtualinvoke $r9.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r11, $r27);

        virtualinvoke $r9.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void drawXObject(org.apache.pdfbox.pdmodel.graphics.xobject.PDXObject,java.awt.geom.AffineTransform)>(r12, r13);

        virtualinvoke $r9.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void endMarkedContentSequence()>();

        virtualinvoke $r9.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void close()>();

        return $r5;
    }

    private void transferDict(org.apache.pdfbox.cos.COSDictionary, org.apache.pdfbox.cos.COSDictionary, java.util.Set, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFCloneUtility $r9;
        java.lang.String $r13, $r14;
        boolean z0, $z1, $z2, $z3;
        org.apache.pdfbox.cos.COSName r6;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1, r12;
        org.apache.pdfbox.util.LayerUtility r8;
        org.apache.pdfbox.cos.COSDictionary r0, r7;
        org.apache.pdfbox.cos.COSBase $r11;
        java.lang.Object $r3, $r5, $r10;

        r8 := @this: org.apache.pdfbox.util.LayerUtility;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r7 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        r12 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (org.apache.pdfbox.cos.COSName) $r5;

        if z0 == 0 goto label2;

        $r14 = virtualinvoke r6.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $z2 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        if z0 != 0 goto label3;

        $r13 = virtualinvoke r6.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $z1 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        if $z1 == 0 goto label3;

        goto label1;

     label3:
        $r9 = r8.<org.apache.pdfbox.util.LayerUtility: org.apache.pdfbox.util.PDFCloneUtility cloner>;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = virtualinvoke $r9.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r10);

        virtualinvoke r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r6, $r11);

        goto label1;

     label4:
        return;
    }

    private static int getNormalizedRotation(org.apache.pdfbox.pdmodel.PDPage)
    {
        int i0, $i2;
        org.apache.pdfbox.pdmodel.PDPage r0;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: int findRotation()>();

     label1:
        if i0 < 360 goto label2;

        $i2 = (int) -360;

        i0 = i0 + $i2;

        goto label1;

     label2:
        if i0 >= 0 goto label3;

        i0 = 0;

     label3:
        lookupswitch(i0)
        {
            case 90: goto label4;
            case 180: goto label4;
            case 270: goto label4;
            default: goto label5;
        };

     label4:
        return i0;

     label5:
        return 0;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        <org.apache.pdfbox.util.LayerUtility: boolean DEBUG> = 1;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "Group";

        $r1[1] = "LastModified";

        $r1[2] = "Metadata";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        <org.apache.pdfbox.util.LayerUtility: java.util.Set PAGE_TO_FORM_FILTER> = $r0;

        return;
    }
}
