class org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 extends java.lang.Object implements org.apache.regexp.CharacterIterator
{
    final org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1;

    void <init>(org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher)
    {
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 r0;
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher r1;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1;

        r1 := @parameter0: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher;

        r0.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public char charAt(int)
    {
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 r0;
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher $r1;
        org.apache.lucene.util.CharsRef $r2;
        int i0;
        char[] $r3;
        char $c1;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1>;

        $r2 = staticinvoke <org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher: org.apache.lucene.util.CharsRef access$000(org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher)>($r1);

        $r3 = $r2.<org.apache.lucene.util.CharsRef: char[] chars>;

        $c1 = $r3[i0];

        return $c1;
    }

    public boolean isEnd(int)
    {
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 r0;
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher $r1;
        org.apache.lucene.util.CharsRef $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1>;

        $r2 = staticinvoke <org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher: org.apache.lucene.util.CharsRef access$000(org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher)>($r1);

        $i1 = $r2.<org.apache.lucene.util.CharsRef: int length>;

        if i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String substring(int)
    {
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 r0;
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher $r1;
        org.apache.lucene.util.CharsRef $r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1>;

        $r2 = staticinvoke <org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher: org.apache.lucene.util.CharsRef access$000(org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher)>($r1);

        $i1 = $r2.<org.apache.lucene.util.CharsRef: int length>;

        $r3 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: java.lang.String substring(int,int)>(i0, $i1);

        return $r3;
    }

    public java.lang.String substring(int, int)
    {
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1 r1;
        org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher $r2;
        org.apache.lucene.util.CharsRef $r3;
        int i0, i1, $i2;
        char[] $r4;
        java.lang.String $r0;

        r1 := @this: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher$1: org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher this$1>;

        $r3 = staticinvoke <org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher: org.apache.lucene.util.CharsRef access$000(org.apache.lucene.sandbox.queries.regex.JakartaRegexpCapabilities$JakartaRegexMatcher)>($r2);

        $r4 = $r3.<org.apache.lucene.util.CharsRef: char[] chars>;

        $i2 = i1 - i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r4, i0, $i2);

        return $r0;
    }
}
