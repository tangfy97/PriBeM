public class org.apache.james.mime4j.field.ContentLengthFieldImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentLengthField
{
    private boolean parsed;
    private long contentLength;
    public static final org.apache.james.mime4j.dom.FieldParser PARSER;

    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.codec.DecodeMonitor r2;
        org.apache.james.mime4j.field.ContentLengthFieldImpl r0;
        org.apache.james.mime4j.stream.Field r1;

        r0 := @this: org.apache.james.mime4j.field.ContentLengthFieldImpl;

        r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r1, r2);

        r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: boolean parsed> = 0;

        return;
    }

    private void parse()
    {
        long $l0, $l1;
        byte $b2;
        int $i3;
        java.lang.String $r1, $r7, $r14;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.ContentLengthFieldImpl r0;
        java.lang.NumberFormatException $r8;
        org.apache.james.mime4j.codec.DecodeMonitor $r2, $r4, $r9, $r11;
        java.lang.StringBuilder $r5, $r6, $r12, $r13, $r15, $r16;

        r0 := @this: org.apache.james.mime4j.field.ContentLengthFieldImpl;

        r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: boolean parsed> = 1;

        r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: long contentLength> = -1L;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: java.lang.String getBody()>();

        if $r1 == null goto label4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: long contentLength> = $l0;

        $l1 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: long contentLength>;

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: long contentLength> = -1L;

        $r2 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative content length: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r7, "ignoring Content-Length header");

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z1 = virtualinvoke $r9.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z1 == 0 goto label4;

        $r11 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r14, "ignoring Content-Length header");

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long getContentLength()
    {
        org.apache.james.mime4j.field.ContentLengthFieldImpl r0;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentLengthFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: void parse()>();

     label1:
        $l0 = r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl: long contentLength>;

        return $l0;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentLengthFieldImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentLengthFieldImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentLengthFieldImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentLengthFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
}
