public class com.google.wave.api.event.WaveletFetchedEvent extends com.google.wave.api.event.AbstractEvent
{
    private final java.lang.String message;
    private final com.google.wave.api.impl.WaveletData waveletData;
    private final java.util.Map blips;
    private final java.util.Map threads;
    private final java.util.List rawDeltas;
    private final java.util.List rawSnapshot;

    public void <init>(com.google.wave.api.Wavelet, com.google.wave.api.impl.EventMessageBundle, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, com.google.wave.api.impl.WaveletData, java.util.Map, java.util.Map, java.util.List, java.util.List)
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        com.google.wave.api.impl.EventMessageBundle r2;
        long $l0;
        com.google.wave.api.event.EventType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.impl.WaveletData r8;
        java.util.List r11, r12;
        java.lang.Long r4;
        java.util.Map r9, r10;
        java.lang.String r3, r6, r7;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r2 := @parameter1: com.google.wave.api.impl.EventMessageBundle;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Long;

        r7 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r8 := @parameter6: com.google.wave.api.impl.WaveletData;

        r9 := @parameter7: java.util.Map;

        r10 := @parameter8: java.util.Map;

        r11 := @parameter9: java.util.List;

        r12 := @parameter10: java.util.List;

        $r5 = <com.google.wave.api.event.EventType: com.google.wave.api.event.EventType WAVELET_FETCHED>;

        $l0 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.google.wave.api.event.AbstractEvent: void <init>(com.google.wave.api.event.EventType,com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,long,java.lang.String)>($r5, r1, r2, r3, $l0, r6);

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.lang.String message> = r7;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: com.google.wave.api.impl.WaveletData waveletData> = r8;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map blips> = r9;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map threads> = r10;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawDeltas> = r11;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawSnapshot> = r12;

        return;
    }

    void <init>()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        specialinvoke r0.<com.google.wave.api.event.AbstractEvent: void <init>()>();

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.lang.String message> = null;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: com.google.wave.api.impl.WaveletData waveletData> = null;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map blips> = null;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map threads> = null;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawDeltas> = null;

        r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawSnapshot> = null;

        return;
    }

    public java.lang.String getMessage()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        java.lang.String $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: java.lang.String message>;

        return $r1;
    }

    public com.google.wave.api.impl.WaveletData getWaveletData()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        com.google.wave.api.impl.WaveletData $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: com.google.wave.api.impl.WaveletData waveletData>;

        return $r1;
    }

    public java.util.Map getBlips()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        java.util.Map $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map blips>;

        return $r1;
    }

    public java.util.Map getThreads()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        java.util.Map $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.Map threads>;

        return $r1;
    }

    public java.util.List getRawDeltas()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        java.util.List $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawDeltas>;

        return $r1;
    }

    public java.util.List getRawSnapshot()
    {
        com.google.wave.api.event.WaveletFetchedEvent r0;
        java.util.List $r1;

        r0 := @this: com.google.wave.api.event.WaveletFetchedEvent;

        $r1 = r0.<com.google.wave.api.event.WaveletFetchedEvent: java.util.List rawSnapshot>;

        return $r1;
    }

    public static com.google.wave.api.event.WaveletFetchedEvent as(com.google.wave.api.event.Event)
    {
        com.google.wave.api.event.WaveletFetchedEvent $r3;
        com.google.wave.api.event.Event r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: com.google.wave.api.event.Event;

        $z0 = r0 instanceof com.google.wave.api.event.WaveletFetchedEvent;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = class "Lcom/google/wave/api/event/WaveletFetchedEvent;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0);

        $r3 = (com.google.wave.api.event.WaveletFetchedEvent) $r2;

        return $r3;
    }
}
