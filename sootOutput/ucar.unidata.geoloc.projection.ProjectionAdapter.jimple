public class ucar.unidata.geoloc.projection.ProjectionAdapter extends ucar.unidata.geoloc.ProjectionImpl
{
    private ucar.unidata.geoloc.Projection proj;

    public static ucar.unidata.geoloc.ProjectionImpl factory(ucar.unidata.geoloc.Projection)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter $r1;
        ucar.unidata.geoloc.Projection r0;
        ucar.unidata.geoloc.ProjectionImpl $r2;
        boolean $z0;

        r0 := @parameter0: ucar.unidata.geoloc.Projection;

        $z0 = r0 instanceof ucar.unidata.geoloc.ProjectionImpl;

        if $z0 == 0 goto label1;

        $r2 = (ucar.unidata.geoloc.ProjectionImpl) r0;

        return $r2;

     label1:
        $r1 = new ucar.unidata.geoloc.projection.ProjectionAdapter;

        specialinvoke $r1.<ucar.unidata.geoloc.projection.ProjectionAdapter: void <init>(ucar.unidata.geoloc.Projection)>(r0);

        return $r1;
    }

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter $r0, r1;
        ucar.unidata.geoloc.Projection $r2;

        r1 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        $r0 = new ucar.unidata.geoloc.projection.ProjectionAdapter;

        $r2 = r1.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        specialinvoke $r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: void <init>(ucar.unidata.geoloc.Projection)>($r2);

        return $r0;
    }

    public void <init>(ucar.unidata.geoloc.Projection)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        ucar.unidata.geoloc.Projection r1;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        r1 := @parameter0: ucar.unidata.geoloc.Projection;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj> = r1;

        return;
    }

    public java.lang.String getClassName()
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        java.lang.String $r2;
        ucar.unidata.geoloc.Projection $r1;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        $r1 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $r2 = interfaceinvoke $r1.<ucar.unidata.geoloc.Projection: java.lang.String getClassName()>();

        return $r2;
    }

    public java.lang.String paramsToString()
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        java.lang.String $r2;
        ucar.unidata.geoloc.Projection $r1;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        $r1 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $r2 = interfaceinvoke $r1.<ucar.unidata.geoloc.Projection: java.lang.String paramsToString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        java.lang.Object r1;
        ucar.unidata.geoloc.Projection $r2;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        ucar.unidata.geoloc.LatLonPoint r1;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        ucar.unidata.geoloc.Projection $r3;
        ucar.unidata.geoloc.ProjectionPoint $r4;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $r3 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $r4 = interfaceinvoke $r3.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>(r1, r2);

        return $r4;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        ucar.unidata.geoloc.LatLonPoint $r4;
        ucar.unidata.geoloc.LatLonPointImpl r2;
        ucar.unidata.geoloc.Projection $r3;
        ucar.unidata.geoloc.ProjectionPoint r1;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $r3 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $r4 = interfaceinvoke $r3.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>(r1, r2);

        return $r4;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        ucar.unidata.geoloc.Projection $r3;
        ucar.unidata.geoloc.ProjectionPoint r1, r2;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $r3 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $z0 = interfaceinvoke $r3.<ucar.unidata.geoloc.Projection: boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.ProjectionPoint)>(r1, r2);

        return $z0;
    }

    public ucar.unidata.geoloc.ProjectionRect getDefaultMapArea()
    {
        ucar.unidata.geoloc.projection.ProjectionAdapter r0;
        ucar.unidata.geoloc.Projection $r1;
        ucar.unidata.geoloc.ProjectionRect $r2;

        r0 := @this: ucar.unidata.geoloc.projection.ProjectionAdapter;

        $r1 = r0.<ucar.unidata.geoloc.projection.ProjectionAdapter: ucar.unidata.geoloc.Projection proj>;

        $r2 = interfaceinvoke $r1.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.ProjectionRect getDefaultMapArea()>();

        return $r2;
    }
}
