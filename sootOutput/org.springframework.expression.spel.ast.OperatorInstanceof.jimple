public class org.springframework.expression.spel.ast.OperatorInstanceof extends org.springframework.expression.spel.ast.Operator
{

    public transient void <init>(int, org.springframework.expression.spel.ast.SpelNodeImpl[])
    {
        int i0;
        org.springframework.expression.spel.ast.OperatorInstanceof r0;
        org.springframework.expression.spel.ast.SpelNodeImpl[] r1;

        r0 := @this: org.springframework.expression.spel.ast.OperatorInstanceof;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.expression.spel.ast.SpelNodeImpl[];

        specialinvoke r0.<org.springframework.expression.spel.ast.Operator: void <init>(java.lang.String,int,org.springframework.expression.spel.ast.SpelNodeImpl[])>("instanceof", i0, r1);

        return;
    }

    public org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState) throws org.springframework.expression.EvaluationException
    {
        org.springframework.expression.spel.SpelEvaluationException $r8;
        java.lang.Object[] $r10;
        org.springframework.expression.spel.support.BooleanTypedValue $r15, $r16;
        int $i0;
        java.lang.String $r17;
        org.springframework.expression.TypedValue $r3, $r5;
        boolean $z0, $z1;
        org.springframework.expression.spel.SpelMessage $r11;
        org.springframework.expression.spel.ast.OperatorInstanceof r0;
        org.springframework.expression.spel.ExpressionState r2;
        java.lang.Object $r6, $r7;
        java.lang.Class $r12, r13, $r14;
        org.springframework.expression.spel.ast.SpelNodeImpl $r1, $r4, $r9;

        r0 := @this: org.springframework.expression.spel.ast.OperatorInstanceof;

        r2 := @parameter0: org.springframework.expression.spel.ExpressionState;

        $r1 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.ast.SpelNodeImpl getLeftOperand()>();

        $r3 = virtualinvoke $r1.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r2);

        $r4 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()>();

        $r5 = virtualinvoke $r4.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r2);

        $r6 = virtualinvoke $r3.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $r7 = virtualinvoke $r5.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        if $r6 != null goto label1;

        $r16 = <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue FALSE>;

        return $r16;

     label1:
        if $r7 == null goto label2;

        $z0 = $r7 instanceof java.lang.Class;

        if $z0 != 0 goto label5;

     label2:
        $r8 = new org.springframework.expression.spel.SpelEvaluationException;

        $r9 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()>();

        $i0 = virtualinvoke $r9.<org.springframework.expression.spel.ast.SpelNodeImpl: int getStartPosition()>();

        $r11 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage INSTANCEOF_OPERATOR_NEEDS_CLASS_OPERAND>;

        $r10 = newarray (java.lang.Object)[1];

        if $r7 != null goto label3;

        $r17 = "null";

        goto label4;

     label3:
        $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

     label4:
        $r10[0] = $r17;

        specialinvoke $r8.<org.springframework.expression.spel.SpelEvaluationException: void <init>(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($i0, $r11, $r10);

        throw $r8;

     label5:
        r13 = (java.lang.Class) $r7;

        $r14 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        $r15 = staticinvoke <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue forValue(boolean)>($z1);

        return $r15;
    }

    public volatile org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState) throws org.springframework.expression.EvaluationException
    {
        org.springframework.expression.spel.ExpressionState r1;
        org.springframework.expression.spel.support.BooleanTypedValue $r2;
        org.springframework.expression.spel.ast.OperatorInstanceof r0;

        r0 := @this: org.springframework.expression.spel.ast.OperatorInstanceof;

        r1 := @parameter0: org.springframework.expression.spel.ExpressionState;

        $r2 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r1);

        return $r2;
    }
}
