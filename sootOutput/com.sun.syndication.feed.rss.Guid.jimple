public class com.sun.syndication.feed.rss.Guid extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private com.sun.syndication.feed.impl.ObjectBean _objBean;
    private boolean _permaLink;
    private java.lang.String _value;

    public void <init>()
    {
        com.sun.syndication.feed.impl.ObjectBean $r1;
        java.lang.Class $r2;
        com.sun.syndication.feed.rss.Guid r0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.sun.syndication.feed.impl.ObjectBean;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r1.<com.sun.syndication.feed.impl.ObjectBean: void <init>(java.lang.Class,java.lang.Object)>($r2, r0);

        r0.<com.sun.syndication.feed.rss.Guid: com.sun.syndication.feed.impl.ObjectBean _objBean> = $r1;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.sun.syndication.feed.impl.ObjectBean $r1;
        java.lang.Object $r2;
        com.sun.syndication.feed.rss.Guid r0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        $r1 = r0.<com.sun.syndication.feed.rss.Guid: com.sun.syndication.feed.impl.ObjectBean _objBean>;

        $r2 = virtualinvoke $r1.<com.sun.syndication.feed.impl.ObjectBean: java.lang.Object clone()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.sun.syndication.feed.impl.ObjectBean $r2;
        java.lang.Object r1;
        com.sun.syndication.feed.rss.Guid r0;
        boolean $z0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.syndication.feed.rss.Guid: com.sun.syndication.feed.impl.ObjectBean _objBean>;

        $z0 = virtualinvoke $r2.<com.sun.syndication.feed.impl.ObjectBean: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        com.sun.syndication.feed.impl.ObjectBean $r1;
        int $i0;
        com.sun.syndication.feed.rss.Guid r0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        $r1 = r0.<com.sun.syndication.feed.rss.Guid: com.sun.syndication.feed.impl.ObjectBean _objBean>;

        $i0 = virtualinvoke $r1.<com.sun.syndication.feed.impl.ObjectBean: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.sun.syndication.feed.impl.ObjectBean $r1;
        com.sun.syndication.feed.rss.Guid r0;
        java.lang.String $r2;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        $r1 = r0.<com.sun.syndication.feed.rss.Guid: com.sun.syndication.feed.impl.ObjectBean _objBean>;

        $r2 = virtualinvoke $r1.<com.sun.syndication.feed.impl.ObjectBean: java.lang.String toString()>();

        return $r2;
    }

    public boolean isPermaLink()
    {
        com.sun.syndication.feed.rss.Guid r0;
        boolean $z0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        $z0 = r0.<com.sun.syndication.feed.rss.Guid: boolean _permaLink>;

        return $z0;
    }

    public void setPermaLink(boolean)
    {
        com.sun.syndication.feed.rss.Guid r0;
        boolean z0;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        z0 := @parameter0: boolean;

        r0.<com.sun.syndication.feed.rss.Guid: boolean _permaLink> = z0;

        return;
    }

    public java.lang.String getValue()
    {
        com.sun.syndication.feed.rss.Guid r0;
        java.lang.String $r1;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        $r1 = r0.<com.sun.syndication.feed.rss.Guid: java.lang.String _value>;

        return $r1;
    }

    public void setValue(java.lang.String)
    {
        com.sun.syndication.feed.rss.Guid r0;
        java.lang.String r1;

        r0 := @this: com.sun.syndication.feed.rss.Guid;

        r1 := @parameter0: java.lang.String;

        r0.<com.sun.syndication.feed.rss.Guid: java.lang.String _value> = r1;

        return;
    }
}
