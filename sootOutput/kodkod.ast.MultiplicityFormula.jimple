public final class kodkod.ast.MultiplicityFormula extends kodkod.ast.Formula
{
    private final kodkod.ast.Expression expression;
    private final kodkod.ast.operator.Multiplicity multiplicity;

    void <init>(kodkod.ast.operator.Multiplicity, kodkod.ast.Expression)
    {
        kodkod.ast.MultiplicityFormula r0;
        kodkod.ast.operator.Multiplicity r1, $r2;
        kodkod.ast.Expression r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.NullPointerException $r3;

        r0 := @this: kodkod.ast.MultiplicityFormula;

        r1 := @parameter0: kodkod.ast.operator.Multiplicity;

        r4 := @parameter1: kodkod.ast.Expression;

        specialinvoke r0.<kodkod.ast.Formula: void <init>()>();

        $r2 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity SET>;

        if r1 != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid expression mulitplicity: SET");

        throw $r5;

     label1:
        if r1 == null goto label2;

        if r4 != null goto label3;

     label2:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("null arg");

        throw $r3;

     label3:
        r0.<kodkod.ast.MultiplicityFormula: kodkod.ast.operator.Multiplicity multiplicity> = r1;

        r0.<kodkod.ast.MultiplicityFormula: kodkod.ast.Expression expression> = r4;

        return;
    }

    public kodkod.ast.operator.Multiplicity multiplicity()
    {
        kodkod.ast.MultiplicityFormula r0;
        kodkod.ast.operator.Multiplicity $r1;

        r0 := @this: kodkod.ast.MultiplicityFormula;

        $r1 = r0.<kodkod.ast.MultiplicityFormula: kodkod.ast.operator.Multiplicity multiplicity>;

        return $r1;
    }

    public kodkod.ast.Expression expression()
    {
        kodkod.ast.MultiplicityFormula r0;
        kodkod.ast.Expression $r1;

        r0 := @this: kodkod.ast.MultiplicityFormula;

        $r1 = r0.<kodkod.ast.MultiplicityFormula: kodkod.ast.Expression expression>;

        return $r1;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        kodkod.ast.MultiplicityFormula r1;
        java.lang.Object $r2;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.MultiplicityFormula;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.MultiplicityFormula)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.MultiplicityFormula r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.MultiplicityFormula;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.MultiplicityFormula)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.MultiplicityFormula r1;
        kodkod.ast.operator.Multiplicity $r2;
        kodkod.ast.Expression $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r7;

        r1 := @this: kodkod.ast.MultiplicityFormula;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<kodkod.ast.MultiplicityFormula: kodkod.ast.operator.Multiplicity multiplicity>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<kodkod.ast.MultiplicityFormula: kodkod.ast.Expression expression>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
