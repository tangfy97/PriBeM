public abstract class org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager extends org.apache.xmlbeans.impl.tool.SchemaImportResolver
{
    private static final java.lang.String USER_AGENT;
    private java.lang.String _defaultCopyDirectory;
    private org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc;
    private java.util.Map _resourceForFilename;
    private java.util.Map _resourceForURL;
    private java.util.Map _resourceForNamespace;
    private java.util.Map _resourceForDigest;
    private java.util.Map _resourceForCacheEntry;
    private java.util.Set _redownloadSet;

    protected void <init>()
    {
        java.util.HashSet $r6;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.util.HashMap $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaImportResolver: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForCacheEntry> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = $r6;

        return;
    }

    protected final void init()
    {
        java.lang.IllegalStateException $r20, $r22, $r24, $r26;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas $r3, $r6;
        boolean $z0;
        java.lang.Exception $r19, $r23;
        java.lang.Throwable $r21, $r25;
        java.lang.StringBuffer $r9, $r10, $r12, $r13;
        int i0, $i1;
        java.lang.String $r1, $r4, $r11, $r14, $r16, r29;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument $r2, $r5, $r15, $r18, $r28;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry[] $r7;
        java.io.IOException $r27;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry $r8;
        java.io.InputStream $r17;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String getIndexFilename()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: boolean fileExists(java.lang.String)>($r1);

        if $z0 == 0 goto label05;

     label01:
        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String getIndexFilename()>();

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.io.InputStream inputStreamForFile(java.lang.String)>($r16);

        $r18 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$Factory: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument parse(java.io.InputStream)>($r17);

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc> = $r18;

     label02:
        goto label05;

     label03:
        $r27 := @caughtexception;

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc> = null;

        goto label05;

     label04:
        $r23 := @caughtexception;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Problem reading xsdownload.xml: please fix or delete this file");

        $r25 = virtualinvoke $r24.<java.lang.IllegalStateException: java.lang.Throwable initCause(java.lang.Throwable)>($r23);

        $r26 = (java.lang.IllegalStateException) $r25;

        throw $r26;

     label05:
        $r28 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        if $r28 != null goto label09;

     label06:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<dls:downloaded-schemas xmlns:dls=\'http://www.bea.com/2003/01/xmlbean/xsdownload\' defaultDirectory=\'");

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String getDefaultSchemaDir()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'/>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$Factory: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument parse(java.lang.String)>($r14);

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc> = $r15;

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.IllegalStateException: java.lang.Throwable initCause(java.lang.Throwable)>($r19);

        $r22 = (java.lang.IllegalStateException) $r21;

        throw $r22;

     label09:
        $r2 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas getDownloadedSchemas()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: java.lang.String getDefaultDirectory()>();

        r29 = $r4;

        if $r4 != null goto label10;

        r29 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String getDefaultSchemaDir()>();

     label10:
        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String _defaultCopyDirectory> = r29;

        $r5 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas getDownloadedSchemas()>();

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry[] getEntryArray()>();

        i0 = 0;

     label11:
        $i1 = lengthof $r7;

        if i0 >= $i1 goto label12;

        $r8 = $r7[i0];

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource updateResource(org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry)>($r8);

        i0 = i0 + 1;

        goto label11;

     label12:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    public final void writeCache() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        org.apache.xmlbeans.XmlOptions $r1, $r3;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument $r2;
        java.lang.String $r5;
        java.io.InputStream $r4;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        $r2 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        $r1 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r1.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSavePrettyPrint()>();

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument: java.io.InputStream newInputStream(org.apache.xmlbeans.XmlOptions)>($r3);

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String getIndexFilename()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void writeInputStreamToFile(java.io.InputStream,java.lang.String)>($r4, $r5);

        return;
    }

    public final void processAll(boolean, boolean, boolean)
    {
        java.lang.Object[] $r5;
        java.util.Collection $r3;
        java.lang.String[] $r1;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[] $r4, $r6, $r7;
        java.util.HashSet $r8;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.util.Map $r2;
        boolean z0, z1, z2;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = $r8;

        goto label2;

     label1:
        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = null;

     label2:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String[] getAllXSDFilenames()>();

        if z1 == 0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void syncCacheWithLocalXsdFiles(java.lang.String[],boolean)>($r1, 0);

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = newarray (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)[0];

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[]) $r5;

        $r7 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[]) $r6;

        if z0 == 0 goto label4;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void redownloadEntries(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[])>($r7);

     label4:
        if z2 == 0 goto label5;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void resolveImports(org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource[])>($r7);

     label5:
        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = null;

        return;
    }

    public final void process(java.lang.String[], java.lang.String[], boolean, boolean, boolean)
    {
        java.lang.Object[] $r4;
        java.lang.String[] r1, r2, $r10;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[] $r3, $r5, r15;
        java.util.HashSet $r11, $r12;
        java.util.Map $r6;
        int $i0, $i1, i2, $i3, i4;
        org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource $r9;
        java.lang.String $r8;
        boolean z0, z1, z2;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.lang.Object $r7;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r13, r14;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r2 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        if z0 == 0 goto label01;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = $r11;

        goto label02;

     label01:
        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = null;

     label02:
        $i0 = lengthof r1;

        if $i0 <= 0 goto label03;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void syncCacheWithLocalXsdFiles(java.lang.String[],boolean)>(r1, 1);

        goto label04;

     label03:
        if z1 == 0 goto label04;

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String[] getAllXSDFilenames()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void syncCacheWithLocalXsdFiles(java.lang.String[],boolean)>($r10, 0);

     label04:
        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        i2 = 0;

     label05:
        $i3 = lengthof r2;

        if i2 >= $i3 goto label07;

        $r8 = r2[i2];

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource lookupResource(java.lang.String,java.lang.String)>(null, $r8);

        r13 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r9;

        if r13 == null goto label06;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r13);

     label06:
        i2 = i2 + 1;

        goto label05;

     label07:
        i4 = 0;

     label08:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label10;

        $r6 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r7;

        if r14 == null goto label09;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r14);

     label09:
        i4 = i4 + 1;

        goto label08;

     label10:
        $r3 = newarray (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)[0];

        $r4 = interfaceinvoke $r12.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[]) $r4;

        r15 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[]) $r5;

        if z0 == 0 goto label11;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void redownloadEntries(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[])>(r15);

     label11:
        if z2 == 0 goto label12;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void resolveImports(org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource[])>(r15);

     label12:
        r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet> = null;

        return;
    }

    public final void syncCacheWithLocalXsdFiles(java.lang.String[], boolean)
    {
        java.util.Map $r5, $r8, $r23, $r25, $r26, $r27;
        boolean z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource $r15, r29, r31;
        java.lang.String[] r2;
        java.util.HashSet $r0, $r1;
        java.lang.StringBuffer $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r21;
        int $i0, i1;
        java.lang.String r4, $r7, $r14, $r16, $r22, r30;
        java.io.IOException $r28;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r3;
        java.lang.Object $r6, $r9, $r24;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry $r10;

        r3 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r2 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        i1 = 0;

     label01:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label12;

        r4 = r2[i1];

        $r5 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r29 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r6;

        if r29 == null goto label03;

        $z3 = virtualinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: boolean fileExists(java.lang.String)>(r4);

        if $z3 == 0 goto label02;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r29);

        goto label11;

     label02:
        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r29);

        goto label11;

     label03:
        r30 = null;

     label04:
        $r7 = specialinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String shaDigestForFile(java.lang.String)>(r4);

        r30 = $r7;

        $r8 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r31 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r9;

        if r31 == null goto label07;

        $r16 = virtualinvoke r31.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getFilename()>();

        $z1 = virtualinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: boolean fileExists(java.lang.String)>($r16);

        if $z1 != 0 goto label07;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is a rename of ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r22);

        virtualinvoke r31.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: void setFilename(java.lang.String)>(r4);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r31);

        $r23 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        if $r24 != r31 goto label05;

        $r27 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        interfaceinvoke $r27.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r16);

     label05:
        $r25 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $z2 = interfaceinvoke $r25.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z2 == 0 goto label06;

        $r26 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r31);

     label06:
        goto label11;

     label07:
        goto label09;

     label08:
        $r28 := @caughtexception;

     label09:
        $r10 = specialinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry addNewEntry()>();

        interfaceinvoke $r10.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void setFilename(java.lang.String)>(r4);

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caching information on new local file ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r14);

        if r30 == null goto label10;

        interfaceinvoke $r10.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void setSha1(java.lang.String)>(r30);

     label10:
        $r15 = specialinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource updateResource(org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry)>($r10);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r15);

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        if z0 == 0 goto label13;

        specialinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void deleteResourcesInSet(java.util.Set,boolean)>($r1, 1);

        goto label14;

     label13:
        specialinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void deleteResourcesInSet(java.util.Set,boolean)>($r0, 0);

     label14:
        return;

        catch java.io.IOException from label04 to label06 with label08;
    }

    private void redownloadEntries(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[])
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r1;
        int $i0, i1;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource $r2;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[] r0;

        r1 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        specialinvoke r1.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void redownloadResource(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void deleteResourcesInSet(java.util.Set, boolean)
    {
        java.util.Map $r7, $r15, $r16, $r19, $r22, $r27, $r30, $r31, $r33, $r35;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas $r5;
        boolean $z0, $z1, z2;
        java.util.Set r1;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r9, r39;
        java.lang.String[] $r25;
        java.util.HashSet $r40;
        java.lang.StringBuffer $r11, $r13, $r41;
        int $i0, i1, i2, $i3, $i5;
        java.lang.String $r12, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r34, $r36;
        java.util.Iterator $r2;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument $r4;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r3;
        java.lang.Object $r8, $r18, $r21, $r24, $r28, $r37;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry $r6, $r38;

        r3 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.util.Set;

        z2 := @parameter1: boolean;

        $r40 = new java.util.HashSet;

        specialinvoke $r40.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r37 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r39 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r37;

        $r38 = r39.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry _cacheEntry>;

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>($r38);

        goto label01;

     label02:
        $r4 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas getDownloadedSchemas()>();

        i1 = 0;

     label03:
        $i0 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: int sizeOfEntryArray()>();

        if i1 >= $i0 goto label11;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry getEntryArray(int)>(i1);

        $z1 = interfaceinvoke $r40.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z1 != z2 goto label10;

        $r7 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForCacheEntry>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r9 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r8;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Removing obsolete cache entry for ");

        $r12 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getFilename()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r14);

        if r9 == null goto label09;

        $r15 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForCacheEntry>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        $r16 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r17 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getFilename()>();

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        if r9 != $r18 goto label04;

        $r35 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $r36 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getFilename()>();

        interfaceinvoke $r35.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r36);

     label04:
        $r19 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        $r20 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getSha1()>();

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        if r9 != $r21 goto label05;

        $r33 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        $r34 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getSha1()>();

        interfaceinvoke $r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r34);

     label05:
        $r22 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $r23 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getNamespace()>();

        $r24 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        if r9 != $r24 goto label06;

        $r31 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $r32 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getNamespace()>();

        interfaceinvoke $r31.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r32);

     label06:
        $r25 = virtualinvoke r9.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String[] getSchemaLocationArray()>();

        i2 = 0;

     label07:
        $i3 = lengthof $r25;

        if i2 >= $i3 goto label09;

        $r27 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $r26 = $r25[i2];

        $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26);

        if r9 != $r28 goto label08;

        $r30 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $r29 = $r25[i2];

        interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r29);

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        interfaceinvoke $r5.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: void removeEntry(int)>(i1);

        $i5 = (int) -1;

        i1 = i1 + $i5;

     label10:
        i1 = i1 + 1;

        goto label03;

     label11:
        return;
    }

    private org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource updateResource(org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry)
    {
        java.lang.String[] $r17;
        java.util.Map $r4, $r5, $r8, $r10, $r11, $r12, $r13, $r14, $r15;
        int i0, $i1;
        java.lang.String $r1, $r6, $r7, $r9, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r3;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry r0;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource $r2;

        r3 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r0 := @parameter0: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: java.lang.String getFilename()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource;

        specialinvoke $r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: void <init>(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager,org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry)>(r3, r0);

        $r4 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForCacheEntry>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);

        $r5 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r15 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForFilename>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        $r6 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getSha1()>();

        if $r6 == null goto label3;

        $r13 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        $z3 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z3 != 0 goto label3;

        $r14 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

     label3:
        $r16 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getNamespace()>();

        if $r16 == null goto label4;

        $r11 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $z2 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r16);

        if $z2 != 0 goto label4;

        $r12 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r2);

     label4:
        $r17 = virtualinvoke $r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String[] getSchemaLocationArray()>();

        i0 = 0;

     label5:
        $i1 = lengthof $r17;

        if i0 >= $i1 goto label7;

        $r8 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $r7 = $r17[i0];

        $z1 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z1 != 0 goto label6;

        $r10 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $r9 = $r17[i0];

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r2);

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return $r2;
    }

    private static java.security.DigestInputStream digestInputStream(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r4, $r6, $r7;
        java.security.MessageDigest $r0;
        java.security.NoSuchAlgorithmException $r3;
        java.security.DigestInputStream $r1;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.IllegalStateException: java.lang.Throwable initCause(java.lang.Throwable)>($r3);

        $r6 = (java.lang.IllegalStateException) $r5;

        $r7 = (java.lang.IllegalStateException) $r6;

        throw $r7;

     label4:
        $r1 = new java.security.DigestInputStream;

        specialinvoke $r1.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r2, $r0);

        return $r1;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry addNewEntry()
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument $r1;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas $r2;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry $r3;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument _importsDoc>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas getDownloadedSchemas()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemasDocument$DownloadedSchemas: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry addNewEntry()>();

        return $r3;
    }

    public org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource lookupResource(java.lang.String, java.lang.String)
    {
        java.util.Set $r5, $r6, $r12;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        java.lang.String r1, r2, $r11;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource fetchFromCache(java.lang.String,java.lang.String)>(r1, r2);

        if $r3 == null goto label2;

        $r12 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        if $r12 == null goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void redownloadResource(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)>($r3);

     label1:
        return $r3;

     label2:
        if r2 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No cached schema for namespace \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', and no url specified");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r11);

        return null;

     label3:
        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource copyOrIdentifyDuplicateURL(java.lang.String,java.lang.String)>(r2, r1);

        $r5 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        if $r5 == null goto label4;

        $r6 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label4:
        return $r4;
    }

    private org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource fetchFromCache(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4, $r6;
        java.lang.String r0, r1;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r7, r8;

        r2 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r5 = r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r6;

        if r7 == null goto label1;

        return r7;

     label1:
        if r1 == null goto label2;

        $r3 = r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r4;

        if r8 == null goto label2;

        return r8;

     label2:
        return null;
    }

    private java.lang.String uniqueFilenameForURI(java.lang.String) throws java.io.IOException, java.net.URISyntaxException
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r12, $r13, $r14, $r15, $r17, $r18, $r19;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.net.URI $r0;
        java.lang.String r1, $r2, $r8, $r11, $r16, r20, r21;
        boolean $z0, $z1;
        java.io.IOException $r3;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r10;

        r10 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URI: java.lang.String getRawPath()>();

        r20 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 < 0 goto label1;

        $i4 = $i0 + 1;

        r20 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i4);

     label1:
        $z0 = virtualinvoke r20.<java.lang.String: boolean endsWith(java.lang.String)>(".xsd");

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r20.<java.lang.String: int length()>();

        $i3 = $i2 - 4;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label2:
        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        r20 = "schema";

     label3:
        r21 = r20;

        i5 = 1;

     label4:
        if i5 >= 1000 goto label6;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = r10.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String _defaultCopyDirectory>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsd");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $z1 = virtualinvoke r10.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: boolean fileExists(java.lang.String)>($r16);

        if $z1 != 0 goto label5;

        return $r16;

     label5:
        i5 = i5 + 1;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label6:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Problem with filename ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsd");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    private void redownloadResource(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)
    {
        byte[] $r12, $r16;
        java.net.URL $r6;
        java.io.ByteArrayInputStream $r15;
        boolean $z0, $z1, $z2;
        java.util.Set $r1, $r30, $r31;
        java.lang.Exception $r42;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r2;
        java.io.ByteArrayOutputStream $r5;
        java.security.MessageDigest $r11;
        java.net.URLConnection $r7;
        java.lang.StringBuffer $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r43, $r44, $r45, $r46, $r48;
        java.lang.String $r3, $r4, $r8, $r13, $r14, $r22, $r29, $r39, $r41, $r47, $r49;
        java.io.IOException $r32;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.security.DigestInputStream $r10;
        java.io.InputStream $r9;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r2 := @parameter0: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource;

        $r1 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        if $r1 == null goto label02;

        $r30 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        $z2 = interfaceinvoke $r30.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z2 == 0 goto label01;

        return;

     label01:
        $r31 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Set _redownloadSet>;

        interfaceinvoke $r31.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label02:
        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getFilename()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getSchemaLocation()>();

        if $r4 == null goto label03;

        if $r3 != null goto label04;

     label03:
        return;

     label04:
        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        $r6 = new java.net.URL;

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r8 = <org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String USER_AGENT>;

        virtualinvoke $r7.<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r8);

        virtualinvoke $r7.<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Accept", "application/xml, text/xml, */*");

        $r9 = virtualinvoke $r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.security.DigestInputStream digestInputStream(java.io.InputStream)>($r9);

        staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: void copyCompletely(java.io.InputStream,java.io.OutputStream)>($r10, $r5);

        $r11 = virtualinvoke $r10.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>();

        $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>();

        $r13 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: java.lang.String bytesToString(byte[])>($r12);

     label06:
        goto label08;

     label07:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not copy remote resource ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r47 = virtualinvoke $r42.<java.lang.Exception: java.lang.String getMessage()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r49);

        return;

     label08:
        $r14 = virtualinvoke r2.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getSha1()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label09;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: boolean fileExists(java.lang.String)>($r3);

        if $z1 == 0 goto label09;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resource ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is unchanged from ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r29);

        return;

     label09:
        $r15 = new java.io.ByteArrayInputStream;

        $r16 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>($r16);

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void writeInputStreamToFile(java.io.InputStream,java.lang.String)>($r15, $r3);

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not write to file ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r39 = virtualinvoke $r32.<java.io.IOException: java.lang.String getMessage()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r41);

        return;

     label12:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Refreshed ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" from ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r22);

        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }

    private org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource copyOrIdentifyDuplicateURL(java.lang.String, java.lang.String)
    {
        byte[] $r7;
        java.net.URL $r3;
        java.net.URISyntaxException $r39;
        java.util.Map $r9, $r21, $r22;
        boolean $z0;
        java.lang.Exception $r23;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r11, $r20;
        java.security.MessageDigest $r6;
        java.lang.StringBuffer $r12, $r13, $r14, $r15, $r16, $r24, $r25, $r26, $r27, $r29, $r32, $r33, $r34, $r35, $r37, $r40, $r41, $r42, $r43, $r45;
        java.lang.String r1, $r2, $r8, $r17, r19, $r28, $r30, $r36, $r38, $r44, $r46;
        java.io.IOException $r31;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.security.DigestInputStream $r5;
        java.lang.Object $r10;
        org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry $r18;
        java.io.InputStream $r4;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

     label01:
        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String uniqueFilenameForURI(java.lang.String)>(r1);

     label02:
        goto label05;

     label03:
        $r39 := @caughtexception;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid URI \'");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\':");

        $r44 = virtualinvoke $r39.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r46);

        return null;

     label04:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not create local file for ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r36 = virtualinvoke $r31.<java.io.IOException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r38);

        return null;

     label05:
        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.net.URL: java.io.InputStream openStream()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.security.DigestInputStream digestInputStream(java.io.InputStream)>($r4);

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void writeInputStreamToFile(java.io.InputStream,java.lang.String)>($r5, $r2);

        $r6 = virtualinvoke $r5.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>();

        $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r8 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: java.lang.String bytesToString(byte[])>($r7);

     label06:
        goto label08;

     label07:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not copy remote resource ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r28 = virtualinvoke $r23.<java.lang.Exception: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r30);

        return null;

     label08:
        $r9 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForDigest>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r11 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) $r10;

        if r11 == null goto label10;

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void deleteFile(java.lang.String)>($r2);

        virtualinvoke r11.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: void addSchemaLocation(java.lang.String)>(r1);

        $r21 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        $z0 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label09;

        $r22 = r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForURL>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

     label09:
        return r11;

     label10:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Downloaded ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void warning(java.lang.String)>($r17);

        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry addNewEntry()>();

        interfaceinvoke $r18.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void setFilename(java.lang.String)>($r2);

        interfaceinvoke $r18.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void setSha1(java.lang.String)>($r8);

        if r19 == null goto label11;

        interfaceinvoke $r18.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void setNamespace(java.lang.String)>(r19);

     label11:
        interfaceinvoke $r18.<org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: void addSchemaLocation(java.lang.String)>(r1);

        $r20 = specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource updateResource(org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry)>($r18);

        return $r20;

        catch java.net.URISyntaxException from label01 to label02 with label03;
        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
    }

    public void reportActualNamespace(org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource, java.lang.String)
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r3;
        java.util.Map $r5, $r6, $r8, $r9;
        org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource r0;
        java.lang.Object $r7;
        java.lang.String $r2, r4;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r1;
        boolean $z0;

        r3 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.SchemaImportResolver$SchemaResource;

        r4 := @parameter1: java.lang.String;

        r1 = (org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource) r0;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: java.lang.String getNamespace()>();

        if $r2 == null goto label1;

        $r6 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        if $r7 != r1 goto label1;

        $r8 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

     label1:
        $r9 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $r5 = r3.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.util.Map _resourceForNamespace>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r1);

     label2:
        virtualinvoke r1.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource: void setNamespace(java.lang.String)>(r4);

        return;
    }

    private java.lang.String shaDigestForFile(java.lang.String) throws java.io.IOException
    {
        byte[] r4, $r6;
        java.security.MessageDigest $r5;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        java.security.DigestInputStream $r3;
        int i0;
        java.lang.String r1, $r7;
        java.io.InputStream $r2;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.io.InputStream inputStreamForFile(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.security.DigestInputStream digestInputStream(java.io.InputStream)>($r2);

        r4 = newarray (byte)[4096];

        i0 = 1;

     label1:
        if i0 <= 0 goto label2;

        i0 = virtualinvoke $r3.<java.security.DigestInputStream: int read(byte[])>(r4);

        goto label1;

     label2:
        virtualinvoke $r3.<java.security.DigestInputStream: void close()>();

        $r5 = virtualinvoke $r3.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>();

        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r7 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: java.lang.String bytesToString(byte[])>($r6);

        return $r7;
    }

    protected java.lang.String getIndexFilename()
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        return "./xsdownload.xml";
    }

    protected java.lang.String getDefaultSchemaDir()
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        return "./schema";
    }

    protected abstract void warning(java.lang.String);

    protected abstract boolean fileExists(java.lang.String);

    protected abstract java.io.InputStream inputStreamForFile(java.lang.String) throws java.io.IOException;

    protected abstract void writeInputStreamToFile(java.io.InputStream, java.lang.String) throws java.io.IOException;

    protected abstract void deleteFile(java.lang.String);

    protected abstract java.lang.String[] getAllXSDFilenames();

    static void access$000(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager, org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)
    {
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager r0;
        org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager;

        r1 := @parameter1: org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource;

        specialinvoke r0.<org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: void redownloadResource(org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager$SchemaResource)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XMLBeans/");

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: java.lang.String getVersion()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r5 = staticinvoke <org.apache.xmlbeans.XmlBeans: java.lang.String getTitle()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        <org.apache.xmlbeans.impl.tool.BaseSchemaResourceManager: java.lang.String USER_AGENT> = $r8;

        return;
    }
}
