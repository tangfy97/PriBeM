class org.apache.commons.collections.ReferenceMap$1 extends java.util.AbstractSet
{
    private final org.apache.commons.collections.ReferenceMap this$0;

    void <init>(org.apache.commons.collections.ReferenceMap)
    {
        org.apache.commons.collections.ReferenceMap r1;
        org.apache.commons.collections.ReferenceMap$1 r0;

        r0 := @this: org.apache.commons.collections.ReferenceMap$1;

        r1 := @parameter0: org.apache.commons.collections.ReferenceMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.ReferenceMap $r1;
        org.apache.commons.collections.ReferenceMap$1 r0;

        r0 := @this: org.apache.commons.collections.ReferenceMap$1;

        $r1 = r0.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.ReferenceMap: int size()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.collections.ReferenceMap $r1;
        org.apache.commons.collections.ReferenceMap$1 r0;

        r0 := @this: org.apache.commons.collections.ReferenceMap$1;

        $r1 = r0.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.ReferenceMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r1;
        org.apache.commons.collections.ReferenceMap$1 r2;
        org.apache.commons.collections.ReferenceMap $r3;
        org.apache.commons.collections.ReferenceMap$Entry $r5;
        java.lang.Object r0, $r4;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.commons.collections.ReferenceMap$1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (java.util.Map$Entry) r0;

        $r3 = r2.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0>;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = staticinvoke <org.apache.commons.collections.ReferenceMap: org.apache.commons.collections.ReferenceMap$Entry access$000(org.apache.commons.collections.ReferenceMap,java.lang.Object)>($r3, $r4);

        if $r5 == null goto label3;

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r2;
        org.apache.commons.collections.ReferenceMap$1 r0;
        java.lang.Object r1, $r4;
        org.apache.commons.collections.ReferenceMap $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ReferenceMap$1;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.ReferenceMap$1: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0>;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<org.apache.commons.collections.ReferenceMap: java.lang.Object remove(java.lang.Object)>($r4);

     label1:
        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.ReferenceMap $r2;
        org.apache.commons.collections.ReferenceMap$1 r1;
        org.apache.commons.collections.ReferenceMap$EntryIterator $r0;

        r1 := @this: org.apache.commons.collections.ReferenceMap$1;

        $r0 = new org.apache.commons.collections.ReferenceMap$EntryIterator;

        $r2 = r1.<org.apache.commons.collections.ReferenceMap$1: org.apache.commons.collections.ReferenceMap this$0>;

        specialinvoke $r0.<org.apache.commons.collections.ReferenceMap$EntryIterator: void <init>(org.apache.commons.collections.ReferenceMap)>($r2);

        return $r0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r1, $r2;
        org.apache.commons.collections.ReferenceMap$1 r0;

        r0 := @this: org.apache.commons.collections.ReferenceMap$1;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ReferenceMap$1: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections.keyvalue.DefaultMapEntry $r7;
        java.lang.Object[] r3, $r4;
        java.util.Iterator $r2;
        org.apache.commons.collections.ReferenceMap$1 r1;
        org.apache.commons.collections.ReferenceMap$Entry r6;
        java.util.ArrayList $r0;
        java.lang.Object $r5, $r8, $r9;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.ReferenceMap$1;

        r3 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections.ReferenceMap$1: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.collections.ReferenceMap$Entry) $r5;

        $r7 = new org.apache.commons.collections.keyvalue.DefaultMapEntry;

        $r8 = virtualinvoke r6.<org.apache.commons.collections.ReferenceMap$Entry: java.lang.Object getKey()>();

        $r9 = virtualinvoke r6.<org.apache.commons.collections.ReferenceMap$Entry: java.lang.Object getValue()>();

        specialinvoke $r7.<org.apache.commons.collections.keyvalue.DefaultMapEntry: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return $r4;
    }
}
