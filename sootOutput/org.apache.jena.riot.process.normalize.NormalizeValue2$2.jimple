final class org.apache.jena.riot.process.normalize.NormalizeValue2$2 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue2$2 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue2$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node $r4, r5;
        com.hp.hpl.jena.datatypes.RDFDatatype r3;
        int $i0;
        char[] $r1;
        java.lang.String r0, $r2;
        org.apache.jena.riot.process.normalize.NormalizeValue2$2 r6;

        r6 := @this: org.apache.jena.riot.process.normalize.NormalizeValue2$2;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return r5;

     label1:
        staticinvoke <org.apache.jena.riot.process.normalize.NormalizeValue2: void access$000(char[])>($r1);

        staticinvoke <org.apache.jena.riot.process.normalize.NormalizeValue2: void access$100(char[])>($r1);

        staticinvoke <org.apache.jena.riot.process.normalize.NormalizeValue2: void access$300(char[])>($r1);

        $r2 = staticinvoke <org.apache.jena.riot.process.normalize.NormalizeValue2: java.lang.String access$200(char[])>($r1);

        if $r2 != null goto label2;

        return r5;

     label2:
        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r2, null, r3);

        return $r4;
    }
}
