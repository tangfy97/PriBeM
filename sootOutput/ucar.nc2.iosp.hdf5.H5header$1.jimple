class ucar.nc2.iosp.hdf5.H5header$1 extends java.lang.Object implements java.util.Comparator
{
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header)
    {
        ucar.nc2.iosp.hdf5.H5header$1 r0;
        ucar.nc2.iosp.hdf5.H5header r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$1;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r0.<ucar.nc2.iosp.hdf5.H5header$1: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(ucar.nc2.iosp.hdf5.H5header$DataObject, ucar.nc2.iosp.hdf5.H5header$DataObject)
    {
        ucar.nc2.iosp.hdf5.H5header$1 r2;
        ucar.nc2.iosp.hdf5.H5header$DataObject r0, r1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5, $b6;
        int $i7;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header$1;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header$DataObject;

        r1 := @parameter1: ucar.nc2.iosp.hdf5.H5header$DataObject;

        $l1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObject: long address>;

        $l0 = r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: long address>;

        $b2 = $l1 cmp $l0;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label1;

        $b6 = -1;

        goto label3;

     label1:
        $l4 = r0.<ucar.nc2.iosp.hdf5.H5header$DataObject: long address>;

        $l3 = r1.<ucar.nc2.iosp.hdf5.H5header$DataObject: long address>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label2;

        $b6 = 0;

        goto label3;

     label2:
        $b6 = 1;

     label3:
        return $b6;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        ucar.nc2.iosp.hdf5.H5header$1 r0;
        int $i0;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r3, $r4;
        java.lang.Object r1, r2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (ucar.nc2.iosp.hdf5.H5header$DataObject) r1;

        $r3 = (ucar.nc2.iosp.hdf5.H5header$DataObject) r2;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$1: int compare(ucar.nc2.iosp.hdf5.H5header$DataObject,ucar.nc2.iosp.hdf5.H5header$DataObject)>($r4, $r3);

        return $i0;
    }
}
