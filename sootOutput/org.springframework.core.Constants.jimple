public class org.springframework.core.Constants extends java.lang.Object
{
    private final java.lang.String className;
    private final java.util.Map fieldCache;

    public void <init>(java.lang.Class)
    {
        java.lang.IllegalAccessException $r9;
        java.util.HashMap $r1;
        java.lang.reflect.Field r5;
        java.lang.reflect.Field[] $r4;
        java.util.Map $r8;
        int i0, i1;
        org.springframework.core.Constants r0;
        java.lang.Class r2;
        java.lang.Object $r7;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: org.springframework.core.Constants;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.core.Constants: java.util.Map fieldCache> = $r1;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object)>(r2);

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        r0.<org.springframework.core.Constants: java.lang.String className> = $r3;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r4;

        i1 = 0;

        goto label6;

     label1:
        r5 = $r4[i1];

        $z0 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isPublicStaticFinal(java.lang.reflect.Field)>(r5);

        if $z0 == 0 goto label5;

        $r6 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.String getName()>();

     label2:
        $r7 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r8 = r0.<org.springframework.core.Constants: java.util.Map fieldCache>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label1;

        return;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
    }

    public final java.lang.String getClassName()
    {
        org.springframework.core.Constants r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.Constants;

        $r1 = r0.<org.springframework.core.Constants: java.lang.String className>;

        return $r1;
    }

    public final int getSize()
    {
        int $i0;
        org.springframework.core.Constants r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.core.Constants;

        $r1 = r0.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    protected final java.util.Map getFieldCache()
    {
        org.springframework.core.Constants r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.core.Constants;

        $r1 = r0.<org.springframework.core.Constants: java.util.Map fieldCache>;

        return $r1;
    }

    public java.lang.Number asNumber(java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.ConstantException $r4;
        org.springframework.core.Constants r0;
        java.lang.Object $r2;
        java.lang.String r1, $r5;
        java.lang.Number $r3;
        boolean $z0;

        r0 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.Object asObject(java.lang.String)>(r1);

        $z0 = $r2 instanceof java.lang.Number;

        if $z0 != 0 goto label1;

        $r4 = new org.springframework.core.ConstantException;

        $r5 = r0.<org.springframework.core.Constants: java.lang.String className>;

        specialinvoke $r4.<org.springframework.core.ConstantException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, r1, "not a Number");

        throw $r4;

     label1:
        $r3 = (java.lang.Number) $r2;

        return $r3;
    }

    public java.lang.String asString(java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.Constants r0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.Object asObject(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object asObject(java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.ConstantException $r6;
        java.util.Locale $r1;
        java.util.Map $r4;
        org.springframework.core.Constants r3;
        java.lang.Object $r5;
        java.lang.String r0, $r2, $r7;

        r3 := @this: org.springframework.core.Constants;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Code must not be null");

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $r4 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        if $r5 != null goto label1;

        $r6 = new org.springframework.core.ConstantException;

        $r7 = r3.<org.springframework.core.Constants: java.lang.String className>;

        specialinvoke $r6.<org.springframework.core.ConstantException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r2, "not found");

        throw $r6;

     label1:
        return $r5;
    }

    public java.util.Set getNames(java.lang.String)
    {
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.util.HashSet $r2;
        java.util.Locale $r10;
        java.util.Map $r4;
        org.springframework.core.Constants r3;
        java.lang.Object $r7;
        java.lang.String r0, r1, r8, $r9, $r11;
        boolean $z0, $z1;

        r3 := @this: org.springframework.core.Constants;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r10);

        goto label2;

     label1:
        $r11 = "";

     label2:
        r1 = $r11;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r8);

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return $r2;
    }

    public java.util.Set getNamesForProperty(java.lang.String)
    {
        java.util.Set $r3;
        org.springframework.core.Constants r0;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.String propertyToConstantNamePrefix(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.core.Constants: java.util.Set getNames(java.lang.String)>($r2);

        return $r3;
    }

    public java.util.Set getNamesForSuffix(java.lang.String)
    {
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.util.HashSet $r2;
        java.util.Locale $r10;
        java.util.Map $r4;
        org.springframework.core.Constants r3;
        java.lang.Object $r7;
        java.lang.String r0, r1, r8, $r9, $r11;
        boolean $z0, $z1;

        r3 := @this: org.springframework.core.Constants;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r10);

        goto label2;

     label1:
        $r11 = "";

     label2:
        r1 = $r11;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r8);

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return $r2;
    }

    public java.util.Set getValues(java.lang.String)
    {
        java.util.HashSet $r2;
        java.util.Locale $r12;
        java.util.Map $r4, $r9;
        org.springframework.core.Constants r3;
        java.lang.String r0, r1, r8, $r11, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r7, $r10;

        r3 := @this: org.springframework.core.Constants;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r12);

        goto label2;

     label1:
        $r13 = "";

     label2:
        r1 = $r13;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $r9 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return $r2;
    }

    public java.util.Set getValuesForProperty(java.lang.String)
    {
        java.util.Set $r3;
        org.springframework.core.Constants r0;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.String propertyToConstantNamePrefix(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>($r2);

        return $r3;
    }

    public java.util.Set getValuesForSuffix(java.lang.String)
    {
        java.util.HashSet $r2;
        java.util.Locale $r12;
        java.util.Map $r4, $r9;
        org.springframework.core.Constants r3;
        java.lang.String r0, r1, r8, $r11, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r7, $r10;

        r3 := @this: org.springframework.core.Constants;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r12);

        goto label2;

     label1:
        $r13 = "";

     label2:
        r1 = $r13;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $r9 = r3.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return $r2;
    }

    public java.lang.String toCode(java.lang.Object, java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.ConstantException $r14;
        java.util.Locale $r17;
        java.util.Map $r3;
        org.springframework.core.Constants r2;
        java.lang.String r0, r1, $r9, $r13, $r15, $r16, $r18;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r10, r11, $r12;

        r2 := @this: org.springframework.core.Constants;

        r11 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r17 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r18 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r17);

        goto label2;

     label1:
        $r18 = null;

     label2:
        r1 = $r18;

        $r3 = r2.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        return $r13;

     label4:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $r14 = new org.springframework.core.ConstantException;

        $r15 = r2.<org.springframework.core.Constants: java.lang.String className>;

        specialinvoke $r14.<org.springframework.core.ConstantException: void <init>(java.lang.String,java.lang.String,java.lang.Object)>($r15, r1, r11);

        throw $r14;
    }

    public java.lang.String toCodeForProperty(java.lang.Object, java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.Constants r0;
        java.lang.Object r1;
        java.lang.String r2, $r3, $r4;

        r0 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.String propertyToConstantNamePrefix(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<org.springframework.core.Constants: java.lang.String toCode(java.lang.Object,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public java.lang.String toCodeForSuffix(java.lang.Object, java.lang.String) throws org.springframework.core.ConstantException
    {
        org.springframework.core.ConstantException $r14;
        java.util.Locale $r17;
        java.util.Map $r3;
        org.springframework.core.Constants r2;
        java.lang.String r0, r1, $r9, $r13, $r15, $r16, $r18;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8, $r10, r11, $r12;

        r2 := @this: org.springframework.core.Constants;

        r11 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r17 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r18 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r17);

        goto label2;

     label1:
        $r18 = null;

     label2:
        r1 = $r18;

        $r3 = r2.<org.springframework.core.Constants: java.util.Map fieldCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        return $r13;

     label4:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $r14 = new org.springframework.core.ConstantException;

        $r15 = r2.<org.springframework.core.Constants: java.lang.String className>;

        specialinvoke $r14.<org.springframework.core.ConstantException: void <init>(java.lang.String,java.lang.String,java.lang.Object)>($r15, r1, r11);

        throw $r14;
    }

    public java.lang.String propertyToConstantNamePrefix(java.lang.String)
    {
        char $c0, $c1;
        int i2, $i3;
        java.lang.StringBuilder $r0;
        org.springframework.core.Constants r3;
        java.lang.String r1, $r2;
        boolean $z0;

        r3 := @this: org.springframework.core.Constants;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label4;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label3;

     label2:
        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label3:
        i2 = i2 + 1;

     label4:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 < $i3 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
