public final class org.apache.xmlbeans.XmlFactoryHook$ThreadContext extends java.lang.Object
{
    private static java.lang.ThreadLocal threadHook;

    public static org.apache.xmlbeans.XmlFactoryHook getHook()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1, $r3;
        java.lang.ref.SoftReference r2;
        org.apache.xmlbeans.XmlFactoryHook $r4;

        $r0 = <org.apache.xmlbeans.XmlFactoryHook$ThreadContext: java.lang.ThreadLocal threadHook>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.ref.SoftReference) $r1;

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r4 = (org.apache.xmlbeans.XmlFactoryHook) $r3;

     label2:
        return $r4;
    }

    public static void setHook(org.apache.xmlbeans.XmlFactoryHook)
    {
        java.lang.ThreadLocal $r2;
        java.lang.ref.SoftReference $r0;
        org.apache.xmlbeans.XmlFactoryHook r1;

        r1 := @parameter0: org.apache.xmlbeans.XmlFactoryHook;

        $r2 = <org.apache.xmlbeans.XmlFactoryHook$ThreadContext: java.lang.ThreadLocal threadHook>;

        $r0 = new java.lang.ref.SoftReference;

        specialinvoke $r0.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r0);

        return;
    }

    private void <init>()
    {
        org.apache.xmlbeans.XmlFactoryHook$ThreadContext r0;

        r0 := @this: org.apache.xmlbeans.XmlFactoryHook$ThreadContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.xmlbeans.XmlFactoryHook$ThreadContext: java.lang.ThreadLocal threadHook> = $r0;

        return;
    }
}
