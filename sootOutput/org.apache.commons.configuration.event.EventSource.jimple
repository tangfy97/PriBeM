public class org.apache.commons.configuration.event.EventSource extends java.lang.Object
{
    private java.util.Collection listeners;
    private java.util.Collection errorListeners;
    private int detailEvents;

    public void <init>()
    {
        org.apache.commons.configuration.event.EventSource r0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.apache.commons.configuration.event.EventSource: void initListeners()>();

        return;
    }

    public void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)
    {
        org.apache.commons.configuration.event.ConfigurationListener r1;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationListener;

        $r2 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        staticinvoke <org.apache.commons.configuration.event.EventSource: void doAddListener(java.util.Collection,java.lang.Object)>($r2, r1);

        return;
    }

    public boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)
    {
        org.apache.commons.configuration.event.ConfigurationListener r1;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationListener;

        $r2 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        $z0 = staticinvoke <org.apache.commons.configuration.event.EventSource: boolean doRemoveListener(java.util.Collection,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public java.util.Collection getConfigurationListeners()
    {
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1, $r2;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        $r2 = staticinvoke <org.apache.commons.configuration.event.EventSource: java.util.Collection doGetListeners(java.util.Collection)>($r1);

        return $r2;
    }

    public void clearConfigurationListeners()
    {
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        staticinvoke <org.apache.commons.configuration.event.EventSource: void doClearListeners(java.util.Collection)>($r1);

        return;
    }

    public boolean isDetailEvents()
    {
        java.lang.Throwable $r2;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.apache.commons.configuration.event.EventSource: int detailEvents>;

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDetailEvents(boolean)
    {
        java.lang.Throwable $r2;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        entermonitor $r1;

     label1:
        if z0 == 0 goto label2;

        $i2 = r0.<org.apache.commons.configuration.event.EventSource: int detailEvents>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.configuration.event.EventSource: int detailEvents> = $i3;

        goto label3;

     label2:
        $i0 = r0.<org.apache.commons.configuration.event.EventSource: int detailEvents>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.configuration.event.EventSource: int detailEvents> = $i1;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)
    {
        org.apache.commons.configuration.event.ConfigurationErrorListener r1;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationErrorListener;

        $r2 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        staticinvoke <org.apache.commons.configuration.event.EventSource: void doAddListener(java.util.Collection,java.lang.Object)>($r2, r1);

        return;
    }

    public boolean removeErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)
    {
        org.apache.commons.configuration.event.ConfigurationErrorListener r1;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationErrorListener;

        $r2 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        $z0 = staticinvoke <org.apache.commons.configuration.event.EventSource: boolean doRemoveListener(java.util.Collection,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public void clearErrorListeners()
    {
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        staticinvoke <org.apache.commons.configuration.event.EventSource: void doClearListeners(java.util.Collection)>($r1);

        return;
    }

    public java.util.Collection getErrorListeners()
    {
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1, $r2;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        $r2 = staticinvoke <org.apache.commons.configuration.event.EventSource: java.util.Collection doGetListeners(java.util.Collection)>($r1);

        return $r2;
    }

    protected void fireEvent(int, java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Throwable $r11;
        org.apache.commons.configuration.event.ConfigurationEvent $r4;
        java.util.ArrayList $r9, r12;
        org.apache.commons.configuration.event.ConfigurationListener $r7;
        int $i0, i1, $i2;
        java.lang.String r2;
        boolean z0, $z1;
        java.util.Iterator $r5;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1, $r8, $r10;
        java.lang.Object r3, $r6;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        r12 = null;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.apache.commons.configuration.event.EventSource: int detailEvents>;

        if $i0 < 0 goto label2;

        $r8 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        $i2 = interfaceinvoke $r8.<java.util.Collection: int size()>();

        if $i2 <= 0 goto label2;

        $r9 = new java.util.ArrayList;

        $r10 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners>;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r12 = $r9;

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r11;

     label6:
        if r12 == null goto label8;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.event.EventSource: org.apache.commons.configuration.event.ConfigurationEvent createEvent(int,java.lang.String,java.lang.Object,boolean)>(i1, r2, r3, z0);

        $r5 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.commons.configuration.event.ConfigurationListener) $r6;

        interfaceinvoke $r7.<org.apache.commons.configuration.event.ConfigurationListener: void configurationChanged(org.apache.commons.configuration.event.ConfigurationEvent)>($r4);

        goto label7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected org.apache.commons.configuration.event.ConfigurationEvent createEvent(int, java.lang.String, java.lang.Object, boolean)
    {
        org.apache.commons.configuration.event.ConfigurationEvent $r0;
        org.apache.commons.configuration.event.EventSource r1;
        int i0;
        java.lang.Object r3;
        java.lang.String r2;
        boolean z0;

        r1 := @this: org.apache.commons.configuration.event.EventSource;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.commons.configuration.event.ConfigurationEvent;

        specialinvoke $r0.<org.apache.commons.configuration.event.ConfigurationEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,boolean)>(r1, i0, r2, r3, z0);

        return $r0;
    }

    protected void fireError(int, java.lang.String, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r5, $r12;
        java.util.ArrayList $r10, r13;
        int $i0, i1;
        java.lang.String r3;
        boolean $z0;
        java.util.Iterator $r7;
        org.apache.commons.configuration.event.EventSource r0;
        java.util.Collection $r1, $r2, $r11;
        org.apache.commons.configuration.event.ConfigurationErrorEvent $r6;
        org.apache.commons.configuration.event.ConfigurationErrorListener $r9;
        java.lang.Object r4, $r8;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        i1 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Throwable;

        r13 = null;

        $r1 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label2;

        $r10 = new java.util.ArrayList;

        $r11 = r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners>;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r13 = $r10;

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r12;

     label6:
        if r13 == null goto label8;

        $r6 = virtualinvoke r0.<org.apache.commons.configuration.event.EventSource: org.apache.commons.configuration.event.ConfigurationErrorEvent createErrorEvent(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(i1, r3, r4, r5);

        $r7 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.commons.configuration.event.ConfigurationErrorListener) $r8;

        interfaceinvoke $r9.<org.apache.commons.configuration.event.ConfigurationErrorListener: void configurationError(org.apache.commons.configuration.event.ConfigurationErrorEvent)>($r6);

        goto label7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected org.apache.commons.configuration.event.ConfigurationErrorEvent createErrorEvent(int, java.lang.String, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.apache.commons.configuration.event.EventSource r1;
        int i0;
        java.lang.Object r3;
        java.lang.String r2;
        org.apache.commons.configuration.event.ConfigurationErrorEvent $r0;

        r1 := @this: org.apache.commons.configuration.event.EventSource;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Throwable;

        $r0 = new org.apache.commons.configuration.event.ConfigurationErrorEvent;

        specialinvoke $r0.<org.apache.commons.configuration.event.ConfigurationErrorEvent: void <init>(java.lang.Object,int,java.lang.String,java.lang.Object,java.lang.Throwable)>(r1, i0, r2, r3, r4);

        return $r0;
    }

    protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.commons.configuration.event.EventSource r0, r2;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.configuration.event.EventSource) $r1;

        specialinvoke r2.<org.apache.commons.configuration.event.EventSource: void initListeners()>();

        return r2;
    }

    private static void doAddListener(java.util.Collection, java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.util.Collection r1;
        java.lang.Object r0;
        java.lang.IllegalArgumentException $r2;

        r1 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must not be null!");

        throw $r2;

     label1:
        entermonitor r1;

     label2:
        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r0);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        exitmonitor r1;

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static boolean doRemoveListener(java.util.Collection, java.lang.Object)
    {
        java.lang.Throwable $r2;
        java.util.Collection r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        exitmonitor r0;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void doClearListeners(java.util.Collection)
    {
        java.lang.Throwable $r1;
        java.util.Collection r0;

        r0 := @parameter0: java.util.Collection;

        entermonitor r0;

     label1:
        interfaceinvoke r0.<java.util.Collection: void clear()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static java.util.Collection doGetListeners(java.util.Collection)
    {
        java.lang.Throwable $r3;
        java.util.Collection r0, $r2;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.util.Collection;

        entermonitor r0;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        exitmonitor r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void initListeners()
    {
        java.util.LinkedList $r1, $r2;
        org.apache.commons.configuration.event.EventSource r0;

        r0 := @this: org.apache.commons.configuration.event.EventSource;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection listeners> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.configuration.event.EventSource: java.util.Collection errorListeners> = $r2;

        return;
    }
}
