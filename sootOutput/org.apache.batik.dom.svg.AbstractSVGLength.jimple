public abstract class org.apache.batik.dom.svg.AbstractSVGLength extends java.lang.Object implements org.w3c.dom.svg.SVGLength
{
    public static final short HORIZONTAL_LENGTH;
    public static final short VERTICAL_LENGTH;
    public static final short OTHER_LENGTH;
    protected short unitType;
    protected float value;
    protected short direction;
    protected org.apache.batik.parser.UnitProcessor$Context context;
    protected static final java.lang.String[] UNITS;

    protected abstract org.apache.batik.dom.svg.SVGOMElement getAssociatedElement();

    public void <init>(short)
    {
        short s0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;
        org.apache.batik.dom.svg.AbstractSVGLength$DefaultContext $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        s0 := @parameter0: short;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.dom.svg.AbstractSVGLength$DefaultContext;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGLength$DefaultContext: void <init>(org.apache.batik.dom.svg.AbstractSVGLength)>(r0);

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: org.apache.batik.parser.UnitProcessor$Context context> = $r1;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: short direction> = s0;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = 0.0F;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = 1;

        return;
    }

    public short getUnitType()
    {
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void revalidate()>();

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        return $s0;
    }

    public float getValue()
    {
        org.apache.batik.parser.UnitProcessor$Context $r1;
        short $s0, $s1;
        org.apache.batik.dom.svg.AbstractSVGLength r0;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void revalidate()>();

     label1:
        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value>;

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short direction>;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: org.apache.batik.parser.UnitProcessor$Context context>;

        $f1 = staticinvoke <org.apache.batik.parser.UnitProcessor: float svgToUserSpace(float,short,short,org.apache.batik.parser.UnitProcessor$Context)>($f0, $s1, $s0, $r1);

        return $f1;

     label2:
        $r2 := @caughtexception;

        return 0.0F;

        catch java.lang.IllegalArgumentException from label1 to label2 with label2;
    }

    public void setValue(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.parser.UnitProcessor$Context $r1;
        short $s0, $s1;
        org.apache.batik.dom.svg.AbstractSVGLength r0;
        float f0, $f1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        f0 := @parameter0: float;

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short direction>;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: org.apache.batik.parser.UnitProcessor$Context context>;

        $f1 = staticinvoke <org.apache.batik.parser.UnitProcessor: float userSpaceToSVG(float,short,short,org.apache.batik.parser.UnitProcessor$Context)>(f0, $s1, $s0, $r1);

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = $f1;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void reset()>();

        return;
    }

    public float getValueInSpecifiedUnits()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void revalidate()>();

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value>;

        return $f0;
    }

    public void setValueInSpecifiedUnits(float) throws org.w3c.dom.DOMException
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        f0 := @parameter0: float;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void revalidate()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void reset()>();

        return;
    }

    public java.lang.String getValueAsString()
    {
        java.lang.String[] $r4;
        short $s0, $s1;
        org.apache.batik.dom.svg.AbstractSVGLength r0;
        java.lang.StringBuffer $r3, $r6, $r8;
        int $i2;
        float $f0;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void revalidate()>();

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        if $s0 != 0 goto label1;

        return "";

     label1:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value>;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = <org.apache.batik.dom.svg.AbstractSVGLength: java.lang.String[] UNITS>;

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        $i2 = (int) $s1;

        $r5 = $r4[$i2];

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void setValueAsString(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.AbstractSVGLength r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void parse(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void reset()>();

        return;
    }

    public void newValueSpecifiedUnits(short, float)
    {
        float f0;
        short s0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = s0;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void reset()>();

        return;
    }

    public void convertToSpecifiedUnits(short)
    {
        float $f0;
        short s0;
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        s0 := @parameter0: short;

        $f0 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: float getValue()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = s0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void setValue(float)>($f0);

        return;
    }

    protected void reset()
    {
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        return;
    }

    protected void revalidate()
    {
        org.apache.batik.dom.svg.AbstractSVGLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        return;
    }

    protected void parse(java.lang.String)
    {
        org.apache.batik.parser.LengthParser $r0;
        org.apache.batik.parser.UnitProcessor$UnitResolver $r1;
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGLength r3;
        float $f0;
        java.lang.String r2;
        org.apache.batik.parser.ParseException $r4;

        r3 := @this: org.apache.batik.dom.svg.AbstractSVGLength;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.batik.parser.LengthParser;

        specialinvoke $r0.<org.apache.batik.parser.LengthParser: void <init>()>();

        $r1 = new org.apache.batik.parser.UnitProcessor$UnitResolver;

        specialinvoke $r1.<org.apache.batik.parser.UnitProcessor$UnitResolver: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.parser.LengthParser: void setLengthHandler(org.apache.batik.parser.LengthHandler)>($r1);

        virtualinvoke $r0.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>(r2);

        $s0 = $r1.<org.apache.batik.parser.UnitProcessor$UnitResolver: short unit>;

        r3.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = $s0;

        $f0 = $r1.<org.apache.batik.parser.UnitProcessor$UnitResolver: float value>;

        r3.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = $f0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = 0;

        r3.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = 0.0F;

     label4:
        return;

        catch org.apache.batik.parser.ParseException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.apache.batik.dom.svg.AbstractSVGLength: short OTHER_LENGTH> = 0;

        <org.apache.batik.dom.svg.AbstractSVGLength: short VERTICAL_LENGTH> = 1;

        <org.apache.batik.dom.svg.AbstractSVGLength: short HORIZONTAL_LENGTH> = 2;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "";

        $r0[1] = "";

        $r0[2] = "%";

        $r0[3] = "em";

        $r0[4] = "ex";

        $r0[5] = "px";

        $r0[6] = "cm";

        $r0[7] = "mm";

        $r0[8] = "in";

        $r0[9] = "pt";

        $r0[10] = "pc";

        <org.apache.batik.dom.svg.AbstractSVGLength: java.lang.String[] UNITS> = $r0;

        return;
    }
}
