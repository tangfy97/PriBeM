public final class org.apache.poi.hwpf.sprm.CharacterSprmUncompressor extends org.apache.poi.hwpf.sprm.SprmUncompressor
{
    private static final org.apache.poi.util.POILogger logger;

    public void <init>()
    {
        org.apache.poi.hwpf.sprm.CharacterSprmUncompressor r0;

        r0 := @this: org.apache.poi.hwpf.sprm.CharacterSprmUncompressor;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmUncompressor: void <init>()>();

        return;
    }

    public static org.apache.poi.hwpf.usermodel.CharacterProperties uncompressCHP(org.apache.poi.hwpf.usermodel.CharacterProperties, byte[], int)
    {
        byte[] r2;
        int i0;
        org.apache.poi.hwpf.usermodel.CharacterProperties r0, $r1;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterProperties;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.CharacterProperties clone()>();

        staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: void applySprms(org.apache.poi.hwpf.usermodel.CharacterProperties,byte[],int,boolean,org.apache.poi.hwpf.usermodel.CharacterProperties)>(r0, r2, i0, 1, $r1);

        return $r1;
    }

    public static org.apache.poi.hwpf.usermodel.CharacterProperties uncompressCHP(org.apache.poi.hwpf.model.StyleSheet, org.apache.poi.hwpf.usermodel.CharacterProperties, byte[], int)
    {
        byte[] r0, $r3;
        org.apache.poi.util.POILogger $r7, $r9;
        java.lang.Integer $r1;
        java.lang.Exception $r6, $r8;
        org.apache.poi.hwpf.model.StyleSheet r2;
        int i0, $i1;
        org.apache.poi.hwpf.usermodel.CharacterProperties $r4, $r5, r10, r11, $r12;

        r2 := @parameter0: org.apache.poi.hwpf.model.StyleSheet;

        r10 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterProperties;

        r0 := @parameter2: byte[];

        i0 := @parameter3: int;

        if r10 != null goto label01;

        $r4 = new org.apache.poi.hwpf.usermodel.CharacterProperties;

        specialinvoke $r4.<org.apache.poi.hwpf.usermodel.CharacterProperties: void <init>()>();

        r10 = $r4;

        $r5 = new org.apache.poi.hwpf.usermodel.CharacterProperties;

        specialinvoke $r5.<org.apache.poi.hwpf.usermodel.CharacterProperties: void <init>()>();

        r11 = $r5;

        goto label02;

     label01:
        r11 = virtualinvoke r10.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.CharacterProperties clone()>();

     label02:
        $r1 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: java.lang.Integer getIstd(byte[],int)>(r0, i0);

        if $r1 == null goto label06;

     label03:
        $i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke r2.<org.apache.poi.hwpf.model.StyleSheet: byte[] getCHPX(int)>($i1);

        staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: void applySprms(org.apache.poi.hwpf.usermodel.CharacterProperties,byte[],int,boolean,org.apache.poi.hwpf.usermodel.CharacterProperties)>(r10, $r3, 0, 0, r11);

     label04:
        goto label06;

     label05:
        $r8 := @caughtexception;

        $r9 = <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r9.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to apply all style ", $r1, " CHP SPRMs to CHP: ", $r8, $r8);

     label06:
        $r12 = virtualinvoke r11.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.CharacterProperties clone()>();

     label07:
        staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: void applySprms(org.apache.poi.hwpf.usermodel.CharacterProperties,byte[],int,boolean,org.apache.poi.hwpf.usermodel.CharacterProperties)>(r11, r0, i0, 1, $r12);

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        $r7 = <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r7.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to process all direct CHP SPRMs: ", $r6, $r6);

     label10:
        return $r12;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static void applySprms(org.apache.poi.hwpf.usermodel.CharacterProperties, byte[], int, boolean, org.apache.poi.hwpf.usermodel.CharacterProperties)
    {
        byte[] r1;
        org.apache.poi.util.POILogger $r6;
        int i0, $i1;
        org.apache.poi.hwpf.sprm.SprmIterator $r0;
        java.lang.StringBuilder $r5, $r7, $r8;
        org.apache.poi.hwpf.sprm.SprmOperation $r2;
        java.lang.String $r9;
        org.apache.poi.hwpf.usermodel.CharacterProperties r3, r4;
        boolean z0, $z1;

        r3 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterProperties;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.poi.hwpf.usermodel.CharacterProperties;

        $r0 = new org.apache.poi.hwpf.sprm.SprmIterator;

        specialinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: void <init>(byte[],int)>(r1, i0);

     label1:
        $z1 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i1 = virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i1 == 2 goto label2;

        if z0 == 0 goto label1;

        $r6 = <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-CHP SPRM returned by SprmIterator: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r9);

        goto label1;

     label2:
        staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: void unCompressCHPOperation(org.apache.poi.hwpf.usermodel.CharacterProperties,org.apache.poi.hwpf.usermodel.CharacterProperties,org.apache.poi.hwpf.sprm.SprmOperation)>(r3, r4, $r2);

        goto label1;

     label3:
        return;
    }

    private static java.lang.Integer getIstd(byte[], int)
    {
        byte[] r1;
        org.apache.poi.util.POILogger $r4;
        java.lang.Integer r5;
        java.lang.Exception $r3;
        int i0, $i1, $i2, $i3;
        org.apache.poi.hwpf.sprm.SprmIterator $r0;
        org.apache.poi.hwpf.sprm.SprmOperation $r2;
        boolean $z0;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r5 = null;

     label1:
        $r0 = new org.apache.poi.hwpf.sprm.SprmIterator;

        specialinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: void <init>(byte[],int)>(r1, i0);

     label2:
        $z0 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i1 = virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i1 != 2 goto label3;

        $i2 = virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperation()>();

        if $i2 != 48 goto label3;

        $i3 = virtualinvoke $r2.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        $r4 = <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to extract istd from direct CHP SPRM: ", $r3, $r3);

     label6:
        return r5;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    static void unCompressCHPOperation(org.apache.poi.hwpf.usermodel.CharacterProperties, org.apache.poi.hwpf.usermodel.CharacterProperties, org.apache.poi.hwpf.sprm.SprmOperation)
    {
        byte[] $r4, $r7, $r9, r10, $r11, $r13, $r16, $r17, $r19, $r20, $r22;
        byte $b2, $b5, $b16, $b22, $b25, $b55, b68, $b75, $b100, $b101, $b102, $b104, $b108, $b110, $b112, $b114, $b116, $b118, $b120, $b122, $b126;
        java.lang.StringBuilder $r25, $r26, $r37;
        short $s7, $s9, $s14, $s18, $s27, $s34, $s36, $s38, $s40, $s48, $s53, $s57, $s61, $s66, $s77, $s87, $s91, $s95, $s106, $s130, $s133, s136, $s138, $s142;
        org.apache.poi.hwpf.usermodel.CharacterProperties r1, $r18, r28;
        org.apache.poi.hwpf.usermodel.BorderCode $r34;
        org.apache.poi.util.POILogger $r24;
        org.apache.poi.hwpf.usermodel.DateAndTime $r29, $r31, $r32, $r33;
        int $i0, $i1, $i3, $i4, $i6, $i8, $i10, $i11, $i12, $i13, $i15, $i17, $i19, $i20, $i21, $i23, $i24, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i37, $i39, $i41, $i42, i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i54, $i56, $i58, $i59, $i60, $i62, $i63, $i64, $i65, $i67, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i78, $i79, i80, $i81, $i82, $i83, $i84, $i85, $i86, $i88, $i89, $i90, $i92, $i93, $i94, $i96, $i97, $i98, $i99, $i103, $i105, $i107, $i109, $i111, $i113, $i115, $i117, $i119, $i121, $i123, $i124, $i125, $i127, $i128, $i129, $i131, $i132, $i134, $i135, $i137, $i139, $i140, $i141, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i153, $i154, $i155, $i156, $i157, $i159, $i160, $i161, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173;
        org.apache.poi.hwpf.model.Colorref $r36;
        org.apache.poi.hwpf.model.Hyphenation $r30;
        org.apache.poi.hwpf.sprm.SprmOperation r0;
        java.lang.String $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z33, $z34, $z35, $z36;
        float $f0, f1, $f2, $f3;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor $r5;
        org.apache.poi.hwpf.usermodel.ShadingDescriptor80 $r35;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterProperties;

        r28 := @parameter1: org.apache.poi.hwpf.usermodel.CharacterProperties;

        r0 := @parameter2: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperation()>();

        tableswitch($i0)
        {
            case 0: goto label001;
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label004;
            case 4: goto label005;
            case 5: goto label006;
            case 6: goto label007;
            case 7: goto label008;
            case 8: goto label009;
            case 9: goto label010;
            case 10: goto label011;
            case 11: goto label012;
            case 12: goto label013;
            case 13: goto label014;
            case 14: goto label015;
            case 15: goto label016;
            case 16: goto label017;
            case 17: goto label018;
            case 18: goto label019;
            case 19: goto label020;
            case 20: goto label021;
            case 21: goto label022;
            case 22: goto label023;
            case 23: goto label024;
            case 24: goto label025;
            case 25: goto label026;
            case 26: goto label027;
            case 27: goto label028;
            case 28: goto label029;
            case 29: goto label030;
            case 30: goto label031;
            case 31: goto label032;
            case 32: goto label033;
            case 33: goto label034;
            case 34: goto label035;
            case 35: goto label036;
            case 36: goto label037;
            case 37: goto label038;
            case 38: goto label039;
            case 39: goto label040;
            case 40: goto label041;
            case 41: goto label042;
            case 42: goto label043;
            case 43: goto label044;
            case 44: goto label045;
            case 45: goto label046;
            case 46: goto label047;
            case 47: goto label048;
            case 48: goto label049;
            case 49: goto label050;
            case 50: goto label051;
            case 51: goto label052;
            case 52: goto label053;
            case 53: goto label054;
            case 54: goto label055;
            case 55: goto label056;
            case 56: goto label057;
            case 57: goto label058;
            case 58: goto label059;
            case 59: goto label060;
            case 60: goto label061;
            case 61: goto label062;
            case 62: goto label063;
            case 63: goto label064;
            case 64: goto label071;
            case 65: goto label072;
            case 66: goto label073;
            case 67: goto label074;
            case 68: goto label075;
            case 69: goto label076;
            case 70: goto label077;
            case 71: goto label079;
            case 72: goto label080;
            case 73: goto label081;
            case 74: goto label082;
            case 75: goto label083;
            case 76: goto label084;
            case 77: goto label085;
            case 78: goto label086;
            case 79: goto label087;
            case 80: goto label088;
            case 81: goto label089;
            case 82: goto label090;
            case 83: goto label091;
            case 84: goto label092;
            case 85: goto label093;
            case 86: goto label094;
            case 87: goto label095;
            case 88: goto label098;
            case 89: goto label099;
            case 90: goto label100;
            case 91: goto label101;
            case 92: goto label102;
            case 93: goto label103;
            case 94: goto label104;
            case 95: goto label105;
            case 96: goto label106;
            case 97: goto label107;
            case 98: goto label108;
            case 99: goto label111;
            case 100: goto label112;
            case 101: goto label113;
            case 102: goto label114;
            case 103: goto label115;
            case 104: goto label116;
            case 105: goto label117;
            case 106: goto label118;
            case 107: goto label119;
            case 108: goto label120;
            case 109: goto label121;
            case 110: goto label122;
            case 111: goto label123;
            case 112: goto label124;
            case 113: goto label125;
            case 114: goto label126;
            case 115: goto label127;
            case 116: goto label128;
            case 117: goto label129;
            default: goto label130;
        };

     label001:
        $i146 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z31 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i146);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFRMarkDel(boolean)>($z31);

        goto label131;

     label002:
        $i145 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z30 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i145);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFRMark(boolean)>($z30);

        goto label131;

     label003:
        $i144 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z29 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i144);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFFldVanish(boolean)>($z29);

        goto label131;

     label004:
        $i143 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFcPic(int)>($i143);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSpec(boolean)>(1);

        goto label131;

     label005:
        $i141 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s142 = (short) $i141;

        $i147 = (int) $s142;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIbstRMark(int)>($i147);

        goto label131;

     label006:
        $r29 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        $r22 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i140 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        specialinvoke $r29.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>(byte[],int)>($r22, $i140);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r29);

        goto label131;

     label007:
        $i139 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z28 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i139);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFData(boolean)>($z28);

        goto label131;

     label008:
        goto label131;

     label009:
        $i134 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $i135 = $i134 & 255;

        s136 = (short) $i135;

        $i148 = (int) s136;

        $z27 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i148);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFChsDiff(boolean)>($z27);

        $i137 = $i134 & 16776960;

        $s138 = (short) $i137;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setChse(short)>($s138);

        goto label131;

     label010:
        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSpec(boolean)>(1);

        $r19 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i129 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $s130 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r19, $i129);

        $i149 = (int) $s130;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcSym(int)>($i149);

        $r20 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i131 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $i132 = $i131 + 2;

        $s133 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r20, $i132);

        $i150 = (int) $s133;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setXchSym(int)>($i150);

        goto label131;

     label011:
        $i128 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z26 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i128);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFOle2(boolean)>($z26);

        goto label131;

     label012:
        goto label131;

     label013:
        $i125 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b126 = (byte) $i125;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIcoHighlight(byte)>($b126);

        $i127 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z25 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i127);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFHighlight(boolean)>($z25);

        goto label131;

     label014:
        goto label131;

     label015:
        $i124 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFcObj(int)>($i124);

        goto label131;

     label016:
        goto label131;

     label017:
        goto label131;

     label018:
        goto label131;

     label019:
        goto label131;

     label020:
        goto label131;

     label021:
        goto label131;

     label022:
        goto label131;

     label023:
        goto label131;

     label024:
        goto label131;

     label025:
        goto label131;

     label026:
        goto label131;

     label027:
        goto label131;

     label028:
        goto label131;

     label029:
        goto label131;

     label030:
        goto label131;

     label031:
        goto label131;

     label032:
        goto label131;

     label033:
        goto label131;

     label034:
        goto label131;

     label035:
        goto label131;

     label036:
        goto label131;

     label037:
        goto label131;

     label038:
        goto label131;

     label039:
        goto label131;

     label040:
        goto label131;

     label041:
        goto label131;

     label042:
        goto label131;

     label043:
        goto label131;

     label044:
        goto label131;

     label045:
        goto label131;

     label046:
        goto label131;

     label047:
        goto label131;

     label048:
        goto label131;

     label049:
        $i123 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIstd(int)>($i123);

        goto label131;

     label050:
        goto label131;

     label051:
        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFBold(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFItalic(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFOutline(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFStrike(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFShadow(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSmallCaps(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFCaps(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFVanish(boolean)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setKul(byte)>(0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIco(byte)>(0);

        goto label131;

     label052:
        $z24 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFSpec()>();

        $r18 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: org.apache.poi.hwpf.usermodel.CharacterProperties clone()>();

        virtualinvoke $r18.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSpec(boolean)>($z24);

        return;

     label053:
        goto label131;

     label054:
        $i121 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b122 = (byte) $i121;

        $z22 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFBold()>();

        $z23 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b122, $z22);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFBold(boolean)>($z23);

        goto label131;

     label055:
        $i119 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b120 = (byte) $i119;

        $z20 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFItalic()>();

        $z21 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b120, $z20);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFItalic(boolean)>($z21);

        goto label131;

     label056:
        $i117 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b118 = (byte) $i117;

        $z18 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFStrike()>();

        $z19 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b118, $z18);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFStrike(boolean)>($z19);

        goto label131;

     label057:
        $i115 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b116 = (byte) $i115;

        $z16 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFOutline()>();

        $z17 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b116, $z16);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFOutline(boolean)>($z17);

        goto label131;

     label058:
        $i113 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b114 = (byte) $i113;

        $z14 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFShadow()>();

        $z15 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b114, $z14);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFShadow(boolean)>($z15);

        goto label131;

     label059:
        $i111 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b112 = (byte) $i111;

        $z12 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFSmallCaps()>();

        $z13 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b112, $z12);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSmallCaps(boolean)>($z13);

        goto label131;

     label060:
        $i109 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b110 = (byte) $i109;

        $z10 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFCaps()>();

        $z11 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b110, $z10);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFCaps(boolean)>($z11);

        goto label131;

     label061:
        $i107 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b108 = (byte) $i107;

        $z8 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFVanish()>();

        $z9 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b108, $z8);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFVanish(boolean)>($z9);

        goto label131;

     label062:
        $i105 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s106 = (short) $i105;

        $i151 = (int) $s106;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcAscii(int)>($i151);

        goto label131;

     label063:
        $i103 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b104 = (byte) $i103;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setKul(byte)>($b104);

        goto label131;

     label064:
        $i79 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        i80 = $i79 & 255;

        if i80 == 0 goto label065;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>(i80);

     label065:
        $i153 = (int) 65280;

        $i81 = $i79 & $i153;

        $i82 = $i81 >>> 8;

        $b101 = (byte) $i82;

        $i154 = (int) $b101;

        $i83 = $i154 >>> 1;

        $b102 = (byte) $i83;

        if $b102 == 0 goto label066;

        $i96 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i155 = (int) $b102;

        $i97 = $i155 * 2;

        $i98 = $i96 + $i97;

        $i99 = staticinvoke <java.lang.Math: int max(int,int)>($i98, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i99);

     label066:
        $i84 = $i79 & 16711680;

        $i85 = $i84 >>> 16;

        $b100 = (byte) $i85;

        $i156 = (int) $b100;

        if $i156 == 128 goto label067;

        $s95 = (short) $b100;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHpsPos(short)>($s95);

     label067:
        $i86 = $i79 & 256;

        if $i86 <= 0 goto label068;

        $z36 = 1;

        $z35 = 1;

        goto label069;

     label068:
        $z36 = 0;

        $z35 = 0;

     label069:
        z7 = $z36;

        if $z35 == 0 goto label070;

        $i157 = (int) $b100;

        if $i157 == 128 goto label070;

        if $b100 == 0 goto label070;

        $s91 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: short getHpsPos()>();

        if $s91 != 0 goto label070;

        $i92 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i159 = (int) -2;

        $i93 = $i92 + $i159;

        $i94 = staticinvoke <java.lang.Math: int max(int,int)>($i93, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i94);

     label070:
        if z7 == 0 goto label131;

        if $b100 != 0 goto label131;

        $s87 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: short getHpsPos()>();

        if $s87 == 0 goto label131;

        $i88 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i89 = $i88 + 2;

        $i90 = staticinvoke <java.lang.Math: int max(int,int)>($i89, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i90);

        goto label131;

     label071:
        $i78 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDxaSpace(int)>($i78);

        goto label131;

     label072:
        $i76 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s77 = (short) $i76;

        $i160 = (int) $s77;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setLidDefault(int)>($i160);

        goto label131;

     label073:
        $i74 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b75 = (byte) $i74;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIco(byte)>($b75);

        goto label131;

     label074:
        $i73 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i73);

        goto label131;

     label075:
        $i67 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        b68 = (byte) $i67;

        $i69 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i161 = (int) b68;

        $i70 = $i161 * 2;

        $i71 = $i69 + $i70;

        $i72 = staticinvoke <java.lang.Math: int max(int,int)>($i71, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i72);

        goto label131;

     label076:
        $i65 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s66 = (short) $i65;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHpsPos(short)>($s66);

        goto label131;

     label077:
        $i56 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        if $i56 == 0 goto label078;

        $s61 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: short getHpsPos()>();

        if $s61 != 0 goto label131;

        $i62 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i163 = (int) -2;

        $i63 = $i62 + $i163;

        $i64 = staticinvoke <java.lang.Math: int max(int,int)>($i63, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i64);

        goto label131;

     label078:
        $s57 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: short getHpsPos()>();

        if $s57 == 0 goto label131;

        $i58 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i59 = $i58 + 2;

        $i60 = staticinvoke <java.lang.Math: int max(int,int)>($i59, 2);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i60);

        goto label131;

     label079:
        goto label131;

     label080:
        $i54 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b55 = (byte) $i54;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIss(byte)>($b55);

        goto label131;

     label081:
        $r17 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i52 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $s53 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r17, $i52);

        $i164 = (int) $s53;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i164);

        goto label131;

     label082:
        $r16 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i47 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $s48 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r16, $i47);

        $i49 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i165 = (int) $s48;

        $i50 = $i49 + $i165;

        $i51 = staticinvoke <java.lang.Math: int max(int,int)>($i50, 8);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i51);

        goto label131;

     label083:
        $i46 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHpsKern(int)>($i46);

        goto label131;

     label084:
        goto label131;

     label085:
        $i41 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $f0 = (float) $i41;

        f1 = $f0 / 100.0F;

        $i42 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $f2 = (float) $i42;

        $f3 = f1 * $f2;

        i43 = (int) $f3;

        $i44 = virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: int getHps()>();

        $i45 = $i44 + i43;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHps(int)>($i45);

        goto label131;

     label086:
        $r30 = new org.apache.poi.hwpf.model.Hyphenation;

        $i39 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s40 = (short) $i39;

        specialinvoke $r30.<org.apache.poi.hwpf.model.Hyphenation: void <init>(short)>($s40);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setHresi(org.apache.poi.hwpf.model.Hyphenation)>($r30);

        goto label131;

     label087:
        $i37 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s38 = (short) $i37;

        $i166 = (int) $s38;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcAscii(int)>($i166);

        goto label131;

     label088:
        $i35 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s36 = (short) $i35;

        $i167 = (int) $s36;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcFE(int)>($i167);

        goto label131;

     label089:
        $i33 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s34 = (short) $i33;

        $i168 = (int) $s34;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFtcOther(int)>($i168);

        goto label131;

     label090:
        goto label131;

     label091:
        $i32 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z6 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i32);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFDStrike(boolean)>($z6);

        goto label131;

     label092:
        $i31 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z5 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i31);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFImprint(boolean)>($z5);

        goto label131;

     label093:
        $i30 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z4 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i30);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFSpec(boolean)>($z4);

        goto label131;

     label094:
        $i29 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z3 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i29);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFObj(boolean)>($z3);

        goto label131;

     label095:
        $r13 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i24 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $b25 = $r13[$i24];

        if $b25 == 0 goto label096;

        $z33 = 1;

        goto label097;

     label096:
        $z33 = 0;

     label097:
        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFPropRMark(boolean)>($z33);

        $i26 = $i24 + 1;

        $s27 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r13, $i26);

        $i169 = (int) $s27;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIbstPropRMark(int)>($i169);

        $r31 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        $i28 = $i24 + 3;

        specialinvoke $r31.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>(byte[],int)>($r13, $i28);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmPropRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r31);

        goto label131;

     label098:
        $i23 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z2 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getFlag(int)>($i23);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFEmboss(boolean)>($z2);

        goto label131;

     label099:
        $i21 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b22 = (byte) $i21;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setSfxtText(byte)>($b22);

        goto label131;

     label100:
        goto label131;

     label101:
        goto label131;

     label102:
        goto label131;

     label103:
        goto label131;

     label104:
        goto label131;

     label105:
        goto label131;

     label106:
        goto label131;

     label107:
        goto label131;

     label108:
        r10 = newarray (byte)[32];

        $r11 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i15 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $b16 = $r11[$i15];

        if 0 == $b16 goto label109;

        $z34 = 1;

        goto label110;

     label109:
        $z34 = 0;

     label110:
        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFDispFldRMark(boolean)>($z34);

        $i17 = $i15 + 1;

        $s18 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r11, $i17);

        $i170 = (int) $s18;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIbstDispFldRMark(int)>($i170);

        $r32 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        $i19 = $i15 + 3;

        specialinvoke $r32.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>(byte[],int)>($r11, $i19);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmDispFldRMark(org.apache.poi.hwpf.usermodel.DateAndTime)>($r32);

        $i20 = $i15 + 7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i20, r10, 0, 32);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setXstDispFldRMark(byte[])>(r10);

        goto label131;

     label111:
        $i13 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s14 = (short) $i13;

        $i171 = (int) $s14;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIbstRMarkDel(int)>($i171);

        goto label131;

     label112:
        $r33 = new org.apache.poi.hwpf.usermodel.DateAndTime;

        $r9 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i12 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        specialinvoke $r33.<org.apache.poi.hwpf.usermodel.DateAndTime: void <init>(byte[],int)>($r9, $i12);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setDttmRMarkDel(org.apache.poi.hwpf.usermodel.DateAndTime)>($r33);

        goto label131;

     label113:
        $r34 = new org.apache.poi.hwpf.usermodel.BorderCode;

        $r7 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i11 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        specialinvoke $r34.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r7, $i11);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setBrc(org.apache.poi.hwpf.usermodel.BorderCode)>($r34);

        goto label131;

     label114:
        $r35 = new org.apache.poi.hwpf.usermodel.ShadingDescriptor80;

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i10 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        specialinvoke $r35.<org.apache.poi.hwpf.usermodel.ShadingDescriptor80: void <init>(byte[],int)>($r4, $i10);

        $r5 = virtualinvoke $r35.<org.apache.poi.hwpf.usermodel.ShadingDescriptor80: org.apache.poi.hwpf.usermodel.ShadingDescriptor toShadingDescriptor()>();

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setShd(org.apache.poi.hwpf.usermodel.ShadingDescriptor)>($r5);

        goto label131;

     label115:
        goto label131;

     label116:
        goto label131;

     label117:
        goto label131;

     label118:
        goto label131;

     label119:
        goto label131;

     label120:
        goto label131;

     label121:
        $i8 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s9 = (short) $i8;

        $i172 = (int) $s9;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setLidDefault(int)>($i172);

        goto label131;

     label122:
        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s7 = (short) $i6;

        $i173 = (int) $s7;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setLidFE(int)>($i173);

        goto label131;

     label123:
        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b5 = (byte) $i4;

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setIdctHint(byte)>($b5);

        goto label131;

     label124:
        $r36 = new org.apache.poi.hwpf.model.Colorref;

        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        specialinvoke $r36.<org.apache.poi.hwpf.model.Colorref: void <init>(int)>($i3);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setCv(org.apache.poi.hwpf.model.Colorref)>($r36);

        goto label131;

     label125:
        goto label131;

     label126:
        goto label131;

     label127:
        goto label131;

     label128:
        goto label131;

     label129:
        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $b2 = (byte) $i1;

        $z0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.CharacterProperties: boolean isFNoProof()>();

        $z1 = staticinvoke <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: boolean getCHPFlag(byte,boolean)>($b2, $z0);

        virtualinvoke r28.<org.apache.poi.hwpf.usermodel.CharacterProperties: void setFNoProof(boolean)>($z1);

        goto label131;

     label130:
        $r24 = <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown CHP sprm ignored: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(1, $r27);

     label131:
        return;
    }

    private static boolean getCHPFlag(byte, boolean)
    {
        short $s1, $s2, $s3, $s5;
        byte b0;
        int $i4, $i6;
        boolean z0, $z1;

        b0 := @parameter0: byte;

        z0 := @parameter1: boolean;

        if b0 != 0 goto label1;

        return 0;

     label1:
        if b0 != 1 goto label2;

        return 1;

     label2:
        $s3 = (short) b0;

        $s1 = $s3 & 129;

        $i4 = (int) $s1;

        if $i4 != 128 goto label3;

        return z0;

     label3:
        $s5 = (short) b0;

        $s2 = $s5 & 129;

        $i6 = (int) $s2;

        if $i6 != 129 goto label6;

        if z0 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;

     label6:
        return 0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/sprm/CharacterSprmUncompressor;");

        <org.apache.poi.hwpf.sprm.CharacterSprmUncompressor: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
