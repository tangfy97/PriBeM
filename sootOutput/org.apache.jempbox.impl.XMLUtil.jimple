public class org.apache.jempbox.impl.XMLUtil extends java.lang.Object
{

    private void <init>()
    {
        org.apache.jempbox.impl.XMLUtil r0;

        r0 := @this: org.apache.jempbox.impl.XMLUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.Document parse(java.io.InputStream) throws java.io.IOException
    {
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        java.io.IOException $r5;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r6;
        java.lang.Exception $r4;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r3 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.w3c.dom.Document parse(org.xml.sax.InputSource) throws java.io.IOException
    {
        org.xml.sax.InputSource r2;
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        java.io.IOException $r5;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r6;
        java.lang.Exception $r4;

        r2 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r3 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.w3c.dom.Document parse(java.lang.String) throws java.io.IOException
    {
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        java.io.IOException $r5;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String r2, $r6;
        java.lang.Exception $r4;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r3 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.w3c.dom.Document newDocument() throws java.io.IOException
    {
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r1;
        java.io.IOException $r4;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r5;
        java.lang.Exception $r3;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.w3c.dom.Element getElement(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, r4;
        org.w3c.dom.NodeList $r2;
        org.w3c.dom.Node $r3;
        int $i0;
        java.lang.String r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r4 = null;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r4 = (org.w3c.dom.Element) $r3;

     label1:
        return r4;
    }

    public static java.lang.Integer getIntValue(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, $r2;
        java.lang.String r1, $r3;
        java.lang.Integer $r4, r5;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jempbox.impl.XMLUtil: org.w3c.dom.Element getElement(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <org.apache.jempbox.impl.XMLUtil: java.lang.String getStringValue(org.w3c.dom.Element)>($r2);

        r5 = null;

        if $r3 == null goto label1;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(java.lang.String)>($r3);

        r5 = $r4;

     label1:
        return r5;
    }

    public static void setIntValue(org.w3c.dom.Element, java.lang.String, java.lang.Integer)
    {
        java.lang.Integer r3;
        org.w3c.dom.Element r0, $r2, $r6, r7;
        org.w3c.dom.Document $r5;
        java.lang.String r1, $r4;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Integer;

        $r2 = staticinvoke <org.apache.jempbox.impl.XMLUtil: org.w3c.dom.Element getElement(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        r7 = $r2;

        if r3 != null goto label1;

        if $r2 == null goto label3;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r2);

        goto label3;

     label1:
        if $r2 != null goto label2;

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r1);

        r7 = $r6;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label2:
        $r4 = virtualinvoke r3.<java.lang.Integer: java.lang.String toString()>();

        staticinvoke <org.apache.jempbox.impl.XMLUtil: void setStringValue(org.w3c.dom.Element,java.lang.String)>(r7, $r4);

     label3:
        return;
    }

    public static java.lang.String getStringValue(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, $r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jempbox.impl.XMLUtil: org.w3c.dom.Element getElement(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <org.apache.jempbox.impl.XMLUtil: java.lang.String getStringValue(org.w3c.dom.Element)>($r2);

        return $r3;
    }

    public static void setStringValue(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0, $r2, $r5, r6;
        org.w3c.dom.Document $r4;
        java.lang.String r1, r3;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.jempbox.impl.XMLUtil: org.w3c.dom.Element getElement(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        r6 = $r2;

        if r3 != null goto label1;

        if $r2 == null goto label3;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r2);

        goto label3;

     label1:
        if $r2 != null goto label2;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r1);

        r6 = $r5;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label2:
        staticinvoke <org.apache.jempbox.impl.XMLUtil: void setStringValue(org.w3c.dom.Element,java.lang.String)>(r6, r3);

     label3:
        return;
    }

    public static java.lang.String getStringValue(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 = "";

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $z0 = $r2 instanceof org.w3c.dom.Text;

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r3;
    }

    public static void setStringValue(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Element r0;
        org.w3c.dom.Document $r2;
        org.w3c.dom.Node $r5;
        int $i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label3;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $z0 = $r5 instanceof org.w3c.dom.Text;

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r3);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return;
    }

    public static void setElementableValue(org.w3c.dom.Element, java.lang.String, org.apache.jempbox.xmp.Elementable)
    {
        org.w3c.dom.NodeList $r2, $r7;
        org.w3c.dom.Element r0, $r5, $r6, $r9;
        org.w3c.dom.Node $r4, $r8, $r10;
        int $i0, $i1, i2;
        java.lang.String r1;
        org.apache.jempbox.xmp.Elementable r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.jempbox.xmp.Elementable;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>(r1);

        if r3 != null goto label3;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i1 goto label2;

        $r10 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label6;

     label3:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label5;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r9 = interfaceinvoke r3.<org.apache.jempbox.xmp.Elementable: org.w3c.dom.Element getElement()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r9, $r8);

        goto label6;

     label4:
        $r6 = interfaceinvoke r3.<org.apache.jempbox.xmp.Elementable: org.w3c.dom.Element getElement()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        goto label6;

     label5:
        $r4 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r5 = interfaceinvoke r3.<org.apache.jempbox.xmp.Elementable: org.w3c.dom.Element getElement()>();

        interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)>($r5, $r4);

     label6:
        return;
    }

    public static void save(org.w3c.dom.Document, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r8;
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r6;
        javax.xml.transform.stream.StreamResult $r3;
        java.io.File $r4;
        org.w3c.dom.Document r7;
        javax.xml.transform.TransformerFactory $r0;
        java.lang.String r2, r5;

        r7 := @parameter0: org.w3c.dom.Document;

        r5 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", r2);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

        $r3 = new javax.xml.transform.stream.StreamResult;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r5);

        specialinvoke $r3.<javax.xml.transform.stream.StreamResult: void <init>(java.io.File)>($r4);

        $r6 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r6.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r7);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r6, $r3);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void save(org.w3c.dom.Node, java.io.OutputStream, java.lang.String) throws javax.xml.transform.TransformerException
    {
        java.io.OutputStream r4;
        java.lang.Throwable $r7;
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r5;
        javax.xml.transform.stream.StreamResult $r3;
        org.w3c.dom.Node r6;
        javax.xml.transform.TransformerFactory $r0;
        java.lang.String r2;

        r6 := @parameter0: org.w3c.dom.Node;

        r4 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: java.lang.String;

     label1:
        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", r2);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

        $r3 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r3.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r4);

        $r5 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r5.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r6);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r5, $r3);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static byte[] asByteArray(org.w3c.dom.Document, java.lang.String) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r5;
        byte[] $r9;
        javax.xml.transform.TransformerException $r11;
        java.io.StringWriter $r3;
        javax.xml.transform.stream.StreamResult $r4;
        org.w3c.dom.Document r6;
        java.lang.StringBuffer $r7;
        javax.xml.transform.TransformerFactory $r0;
        java.lang.String r2, $r8;
        java.io.UnsupportedEncodingException $r10;

        r6 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", r2);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r3);

        $r5 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r5.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r6);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r5, $r4);

     label1:
        $r7 = virtualinvoke $r3.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = new javax.xml.transform.TransformerException;

        specialinvoke $r11.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>("Unsupported Encoding", $r10);

        throw $r11;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
