public final enum class org.codehaus.jackson.annotate.JsonTypeInfo$Id extends java.lang.Enum
{
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME;
    public static final enum org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM;
    private final java.lang.String _defaultPropertyName;
    private static final org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES;

    public static org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.codehaus.jackson.annotate.JsonTypeInfo$Id[]) $r1;

        return $r2;
    }

    public static org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r2;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;", r0);

        $r2 = (org.codehaus.jackson.annotate.JsonTypeInfo$Id) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        int i0;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: java.lang.String _defaultPropertyName> = r2;

        return;
    }

    public java.lang.String getDefaultPropertyName()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        $r1 = r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: java.lang.String _defaultPropertyName>;

        return $r1;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $r5;

        $r0 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("NONE", 0, null);

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE> = $r0;

        $r1 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r1.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("CLASS", 1, "@class");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS> = $r1;

        $r2 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r2.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("MINIMAL_CLASS", 2, "@c");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS> = $r2;

        $r3 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r3.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("NAME", 3, "@type");

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME> = $r3;

        $r4 = new org.codehaus.jackson.annotate.JsonTypeInfo$Id;

        specialinvoke $r4.<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>("CUSTOM", 4, null);

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM> = $r4;

        $r5 = newarray (org.codehaus.jackson.annotate.JsonTypeInfo$Id)[5];

        $r6 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE>;

        $r5[0] = $r6;

        $r7 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r5[1] = $r7;

        $r8 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS>;

        $r5[2] = $r8;

        $r9 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME>;

        $r5[3] = $r9;

        $r10 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM>;

        $r5[4] = $r10;

        <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES> = $r5;

        return;
    }
}
