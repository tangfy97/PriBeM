public class org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer extends org.eclipse.jdt.internal.compiler.parser.RecoveredField implements org.eclipse.jdt.internal.compiler.parser.TerminalTokens
{
    public org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes;
    public int localTypeCount;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody;
    int pendingModifiers;
    int pendingModifersSourceStart;
    org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations;
    int pendingAnnotationCount;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r2;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void <init>(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int,org.eclipse.jdt.internal.compiler.parser.Parser)>(r1, r2, i0, null);

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int, org.eclipse.jdt.internal.compiler.parser.Parser)
    {
        int i0, $i2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r2;
        org.eclipse.jdt.internal.compiler.parser.Parser r3;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        r3 := @parameter3: org.eclipse.jdt.internal.compiler.parser.Parser;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredField: void <init>(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int,org.eclipse.jdt.internal.compiler.parser.Parser)>(r1, r2, i0, r3);

        $i2 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart> = $i2;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: boolean foundOpeningBrace> = 1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r1, $r5;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r2, $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i0 <= 0 goto label2;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i5 = $r5.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i6 <= $i5 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r6 != null goto label1;

        return r0;

     label1:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>(r3, i1);

        return $r8;

     label2:
        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: boolean foundOpeningBrace>;

        if $z0 != 0 goto label3;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: boolean foundOpeningBrace> = 1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance> = $i4;

     label3:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void <init>(org.eclipse.jdt.internal.compiler.ast.Block,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody> = $r2;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i2 != 0 goto label4;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        return $r4;

     label4:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, int)
    {
        char[][] $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i11;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1, $r7, $r8;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2, $r3, $r9, $r10, $r11, $r15;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        char[] $r13, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        i5 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        $i11 = (int) -17;

        $i1 = $i0 & $i11;

        if $i1 != 0 goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label1;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $i6 = lengthof $r6;

        if $i6 != 1 goto label3;

        $r13 = $r6[0];

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r14 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] sourceName()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r13, $r14);

        if $z0 == 0 goto label3;

     label1:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r15 != null goto label2;

        return r0;

     label2:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $i3 = $i2 - 1;

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int previousAvailableLineEnd(int)>($i3);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void updateSourceEndIfNecessary(int)>($i4);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i5);

        return $r3;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i7 = $r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i7 <= 0 goto label5;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i8 = $r8.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i9 <= $i8 goto label5;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r9 != null goto label4;

        return r0;

     label4:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i5);

        return $r11;

     label5:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r9;
        org.eclipse.jdt.internal.compiler.ast.Block $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r1, $r3, $r11;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r6, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r5, $r8, $r12, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        i2 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label2;

        $i7 = r7.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i6 = $r11.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i7 <= $i6 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r12 != null goto label1;

        return r0;

     label1:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r7, i2);

        return $r14;

     label2:
        $r2 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $r4 = (org.eclipse.jdt.internal.compiler.ast.Initializer) $r3;

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart>;

        $r2.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i1;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r2, 1);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r6 == null goto label3;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attachPendingModifiers(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r9, $i5, $i4, $i3);

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r8 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r7, i2);

        return $r8;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r9;
        org.eclipse.jdt.internal.compiler.ast.Block $r2;
        org.eclipse.jdt.internal.compiler.ast.Statement r7;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r1, $r3, $r11;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r6, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r5, $r8, $r12, $r13, $r14;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i2 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label2;

        $i7 = r7.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i6 = $r11.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i7 <= $i6 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r12 != null goto label1;

        return r0;

     label1:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r7, i2);

        return $r14;

     label2:
        $r2 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $r4 = (org.eclipse.jdt.internal.compiler.ast.Initializer) $r3;

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart>;

        $r2.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i1;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r2, 1);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r6 == null goto label3;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attachPendingModifiers(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r9, $i5, $i4, $i3);

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r8 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r7, i2);

        return $r8;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r4, $r10;
        org.eclipse.jdt.internal.compiler.ast.Block $r18;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r23;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r1, $r14, $r19;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType[] $r8, $r9, $r11, $r12, $r13, $r24;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.eclipse.jdt.internal.compiler.parser.Parser $r6, $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r5, $r22;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r3, $r15, $r16, $r17, $r21;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i3 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i0 == 0 goto label2;

        $i18 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i17 = $r14.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i18 <= $i17 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r15 != null goto label1;

        return r0;

     label1:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r2, i3);

        return $r17;

     label2:
        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i2 = $i1 & 256;

        if $i2 != 0 goto label3;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z0 = $r6.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean methodRecoveryActivated>;

        if $z0 != 0 goto label3;

        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z1 = $r7.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean statementRecoveryActivated>;

        if $z1 == 0 goto label5;

     label3:
        $r18 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r19 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $r20 = (org.eclipse.jdt.internal.compiler.ast.Initializer) $r19;

        $i19 = $r20.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart>;

        $r18.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i19;

        $r21 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r18, 1);

        $r22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r22 == null goto label4;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attachPendingModifiers(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r4, $i6, $i5, $i4);

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $r3 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r2, i3);

        return $r3;

     label5:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        if $r8 != null goto label6;

        $r13 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredType)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes> = $r13;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount> = 0;

        goto label7;

     label6:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount>;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i7 = lengthof $r9;

        if $i8 != $i7 goto label7;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount>;

        $i15 = 2 * $i14;

        $r11 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredType)[$i15];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes> = $r11;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, $i16);

     label7:
        $r23 = new org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        specialinvoke $r23.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r2, r0, i3);

        $r24 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredType[] localTypes>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount> = $i21;

        $r24[$i20] = $r23;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        if $i22 <= 0 goto label8;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r10, $i13, $i12, $i11);

     label8:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void resetPendingModifiers()>();

        $z2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: boolean foundOpeningBrace>;

        if $z2 != 0 goto label9;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: boolean foundOpeningBrace> = 1;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance> = $i10;

     label9:
        return $r23;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement addAnnotationName(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r1, $r2, $r3, $r4, $r5, $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r6;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        if $r1 != null goto label1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r5;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount> = 0;

        goto label2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i7 = 2 * $i6;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r3;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i8);

     label2:
        $r6 = new org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: void <init>(int,int,int,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(i2, i3, i4, r0, i5);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount> = $i10;

        $r7[$i9] = $r6;

        return $r6;
    }

    public void addModifier(int, int)
    {
        int i0, $i1, $i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers>;

        $i2 = $i1 | i0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers> = $i2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart>;

        if $i3 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart> = i4;

     label1:
        return;
    }

    public void resetPendingModifiers()
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = null;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingAnnotationCount> = 0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifiers> = 0;

        $i1 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int pendingModifersSourceStart> = $i1;

        return;
    }

    public java.lang.String toString(int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r4, $r9;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r10;
        java.lang.StringBuffer $r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r2, $r6, $r8, $r11;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r5, $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: java.lang.String tabString(int)>(i0);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recovered initializer:\n");

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i1 = i0 + 1;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i1, $r0);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        if $r4 == null goto label3;

        i5 = 0;

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] annotations>;

        $r10 = $r9[i5];

        $i4 = i0 + 1;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: java.lang.String toString(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        i5 = i5 + 1;

     label2:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int annotationCount>;

        if i5 < $i3 goto label1;

     label3:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r5 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r7 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        $i2 = i0 + 1;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: java.lang.String toString(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label4:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public org.eclipse.jdt.internal.compiler.ast.FieldDeclaration updatedFieldDeclaration()
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r2, $r3, $r4, $r7, $r8, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock $r1, $r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r1 == null goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block updatedBlock()>();

        if $r6 == null goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        r9 = (org.eclipse.jdt.internal.compiler.ast.Initializer) $r8;

        r9.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block> = $r6;

        $i3 = r9.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd>;

        if $i3 != 0 goto label1;

        $i4 = $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        r9.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd> = $i4;

        $i5 = $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        r9.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyEnd> = $i5;

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int localTypeCount>;

        if $i6 <= 0 goto label2;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i1 = $r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits>;

        $i2 = $i1 | 2;

        $r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits> = $i2;

     label2:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i7 = $r10.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        if $i7 != 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        $r4.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd> = $i0;

     label3:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int, int)
    {
        int $i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r1, $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance> = $i1;

        if $i1 > 0 goto label1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: void updateSourceEndIfNecessary(int,int)>(i2, i3);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        return $r2;

     label1:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnOpeningBrace(int, int)
    {
        int $i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: int bracketBalance> = $i1;

        return r0;
    }

    public void updateSourceEndIfNecessary(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r5, $r10;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.eclipse.jdt.internal.compiler.parser.Parser $r4, $r6, $r7, $r8, $r9;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r1, $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;

        i3 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i0 != 0 goto label6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        r3 = (org.eclipse.jdt.internal.compiler.ast.Initializer) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i2 = $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceSuccessorStart>;

        if $i2 < i1 goto label4;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyStart>;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i7 = $r6.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceEnd>;

        if $i6 >= $i7 goto label1;

        $r9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i13 = $r9.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceEnd>;

        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd> = $i13;

        goto label2;

     label1:
        $i8 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyStart>;

        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd> = $i8;

     label2:
        $i9 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyStart>;

        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i10 = $r7.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceStart>;

        if $i9 >= $i10 goto label3;

        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $i12 = $r8.<org.eclipse.jdt.internal.compiler.parser.Parser: int rBraceStart>;

        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyEnd> = $i12;

        goto label5;

     label3:
        $i11 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyStart>;

        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyEnd> = $i11;

        goto label5;

     label4:
        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd> = i1;

        $i4 = i3 - 1;

        r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bodyEnd> = $i4;

     label5:
        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        if $r10 == null goto label6;

        $r5 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd>;

        $r5.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd> = $i5;

     label6:
        return;
    }
}
