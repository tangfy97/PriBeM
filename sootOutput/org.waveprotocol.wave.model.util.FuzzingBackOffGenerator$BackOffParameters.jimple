public class org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters extends java.lang.Object
{
    public final int targetDelay;
    public final int minimumDelay;

    private void <init>(int, int)
    {
        int i0, i1;
        org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters r0;

        r0 := @this: org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters: int targetDelay> = i0;

        r0.<org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters: int minimumDelay> = i1;

        return;
    }

    void <init>(int, int, org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$1)
    {
        int i0, i1;
        org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters r0;
        org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$1 r1;

        r0 := @this: org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$1;

        specialinvoke r0.<org.waveprotocol.wave.model.util.FuzzingBackOffGenerator$BackOffParameters: void <init>(int,int)>(i0, i1);

        return;
    }
}
