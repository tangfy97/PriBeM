public final class org.apache.poi.hwpf.model.FSPATable extends java.lang.Object
{
    private final java.util.Map _byStart;

    public void <init>(byte[], org.apache.poi.hwpf.model.FileInformationBlock, org.apache.poi.hwpf.model.FSPADocumentPart)
    {
        org.apache.poi.hwpf.model.FileInformationBlock r2;
        byte[] r5;
        org.apache.poi.hwpf.model.PlexOfCps $r4;
        org.apache.poi.hwpf.model.GenericPropertyNode $r6;
        java.lang.Integer $r8;
        java.util.LinkedHashMap $r1;
        org.apache.poi.hwpf.model.FSPATable r0;
        java.util.Map $r7;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.poi.hwpf.model.FSPADocumentPart r3;

        r0 := @this: org.apache.poi.hwpf.model.FSPATable;

        r5 := @parameter0: byte[];

        r2 := @parameter1: org.apache.poi.hwpf.model.FileInformationBlock;

        r3 := @parameter2: org.apache.poi.hwpf.model.FSPADocumentPart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart> = $r1;

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.model.FileInformationBlock: int getFSPAPlcfOffset(org.apache.poi.hwpf.model.FSPADocumentPart)>(r3);

        $i1 = virtualinvoke r2.<org.apache.poi.hwpf.model.FileInformationBlock: int getFSPAPlcfLength(org.apache.poi.hwpf.model.FSPADocumentPart)>(r3);

        $r4 = new org.apache.poi.hwpf.model.PlexOfCps;

        $i2 = staticinvoke <org.apache.poi.hwpf.model.FSPA: int getSize()>();

        specialinvoke $r4.<org.apache.poi.hwpf.model.PlexOfCps: void <init>(byte[],int,int,int)>(r5, $i0, $i1, $i2);

        i5 = 0;

     label1:
        $i3 = virtualinvoke $r4.<org.apache.poi.hwpf.model.PlexOfCps: int length()>();

        if i5 >= $i3 goto label2;

        $r6 = virtualinvoke $r4.<org.apache.poi.hwpf.model.PlexOfCps: org.apache.poi.hwpf.model.GenericPropertyNode getProperty(int)>(i5);

        $r7 = r0.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $i4 = virtualinvoke $r6.<org.apache.poi.hwpf.model.GenericPropertyNode: int getStart()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r6);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(byte[], int, int, java.util.List)
    {
        byte[] r3;
        org.apache.poi.hwpf.model.PlexOfCps $r2;
        org.apache.poi.hwpf.model.GenericPropertyNode $r4;
        java.lang.Integer $r6;
        java.util.LinkedHashMap $r1;
        java.util.List r7;
        org.apache.poi.hwpf.model.FSPATable r0;
        java.util.Map $r5;
        int i0, i1, $i2, $i3, $i4, i5;

        r0 := @this: org.apache.poi.hwpf.model.FSPATable;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r7 := @parameter3: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart> = $r1;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = new org.apache.poi.hwpf.model.PlexOfCps;

        $i2 = <org.apache.poi.hwpf.model.FSPA: int FSPA_SIZE>;

        specialinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: void <init>(byte[],int,int,int)>(r3, i0, i1, $i2);

        i5 = 0;

     label2:
        $i3 = virtualinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: int length()>();

        if i5 >= $i3 goto label3;

        $r4 = virtualinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: org.apache.poi.hwpf.model.GenericPropertyNode getProperty(int)>(i5);

        $r5 = r0.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $i4 = virtualinvoke $r4.<org.apache.poi.hwpf.model.GenericPropertyNode: int getStart()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r4);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    public org.apache.poi.hwpf.model.FSPA getFspaFromCp(int)
    {
        byte[] $r6;
        org.apache.poi.hwpf.model.GenericPropertyNode r4;
        java.lang.Integer $r2;
        org.apache.poi.hwpf.model.FSPATable r0;
        java.util.Map $r1;
        int i0;
        org.apache.poi.hwpf.model.FSPA $r5;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.hwpf.model.FSPATable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.poi.hwpf.model.GenericPropertyNode) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = new org.apache.poi.hwpf.model.FSPA;

        $r6 = virtualinvoke r4.<org.apache.poi.hwpf.model.GenericPropertyNode: byte[] getBytes()>();

        specialinvoke $r5.<org.apache.poi.hwpf.model.FSPA: void <init>(byte[],int)>($r6, 0);

        return $r5;
    }

    public org.apache.poi.hwpf.model.FSPA[] getShapes()
    {
        byte[] $r12;
        java.lang.Object[] $r7;
        java.util.ArrayList $r0;
        org.apache.poi.hwpf.model.FSPATable r1;
        java.util.Map $r2, $r3;
        int $i0, $i1;
        org.apache.poi.hwpf.model.FSPA $r11;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        org.apache.poi.hwpf.model.GenericPropertyNode r10;
        org.apache.poi.hwpf.model.FSPA[] $r6, $r8;
        java.lang.Object $r9;

        r1 := @this: org.apache.poi.hwpf.model.FSPATable;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.poi.hwpf.model.GenericPropertyNode) $r9;

        $r11 = new org.apache.poi.hwpf.model.FSPA;

        $r12 = virtualinvoke r10.<org.apache.poi.hwpf.model.GenericPropertyNode: byte[] getBytes()>();

        specialinvoke $r11.<org.apache.poi.hwpf.model.FSPA: void <init>(byte[],int)>($r12, 0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r6 = newarray (org.apache.poi.hwpf.model.FSPA)[$i1];

        $r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (org.apache.poi.hwpf.model.FSPA[]) $r7;

        return $r8;
    }

    public java.lang.String toString()
    {
        java.lang.Integer r12;
        org.apache.poi.hwpf.model.FSPATable r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r13, $r15;
        java.util.Map $r3, $r5;
        int $i0, $i1;
        org.apache.poi.hwpf.model.FSPA $r16;
        java.lang.String $r8, $r14, $r17, $r19;
        boolean $z0;
        java.util.Map$Entry r10;
        java.util.Iterator $r7;
        java.util.Set $r6;
        java.lang.Exception $r18;
        java.lang.Object $r9, $r11;

        r2 := @this: org.apache.poi.hwpf.model.FSPATable;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[FPSA PLC size=");

        $r3 = r2.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n");

        $r5 = r2.<org.apache.poi.hwpf.model.FSPATable: java.util.Map _byStart>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (java.lang.Integer) $r11;

        $r13 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r14 = virtualinvoke r12.<java.lang.Integer: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" => \t");

     label2:
        $i1 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        $r16 = virtualinvoke r2.<org.apache.poi.hwpf.model.FSPATable: org.apache.poi.hwpf.model.FSPA getFspaFromCp(int)>($i1);

        $r17 = virtualinvoke $r16.<org.apache.poi.hwpf.model.FSPA: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label1;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/FSPA PLC]");

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
