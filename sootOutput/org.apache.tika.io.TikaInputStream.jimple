public class org.apache.tika.io.TikaInputStream extends org.apache.tika.io.TaggedInputStream
{
    private static final int BLOB_SIZE_THRESHOLD;
    private java.io.File file;
    private final org.apache.tika.io.TemporaryResources tmp;
    private long length;
    private long position;
    private long mark;
    private java.lang.Object openContainer;

    public static boolean isTikaInputStream(java.io.InputStream)
    {
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        $z0 = r0 instanceof org.apache.tika.io.TikaInputStream;

        return $z0;
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.InputStream, org.apache.tika.io.TemporaryResources)
    {
        org.apache.tika.io.TemporaryResources r0;
        java.io.BufferedInputStream $r1;
        java.lang.NullPointerException $r3;
        org.apache.tika.io.TikaInputStream $r2, $r5;
        boolean $z0, $z1, $z2;
        java.io.InputStream r4;

        r4 := @parameter0: java.io.InputStream;

        r0 := @parameter1: org.apache.tika.io.TemporaryResources;

        if r4 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("The Stream must not be null");

        throw $r3;

     label1:
        $z0 = r4 instanceof org.apache.tika.io.TikaInputStream;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.tika.io.TikaInputStream) r4;

        return $r2;

     label2:
        $z1 = r4 instanceof java.io.BufferedInputStream;

        if $z1 != 0 goto label3;

        $z2 = r4 instanceof java.io.ByteArrayInputStream;

        if $z2 != 0 goto label3;

        $r1 = new java.io.BufferedInputStream;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r4);

        r4 = $r1;

     label3:
        $r5 = new org.apache.tika.io.TikaInputStream;

        specialinvoke $r5.<org.apache.tika.io.TikaInputStream: void <init>(java.io.InputStream,org.apache.tika.io.TemporaryResources,long)>(r4, r0, -1L);

        return $r5;
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.InputStream)
    {
        org.apache.tika.io.TemporaryResources $r1;
        org.apache.tika.io.TikaInputStream $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r1.<org.apache.tika.io.TemporaryResources: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream cast(java.io.InputStream)
    {
        org.apache.tika.io.TikaInputStream $r1;
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        $z0 = r0 instanceof org.apache.tika.io.TikaInputStream;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.tika.io.TikaInputStream) r0;

        return $r1;

     label1:
        return null;
    }

    public static org.apache.tika.io.TikaInputStream get(byte[])
    {
        byte[] r0;
        org.apache.tika.metadata.Metadata $r1;
        org.apache.tika.io.TikaInputStream $r2;

        r0 := @parameter0: byte[];

        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[],org.apache.tika.metadata.Metadata)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream get(byte[], org.apache.tika.metadata.Metadata)
    {
        byte[] r1;
        org.apache.tika.io.TemporaryResources $r5;
        long $l2;
        org.apache.tika.metadata.Metadata r0;
        java.io.ByteArrayInputStream $r4;
        int $i0, $i1;
        org.apache.tika.io.TikaInputStream $r3;
        java.lang.String $r2;

        r1 := @parameter0: byte[];

        r0 := @parameter1: org.apache.tika.metadata.Metadata;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Length", $r2);

        $r3 = new org.apache.tika.io.TikaInputStream;

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $r5 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r5.<org.apache.tika.io.TemporaryResources: void <init>()>();

        $i1 = lengthof r1;

        $l2 = (long) $i1;

        specialinvoke $r3.<org.apache.tika.io.TikaInputStream: void <init>(java.io.InputStream,org.apache.tika.io.TemporaryResources,long)>($r4, $r5, $l2);

        return $r3;
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.File) throws java.io.FileNotFoundException
    {
        org.apache.tika.metadata.Metadata $r1;
        org.apache.tika.io.TikaInputStream $r2;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.File,org.apache.tika.metadata.Metadata)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.File, org.apache.tika.metadata.Metadata) throws java.io.FileNotFoundException
    {
        org.apache.tika.metadata.Metadata r0;
        long $l0;
        org.apache.tika.io.TikaInputStream $r4;
        java.lang.String $r2, $r3;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r0 := @parameter1: org.apache.tika.metadata.Metadata;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r2);

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Length", $r3);

        $r4 = new org.apache.tika.io.TikaInputStream;

        specialinvoke $r4.<org.apache.tika.io.TikaInputStream: void <init>(java.io.File)>(r1);

        return $r4;
    }

    public static org.apache.tika.io.TikaInputStream get(java.sql.Blob) throws java.sql.SQLException
    {
        org.apache.tika.metadata.Metadata $r1;
        org.apache.tika.io.TikaInputStream $r2;
        java.sql.Blob r0;

        r0 := @parameter0: java.sql.Blob;

        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.sql.Blob,org.apache.tika.metadata.Metadata)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream get(java.sql.Blob, org.apache.tika.metadata.Metadata) throws java.sql.SQLException
    {
        byte[] $r7;
        java.io.BufferedInputStream $r10;
        long $l0, l4;
        org.apache.tika.metadata.Metadata r1;
        java.sql.SQLException $r9;
        byte $b1, $b2;
        int $i3, $i5, $i6;
        org.apache.tika.io.TikaInputStream $r8, $r12;
        java.lang.String $r2;
        org.apache.tika.io.TemporaryResources $r11;
        java.sql.Blob r0;
        java.io.InputStream $r5;

        r0 := @parameter0: java.sql.Blob;

        r1 := @parameter1: org.apache.tika.metadata.Metadata;

        l4 = -1L;

     label1:
        $l0 = interfaceinvoke r0.<java.sql.Blob: long length()>();

        l4 = $l0;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Length", $r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $b1 = 0L cmp l4;

        $i5 = (int) $b1;

        if $i5 > 0 goto label5;

        $b2 = l4 cmp 1048576L;

        $i6 = (int) $b2;

        if $i6 > 0 goto label5;

        $i3 = (int) l4;

        $r7 = interfaceinvoke r0.<java.sql.Blob: byte[] getBytes(long,int)>(1L, $i3);

        $r8 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[],org.apache.tika.metadata.Metadata)>($r7, r1);

        return $r8;

     label5:
        $r12 = new org.apache.tika.io.TikaInputStream;

        $r10 = new java.io.BufferedInputStream;

        $r5 = interfaceinvoke r0.<java.sql.Blob: java.io.InputStream getBinaryStream()>();

        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        $r11 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r11.<org.apache.tika.io.TemporaryResources: void <init>()>();

        specialinvoke $r12.<org.apache.tika.io.TikaInputStream: void <init>(java.io.InputStream,org.apache.tika.io.TemporaryResources,long)>($r10, $r11, l4);

        return $r12;

        catch java.sql.SQLException from label1 to label2 with label3;
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URI) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r1;
        org.apache.tika.io.TikaInputStream $r2;
        java.net.URI r0;

        r0 := @parameter0: java.net.URI;

        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URI,org.apache.tika.metadata.Metadata)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URI, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        java.net.URL $r3;
        java.io.File $r6;
        org.apache.tika.metadata.Metadata r4;
        org.apache.tika.io.TikaInputStream $r5, $r7;
        java.net.URI r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.net.URI;

        r4 := @parameter1: org.apache.tika.metadata.Metadata;

        $r1 = "file";

        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.net.URI)>(r0);

        $z1 = virtualinvoke $r6.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label1;

        $r7 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.File,org.apache.tika.metadata.Metadata)>($r6, r4);

        return $r7;

     label1:
        $r3 = virtualinvoke r0.<java.net.URI: java.net.URL toURL()>();

        $r5 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata)>($r3, r4);

        return $r5;
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URL) throws java.io.IOException
    {
        org.apache.tika.metadata.Metadata $r1;
        org.apache.tika.io.TikaInputStream $r2;
        java.net.URL r0;

        r0 := @parameter0: java.net.URL;

        $r1 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r1.<org.apache.tika.metadata.Metadata: void <init>()>();

        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata)>(r0, $r1);

        return $r2;
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URL, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        java.io.BufferedInputStream $r6;
        java.net.URL r0;
        java.net.URISyntaxException $r15;
        long $l1;
        org.apache.tika.metadata.Metadata r9;
        java.net.URLConnection $r16;
        int $i0, $i2, $i3, $i4, $i5;
        org.apache.tika.io.TikaInputStream $r5, $r14;
        java.lang.String $r1, $r2, $r3, $r4, $r10, $r11, $r17;
        java.net.URI $r13;
        boolean $z0, $z1;
        org.apache.tika.io.TemporaryResources $r8;
        java.io.File $r12;
        java.io.InputStream $r7;

        r0 := @parameter0: java.net.URL;

        r9 := @parameter1: org.apache.tika.metadata.Metadata;

        $r1 = "file";

        $r2 = virtualinvoke r0.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label5;

     label1:
        $r12 = new java.io.File;

        $r13 = virtualinvoke r0.<java.net.URL: java.net.URI toURI()>();

        specialinvoke $r12.<java.io.File: void <init>(java.net.URI)>($r13);

        $z1 = virtualinvoke $r12.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label3;

        $r14 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.File,org.apache.tika.metadata.Metadata)>($r12, r9);

     label2:
        return $r14;

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

     label5:
        $r16 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();

        $r17 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $i3 = virtualinvoke $r17.<java.lang.String: int lastIndexOf(int)>(47);

        $i4 = $i3 + 1;

        $i5 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i4 >= $i5 goto label6;

        $i2 = $i3 + 1;

        $r11 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke r9.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r11);

     label6:
        $r3 = virtualinvoke $r16.<java.net.URLConnection: java.lang.String getContentType()>();

        if $r3 == null goto label7;

        virtualinvoke r9.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r3);

     label7:
        $r4 = virtualinvoke $r16.<java.net.URLConnection: java.lang.String getContentEncoding()>();

        if $r4 == null goto label8;

        virtualinvoke r9.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Encoding", $r4);

     label8:
        $i0 = virtualinvoke $r16.<java.net.URLConnection: int getContentLength()>();

        if $i0 < 0 goto label9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r9.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Length", $r10);

     label9:
        $r5 = new org.apache.tika.io.TikaInputStream;

        $r6 = new java.io.BufferedInputStream;

        $r7 = virtualinvoke $r16.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        $r8 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r8.<org.apache.tika.io.TemporaryResources: void <init>()>();

        $l1 = (long) $i0;

        specialinvoke $r5.<org.apache.tika.io.TikaInputStream: void <init>(java.io.InputStream,org.apache.tika.io.TemporaryResources,long)>($r6, $r8, $l1);

        return $r5;

        catch java.net.URISyntaxException from label1 to label2 with label4;
    }

    private void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        org.apache.tika.io.TemporaryResources $r4;
        java.io.BufferedInputStream $r1;
        org.apache.tika.io.TikaInputStream r0;
        long $l0;
        java.io.FileInputStream $r2;
        java.io.File r3;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        r3 := @parameter0: java.io.File;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        specialinvoke r0.<org.apache.tika.io.TaggedInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.apache.tika.io.TikaInputStream: long position> = 0L;

        r0.<org.apache.tika.io.TikaInputStream: long mark> = -1L;

        r0.<org.apache.tika.io.TikaInputStream: java.io.File file> = r3;

        $r4 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r4.<org.apache.tika.io.TemporaryResources: void <init>()>();

        r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp> = $r4;

        $l0 = virtualinvoke r3.<java.io.File: long length()>();

        r0.<org.apache.tika.io.TikaInputStream: long length> = $l0;

        return;
    }

    private void <init>(java.io.InputStream, org.apache.tika.io.TemporaryResources, long)
    {
        org.apache.tika.io.TemporaryResources r2;
        org.apache.tika.io.TikaInputStream r0;
        long l0;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.tika.io.TemporaryResources;

        l0 := @parameter2: long;

        specialinvoke r0.<org.apache.tika.io.TaggedInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.tika.io.TikaInputStream: long position> = 0L;

        r0.<org.apache.tika.io.TikaInputStream: long mark> = -1L;

        r0.<org.apache.tika.io.TikaInputStream: java.io.File file> = null;

        r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp> = r2;

        r0.<org.apache.tika.io.TikaInputStream: long length> = l0;

        return;
    }

    public int peek(byte[]) throws java.io.IOException
    {
        byte[] r1;
        int $i0, $i1, $i2, $i3, i4, i5, $i7, $i9;
        org.apache.tika.io.TikaInputStream r0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        r1 := @parameter0: byte[];

        i4 = 0;

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.tika.io.TikaInputStream: void mark(int)>($i0);

        i5 = virtualinvoke r0.<org.apache.tika.io.TikaInputStream: int read(byte[])>(r1);

     label1:
        $i7 = (int) -1;

        if i5 == $i7 goto label3;

        i4 = i4 + i5;

        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        $i2 = lengthof r1;

        $i3 = $i2 - i4;

        i5 = virtualinvoke r0.<org.apache.tika.io.TikaInputStream: int read(byte[],int,int)>(r1, i4, $i3);

        goto label1;

     label2:
        $i9 = (int) -1;

        i5 = $i9;

        goto label1;

     label3:
        virtualinvoke r0.<org.apache.tika.io.TikaInputStream: void reset()>();

        return i4;
    }

    public java.lang.Object getOpenContainer()
    {
        org.apache.tika.io.TikaInputStream r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $r1 = r0.<org.apache.tika.io.TikaInputStream: java.lang.Object openContainer>;

        return $r1;
    }

    public void setOpenContainer(java.lang.Object)
    {
        org.apache.tika.io.TemporaryResources $r3;
        java.io.Closeable $r2;
        org.apache.tika.io.TikaInputStream r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.tika.io.TikaInputStream: java.lang.Object openContainer> = r1;

        $z0 = r1 instanceof java.io.Closeable;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        $r2 = (java.io.Closeable) r1;

        virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: void addResource(java.io.Closeable)>($r2);

     label1:
        return;
    }

    public boolean hasFile()
    {
        org.apache.tika.io.TikaInputStream r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $r1 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.io.File getFile() throws java.io.IOException
    {
        java.lang.Throwable $r15;
        long $l0, $l2;
        org.apache.tika.io.TikaInputStream$1 $r19;
        byte $b1;
        int $i3;
        org.apache.tika.io.TikaInputStream r0;
        org.apache.tika.io.TemporaryResources $r3, $r10;
        java.io.FileOutputStream $r17;
        java.io.IOException $r16;
        java.io.FileInputStream $r18;
        java.io.File $r1, $r2, $r4, $r6, $r9, $r13;
        java.io.InputStream $r7, r11;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $r1 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        if $r1 != null goto label7;

        $l0 = r0.<org.apache.tika.io.TikaInputStream: long position>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Stream is already being read");

        throw $r16;

     label1:
        $r3 = r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        $r4 = virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: java.io.File createTemporaryFile()>();

        r0.<org.apache.tika.io.TikaInputStream: java.io.File file> = $r4;

        $r17 = new java.io.FileOutputStream;

        $r6 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

     label2:
        $r7 = r0.<org.apache.tika.io.TikaInputStream: java.io.InputStream in>;

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r7, $r17);

     label3:
        virtualinvoke $r17.<java.io.OutputStream: void close()>();

        goto label6;

     label4:
        $r15 := @caughtexception;

     label5:
        virtualinvoke $r17.<java.io.OutputStream: void close()>();

        throw $r15;

     label6:
        $r18 = new java.io.FileInputStream;

        $r9 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>($r9);

        $r10 = r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        virtualinvoke $r10.<org.apache.tika.io.TemporaryResources: void addResource(java.io.Closeable)>($r18);

        r11 = r0.<org.apache.tika.io.TikaInputStream: java.io.InputStream in>;

        $r19 = new org.apache.tika.io.TikaInputStream$1;

        specialinvoke $r19.<org.apache.tika.io.TikaInputStream$1: void <init>(org.apache.tika.io.TikaInputStream,java.io.InputStream,java.io.InputStream)>(r0, $r18, r11);

        r0.<org.apache.tika.io.TikaInputStream: java.io.InputStream in> = $r19;

        $r13 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        $l2 = virtualinvoke $r13.<java.io.File: long length()>();

        r0.<org.apache.tika.io.TikaInputStream: long length> = $l2;

     label7:
        $r2 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        return $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.nio.channels.FileChannel getFileChannel() throws java.io.IOException
    {
        org.apache.tika.io.TemporaryResources $r3, $r5;
        org.apache.tika.io.TikaInputStream r1;
        java.io.FileInputStream $r0;
        java.nio.channels.FileChannel $r4;
        java.io.File $r2;

        r1 := @this: org.apache.tika.io.TikaInputStream;

        $r0 = new java.io.FileInputStream;

        $r2 = virtualinvoke r1.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r3 = r1.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: void addResource(java.io.Closeable)>($r0);

        $r4 = virtualinvoke $r0.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r5 = r1.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        virtualinvoke $r5.<org.apache.tika.io.TemporaryResources: void addResource(java.io.Closeable)>($r4);

        return $r4;
    }

    public boolean hasLength()
    {
        byte $b1;
        org.apache.tika.io.TikaInputStream r0;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $l0 = r0.<org.apache.tika.io.TikaInputStream: long length>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getLength() throws java.io.IOException
    {
        byte $b1;
        org.apache.tika.io.TikaInputStream r0;
        long $l0, $l2, $l3;
        java.io.File $r1;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $l0 = r0.<org.apache.tika.io.TikaInputStream: long length>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        $l3 = virtualinvoke $r1.<java.io.File: long length()>();

        r0.<org.apache.tika.io.TikaInputStream: long length> = $l3;

     label1:
        $l2 = r0.<org.apache.tika.io.TikaInputStream: long length>;

        return $l2;
    }

    public long getPosition()
    {
        org.apache.tika.io.TikaInputStream r0;
        long $l0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $l0 = r0.<org.apache.tika.io.TikaInputStream: long position>;

        return $l0;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.tika.io.TikaInputStream r0;
        long l0, $l1, $l2, $l3;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        l0 := @parameter0: long;

        $l1 = specialinvoke r0.<org.apache.tika.io.TaggedInputStream: long skip(long)>(l0);

        $l2 = r0.<org.apache.tika.io.TikaInputStream: long position>;

        $l3 = $l2 + $l1;

        r0.<org.apache.tika.io.TikaInputStream: long position> = $l3;

        return $l1;
    }

    public void mark(int)
    {
        int i0;
        org.apache.tika.io.TikaInputStream r0;
        long $l1;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.tika.io.TaggedInputStream: void mark(int)>(i0);

        $l1 = r0.<org.apache.tika.io.TikaInputStream: long position>;

        r0.<org.apache.tika.io.TikaInputStream: long mark> = $l1;

        return;
    }

    public boolean markSupported()
    {
        org.apache.tika.io.TikaInputStream r0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        return 1;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.tika.io.TikaInputStream r0;
        long $l0;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        specialinvoke r0.<org.apache.tika.io.TaggedInputStream: void reset()>();

        $l0 = r0.<org.apache.tika.io.TikaInputStream: long mark>;

        r0.<org.apache.tika.io.TikaInputStream: long position> = $l0;

        r0.<org.apache.tika.io.TikaInputStream: long mark> = -1L;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tika.io.TemporaryResources $r2, $r3;
        org.apache.tika.io.TikaInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        r0.<org.apache.tika.io.TikaInputStream: java.io.File file> = null;

        r0.<org.apache.tika.io.TikaInputStream: long mark> = -1L;

        $r2 = r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        $r1 = r0.<org.apache.tika.io.TikaInputStream: java.io.InputStream in>;

        virtualinvoke $r2.<org.apache.tika.io.TemporaryResources: void addResource(java.io.Closeable)>($r1);

        $r3 = r0.<org.apache.tika.io.TikaInputStream: org.apache.tika.io.TemporaryResources tmp>;

        virtualinvoke $r3.<org.apache.tika.io.TemporaryResources: void close()>();

        return;
    }

    protected void afterRead(int)
    {
        int i0, $i5;
        org.apache.tika.io.TikaInputStream r0;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        i0 := @parameter0: int;

        $i5 = (int) -1;

        if i0 == $i5 goto label1;

        $l2 = r0.<org.apache.tika.io.TikaInputStream: long position>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.apache.tika.io.TikaInputStream: long position> = $l3;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.tika.io.TikaInputStream r0;
        java.lang.String $r4, $r16, r18;
        boolean $z0;
        java.io.File $r15;
        java.lang.StringBuilder $r1, $r2, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r17;
        java.lang.Object $r6, $r10;
        java.io.InputStream $r3;

        r0 := @this: org.apache.tika.io.TikaInputStream;

        $z0 = virtualinvoke r0.<org.apache.tika.io.TikaInputStream: boolean hasFile()>();

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TikaInputStream of ");

        $r15 = r0.<org.apache.tika.io.TikaInputStream: java.io.File file>;

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String toString()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TikaInputStream of ");

        $r3 = r0.<org.apache.tika.io.TikaInputStream: java.io.InputStream in>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r18 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r6 = r0.<org.apache.tika.io.TikaInputStream: java.lang.Object openContainer>;

        if $r6 == null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r10 = r0.<org.apache.tika.io.TikaInputStream: java.lang.Object openContainer>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r18;
    }

    public static void <clinit>()
    {
        <org.apache.tika.io.TikaInputStream: int BLOB_SIZE_THRESHOLD> = 1048576;

        return;
    }
}
