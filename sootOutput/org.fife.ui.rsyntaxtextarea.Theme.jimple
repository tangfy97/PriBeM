public class org.fife.ui.rsyntaxtextarea.Theme extends java.lang.Object
{
    private java.awt.Font baseFont;
    private java.awt.Color bgColor;
    private java.awt.Color caretColor;
    private java.awt.Color selectionBG;
    private boolean selectionRoundedEdges;
    private java.awt.Color currentLineHighlight;
    private boolean fadeCurrentLineHighlight;
    private java.awt.Color marginLineColor;
    private java.awt.Color markAllHighlightColor;
    private java.awt.Color markOccurrencesColor;
    private boolean markOccurrencesBorder;
    private java.awt.Color matchedBracketFG;
    private java.awt.Color matchedBracketBG;
    private boolean matchedBracketHighlightBoth;
    private boolean matchedBracketAnimate;
    private java.awt.Color hyperlinkFG;
    private java.awt.Color[] secondaryLanguages;
    private org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme;
    private java.awt.Color gutterBorderColor;
    private java.awt.Color lineNumberColor;
    private java.lang.String lineNumberFont;
    private int lineNumberFontSize;
    private java.awt.Color foldIndicatorFG;
    private java.awt.Color foldBG;
    static java.lang.Class class$org$fife$ui$rsyntaxtextarea$TokenTypes;
    static java.lang.Class class$org$fife$ui$rsyntaxtextarea$Token;

    private void <init>()
    {
        java.awt.Color[] $r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Theme;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.awt.Color)[3];

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages> = $r1;

        return;
    }

    public void <init>(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        java.awt.Color $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r22, $r23, $r25;
        org.fife.ui.rtextarea.Gutter $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r2, $r19, $r21;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r14;
        int $i0, $i1, $i2, i3;
        java.lang.String $r20;
        java.awt.Color[] $r13, $r24;

        r0 := @this: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getFont()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont> = $r2;

        $r3 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getBackground()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor> = $r3;

        $r4 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getCaretColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color caretColor> = $r4;

        $r5 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getSelectionColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color selectionBG> = $r5;

        $z0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getRoundedSelectionEdges()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean selectionRoundedEdges> = $z0;

        $r6 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getCurrentLineHighlightColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color currentLineHighlight> = $r6;

        $z1 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getFadeCurrentLineHighlight()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean fadeCurrentLineHighlight> = $z1;

        $r7 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMarginLineColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color marginLineColor> = $r7;

        $r8 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMarkAllHighlightColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markAllHighlightColor> = $r8;

        $r9 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMarkOccurrencesColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markOccurrencesColor> = $r9;

        $z2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getPaintMarkOccurrencesBorder()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean markOccurrencesBorder> = $z2;

        $r10 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBGColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketBG> = $r10;

        $r11 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getMatchedBracketBorderColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketFG> = $r11;

        $z3 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getPaintMatchedBracketPair()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketHighlightBoth> = $z3;

        $z4 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getAnimateBracketMatching()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketAnimate> = $z4;

        $r12 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getHyperlinkForeground()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color hyperlinkFG> = $r12;

        $i0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getSecondaryLanguageCount()>();

        $r13 = newarray (java.awt.Color)[$i0];

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages> = $r13;

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $r24 = r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        $i2 = i3 + 1;

        $r25 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getSecondaryLanguageBackground(int)>($i2);

        $r24[i3] = $r25;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r14 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.SyntaxScheme getSyntaxScheme()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme> = $r14;

        $r15 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rtextarea.Gutter getGutter(org.fife.ui.rtextarea.RTextArea)>(r1);

        if $r15 == null goto label3;

        $r16 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Color getBackground()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor> = $r16;

        $r17 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Color getBorderColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color gutterBorderColor> = $r17;

        $r18 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Color getLineNumberColor()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color lineNumberColor> = $r18;

        $r19 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Font getLineNumberFont()>();

        $r20 = virtualinvoke $r19.<java.awt.Font: java.lang.String getFamily()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont> = $r20;

        $r21 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Font getLineNumberFont()>();

        $i1 = virtualinvoke $r21.<java.awt.Font: int getSize()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize> = $i1;

        $r22 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Color getFoldIndicatorForeground()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldIndicatorFG> = $r22;

        $r23 = virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: java.awt.Color getFoldBackground()>();

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldBG> = $r23;

     label3:
        return;
    }

    public void apply(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        java.awt.Color $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r24, $r25, $r27;
        org.fife.ui.rtextarea.Gutter $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r2, $r20, $r22, $r23;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        org.fife.ui.rsyntaxtextarea.Theme r1;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r14;
        int i0, $i1, $i2, i3, $i4;
        java.lang.String $r19, r21, $r28;
        java.awt.Color[] $r13, $r26;

        r1 := @this: org.fife.ui.rsyntaxtextarea.Theme;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setFont(java.awt.Font)>($r2);

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setBackground(java.awt.Color)>($r3);

        $r4 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color caretColor>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setCaretColor(java.awt.Color)>($r4);

        $r5 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color selectionBG>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setSelectionColor(java.awt.Color)>($r5);

        $z0 = r1.<org.fife.ui.rsyntaxtextarea.Theme: boolean selectionRoundedEdges>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setRoundedSelectionEdges(boolean)>($z0);

        $r6 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color currentLineHighlight>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setCurrentLineHighlightColor(java.awt.Color)>($r6);

        $z1 = r1.<org.fife.ui.rsyntaxtextarea.Theme: boolean fadeCurrentLineHighlight>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setFadeCurrentLineHighlight(boolean)>($z1);

        $r7 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color marginLineColor>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setMarginLineColor(java.awt.Color)>($r7);

        $r8 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markAllHighlightColor>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setMarkAllHighlightColor(java.awt.Color)>($r8);

        $r9 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markOccurrencesColor>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setMarkOccurrencesColor(java.awt.Color)>($r9);

        $z2 = r1.<org.fife.ui.rsyntaxtextarea.Theme: boolean markOccurrencesBorder>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setPaintMarkOccurrencesBorder(boolean)>($z2);

        $r10 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketBG>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setMatchedBracketBGColor(java.awt.Color)>($r10);

        $r11 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketFG>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setMatchedBracketBorderColor(java.awt.Color)>($r11);

        $z3 = r1.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketHighlightBoth>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setPaintMatchedBracketPair(boolean)>($z3);

        $z4 = r1.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketAnimate>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setAnimateBracketMatching(boolean)>($z4);

        $r12 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color hyperlinkFG>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setHyperlinkForeground(java.awt.Color)>($r12);

        $r13 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        i0 = lengthof $r13;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = i3 + 1;

        $r26 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        $r27 = $r26[i3];

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setSecondaryLanguageBackground(int,java.awt.Color)>($i2, $r27);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r14 = r1.<org.fife.ui.rsyntaxtextarea.Theme: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setSyntaxScheme(org.fife.ui.rsyntaxtextarea.SyntaxScheme)>($r14);

        $r15 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rtextarea.Gutter getGutter(org.fife.ui.rtextarea.RTextArea)>(r0);

        if $r15 == null goto label7;

        $r16 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setBackground(java.awt.Color)>($r16);

        $r17 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color gutterBorderColor>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setBorderColor(java.awt.Color)>($r17);

        $r18 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color lineNumberColor>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setLineNumberColor(java.awt.Color)>($r18);

        $r19 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont>;

        if $r19 == null goto label3;

        $r28 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont>;

        goto label4;

     label3:
        $r20 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $r28 = virtualinvoke $r20.<java.awt.Font: java.lang.String getFamily()>();

     label4:
        r21 = $r28;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize>;

        if $i1 <= 0 goto label5;

        $i4 = r1.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize>;

        goto label6;

     label5:
        $r22 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $i4 = virtualinvoke $r22.<java.awt.Font: int getSize()>();

     label6:
        $r23 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font getFont(java.lang.String,int,int)>(r21, 0, $i4);

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setLineNumberFont(java.awt.Font)>($r23);

        $r24 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldIndicatorFG>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setFoldIndicatorForeground(java.awt.Color)>($r24);

        $r25 = r1.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldBG>;

        virtualinvoke $r15.<org.fife.ui.rtextarea.Gutter: void setFoldBackground(java.awt.Color)>($r25);

     label7:
        return;
    }

    private static final java.lang.String colorToString(java.awt.Color)
    {
        java.awt.Color r0;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0, i1, $i2;
        java.lang.String r4;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRGB()>();

        i1 = $i0 & 16777215;

        r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

     label1:
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i2 >= 6 goto label2;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label2:
        return r4;
    }

    private static java.awt.Font getFont(java.lang.String, int, int)
    {
        javax.swing.text.StyleContext $r0;
        java.awt.Font $r2;
        int i0, i1;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        $r2 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>(r1, i0, i1);

        return $r2;
    }

    public static org.fife.ui.rsyntaxtextarea.Theme load(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        java.io.BufferedInputStream $r1;
        org.fife.ui.rsyntaxtextarea.Theme $r0;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new org.fife.ui.rsyntaxtextarea.Theme;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.Theme: void <init>()>();

        $r1 = new java.io.BufferedInputStream;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

     label1:
        staticinvoke <org.fife.ui.rsyntaxtextarea.Theme$XmlHandler: void load(org.fife.ui.rsyntaxtextarea.Theme,java.io.InputStream)>($r0, $r1);

     label2:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

        throw $r3;

     label5:
        return $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        java.awt.Color $r16, $r19, $r22, $r26, $r30, $r33, $r36, $r40, $r42, $r47, $r50, $r53, $r57, $r59, r74, $r84, r102;
        javax.xml.transform.stream.StreamResult $r65;
        org.w3c.dom.Document $r5;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        javax.xml.transform.dom.DOMSource $r64;
        java.lang.StringBuffer $r95, $r96, $r98;
        java.io.IOException $r94;
        java.lang.reflect.Field r105;
        javax.xml.transform.TransformerFactory $r68;
        java.awt.Color[] $r87, $r101;
        org.fife.ui.rsyntaxtextarea.Theme r8;
        org.fife.io.UnicodeWriter $r67;
        org.fife.ui.rsyntaxtextarea.Style $r71;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11;
        org.w3c.dom.Element $r6, $r7, $r15, $r18, $r21, $r25, $r29, $r32, $r35, $r39, $r46, $r49, $r52, $r56, $r61, $r72, $r88;
        java.lang.Class $r62, $r104;
        org.w3c.dom.DOMImplementation $r4;
        java.io.PrintWriter $r66;
        java.lang.Exception $r93;
        java.lang.Throwable $r92;
        java.io.BufferedOutputStream $r0;
        java.lang.String $r10, $r12, $r14, $r17, $r20, $r23, $r24, $r27, $r28, $r31, $r34, $r37, $r38, $r41, $r43, $r44, $r45, $r48, $r51, $r54, $r55, $r58, $r60, $r73, $r75, $r77, $r79, $r80, $r81, $r83, $r85, $r86, $r89, $r91, $r97, $r99, $r103;
        java.lang.RuntimeException $r100;
        javax.xml.parsers.DocumentBuilder $r3;
        javax.xml.transform.Transformer $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.Font $r9, $r11, $r13, $r76, $r78, $r82, $r90;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r70;
        java.io.OutputStream r1;
        java.lang.reflect.Field[] $r63;

        r8 := @this: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter0: java.io.OutputStream;

        $r0 = new java.io.BufferedOutputStream;

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

     label01:
        $r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.DOMImplementation getDOMImplementation()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.DOMImplementation: org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)>(null, "RSyntaxTheme", null);

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("version", "1.0");

        $r7 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("baseFont");

        $r9 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $r10 = virtualinvoke $r9.<java.awt.Font: java.lang.String getFamily()>();

        $r11 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getDefaultFont()>();

        $r12 = virtualinvoke $r11.<java.awt.Font: java.lang.String getFamily()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label02;

        $r90 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $r91 = virtualinvoke $r90.<java.awt.Font: java.lang.String getFamily()>();

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("family", $r91);

     label02:
        $r13 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $i0 = virtualinvoke $r13.<java.awt.Font: int getSize()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("size", $r14);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        $r15 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("background");

        $r16 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor>;

        $r17 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r16);

        interfaceinvoke $r15.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r17);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

        $r18 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("caret");

        $r19 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color caretColor>;

        $r20 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r19);

        interfaceinvoke $r18.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r20);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        $r21 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("selection");

        $r22 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color selectionBG>;

        $r23 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r22);

        interfaceinvoke $r21.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bg", $r23);

        $z1 = r8.<org.fife.ui.rsyntaxtextarea.Theme: boolean selectionRoundedEdges>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke $r21.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("roundedEdges", $r24);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r21);

        $r25 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("currentLineHighlight");

        $r26 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color currentLineHighlight>;

        $r27 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r26);

        interfaceinvoke $r25.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r27);

        $z2 = r8.<org.fife.ui.rsyntaxtextarea.Theme: boolean fadeCurrentLineHighlight>;

        $r28 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z2);

        interfaceinvoke $r25.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fade", $r28);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r25);

        $r29 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("marginLine");

        $r30 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color marginLineColor>;

        $r31 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r30);

        interfaceinvoke $r29.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r31);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r29);

        $r32 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("markAllHighlight");

        $r33 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markAllHighlightColor>;

        $r34 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r33);

        interfaceinvoke $r32.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r34);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r32);

        $r35 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("markOccurrencesHighlight");

        $r36 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markOccurrencesColor>;

        $r37 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r36);

        interfaceinvoke $r35.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r37);

        $z3 = r8.<org.fife.ui.rsyntaxtextarea.Theme: boolean markOccurrencesBorder>;

        $r38 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z3);

        interfaceinvoke $r35.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("border", $r38);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r35);

        $r39 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("matchedBracket");

        $r40 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketFG>;

        $r41 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r40);

        interfaceinvoke $r39.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r41);

        $r42 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketBG>;

        $r43 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r42);

        interfaceinvoke $r39.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bg", $r43);

        $z4 = r8.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketHighlightBoth>;

        $r44 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        interfaceinvoke $r39.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("highlightBoth", $r44);

        $z5 = r8.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketAnimate>;

        $r45 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z5);

        interfaceinvoke $r39.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("animate", $r45);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r39);

        $r46 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("hyperlinks");

        $r47 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color hyperlinkFG>;

        $r48 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r47);

        interfaceinvoke $r46.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r48);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r46);

        interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("secondaryLanguages");

        i8 = 0;

     label03:
        $r101 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        $i9 = lengthof $r101;

        if i8 >= $i9 goto label06;

        $r87 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        r102 = $r87[i8];

        $r88 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("language");

        $i7 = i8 + 1;

        $r89 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke $r88.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("index", $r89);

        if r102 != null goto label04;

        $r103 = "";

        goto label05;

     label04:
        $r103 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>(r102);

     label05:
        interfaceinvoke $r88.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bg", $r103);

        i8 = i8 + 1;

        goto label03;

     label06:
        $r49 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("gutterBorder");

        $r50 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color gutterBorderColor>;

        $r51 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r50);

        interfaceinvoke $r49.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r51);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r49);

        $r52 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("lineNumbers");

        $r53 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color lineNumberColor>;

        $r54 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r53);

        interfaceinvoke $r52.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r54);

        $r55 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont>;

        if $r55 == null goto label07;

        $r86 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont>;

        interfaceinvoke $r52.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("lineNumberFont", $r86);

     label07:
        $i1 = r8.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize>;

        if $i1 <= 0 goto label08;

        $i6 = r8.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize>;

        $r85 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke $r52.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("lineNumberFontSize", $r85);

     label08:
        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r52);

        $r56 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("foldIndicator");

        $r57 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldIndicatorFG>;

        $r58 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r57);

        interfaceinvoke $r56.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r58);

        $r59 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldBG>;

        $r60 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r59);

        interfaceinvoke $r56.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("iconBg", $r60);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r56);

        $r61 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("tokenStyles");

        $r62 = <org.fife.ui.rsyntaxtextarea.Theme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$TokenTypes>;

        if $r62 != null goto label09;

        $r104 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.Class class$(java.lang.String)>("org.fife.ui.rsyntaxtextarea.TokenTypes");

        <org.fife.ui.rsyntaxtextarea.Theme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$TokenTypes> = $r104;

        goto label10;

     label09:
        $r104 = <org.fife.ui.rsyntaxtextarea.Theme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$TokenTypes>;

     label10:
        $r63 = virtualinvoke $r104.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i10 = 0;

     label11:
        $i11 = lengthof $r63;

        if i10 >= $i11 goto label20;

        r105 = $r63[i10];

        $i2 = virtualinvoke r105.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        if $i2 == 35 goto label19;

        $r70 = r8.<org.fife.ui.rsyntaxtextarea.Theme: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $r71 = virtualinvoke $r70.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style getStyle(int)>($i2);

        if $r71 == null goto label19;

        $r72 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("style");

        $r73 = virtualinvoke r105.<java.lang.reflect.Field: java.lang.String getName()>();

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("token", $r73);

        r74 = $r71.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color foreground>;

        if r74 == null goto label12;

        $r83 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>(r74);

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fg", $r83);

     label12:
        $r84 = $r71.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color background>;

        if $r84 == null goto label13;

        $r81 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.lang.String colorToString(java.awt.Color)>($r84);

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bg", $r81);

     label13:
        $r82 = $r71.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font>;

        if $r82 == null goto label17;

        $r75 = virtualinvoke $r82.<java.awt.Font: java.lang.String getFamily()>();

        $r76 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $r77 = virtualinvoke $r76.<java.awt.Font: java.lang.String getFamily()>();

        $z6 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z6 != 0 goto label14;

        $r80 = virtualinvoke $r82.<java.awt.Font: java.lang.String getFamily()>();

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fontFamily", $r80);

     label14:
        $i3 = virtualinvoke $r82.<java.awt.Font: int getSize()>();

        $r78 = r8.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        $i4 = virtualinvoke $r78.<java.awt.Font: int getSize()>();

        if $i3 == $i4 goto label15;

        $i5 = virtualinvoke $r82.<java.awt.Font: int getSize()>();

        $r79 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("fontSize", $r79);

     label15:
        $z7 = virtualinvoke $r82.<java.awt.Font: boolean isBold()>();

        if $z7 == 0 goto label16;

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("bold", "true");

     label16:
        $z8 = virtualinvoke $r82.<java.awt.Font: boolean isItalic()>();

        if $z8 == 0 goto label17;

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("italic", "true");

     label17:
        $z9 = $r71.<org.fife.ui.rsyntaxtextarea.Style: boolean underline>;

        if $z9 == 0 goto label18;

        interfaceinvoke $r72.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("underline", "true");

     label18:
        interfaceinvoke $r61.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r72);

     label19:
        i10 = i10 + 1;

        goto label11;

     label20:
        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r61);

        $r64 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r64.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r5);

        $r65 = new javax.xml.transform.stream.StreamResult;

        $r66 = new java.io.PrintWriter;

        $r67 = new org.fife.io.UnicodeWriter;

        specialinvoke $r67.<org.fife.io.UnicodeWriter: void <init>(java.io.OutputStream,java.lang.String)>($r0, "UTF-8");

        specialinvoke $r66.<java.io.PrintWriter: void <init>(java.io.Writer)>($r67);

        specialinvoke $r65.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r66);

        $r68 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r69 = virtualinvoke $r68.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r69.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r69.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("{http://xml.apache.org/xslt}indent-amount", "4");

        virtualinvoke $r69.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r69.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", "theme.dtd");

        virtualinvoke $r69.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r64, $r65);

     label21:
        virtualinvoke $r0.<java.io.BufferedOutputStream: void close()>();

        goto label26;

     label22:
        $r100 := @caughtexception;

        throw $r100;

     label23:
        $r93 := @caughtexception;

        virtualinvoke $r93.<java.lang.Exception: void printStackTrace()>();

        $r94 = new java.io.IOException;

        $r95 = new java.lang.StringBuffer;

        specialinvoke $r95.<java.lang.StringBuffer: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error generating XML: ");

        $r97 = virtualinvoke $r93.<java.lang.Exception: java.lang.String getMessage()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r94.<java.io.IOException: void <init>(java.lang.String)>($r99);

        throw $r94;

     label24:
        $r92 := @caughtexception;

     label25:
        virtualinvoke $r0.<java.io.BufferedOutputStream: void close()>();

        throw $r92;

     label26:
        return;

        catch java.lang.RuntimeException from label01 to label21 with label22;
        catch java.lang.Exception from label01 to label21 with label23;
        catch java.lang.Throwable from label01 to label21 with label24;
        catch java.lang.Throwable from label22 to label25 with label24;
    }

    private static final java.awt.Color stringToColor(java.lang.String)
    {
        java.awt.Color $r2;
        int $i0, $i2, $i3, $i4;
        char $c1;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 6 goto label1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 != 7 goto label3;

     label1:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c1;

        if $i4 != 36 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r2 = new java.awt.Color;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r1, 16);

        specialinvoke $r2.<java.awt.Color: void <init>(int)>($i2);

        return $r2;

     label3:
        return null;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.awt.Color access$002(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color bgColor> = r1;

        return r1;
    }

    static java.awt.Color access$100(java.lang.String)
    {
        java.awt.Color $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color stringToColor(java.lang.String)>(r0);

        return $r1;
    }

    static java.awt.Font access$202(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Font)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        java.awt.Font r1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Font;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont> = r1;

        return r1;
    }

    static java.awt.Font access$300(java.lang.String, int, int)
    {
        java.awt.Font $r1;
        int i0, i1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font getFont(java.lang.String,int,int)>(r0, i0, i1);

        return $r1;
    }

    static java.awt.Font access$200(org.fife.ui.rsyntaxtextarea.Theme)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        java.awt.Font $r1;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Font baseFont>;

        return $r1;
    }

    static java.awt.Color access$402(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color caretColor> = r1;

        return r1;
    }

    static java.awt.Color access$502(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color currentLineHighlight> = r1;

        return r1;
    }

    static boolean access$602(org.fife.ui.rsyntaxtextarea.Theme, boolean)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        boolean z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        z0 := @parameter1: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean fadeCurrentLineHighlight> = z0;

        return z0;
    }

    static java.awt.Color access$702(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldIndicatorFG> = r1;

        return r1;
    }

    static java.awt.Color access$802(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color foldBG> = r1;

        return r1;
    }

    static java.awt.Color access$902(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color gutterBorderColor> = r1;

        return r1;
    }

    static java.awt.Color access$1002(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color lineNumberColor> = r1;

        return r1;
    }

    static java.lang.String access$1102(org.fife.ui.rsyntaxtextarea.Theme, java.lang.String)
    {
        java.lang.String r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.lang.String;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.lang.String lineNumberFont> = r1;

        return r1;
    }

    static int access$1202(org.fife.ui.rsyntaxtextarea.Theme, int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        i0 := @parameter1: int;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: int lineNumberFontSize> = i0;

        return i0;
    }

    static java.awt.Color access$1302(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color marginLineColor> = r1;

        return r1;
    }

    static java.awt.Color access$1402(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markAllHighlightColor> = r1;

        return r1;
    }

    static java.awt.Color access$1502(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color markOccurrencesColor> = r1;

        return r1;
    }

    static boolean access$1602(org.fife.ui.rsyntaxtextarea.Theme, boolean)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        boolean z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        z0 := @parameter1: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean markOccurrencesBorder> = z0;

        return z0;
    }

    static java.awt.Color access$1702(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketFG> = r1;

        return r1;
    }

    static java.awt.Color access$1802(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color matchedBracketBG> = r1;

        return r1;
    }

    static boolean access$1902(org.fife.ui.rsyntaxtextarea.Theme, boolean)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        boolean z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        z0 := @parameter1: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketHighlightBoth> = z0;

        return z0;
    }

    static boolean access$2002(org.fife.ui.rsyntaxtextarea.Theme, boolean)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        boolean z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        z0 := @parameter1: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean matchedBracketAnimate> = z0;

        return z0;
    }

    static java.awt.Color access$2102(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color hyperlinkFG> = r1;

        return r1;
    }

    static java.awt.Color[] access$2200(org.fife.ui.rsyntaxtextarea.Theme)
    {
        java.awt.Color[] $r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color[] secondaryLanguages>;

        return $r1;
    }

    static java.awt.Color access$2302(org.fife.ui.rsyntaxtextarea.Theme, java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: java.awt.Color;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: java.awt.Color selectionBG> = r1;

        return r1;
    }

    static boolean access$2402(org.fife.ui.rsyntaxtextarea.Theme, boolean)
    {
        org.fife.ui.rsyntaxtextarea.Theme r0;
        boolean z0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        z0 := @parameter1: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: boolean selectionRoundedEdges> = z0;

        return z0;
    }

    static org.fife.ui.rsyntaxtextarea.SyntaxScheme access$2502(org.fife.ui.rsyntaxtextarea.Theme, org.fife.ui.rsyntaxtextarea.SyntaxScheme)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        r1 := @parameter1: org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        r0.<org.fife.ui.rsyntaxtextarea.Theme: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme> = r1;

        return r1;
    }

    static org.fife.ui.rsyntaxtextarea.SyntaxScheme access$2500(org.fife.ui.rsyntaxtextarea.Theme)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r1;
        org.fife.ui.rsyntaxtextarea.Theme r0;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Theme;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.Theme: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        return $r1;
    }
}
