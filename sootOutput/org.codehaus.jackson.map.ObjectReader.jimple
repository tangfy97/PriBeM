public class org.codehaus.jackson.map.ObjectReader extends org.codehaus.jackson.ObjectCodec implements org.codehaus.jackson.Versioned
{
    private static final org.codehaus.jackson.type.JavaType JSON_NODE_TYPE;
    protected final org.codehaus.jackson.map.DeserializationConfig _config;
    protected final boolean _unwrapRoot;
    protected final java.util.concurrent.ConcurrentHashMap _rootDeserializers;
    protected final org.codehaus.jackson.map.DeserializerProvider _provider;
    protected final org.codehaus.jackson.JsonFactory _jsonFactory;
    protected final org.codehaus.jackson.type.JavaType _valueType;
    protected final java.lang.Object _valueToUpdate;
    protected final org.codehaus.jackson.FormatSchema _schema;
    protected final org.codehaus.jackson.map.InjectableValues _injectableValues;

    protected void <init>(org.codehaus.jackson.map.ObjectMapper, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, r2, null, null, null, null);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectMapper, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.lang.Object, org.codehaus.jackson.FormatSchema, org.codehaus.jackson.map.InjectableValues)
    {
        org.codehaus.jackson.FormatSchema r8;
        org.codehaus.jackson.map.InjectableValues r9;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.DeserializerProvider $r4;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r10;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.IllegalArgumentException $r11;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonFactory $r5;
        org.codehaus.jackson.type.JavaType r6;
        java.lang.Object r7;
        org.codehaus.jackson.map.ObjectMapper r2;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r6 := @parameter2: org.codehaus.jackson.type.JavaType;

        r7 := @parameter3: java.lang.Object;

        r8 := @parameter4: org.codehaus.jackson.FormatSchema;

        r9 := @parameter5: org.codehaus.jackson.map.InjectableValues;

        specialinvoke r0.<org.codehaus.jackson.ObjectCodec: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config> = r1;

        $r3 = r2.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        r0.<org.codehaus.jackson.map.ObjectReader: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = $r3;

        $r4 = r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider> = $r4;

        $r5 = r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory> = $r5;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType> = r6;

        r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate> = r7;

        if r7 == null goto label1;

        $z1 = virtualinvoke r6.<org.codehaus.jackson.type.JavaType: boolean isArrayType()>();

        if $z1 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not update an array value");

        throw $r11;

     label1:
        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema> = r8;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues> = r9;

        $r10 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE>;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r10);

        r0.<org.codehaus.jackson.map.ObjectReader: boolean _unwrapRoot> = $z0;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectReader, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.lang.Object, org.codehaus.jackson.FormatSchema, org.codehaus.jackson.map.InjectableValues)
    {
        org.codehaus.jackson.FormatSchema r8;
        org.codehaus.jackson.map.InjectableValues r9;
        org.codehaus.jackson.map.ObjectReader r0, r2;
        org.codehaus.jackson.map.DeserializerProvider $r4;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r10;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.IllegalArgumentException $r11;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonFactory $r5;
        org.codehaus.jackson.type.JavaType r6;
        java.lang.Object r7;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r6 := @parameter2: org.codehaus.jackson.type.JavaType;

        r7 := @parameter3: java.lang.Object;

        r8 := @parameter4: org.codehaus.jackson.FormatSchema;

        r9 := @parameter5: org.codehaus.jackson.map.InjectableValues;

        specialinvoke r0.<org.codehaus.jackson.ObjectCodec: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config> = r1;

        $r3 = r2.<org.codehaus.jackson.map.ObjectReader: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        r0.<org.codehaus.jackson.map.ObjectReader: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = $r3;

        $r4 = r2.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider>;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider> = $r4;

        $r5 = r2.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory> = $r5;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType> = r6;

        r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate> = r7;

        if r7 == null goto label1;

        $z1 = virtualinvoke r6.<org.codehaus.jackson.type.JavaType: boolean isArrayType()>();

        if $z1 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not update an array value");

        throw $r11;

     label1:
        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema> = r8;

        r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues> = r9;

        $r10 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE>;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r10);

        r0.<org.codehaus.jackson.map.ObjectReader: boolean _unwrapRoot> = $z0;

        return;
    }

    public org.codehaus.jackson.Version version()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.Version $r2;
        org.codehaus.jackson.map.ObjectReader r0;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version versionFor(java.lang.Class)>($r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.FormatSchema $r5;
        org.codehaus.jackson.map.ObjectReader r1, $r3;
        org.codehaus.jackson.map.DeserializationConfig $r7;
        org.codehaus.jackson.type.JavaType r0, $r2;
        java.lang.Object $r6;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r0 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $r3 = new org.codehaus.jackson.map.ObjectReader;

        $r7 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = r1.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        $r5 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        $r4 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r7, r0, $r6, $r5, $r4);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectReader withType(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectReader r0, $r4;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Class r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.type.JavaType constructType(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader withType(java.lang.reflect.Type)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectReader r0, $r5;
        java.lang.reflect.Type r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: java.lang.reflect.Type;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.type.TypeFactory getTypeFactory()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r3);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>($r4);

        return $r5;
    }

    public org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectReader r0, $r6;
        java.lang.reflect.Type $r4;
        org.codehaus.jackson.type.TypeReference r3;
        org.codehaus.jackson.type.JavaType $r5;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.type.TypeReference;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.type.TypeFactory getTypeFactory()>();

        $r4 = virtualinvoke r3.<org.codehaus.jackson.type.TypeReference: java.lang.reflect.Type getType()>();

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r4);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>($r5);

        return $r6;
    }

    public org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.InjectableValues $r7;
        org.codehaus.jackson.FormatSchema $r8;
        org.codehaus.jackson.map.ObjectReader r1, $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r5, $r6;
        org.codehaus.jackson.node.JsonNodeFactory r0, $r3;
        org.codehaus.jackson.type.JavaType $r10;
        java.lang.Object $r9;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r0 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r2 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        if r0 != $r3 goto label1;

        return r1;

     label1:
        $r4 = new org.codehaus.jackson.map.ObjectReader;

        $r5 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>(r0);

        $r10 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r1.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        $r8 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        $r7 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r6, $r10, $r9, $r8, $r7);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader withValueToUpdate(java.lang.Object)
    {
        org.codehaus.jackson.map.InjectableValues $r5;
        org.codehaus.jackson.FormatSchema $r6;
        org.codehaus.jackson.map.ObjectReader r1, $r4;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.DeserializationConfig $r7, $r8;
        org.codehaus.jackson.type.JavaType $r3, $r11;
        java.lang.Object r0, $r2;
        java.lang.Class $r9;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r0 := @parameter0: java.lang.Object;

        $r2 = r1.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        if r0 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cat not update null value");

        throw $r10;

     label2:
        $r3 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        if $r3 != null goto label3;

        $r8 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.type.JavaType constructType(java.lang.Class)>($r9);

        goto label4;

     label3:
        $r11 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

     label4:
        $r4 = new org.codehaus.jackson.map.ObjectReader;

        $r7 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        $r5 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r7, $r11, r0, $r6, $r5);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader withSchema(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema r1, $r2;
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.map.ObjectReader r0, $r3;
        org.codehaus.jackson.map.DeserializationConfig $r7;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        $r3 = new org.codehaus.jackson.map.ObjectReader;

        $r7 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r0, $r7, $r6, $r5, r1, $r4);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectReader withInjectableValues(org.codehaus.jackson.map.InjectableValues)
    {
        org.codehaus.jackson.map.InjectableValues r1, $r2;
        org.codehaus.jackson.FormatSchema $r4;
        org.codehaus.jackson.map.ObjectReader r0, $r3;
        org.codehaus.jackson.map.DeserializationConfig $r7;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.map.InjectableValues;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        $r3 = new org.codehaus.jackson.map.ObjectReader;

        $r7 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r0, $r7, $r6, $r5, $r4, r1);

        return $r3;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Object $r2;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bind(org.codehaus.jackson.JsonParser)>(r1);

        return $r2;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        java.lang.Class r1;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(java.lang.Class)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        org.codehaus.jackson.type.TypeReference r1;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.JsonNode $r2;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser)>(r1);

        return $r2;
    }

    public java.util.Iterator readValues(org.codehaus.jackson.JsonParser, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        java.lang.Class r1;
        org.codehaus.jackson.map.MappingIterator $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(java.lang.Class)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public java.util.Iterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        org.codehaus.jackson.type.TypeReference r1;
        org.codehaus.jackson.map.MappingIterator $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public java.util.Iterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0, $r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.MappingIterator $r4;
        org.codehaus.jackson.JsonParser r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>(r1);

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser)>(r3);

        return $r4;
    }

    public java.lang.Object readValue(java.io.InputStream) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(java.io.Reader) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r4;
        java.io.Reader r1;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r4;
        java.lang.String r1;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(byte[]) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        byte[] r1;
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        byte[] r1;
        org.codehaus.jackson.map.ObjectReader r0;
        int i0, i1;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>(r1, i0, i1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(java.io.File) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r4;
        java.io.File r1;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(java.net.URL) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.net.URL r1;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonNode r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r1);

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>($r2);

        return $r3;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.InputStream) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.JsonNode $r4;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.Reader) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.io.Reader r1;
        org.codehaus.jackson.JsonNode $r4;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.String r1;
        org.codehaus.jackson.JsonNode $r4;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.MappingIterator $r4;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r6;
        org.codehaus.jackson.map.DeserializationContext $r3;
        org.codehaus.jackson.type.JavaType $r5, $r7;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        java.lang.Object $r9;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r1, $r2);

        $r4 = new org.codehaus.jackson.map.MappingIterator;

        $r7 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r6 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r6, $r5);

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r4.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r7, r1, $r3, $r8, 0, $r9);

        return $r4;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(java.io.InputStream) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.MappingIterator $r7;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(java.io.Reader) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.MappingIterator $r7;
        java.io.Reader r1;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.MappingIterator $r7;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        java.lang.String r1;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        byte[] r1;
        org.codehaus.jackson.map.MappingIterator $r7;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        org.codehaus.jackson.map.DeserializationContext $r6;
        int i0, i1;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.JsonFactory $r2;
        java.lang.Object $r12;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>(r1, i0, i1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    public final org.codehaus.jackson.map.MappingIterator readValues(byte[]) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        byte[] r1;
        org.codehaus.jackson.map.ObjectReader r0;
        int $i0;
        org.codehaus.jackson.map.MappingIterator $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(byte[],int,int)>(r1, 0, $i0);

        return $r2;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(java.io.File) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.MappingIterator $r7;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        java.io.File r1;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(java.net.URL) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.FormatSchema $r4, $r13;
        org.codehaus.jackson.map.ObjectReader r0;
        java.net.URL r1;
        org.codehaus.jackson.map.MappingIterator $r7;
        org.codehaus.jackson.map.DeserializationConfig $r5, $r9;
        org.codehaus.jackson.map.DeserializationContext $r6;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r8, $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r4 == null goto label1;

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r13);

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.MappingIterator;

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        specialinvoke $r7.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>($r10, $r3, $r6, $r11, 1, $r12);

        return $r7;
    }

    protected java.lang.Object _bind(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r3, $r5;
        org.codehaus.jackson.map.DeserializationConfig $r6, $r9, $r16;
        org.codehaus.jackson.map.DeserializationContext $r7;
        org.codehaus.jackson.type.JavaType $r8, $r13, $r15;
        org.codehaus.jackson.map.JsonDeserializer $r10, $r17;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0;
        org.codehaus.jackson.map.ObjectReader r4;
        java.lang.Object $r11, $r12, $r14, r18;

        r4 := @this: org.codehaus.jackson.map.ObjectReader;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = staticinvoke <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>(r0);

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r1 != $r2 goto label2;

        $r14 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if $r14 != null goto label1;

        $r16 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r15 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r17 = virtualinvoke r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r16, $r15);

        r18 = virtualinvoke $r17.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object getNullValue()>();

        goto label7;

     label1:
        r18 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        goto label7;

     label2:
        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r1 == $r3 goto label3;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r1 != $r5 goto label4;

     label3:
        r18 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        goto label7;

     label4:
        $r6 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r7 = virtualinvoke r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r0, $r6);

        $r9 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r10 = virtualinvoke r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $z0 = r4.<org.codehaus.jackson.map.ObjectReader: boolean _unwrapRoot>;

        if $z0 == 0 goto label5;

        $r13 = r4.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        r18 = virtualinvoke r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>(r0, $r7, $r13, $r10);

        goto label7;

     label5:
        $r11 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if $r11 != null goto label6;

        r18 = virtualinvoke $r10.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, $r7);

        goto label7;

     label6:
        $r12 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        virtualinvoke $r10.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r0, $r7, $r12);

        r18 = r4.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

     label7:
        virtualinvoke r0.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return r18;
    }

    protected java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r21;
        org.codehaus.jackson.JsonToken $r3, $r4, $r5, $r6;
        org.codehaus.jackson.map.DeserializationConfig $r7, $r10, $r17;
        org.codehaus.jackson.map.DeserializationContext $r8;
        org.codehaus.jackson.type.JavaType $r9, $r14, $r16;
        org.codehaus.jackson.map.JsonDeserializer $r11, $r18;
        org.codehaus.jackson.JsonParser r2;
        boolean $z0;
        org.codehaus.jackson.FormatSchema $r1, $r19;
        org.codehaus.jackson.map.ObjectReader r0;
        java.io.IOException $r20, $r22;
        java.lang.Object $r12, $r13, $r15, r23, r24;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r1 == null goto label01;

        $r19 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r19);

     label01:
        $r3 = staticinvoke <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>(r2);

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r3 != $r4 goto label03;

        $r15 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if $r15 != null goto label02;

        $r17 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r16 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r18 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r17, $r16);

        r23 = virtualinvoke $r18.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object getNullValue()>();

        goto label08;

     label02:
        r23 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        goto label08;

     label03:
        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r3 == $r5 goto label04;

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r3 != $r6 goto label05;

     label04:
        r23 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        goto label08;

     label05:
        $r7 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r2, $r7);

        $r10 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r9 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r10, $r9);

        $z0 = r0.<org.codehaus.jackson.map.ObjectReader: boolean _unwrapRoot>;

        if $z0 == 0 goto label06;

        $r14 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType _valueType>;

        r23 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>(r2, $r8, $r14, $r11);

        goto label08;

     label06:
        $r12 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if $r12 != null goto label07;

        r23 = virtualinvoke $r11.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, $r8);

        goto label08;

     label07:
        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        virtualinvoke $r11.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r2, $r8, $r13);

        r23 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

     label08:
        r24 = r23;

     label09:
        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void close()>();

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;

     label12:
        return r24;

     label13:
        $r21 := @caughtexception;

     label14:
        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void close()>();

     label15:
        goto label17;

     label16:
        $r20 := @caughtexception;

     label17:
        throw $r21;

        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label09 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r3, $r4;
        org.codehaus.jackson.map.DeserializationConfig $r6, $r9;
        org.codehaus.jackson.JsonNode r14;
        org.codehaus.jackson.map.DeserializationContext $r7;
        org.codehaus.jackson.type.JavaType $r8, $r12;
        org.codehaus.jackson.map.JsonDeserializer $r10;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0;
        org.codehaus.jackson.map.ObjectReader r5;
        java.lang.Object $r11, $r13;

        r5 := @this: org.codehaus.jackson.map.ObjectReader;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = staticinvoke <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>(r0);

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r1 == $r2 goto label1;

        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r1 == $r3 goto label1;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r1 != $r4 goto label2;

     label1:
        r14 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label4;

     label2:
        $r6 = r5.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r7 = virtualinvoke r5.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r0, $r6);

        $r9 = r5.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r8 = <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r10 = virtualinvoke r5.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r9, $r8);

        $z0 = r5.<org.codehaus.jackson.map.ObjectReader: boolean _unwrapRoot>;

        if $z0 == 0 goto label3;

        $r12 = <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r13 = virtualinvoke r5.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>(r0, $r7, $r12, $r10);

        r14 = (org.codehaus.jackson.JsonNode) $r13;

        goto label4;

     label3:
        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, $r7);

        r14 = (org.codehaus.jackson.JsonNode) $r11;

     label4:
        virtualinvoke r0.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return r14;
    }

    protected org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.FormatSchema $r1, $r4;
        java.lang.Throwable $r6;
        org.codehaus.jackson.map.ObjectReader r0;
        java.io.IOException $r5, $r7;
        org.codehaus.jackson.JsonNode $r3;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        if $r1 == null goto label01;

        $r4 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.FormatSchema _schema>;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void setSchema(org.codehaus.jackson.FormatSchema)>($r4);

     label01:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser)>(r2);

     label02:
        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void close()>();

     label03:
        goto label05;

     label04:
        $r7 := @caughtexception;

     label05:
        return $r3;

     label06:
        $r6 := @caughtexception;

     label07:
        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void close()>();

     label08:
        goto label10;

     label09:
        $r5 := @caughtexception;

     label10:
        throw $r6;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    protected static org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, r4;
        java.io.EOFException $r3;
        org.codehaus.jackson.JsonParser r0;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r4 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("No content to map to Object due to end of input");

        throw $r3;

     label1:
        return r4;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectReader r1;
        org.codehaus.jackson.map.DeserializerProvider $r5;
        java.util.concurrent.ConcurrentHashMap $r2, $r7;
        org.codehaus.jackson.map.DeserializationConfig r4;
        org.codehaus.jackson.map.JsonMappingException $r8, $r13;
        org.codehaus.jackson.type.JavaType r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.JsonDeserializer $r6, r14;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r4 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.type.JavaType;

        if r0 != null goto label1;

        $r13 = new org.codehaus.jackson.map.JsonMappingException;

        specialinvoke $r13.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>("No value type configured for ObjectReader");

        throw $r13;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ObjectReader: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r14 = (org.codehaus.jackson.map.JsonDeserializer) $r3;

        if r14 == null goto label2;

        return r14;

     label2:
        $r5 = r1.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r4, r0, null);

        if $r6 != null goto label3;

        $r8 = new org.codehaus.jackson.map.JsonMappingException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not find a deserializer for type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label3:
        $r7 = r1.<org.codehaus.jackson.map.ObjectReader: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r6);

        return $r6;
    }

    protected org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.map.deser.StdDeserializationContext $r0;
        org.codehaus.jackson.map.ObjectReader r3;
        org.codehaus.jackson.map.DeserializerProvider $r5;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonParser r2;

        r3 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r0 = new org.codehaus.jackson.map.deser.StdDeserializationContext;

        $r5 = r3.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider>;

        $r4 = r3.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.StdDeserializationContext: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.InjectableValues)>(r1, r2, $r5, $r4);

        return $r0;
    }

    protected java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r7, $r8, $r9, $r10, $r16, $r17, $r22, $r39, $r47;
        boolean $z0;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38, $r40, $r43, $r44, $r45, $r46, $r48;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.DeserializationContext r1;
        org.codehaus.jackson.map.JsonMappingException $r25, $r34, $r42, $r50;
        org.codehaus.jackson.type.JavaType r4;
        org.codehaus.jackson.map.JsonDeserializer r14;
        java.lang.String $r11, $r12, $r24, $r33, $r41, $r49;
        org.codehaus.jackson.JsonParser r6;
        org.codehaus.jackson.io.SerializedString $r5;
        java.lang.Object $r13, $r15, r51;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r6 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter2: org.codehaus.jackson.type.JavaType;

        r14 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializerProvider _provider>;

        $r3 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r3, r4);

        $r7 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r8 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r7 == $r8 goto label1;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not START_OBJECT (needed to unwrap root name \'");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r47 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r49);

        throw $r50;

     label1:
        $r9 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r10 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r9 == $r10 goto label2;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not FIELD_NAME (to contain expected root name \'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r39 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r41);

        throw $r42;

     label2:
        $r11 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r12 = virtualinvoke $r5.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label3;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Root name \'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match expected (\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\') for type ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r33);

        throw $r34;

     label3:
        virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r13 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        if $r13 != null goto label4;

        r51 = virtualinvoke r14.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r6, r1);

        goto label5;

     label4:
        $r15 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

        virtualinvoke r14.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r6, r1, $r15);

        r51 = r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object _valueToUpdate>;

     label5:
        $r16 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r17 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r16 == $r17 goto label6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not END_OBJECT (to match wrapper object with root name \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r22 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r24);

        throw $r25;

     label6:
        return r51;
    }

    public org.codehaus.jackson.JsonNode createArrayNode()
    {
        org.codehaus.jackson.node.ArrayNode $r3;
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ArrayNode arrayNode()>();

        return $r3;
    }

    public org.codehaus.jackson.JsonNode createObjectNode()
    {
        org.codehaus.jackson.map.ObjectReader r0;
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.node.ObjectNode $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        $r1 = r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ObjectNode objectNode()>();

        return $r3;
    }

    public org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)
    {
        org.codehaus.jackson.node.TreeTraversingParser $r0;
        org.codehaus.jackson.JsonNode r1;
        org.codehaus.jackson.map.ObjectReader r2;

        r2 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r0 = new org.codehaus.jackson.node.TreeTraversingParser;

        specialinvoke $r0.<org.codehaus.jackson.node.TreeTraversingParser: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.ObjectCodec)>(r1, r2);

        return $r0;
    }

    public java.lang.Object treeToValue(org.codehaus.jackson.JsonNode, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ObjectReader r0;
        java.lang.Class r3;
        java.lang.Object $r4;
        org.codehaus.jackson.JsonNode r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectReader;

        r1 := @parameter0: org.codehaus.jackson.JsonNode;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)>($r2, r3);

        return $r4;
    }

    public void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.jackson.map.ObjectReader r1;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.JsonNode r3;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter1: org.codehaus.jackson.JsonNode;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented for ObjectReader");

        throw $r0;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.jackson.map.ObjectReader r1;
        org.codehaus.jackson.JsonGenerator r2;
        java.lang.Object r3;

        r1 := @this: org.codehaus.jackson.map.ObjectReader;

        r2 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented for ObjectReader");

        throw $r0;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.type.SimpleType $r0;

        $r0 = staticinvoke <org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class)>(class "Lorg/codehaus/jackson/JsonNode;");

        <org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE> = $r0;

        return;
    }
}
