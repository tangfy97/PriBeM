public final class org.apache.poi.ss.formula.ptg.ArrayPtg extends org.apache.poi.ss.formula.ptg.Ptg
{
    public static final byte sid;
    private static final int RESERVED_FIELD_LEN;
    public static final int PLAIN_TOKEN_SIZE;
    private final int _reserved0Int;
    private final int _reserved1Short;
    private final int _reserved2Byte;
    private final int _nColumns;
    private final int _nRows;
    private final java.lang.Object[] _arrayValues;

    void <init>(int, int, int, int, int, java.lang.Object[])
    {
        java.lang.Object[] r1;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.Object[];

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.Ptg: void <init>()>();

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved0Int> = i0;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved1Short> = i1;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved2Byte> = i2;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns> = i3;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows> = i4;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues> = r1;

        return;
    }

    public void <init>(java.lang.Object[][])
    {
        java.lang.Object[] $r2, r3, r4;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;
        java.lang.Object[][] r1;
        short $s2, $s3;
        int i0, i1, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        r1 := @parameter0: java.lang.Object[][];

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.Ptg: void <init>()>();

        $r2 = r1[0];

        i0 = lengthof $r2;

        i1 = lengthof r1;

        $s2 = (short) i0;

        $i10 = (int) $s2;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns> = $i10;

        $s3 = (short) i1;

        $i11 = (int) $s3;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows> = $i11;

        $i5 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        $i4 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        $i6 = $i5 * $i4;

        r3 = newarray (java.lang.Object)[$i6];

        i8 = 0;

     label1:
        if i8 >= i1 goto label4;

        r4 = r1[i8];

        i9 = 0;

     label2:
        if i9 >= i0 goto label3;

        $i7 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getValueIndex(int,int)>(i9, i8);

        $r5 = r4[i9];

        r3[$i7] = $r5;

        i9 = i9 + 1;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues> = r3;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved0Int> = 0;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved1Short> = 0;

        r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved2Byte> = 0;

        return;
    }

    public java.lang.Object[][] getTokenArrayValues()
    {
        java.lang.IllegalStateException $r6;
        java.lang.Object[] $r1, r3, $r4;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;
        java.lang.Object[][] r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("array values not read yet");

        throw $r6;

     label1:
        $i1 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        r2 = newmultiarray (java.lang.Object)[$i1][$i0];

        i5 = 0;

     label2:
        $i2 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        if i5 >= $i2 goto label5;

        r3 = r2[i5];

        i6 = 0;

     label3:
        $i3 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        if i6 >= $i3 goto label4;

        $r4 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        $i4 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getValueIndex(int,int)>(i6, i5);

        $r5 = $r4[$i4];

        r3[i6] = $r5;

        i6 = i6 + 1;

        goto label3;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        return r2;
    }

    public boolean isBaseToken()
    {
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r6;
        org.apache.poi.ss.formula.ptg.ArrayPtg r2;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5, $r7;
        int $i0, $i1;
        java.lang.String $r8, $r9;

        r2 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("[ArrayPtg]\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nRows = ");

        $i0 = virtualinvoke r2.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getRowCount()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("nCols = ");

        $i1 = virtualinvoke r2.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getColumnCount()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = r2.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        if $r6 != null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  #values#uninitialised#\n");

        goto label2;

     label1:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r8 = virtualinvoke r2.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.String toFormulaString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label2:
        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    int getValueIndex(int, int)
    {
        org.apache.poi.ss.formula.ptg.ArrayPtg r5;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r8, $r16;
        java.lang.IllegalArgumentException $r0, $r9;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15;

        r5 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        if i0 < 0 goto label1;

        $i3 = r5.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        if i0 < $i3 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified colIx (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is outside the allowed range (0..");

        $i1 = r5.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        $i2 = $i1 - 1;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        if i4 < 0 goto label3;

        $i7 = r5.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        if i4 < $i7 goto label4;

     label3:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified rowIx (");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is outside the allowed range (0..");

        $i5 = r5.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        $i6 = $i5 - 1;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label4:
        $i8 = r5.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        $i9 = i4 * $i8;

        $i10 = $i9 + i0;

        return $i10;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.ptg.ArrayPtg r1;
        byte $b0;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: byte getPtgClass()>();

        $i5 = (int) $b0;

        $i1 = 32 + $i5;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $i2 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved0Int>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i2);

        $i3 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved1Short>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        $i4 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _reserved2Byte>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i4);

        return;
    }

    public int writeTokenValueBytes(org.apache.poi.util.LittleEndianOutput)
    {
        java.lang.Object[] $r2, $r3;
        org.apache.poi.ss.formula.ptg.ArrayPtg r1;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        $i1 = $i0 - 1;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $i2 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        $i3 = $i2 - 1;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        $r2 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: void encode(org.apache.poi.util.LittleEndianOutput,java.lang.Object[])>(r0, $r2);

        $r3 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        $i4 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: int getEncodedSize(java.lang.Object[])>($r3);

        $i5 = 3 + $i4;

        return $i5;
    }

    public int getRowCount()
    {
        int $i0;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nRows>;

        return $i0;
    }

    public int getColumnCount()
    {
        int $i0;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: int _nColumns>;

        return $i0;
    }

    public int getSize()
    {
        java.lang.Object[] $r1;
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        $i0 = staticinvoke <org.apache.poi.ss.formula.constant.ConstantValueParser: int getEncodedSize(java.lang.Object[])>($r1);

        $i1 = 11 + $i0;

        return $i1;
    }

    public java.lang.String toFormulaString()
    {
        java.lang.Object[] $r3;
        org.apache.poi.ss.formula.ptg.ArrayPtg r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2, i3, $i4;
        java.lang.Object $r5;
        java.lang.String $r2, $r4;

        r1 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getRowCount()>();

        if i2 >= $i0 goto label6;

        if i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

     label2:
        i3 = 0;

     label3:
        $i4 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getColumnCount()>();

        if i3 >= $i4 goto label5;

        if i3 <= 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label4:
        $r3 = r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.Object[] _arrayValues>;

        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.ArrayPtg: int getValueIndex(int,int)>(i3, i2);

        $r5 = $r3[$i1];

        $r4 = staticinvoke <org.apache.poi.ss.formula.ptg.ArrayPtg: java.lang.String getConstantText(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i3 = i3 + 1;

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String getConstantText(java.lang.Object)
    {
        java.lang.Double $r12;
        java.lang.Boolean $r11;
        java.lang.String $r5, $r8, $r10, $r13, $r16, $r19, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        org.apache.poi.ss.formula.constant.ErrorConstant $r9;
        java.lang.RuntimeException $r20;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r0;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r14, $r15, $r17, $r18;
        java.lang.Class $r4;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>("Array item cannot be null");

        throw $r20;

     label1:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r16 = (java.lang.String) r0;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label2:
        $z1 = r0 instanceof java.lang.Double;

        if $z1 == 0 goto label3;

        $r12 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = staticinvoke <org.apache.poi.ss.util.NumberToTextConverter: java.lang.String toText(double)>($d0);

        return $r13;

     label3:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label6;

        $r11 = (java.lang.Boolean) r0;

        $z4 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label4;

        $r21 = "TRUE";

        goto label5;

     label4:
        $r21 = "FALSE";

     label5:
        return $r21;

     label6:
        $z3 = r0 instanceof org.apache.poi.ss.formula.constant.ErrorConstant;

        if $z3 == 0 goto label7;

        $r9 = (org.apache.poi.ss.formula.constant.ErrorConstant) r0;

        $r10 = virtualinvoke $r9.<org.apache.poi.ss.formula.constant.ErrorConstant: java.lang.String getText()>();

        return $r10;

     label7:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected constant class (");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;
    }

    public byte getDefaultOperandClass()
    {
        org.apache.poi.ss.formula.ptg.ArrayPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ArrayPtg;

        return 64;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.ptg.ArrayPtg: int PLAIN_TOKEN_SIZE> = 8;

        <org.apache.poi.ss.formula.ptg.ArrayPtg: int RESERVED_FIELD_LEN> = 7;

        <org.apache.poi.ss.formula.ptg.ArrayPtg: byte sid> = 32;

        return;
    }
}
