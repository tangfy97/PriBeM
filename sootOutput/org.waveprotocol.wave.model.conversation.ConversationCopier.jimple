public class org.waveprotocol.wave.model.conversation.ConversationCopier extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.model.conversation.ConversationCopier r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.ConversationCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clearAndCopyWaveletContents(org.waveprotocol.wave.model.wave.Wavelet, org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r0, r1;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r0 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void clearWaveletContents(org.waveprotocol.wave.model.wave.Wavelet)>(r0);

        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void copyWaveletContents(org.waveprotocol.wave.model.wave.Wavelet,org.waveprotocol.wave.model.wave.Wavelet)>(r1, r0);

        return;
    }

    public static void copyDocument(org.waveprotocol.wave.model.wave.Wavelet, org.waveprotocol.wave.model.wave.Wavelet, java.lang.String)
    {
        org.waveprotocol.wave.model.wave.Wavelet r0, r4;
        org.waveprotocol.wave.model.document.operation.Nindo $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.ObservableDocument $r2, $r5;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r4 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        r1 := @parameter2: java.lang.String;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.document.ObservableDocument getDocument(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.Document: org.waveprotocol.wave.model.document.operation.DocInitialization toInitialization()>();

        $r5 = interfaceinvoke r4.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.document.ObservableDocument getDocument(java.lang.String)>(r1);

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.operation.Nindo: org.waveprotocol.wave.model.document.operation.Nindo fromDocOp(org.waveprotocol.wave.model.document.operation.DocOp,boolean)>($r3, 0);

        interfaceinvoke $r5.<org.waveprotocol.wave.model.document.ObservableDocument: void hackConsume(org.waveprotocol.wave.model.document.operation.Nindo)>($r6);

        return;
    }

    public static void copyWaveletContents(org.waveprotocol.wave.model.wave.Wavelet, org.waveprotocol.wave.model.wave.Wavelet)
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.waveprotocol.wave.model.wave.Wavelet r0, r3;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: java.util.Set getDocumentIds()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>("conversation");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Wavelet is not conversational.");

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z2 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isManifestDocument(java.lang.String)>(r5);

        if $z2 != 0 goto label2;

        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void copyDocument(org.waveprotocol.wave.model.wave.Wavelet,org.waveprotocol.wave.model.wave.Wavelet,java.lang.String)>(r0, r3, r5);

     label2:
        goto label1;

     label3:
        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void copyDocument(org.waveprotocol.wave.model.wave.Wavelet,org.waveprotocol.wave.model.wave.Wavelet,java.lang.String)>(r0, r3, "conversation");

        return;
    }

    public static void clearDocument(org.waveprotocol.wave.model.wave.Wavelet, java.lang.String)
    {
        org.waveprotocol.wave.model.wave.Wavelet r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.ObservableDocument $r2;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.document.ObservableDocument getDocument(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.Document: int size()>();

        if $i0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.Document: java.lang.Object getDocumentElement()>();

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.Document: void emptyElement(java.lang.Object)>($r3);

     label1:
        return;
    }

    public static void clearWaveletContents(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r0;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: java.util.Set getDocumentIds()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $z1 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isManifestDocument(java.lang.String)>(r4);

        if $z1 != 0 goto label2;

        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void clearDocument(org.waveprotocol.wave.model.wave.Wavelet,java.lang.String)>(r0, r4);

     label2:
        goto label1;

     label3:
        staticinvoke <org.waveprotocol.wave.model.conversation.ConversationCopier: void clearDocument(org.waveprotocol.wave.model.wave.Wavelet,java.lang.String)>(r0, "conversation");

        return;
    }
}
