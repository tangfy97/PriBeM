public class org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem extends org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem implements org.w3c.dom.svg.SVGPathSegArcAbs, org.w3c.dom.svg.SVGPathSegArcRel
{
    private final org.apache.batik.dom.svg.AbstractSVGPathSegList this$0;

    public void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList, short, java.lang.String, float, float, float, boolean, boolean, float, float)
    {
        short s0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        float f0, f1, f2, f3, f4;
        java.lang.String r2;
        boolean z0, z1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGPathSegList;

        s0 := @parameter1: short;

        r2 := @parameter2: java.lang.String;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String)>(r1, s0, r2);

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0> = r1;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = f0;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = f1;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1> = f2;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2> = f3;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle> = f4;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag> = z0;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag> = z1;

        return;
    }

    public void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList, org.w3c.dom.svg.SVGPathSeg)
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList r1;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.svg.SVGPathSegArcRel $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        org.w3c.dom.svg.SVGPathSegArcAbs $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        short $s0, $s1;
        int $i2;
        org.w3c.dom.svg.SVGPathSeg r2;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGPathSegList;

        r2 := @parameter1: org.w3c.dom.svg.SVGPathSeg;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList)>(r1);

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0> = r1;

        $s0 = interfaceinvoke r2.<org.w3c.dom.svg.SVGPathSeg: short getPathSegType()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: short type> = $s0;

        $s1 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: short type>;

        $i2 = (int) $s1;

        lookupswitch($i2)
        {
            case 10: goto label1;
            case 11: goto label2;
            default: goto label3;
        };

     label1:
        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: java.lang.String letter> = "A";

        $r10 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $f5 = interfaceinvoke $r10.<org.w3c.dom.svg.SVGPathSegArcAbs: float getX()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f5;

        $r11 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $f6 = interfaceinvoke $r11.<org.w3c.dom.svg.SVGPathSegArcAbs: float getY()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f6;

        $r12 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $f7 = interfaceinvoke $r12.<org.w3c.dom.svg.SVGPathSegArcAbs: float getR1()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1> = $f7;

        $r13 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $f8 = interfaceinvoke $r13.<org.w3c.dom.svg.SVGPathSegArcAbs: float getR2()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2> = $f8;

        $r14 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $f9 = interfaceinvoke $r14.<org.w3c.dom.svg.SVGPathSegArcAbs: float getAngle()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle> = $f9;

        $r15 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $z2 = interfaceinvoke $r15.<org.w3c.dom.svg.SVGPathSegArcAbs: boolean getLargeArcFlag()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag> = $z2;

        $r16 = (org.w3c.dom.svg.SVGPathSegArcAbs) r2;

        $z3 = interfaceinvoke $r16.<org.w3c.dom.svg.SVGPathSegArcAbs: boolean getSweepFlag()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag> = $z3;

        goto label3;

     label2:
        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: java.lang.String letter> = "a";

        $r3 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $f0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGPathSegArcRel: float getX()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f0;

        $r4 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $f1 = interfaceinvoke $r4.<org.w3c.dom.svg.SVGPathSegArcRel: float getY()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f1;

        $r5 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $f2 = interfaceinvoke $r5.<org.w3c.dom.svg.SVGPathSegArcRel: float getR1()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1> = $f2;

        $r6 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $f3 = interfaceinvoke $r6.<org.w3c.dom.svg.SVGPathSegArcRel: float getR2()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2> = $f3;

        $r7 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $f4 = interfaceinvoke $r7.<org.w3c.dom.svg.SVGPathSegArcRel: float getAngle()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle> = $f4;

        $r8 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $z0 = interfaceinvoke $r8.<org.w3c.dom.svg.SVGPathSegArcRel: boolean getLargeArcFlag()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag> = $z0;

        $r9 = (org.w3c.dom.svg.SVGPathSegArcRel) r2;

        $z1 = interfaceinvoke $r9.<org.w3c.dom.svg.SVGPathSegArcRel: boolean getSweepFlag()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag> = $z1;

        goto label3;

     label3:
        return;
    }

    public float getX()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x>;

        return $f0;
    }

    public float getY()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y>;

        return $f0;
    }

    public void setX(float)
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public void setY(float)
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public float getR1()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1>;

        return $f0;
    }

    public float getR2()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2>;

        return $f0;
    }

    public void setR1(float)
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public void setR2(float)
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public float getAngle()
    {
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $f0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle>;

        return $f0;
    }

    public void setAngle(float)
    {
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        f0 := @parameter0: float;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle> = f0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public boolean getSweepFlag()
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag>;

        return $z0;
    }

    public void setSweepFlag(boolean)
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag> = z0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    public boolean getLargeArcFlag()
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag>;

        return $z0;
    }

    public void setLargeArcFlag(boolean)
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag> = z0;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGItem: void resetAttribute()>();

        return;
    }

    protected java.lang.String getStringValue()
    {
        boolean $z0, $z1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r1;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22;
        java.lang.String $r2, $r5, $r8, $r11, $r18, $r21, $r23, $r24, $r25;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: java.lang.String letter>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f0 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1>;

        $r5 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f1 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2>;

        $r8 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f2 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle>;

        $r11 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $z0 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag>;

        if $z0 == 0 goto label1;

        $r24 = "1";

        goto label2;

     label1:
        $r24 = "0";

     label2:
        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $z1 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag>;

        if $z1 == 0 goto label3;

        $r25 = "1";

        goto label4;

     label3:
        $r25 = "0";

     label4:
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f3 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x>;

        $r18 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f3);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $f4 = r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y>;

        $r21 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f4);

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r23;
    }
}
