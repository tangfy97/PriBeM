public class org.jdesktop.swingx.calendar.DateUtils extends java.lang.Object
{
    private static java.util.Calendar CALENDAR;

    public void <init>()
    {
        org.jdesktop.swingx.calendar.DateUtils r0;

        r0 := @this: org.jdesktop.swingx.calendar.DateUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Date endOfDay(java.util.Date)
    {
        java.lang.Throwable $r3;
        java.util.Calendar r0;
        java.util.Date r1, $r2;

        r1 := @parameter0: java.util.Date;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, 23);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 999);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 59);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 59);

        $r2 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        exitmonitor r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.util.Date startOfDay(java.util.Date)
    {
        java.lang.Throwable $r3;
        java.util.Calendar r0;
        java.util.Date r1, $r2;

        r1 := @parameter0: java.util.Date;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 0);

        $r2 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        exitmonitor r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long startOfDayInMillis(long)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        long l0, $l1;

        l0 := @parameter0: long;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 0);

        $l1 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        exitmonitor r0;

     label2:
        return $l1;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long endOfDayInMillis(long)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        long l0, $l1;

        l0 := @parameter0: long;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, 23);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 999);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 59);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 59);

        $l1 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        exitmonitor r0;

     label2:
        return $l1;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.util.Date nextDay(java.util.Date)
    {
        java.util.Date $r0, r1;
        long $l0, $l1;

        r1 := @parameter0: java.util.Date;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long addDays(long,int)>($l0, 1);

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        return $r0;
    }

    public static long addDays(long, int)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        int i1;
        long l0, $l2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, i1);

        $l2 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        exitmonitor r0;

     label2:
        return $l2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long nextDay(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long addDays(long,int)>(l0, 1);

        return $l1;
    }

    public static long nextWeek(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long addDays(long,int)>(l0, 7);

        return $l1;
    }

    public static int getDaysDiff(long, long, boolean)
    {
        java.lang.Throwable $r1;
        long $l1, l3, l4, l5, $l7;
        java.util.Calendar $r0;
        byte $b0, $b2, $b8;
        int i6, $i9, $i10, $i11, $i13;
        boolean z0;

        l3 := @parameter0: long;

        l4 := @parameter1: long;

        z0 := @parameter2: boolean;

        $b0 = l3 cmp l4;

        $i9 = (int) $b0;

        if $i9 <= 0 goto label1;

        l5 = l3;

        l3 = l4;

        l4 = l5;

     label1:
        $r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor $r0;

     label2:
        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>(l3);

        i6 = 0;

     label3:
        $l7 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        $b8 = $l7 cmp l4;

        $i10 = (int) $b8;

        if $i10 >= 0 goto label4;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(5, 1);

        i6 = i6 + 1;

        goto label3;

     label4:
        if z0 == 0 goto label5;

        $l1 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        $b2 = $l1 cmp l4;

        $i11 = (int) $b2;

        if $i11 <= 0 goto label5;

        $i13 = (int) -1;

        i6 = i6 + $i13;

     label5:
        exitmonitor $r0;

     label6:
        return i6;

     label7:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r1;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static int getDaysDiff(long, long)
    {
        int $i2;
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: int getDaysDiff(long,long,boolean)>(l0, l1, 1);

        return $i2;
    }

    public static boolean isFirstOfYear(long)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        int $i1, $i2, $i4;
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        $i4 = (int) -1;

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, $i4);

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        if $i1 == $i2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r1;

     label7:
        return $z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean isFirstOfMonth(long)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        int $i1, $i2, $i4;
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        $i4 = (int) -1;

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, $i4);

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        if $i1 == $i2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r1;

     label7:
        return $z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static long previousDay(long)
    {
        int $i3;
        long l0, $l1;

        l0 := @parameter0: long;

        $i3 = (int) -1;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long addDays(long,int)>(l0, $i3);

        return $l1;
    }

    public static long previousWeek(long)
    {
        int $i3;
        long l0, $l1;

        l0 := @parameter0: long;

        $i3 = (int) -7;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long addDays(long,int)>(l0, $i3);

        return $l1;
    }

    public static long getPreviousDay(long, int)
    {
        int i1, $i4;
        long l0, $l2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i4 = (int) -1;

        $l2 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long getDay(long,int,int)>(l0, i1, $i4);

        return $l2;
    }

    public static long getNextDay(long, int)
    {
        int i1;
        long l0, $l2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long getDay(long,int,int)>(l0, i1, 1);

        return $l2;
    }

    private static long getDay(long, int, int)
    {
        java.lang.Throwable $r1;
        long l0, $l2, $l3;
        java.util.Calendar r0;
        int i1, i4, i5;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(7);

     label2:
        if i5 == i1 goto label3;

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, i4);

        i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(7);

        goto label2;

     label3:
        $l2 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        $l3 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long startOfDayInMillis(long)>($l2);

        exitmonitor r0;

     label4:
        return $l3;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static long getPreviousMonth(long)
    {
        int $i3;
        long l0, $l1;

        l0 := @parameter0: long;

        $i3 = (int) -1;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long incrementMonth(long,int)>(l0, $i3);

        return $l1;
    }

    public static long getNextMonth(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long incrementMonth(long,int)>(l0, 1);

        return $l1;
    }

    private static long incrementMonth(long, int)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        int i1;
        long l0, $l2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(2, i1);

        $l2 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        exitmonitor r0;

     label2:
        return $l2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long getStartOfMonth(long)
    {
        int $i3;
        long l0, $l1;

        l0 := @parameter0: long;

        $i3 = (int) -1;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long getMonth(long,int)>(l0, $i3);

        return $l1;
    }

    public static long getEndOfMonth(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long getMonth(long,int)>(l0, 1);

        return $l1;
    }

    private static long getMonth(long, int)
    {
        java.lang.Throwable $r1;
        long l0, $l2, l3;
        java.util.Calendar r0;
        int i1, $i5, $i7;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $i5 = (int) -1;

        if i1 != $i5 goto label2;

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(5, 1);

        $l2 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        l3 = staticinvoke <org.jdesktop.swingx.calendar.DateUtils: long startOfDayInMillis(long)>($l2);

        goto label3;

     label2:
        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(2, 1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(5, 1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 0);

        $i7 = (int) -1;

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(14, $i7);

        l3 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r1;

     label7:
        return l3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static int getDayOfWeek(long)
    {
        java.lang.Throwable $r1;
        java.util.Calendar r0;
        int $i1;
        long l0;

        l0 := @parameter0: long;

        r0 = <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR>;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(7);

        exitmonitor r0;

     label2:
        return $i1;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.util.Calendar $r0;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        <org.jdesktop.swingx.calendar.DateUtils: java.util.Calendar CALENDAR> = $r0;

        return;
    }
}
