public class org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController extends java.lang.Object implements org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton$Listener, org.waveprotocol.wave.client.editor.toolbar.ButtonUpdater$Controller
{
    private final org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button;
    private final org.waveprotocol.wave.client.editor.EditorContext editor;
    private final org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle style;

    public void <init>(org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton, org.waveprotocol.wave.client.editor.EditorContext, org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle r3;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;
        org.waveprotocol.wave.client.editor.EditorContext r2;
        org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton r1;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        r1 := @parameter0: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.EditorContext;

        r3 := @parameter2: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button> = r1;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext editor> = r2;

        r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle style> = r3;

        return;
    }

    public void onToggledOn()
    {
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: void setParagraphStyle(boolean)>(1);

        return;
    }

    public void onToggledOff()
    {
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: void setParagraphStyle(boolean)>(0);

        return;
    }

    private void setParagraphStyle(boolean)
    {
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r1, $r5;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1 $r4;
        org.waveprotocol.wave.model.document.util.Range $r3;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r2;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: org.waveprotocol.wave.model.document.util.Range getOrderedSelectionRange()>();

        if $r3 == null goto label1;

        $r5 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r4 = new org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController$1: void <init>(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController,org.waveprotocol.wave.model.document.util.Range,boolean)>(r0, $r3, z0);

        interfaceinvoke $r5.<org.waveprotocol.wave.client.editor.EditorContext: void undoableSequence(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public void update(org.waveprotocol.wave.model.document.util.Range)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle $r5;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r1;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r3;
        int $i0, $i1;
        org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton $r2;
        org.waveprotocol.wave.model.document.util.Range r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        r4 := @parameter0: org.waveprotocol.wave.model.document.util.Range;

        $r2 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton button>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.EditorContext: org.waveprotocol.wave.client.editor.content.CMutableDocument getDocument()>();

        $i0 = virtualinvoke r4.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        $i1 = virtualinvoke r4.<org.waveprotocol.wave.model.document.util.Range: int getEnd()>();

        $r5 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle style>;

        $z0 = staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.Paragraph: boolean appliesEntirely(org.waveprotocol.wave.model.document.indexed.LocationMapper,int,int,org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle)>($r3, $i0, $i1, $r5);

        virtualinvoke $r2.<org.waveprotocol.wave.client.widget.toolbar.buttons.ToolbarToggleButton: void setToggledOn(boolean)>($z0);

        return;
    }

    static org.waveprotocol.wave.client.editor.EditorContext access$000(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController)
    {
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;
        org.waveprotocol.wave.client.editor.EditorContext $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.EditorContext editor>;

        return $r1;
    }

    static org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle access$100(org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle $r1;
        org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController r0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController;

        $r1 = r0.<org.waveprotocol.wave.client.editor.toolbar.ParagraphApplicationController: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle style>;

        return $r1;
    }
}
