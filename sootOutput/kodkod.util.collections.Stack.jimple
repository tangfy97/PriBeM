public abstract class kodkod.util.collections.Stack extends java.lang.Object implements java.lang.Iterable
{

    protected void <init>()
    {
        kodkod.util.collections.Stack r0;

        r0 := @this: kodkod.util.collections.Stack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int size();

    public abstract java.lang.Object push(java.lang.Object);

    public abstract java.lang.Object pop();

    public abstract java.lang.Object peek();

    public abstract int search(java.lang.Object);

    public abstract boolean empty();

    public abstract java.util.Iterator iterator();

    static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Iterator $r3, $r4;
        kodkod.util.collections.Stack r0, r2;
        int $i0, $i1;
        java.lang.Object r1, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: kodkod.util.collections.Stack;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof kodkod.util.collections.Stack;

        if $z0 == 0 goto label5;

        r2 = (kodkod.util.collections.Stack) r1;

        $i0 = virtualinvoke r0.<kodkod.util.collections.Stack: int size()>();

        $i1 = virtualinvoke r2.<kodkod.util.collections.Stack: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<kodkod.util.collections.Stack: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r2.<kodkod.util.collections.Stack: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z2 = staticinvoke <kodkod.util.collections.Stack: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return 1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        java.util.Iterator $r1;
        int $i0, i1;
        kodkod.util.collections.Stack r0;
        java.lang.Object $r2, r3;
        boolean $z0;

        r0 := @this: kodkod.util.collections.Stack;

        i1 = 0;

        $r1 = virtualinvoke r0.<kodkod.util.collections.Stack: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Object) $r2;

        if r3 == null goto label2;

        $i0 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        i1 = i1 + $i0;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return i1;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r2;
        kodkod.util.collections.Stack r1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: kodkod.util.collections.Stack;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("[ ");

        $r2 = virtualinvoke r1.<kodkod.util.collections.Stack: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
