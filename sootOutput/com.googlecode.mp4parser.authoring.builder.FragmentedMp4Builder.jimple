public class com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.Mp4Builder
{
    private static final java.util.logging.Logger LOG;
    protected com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/builder/FragmentedMp4Builder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG> = $r2;

        return;
    }

    public void <init>()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Date getDate()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        java.util.Date $r0;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>()>();

        return $r0;
    }

    public java.util.List getAllowedHandlers()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r2;
        java.lang.String[] $r0;
        java.util.List $r1;

        r2 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "soun";

        $r0[1] = "vide";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public com.coremedia.iso.boxes.Box createFtyp(com.googlecode.mp4parser.authoring.Movie)
    {
        com.coremedia.iso.boxes.FileTypeBox $r1;
        com.googlecode.mp4parser.authoring.Movie r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r2;
        java.util.LinkedList $r0;

        r2 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r3 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("isom");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("iso2");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("avc1");

        $r1 = new com.coremedia.iso.boxes.FileTypeBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.FileTypeBox: void <init>(java.lang.String,long,java.util.List)>("isom", 0L, $r0);

        return $r1;
    }

    protected java.util.List sortTracksInSequence(java.util.List, int, java.util.Map)
    {
        java.util.List r4;
        java.util.Map r3;
        int i0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r2;
        java.util.LinkedList $r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1 $r1;

        r2 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r4 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r3 := @parameter2: java.util.Map;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>(r4);

        $r1 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1;

        specialinvoke $r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder,java.util.Map,int)>(r2, r3, i0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r1);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createPdin(com.googlecode.mp4parser.authoring.Movie)
    {
        byte $b2, $b11, $b12;
        boolean $z0, $z1;
        com.coremedia.iso.boxes.ProgressiveDownloadInformationBox $r16;
        com.googlecode.mp4parser.authoring.Sample $r9, r15;
        java.util.List $r3, $r7;
        com.googlecode.mp4parser.authoring.Track r14;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r13;
        long $l0, $l1, $l4, $l6, $l7, $l8, $l9, $l10, $l13, $l14, $l15, l16, l17, l18, l20, $l21;
        com.coremedia.iso.boxes.ProgressiveDownloadInformationBox$Entry $r18;
        int $i3, $i5, i19, $i22, $i23, $i24;
        java.util.LinkedList $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, d12;
        java.util.Iterator $r4, $r10;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.Object $r5, $r8, $r11;
        com.googlecode.mp4parser.authoring.TrackMetaData $r6;

        r13 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r16 = new com.coremedia.iso.boxes.ProgressiveDownloadInformationBox;

        specialinvoke $r16.<com.coremedia.iso.boxes.ProgressiveDownloadInformationBox: void <init>()>();

        $r17 = new java.util.LinkedList;

        specialinvoke $r17.<java.util.LinkedList: void <init>()>();

        d10 = 0.0;

        l16 = 0L;

        $r3 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label08;

     label01:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.googlecode.mp4parser.authoring.Track) $r5;

        $l0 = interfaceinvoke r14.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $r6 = interfaceinvoke r14.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l17 = $l0 / $l1;

        $b2 = l17 cmp l16;

        $i22 = (int) $b2;

        if $i22 <= 0 goto label02;

        l16 = l17;

     label02:
        $r7 = interfaceinvoke r14.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i3 >= 10000 goto label05;

        $r10 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.googlecode.mp4parser.authoring.Sample) $r11;

        $l9 = interfaceinvoke r15.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        $d1 = (double) $l9;

        d10 = d10 + $d1;

     label04:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label03;

        goto label08;

     label05:
        l18 = 0L;

        i19 = 0;

        goto label07;

     label06:
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i19);

        $r9 = (com.googlecode.mp4parser.authoring.Sample) $r8;

        $l4 = interfaceinvoke $r9.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        l18 = l18 + $l4;

        i19 = i19 + 1;

     label07:
        if i19 < 10000 goto label06;

        $i5 = interfaceinvoke $r7.<java.util.List: int size()>();

        $l6 = (long) $i5;

        $l7 = l18 * $l6;

        $l8 = $l7 / 10000L;

        $d0 = (double) $l8;

        d10 = d10 + $d0;

     label08:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label01;

        d11 = d10 * 1.2;

        $d2 = (double) l16;

        d12 = d11 / $d2;

        l20 = 10000L;

     label09:
        $d3 = (double) l16;

        $d5 = d12 * $d3;

        $d4 = (double) l20;

        $d7 = $d5 / $d4;

        $d6 = (double) l16;

        $d8 = $d7 - $d6;

        $l10 = staticinvoke <java.lang.Math: long round(double)>($d8);

        $l13 = $l10 * 1000L;

        $r18 = new com.coremedia.iso.boxes.ProgressiveDownloadInformationBox$Entry;

        $l14 = l20;

        $b11 = $l13 cmp 0L;

        $i23 = (int) $b11;

        if $i23 <= 0 goto label10;

        $l21 = $l13 + 3000L;

        goto label11;

     label10:
        $l21 = 0L;

     label11:
        specialinvoke $r18.<com.coremedia.iso.boxes.ProgressiveDownloadInformationBox$Entry: void <init>(long,long)>($l14, $l21);

        virtualinvoke $r17.<java.util.LinkedList: boolean add(java.lang.Object)>($r18);

        $l15 = l20 * 2L;

        l20 = $l15;

        $d9 = (double) $l15;

        $b12 = d12 cmpl $d9;

        $i24 = (int) $b12;

        if $i24 > 0 goto label09;

        virtualinvoke $r16.<com.coremedia.iso.boxes.ProgressiveDownloadInformationBox: void setEntries(java.util.List)>($r17);

        return $r16;
    }

    protected java.util.List createMoofMdat(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r13, r19;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r6;
        java.util.HashMap $r1;
        long[] $r8, $r18;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r7;
        int $i0, i1, i2, i3;
        java.lang.String $r17;
        java.util.LinkedList $r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4, $r11;
        java.util.List $r3, $r9, $r10, $r14, $r16;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.Object $r5, $r12, $r15;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        i1 = 0;

        $r3 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.googlecode.mp4parser.authoring.Track) $r5;

        $r7 = r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        $r8 = interfaceinvoke $r7.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)>(r19);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r8);

        $i0 = lengthof $r8;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i0);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        i2 = 1;

        i3 = 0;

        goto label7;

     label3:
        $r9 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r10 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List sortTracksInSequence(java.util.List,int,java.util.Map)>($r9, i3, $r1);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label4:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.googlecode.mp4parser.authoring.Track) $r12;

        $r14 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getAllowedHandlers()>();

        $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r16 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getAllowedHandlers()>();

        $r17 = interfaceinvoke r13.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z2 = interfaceinvoke $r16.<java.util.List: boolean contains(java.lang.Object)>($r17);

        if $z2 == 0 goto label6;

     label5:
        $r15 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r13);

        $r18 = (long[]) $r15;

        i2 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: int createFragment(java.util.List,com.googlecode.mp4parser.authoring.Track,long[],int,int)>($r0, r13, $r18, i3, i2);

     label6:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label4;

        i3 = i3 + 1;

     label7:
        if i3 < i1 goto label3;

        return $r0;
    }

    protected int createFragment(java.util.List, com.googlecode.mp4parser.authoring.Track, long[], int, int)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r4;
        long l2, $l11;
        long[] r0;
        byte $b7;
        int i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, i10;
        com.coremedia.iso.boxes.Box $r5, $r6;
        java.util.List $r2, r3;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r3 := @parameter0: java.util.List;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter2: long[];

        i0 := @parameter3: int;

        i10 := @parameter4: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        l2 = r0[i0];

        $i4 = i0 + 1;

        $i3 = lengthof r0;

        if $i4 >= $i3 goto label1;

        $i9 = i0 + 1;

        $l11 = r0[$i9];

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i5 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i6 = $i5 + 1;

        $l11 = (long) $i6;

     label2:
        $b7 = l2 cmp $l11;

        if $b7 == 0 goto label3;

        $r5 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMoof(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l2, $l11, r1, i10);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i8 = i10;

        i10 = i10 + 1;

        $r6 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdat(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l2, $l11, r1, $i8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        return i10;
    }

    public com.coremedia.iso.boxes.Container build(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r14, r15;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r5;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r6;
        int $i1;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl $r23;
        java.lang.String $r4, $r12;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10, $r20;
        com.coremedia.iso.boxes.Box $r8, $r17, $r18, r21;
        java.util.logging.Logger $r1;
        java.util.List $r9, $r19;
        com.googlecode.mp4parser.BasicContainer $r24;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.StringBuilder $r3, $r22;
        java.lang.Object $r7, $r11;

        r5 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r1 = <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating movie ");

        $r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void fine(java.lang.String)>($r4);

        $r6 = r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        if $r6 != null goto label4;

        r14 = null;

        $r9 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.googlecode.mp4parser.authoring.Track) $r11;

        $r12 = interfaceinvoke r15.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("vide");

        if $z2 == 0 goto label2;

        r14 = r15;

        goto label3;

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        $r23 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        $i1 = (int) -1;

        specialinvoke $r23.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: void <init>(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track,int)>(r2, r14, $i1);

        r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = $r23;

     label4:
        $r24 = new com.googlecode.mp4parser.BasicContainer;

        specialinvoke $r24.<com.googlecode.mp4parser.BasicContainer: void <init>()>();

        $r17 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createFtyp(com.googlecode.mp4parser.authoring.Movie)>(r2);

        virtualinvoke $r24.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r17);

        $r18 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMoov(com.googlecode.mp4parser.authoring.Movie)>(r2);

        virtualinvoke $r24.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r18);

        $r19 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List createMoofMdat(com.googlecode.mp4parser.authoring.Movie)>(r2);

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r7 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.coremedia.iso.boxes.Box) $r7;

        virtualinvoke $r24.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>(r21);

     label6:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        $r8 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMfra(com.googlecode.mp4parser.authoring.Movie,com.coremedia.iso.boxes.Container)>(r2, $r24);

        virtualinvoke $r24.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r8);

        return $r24;
    }

    protected com.coremedia.iso.boxes.Box createMdat(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        int i2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long l0, l1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat $r0;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r0 = new com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat;

        specialinvoke $r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder$1Mdat: void <init>(com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder,long,long,com.googlecode.mp4parser.authoring.Track,int)>(r1, l0, l1, r2, i2);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createTfhd(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r4;
        long $l0, l1, l2;
        com.coremedia.iso.boxes.fragment.SampleFlags $r1;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox $r0;
        int i3;
        com.googlecode.mp4parser.authoring.TrackMetaData $r3;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l1 := @parameter0: long;

        l2 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i3 := @parameter3: int;

        $r0 = new com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void <init>()>();

        $r1 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r1.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>($r1);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setBaseDataOffset(long)>(-1L);

        $r3 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setTrackId(long)>($l0);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMfhd(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox $r0;
        int i0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long $l1, l2, l3;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l2 := @parameter0: long;

        l3 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i0 := @parameter3: int;

        $r0 = new com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox: void <init>()>();

        $l1 = (long) i0;

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentHeaderBox: void setSequenceNumber(long)>($l1);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createTraf(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.Box $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox $r0;
        long l0, l1;
        com.coremedia.iso.boxes.fragment.TrackRunBox $r5;
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox $r4;
        int i2;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r0 = new com.coremedia.iso.boxes.fragment.TrackFragmentBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void <init>()>();

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTfhd(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r2, i2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r3);

        $r4 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox createTfdt(long,com.googlecode.mp4parser.authoring.Track)>(l0, r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        $r5 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.fragment.TrackRunBox createTrun(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r2, i2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        return $r0;
    }

    protected java.util.List getSamples(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        long l0, l2;
        java.util.List $r1, $r2;
        int $i1, $i3, $i4, $i5, i6;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        r0 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i6 := @parameter3: int;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        $i3 = $i1 - 1;

        $i4 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l2);

        $i5 = $i4 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>($i3, $i5);

        return $r2;
    }

    protected long[] getSampleSizes(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Sample $r5;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        long l0, l1, $l5;
        java.util.List $r2;
        long[] r3;
        int i2, $i3, $i4, i6;
        java.lang.Object $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.List getSamples(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r1, i2);

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (long)[$i3];

        i6 = 0;

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i6);

        $r5 = (com.googlecode.mp4parser.authoring.Sample) $r4;

        $l5 = interfaceinvoke $r5.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        r3[i6] = $l5;

        i6 = i6 + 1;

     label2:
        $i4 = lengthof r3;

        if i6 < $i4 goto label1;

        return r3;
    }

    protected com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox createTfdt(long, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        long l0, $l1, $l3, l4;
        com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox $r4;
        long[] $r2;
        byte $b2;
        int i5, $i6;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r4 = new com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: void <init>()>();

        virtualinvoke $r4.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: void setVersion(int)>(1);

        l4 = 0L;

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        i5 = 1;

        goto label2;

     label1:
        $l3 = $r2[i5];

        l4 = l4 + $l3;

        i5 = i5 + 1;

     label2:
        $l1 = (long) i5;

        $b2 = $l1 cmp l0;

        $i6 = (int) $b2;

        if $i6 < 0 goto label1;

        virtualinvoke $r4.<com.coremedia.iso.boxes.fragment.TrackFragmentBaseMediaDecodeTimeBox: void setBaseMediaDecodeTime(long)>(l4);

        return $r4;
    }

    protected com.coremedia.iso.boxes.fragment.TrackRunBox createTrun(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        byte $b5, $b7, $b14, $b33;
        com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry r20;
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry $r7, $r11, $r12, $r23;
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry[] r6, $r24, $r26;
        com.googlecode.mp4parser.authoring.Track r2;
        java.lang.Object[] $r25;
        long l0, l1, $l3, $l6, $l11, $l13, $l19, $l20, $l26, l31, l32, $l35, $l36, $l37, $l39;
        java.util.ArrayList $r30;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry $r31;
        boolean $z0, $z1, $z2, z4, $z5, $z6;
        java.util.List $r5, $r8, $r14, $r17, $r18, $r22;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        com.coremedia.iso.boxes.fragment.TrackRunBox $r29;
        long[] $r3, $r9, $r15, $r16, $r21, $r27, $r28;
        int i2, $i4, $i8, $i9, $i10, $i12, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i25, $i27, $i28, i29, $i30, i34, $i38, $i40, $i42, $i43, $i44;
        com.coremedia.iso.boxes.fragment.SampleFlags $r32;
        java.lang.Object $r19;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r29 = new com.coremedia.iso.boxes.fragment.TrackRunBox;

        specialinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void <init>()>();

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long[] getSampleSizes(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r2, i2);

        virtualinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleDurationPresent(boolean)>(1);

        virtualinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleSizePresent(boolean)>(1);

        $r30 = new java.util.ArrayList;

        $l3 = l1 - l0;

        $i4 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l3);

        specialinvoke $r30.<java.util.ArrayList: void <init>(int)>($i4);

        $r5 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        i29 = 0;

        if $r5 == null goto label01;

        $i27 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i27 <= 0 goto label01;

        $i28 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r24 = newarray (com.coremedia.iso.boxes.CompositionTimeToSample$Entry)[$i28];

        $r25 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        $r26 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry[]) $r25;

        goto label02;

     label01:
        $r26 = null;

     label02:
        r6 = $r26;

        if $r26 == null goto label03;

        $r23 = $r26[0];

        $i30 = virtualinvoke $r23.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        goto label04;

     label03:
        $i42 = (int) -1;

        $i30 = $i42;

     label04:
        $l26 = (long) $i30;

        l31 = $l26;

        $b5 = $l26 cmp 0L;

        $i43 = (int) $b5;

        if $i43 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        virtualinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleCompositionTimeOffsetPresent(boolean)>($z2);

        l32 = 1L;

        goto label09;

     label07:
        if r6 == null goto label08;

        $l6 = l31 - 1L;

        l31 = $l6;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label08;

        $i8 = lengthof r6;

        $i9 = $i8 - i29;

        if $i9 <= 1 goto label08;

        i29 = i29 + 1;

        $r7 = r6[i29];

        $i10 = virtualinvoke $r7.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        l31 = (long) $i10;

     label08:
        l32 = l32 + 1L;

     label09:
        $b33 = l32 cmp l0;

        $i44 = (int) $b33;

        if $i44 < 0 goto label07;

        $r8 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r8 == null goto label10;

        $r22 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z1 = interfaceinvoke $r22.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label12;

     label10:
        $r9 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r9 == null goto label11;

        $r21 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i25 = lengthof $r21;

        if $i25 != 0 goto label12;

     label11:
        $z6 = 0;

        $z5 = 0;

        goto label13;

     label12:
        $z6 = 1;

        $z5 = 1;

     label13:
        z4 = $z6;

        virtualinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setSampleFlagsPresent(boolean)>($z5);

        i34 = 0;

        goto label20;

     label14:
        $r31 = new com.coremedia.iso.boxes.fragment.TrackRunBox$Entry;

        specialinvoke $r31.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void <init>()>();

        $l11 = $r3[i34];

        virtualinvoke $r31.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleSize(long)>($l11);

        if z4 == 0 goto label18;

        $r32 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        $r14 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r14 == null goto label15;

        $r17 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z0 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label15;

        $r18 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i34);

        r20 = (com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry) $r19;

        $i22 = virtualinvoke r20.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleDependsOn()>();

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>($i22);

        $i23 = virtualinvoke r20.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleIsDependentOn()>();

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDependedOn(int)>($i23);

        $i24 = virtualinvoke r20.<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleHasRedundancy()>();

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleHasRedundancy(int)>($i24);

     label15:
        $r27 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r27 == null goto label17;

        $r15 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i18 = lengthof $r15;

        if $i18 <= 0 goto label17;

        $r16 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $l19 = (long) i34;

        $l20 = l0 + $l19;

        $i21 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r16, $l20);

        if $i21 < 0 goto label16;

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDifferenceSample(boolean)>(0);

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(2);

        goto label17;

     label16:
        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDifferenceSample(boolean)>(1);

        virtualinvoke $r32.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(1);

     label17:
        virtualinvoke $r31.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>($r32);

     label18:
        $r28 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $l35 = (long) i34;

        $l36 = l0 + $l35;

        $l37 = $l36 - 1L;

        $i38 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l37);

        $l39 = $r28[$i38];

        virtualinvoke $r31.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleDuration(long)>($l39);

        if r6 == null goto label19;

        $r11 = r6[i29];

        $i12 = virtualinvoke $r11.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        virtualinvoke $r31.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void setSampleCompositionTimeOffset(int)>($i12);

        $l13 = l31 - 1L;

        l31 = $l13;

        $b14 = $l13 cmp 0L;

        if $b14 != 0 goto label19;

        $i15 = lengthof r6;

        $i16 = $i15 - i29;

        if $i16 <= 1 goto label19;

        i29 = i29 + 1;

        $r12 = r6[i29];

        $i17 = virtualinvoke $r12.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        l31 = (long) $i17;

     label19:
        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r31);

        i34 = i34 + 1;

     label20:
        $i40 = lengthof $r3;

        if i34 < $i40 goto label14;

        virtualinvoke $r29.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setEntries(java.util.List)>($r30);

        return $r29;
    }

    protected com.coremedia.iso.boxes.Box createMoof(long, long, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.Box $r3, $r4;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long l0, l1, $l3, $l4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r7;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox $r0;
        java.util.List $r5;
        int i2, $i5;
        java.lang.Object $r6;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: com.googlecode.mp4parser.authoring.Track;

        i2 := @parameter3: int;

        $r0 = new com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void <init>()>();

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMfhd(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r2, i2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r3);

        $r4 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTraf(long,long,com.googlecode.mp4parser.authoring.Track,int)>(l0, l1, r2, i2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        $r5 = virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getTrackRunBoxes()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (com.coremedia.iso.boxes.fragment.TrackRunBox) $r6;

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setDataOffset(int)>(1);

        $l3 = virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: long getSize()>();

        $l4 = 8L + $l3;

        $i5 = (int) $l4;

        virtualinvoke r7.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setDataOffset(int)>($i5);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMvhd(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r8;
        java.util.Date $r2, $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        long $l0, $l1, $l3, l4, $l5;
        com.coremedia.iso.boxes.MovieHeaderBox $r11;
        byte $b2;
        int $i6;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.List $r5;
        com.googlecode.mp4parser.authoring.Movie r4;
        java.lang.Object $r7;
        com.googlecode.mp4parser.authoring.TrackMetaData $r9, $r10;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r4 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r11 = new com.coremedia.iso.boxes.MovieHeaderBox;

        specialinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void <init>()>();

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setVersion(int)>(1);

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.Date getDate()>();

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setCreationTime(java.util.Date)>($r2);

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.Date getDate()>();

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setModificationTime(java.util.Date)>($r3);

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setDuration(long)>(0L);

        $l0 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: long getTimescale()>();

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setTimescale(long)>($l0);

        l4 = 0L;

        $r5 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.googlecode.mp4parser.authoring.Track) $r7;

        $r9 = interfaceinvoke r8.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b2 = l4 cmp $l1;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label2;

        $r10 = interfaceinvoke r8.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l5 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        goto label3;

     label2:
        $l5 = l4;

     label3:
        l4 = $l5;

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $l3 = l4 + 1L;

        virtualinvoke $r11.<com.coremedia.iso.boxes.MovieHeaderBox: void setNextTrackId(long)>($l3);

        return $r11;
    }

    protected com.coremedia.iso.boxes.Box createMoov(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r7;
        java.util.Iterator $r5;
        com.coremedia.iso.boxes.Box $r3, $r8, $r9;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        com.coremedia.iso.boxes.MovieBox $r0;
        java.util.List $r4;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.Object $r6;
        boolean $z0;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new com.coremedia.iso.boxes.MovieBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.MovieBox: void <init>()>();

        $r3 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMvhd(com.googlecode.mp4parser.authoring.Movie)>(r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r3);

        $r4 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.googlecode.mp4parser.authoring.Track) $r6;

        $r8 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTrak(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r7, r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r8);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMvex(com.googlecode.mp4parser.authoring.Movie)>(r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r9);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createTfra(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.Container)
    {
        byte $b2, $b6;
        com.coremedia.iso.boxes.fragment.MovieFragmentBox $r13;
        com.googlecode.mp4parser.authoring.Track r7;
        long $l0, $l1, $l3, $l4, $l5, $l10, $l11, $l12, $l17, l18, l19, $l23;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox $r17;
        java.lang.String $r27;
        com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox $r0;
        java.lang.RuntimeException $r28;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox $r6, r35;
        com.googlecode.mp4parser.authoring.TrackMetaData $r8, $r18, $r33;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r25;
        com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry $r26, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.coremedia.iso.boxes.fragment.TrackFragmentBox r16;
        com.coremedia.iso.boxes.Container r2;
        java.util.List $r3, $r9, $r14, $r19, $r23, $r29, $r30, $r38;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r34;
        com.coremedia.iso.boxes.fragment.TrackRunBox r22;
        int $i7, $i8, $i9, $i13, $i14, $i15, $i16, i20, i21, i22, $i24, $i25, $i26;
        java.util.LinkedList $r1, $r20;
        java.util.Iterator $r4, $r10;
        com.coremedia.iso.boxes.Box r12, r36;
        com.coremedia.iso.boxes.fragment.SampleFlags r37;
        java.lang.Object $r5, $r11, $r15, $r21, $r24, $r31;

        r34 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r7 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.coremedia.iso.boxes.Container;

        $r0 = new com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setVersion(int)>(1);

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r35 = null;

        $r3 = staticinvoke <com.googlecode.mp4parser.util.Path: java.util.List getPaths(com.coremedia.iso.boxes.Container,java.lang.String)>(r2, "moov/mvex/trex");

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label02;

     label01:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.coremedia.iso.boxes.Box) $r5;

        $r6 = (com.coremedia.iso.boxes.fragment.TrackExtendsBox) r36;

        $l0 = virtualinvoke $r6.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getTrackId()>();

        $r8 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label02;

        r35 = (com.coremedia.iso.boxes.fragment.TrackExtendsBox) r36;

     label02:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label01;

        l18 = 0L;

        l19 = 0L;

        $r9 = interfaceinvoke r2.<com.coremedia.iso.boxes.Container: java.util.List getBoxes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        goto label20;

     label03:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.coremedia.iso.boxes.Box) $r11;

        $z0 = r12 instanceof com.coremedia.iso.boxes.fragment.MovieFragmentBox;

        if $z0 == 0 goto label19;

        $r13 = (com.coremedia.iso.boxes.fragment.MovieFragmentBox) r12;

        $r14 = virtualinvoke $r13.<com.coremedia.iso.boxes.fragment.MovieFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/fragment/TrackFragmentBox;");

        i20 = 0;

        goto label18;

     label04:
        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i20);

        r16 = (com.coremedia.iso.boxes.fragment.TrackFragmentBox) $r15;

        $r17 = virtualinvoke r16.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>();

        $l4 = virtualinvoke $r17.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>();

        $r18 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l5 = virtualinvoke $r18.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label17;

        $r19 = virtualinvoke r16.<com.coremedia.iso.boxes.fragment.TrackFragmentBox: java.util.List getBoxes(java.lang.Class)>(class "Lcom/coremedia/iso/boxes/fragment/TrackRunBox;");

        i21 = 0;

        goto label16;

     label05:
        $r20 = new java.util.LinkedList;

        specialinvoke $r20.<java.util.LinkedList: void <init>()>();

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i21);

        r22 = (com.coremedia.iso.boxes.fragment.TrackRunBox) $r21;

        i22 = 0;

        goto label13;

     label06:
        $r23 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i22);

        r25 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r24;

        if i22 != 0 goto label07;

        $z3 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isFirstSampleFlagsPresent()>();

        if $z3 == 0 goto label07;

        r37 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags getFirstSampleFlags()>();

        goto label09;

     label07:
        $z1 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleFlagsPresent()>();

        if $z1 == 0 goto label08;

        r37 = virtualinvoke r25.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags getSampleFlags()>();

        goto label09;

     label08:
        r37 = virtualinvoke r35.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()>();

     label09:
        if r37 != null goto label10;

        $r27 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("vide");

        if $z2 == 0 goto label10;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot find SampleFlags for video track but it\'s required to build tfra");

        throw $r28;

     label10:
        if r37 == null goto label11;

        $i13 = virtualinvoke r37.<com.coremedia.iso.boxes.fragment.SampleFlags: int getSampleDependsOn()>();

        if $i13 != 2 goto label12;

     label11:
        $r26 = new com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry;

        $i7 = i20 + 1;

        $l12 = (long) $i7;

        $i8 = i21 + 1;

        $l11 = (long) $i8;

        $i9 = i22 + 1;

        $l10 = (long) $i9;

        specialinvoke $r26.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry: void <init>(long,long,long,long,long)>(l19, l18, $l12, $l11, $l10);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r26);

     label12:
        $l23 = virtualinvoke r25.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleDuration()>();

        l19 = l19 + $l23;

        i22 = i22 + 1;

     label13:
        $r38 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i24 = interfaceinvoke $r38.<java.util.List: int size()>();

        if i22 < $i24 goto label06;

        $i14 = interfaceinvoke $r20.<java.util.List: int size()>();

        $r29 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i15 = interfaceinvoke $r29.<java.util.List: int size()>();

        if $i14 != $i15 goto label14;

        $r30 = virtualinvoke r22.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>();

        $i16 = interfaceinvoke $r30.<java.util.List: int size()>();

        if $i16 <= 0 goto label14;

        $r31 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        $r32 = (com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox$Entry) $r31;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label15;

     label14:
        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r20);

     label15:
        i21 = i21 + 1;

     label16:
        $i25 = interfaceinvoke $r19.<java.util.List: int size()>();

        if i21 < $i25 goto label05;

     label17:
        i20 = i20 + 1;

     label18:
        $i26 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i20 < $i26 goto label04;

     label19:
        $l3 = interfaceinvoke r12.<com.coremedia.iso.boxes.Box: long getSize()>();

        l18 = l18 + $l3;

     label20:
        $z5 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label03;

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setEntries(java.util.List)>($r1);

        $r33 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l17 = virtualinvoke $r33.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackFragmentRandomAccessBox: void setTrackId(long)>($l17);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMfra(com.googlecode.mp4parser.authoring.Movie, com.coremedia.iso.boxes.Container)
    {
        com.googlecode.mp4parser.authoring.Track r9;
        java.util.Iterator $r3;
        com.coremedia.iso.boxes.Box $r7;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r5;
        long $l0;
        com.coremedia.iso.boxes.Container r6;
        java.util.List $r2;
        com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox $r0;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox $r8;
        java.lang.Object $r4;
        boolean $z0;

        r5 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r6 := @parameter1: com.coremedia.iso.boxes.Container;

        $r0 = new com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void <init>()>();

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.googlecode.mp4parser.authoring.Track) $r4;

        $r7 = virtualinvoke r5.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTfra(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.Container)>(r9, r6);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void addBox(com.coremedia.iso.boxes.Box)>($r7);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r8 = new com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox;

        specialinvoke $r8.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: void addBox(com.coremedia.iso.boxes.Box)>($r8);

        $l0 = virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessBox: long getSize()>();

        virtualinvoke $r8.<com.coremedia.iso.boxes.fragment.MovieFragmentRandomAccessOffsetBox: void setMfraSize(long)>($l0);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createTrex(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r8;
        long $l0;
        com.coremedia.iso.boxes.fragment.SampleFlags $r3;
        com.coremedia.iso.boxes.fragment.TrackExtendsBox $r0;
        com.googlecode.mp4parser.authoring.Movie r9;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;
        java.lang.String $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r8 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r9 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new com.coremedia.iso.boxes.fragment.TrackExtendsBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void <init>()>();

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setTrackId(long)>($l0);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleDescriptionIndex(long)>(1L);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleDuration(long)>(0L);

        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleSize(long)>(0L);

        $r3 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r3.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>()>();

        $r4 = "soun";

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = "subt";

        $r7 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke $r3.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleDependsOn(int)>(2);

        virtualinvoke $r3.<com.coremedia.iso.boxes.fragment.SampleFlags: void setSampleIsDependedOn(int)>(2);

     label2:
        virtualinvoke $r0.<com.coremedia.iso.boxes.fragment.TrackExtendsBox: void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)>($r3);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMvex(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r11, r12;
        com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox $r14;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r6;
        long $l0, $l1;
        byte $b2;
        int $i3;
        boolean $z0, $z1;
        com.coremedia.iso.boxes.fragment.MovieExtendsBox $r13;
        java.util.Iterator $r4, $r8;
        com.coremedia.iso.boxes.Box $r10;
        java.util.List $r3, $r7;
        com.googlecode.mp4parser.authoring.Movie r2;
        java.lang.Object $r5, $r9;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r13 = new com.coremedia.iso.boxes.fragment.MovieExtendsBox;

        specialinvoke $r13.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void <init>()>();

        $r14 = new com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox;

        specialinvoke $r14.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: void <init>()>();

        virtualinvoke $r14.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: void setVersion(int)>(1);

        $r3 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.googlecode.mp4parser.authoring.Track) $r5;

        $l0 = specialinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: long getTrackDuration(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r11);

        $l1 = virtualinvoke $r14.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: long getFragmentDuration()>();

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        virtualinvoke $r14.<com.coremedia.iso.boxes.fragment.MovieExtendsHeaderBox: void setFragmentDuration(long)>($l0);

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r13.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void addBox(com.coremedia.iso.boxes.Box)>($r14);

        $r7 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $r10 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTrex(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r12);

        virtualinvoke $r13.<com.coremedia.iso.boxes.fragment.MovieExtendsBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return $r13;
    }

    protected com.coremedia.iso.boxes.Box createTkhd(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        java.util.Date $r4, $r9;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r8;
        long $l2;
        int $i0, $i1;
        double $d0, $d1;
        com.coremedia.iso.boxes.TrackHeaderBox $r0;
        com.googlecode.mp4parser.authoring.Movie r12;
        float $f0;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2, $r3, $r5, $r6, $r7, $r10, $r11;

        r8 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r12 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new com.coremedia.iso.boxes.TrackHeaderBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setVersion(int)>(1);

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setFlags(int)>(7);

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i0 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: int getGroup()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setAlternateGroup(int)>($i0);

        $r3 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r4 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setCreationTime(java.util.Date)>($r4);

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setDuration(long)>(0L);

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d0 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: double getHeight()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setHeight(double)>($d0);

        $r6 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d1 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: double getWidth()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setWidth(double)>($d1);

        $r7 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i1 = virtualinvoke $r7.<com.googlecode.mp4parser.authoring.TrackMetaData: int getLayer()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setLayer(int)>($i1);

        $r9 = virtualinvoke r8.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.Date getDate()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setModificationTime(java.util.Date)>($r9);

        $r10 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l2 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setTrackId(long)>($l2);

        $r11 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $f0 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.TrackMetaData: float getVolume()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackHeaderBox: void setVolume(float)>($f0);

        return $r0;
    }

    private long getTrackDuration(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        long $l0, $l1, $l2, $l3, $l4;
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r0 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $l0 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $l1 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: long getTimescale()>();

        $l2 = $l0 * $l1;

        $r2 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l4 = $l2 / $l3;

        return $l4;
    }

    protected com.coremedia.iso.boxes.Box createMdhd(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.MediaHeaderBox $r0;
        java.util.Date $r3, $r5;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r4;
        long $l0;
        com.googlecode.mp4parser.authoring.Movie r9;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2, $r6, $r7;
        java.lang.String $r8;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r9 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r1 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new com.coremedia.iso.boxes.MediaHeaderBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void <init>()>();

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r3 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void setCreationTime(java.util.Date)>($r3);

        $r5 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.Date getDate()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void setModificationTime(java.util.Date)>($r5);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void setDuration(long)>(0L);

        $r6 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void setTimescale(long)>($l0);

        $r7 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r8 = virtualinvoke $r7.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.String getLanguage()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaHeaderBox: void setLanguage(java.lang.String)>($r8);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.coremedia.iso.boxes.SampleTableBox $r0;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.SampleSizeBox $r5;
        com.coremedia.iso.boxes.SampleToChunkBox $r4;
        com.coremedia.iso.boxes.TimeToSampleBox $r3;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;
        com.coremedia.iso.boxes.StaticChunkOffsetBox $r6;
        com.googlecode.mp4parser.authoring.Movie r7;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r7 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new com.coremedia.iso.boxes.SampleTableBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void <init>()>();

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: void createStsd(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        $r3 = new com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.TimeToSampleBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r3);

        $r4 = new com.coremedia.iso.boxes.SampleToChunkBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.SampleToChunkBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        $r5 = new com.coremedia.iso.boxes.SampleSizeBox;

        specialinvoke $r5.<com.coremedia.iso.boxes.SampleSizeBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = new com.coremedia.iso.boxes.StaticChunkOffsetBox;

        specialinvoke $r6.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        return $r0;
    }

    protected void createStsd(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.coremedia.iso.boxes.SampleTableBox r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        return;
    }

    protected com.coremedia.iso.boxes.Box createMinf(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.MediaInformationBox $r0;
        com.coremedia.iso.boxes.Box $r2, $r6;
        com.googlecode.mp4parser.authoring.Movie r4;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        com.coremedia.iso.boxes.DataInformationBox $r5;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r4 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new com.coremedia.iso.boxes.MediaInformationBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.MediaInformationBox: void <init>()>();

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        $r5 = virtualinvoke r3.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.DataInformationBox createDinf(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r4, r1);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = virtualinvoke r3.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r4, r1);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMdiaHdlr(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.Movie r4;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        com.coremedia.iso.boxes.HandlerBox $r0;
        java.lang.String $r2;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r4 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new com.coremedia.iso.boxes.HandlerBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.HandlerBox: void <init>()>();

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.HandlerBox: void setHandlerType(java.lang.String)>($r2);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createMdia(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r3;
        com.coremedia.iso.boxes.MediaBox $r0;
        com.googlecode.mp4parser.authoring.Movie r2;
        com.coremedia.iso.boxes.Box $r4, $r5, $r6;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r1;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r3 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new com.coremedia.iso.boxes.MediaBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.MediaBox: void <init>()>();

        $r4 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdhd(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r2, r3);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        $r5 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdiaHdlr(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r3, r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r5);

        $r6 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMinf(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r3, r2);

        virtualinvoke $r0.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r6);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createTrak(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.TrackBox $r5;
        com.coremedia.iso.boxes.Box $r8, $r9, $r10;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r6;
        java.util.logging.Logger $r1;
        com.googlecode.mp4parser.authoring.Movie r7;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r4;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r7 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r1 = <com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: java.util.logging.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating Track ");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void fine(java.lang.String)>($r4);

        $r5 = new com.coremedia.iso.boxes.TrackBox;

        specialinvoke $r5.<com.coremedia.iso.boxes.TrackBox: void <init>()>();

        $r8 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createTkhd(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r7, r2);

        virtualinvoke $r5.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r8);

        $r9 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createEdts(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r2, r7);

        if $r9 == null goto label1;

        virtualinvoke $r5.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r9);

     label1:
        $r10 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.coremedia.iso.boxes.Box createMdia(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r2, r7);

        virtualinvoke $r5.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r10);

        return $r5;
    }

    protected com.coremedia.iso.boxes.Box createEdts(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.googlecode.mp4parser.authoring.Movie r5;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r4;
        com.googlecode.mp4parser.authoring.TrackMetaData $r1;
        com.coremedia.iso.boxes.EditListBox $r2;
        com.coremedia.iso.boxes.EditBox $r3;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r5 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r2 = virtualinvoke $r1.<com.googlecode.mp4parser.authoring.TrackMetaData: com.coremedia.iso.boxes.EditListBox getEditList()>();

        if $r2 == null goto label1;

        $r3 = new com.coremedia.iso.boxes.EditBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.EditBox: void <init>()>();

        virtualinvoke $r3.<com.coremedia.iso.boxes.EditBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        return $r3;

     label1:
        return null;
    }

    protected com.coremedia.iso.boxes.DataInformationBox createDinf(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.coremedia.iso.boxes.DataEntryUrlBox $r2;
        com.googlecode.mp4parser.authoring.Track r5;
        com.googlecode.mp4parser.authoring.Movie r4;
        com.coremedia.iso.boxes.DataInformationBox $r0;
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r3;
        com.coremedia.iso.boxes.DataReferenceBox $r1;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r4 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r5 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new com.coremedia.iso.boxes.DataInformationBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.DataInformationBox: void <init>()>();

        $r1 = new com.coremedia.iso.boxes.DataReferenceBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.DataReferenceBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.DataInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r1);

        $r2 = new com.coremedia.iso.boxes.DataEntryUrlBox;

        specialinvoke $r2.<com.coremedia.iso.boxes.DataEntryUrlBox: void <init>()>();

        virtualinvoke $r2.<com.coremedia.iso.boxes.DataEntryUrlBox: void setFlags(int)>(1);

        virtualinvoke $r1.<com.coremedia.iso.boxes.DataReferenceBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        return $r0;
    }

    public com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder getFragmentIntersectionFinder()
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        return $r1;
    }

    public void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        r0.<com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }
}
