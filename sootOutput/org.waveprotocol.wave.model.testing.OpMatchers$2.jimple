final class org.waveprotocol.wave.model.testing.OpMatchers$2 extends org.hamcrest.TypeSafeMatcher
{
    final java.lang.String val$author;

    void <init>(java.lang.String)
    {
        org.waveprotocol.wave.model.testing.OpMatchers$2 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.testing.OpMatchers$2;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.model.testing.OpMatchers$2: java.lang.String val$author> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public boolean matchesSafely(org.waveprotocol.wave.model.operation.wave.WaveletOperation)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperation r1;
        org.waveprotocol.wave.model.testing.OpMatchers$2 r0;
        java.lang.String $r2, $r5;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext $r3;
        org.waveprotocol.wave.model.wave.ParticipantId $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.testing.OpMatchers$2;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperation;

        $r2 = r0.<org.waveprotocol.wave.model.testing.OpMatchers$2: java.lang.String val$author>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.model.operation.wave.WaveletOperation: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext getContext()>();

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.operation.wave.WaveletOperationContext: org.waveprotocol.wave.model.wave.ParticipantId getCreator()>();

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.Description r0;
        org.waveprotocol.wave.model.testing.OpMatchers$2 r3;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6;

        r3 := @this: org.waveprotocol.wave.model.testing.OpMatchers$2;

        r0 := @parameter0: org.hamcrest.Description;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op created by ");

        $r4 = r3.<org.waveprotocol.wave.model.testing.OpMatchers$2: java.lang.String val$author>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r6);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperation $r2;
        org.waveprotocol.wave.model.testing.OpMatchers$2 r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.testing.OpMatchers$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.operation.wave.WaveletOperation) r1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.OpMatchers$2: boolean matchesSafely(org.waveprotocol.wave.model.operation.wave.WaveletOperation)>($r2);

        return $z0;
    }
}
