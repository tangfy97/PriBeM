class com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap extends com.mycila.inject.internal.guava.collect.Maps$AbstractFilteredMap
{
    final java.util.Set filteredEntrySet;
    java.util.Set entrySet;
    java.util.Set keySet;

    void <init>(java.util.Map, com.mycila.inject.internal.guava.base.Predicate)
    {
        com.mycila.inject.internal.guava.base.Predicate r2, $r4;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap r0;
        java.util.Map r1;
        java.util.Set $r3, $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Predicate;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$AbstractFilteredMap: void <init>(java.util.Map,com.mycila.inject.internal.guava.base.Predicate)>(r1, r2);

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: com.mycila.inject.internal.guava.base.Predicate predicate>;

        $r5 = staticinvoke <com.mycila.inject.internal.guava.collect.Sets: java.util.Set filter(java.util.Set,com.mycila.inject.internal.guava.base.Predicate)>($r3, $r4);

        r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set filteredEntrySet> = $r5;

        return;
    }

    public java.util.Set entrySet()
    {
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet $r3;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap r0;
        java.util.Set r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap;

        r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set entrySet>;

        if r1 != null goto label1;

        $r3 = new com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet;

        $r2 = $r3;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$EntrySet: void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap,com.mycila.inject.internal.guava.collect.Maps$1)>(r0, null);

        r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set entrySet> = $r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public java.util.Set keySet()
    {
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap r0;
        com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$KeySet $r3;
        java.util.Set r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap;

        r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set keySet>;

        if r1 != null goto label1;

        $r3 = new com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$KeySet;

        $r2 = $r3;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap$KeySet: void <init>(com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap,com.mycila.inject.internal.guava.collect.Maps$1)>(r0, null);

        r0.<com.mycila.inject.internal.guava.collect.Maps$FilteredEntryMap: java.util.Set keySet> = $r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }
}
