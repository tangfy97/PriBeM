public class com.hp.hpl.jena.tdb.transaction.JournalControl extends java.lang.Object
{
    private static org.slf4j.Logger log;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.transaction.JournalControl r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.JournalControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void print(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile $r1;
        com.hp.hpl.jena.tdb.transaction.Journal $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.BufferChannelFile createUnmanaged(java.lang.String,java.lang.String)>(r0, "r");

        $r2 = new com.hp.hpl.jena.tdb.transaction.Journal;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: void <init>(com.hp.hpl.jena.tdb.base.file.BufferChannel)>($r1);

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void print(com.hp.hpl.jena.tdb.transaction.Journal)>($r2);

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: void close()>();

        return;
    }

    public static void print(com.hp.hpl.jena.tdb.transaction.Journal)
    {
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.String $r5, $r16, $r18;
        com.hp.hpl.jena.tdb.transaction.Journal r3;
        boolean $z0;
        java.io.PrintStream $r1, $r10, $r17;
        java.util.Iterator $r6;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r8;
        java.lang.StringBuilder $r0, $r2, $r4, $r9, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object $r7;

        r3 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size: ");

        $l0 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.Journal: long size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r6 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.Journal: java.util.Iterator entries()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.tdb.transaction.JournalEntry) $r7;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Posn: ");

        $l1 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.Journal: long position()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : (");

        $l2 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.Journal: long size()>();

        $l3 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.Journal: long position()>();

        $l4 = $l2 - $l3;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r18 = staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalEntry: java.lang.String format(com.hp.hpl.jena.tdb.transaction.JournalEntry)>(r8);

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

        goto label1;

     label2:
        return;
    }

    public static void recovery(com.hp.hpl.jena.tdb.store.DatasetGraphTDB)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r0;
        com.hp.hpl.jena.tdb.base.file.Location $r1;
        com.hp.hpl.jena.tdb.store.StorageConfig $r3, $r7;
        com.hp.hpl.jena.tdb.sys.FileRef r12;
        java.util.Map $r4;
        java.lang.String $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.tdb.transaction.Journal $r2;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r11;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.Location: boolean isMem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: com.hp.hpl.jena.tdb.transaction.Journal findJournal(com.hp.hpl.jena.tdb.store.DatasetGraphTDB)>(r0);

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.StorageConfig getConfig()>();

        $r4 = $r3.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map nodeTables>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.hp.hpl.jena.tdb.sys.FileRef) $r11;

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void recoverNodeDat(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.tdb.sys.FileRef)>(r0, r12);

        goto label4;

     label5:
        $r7 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.StorageConfig getConfig()>();

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: boolean recoverFromJournal(com.hp.hpl.jena.tdb.store.StorageConfig,com.hp.hpl.jena.tdb.transaction.Journal)>($r7, $r2);

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: void close()>();

        $r8 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.lang.String getFilename()>();

        if $r8 == null goto label6;

        $r9 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.lang.String getFilename()>();

        $z3 = staticinvoke <org.apache.jena.atlas.lib.FileOps: boolean exists(java.lang.String)>($r9);

        if $z3 == 0 goto label6;

        $r10 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.lang.String getFilename()>();

        staticinvoke <org.apache.jena.atlas.lib.FileOps: void delete(java.lang.String)>($r10);

     label6:
        return;
    }

    private static com.hp.hpl.jena.tdb.transaction.Journal findJournal(com.hp.hpl.jena.tdb.store.DatasetGraphTDB)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r0;
        long $l0;
        com.hp.hpl.jena.tdb.base.file.Location $r1;
        java.io.File $r5;
        byte $b1;
        int $i2;
        java.lang.String $r2;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.transaction.Journal $r4;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String absolute(java.lang.String)>("journal.jrnl");

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r5.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label1;

        $l0 = virtualinvoke $r5.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.transaction.Journal create(com.hp.hpl.jena.tdb.base.file.Location)>($r1);

        return $r4;

     label1:
        return null;
    }

    public static boolean recoverFromJournal(com.hp.hpl.jena.tdb.store.StorageConfig, com.hp.hpl.jena.tdb.transaction.Journal)
    {
        com.hp.hpl.jena.tdb.TDBException $r2;
        byte $b0;
        long l1, l2;
        com.hp.hpl.jena.tdb.store.StorageConfig r1;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.StorageConfig;

        r0 := @parameter1: com.hp.hpl.jena.tdb.transaction.Journal;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        l1 = 0L;

     label2:
        l2 = staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: long scanForCommit(com.hp.hpl.jena.tdb.transaction.Journal,long)>(r0, l1);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        l2 = -1L;

     label5:
        $b0 = l2 cmp -1L;

        if $b0 != 0 goto label6;

        goto label7;

     label6:
        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void recoverSegment(com.hp.hpl.jena.tdb.transaction.Journal,long,long,com.hp.hpl.jena.tdb.store.StorageConfig)>(r0, l1, l2, r1);

        l1 = l2;

        goto label2;

     label7:
        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: void truncate(long)>(0L);

        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: void sync()>();

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void syncAll(com.hp.hpl.jena.tdb.store.StorageConfig)>(r1);

        return 1;

        catch com.hp.hpl.jena.tdb.TDBException from label2 to label3 with label4;
    }

    private static long scanForCommit(com.hp.hpl.jena.tdb.transaction.Journal, long)
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r1;
        long l0, $l1;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r6;
        java.lang.Object $r2;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType $r3, $r4;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.util.Iterator entries(long)>(l0);

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.tdb.transaction.JournalEntry) $r2;

        $r3 = virtualinvoke r6.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.transaction.JournalEntryType getType()>();

        $r4 = <com.hp.hpl.jena.tdb.transaction.JournalEntryType: com.hp.hpl.jena.tdb.transaction.JournalEntryType Commit>;

        if $r3 != $r4 goto label3;

        $l1 = virtualinvoke r6.<com.hp.hpl.jena.tdb.transaction.JournalEntry: long getEndPosition()>();

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        return $l1;

     label3:
        goto label1;

     label4:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        return -1L;

     label5:
        $r5 := @caughtexception;

     label6:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void recoverSegment(com.hp.hpl.jena.tdb.transaction.Journal, long, long, com.hp.hpl.jena.tdb.store.StorageConfig)
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r7;
        long l0, $l1, l2, $l4;
        com.hp.hpl.jena.tdb.store.StorageConfig r6;
        byte $b3;
        java.lang.Long $r9, $r10;
        java.lang.String $r11;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType $r4, $r5;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        boolean $z0;
        org.slf4j.Logger $r8;
        java.util.Iterator $r1;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r3;
        java.lang.Object $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter1: long;

        l2 := @parameter2: long;

        r6 := @parameter3: com.hp.hpl.jena.tdb.store.StorageConfig;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.util.Iterator entries(long)>(l0);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.util.Iterator entries(long)>(l0);

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.tdb.transaction.JournalEntry) $r2;

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.transaction.JournalEntryType getType()>();

        $r5 = <com.hp.hpl.jena.tdb.transaction.JournalEntryType: com.hp.hpl.jena.tdb.transaction.JournalEntryType Commit>;

        if $r4 != $r5 goto label3;

        $l1 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.JournalEntry: long getEndPosition()>();

        $b3 = $l1 cmp l2;

        if $b3 == 0 goto label2;

        $r8 = <com.hp.hpl.jena.tdb.transaction.JournalControl: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[2];

        $l4 = virtualinvoke r3.<com.hp.hpl.jena.tdb.transaction.JournalEntry: long getEndPosition()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Inconsistent: end at %d; expected %d", $r7);

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r11);

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        return;

     label3:
        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: boolean replay(com.hp.hpl.jena.tdb.transaction.JournalEntry,com.hp.hpl.jena.tdb.store.StorageConfig)>(r3, r6);

        goto label1;

     label4:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        goto label7;

     label5:
        $r12 := @caughtexception;

     label6:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void recoverNodeDat(com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.tdb.sys.FileRef)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r1;
        long $l0;
        com.hp.hpl.jena.tdb.base.file.Location $r13;
        com.hp.hpl.jena.tdb.store.StorageConfig $r2;
        com.hp.hpl.jena.tdb.sys.FileRef r3;
        byte $b1;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r6;
        java.util.Map $r4;
        int $i2;
        java.lang.String $r8, $r12, $r14, $r19, $r21;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.index.IndexMap $r29;
        org.slf4j.Logger $r17;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r22;
        java.io.File $r27;
        com.hp.hpl.jena.tdb.transaction.NodeTableTrans $r30;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r18, $r20, $r26, $r28;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r25;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r3 := @parameter1: com.hp.hpl.jena.tdb.sys.FileRef;

        $r25 = new com.hp.hpl.jena.tdb.base.record.RecordFactory;

        specialinvoke $r25.<com.hp.hpl.jena.tdb.base.record.RecordFactory: void <init>(int,int)>(16, 8);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.StorageConfig getConfig()>();

        $r4 = $r2.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map nodeTables>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (com.hp.hpl.jena.tdb.nodetable.NodeTable) $r5;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.tdb.sys.FileRef: java.lang.String getFilename()>();

        $r9 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jrnl");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r14 = virtualinvoke $r13.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String absolute(java.lang.String)>($r12);

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r14);

        $z0 = virtualinvoke $r27.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke $r27.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $r17 = <com.hp.hpl.jena.tdb.sys.SystemTDB: org.slf4j.Logger syslog>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering node data: ");

        $r19 = virtualinvoke r3.<com.hp.hpl.jena.tdb.sys.FileRef: java.lang.String getFilename()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r21);

        $r22 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileFactory: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile createObjectFileDisk(java.lang.String)>($r14);

        $r30 = new com.hp.hpl.jena.tdb.transaction.NodeTableTrans;

        $r29 = new com.hp.hpl.jena.tdb.index.IndexMap;

        specialinvoke $r29.<com.hp.hpl.jena.tdb.index.IndexMap: void <init>(com.hp.hpl.jena.tdb.base.record.RecordFactory)>($r25);

        specialinvoke $r30.<com.hp.hpl.jena.tdb.transaction.NodeTableTrans: void <init>(com.hp.hpl.jena.tdb.transaction.Transaction,java.lang.String,com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.index.Index,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>(null, $r14, r6, $r29, $r22);

        virtualinvoke $r30.<com.hp.hpl.jena.tdb.transaction.NodeTableTrans: void append()>();

        virtualinvoke $r30.<com.hp.hpl.jena.tdb.transaction.NodeTableTrans: void close()>();

        interfaceinvoke $r22.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: void close()>();

        interfaceinvoke r6.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void sync()>();

     label1:
        $z1 = virtualinvoke $r27.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        staticinvoke <org.apache.jena.atlas.lib.FileOps: void delete(java.lang.String)>($r14);

     label2:
        return;
    }

    public static void replay(com.hp.hpl.jena.tdb.transaction.Transaction)
    {
        org.slf4j.Logger $r0, $r6;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r3;
        com.hp.hpl.jena.tdb.store.StorageConfig $r4;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;
        com.hp.hpl.jena.tdb.transaction.Transaction r1;
        com.hp.hpl.jena.tdb.transaction.Journal $r2;

        r1 := @parameter0: com.hp.hpl.jena.tdb.transaction.Transaction;

        $r0 = <com.hp.hpl.jena.tdb.sys.SystemTDB: org.slf4j.Logger syslog>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <com.hp.hpl.jena.tdb.sys.SystemTDB: org.slf4j.Logger syslog>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replay ");

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.Transaction: java.lang.String getLabel()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.Transaction: com.hp.hpl.jena.tdb.transaction.Journal getJournal()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.Transaction: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getBaseDataset()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.StorageConfig getConfig()>();

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void replay(com.hp.hpl.jena.tdb.transaction.Journal,com.hp.hpl.jena.tdb.store.StorageConfig)>($r2, $r4);

        return;
    }

    public static void replay(com.hp.hpl.jena.tdb.transaction.Journal, com.hp.hpl.jena.tdb.store.DatasetGraphTDB)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r1;
        com.hp.hpl.jena.tdb.store.StorageConfig $r2;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        r1 := @parameter1: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.StorageConfig getConfig()>();

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: void replay(com.hp.hpl.jena.tdb.transaction.Journal,com.hp.hpl.jena.tdb.store.StorageConfig)>(r0, $r2);

        return;
    }

    private static void replay(com.hp.hpl.jena.tdb.transaction.Journal, com.hp.hpl.jena.tdb.store.StorageConfig)
    {
        long $l0;
        com.hp.hpl.jena.tdb.store.StorageConfig r2;
        com.hp.hpl.jena.tdb.base.block.BlockMgr r7;
        byte $b1;
        java.util.Map $r3;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        boolean $z0, $z1;
        org.slf4j.Logger $r10;
        java.util.Iterator $r1, $r5;
        java.util.Collection $r4;
        java.lang.RuntimeException $r9;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r11;
        java.lang.Object $r6, $r8;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        r2 := @parameter1: com.hp.hpl.jena.tdb.store.StorageConfig;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: void position(long)>(0L);

     label2:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.util.Iterator entries()>();

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.hp.hpl.jena.tdb.transaction.JournalEntry) $r8;

        staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalControl: boolean replay(com.hp.hpl.jena.tdb.transaction.JournalEntry,com.hp.hpl.jena.tdb.store.StorageConfig)>(r11, r2);

        goto label3;

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = <com.hp.hpl.jena.tdb.sys.SystemTDB: org.slf4j.Logger syslog>;

        interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception during journal replay", $r9);

        throw $r9;

     label6:
        $r3 = r2.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map blockMgrs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.hp.hpl.jena.tdb.base.block.BlockMgr) $r6;

        interfaceinvoke r7.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void syncForce()>();

        goto label7;

     label8:
        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: void truncate(long)>(0L);

        return;

        catch java.lang.RuntimeException from label2 to label4 with label5;
    }

    private static boolean replay(com.hp.hpl.jena.tdb.transaction.JournalEntry, com.hp.hpl.jena.tdb.store.StorageConfig)
    {
        com.hp.hpl.jena.tdb.store.StorageConfig r9;
        java.nio.ByteBuffer $r13;
        com.hp.hpl.jena.tdb.base.file.BufferChannel r23;
        com.hp.hpl.jena.tdb.sys.FileRef $r11, $r15, $r17, $r21;
        com.hp.hpl.jena.tdb.base.block.BlockMgr r22;
        int[] $r1;
        java.util.Map $r10, $r16;
        int $i0, $i1;
        java.lang.String $r8;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType $r2, $r6;
        org.slf4j.Logger $r4, $r14, $r20;
        com.hp.hpl.jena.tdb.base.block.Block $r19;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r0;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.Object $r12, $r18;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.JournalEntry;

        r9 := @parameter1: com.hp.hpl.jena.tdb.store.StorageConfig;

        $r1 = <com.hp.hpl.jena.tdb.transaction.JournalControl$1: int[] $SwitchMap$com$hp$hpl$jena$tdb$transaction$JournalEntryType>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.transaction.JournalEntryType getType()>();

        $i0 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.JournalEntryType: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r16 = r9.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map blockMgrs>;

        $r17 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.sys.FileRef getFileRef()>();

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r22 = (com.hp.hpl.jena.tdb.base.block.BlockMgr) $r18;

        $r19 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.base.block.Block getBlock()>();

        $r20 = <com.hp.hpl.jena.tdb.transaction.JournalControl: org.slf4j.Logger log>;

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.sys.FileRef getFileRef()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Replay: {} {}", $r21, $r19);

        virtualinvoke $r19.<com.hp.hpl.jena.tdb.base.block.Block: void setModified(boolean)>(1);

        interfaceinvoke r22.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void overwrite(com.hp.hpl.jena.tdb.base.block.Block)>($r19);

        return 1;

     label2:
        $r10 = r9.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map bufferChannels>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.sys.FileRef getFileRef()>();

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r23 = (com.hp.hpl.jena.tdb.base.file.BufferChannel) $r12;

        $r13 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: java.nio.ByteBuffer getByteBuffer()>();

        $r14 = <com.hp.hpl.jena.tdb.transaction.JournalControl: org.slf4j.Logger log>;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.sys.FileRef getFileRef()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Replay: {} {}", $r15, $r13);

        interfaceinvoke r23.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int write(java.nio.ByteBuffer,long)>($r13, 0L);

        return 1;

     label3:
        return 0;

     label4:
        $r4 = <com.hp.hpl.jena.tdb.sys.SystemTDB: org.slf4j.Logger errlog>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected block type: ");

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.transaction.JournalEntryType getType()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r8);

     label5:
        return 0;
    }

    private static void syncAll(com.hp.hpl.jena.tdb.store.StorageConfig)
    {
        java.util.Iterator $r3, $r6;
        java.util.Collection $r2, $r5;
        com.hp.hpl.jena.tdb.store.StorageConfig r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel r8;
        com.hp.hpl.jena.tdb.base.block.BlockMgr r10;
        java.util.Map $r1, $r4;
        java.lang.Object $r7, $r9;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.StorageConfig;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map blockMgrs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.hp.hpl.jena.tdb.base.block.BlockMgr) $r9;

        interfaceinvoke r10.<com.hp.hpl.jena.tdb.base.block.BlockMgr: void syncForce()>();

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.tdb.store.StorageConfig: java.util.Map bufferChannels>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.tdb.base.file.BufferChannel) $r7;

        interfaceinvoke r8.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void sync()>();

        goto label3;

     label4:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/transaction/JournalControl;");

        <com.hp.hpl.jena.tdb.transaction.JournalControl: org.slf4j.Logger log> = $r0;

        return;
    }
}
