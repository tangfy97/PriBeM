public class org.dom4j.io.SAXModifier extends java.lang.Object
{
    private org.dom4j.io.XMLWriter xmlWriter;
    private org.xml.sax.XMLReader xmlReader;
    private boolean pruneElements;
    private org.dom4j.io.SAXModifyReader modifyReader;
    private java.util.HashMap modifiers;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers> = $r1;

        return;
    }

    public void <init>(boolean)
    {
        java.util.HashMap $r1;
        org.dom4j.io.SAXModifier r0;
        boolean z0;

        r0 := @this: org.dom4j.io.SAXModifier;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers> = $r1;

        r0.<org.dom4j.io.SAXModifier: boolean pruneElements> = z0;

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r2;
        java.util.HashMap $r1;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers> = $r1;

        r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader xmlReader> = r2;

        return;
    }

    public void <init>(org.xml.sax.XMLReader, boolean)
    {
        org.xml.sax.XMLReader r2;
        java.util.HashMap $r1;
        org.dom4j.io.SAXModifier r0;
        boolean z0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: org.xml.sax.XMLReader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers> = $r1;

        r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader xmlReader> = r2;

        return;
    }

    public org.dom4j.Document modify(java.io.File) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.io.SAXReader $r1;
        java.io.File r2;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.io.File;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.File)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(org.xml.sax.InputSource) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.xml.sax.InputSource r2;
        org.dom4j.Document $r3;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(org.xml.sax.InputSource)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.InputStream) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier r0;
        java.io.InputStream r2;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.InputStream)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.InputStream, java.lang.String) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7, r8;
        org.dom4j.io.SAXModifier r0;
        java.io.InputStream r2;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.io.InputStream;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.InputStream)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.Reader) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        java.io.Reader r2;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.io.Reader;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.Reader)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.io.Reader, java.lang.String) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        java.io.Reader r2;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7, r8;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.io.Reader;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.Reader)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.net.URL) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        java.net.URL r2;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String $r7;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.net.URL;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.net.URL)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public org.dom4j.Document modify(java.lang.String) throws org.dom4j.DocumentException
    {
        java.lang.Throwable $r5;
        org.dom4j.Document $r3;
        org.dom4j.io.SAXReader $r1;
        org.dom4j.DocumentException $r6;
        org.dom4j.io.SAXModifyException $r4;
        java.lang.String r2, $r7;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()>();

        $r3 = virtualinvoke $r1.<org.dom4j.io.SAXReader: org.dom4j.Document read(java.lang.String)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<org.dom4j.io.SAXModifyException: java.lang.Throwable getCause()>();

        $r6 = new org.dom4j.DocumentException;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch org.dom4j.io.SAXModifyException from label1 to label2 with label3;
    }

    public void addModifier(java.lang.String, org.dom4j.io.ElementModifier)
    {
        org.dom4j.io.ElementModifier r2;
        java.util.HashMap $r3;
        java.lang.String r1;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.dom4j.io.ElementModifier;

        $r3 = r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void resetModifiers()
    {
        java.util.HashMap $r1;
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.SAXModifyReader $r2;

        r0 := @this: org.dom4j.io.SAXModifier;

        $r1 = r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader getSAXModifyReader()>();

        virtualinvoke $r2.<org.dom4j.io.SAXModifyReader: void resetHandlers()>();

        return;
    }

    public void removeModifier(java.lang.String)
    {
        org.dom4j.io.SAXModifyReader $r3;
        java.util.HashMap $r2;
        java.lang.String r1;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r3 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader getSAXModifyReader()>();

        virtualinvoke $r3.<org.dom4j.io.SAXModifyReader: void removeHandler(java.lang.String)>(r1);

        return;
    }

    public org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.SAXModifyReader $r1;
        org.dom4j.DocumentFactory $r2;

        r0 := @this: org.dom4j.io.SAXModifier;

        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader getSAXModifyReader()>();

        $r2 = virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: org.dom4j.DocumentFactory getDocumentFactory()>();

        return $r2;
    }

    public void setDocumentFactory(org.dom4j.DocumentFactory)
    {
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.SAXModifyReader $r1;
        org.dom4j.DocumentFactory r2;

        r0 := @this: org.dom4j.io.SAXModifier;

        r2 := @parameter0: org.dom4j.DocumentFactory;

        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader getSAXModifyReader()>();

        virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: void setDocumentFactory(org.dom4j.DocumentFactory)>(r2);

        return;
    }

    public org.dom4j.io.XMLWriter getXMLWriter()
    {
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.XMLWriter $r1;

        r0 := @this: org.dom4j.io.SAXModifier;

        $r1 = r0.<org.dom4j.io.SAXModifier: org.dom4j.io.XMLWriter xmlWriter>;

        return $r1;
    }

    public void setXMLWriter(org.dom4j.io.XMLWriter)
    {
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.XMLWriter r1;

        r0 := @this: org.dom4j.io.SAXModifier;

        r1 := @parameter0: org.dom4j.io.XMLWriter;

        r0.<org.dom4j.io.SAXModifier: org.dom4j.io.XMLWriter xmlWriter> = r1;

        return;
    }

    public boolean isPruneElements()
    {
        org.dom4j.io.SAXModifier r0;
        boolean $z0;

        r0 := @this: org.dom4j.io.SAXModifier;

        $z0 = r0.<org.dom4j.io.SAXModifier: boolean pruneElements>;

        return $z0;
    }

    private org.dom4j.io.SAXReader installModifyReader() throws org.dom4j.DocumentException
    {
        org.dom4j.io.PruningDispatchHandler $r14;
        org.dom4j.io.XMLWriter $r5;
        org.dom4j.io.ElementModifier $r11;
        java.util.HashMap $r2;
        org.xml.sax.XMLReader $r6;
        org.dom4j.DocumentException $r17;
        java.lang.String $r13, $r18;
        boolean $z0, $z1;
        java.util.Map$Entry r8;
        java.util.Iterator $r4;
        org.dom4j.io.SAXModifyReader $r1, $r15;
        java.util.Set $r3;
        org.xml.sax.SAXException $r16;
        java.lang.Object $r7, $r10, $r12;
        org.dom4j.io.SAXModifier r0;
        org.dom4j.io.SAXModifyElementHandler $r9;

        r0 := @this: org.dom4j.io.SAXModifier;

     label1:
        $r1 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader getSAXModifyReader()>();

        $z0 = virtualinvoke r0.<org.dom4j.io.SAXModifier: boolean isPruneElements()>();

        if $z0 == 0 goto label2;

        $r15 = r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader modifyReader>;

        $r14 = new org.dom4j.io.PruningDispatchHandler;

        specialinvoke $r14.<org.dom4j.io.PruningDispatchHandler: void <init>()>();

        virtualinvoke $r15.<org.dom4j.io.SAXModifyReader: void setDispatchHandler(org.dom4j.io.DispatchHandler)>($r14);

     label2:
        virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: void resetHandlers()>();

        $r2 = r0.<org.dom4j.io.SAXModifier: java.util.HashMap modifiers>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = new org.dom4j.io.SAXModifyElementHandler;

        $r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (org.dom4j.io.ElementModifier) $r10;

        specialinvoke $r9.<org.dom4j.io.SAXModifyElementHandler: void <init>(org.dom4j.io.ElementModifier)>($r11);

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: void addHandler(java.lang.String,org.dom4j.ElementHandler)>($r13, $r9);

        goto label3;

     label4:
        $r5 = virtualinvoke r0.<org.dom4j.io.SAXModifier: org.dom4j.io.XMLWriter getXMLWriter()>();

        virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: void setXMLWriter(org.dom4j.io.XMLWriter)>($r5);

        $r6 = specialinvoke r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader getXMLReader()>();

        virtualinvoke $r1.<org.dom4j.io.SAXModifyReader: void setXMLReader(org.xml.sax.XMLReader)>($r6);

     label5:
        return $r1;

     label6:
        $r16 := @caughtexception;

        $r17 = new org.dom4j.DocumentException;

        $r18 = virtualinvoke $r16.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r17.<org.dom4j.DocumentException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r16);

        throw $r17;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    private org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1, $r2, $r3;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        $r1 = r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader xmlReader>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.dom4j.io.SAXHelper: org.xml.sax.XMLReader createXMLReader(boolean)>(0);

        r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader xmlReader> = $r3;

     label1:
        $r2 = r0.<org.dom4j.io.SAXModifier: org.xml.sax.XMLReader xmlReader>;

        return $r2;
    }

    private org.dom4j.io.SAXModifyReader getSAXModifyReader()
    {
        org.dom4j.io.SAXModifyReader $r1, $r2, $r3;
        org.dom4j.io.SAXModifier r0;

        r0 := @this: org.dom4j.io.SAXModifier;

        $r1 = r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader modifyReader>;

        if $r1 != null goto label1;

        $r3 = new org.dom4j.io.SAXModifyReader;

        specialinvoke $r3.<org.dom4j.io.SAXModifyReader: void <init>()>();

        r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader modifyReader> = $r3;

     label1:
        $r2 = r0.<org.dom4j.io.SAXModifier: org.dom4j.io.SAXModifyReader modifyReader>;

        return $r2;
    }
}
