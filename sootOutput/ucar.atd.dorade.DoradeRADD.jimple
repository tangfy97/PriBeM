class ucar.atd.dorade.DoradeRADD extends ucar.atd.dorade.DoradeDescriptor
{
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_GROUND;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_FORE;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_AFT;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_TAIL;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_LF;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_SHIP;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_NOSE;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_SATELLITE;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_FIXED_LIDAR;
    public static final ucar.atd.dorade.DoradeRADD$RadarType TYPE_MOVING_LIDAR;
    private static ucar.atd.dorade.DoradeRADD$RadarType[] radarTypes;
    private static ucar.atd.dorade.ScanMode[] scanModeTable;
    private java.lang.String radarName;
    private float radarConstant;
    private float peakPower;
    private float noisePower;
    private float rcvrGain;
    private float antennaGain;
    private float systemGain;
    private float hBeamWidth;
    private float vBeamWidth;
    private short radarTypeNdx;
    private ucar.atd.dorade.ScanMode scanMode;
    private float rotVelocity;
    private float scanParam0;
    private float scanParam1;
    private short nParams;
    private short nAdditionalDescriptors;
    private short compressionScheme;
    public static final int COMPRESSION_NONE;
    public static final int COMPRESSION_HRD;
    private short dataReductionMethod;
    public static final int DATA_REDUCTION_NONE;
    public static final int DATA_REDUCTION_BY_AZIMUTH;
    public static final int DATA_REDUCTION_BY_RANGE;
    public static final int DATA_REDUCTION_BY_ALTITUDE;
    private float reductionBound0;
    private float reductionBound1;
    private float longitude;
    private float latitude;
    private float altitude;
    private float unambiguousVelocity;
    private float unambiguousRange;
    private short nFrequencies;
    private short nPRTs;
    private float[] frequencies;
    private float[] PRTs;
    private ucar.atd.dorade.DoradePARM[] myPARMs;
    private ucar.atd.dorade.DoradeCELV myCELV;
    private ucar.atd.dorade.DoradeCFAC myCFAC;
    private int nCells;

    public void <init>(java.io.RandomAccessFile, boolean) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r1;
        byte[] $r2;
        ucar.atd.dorade.ScanMode $r6;
        ucar.atd.dorade.DoradeCELV $r18, $r30;
        ucar.atd.dorade.ScanMode[] $r5;
        java.lang.StringBuilder $r13, $r14, $r15, $r32;
        float[] $r7, $r8, $r24, $r25;
        long $l9;
        ucar.atd.dorade.DoradePARM $r29;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s11, $s13, $s21;
        ucar.atd.dorade.DoradeRADD r0;
        java.lang.String $r4, $r10, $r16, $r28;
        java.io.IOException $r26;
        ucar.atd.dorade.DoradeCSFD $r31;
        boolean z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r33, $r34;
        ucar.atd.dorade.DoradePARM[] $r9, $r22;
        int $i10, $i12, $i14, $i15, $i16, $i17, i18, i19, i20, $i22, $i23, $i24, $i25, $i26;
        ucar.atd.dorade.DoradeCFAC $r35;
        java.io.PrintStream $r23;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        r1 := @parameter0: java.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        specialinvoke r0.<ucar.atd.dorade.DoradeDescriptor: void <init>()>();

        $r2 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: byte[] readDescriptor(java.io.RandomAccessFile,boolean,java.lang.String)>(r1, z0, "RADD");

        $r28 = new java.lang.String;

        specialinvoke $r28.<java.lang.String: void <init>(byte[],int,int)>($r2, 8, 8);

        $r4 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        r0.<ucar.atd.dorade.DoradeRADD: java.lang.String radarName> = $r4;

        $f0 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 16);

        r0.<ucar.atd.dorade.DoradeRADD: float radarConstant> = $f0;

        $f1 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 20);

        r0.<ucar.atd.dorade.DoradeRADD: float peakPower> = $f1;

        $f2 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 24);

        r0.<ucar.atd.dorade.DoradeRADD: float noisePower> = $f2;

        $f3 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 28);

        r0.<ucar.atd.dorade.DoradeRADD: float rcvrGain> = $f3;

        $f4 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 32);

        r0.<ucar.atd.dorade.DoradeRADD: float antennaGain> = $f4;

        $f5 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 36);

        r0.<ucar.atd.dorade.DoradeRADD: float systemGain> = $f5;

        $f6 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 40);

        r0.<ucar.atd.dorade.DoradeRADD: float hBeamWidth> = $f6;

        $f7 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 44);

        r0.<ucar.atd.dorade.DoradeRADD: float vBeamWidth> = $f7;

        $s0 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 48);

        r0.<ucar.atd.dorade.DoradeRADD: short radarTypeNdx> = $s0;

        $r5 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.ScanMode[] scanModeTable>;

        $s1 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 50);

        $i22 = (int) $s1;

        $r6 = $r5[$i22];

        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.ScanMode scanMode> = $r6;

        $f8 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 52);

        r0.<ucar.atd.dorade.DoradeRADD: float rotVelocity> = $f8;

        $f9 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 56);

        r0.<ucar.atd.dorade.DoradeRADD: float scanParam0> = $f9;

        $f10 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 60);

        r0.<ucar.atd.dorade.DoradeRADD: float scanParam1> = $f10;

        $s2 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 64);

        r0.<ucar.atd.dorade.DoradeRADD: short nParams> = $s2;

        $s3 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 66);

        r0.<ucar.atd.dorade.DoradeRADD: short nAdditionalDescriptors> = $s3;

        $s4 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 68);

        r0.<ucar.atd.dorade.DoradeRADD: short compressionScheme> = $s4;

        $s5 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 70);

        r0.<ucar.atd.dorade.DoradeRADD: short dataReductionMethod> = $s5;

        $f11 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 72);

        r0.<ucar.atd.dorade.DoradeRADD: float reductionBound0> = $f11;

        $f12 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 76);

        r0.<ucar.atd.dorade.DoradeRADD: float reductionBound1> = $f12;

        $f13 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 80);

        r0.<ucar.atd.dorade.DoradeRADD: float longitude> = $f13;

        $f14 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 84);

        r0.<ucar.atd.dorade.DoradeRADD: float latitude> = $f14;

        $f15 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 88);

        r0.<ucar.atd.dorade.DoradeRADD: float altitude> = $f15;

        $f16 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 92);

        r0.<ucar.atd.dorade.DoradeRADD: float unambiguousVelocity> = $f16;

        $f17 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, 96);

        r0.<ucar.atd.dorade.DoradeRADD: float unambiguousRange> = $f17;

        $s6 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 100);

        r0.<ucar.atd.dorade.DoradeRADD: short nFrequencies> = $s6;

        $s7 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: short grabShort(byte[],int)>($r2, 102);

        r0.<ucar.atd.dorade.DoradeRADD: short nPRTs> = $s7;

        $r7 = newarray (float)[5];

        r0.<ucar.atd.dorade.DoradeRADD: float[] frequencies> = $r7;

        i18 = 0;

     label01:
        if i18 >= 5 goto label02;

        $r25 = r0.<ucar.atd.dorade.DoradeRADD: float[] frequencies>;

        $i16 = 4 * i18;

        $i17 = 104 + $i16;

        $f19 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, $i17);

        $r25[i18] = $f19;

        i18 = i18 + 1;

        goto label01;

     label02:
        $r8 = newarray (float)[5];

        r0.<ucar.atd.dorade.DoradeRADD: float[] PRTs> = $r8;

        i19 = 0;

     label03:
        if i19 >= 5 goto label04;

        $r24 = r0.<ucar.atd.dorade.DoradeRADD: float[] PRTs>;

        $i14 = 4 * i19;

        $i15 = 124 + $i14;

        $f18 = virtualinvoke r0.<ucar.atd.dorade.DoradeRADD: float grabFloat(byte[],int)>($r2, $i15);

        $r24[i19] = $f18;

        i19 = i19 + 1;

        goto label03;

     label04:
        $z1 = r0.<ucar.atd.dorade.DoradeRADD: boolean verbose>;

        if $z1 == 0 goto label05;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.Object)>(r0);

     label05:
        $s8 = r0.<ucar.atd.dorade.DoradeRADD: short nParams>;

        $i23 = (int) $s8;

        $r9 = newarray (ucar.atd.dorade.DoradePARM)[$i23];

        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradePARM[] myPARMs> = $r9;

        i20 = 0;

     label06:
        $s21 = r0.<ucar.atd.dorade.DoradeRADD: short nParams>;

        $i24 = (int) $s21;

        if i20 >= $i24 goto label07;

        $r22 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradePARM[] myPARMs>;

        $r29 = new ucar.atd.dorade.DoradePARM;

        specialinvoke $r29.<ucar.atd.dorade.DoradePARM: void <init>(java.io.RandomAccessFile,boolean,ucar.atd.dorade.DoradeRADD)>(r1, z0, r0);

        $r22[i20] = $r29;

        i20 = i20 + 1;

        goto label06;

     label07:
        $l9 = virtualinvoke r1.<java.io.RandomAccessFile: long getFilePointer()>();

        $r10 = staticinvoke <ucar.atd.dorade.DoradeRADD: java.lang.String peekName(java.io.RandomAccessFile)>(r1);

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("CELV");

        if $z2 == 0 goto label08;

        $r30 = new ucar.atd.dorade.DoradeCELV;

        specialinvoke $r30.<ucar.atd.dorade.DoradeCELV: void <init>(java.io.RandomAccessFile,boolean)>(r1, z0);

        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCELV myCELV> = $r30;

        goto label10;

     label08:
        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("CSFD");

        if $z3 == 0 goto label09;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l9);

        $r31 = new ucar.atd.dorade.DoradeCSFD;

        specialinvoke $r31.<ucar.atd.dorade.DoradeCSFD: void <init>(java.io.RandomAccessFile,boolean)>(r1, z0);

        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCELV myCELV> = $r31;

        goto label10;

     label09:
        $r33 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" descriptor not found!");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.String)>($r16);

        throw $r33;

     label10:
        goto label12;

     label11:
        $r26 := @caughtexception;

        $r34 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r34.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r26);

        throw $r34;

     label12:
        $r18 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCELV myCELV>;

        $i10 = virtualinvoke $r18.<ucar.atd.dorade.DoradeCELV: int getNCells()>();

        r0.<ucar.atd.dorade.DoradeRADD: int nCells> = $i10;

        $s13 = r0.<ucar.atd.dorade.DoradeRADD: short nAdditionalDescriptors>;

        $s11 = r0.<ucar.atd.dorade.DoradeRADD: short nParams>;

        $i25 = (int) $s11;

        $i12 = $i25 + 1;

        $i26 = (int) $s13;

        if $i26 <= $i12 goto label13;

        $r35 = new ucar.atd.dorade.DoradeCFAC;

        specialinvoke $r35.<ucar.atd.dorade.DoradeCFAC: void <init>(java.io.RandomAccessFile,boolean)>(r1, z0);

        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCFAC myCFAC> = $r35;

        goto label14;

     label13:
        r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCFAC myCFAC> = null;

     label14:
        return;

        catch java.io.IOException from label07 to label10 with label11;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r39, $r40, $r41, $r42, $r45, $r46, $r47, $r48, $r49, $r50, $r53, $r54, $r58, $r59, $r62, $r63, $r65, $r66, $r69, $r70, $r71, $r72, $r75, $r76, $r77, $r78, $r79, $r80, $r83, $r84, $r85, $r86, $r89, $r90, $r91, $r92, $r95, $r96, $r97, $r98, $r101, $r102, $r103, $r104, $r107, $r108, $r109, $r110, $r111, $r112, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r125, $r126, $r127, $r128, $r131, $r132, $r133, $r134, $r137, $r138, $r140, $r141, $r144, $r145, $r147, $r149, $r150, $r152, $r154, $r155, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182;
        float[] $r148, $r153;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6;
        ucar.atd.dorade.DoradeRADD r3;
        ucar.atd.dorade.DoradeRADD$RadarType[] $r55;
        int i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        ucar.atd.dorade.DoradeRADD$RadarType $r56;
        ucar.atd.dorade.ScanMode $r64;
        java.lang.String $r4, $r7, $r13, $r19, $r25, $r31, $r37, $r43, $r51, $r57, $r60, $r67, $r73, $r81, $r87, $r93, $r99, $r105, $r113, $r123, $r129, $r135, $r142, r156, r157;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;

        r3 := @this: ucar.atd.dorade.DoradeRADD;

        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RADD\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  radar name: ");

        $r4 = r3.<ucar.atd.dorade.DoradeRADD: java.lang.String radarName>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  radar constant: ");

        $f0 = r3.<ucar.atd.dorade.DoradeRADD: float radarConstant>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  peak power: ");

        $f1 = r3.<ucar.atd.dorade.DoradeRADD: float peakPower>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  noise power: ");

        $f2 = r3.<ucar.atd.dorade.DoradeRADD: float noisePower>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r162 = new java.lang.StringBuilder;

        specialinvoke $r162.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  receiver gain: ");

        $f3 = r3.<ucar.atd.dorade.DoradeRADD: float rcvrGain>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r163 = new java.lang.StringBuilder;

        specialinvoke $r163.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  antenna gain: ");

        $f4 = r3.<ucar.atd.dorade.DoradeRADD: float antennaGain>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  system gain: ");

        $f5 = r3.<ucar.atd.dorade.DoradeRADD: float systemGain>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  beam width: ");

        $f6 = r3.<ucar.atd.dorade.DoradeRADD: float hBeamWidth>;

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(H), ");

        $f7 = r3.<ucar.atd.dorade.DoradeRADD: float vBeamWidth>;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(V)\n");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r166 = new java.lang.StringBuilder;

        specialinvoke $r166.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  radar type: ");

        $r55 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType[] radarTypes>;

        $s0 = r3.<ucar.atd.dorade.DoradeRADD: short radarTypeNdx>;

        $i9 = (int) $s0;

        $r56 = $r55[$i9];

        $r57 = virtualinvoke $r56.<ucar.atd.dorade.DoradeRADD$RadarType: java.lang.String getName()>();

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        $r167 = new java.lang.StringBuilder;

        specialinvoke $r167.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  scan mode: ");

        $r64 = r3.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.ScanMode scanMode>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  rotation velocity: ");

        $f8 = r3.<ucar.atd.dorade.DoradeRADD: float rotVelocity>;

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  scan params: ");

        $f9 = r3.<ucar.atd.dorade.DoradeRADD: float scanParam0>;

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f9);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f10 = r3.<ucar.atd.dorade.DoradeRADD: float scanParam1>;

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  number of parameters: ");

        $s1 = r3.<ucar.atd.dorade.DoradeRADD: short nParams>;

        $i10 = (int) $s1;

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  additional descriptors: ");

        $s2 = r3.<ucar.atd.dorade.DoradeRADD: short nAdditionalDescriptors>;

        $i11 = (int) $s2;

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  compression scheme: ");

        $s3 = r3.<ucar.atd.dorade.DoradeRADD: short compressionScheme>;

        $i12 = (int) $s3;

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        $r173 = new java.lang.StringBuilder;

        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  data reduction method: ");

        $s4 = r3.<ucar.atd.dorade.DoradeRADD: short dataReductionMethod>;

        $i13 = (int) $s4;

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  reduction bounds: ");

        $f11 = r3.<ucar.atd.dorade.DoradeRADD: float reductionBound0>;

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f11);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f12 = r3.<ucar.atd.dorade.DoradeRADD: float reductionBound1>;

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f12);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        $r175 = new java.lang.StringBuilder;

        specialinvoke $r175.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  location: ");

        $f13 = r3.<ucar.atd.dorade.DoradeRADD: float longitude>;

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f13);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $f14 = r3.<ucar.atd.dorade.DoradeRADD: float latitude>;

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f14);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $f15 = r3.<ucar.atd.dorade.DoradeRADD: float altitude>;

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f15);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" km (MSL)\n");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        $r176 = new java.lang.StringBuilder;

        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  unambiguous velocity: ");

        $f16 = r3.<ucar.atd.dorade.DoradeRADD: float unambiguousVelocity>;

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f16);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        $r177 = new java.lang.StringBuilder;

        specialinvoke $r177.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  unambiguous range: ");

        $f17 = r3.<ucar.atd.dorade.DoradeRADD: float unambiguousRange>;

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f17);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  frequencies: ");

        r156 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        i7 = 0;

     label1:
        $s5 = r3.<ucar.atd.dorade.DoradeRADD: short nFrequencies>;

        $i14 = (int) $s5;

        if i7 >= $i14 goto label2;

        $r179 = new java.lang.StringBuilder;

        specialinvoke $r179.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r156);

        $r153 = r3.<ucar.atd.dorade.DoradeRADD: float[] frequencies>;

        $f19 = $r153[i7];

        $r154 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f19);

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.String toString()>();

        i7 = i7 + 1;

        goto label1;

     label2:
        $r180 = new java.lang.StringBuilder;

        specialinvoke $r180.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r156);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        $r181 = new java.lang.StringBuilder;

        specialinvoke $r181.<java.lang.StringBuilder: void <init>()>();

        $r144 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  PRTs: ");

        r157 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        i8 = 0;

     label3:
        $s6 = r3.<ucar.atd.dorade.DoradeRADD: short nPRTs>;

        $i15 = (int) $s6;

        if i8 >= $i15 goto label4;

        $r182 = new java.lang.StringBuilder;

        specialinvoke $r182.<java.lang.StringBuilder: void <init>()>();

        $r147 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r157);

        $r148 = r3.<ucar.atd.dorade.DoradeRADD: float[] PRTs>;

        $f18 = $r148[i8];

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f18);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r157 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        i8 = i8 + 1;

        goto label3;

     label4:
        return r157;
    }

    public int getCompressionScheme()
    {
        int $i1;
        short $s0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $s0 = r0.<ucar.atd.dorade.DoradeRADD: short compressionScheme>;

        $i1 = (int) $s0;

        return $i1;
    }

    public int getNCells()
    {
        int $i0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $i0 = r0.<ucar.atd.dorade.DoradeRADD: int nCells>;

        return $i0;
    }

    public ucar.atd.dorade.DoradePARM[] getParamList()
    {
        ucar.atd.dorade.DoradeRADD r0;
        ucar.atd.dorade.DoradePARM[] $r1;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $r1 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradePARM[] myPARMs>;

        return $r1;
    }

    public int getNParams()
    {
        int $i1;
        short $s0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $s0 = r0.<ucar.atd.dorade.DoradeRADD: short nParams>;

        $i1 = (int) $s0;

        return $i1;
    }

    public java.lang.String getRadarName()
    {
        java.lang.String $r1;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $r1 = r0.<ucar.atd.dorade.DoradeRADD: java.lang.String radarName>;

        return $r1;
    }

    public float getLatitude()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float latitude>;

        return $f0;
    }

    public float getLongitude()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float longitude>;

        return $f0;
    }

    public float getAltitude()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float altitude>;

        return $f0;
    }

    public float getRangeToFirstCell()
    {
        ucar.atd.dorade.DoradeCELV $r1;
        ucar.atd.dorade.DoradeRADD r0;
        float $f0;
        float[] $r2;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $r1 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCELV myCELV>;

        $r2 = virtualinvoke $r1.<ucar.atd.dorade.DoradeCELV: float[] getCellRanges()>();

        $f0 = $r2[0];

        return $f0;
    }

    public float getCellSpacing() throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        float[] $r2;
        byte $b2, $b3;
        ucar.atd.dorade.DoradeRADD r0;
        int $i0, $i1, i4, $i5;
        double $d0, $d1, $d2;
        ucar.atd.dorade.DoradeCELV $r1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r4;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $r1 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeCELV myCELV>;

        $r2 = virtualinvoke $r1.<ucar.atd.dorade.DoradeCELV: float[] getCellRanges()>();

        $f1 = $r2[1];

        $f0 = $r2[0];

        f2 = $f1 - $f0;

        i4 = 2;

     label1:
        $i0 = lengthof $r2;

        if i4 >= $i0 goto label3;

        $f4 = $r2[i4];

        $i1 = i4 - 1;

        $f3 = $r2[$i1];

        f5 = $f4 - $f3;

        $b2 = f5 cmpl f2;

        if $b2 == 0 goto label2;

        $f6 = f5 / f2;

        $d0 = (double) $f6;

        $d1 = $d0 - 1.0;

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $b3 = $d2 cmpl 0.01;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

        $r4 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r4.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.String)>("variable cell spacing");

        throw $r4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return f2;
    }

    public ucar.atd.dorade.ScanMode getScanMode()
    {
        ucar.atd.dorade.ScanMode $r1;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $r1 = r0.<ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.ScanMode scanMode>;

        return $r1;
    }

    public float getUnambiguousVelocity()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float unambiguousVelocity>;

        return $f0;
    }

    public float getunambiguousRange()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float unambiguousRange>;

        return $f0;
    }

    public float getradarConstant()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float radarConstant>;

        return $f0;
    }

    public float getrcvrGain()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float rcvrGain>;

        return $f0;
    }

    public float getantennaGain()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float antennaGain>;

        return $f0;
    }

    public float getsystemGain()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float systemGain>;

        return $f0;
    }

    public float gethBeamWidth()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float hBeamWidth>;

        return $f0;
    }

    public float getpeakPower()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float peakPower>;

        return $f0;
    }

    public float getnoisePower()
    {
        float $f0;
        ucar.atd.dorade.DoradeRADD r0;

        r0 := @this: ucar.atd.dorade.DoradeRADD;

        $f0 = r0.<ucar.atd.dorade.DoradeRADD: float noisePower>;

        return $f0;
    }

    static void <clinit>()
    {
        ucar.atd.dorade.DoradeRADD$RadarType[] $r10;
        ucar.atd.dorade.ScanMode $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        ucar.atd.dorade.ScanMode[] $r21;
        ucar.atd.dorade.DoradeRADD$RadarType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        <ucar.atd.dorade.DoradeRADD: int DATA_REDUCTION_BY_ALTITUDE> = 4;

        <ucar.atd.dorade.DoradeRADD: int DATA_REDUCTION_BY_RANGE> = 3;

        <ucar.atd.dorade.DoradeRADD: int DATA_REDUCTION_BY_AZIMUTH> = 2;

        <ucar.atd.dorade.DoradeRADD: int DATA_REDUCTION_NONE> = 1;

        <ucar.atd.dorade.DoradeRADD: int COMPRESSION_HRD> = 1;

        <ucar.atd.dorade.DoradeRADD: int COMPRESSION_NONE> = 0;

        $r0 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r0.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("ground");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_GROUND> = $r0;

        $r1 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r1.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("airborne (fore)");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_FORE> = $r1;

        $r2 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r2.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("airborne (aft)");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_AFT> = $r2;

        $r3 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r3.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("airborne (tail)");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_TAIL> = $r3;

        $r4 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r4.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("airborne (lower fuselage)");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_LF> = $r4;

        $r5 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r5.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("shipborne");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_SHIP> = $r5;

        $r6 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r6.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("airborne (nose)");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_NOSE> = $r6;

        $r7 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r7.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("satellite");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_SATELLITE> = $r7;

        $r8 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r8.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("fixed lidar");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_FIXED_LIDAR> = $r8;

        $r9 = new ucar.atd.dorade.DoradeRADD$RadarType;

        specialinvoke $r9.<ucar.atd.dorade.DoradeRADD$RadarType: void <init>(java.lang.String)>("moving lidar");

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_MOVING_LIDAR> = $r9;

        $r10 = newarray (ucar.atd.dorade.DoradeRADD$RadarType)[10];

        $r11 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_GROUND>;

        $r10[0] = $r11;

        $r12 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_FORE>;

        $r10[1] = $r12;

        $r13 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_AFT>;

        $r10[2] = $r13;

        $r14 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_LF>;

        $r10[3] = $r14;

        $r15 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_TAIL>;

        $r10[4] = $r15;

        $r16 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_SHIP>;

        $r10[5] = $r16;

        $r17 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_AIR_NOSE>;

        $r10[6] = $r17;

        $r18 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_SATELLITE>;

        $r10[7] = $r18;

        $r19 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_MOVING_LIDAR>;

        $r10[8] = $r19;

        $r20 = <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType TYPE_FIXED_LIDAR>;

        $r10[9] = $r20;

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.DoradeRADD$RadarType[] radarTypes> = $r10;

        $r21 = newarray (ucar.atd.dorade.ScanMode)[11];

        $r22 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_calibration>;

        $r21[0] = $r22;

        $r23 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_PPI>;

        $r21[1] = $r23;

        $r24 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_coplane>;

        $r21[2] = $r24;

        $r25 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_RHI>;

        $r21[3] = $r25;

        $r26 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_vertical>;

        $r21[4] = $r26;

        $r27 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_target>;

        $r21[5] = $r27;

        $r28 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_manual>;

        $r21[6] = $r28;

        $r29 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_idle>;

        $r21[7] = $r29;

        $r30 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_SUR>;

        $r21[8] = $r30;

        $r31 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_air>;

        $r21[9] = $r31;

        $r32 = <ucar.atd.dorade.ScanMode: ucar.atd.dorade.ScanMode MODE_horizontal>;

        $r21[10] = $r32;

        <ucar.atd.dorade.DoradeRADD: ucar.atd.dorade.ScanMode[] scanModeTable> = $r21;

        return;
    }
}
