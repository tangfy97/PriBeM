public class javax.xml.transform.stax.StAXResult extends java.lang.Object implements javax.xml.transform.Result
{
    public static final java.lang.String FEATURE;
    private final javax.xml.stream.XMLStreamWriter xmlStreamWriter;
    private final javax.xml.stream.XMLEventWriter xmlEventWriter;

    public void <init>(javax.xml.stream.XMLStreamWriter)
    {
        javax.xml.transform.stax.StAXResult r0;
        javax.xml.stream.XMLStreamWriter r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: javax.xml.transform.stax.StAXResult;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("XMLStreamWriter cannot be null.");

        throw $r2;

     label1:
        r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLStreamWriter xmlStreamWriter> = r1;

        r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLEventWriter xmlEventWriter> = null;

        return;
    }

    public void <init>(javax.xml.stream.XMLEventWriter)
    {
        javax.xml.transform.stax.StAXResult r0;
        javax.xml.stream.XMLEventWriter r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: javax.xml.transform.stax.StAXResult;

        r1 := @parameter0: javax.xml.stream.XMLEventWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("XMLEventWriter cannot be null.");

        throw $r2;

     label1:
        r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLStreamWriter xmlStreamWriter> = null;

        r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLEventWriter xmlEventWriter> = r1;

        return;
    }

    public javax.xml.stream.XMLStreamWriter getXMLStreamWriter()
    {
        javax.xml.transform.stax.StAXResult r0;
        javax.xml.stream.XMLStreamWriter $r1;

        r0 := @this: javax.xml.transform.stax.StAXResult;

        $r1 = r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLStreamWriter xmlStreamWriter>;

        return $r1;
    }

    public javax.xml.stream.XMLEventWriter getXMLEventWriter()
    {
        javax.xml.transform.stax.StAXResult r0;
        javax.xml.stream.XMLEventWriter $r1;

        r0 := @this: javax.xml.transform.stax.StAXResult;

        $r1 = r0.<javax.xml.transform.stax.StAXResult: javax.xml.stream.XMLEventWriter xmlEventWriter>;

        return $r1;
    }

    public java.lang.String getSystemId()
    {
        javax.xml.transform.stax.StAXResult r0;

        r0 := @this: javax.xml.transform.stax.StAXResult;

        return null;
    }

    public void setSystemId(java.lang.String)
    {
        javax.xml.transform.stax.StAXResult r1;
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;

        r1 := @this: javax.xml.transform.stax.StAXResult;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting systemId is not supported.");

        throw $r0;
    }

    public static void <clinit>()
    {
        <javax.xml.transform.stax.StAXResult: java.lang.String FEATURE> = "http://javax.xml.transform.stax.StAXResult/feature";

        return;
    }
}
