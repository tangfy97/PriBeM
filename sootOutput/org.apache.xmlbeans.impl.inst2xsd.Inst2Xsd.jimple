public class org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd extends java.lang.Object
{

    public static void main(java.lang.String[])
    {
        org.apache.xmlbeans.XmlObject[] $r33;
        java.lang.StringBuffer $r19, $r20, $r21, $r22, $r26, $r28, $r29, $r34, $r36, $r38, $r41, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r52, $r55, $r57, $r60, $r61, $r63, $r66, $r68, $r71, $r72, $r74;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument r82;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r23, $r30, $r37, $r39, $r45, $r51, $r53, $r59, $r62, $r64, $r70, $r73, $r75, $r77, $r78, $r79, $r80, r81;
        java.io.IOException $r40, $r54;
        java.lang.NumberFormatException $r76;
        java.io.File $r12, $r18, $r31, $r58, $r69;
        org.apache.xmlbeans.XmlException $r65;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9;
        org.apache.xmlbeans.impl.tool.CommandLine $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] $r17;
        java.lang.String[] r0, $r10;
        java.util.HashSet $r1, $r2;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        org.apache.xmlbeans.XmlObject $r32;
        java.io.PrintStream $r27, $r35, $r42, $r56, $r67;
        org.apache.xmlbeans.XmlOptions $r24, $r25;
        java.io.File[] $r16;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label01;

        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

     label01:
        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label02:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("h");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("help");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("usage");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("license");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("version");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("verbose");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("validate");

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("design");

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("simple-content-types");

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("enumerations");

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("outDir");

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("outPrefix");

        $r3 = new org.apache.xmlbeans.impl.tool.CommandLine;

        specialinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: void <init>(java.lang.String[],java.util.Collection,java.util.Collection)>(r0, $r1, $r2);

        $r4 = new org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        specialinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void <init>()>();

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("license");

        if $r5 == null goto label03;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printLicense()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label03:
        $r6 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("version");

        if $r6 == null goto label04;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label04:
        $r7 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("h");

        if $r7 != null goto label05;

        $r8 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("help");

        if $r8 != null goto label05;

        $r9 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("usage");

        if $r9 == null goto label06;

     label05:
        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label06:
        $r10 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] getBadOpts()>();

        $i1 = lengthof $r10;

        if $i1 <= 0 goto label09;

        i8 = 0;

     label07:
        $i7 = lengthof $r10;

        if i8 >= $i7 goto label08;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized option: ");

        $r37 = $r10[i8];

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);

        i8 = i8 + 1;

        goto label07;

     label08:
        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label09:
        $r11 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("design");

        if $r11 != null goto label10;

        goto label14;

     label10:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("vb");

        if $z0 == 0 goto label11;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setDesign(int)>(3);

        goto label14;

     label11:
        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("rd");

        if $z1 == 0 goto label12;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setDesign(int)>(1);

        goto label14;

     label12:
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("ss");

        if $z2 == 0 goto label13;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setDesign(int)>(2);

        goto label14;

     label13:
        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label14:
        $r77 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("simple-content-types");

        if $r77 != null goto label15;

        goto label18;

     label15:
        $z3 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("smart");

        if $z3 == 0 goto label16;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setSimpleContentTypes(int)>(1);

        goto label18;

     label16:
        $z4 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z4 == 0 goto label17;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setSimpleContentTypes(int)>(2);

        goto label18;

     label17:
        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label18:
        $r78 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("enumerations");

        if $r78 != null goto label19;

        goto label23;

     label19:
        $z5 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>("never");

        if $z5 == 0 goto label20;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setUseEnumerations(int)>(1);

        goto label23;

     label20:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r78);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setUseEnumerations(int)>($i2);

     label21:
        goto label23;

     label22:
        $r76 := @caughtexception;

        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label23:
        $r12 = new java.io.File;

        $r79 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("outDir");

        if $r79 != null goto label24;

        $r80 = ".";

        goto label25;

     label24:
        $r80 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("outDir");

     label25:
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r80);

        $r13 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("outPrefix");

        r81 = $r13;

        if $r13 != null goto label26;

        r81 = "schema";

     label26:
        $r14 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("verbose");

        if $r14 == null goto label27;

        $z8 = 1;

        goto label28;

     label27:
        $z8 = 0;

     label28:
        virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void setVerbose(boolean)>($z8);

        $r15 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("validate");

        if $r15 == null goto label29;

        $z9 = 1;

        goto label30;

     label29:
        $z9 = 0;

     label30:
        z6 = $z9;

        $r16 = virtualinvoke $r3.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xml");

        $i3 = lengthof $r16;

        $r33 = newarray (org.apache.xmlbeans.XmlObject)[$i3];

        $i4 = lengthof $r33;

        if $i4 != 0 goto label31;

        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: void printHelp()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label31:
        i9 = 0;

     label32:
        $i5 = lengthof $r16;

        if i9 >= $i5 goto label33;

        $r31 = $r16[i9];

        $r32 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.File)>($r31);

        $r33[i9] = $r32;

        i9 = i9 + 1;

        goto label32;

     label33:
        goto label36;

     label34:
        $r65 := @caughtexception;

        $r67 = <java.lang.System: java.io.PrintStream err>;

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid xml file: \'");

        $r69 = $r16[i9];

        $r70 = virtualinvoke $r69.<java.io.File: java.lang.String getName()>();

        $r71 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'. ");

        $r73 = virtualinvoke $r65.<org.apache.xmlbeans.XmlException: java.lang.String getMessage()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r75);

        return;

     label35:
        $r54 := @caughtexception;

        $r56 = <java.lang.System: java.io.PrintStream err>;

        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not read file: \'");

        $r58 = $r16[i9];

        $r59 = virtualinvoke $r58.<java.io.File: java.lang.String getName()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'. ");

        $r62 = virtualinvoke $r54.<java.io.IOException: java.lang.String getMessage()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r64);

        return;

     label36:
        $r17 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] inst2xsd(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>($r33, $r4);

     label37:
        i10 = 0;

     label38:
        $i6 = lengthof $r17;

        if i10 >= $i6 goto label40;

        r82 = $r17[i10];

        $z7 = virtualinvoke $r4.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean isVerbose()>();

        if $z7 == 0 goto label39;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("----------------------\n\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r82);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label39:
        $r18 = new java.io.File;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r81);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsd");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r23);

        $r24 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r24.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r25 = virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSavePrettyPrint()>();

        interfaceinvoke r82.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: void save(java.io.File,org.apache.xmlbeans.XmlOptions)>($r18, $r25);

        i10 = i10 + 1;

        goto label38;

     label40:
        goto label42;

     label41:
        $r40 := @caughtexception;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not write file: \'");

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r45 = <java.io.File: java.lang.String pathSeparator>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r81);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsd");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'. ");

        $r51 = virtualinvoke $r40.<java.io.IOException: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r53);

        return;

     label42:
        if z6 == 0 goto label43;

        staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: boolean validateInstances(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[],org.apache.xmlbeans.XmlObject[])>($r17, $r33);

     label43:
        return;

        catch java.lang.NumberFormatException from label20 to label21 with label22;
        catch org.apache.xmlbeans.XmlException from label31 to label33 with label34;
        catch java.io.IOException from label31 to label33 with label35;
        catch java.io.IOException from label37 to label40 with label41;
    }

    private static void printHelp()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Generates XMLSchema from instance xml documents.");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: inst2xsd [opts] [instance.xml]*");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Options include:");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("    -design [rd|ss|vb] - XMLSchema design type");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("             rd  - Russian Doll Design - local elements and local types");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("             ss  - Salami Slice Design - global elements and local types");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("             vb  - Venetian Blind Design (default) - local elements and global complex types");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("    -simple-content-types [smart|string] - Simple content types detection (leaf text). Smart is the default");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("    -enumerations [never|NUMBER] - Use enumerations. Default value is 10.");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("    -outDir [dir] - Directory for output files. Default is \'.\'");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("    -outPrefix [file_name_prefix] - Prefix for output file names. Default is \'schema\'");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("    -validate - Validates input instances agaist generated schemas.");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("    -verbose - print more informational messages");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("    -license - print license information");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("    -help - help imformation");

        return;
    }

    private void <init>()
    {
        org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] inst2xsd(java.io.Reader[], org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions) throws java.io.IOException, org.apache.xmlbeans.XmlException
    {
        java.io.Reader[] r0;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] $r3;
        java.io.Reader $r4;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions r2;
        org.apache.xmlbeans.XmlObject[] r1;
        int $i0, $i1, i2;
        org.apache.xmlbeans.XmlObject $r5;

        r0 := @parameter0: java.io.Reader[];

        r2 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        $i0 = lengthof r0;

        r1 = newarray (org.apache.xmlbeans.XmlObject)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r4 = r0[i2];

        $r5 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.Reader)>($r4);

        r1[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] inst2xsd(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)>(r1, r2);

        return $r3;
    }

    public static org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] inst2xsd(org.apache.xmlbeans.XmlObject[], org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] $r3;
        org.apache.xmlbeans.impl.inst2xsd.VenetianBlindStrategy $r1;
        org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions $r12, r13;
        org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder $r0;
        java.lang.StringBuffer $r4, $r6, $r7;
        org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy $r10, r14;
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.SalamiSliceStrategy $r9;
        java.lang.String $r8;
        boolean $z0;
        java.io.PrintStream $r5;
        java.lang.IllegalArgumentException $r11;
        org.apache.xmlbeans.XmlObject[] r2;

        r2 := @parameter0: org.apache.xmlbeans.XmlObject[];

        r13 := @parameter1: org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        if r13 != null goto label1;

        $r12 = new org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions;

        specialinvoke $r12.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: void <init>()>();

        r13 = $r12;

     label1:
        $r0 = new org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder;

        specialinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder: void <init>()>();

        $i0 = virtualinvoke r13.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: int getDesign()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r10 = new org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy;

        specialinvoke $r10.<org.apache.xmlbeans.impl.inst2xsd.RussianDollStrategy: void <init>()>();

        r14 = $r10;

        goto label6;

     label3:
        $r9 = new org.apache.xmlbeans.impl.inst2xsd.SalamiSliceStrategy;

        specialinvoke $r9.<org.apache.xmlbeans.impl.inst2xsd.SalamiSliceStrategy: void <init>()>();

        r14 = $r9;

        goto label6;

     label4:
        $r1 = new org.apache.xmlbeans.impl.inst2xsd.VenetianBlindStrategy;

        specialinvoke $r1.<org.apache.xmlbeans.impl.inst2xsd.VenetianBlindStrategy: void <init>()>();

        r14 = $r1;

        goto label6;

     label5:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown design.");

        throw $r11;

     label6:
        interfaceinvoke r14.<org.apache.xmlbeans.impl.inst2xsd.XsdGenStrategy: void processDoc(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions,org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder)>(r2, r13, $r0);

        $z0 = virtualinvoke r13.<org.apache.xmlbeans.impl.inst2xsd.Inst2XsdOptions: boolean isVerbose()>();

        if $z0 == 0 goto label7;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("typeSystemHolder.toString(): ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label7:
        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.TypeSystemHolder: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] getSchemaDocuments()>();

        return $r3;
    }

    private static boolean validateInstances(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[], org.apache.xmlbeans.XmlObject[])
    {
        org.apache.xmlbeans.SchemaType $r12, $r13;
        java.lang.Exception $r69;
        org.apache.xmlbeans.XmlDocumentProperties $r22, $r44, $r51, $r62;
        org.apache.xmlbeans.XmlObject[] r5;
        java.util.ArrayList $r0, $r11;
        java.lang.StringBuffer $r16, $r18, $r19, $r20, $r24, $r29, $r31, $r32, $r33, $r34, $r36, $r38, $r40, $r41, $r42, $r46, $r48, $r53, $r54, $r58, $r60, $r64, $r65, $r66, $r72, $r74, $r75, $r76, $r77, $r79;
        java.lang.String $r23, $r25, $r35, $r37, $r45, $r47, $r52, $r55, $r63, $r67, $r78, $r80;
        org.apache.xmlbeans.SchemaTypeLoader $r3;
        org.apache.xmlbeans.XmlException $r57;
        javax.xml.stream.XMLStreamReader $r7;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.apache.xmlbeans.XmlError r28, r83;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[] r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.xmlbeans.XmlObject $r6, $r10, $r21, $r43, $r50, $r61;
        java.io.PrintStream $r4, $r17, $r30, $r39, $r49, $r56, $r59, $r68, $r70, $r73, $r81;
        java.util.Iterator $r26, $r82;
        org.apache.xmlbeans.XmlOptions $r1, $r8, $r9, $r14, $r15;
        java.lang.Object $r27, $r71;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[];

        r5 := @parameter1: org.apache.xmlbeans.XmlObject[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r1.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r0);

     label01:
        $r3 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader loadXsd(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.XmlOptions)>(r2, $r1);

     label02:
        goto label08;

     label03:
        $r69 := @caughtexception;

        $z2 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label04;

        $z3 = $r69 instanceof org.apache.xmlbeans.XmlException;

        if $z3 != 0 goto label05;

     label04:
        $r70 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r69.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r70);

     label05:
        $r81 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>("\n-------------------\n\nInvalid schemas.");

        $r82 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r82.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r71 = interfaceinvoke $r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (org.apache.xmlbeans.XmlError) $r71;

        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $i3 = virtualinvoke r83.<org.apache.xmlbeans.XmlError: int getLine()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i4 = virtualinvoke r83.<org.apache.xmlbeans.XmlError: int getColumn()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r78 = virtualinvoke r83.<org.apache.xmlbeans.XmlError: java.lang.String getMessage()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r80);

        goto label06;

     label07:
        return 0;

     label08:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("\n-------------------");

        z5 = 1;

        i5 = 0;

     label09:
        $i0 = lengthof r5;

        if i5 >= $i0 goto label19;

     label10:
        $r6 = r5[i5];

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.XmlObject: javax.xml.stream.XMLStreamReader newXMLStreamReader()>();

        $r8 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r8.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r10 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r7, null, $r9);

     label11:
        goto label13;

     label12:
        $r57 := @caughtexception;

        $r59 = <java.lang.System: java.io.PrintStream out>;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error:\n");

        $r61 = r5[i5];

        $r62 = interfaceinvoke $r61.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r63 = virtualinvoke $r62.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $r64 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not loadable: ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r57);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r67);

        $r68 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r57.<org.apache.xmlbeans.XmlException: void printStackTrace(java.io.PrintStream)>($r68);

        z5 = 0;

        goto label18;

     label13:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r13 = <org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType type>;

        if $r12 != $r13 goto label14;

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r50 = r5[i5];

        $r51 = interfaceinvoke $r50.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r52 = virtualinvoke $r51.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $r53 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" NOT valid.  ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("  Document type not found.");

        z5 = 0;

        goto label18;

     label14:
        $r14 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r14.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r15 = virtualinvoke $r14.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r11);

        $z0 = interfaceinvoke $r10.<org.apache.xmlbeans.XmlObject: boolean validate(org.apache.xmlbeans.XmlOptions)>($r15);

        if $z0 == 0 goto label15;

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Instance[");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] valid - ");

        $r43 = r5[i5];

        $r44 = interfaceinvoke $r43.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r45 = virtualinvoke $r44.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $r46 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r47);

        goto label18;

     label15:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Instance[");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] NOT valid - ");

        $r21 = r5[i5];

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r23 = virtualinvoke $r22.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r26 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.xmlbeans.XmlError) $r27;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $i1 = virtualinvoke r28.<org.apache.xmlbeans.XmlError: int getLine()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i2 = virtualinvoke r28.<org.apache.xmlbeans.XmlError: int getColumn()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r35 = virtualinvoke r28.<org.apache.xmlbeans.XmlError: java.lang.String getMessage()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r37);

        goto label16;

     label17:
        z5 = 0;

     label18:
        i5 = i5 + 1;

        goto label09;

     label19:
        return z5;

        catch java.lang.Exception from label01 to label02 with label03;
        catch org.apache.xmlbeans.XmlException from label10 to label11 with label12;
    }
}
