public class com.ctc.wstx.dtd.DTDValidator extends com.ctc.wstx.dtd.DTDValidatorBase
{
    protected boolean mReportDuplicateErrors;
    protected com.ctc.wstx.dtd.ElementIdMap mIdMap;
    protected com.ctc.wstx.dtd.StructValidator[] mValidators;
    protected java.util.BitSet mCurrSpecialAttrs;
    boolean mCurrHasAnyFixed;
    java.util.BitSet mTmpSpecialAttrs;

    public void <init>(com.ctc.wstx.dtd.DTDSubset, org.codehaus.stax2.validation.ValidationContext, boolean, java.util.Map, java.util.Map)
    {
        com.ctc.wstx.dtd.DTDSubset r1;
        com.ctc.wstx.dtd.StructValidator[] $r5;
        com.ctc.wstx.dtd.DTDValidator r0;
        java.util.Map r3, r4;
        org.codehaus.stax2.validation.ValidationContext r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDSubset;

        r2 := @parameter1: org.codehaus.stax2.validation.ValidationContext;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: java.util.Map;

        specialinvoke r0.<com.ctc.wstx.dtd.DTDValidatorBase: void <init>(com.ctc.wstx.dtd.DTDSubset,org.codehaus.stax2.validation.ValidationContext,boolean,java.util.Map,java.util.Map)>(r1, r2, z0, r3, r4);

        r0.<com.ctc.wstx.dtd.DTDValidator: boolean mReportDuplicateErrors> = 0;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap> = null;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators> = null;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs> = null;

        r0.<com.ctc.wstx.dtd.DTDValidator: boolean mCurrHasAnyFixed> = 0;

        $r5 = newarray (com.ctc.wstx.dtd.StructValidator)[16];

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators> = $r5;

        return;
    }

    public final boolean reallyValidating()
    {
        com.ctc.wstx.dtd.DTDValidator r0;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        return 1;
    }

    public void validateElementStart(java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        java.util.Map $r5;
        com.ctc.wstx.dtd.DTDElement[] $r8, $r9, $r23, $r44, $r46;
        com.ctc.wstx.dtd.StructValidator $r14, $r51;
        com.ctc.wstx.dtd.DTDElement r7, $r24;
        java.lang.StringBuffer $r27, $r29, $r30, $r31, $r32, $r33, $r37, $r38, $r39, $r40, $r42, $r54, $r55;
        java.lang.String r1, r2, $r11, $r12, $r22, $r25, $r34, $r36, $r41, r50, r52;
        com.ctc.wstx.dtd.NameKey $r3, $r4, $r10, $r21, $r28;
        boolean $z0, $z1;
        com.ctc.wstx.dtd.StructValidator[] $r13, $r19, $r43, $r47, $r49;
        com.ctc.wstx.dtd.DTDValidator r0;
        java.util.HashMap $r15, $r16, $r18, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.Object $r6, $r45, $r48;
        java.util.BitSet r53, $r56;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r2 := @parameter0: java.lang.String;

        r50 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.Map mElemSpecs>;

        $r4 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (com.ctc.wstx.dtd.DTDElement) $r6;

        $i0 = r0.<com.ctc.wstx.dtd.DTDValidator: int mElemCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDValidator: int mElemCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label01;

        $r44 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $r45 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r44);

        $r46 = (com.ctc.wstx.dtd.DTDElement[]) $r45;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems> = $r46;

        $r47 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        $r48 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r47);

        $r49 = (com.ctc.wstx.dtd.StructValidator[]) $r48;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators> = $r49;

     label01:
        $r9 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem> = r7;

        $r9[$i0] = r7;

        if r7 == null goto label02;

        $z1 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: boolean isDefined()>();

        if $z1 != 0 goto label03;

     label02:
        $r11 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_UNKNOWN_ELEM>;

        $r10 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r12 = virtualinvoke $r10.<com.ctc.wstx.dtd.NameKey: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String,java.lang.String)>($r11, $r12);

     label03:
        if $i0 <= 0 goto label04;

        $r43 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        $i7 = $i0 - 1;

        $r51 = $r43[$i7];

        goto label05;

     label04:
        $r51 = null;

     label05:
        if $r51 == null goto label07;

        $r21 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.NameKey getName()>();

        $r22 = virtualinvoke $r51.<com.ctc.wstx.dtd.StructValidator: java.lang.String tryToValidate(com.ctc.wstx.dtd.NameKey)>($r21);

        r52 = $r22;

        if $r22 == null goto label07;

        $i4 = virtualinvoke $r22.<java.lang.String: int indexOf(java.lang.String)>("$END");

        $r23 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i5 = $i0 - 1;

        $r24 = $r23[$i5];

        $r25 = virtualinvoke $r24.<com.ctc.wstx.dtd.DTDElement: java.lang.String toString()>();

        if $i4 < 0 goto label06;

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r37 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $i6 = $i4 + 4;

        $r41 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int)>($i6);

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        r52 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Validation error, encountered element <");

        $r28 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.NameKey getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> as a child of <");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r52);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String)>($r34);

     label07:
        r0.<com.ctc.wstx.dtd.DTDValidator: int mAttrCount> = 0;

        $i9 = (int) -2;

        r0.<com.ctc.wstx.dtd.DTDValidator: int mIdAttrIndex> = $i9;

        if r7 != null goto label08;

        $r19 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        $r19[$i0] = null;

        $r20 = <com.ctc.wstx.dtd.DTDValidator: java.util.HashMap EMPTY_MAP>;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs> = $r20;

        r0.<com.ctc.wstx.dtd.DTDValidator: boolean mCurrHasAnyFixed> = 0;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs> = null;

        goto label13;

     label08:
        $r13 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        $r14 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.StructValidator getValidator()>();

        $r13[$i0] = $r14;

        $r15 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: java.util.HashMap getAttributes()>();

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs> = $r15;

        $r16 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs>;

        if $r16 != null goto label09;

        $r18 = <com.ctc.wstx.dtd.DTDValidator: java.util.HashMap EMPTY_MAP>;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs> = $r18;

     label09:
        $z0 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: boolean hasFixedAttrs()>();

        r0.<com.ctc.wstx.dtd.DTDValidator: boolean mCurrHasAnyFixed> = $z0;

        $i3 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDElement: int getSpecialCount()>();

        if $i3 != 0 goto label10;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs> = null;

        goto label13;

     label10:
        r53 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mTmpSpecialAttrs>;

        if r53 != null goto label11;

        $r56 = new java.util.BitSet;

        specialinvoke $r56.<java.util.BitSet: void <init>(int)>($i3);

        r53 = $r56;

        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mTmpSpecialAttrs> = $r56;

        goto label12;

     label11:
        virtualinvoke r53.<java.util.BitSet: void clear()>();

     label12:
        r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs> = r53;

     label13:
        return;
    }

    public java.lang.String validateAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.NameKey $r3, $r5, $r34;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.stax2.validation.ValidationContext $r12;
        com.ctc.wstx.dtd.DTDValidator r0;
        com.ctc.wstx.dtd.DTDAttribute r7;
        java.util.HashMap $r4;
        java.lang.StringBuffer $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        com.ctc.wstx.dtd.DTDElement $r18, $r30, $r31;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, r2, r11, $r13, $r25, $r32, $r33, $r35, r36, $r37, $r38;
        java.lang.Object $r6, $r28;
        com.ctc.wstx.dtd.DTDAttribute[] $r8, $r9, $r27, $r29;
        java.util.BitSet $r10, $r26;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r2 := @parameter0: java.lang.String;

        r36 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        $r4 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs>;

        $r3 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r5 = virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.ctc.wstx.dtd.DTDAttribute) $r6;

        if r7 != null goto label2;

        $r30 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        if $r30 != null goto label1;

        return null;

     label1:
        $r32 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_UNKNOWN_ATTR>;

        $r31 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        $r33 = virtualinvoke $r31.<com.ctc.wstx.dtd.DTDElement: java.lang.String toString()>();

        $r34 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r35 = virtualinvoke $r34.<com.ctc.wstx.dtd.NameKey: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String,java.lang.String,java.lang.String)>($r32, $r33, $r35);

     label2:
        $i0 = r0.<com.ctc.wstx.dtd.DTDValidator: int mAttrCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDValidator: int mAttrCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label3;

        $r27 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r28 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r27);

        $r29 = (com.ctc.wstx.dtd.DTDAttribute[]) $r28;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs> = $r29;

     label3:
        $r9 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r9[$i0] = r7;

        $r10 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        if $r10 == null goto label4;

        $i3 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: int getSpecialIndex()>();

        if $i3 < 0 goto label4;

        $r26 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        virtualinvoke $r26.<java.util.BitSet: void set(int)>($i3);

     label4:
        $z2 = r0.<com.ctc.wstx.dtd.DTDValidator: boolean mNormAttrs>;

        $r37 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String,boolean)>(r0, r11, $z2);

        $z3 = r0.<com.ctc.wstx.dtd.DTDValidator: boolean mCurrHasAnyFixed>;

        if $z3 == 0 goto label7;

        $z0 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: boolean isFixed()>();

        if $z0 == 0 goto label7;

        if $r37 != null goto label5;

        $r38 = r11;

        goto label6;

     label5:
        $r38 = $r37;

     label6:
        $r12 = r0.<com.ctc.wstx.dtd.DTDValidator: org.codehaus.stax2.validation.ValidationContext mContext>;

        $r13 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String getDefaultValue(org.codehaus.stax2.validation.ValidationContext)>($r12);

        $z1 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label7;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value of attribute \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" (element <");

        $r18 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">) not \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" as expected, but \"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String)>($r25);

     label7:
        return $r37;
    }

    public java.lang.String validateAttribute(java.lang.String, java.lang.String, java.lang.String, char[], int, int) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.NameKey $r3, $r5, $r34;
        boolean $z0, $z1, $z2, z3;
        org.codehaus.stax2.validation.ValidationContext $r12;
        com.ctc.wstx.dtd.DTDValidator r0;
        com.ctc.wstx.dtd.DTDAttribute r7;
        java.util.HashMap $r4;
        java.lang.StringBuffer $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        com.ctc.wstx.dtd.DTDElement $r18, $r30, $r31;
        int $i0, $i1, $i2, i3, i4, $i5, $i6;
        java.lang.String r1, r2, $r13, $r25, $r32, $r33, $r35, r36, $r37, $r38;
        char[] r11;
        java.lang.Object $r6, $r28;
        com.ctc.wstx.dtd.DTDAttribute[] $r8, $r9, $r27, $r29;
        java.util.BitSet $r10, $r26;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r2 := @parameter0: java.lang.String;

        r36 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r11 := @parameter3: char[];

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r4 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.HashMap mCurrAttrDefs>;

        $r3 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r5 = virtualinvoke $r3.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.ctc.wstx.dtd.DTDAttribute) $r6;

        if r7 != null goto label2;

        $r30 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        if $r30 != null goto label1;

        return null;

     label1:
        $r32 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_UNKNOWN_ATTR>;

        $r31 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        $r33 = virtualinvoke $r31.<com.ctc.wstx.dtd.DTDElement: java.lang.String toString()>();

        $r34 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.NameKey mTmpKey>;

        $r35 = virtualinvoke $r34.<com.ctc.wstx.dtd.NameKey: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String,java.lang.String,java.lang.String)>($r32, $r33, $r35);

     label2:
        $i0 = r0.<com.ctc.wstx.dtd.DTDValidator: int mAttrCount>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.DTDValidator: int mAttrCount> = $i1;

        $r8 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $i2 = lengthof $r8;

        if $i0 < $i2 goto label3;

        $r27 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r28 = staticinvoke <com.ctc.wstx.util.DataUtil: java.lang.Object growArrayBy50Pct(java.lang.Object)>($r27);

        $r29 = (com.ctc.wstx.dtd.DTDAttribute[]) $r28;

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs> = $r29;

     label3:
        $r9 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDAttribute[] mAttrSpecs>;

        $r9[$i0] = r7;

        $r10 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        if $r10 == null goto label4;

        $i6 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: int getSpecialIndex()>();

        if $i6 < 0 goto label4;

        $r26 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        virtualinvoke $r26.<java.util.BitSet: void set(int)>($i6);

     label4:
        $z1 = r0.<com.ctc.wstx.dtd.DTDValidator: boolean mNormAttrs>;

        $r37 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase,char[],int,int,boolean)>(r0, r11, i3, i4, $z1);

        $z2 = r0.<com.ctc.wstx.dtd.DTDValidator: boolean mCurrHasAnyFixed>;

        if $z2 == 0 goto label9;

        $z0 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: boolean isFixed()>();

        if $z0 == 0 goto label9;

        $r12 = r0.<com.ctc.wstx.dtd.DTDValidator: org.codehaus.stax2.validation.ValidationContext mContext>;

        $r13 = virtualinvoke r7.<com.ctc.wstx.dtd.DTDAttribute: java.lang.String getDefaultValue(org.codehaus.stax2.validation.ValidationContext)>($r12);

        if $r37 != null goto label5;

        $i5 = i4 - i3;

        z3 = staticinvoke <com.ctc.wstx.util.StringUtil: boolean matches(java.lang.String,char[],int,int)>($r13, r11, i3, $i5);

        goto label6;

     label5:
        z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r37);

     label6:
        if z3 != 0 goto label9;

        if $r37 != null goto label7;

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(char[],int,int)>(r11, i3, i4);

        goto label8;

     label7:
        $r38 = $r37;

     label8:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value of #FIXED attribute \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" (element <");

        $r18 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">) not \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" as expected, but \"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String)>($r25);

     label9:
        return $r37;
    }

    public int validateElementAndAttributes() throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDAttribute r6;
        com.ctc.wstx.dtd.DTDElement r1;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, i3;
        java.lang.String $r13;
        boolean $z0;
        com.ctc.wstx.dtd.DTDValidator r0;
        java.util.List $r4;
        java.lang.Object $r5;
        java.util.BitSet $r2, r3;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r1 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement mCurrElem>;

        if r1 != null goto label1;

        return 3;

     label1:
        $r2 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        if $r2 == null goto label5;

        r3 = r0.<com.ctc.wstx.dtd.DTDValidator: java.util.BitSet mCurrSpecialAttrs>;

        $i1 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: int getSpecialCount()>();

        i3 = virtualinvoke r3.<java.util.BitSet: int nextClearBit(int)>(0);

     label2:
        if i3 >= $i1 goto label5;

        $r4 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: java.util.List getSpecialAttrs()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (com.ctc.wstx.dtd.DTDAttribute) $r5;

        $z0 = virtualinvoke r6.<com.ctc.wstx.dtd.DTDAttribute: boolean isRequired()>();

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Required attribute \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' missing from element <");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String)>($r13);

        goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void doAddDefaultValue(com.ctc.wstx.dtd.DTDAttribute)>(r6);

     label4:
        $i2 = i3 + 1;

        i3 = virtualinvoke r3.<java.util.BitSet: int nextClearBit(int)>($i2);

        goto label2;

     label5:
        $i0 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDElement: int getAllowedContent()>();

        return $i0;
    }

    public int validateElementEnd(java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.StructValidator r5;
        com.ctc.wstx.dtd.DTDElement r2, $r8;
        java.lang.StringBuffer $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9, $r15, r16, r17, r18;
        com.ctc.wstx.dtd.StructValidator[] $r4, $r6;
        com.ctc.wstx.dtd.DTDValidator r0;
        com.ctc.wstx.dtd.DTDElement[] $r1, $r3, $r7;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        r16 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        r18 := @parameter2: java.lang.String;

        $i0 = r0.<com.ctc.wstx.dtd.DTDValidator: int mElemCount>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.dtd.DTDValidator: int mElemCount> = $i1;

        $r1 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        r2 = $r1[$i1];

        $r3 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $r3[$i1] = null;

        $r4 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        r5 = $r4[$i1];

        $r6 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.StructValidator[] mValidators>;

        $r6[$i1] = null;

        if r5 == null goto label1;

        $r9 = virtualinvoke r5.<com.ctc.wstx.dtd.StructValidator: java.lang.String fullyValid()>();

        if $r9 == null goto label1;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Validation error, element </");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String)>($r15);

     label1:
        if $i1 >= 1 goto label2;

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void checkIdRefs()>();

        return 1;

     label2:
        $r7 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.DTDElement[] mElems>;

        $i2 = $i1 - 1;

        $r8 = $r7[$i2];

        $i3 = virtualinvoke $r8.<com.ctc.wstx.dtd.DTDElement: int getAllowedContent()>();

        return $i3;
    }

    public void validationCompleted(boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDValidator r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        z0 := @parameter0: boolean;

        return;
    }

    protected com.ctc.wstx.dtd.ElementIdMap getIdMap()
    {
        com.ctc.wstx.dtd.DTDValidator r0;
        com.ctc.wstx.dtd.ElementIdMap $r1, $r2, $r3;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        $r1 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap>;

        if $r1 != null goto label1;

        $r3 = new com.ctc.wstx.dtd.ElementIdMap;

        specialinvoke $r3.<com.ctc.wstx.dtd.ElementIdMap: void <init>()>();

        r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap> = $r3;

     label1:
        $r2 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap>;

        return $r2;
    }

    protected void checkIdRefs() throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.NameKey $r9, $r12;
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;
        java.lang.String $r6, $r15;
        com.ctc.wstx.dtd.DTDValidator r0;
        com.ctc.wstx.dtd.ElementId $r3;
        com.ctc.wstx.dtd.ElementIdMap $r1, $r2;
        javax.xml.stream.Location $r16;

        r0 := @this: com.ctc.wstx.dtd.DTDValidator;

        $r1 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap>;

        if $r1 == null goto label1;

        $r2 = r0.<com.ctc.wstx.dtd.DTDValidator: com.ctc.wstx.dtd.ElementIdMap mIdMap>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.dtd.ElementIdMap: com.ctc.wstx.dtd.ElementId getFirstUndefined()>();

        if $r3 == null goto label1;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undefined id \'");

        $r6 = virtualinvoke $r3.<com.ctc.wstx.dtd.ElementId: java.lang.String getId()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': referenced from element <");

        $r9 = virtualinvoke $r3.<com.ctc.wstx.dtd.ElementId: com.ctc.wstx.dtd.NameKey getElemName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">, attribute \'");

        $r12 = virtualinvoke $r3.<com.ctc.wstx.dtd.ElementId: com.ctc.wstx.dtd.NameKey getAttrName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r3.<com.ctc.wstx.dtd.ElementId: javax.xml.stream.Location getLocation()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.DTDValidator: void reportValidationProblem(java.lang.String,javax.xml.stream.Location)>($r15, $r16);

     label1:
        return;
    }
}
