public abstract class com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind extends com.hp.hpl.jena.sparql.core.DatasetGraphBase
{

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBase: void <init>()>();

        return;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r5, $r6, $r7;
        com.hp.hpl.jena.graph.Node r0, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind r1;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInDftGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        return $r7;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: boolean isWildcard(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 != 0 goto label2;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findNG(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r2, r3, r4);

        return $r6;

     label2:
        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findAny(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        return $r5;
    }

    public java.util.Iterator findNG(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r5, r6;
        com.hp.hpl.jena.graph.Node r0, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind r1;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isUnionGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        goto label3;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: boolean isWildcard(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 != 0 goto label2;

        r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r2, r3, r4);

        goto label3;

     label2:
        r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

     label3:
        if r6 != null goto label4;

        $r5 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator nullIterator()>();

        return $r5;

     label4:
        return r6;
    }

    protected java.util.Iterator findAny(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r4, $r5, $r6, $r7;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInDftGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        if $r4 != null goto label1;

        if $r5 != null goto label1;

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator nullIterator()>();

        return $r7;

     label1:
        $r6 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator append(java.util.Iterator,java.util.Iterator)>($r4, $r5);

        return $r6;
    }

    protected abstract java.util.Iterator findInDftGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node);

    protected abstract java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node);

    protected abstract java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node);
}
