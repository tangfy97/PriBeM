public class org.apache.lucene.analysis.compound.hyphenation.PatternParser extends org.xml.sax.helpers.DefaultHandler
{
    org.xml.sax.XMLReader parser;
    int currElement;
    org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer;
    java.lang.StringBuilder token;
    java.util.ArrayList exception;
    char hyphenChar;
    java.lang.String errMsg;
    static final int ELEM_CLASSES;
    static final int ELEM_EXCEPTIONS;
    static final int ELEM_PATTERNS;
    static final int ELEM_HYPHEN;

    public void <init>()
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        org.xml.sax.XMLReader $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r1;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token> = $r1;

        $r2 = staticinvoke <org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader createParser()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader parser> = $r2;

        $r3 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

        $r4 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r0);

        $r5 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r0);

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: char hyphenChar> = 45;

        return;
    }

    public void <init>(org.apache.lucene.analysis.compound.hyphenation.PatternConsumer)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        org.apache.lucene.analysis.compound.hyphenation.PatternConsumer r1;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer;

        specialinvoke r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: void <init>()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer> = r1;

        return;
    }

    public void setConsumer(org.apache.lucene.analysis.compound.hyphenation.PatternConsumer)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        org.apache.lucene.analysis.compound.hyphenation.PatternConsumer r1;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer;

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer> = r1;

        return;
    }

    public void parse(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        org.xml.sax.InputSource $r1;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: void parse(org.xml.sax.InputSource)>($r1);

        return;
    }

    public void parse(java.io.File) throws java.io.IOException
    {
        org.xml.sax.InputSource $r0;
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r4;
        java.net.URI $r2;
        java.lang.String $r3;
        java.io.File r1;

        r4 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: java.io.File;

        $r0 = new org.xml.sax.InputSource;

        $r2 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>();

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r3);

        virtualinvoke r4.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: void parse(org.xml.sax.InputSource)>($r0);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws java.io.IOException
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        org.xml.sax.InputSource r1;
        org.xml.sax.XMLReader $r2;
        org.xml.sax.SAXException $r3;
        java.io.IOException $r4;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: org.xml.sax.InputSource;

     label1:
        $r2 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    static org.xml.sax.XMLReader createParser()
    {
        javax.xml.parsers.SAXParserFactory $r0;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r3;
        org.xml.sax.XMLReader $r2;
        javax.xml.parsers.SAXParser $r1;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create XMLReader: ");

        $r7 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.lang.String readToken(java.lang.StringBuffer)
    {
        boolean $z0, $z1, z2, z3;
        java.lang.StringBuilder $r2, $r5, $r6, $r8, $r9, $r10, $r12;
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r1;
        java.lang.StringBuffer r0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, i13, i14, i15, $i16, i17, $i18;
        java.lang.String $r3, $r4, $r7, $r11;
        char $c4, $c5, $c11, $c12;

        r1 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r0 := @parameter0: java.lang.StringBuffer;

        z2 = 0;

        i13 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i13 >= $i0 goto label02;

        $c12 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i13);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c12);

        if $z1 == 0 goto label02;

        z2 = 1;

        i13 = i13 + 1;

        goto label01;

     label02:
        if z2 == 0 goto label05;

        i14 = i13;

     label03:
        $i6 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i14 >= $i6 goto label04;

        $i10 = i14 - i13;

        $c11 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i14);

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>($i10, $c11);

        i14 = i14 + 1;

        goto label03;

     label04:
        $i7 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $i8 = $i7 - i13;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>($i8);

        $r9 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $i9 = virtualinvoke $r9.<java.lang.StringBuilder: int length()>();

        if $i9 <= 0 goto label05;

        $r10 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        virtualinvoke $r12.<java.lang.StringBuilder: void setLength(int)>(0);

        return $r11;

     label05:
        z3 = 0;

        i15 = 0;

     label06:
        $i16 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i15 >= $i16 goto label08;

        $c5 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i15);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);

        if $z0 == 0 goto label07;

        z3 = 1;

        goto label08;

     label07:
        i15 = i15 + 1;

        goto label06;

     label08:
        $r2 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i17 = i15;

     label09:
        $i18 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i17 >= $i18 goto label10;

        $i3 = i17 - i15;

        $c4 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i17);

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>($i3, $c4);

        i17 = i17 + 1;

        goto label09;

     label10:
        $i1 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - i15;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>($i2);

        if z3 == 0 goto label11;

        $r6 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        virtualinvoke $r8.<java.lang.StringBuilder: void setLength(int)>(0);

        return $r7;

     label11:
        $r5 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>(r0);

        return null;
    }

    protected static java.lang.String getPattern(java.lang.String)
    {
        char $c1, $c2;
        int $i0, i3;
        java.lang.StringBuilder $r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 != 0 goto label2;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    protected java.util.ArrayList normalizeException(java.util.ArrayList)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r6;
        org.apache.lucene.analysis.compound.hyphenation.Hyphen $r14;
        java.util.ArrayList r1, $r11;
        int $i0, $i1, $i2, i6, i7, $i8, $i9;
        java.lang.String r3, $r5, $r7, $r13;
        boolean $z0;
        char $c3, $c4, $c5;
        char[] r8;
        java.lang.Object $r2;
        java.lang.StringBuilder $r12;

        r6 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: java.util.ArrayList;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        i6 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i6 >= $i0 goto label9;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label7;

        r3 = (java.lang.String) $r2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        i7 = 0;

     label2:
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if i7 >= $i1 goto label5;

        $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i7);

        $c4 = r6.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: char hyphenChar>;

        $i8 = (int) $c3;

        $i9 = (int) $c4;

        if $i8 == $i9 goto label3;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        goto label4;

     label3:
        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        virtualinvoke $r12.<java.lang.StringBuilder: void setLength(int)>(0);

        r8 = newarray (char)[1];

        $c5 = r6.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: char hyphenChar>;

        r8[0] = $c5;

        $r14 = new org.apache.lucene.analysis.compound.hyphenation.Hyphen;

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>(r8);

        specialinvoke $r14.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r13, null, null);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label4:
        i7 = i7 + 1;

        goto label2;

     label5:
        $i2 = virtualinvoke $r12.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label6;

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label6:
        goto label8;

     label7:
        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label8:
        i6 = i6 + 1;

        goto label1;

     label9:
        return $r11;
    }

    protected java.lang.String getExceptionWord(java.util.ArrayList)
    {
        org.apache.lucene.analysis.compound.hyphenation.Hyphen $r4, $r6;
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r9;
        java.util.ArrayList r1;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r3;
        java.lang.String $r2, $r5, $r7, $r8;
        boolean $z0;

        r9 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: java.util.ArrayList;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label4;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $z0 = $r3 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.String) $r3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label3;

     label2:
        $r4 = (org.apache.lucene.analysis.compound.hyphenation.Hyphen) $r3;

        $r5 = $r4.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak>;

        if $r5 == null goto label3;

        $r6 = (org.apache.lucene.analysis.compound.hyphenation.Hyphen) $r3;

        $r7 = $r6.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    protected static java.lang.String getInterletterValues(java.lang.String)
    {
        char $c1;
        int $i0, i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5, $r6;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i2 = i2 + 1;

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)
    {
        org.xml.sax.InputSource $r3;
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r4;
        java.net.URL $r6;
        java.lang.Class $r5;
        java.lang.String r0, r1, $r2, $r7;
        boolean $z0, $z1;

        r4 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>("(?i).*\\bhyphenation.dtd\\b.*");

        if $z1 != 0 goto label2;

     label1:
        $r2 = "hyphenation-info";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

     label2:
        $r3 = new org.xml.sax.InputSource;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.net.URL getResource(java.lang.String)>("hyphenation.dtd");

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String toExternalForm()>();

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r7);

        return $r3;

     label3:
        return null;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r1;
        org.apache.lucene.analysis.compound.hyphenation.Hyphen $r3;
        java.util.ArrayList $r5, $r10, $r12;
        int $i0, $i1;
        org.xml.sax.Attributes r4;
        java.lang.String r0, $r6, $r7, $r8, $r11, $r13, r14, r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c2;
        java.lang.StringBuilder $r2, $r9, $r16;

        r1 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r14 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("hyphen-char");

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("value");

        if $r13 == null goto label1;

        $i1 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i1 != 1 goto label1;

        $c2 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(0);

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: char hyphenChar> = $c2;

     label1:
        goto label7;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("classes");

        if $z1 == 0 goto label3;

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 1;

        goto label7;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("patterns");

        if $z2 == 0 goto label4;

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 3;

        goto label7;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("exceptions");

        if $z3 == 0 goto label5;

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 2;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception> = $r12;

        goto label7;

     label5:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("hyphen");

        if $z4 == 0 goto label7;

        $r2 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label6;

        $r10 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r9 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label6:
        $r5 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r3 = new org.apache.lucene.analysis.compound.hyphenation.Hyphen;

        $r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("pre");

        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("no");

        $r8 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("post");

        specialinvoke $r3.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 4;

     label7:
        $r16 = r1.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r0;
        java.util.ArrayList $r8, $r9, $r10, $r11, $r14, $r16;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r5, $r6, $r13, r18, r19, r20;
        java.lang.StringBuilder $r1, $r2, $r7;
        java.lang.Object $r15;
        org.apache.lucene.analysis.compound.hyphenation.PatternConsumer $r4, $r12, $r17;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r20 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label5;

        $r2 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement>;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label4;
        };

     label1:
        $r17 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        interfaceinvoke $r17.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addClass(java.lang.String)>($r3);

        goto label4;

     label2:
        $r8 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r9 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r10 = virtualinvoke r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList normalizeException(java.util.ArrayList)>($r9);

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception> = $r10;

        $r12 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        $r11 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r13 = virtualinvoke r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getExceptionWord(java.util.ArrayList)>($r11);

        $r14 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object clone()>();

        $r16 = (java.util.ArrayList) $r15;

        interfaceinvoke $r12.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addException(java.lang.String,java.util.ArrayList)>($r13, $r16);

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        $r5 = staticinvoke <org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getPattern(java.lang.String)>($r3);

        $r6 = staticinvoke <org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getInterletterValues(java.lang.String)>($r3);

        interfaceinvoke $r4.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addPattern(java.lang.String,java.lang.String)>($r5, $r6);

        goto label4;

     label4:
        $i2 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement>;

        if $i2 == 4 goto label5;

        $r7 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.StringBuilder token>;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

     label5:
        $i3 = r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement>;

        if $i3 != 4 goto label6;

        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 2;

        goto label7;

     label6:
        r0.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement> = 0;

     label7:
        return;
    }

    public void characters(char[], int, int)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r2;
        java.util.ArrayList $r6, $r7, $r8, $r9, $r12, $r14, $r15;
        java.lang.StringBuffer $r0;
        int i0, i1, $i2;
        java.lang.String $r4, $r5, $r11, r17;
        char[] r1;
        java.lang.Object $r13;
        org.apache.lucene.analysis.compound.hyphenation.PatternConsumer $r3, $r10, $r16;

        r2 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r1, i1, i0);

        r17 = virtualinvoke r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String readToken(java.lang.StringBuffer)>($r0);

     label1:
        if r17 == null goto label6;

        $i2 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: int currElement>;

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r16 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        interfaceinvoke $r16.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addClass(java.lang.String)>(r17);

        goto label5;

     label3:
        $r6 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

        $r7 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r8 = virtualinvoke r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList normalizeException(java.util.ArrayList)>($r7);

        r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception> = $r8;

        $r10 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        $r9 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r11 = virtualinvoke r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getExceptionWord(java.util.ArrayList)>($r9);

        $r12 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object clone()>();

        $r14 = (java.util.ArrayList) $r13;

        interfaceinvoke $r10.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addException(java.lang.String,java.util.ArrayList)>($r11, $r14);

        $r15 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.util.ArrayList exception>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

        goto label5;

     label4:
        $r3 = r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: org.apache.lucene.analysis.compound.hyphenation.PatternConsumer consumer>;

        $r4 = staticinvoke <org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getPattern(java.lang.String)>(r17);

        $r5 = staticinvoke <org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String getInterletterValues(java.lang.String)>(r17);

        interfaceinvoke $r3.<org.apache.lucene.analysis.compound.hyphenation.PatternConsumer: void addPattern(java.lang.String,java.lang.String)>($r4, $r5);

     label5:
        r17 = virtualinvoke r2.<org.apache.lucene.analysis.compound.hyphenation.PatternParser: java.lang.String readToken(java.lang.StringBuffer)>($r0);

        goto label1;

     label6:
        return;
    }

    private java.lang.String getLocationString(org.xml.sax.SAXParseException)
    {
        org.apache.lucene.analysis.compound.hyphenation.PatternParser r3;
        org.xml.sax.SAXParseException r1;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, r4, $r5;

        r3 := @this: org.apache.lucene.analysis.compound.hyphenation.PatternParser;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        r4 = $r2;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $i1 = $i0 + 1;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label2:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i2 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getLineNumber()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i3 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getColumnNumber()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.compound.hyphenation.PatternParser: int ELEM_HYPHEN> = 4;

        <org.apache.lucene.analysis.compound.hyphenation.PatternParser: int ELEM_PATTERNS> = 3;

        <org.apache.lucene.analysis.compound.hyphenation.PatternParser: int ELEM_EXCEPTIONS> = 2;

        <org.apache.lucene.analysis.compound.hyphenation.PatternParser: int ELEM_CLASSES> = 1;

        return;
    }
}
