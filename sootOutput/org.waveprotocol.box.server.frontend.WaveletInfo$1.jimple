class org.waveprotocol.box.server.frontend.WaveletInfo$1 extends java.lang.Object implements com.google.common.base.Function
{
    final org.waveprotocol.wave.model.version.HashedVersionFactory val$hashedVersionFactory;
    final org.waveprotocol.box.server.frontend.WaveletInfo this$0;

    void <init>(org.waveprotocol.box.server.frontend.WaveletInfo, org.waveprotocol.wave.model.version.HashedVersionFactory)
    {
        org.waveprotocol.wave.model.version.HashedVersionFactory r2;
        org.waveprotocol.box.server.frontend.WaveletInfo$1 r0;
        org.waveprotocol.box.server.frontend.WaveletInfo r1;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1;

        r1 := @parameter0: org.waveprotocol.box.server.frontend.WaveletInfo;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersionFactory;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1: org.waveprotocol.box.server.frontend.WaveletInfo this$0> = r1;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1: org.waveprotocol.wave.model.version.HashedVersionFactory val$hashedVersionFactory> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Map apply(org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.box.server.frontend.WaveletInfo$1$1 $r1;
        org.waveprotocol.wave.model.id.WaveId r3;
        com.google.common.collect.MapMaker $r0;
        org.waveprotocol.box.server.frontend.WaveletInfo$1 r2;
        java.util.concurrent.ConcurrentMap $r4;

        r2 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1;

        r3 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        $r0 = new com.google.common.collect.MapMaker;

        specialinvoke $r0.<com.google.common.collect.MapMaker: void <init>()>();

        $r1 = new org.waveprotocol.box.server.frontend.WaveletInfo$1$1;

        specialinvoke $r1.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: void <init>(org.waveprotocol.box.server.frontend.WaveletInfo$1,org.waveprotocol.wave.model.id.WaveId)>(r2, r3);

        $r4 = virtualinvoke $r0.<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function)>($r1);

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.waveprotocol.wave.model.id.WaveId $r2;
        java.util.Map $r3;
        java.lang.Object r1;
        org.waveprotocol.box.server.frontend.WaveletInfo$1 r0;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.id.WaveId) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1: java.util.Map apply(org.waveprotocol.wave.model.id.WaveId)>($r2);

        return $r3;
    }
}
