abstract class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    protected final boolean isIndexed(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser r0;
        short $s1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2;
        int i0;
        org.apache.xml.dtm.ref.ExpandedNameTable $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $z0 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: boolean m_indexing>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r3 = $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $s1 = virtualinvoke $r3.<org.apache.xml.dtm.ref.ExpandedNameTable: short getType(int)>(i0);

        if 1 != $s1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected abstract boolean isAfterAxis(int, int);

    protected abstract boolean axisHasBeenProcessed(int);

    protected int getNextIndexed(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r3, $r5, $r6;
        int i0, $i1, $i2, i3, $i4, i5, $i7, $i9, $i11;
        boolean $z0, $z1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser r0;
        org.apache.xml.dtm.ref.ExpandedNameTable $r2, $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser;

        i5 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.ExpandedNameTable: int getNamespaceID(int)>(i0);

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $i2 = virtualinvoke $r4.<org.apache.xml.dtm.ref.ExpandedNameTable: int getLocalNameID(int)>(i0);

        goto label1;

     label1:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int findElementFromIndex(int,int,int)>($i1, $i2, i3);

        $i7 = (int) -2;

        if $i7 == $i4 goto label3;

        $z1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: boolean isAfterAxis(int,int)>(i5, $i4);

        if $z1 == 0 goto label2;

        $i9 = (int) -1;

        return $i9;

     label2:
        return $i4;

     label3:
        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: boolean axisHasBeenProcessed(int)>(i5);

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: boolean nextNode()>();

        goto label1;

     label5:
        $i11 = (int) -1;

        return $i11;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
