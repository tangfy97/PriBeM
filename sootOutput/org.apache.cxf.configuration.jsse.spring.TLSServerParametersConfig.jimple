public class org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig extends org.apache.cxf.configuration.jsse.TLSServerParameters
{

    public void <init>(org.apache.cxf.configuration.security.TLSServerParametersType) throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig r0;
        org.apache.cxf.configuration.security.ClientAuthentication $r8;
        java.security.SecureRandom $r10;
        org.apache.cxf.configuration.security.TLSServerParametersType r1;
        org.apache.cxf.configuration.security.FiltersType $r14;
        org.apache.cxf.configuration.security.TrustManagersType $r4;
        java.lang.String $r2, $r11, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.cxf.configuration.security.KeyManagersType $r6;
        org.apache.cxf.configuration.security.CipherSuites $r12;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r3;
        org.apache.cxf.configuration.security.SecureRandomParameters $r9;
        java.util.List $r13;
        javax.net.ssl.TrustManager[] $r5;
        javax.net.ssl.KeyManager[] $r7;

        r0 := @this: org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig;

        r1 := @parameter0: org.apache.cxf.configuration.security.TLSServerParametersType;

        specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSServerParameters: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetSecureSocketProtocol()>();

        if $z0 == 0 goto label01;

        $r15 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: java.lang.String getSecureSocketProtocol()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setSecureSocketProtocol(java.lang.String)>($r15);

     label01:
        $z1 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetCipherSuitesFilter()>();

        if $z1 == 0 goto label02;

        $r14 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)>($r14);

     label02:
        $z2 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetCipherSuites()>();

        if $z2 == 0 goto label03;

        $r12 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.CipherSuites getCipherSuites()>();

        $r13 = virtualinvoke $r12.<org.apache.cxf.configuration.security.CipherSuites: java.util.List getCipherSuite()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setCipherSuites(java.util.List)>($r13);

     label03:
        $z3 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetJsseProvider()>();

        if $z3 == 0 goto label04;

        $r11 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: java.lang.String getJsseProvider()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setJsseProvider(java.lang.String)>($r11);

     label04:
        $z4 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetSecureRandomParameters()>();

        if $z4 == 0 goto label05;

        $r9 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.SecureRandomParameters getSecureRandomParameters()>();

        $r10 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: java.security.SecureRandom getSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters)>($r9);

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setSecureRandom(java.security.SecureRandom)>($r10);

     label05:
        $z5 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetClientAuthentication()>();

        if $z5 == 0 goto label06;

        $r8 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setClientAuthentication(org.apache.cxf.configuration.security.ClientAuthentication)>($r8);

     label06:
        $z6 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetKeyManagers()>();

        if $z6 == 0 goto label07;

        $r6 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.KeyManagersType getKeyManagers()>();

        $r7 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)>($r6);

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setKeyManagers(javax.net.ssl.KeyManager[])>($r7);

     label07:
        $z7 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetTrustManagers()>();

        if $z7 == 0 goto label08;

        $r4 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.TrustManagersType getTrustManagers()>();

        $r5 = staticinvoke <org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils: javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)>($r4);

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setTrustManagers(javax.net.ssl.TrustManager[])>($r5);

     label08:
        $z8 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetCertConstraints()>();

        if $z8 == 0 goto label09;

        $r3 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r3);

     label09:
        $z9 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: boolean isSetCertAlias()>();

        if $z9 == 0 goto label10;

        $r2 = virtualinvoke r1.<org.apache.cxf.configuration.security.TLSServerParametersType: java.lang.String getCertAlias()>();

        virtualinvoke r0.<org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig: void setCertAlias(java.lang.String)>($r2);

     label10:
        return;
    }
}
