public class com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry extends com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry
{
    public static final java.lang.String TYPE1;
    private java.lang.String namespace;
    private java.lang.String schemaLocation;
    private java.lang.String imageMimeType;

    public void <init>()
    {
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        specialinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: void <init>(java.lang.String)>("stpp");

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace> = "";

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation> = "";

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType> = "";

        return;
    }

    public long getSize()
    {
        long $l0, l8, $l9, $l10, $l11, $l12, $l13;
        byte $b14, $b15;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i16;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        $l0 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: long getContainerSize()>();

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = 8 + $i1;

        $r2 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        $r3 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        $i7 = $i6 + 3;

        l8 = (long) $i7;

        $l10 = $l0 + l8;

        $z0 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: boolean largeBox>;

        if $z0 != 0 goto label1;

        $l12 = $l0 + l8;

        $l13 = $l12 + 8L;

        $b14 = $l13 cmp 4294967296L;

        $i16 = (int) $b14;

        if $i16 < 0 goto label2;

     label1:
        $b15 = 16;

        goto label3;

     label2:
        $b15 = 8;

     label3:
        $l9 = (long) $b15;

        $l11 = $l10 + $l9;

        return $l11;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        long $l1, $l3, $l4, $l5, $l7, $l8, $l10, $l11, $l12, $l14, $l15, $l17, $l18, $l20, $l21, $l22, l23, $l32, $l33;
        java.nio.Buffer $r2, $r6, $r8, $r12, $r14, $r19, $r21;
        java.lang.String $r10, $r11, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r28, $r29, $r30;
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.BoxParser r31;
        java.nio.ByteBuffer $r0, $r3, $r5, $r7, $r9, $r13, $r15, $r20, $r22, r27;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r4;
        int $i0, $i2, $i6, $i9, $i13, $i16, $i19, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;

        r4 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r27 := @parameter1: java.nio.ByteBuffer;

        l23 := @parameter2: long;

        r31 := @parameter3: com.coremedia.iso.BoxParser;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r3 = (java.nio.ByteBuffer) $r2;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r3);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i0 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>($r0);

        r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: int dataReferenceIndex> = $i0;

        $l1 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(1024);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r7 = (java.nio.ByteBuffer) $r6;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r7);

        $r8 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = (java.nio.ByteBuffer) $r8;

        $r10 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>($r9);

        r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace> = $r10;

        $r11 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        $l3 = (long) $i2;

        $l4 = $l1 + $l3;

        $l5 = $l4 + 1L;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l5);

        $r12 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r13 = (java.nio.ByteBuffer) $r12;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r13);

        $r14 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r15 = (java.nio.ByteBuffer) $r14;

        $r16 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>($r15);

        r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation> = $r16;

        $r17 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i6 = virtualinvoke $r17.<java.lang.String: int length()>();

        $l7 = (long) $i6;

        $l8 = $l1 + $l7;

        $r18 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        $i9 = virtualinvoke $r18.<java.lang.String: int length()>();

        $l10 = (long) $i9;

        $l11 = $l8 + $l10;

        $l12 = $l11 + 2L;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l12);

        $r19 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r20 = (java.nio.ByteBuffer) $r19;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r20);

        $r21 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r22 = (java.nio.ByteBuffer) $r21;

        $r23 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>($r22);

        r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType> = $r23;

        $r24 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i13 = virtualinvoke $r24.<java.lang.String: int length()>();

        $l14 = (long) $i13;

        $l15 = $l1 + $l14;

        $r25 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        $i16 = virtualinvoke $r25.<java.lang.String: int length()>();

        $l17 = (long) $i16;

        $l18 = $l15 + $l17;

        $r26 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        $i19 = virtualinvoke $r26.<java.lang.String: int length()>();

        $l20 = (long) $i19;

        $l21 = $l18 + $l20;

        $l22 = $l21 + 3L;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l22);

        $i24 = virtualinvoke r27.<java.nio.ByteBuffer: int remaining()>();

        $r28 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i25 = virtualinvoke $r28.<java.lang.String: int length()>();

        $i26 = $i24 + $i25;

        $r29 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        $i27 = virtualinvoke $r29.<java.lang.String: int length()>();

        $i28 = $i26 + $i27;

        $r30 = r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        $i29 = virtualinvoke $r30.<java.lang.String: int length()>();

        $i30 = $i28 + $i29;

        $i31 = $i30 + 3;

        $l32 = (long) $i31;

        $l33 = l23 - $l32;

        virtualinvoke r4.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: void parseContainer(com.googlecode.mp4parser.DataSource,long,com.coremedia.iso.BoxParser)>(r1, $l33, r31);

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        java.nio.ByteBuffer $r2, $r6, $r11;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r1;
        java.nio.Buffer $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r4, $r5, $r7, $r8, $r9;
        java.nio.channels.WritableByteChannel r0;

        r1 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.nio.ByteBuffer getHeader()>();

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r2);

        $r3 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = 8 + $i0;

        $r4 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r5 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 3;

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i6);

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $i7 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: int dataReferenceIndex>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>($r6, $i7);

        $r7 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeZeroTermUtf8String(java.nio.ByteBuffer,java.lang.String)>($r6, $r7);

        $r8 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeZeroTermUtf8String(java.nio.ByteBuffer,java.lang.String)>($r6, $r8);

        $r9 = r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeZeroTermUtf8String(java.nio.ByteBuffer,java.lang.String)>($r6, $r9);

        $r10 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r11 = (java.nio.ByteBuffer) $r10;

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r11);

        virtualinvoke r1.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: void writeContainer(java.nio.channels.WritableByteChannel)>(r0);

        return;
    }

    public java.lang.String getNamespace()
    {
        java.lang.String $r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace>;

        return $r1;
    }

    public void setNamespace(java.lang.String)
    {
        java.lang.String r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String namespace> = r1;

        return;
    }

    public java.lang.String getSchemaLocation()
    {
        java.lang.String $r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation>;

        return $r1;
    }

    public void setSchemaLocation(java.lang.String)
    {
        java.lang.String r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String schemaLocation> = r1;

        return;
    }

    public java.lang.String getImageMimeType()
    {
        java.lang.String $r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        $r1 = r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType>;

        return $r1;
    }

    public void setImageMimeType(java.lang.String)
    {
        java.lang.String r1;
        com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry r0;

        r0 := @this: com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry;

        r1 := @parameter0: java.lang.String;

        r0.<com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String imageMimeType> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.coremedia.iso.boxes.sampleentry.SubtitleSampleEntry: java.lang.String TYPE1> = "stpp";

        return;
    }
}
