public final enum class ucar.nc2.ft.point.standard.Table$Type extends java.lang.Enum
{
    public static final enum ucar.nc2.ft.point.standard.Table$Type ArrayStructure;
    public static final enum ucar.nc2.ft.point.standard.Table$Type Construct;
    public static final enum ucar.nc2.ft.point.standard.Table$Type Contiguous;
    public static final enum ucar.nc2.ft.point.standard.Table$Type LinkedList;
    public static final enum ucar.nc2.ft.point.standard.Table$Type MultidimInner;
    public static final enum ucar.nc2.ft.point.standard.Table$Type MultidimInner3D;
    public static final enum ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo;
    public static final enum ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo3D;
    public static final enum ucar.nc2.ft.point.standard.Table$Type MultidimStructure;
    public static final enum ucar.nc2.ft.point.standard.Table$Type NestedStructure;
    public static final enum ucar.nc2.ft.point.standard.Table$Type ParentId;
    public static final enum ucar.nc2.ft.point.standard.Table$Type ParentIndex;
    public static final enum ucar.nc2.ft.point.standard.Table$Type Singleton;
    public static final enum ucar.nc2.ft.point.standard.Table$Type Structure;
    public static final enum ucar.nc2.ft.point.standard.Table$Type Top;
    private static final ucar.nc2.ft.point.standard.Table$Type[] $VALUES;

    public static ucar.nc2.ft.point.standard.Table$Type[] values()
    {
        java.lang.Object $r1;
        ucar.nc2.ft.point.standard.Table$Type[] $r0, $r2;

        $r0 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (ucar.nc2.ft.point.standard.Table$Type[]) $r1;

        return $r2;
    }

    public static ucar.nc2.ft.point.standard.Table$Type valueOf(java.lang.String)
    {
        ucar.nc2.ft.point.standard.Table$Type $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lucar/nc2/ft/point/standard/Table$Type;", r0);

        $r2 = (ucar.nc2.ft.point.standard.Table$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        ucar.nc2.ft.point.standard.Table$Type r0;
        int i0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        ucar.nc2.ft.point.standard.Table$Type[] $r15;
        ucar.nc2.ft.point.standard.Table$Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        $r0 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("ArrayStructure", 0);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ArrayStructure> = $r0;

        $r1 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r1.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("Construct", 1);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Construct> = $r1;

        $r2 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("Contiguous", 2);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Contiguous> = $r2;

        $r3 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r3.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("LinkedList", 3);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type LinkedList> = $r3;

        $r4 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r4.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("MultidimInner", 4);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner> = $r4;

        $r5 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r5.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("MultidimInner3D", 5);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner3D> = $r5;

        $r6 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r6.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("MultidimInnerPsuedo", 6);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo> = $r6;

        $r7 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r7.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("MultidimInnerPsuedo3D", 7);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo3D> = $r7;

        $r8 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r8.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("MultidimStructure", 8);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimStructure> = $r8;

        $r9 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r9.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("NestedStructure", 9);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type NestedStructure> = $r9;

        $r10 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r10.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("ParentId", 10);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentId> = $r10;

        $r11 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r11.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("ParentIndex", 11);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentIndex> = $r11;

        $r12 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r12.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("Singleton", 12);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Singleton> = $r12;

        $r13 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r13.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("Structure", 13);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure> = $r13;

        $r14 = new ucar.nc2.ft.point.standard.Table$Type;

        specialinvoke $r14.<ucar.nc2.ft.point.standard.Table$Type: void <init>(java.lang.String,int)>("Top", 14);

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top> = $r14;

        $r15 = newarray (ucar.nc2.ft.point.standard.Table$Type)[15];

        $r16 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ArrayStructure>;

        $r15[0] = $r16;

        $r17 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Construct>;

        $r15[1] = $r17;

        $r18 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Contiguous>;

        $r15[2] = $r18;

        $r19 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type LinkedList>;

        $r15[3] = $r19;

        $r20 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner>;

        $r15[4] = $r20;

        $r21 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner3D>;

        $r15[5] = $r21;

        $r22 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo>;

        $r15[6] = $r22;

        $r23 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInnerPsuedo3D>;

        $r15[7] = $r23;

        $r24 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimStructure>;

        $r15[8] = $r24;

        $r25 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type NestedStructure>;

        $r15[9] = $r25;

        $r26 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentId>;

        $r15[10] = $r26;

        $r27 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type ParentIndex>;

        $r15[11] = $r27;

        $r28 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Singleton>;

        $r15[12] = $r28;

        $r29 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r15[13] = $r29;

        $r30 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

        $r15[14] = $r30;

        <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type[] $VALUES> = $r15;

        return;
    }
}
