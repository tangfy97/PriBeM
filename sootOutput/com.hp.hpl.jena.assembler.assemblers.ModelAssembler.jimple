public abstract class com.hp.hpl.jena.assembler.assemblers.ModelAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    protected abstract com.hp.hpl.jena.rdf.model.Model openEmptyModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode);

    protected com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Content, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.assembler.Mode r3;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        com.hp.hpl.jena.rdf.model.Resource r2;
        com.hp.hpl.jena.assembler.Content r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter2: com.hp.hpl.jena.assembler.Content;

        r3 := @parameter3: com.hp.hpl.jena.assembler.Mode;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.rdf.model.Model openEmptyModel(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r1, r2, r3);

        $z0 = virtualinvoke r5.<com.hp.hpl.jena.assembler.Content: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: void addContent(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.assembler.Content)>(r2, $r4, r5);

     label1:
        return $r4;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.assembler.Mode r4;
        com.hp.hpl.jena.rdf.model.Resource r2;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Model $r5;
        com.hp.hpl.jena.assembler.Content $r3, $r6;
        com.hp.hpl.jena.shared.PrefixMapping $r7;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.assembler.Content getInitialContent(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Content,com.hp.hpl.jena.assembler.Mode)>(r1, r2, $r3, r4);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.assembler.Content getContent(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: void addContent(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.assembler.Content)>(r2, $r5, $r6);

        $r7 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)>($r7);

        return $r5;
    }

    protected void addContent(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.assembler.Content)
    {
        java.lang.Throwable $r2;
        com.hp.hpl.jena.assembler.exceptions.TransactionAbortedException $r3;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r5;
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.assembler.Content r1;
        com.hp.hpl.jena.rdf.model.Resource r4;
        boolean $z0;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter2: com.hp.hpl.jena.assembler.Content;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: boolean supportsTransactions()>();

        if $z0 == 0 goto label4;

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model begin()>();

     label1:
        virtualinvoke r1.<com.hp.hpl.jena.assembler.Content: com.hp.hpl.jena.rdf.model.Model fill(com.hp.hpl.jena.rdf.model.Model)>(r0);

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model commit()>();

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model abort()>();

        $r3 = new com.hp.hpl.jena.assembler.exceptions.TransactionAbortedException;

        specialinvoke $r3.<com.hp.hpl.jena.assembler.exceptions.TransactionAbortedException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.Throwable)>(r4, $r2);

        throw $r3;

     label4:
        virtualinvoke r1.<com.hp.hpl.jena.assembler.Content: com.hp.hpl.jena.rdf.model.Model fill(com.hp.hpl.jena.rdf.model.Model)>(r0);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r0;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r4;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.shared.PrefixMapping $r2, $r3;

        r4 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r0 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>();

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: com.hp.hpl.jena.shared.PrefixMapping getPrefixes(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.shared.PrefixMapping)>(r0, r1, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Mode r2;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.Object $r3;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter1: com.hp.hpl.jena.assembler.Mode;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: java.lang.Object open(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r0, r1, r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Model) $r3;

        return $r4;
    }

    protected com.hp.hpl.jena.assembler.Content getInitialContent(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r6;
        com.hp.hpl.jena.rdf.model.Statement $r8;
        com.hp.hpl.jena.rdf.model.Resource $r1, r2, $r9;
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r5;
        com.hp.hpl.jena.rdf.model.Model $r0;
        com.hp.hpl.jena.assembler.Content $r7;
        boolean $z0;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r6 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r3 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property initialContent>;

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r3);

     label1:
        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        specialinvoke r5.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: void transferContentProperties(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>($r0, $r9, $r1);

        goto label1;

     label2:
        $r7 = specialinvoke r5.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.assembler.Content contentFromModel(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource)>(r6, r2, $r0, $r1);

        return $r7;
    }

    private com.hp.hpl.jena.assembler.Content contentFromModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.rdf.model.Resource r3, r4, $r5;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r2;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.lang.Object $r6;
        com.hp.hpl.jena.assembler.Content $r7;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter2: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter3: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = <com.hp.hpl.jena.assembler.Content: com.hp.hpl.jena.assembler.Content empty>;

        goto label2;

     label1:
        $r5 = specialinvoke r2.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.rdf.model.Resource completedClone(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model)>(r3, r4, r0);

        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r5);

        $r7 = (com.hp.hpl.jena.assembler.Content) $r6;

     label2:
        return $r7;
    }

    protected com.hp.hpl.jena.assembler.Content getContent(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2, $r5;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Model $r3;
        java.lang.Object $r6;
        com.hp.hpl.jena.assembler.Content $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r4 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.rdf.model.Resource oneLevelClone(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = <com.hp.hpl.jena.assembler.Content: com.hp.hpl.jena.assembler.Content empty>;

        goto label2;

     label1:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.rdf.model.Resource completedClone(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model)>(r1, $r2, $r3);

        $r6 = interfaceinvoke r4.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r4, $r5);

        $r7 = (com.hp.hpl.jena.assembler.Content) $r6;

     label2:
        return $r7;
    }

    private com.hp.hpl.jena.rdf.model.Resource completedClone(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Resource r1, $r2, r5, $r8;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r9;
        com.hp.hpl.jena.rdf.model.Model r0, $r4, $r6, $r7;

        r9 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r5 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter2: com.hp.hpl.jena.rdf.model.Model;

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource Content>;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r1, $r3, $r2);

        $r6 = interfaceinvoke r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createUnion(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Model)>($r6, $r4);

        $r8 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)>($r7);

        return $r8;
    }

    private com.hp.hpl.jena.rdf.model.Resource oneLevelClone(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r2;
        com.hp.hpl.jena.rdf.model.Model $r0;
        com.hp.hpl.jena.rdf.model.Resource $r1, r3;

        r2 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r1 = interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        specialinvoke r2.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: void transferContentProperties(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>($r0, r3, $r1);

        return $r1;
    }

    private void transferContentProperties(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource)
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.hp.hpl.jena.util.iterator.Map1 $r3;
        com.hp.hpl.jena.rdf.model.Resource r2, r6;
        java.util.List $r9;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r0;
        com.hp.hpl.jena.rdf.model.Property $r8;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r6 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r2 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: com.hp.hpl.jena.util.iterator.Map1 replaceSubjectMap(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        $r4 = <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.util.Set contentProperties>;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.hp.hpl.jena.rdf.model.Property) $r7;

        $r9 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler: java.util.List copyProperties(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.util.iterator.Map1,com.hp.hpl.jena.rdf.model.Property)>(r6, $r3, $r8);

        interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(java.util.List)>($r9);

        goto label1;

     label2:
        return;
    }

    private java.util.List copyProperties(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.util.iterator.Map1, com.hp.hpl.jena.rdf.model.Property)
    {
        java.util.List $r5;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r6;
        com.hp.hpl.jena.util.iterator.Map1 r3;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r6 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r3 := @parameter1: com.hp.hpl.jena.util.iterator.Map1;

        r1 := @parameter2: com.hp.hpl.jena.rdf.model.Property;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>(r3);

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.util.List toList()>();

        return $r5;
    }

    private com.hp.hpl.jena.util.iterator.Map1 replaceSubjectMap(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler r1;
        com.hp.hpl.jena.assembler.assemblers.ModelAssembler$1 $r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r1 := @this: com.hp.hpl.jena.assembler.assemblers.ModelAssembler;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = new com.hp.hpl.jena.assembler.assemblers.ModelAssembler$1;

        specialinvoke $r0.<com.hp.hpl.jena.assembler.assemblers.ModelAssembler$1: void <init>(com.hp.hpl.jena.assembler.assemblers.ModelAssembler,com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2, r3);

        return $r0;
    }
}
