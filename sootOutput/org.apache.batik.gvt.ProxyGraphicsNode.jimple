public class org.apache.batik.gvt.ProxyGraphicsNode extends org.apache.batik.gvt.AbstractGraphicsNode
{
    protected org.apache.batik.gvt.GraphicsNode source;

    public void <init>()
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void <init>()>();

        return;
    }

    public void setSource(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source> = r1;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getSource()
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        return $r1;
    }

    public void primitivePaint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        java.awt.Graphics2D r2;
        org.apache.batik.gvt.GraphicsNode $r1, $r3;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>(r2);

     label1:
        return;
    }

    public java.awt.geom.Rectangle2D getPrimitiveBounds()
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;
        java.awt.geom.Rectangle2D $r3;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        return $r3;
    }

    public java.awt.geom.Rectangle2D getTransformedPrimitiveBounds(java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r4;
        java.awt.geom.Rectangle2D $r5;
        java.awt.geom.AffineTransform r2, $r3, $r6, $r7, r8;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        r2 := @parameter0: java.awt.geom.AffineTransform;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        r8 = r2;

        $r3 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        if $r3 == null goto label2;

        $r6 = new java.awt.geom.AffineTransform;

        specialinvoke $r6.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r2);

        r8 = $r6;

        $r7 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r6.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r7);

     label2:
        $r4 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedPrimitiveBounds(java.awt.geom.AffineTransform)>(r8);

        return $r5;
    }

    public java.awt.geom.Rectangle2D getGeometryBounds()
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;
        java.awt.geom.Rectangle2D $r3;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getGeometryBounds()>();

        return $r3;
    }

    public java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r4;
        java.awt.geom.Rectangle2D $r5;
        java.awt.geom.AffineTransform r2, $r3, $r6, $r7, r8;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        r2 := @parameter0: java.awt.geom.AffineTransform;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        r8 = r2;

        $r3 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        if $r3 == null goto label2;

        $r6 = new java.awt.geom.AffineTransform;

        specialinvoke $r6.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r2);

        r8 = $r6;

        $r7 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r6.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r7);

     label2:
        $r4 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>(r8);

        return $r5;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds()
    {
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;
        java.awt.geom.Rectangle2D $r3;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        return $r3;
    }

    public java.awt.Shape getOutline()
    {
        java.awt.Shape $r3;
        org.apache.batik.gvt.ProxyGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r2;

        r0 := @this: org.apache.batik.gvt.ProxyGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.ProxyGraphicsNode: org.apache.batik.gvt.GraphicsNode source>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.GraphicsNode: java.awt.Shape getOutline()>();

        return $r3;
    }
}
