public class org.apache.commons.configuration.tree.ViewNode extends org.apache.commons.configuration.tree.DefaultConfigurationNode
{

    public void <init>()
    {
        org.apache.commons.configuration.tree.ViewNode r0;

        r0 := @this: org.apache.commons.configuration.tree.ViewNode;

        specialinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void <init>()>();

        return;
    }

    public void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.tree.ViewNode r3;
        java.lang.IllegalArgumentException $r1;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r2;

        r3 := @this: org.apache.commons.configuration.tree.ViewNode;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        specialinvoke r3.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

        interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: void setParentNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r2);

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute node must not be null!");

        throw $r1;

     label2:
        return;
    }

    public void addChild(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.tree.ViewNode r3;
        java.lang.IllegalArgumentException $r1;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r2;

        r3 := @this: org.apache.commons.configuration.tree.ViewNode;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        specialinvoke r3.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

        interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: void setParentNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r2);

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Child node must not be null!");

        throw $r1;

     label2:
        return;
    }

    public void appendAttributes(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.commons.configuration.tree.ViewNode r3;
        java.lang.Object $r4;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r5;
        boolean $z0;

        r3 := @this: org.apache.commons.configuration.tree.ViewNode;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r4;

        virtualinvoke r3.<org.apache.commons.configuration.tree.ViewNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        goto label1;

     label2:
        return;
    }

    public void appendChildren(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.commons.configuration.tree.ViewNode r3;
        java.lang.Object $r4;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r5;
        boolean $z0;

        r3 := @this: org.apache.commons.configuration.tree.ViewNode;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r4;

        virtualinvoke r3.<org.apache.commons.configuration.tree.ViewNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        goto label1;

     label2:
        return;
    }
}
