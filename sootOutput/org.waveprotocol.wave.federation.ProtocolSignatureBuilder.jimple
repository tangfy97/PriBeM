public final class org.waveprotocol.wave.federation.ProtocolSignatureBuilder extends java.lang.Object
{
    private org.waveprotocol.wave.communication.Blob signatureBytes;
    private org.waveprotocol.wave.communication.Blob signerId;
    private org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm;

    public void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolSignatureBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolSignatureBuilder setSignatureBytes(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder r0;
        org.waveprotocol.wave.communication.Blob r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolSignatureBuilder;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        r0.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.communication.Blob signatureBytes> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolSignatureBuilder setSignerId(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder r0;
        org.waveprotocol.wave.communication.Blob r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolSignatureBuilder;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        r0.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.communication.Blob signerId> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolSignatureBuilder setSignatureAlgorithm(org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm)
    {
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder r0;
        org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolSignatureBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm;

        r0.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolSignature build(org.waveprotocol.wave.federation.ProtocolSignatureBuilder$Factory)
    {
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder$Factory r0;
        org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm $r5;
        org.waveprotocol.wave.federation.ProtocolSignature $r1;
        org.waveprotocol.wave.federation.ProtocolSignatureBuilder r2;
        org.waveprotocol.wave.communication.Blob $r3, $r4;

        r2 := @this: org.waveprotocol.wave.federation.ProtocolSignatureBuilder;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignatureBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder$Factory: org.waveprotocol.wave.federation.ProtocolSignature create()>();

        $r3 = r2.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.communication.Blob signatureBytes>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolSignature: void setSignatureBytes(org.waveprotocol.wave.communication.Blob)>($r3);

        $r4 = r2.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.communication.Blob signerId>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolSignature: void setSignerId(org.waveprotocol.wave.communication.Blob)>($r4);

        $r5 = r2.<org.waveprotocol.wave.federation.ProtocolSignatureBuilder: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolSignature: void setSignatureAlgorithm(org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm)>($r5);

        return $r1;
    }
}
