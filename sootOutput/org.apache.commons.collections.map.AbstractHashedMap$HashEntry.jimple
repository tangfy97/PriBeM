public class org.apache.commons.collections.map.AbstractHashedMap$HashEntry extends java.lang.Object implements java.util.Map$Entry, org.apache.commons.collections.KeyValue
{
    protected org.apache.commons.collections.map.AbstractHashedMap$HashEntry next;
    protected int hashCode;
    protected java.lang.Object key;
    protected java.lang.Object value;

    protected void <init>(org.apache.commons.collections.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object)
    {
        int i0;
        java.lang.Object r2, r3;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r0, r1;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        r1 := @parameter0: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: org.apache.commons.collections.map.AbstractHashedMap$HashEntry next> = r1;

        r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: int hashCode> = i0;

        r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object key> = r2;

        r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object value> = r3;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.Object $r1, $r2, $r3;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        $r2 = r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object key>;

        $r1 = <org.apache.commons.collections.map.AbstractHashedMap: java.lang.Object NULL>;

        if $r2 != $r1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object key>;

     label2:
        return $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object value>;

        return $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.Object r1, r2;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object value>;

        r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object value> = r2;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map$Entry r2;
        java.lang.Object r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r1;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r0;

        $r3 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        if $r3 != null goto label3;

        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r10 != null goto label7;

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label7;

     label4:
        $r6 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        if $r6 != null goto label5;

        $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r9 != null goto label7;

        goto label6;

     label5:
        $r7 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label7;

     label6:
        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        return $z3;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r2, $r3, $r4;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        if $r3 != null goto label3;

        $i1 = 0;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        $i1 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r1;

        r1 := @this: org.apache.commons.collections.map.AbstractHashedMap$HashEntry;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r5 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractHashedMap$HashEntry: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
