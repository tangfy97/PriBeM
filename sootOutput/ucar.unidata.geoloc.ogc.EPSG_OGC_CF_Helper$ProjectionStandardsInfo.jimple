public final enum class ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo extends java.lang.Enum
{
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Albers_Conic_Equal_Area;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Azimuthal_Equidistant;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Azimuthal_Equal_Area;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Conformal_Conic_2SP;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Polar_Stereographic;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Rotated_Pole;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Stereographic;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Transverse_Mercator;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Latitude_Longitude;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Vertical_Perspective;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Cylindrical_Equal_Area;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Mercator;
    public static final enum ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Orthographic;
    private final int epsgCode;
    private final java.lang.String epsgName;
    private final java.lang.String cfName;
    private static final ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $VALUES;

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] values()
    {
        java.lang.Object $r1;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r0, $r2;

        $r0 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[]) $r1;

        return $r2;
    }

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lucar/unidata/geoloc/ogc/EPSG_OGC_CF_Helper$ProjectionStandardsInfo;", r0);

        $r2 = (ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo) $r1;

        return $r2;
    }

    public java.lang.String getOgcName()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r0;

        r0 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String name()>();

        return $r1;
    }

    public int getEpsgCode()
    {
        int $i0;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r0;

        r0 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $i0 = r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: int epsgCode>;

        return $i0;
    }

    public java.lang.String getEpsgName()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r0;

        r0 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $r1 = r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String epsgName>;

        return $r1;
    }

    public java.lang.String getCfName()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r0;

        r0 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $r1 = r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String cfName>;

        return $r1;
    }

    private void <init>(java.lang.String, int, int, java.lang.String, java.lang.String)
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r0;
        int i0, i1;
        java.lang.String r1, r2, r3;

        r0 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: int epsgCode> = i1;

        r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String epsgName> = r2;

        r0.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String cfName> = r3;

        return;
    }

    public java.lang.String toString()
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r9, $r10, $r12;
        java.lang.String $r3, $r8, $r11, $r13;

        r2 := @this: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[[OGC: ");

        $r3 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String name()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] [EPSG ");

        $i0 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: int getEpsgCode()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String getEpsgName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] [CF: ");

        $r11 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String getCfName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]");

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo getProjectionByOgcName(java.lang.String)
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r1, r2;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r0;
        int i0, i1;
        java.lang.String $r3, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] values()>();

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r0[i1];

        $r3 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String name()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown>;

        return $r1;
    }

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo getProjectionByEpsgCode(int)
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r1, r2;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r0;
        int i0, $i1, i2, i3;

        i2 := @parameter0: int;

        $r0 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = $r0[i3];

        $i1 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: int getEpsgCode()>();

        if $i1 != i2 goto label2;

        return r2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown>;

        return $r1;
    }

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo getProjectionByEpsgName(java.lang.String)
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r1, r2;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r0;
        int i0, i1;
        java.lang.String $r3, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] values()>();

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r0[i1];

        $r3 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String getEpsgName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown>;

        return $r1;
    }

    public static ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo getProjectionByCfName(java.lang.String)
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r1, r2;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r0;
        int i0, i1;
        java.lang.String $r3, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] values()>();

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r0[i1];

        $r3 = virtualinvoke r2.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: java.lang.String getCfName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown>;

        return $r1;
    }

    static void <clinit>()
    {
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;
        ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $r14;
        int $i1, $i3, $i5;

        $r29 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r29.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Unknown", 0, 0, "Unknown", "unknown");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown> = $r29;

        $r30 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r30.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Albers_Conic_Equal_Area", 1, 9822, "Albers Equal Area", "albers_conical_equal_area");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Albers_Conic_Equal_Area> = $r30;

        $r31 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $i1 = (int) -1;

        specialinvoke $r31.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Azimuthal_Equidistant", 2, $i1, "", "azimuthal_equidistant");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Azimuthal_Equidistant> = $r31;

        $r32 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r32.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Lambert_Azimuthal_Equal_Area", 3, 9820, "Lambert Azimuthal Equal Area", "lambert_azimuthal_equal_area");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Azimuthal_Equal_Area> = $r32;

        $r33 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r33.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Lambert_Conformal_Conic_2SP", 4, 9802, "Lambert Conic Conformal (2SP)", "lambert_conformal_conic");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Conformal_Conic_2SP> = $r33;

        $r34 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r34.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Polar_Stereographic", 5, 9810, "Polar Stereographic (Variant A)", "polar_stereographic");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Polar_Stereographic> = $r34;

        $r35 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $i3 = (int) -2;

        specialinvoke $r35.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Rotated_Pole", 6, $i3, "", "rotated_latitude_longitude");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Rotated_Pole> = $r35;

        $r36 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        $i5 = (int) -3;

        specialinvoke $r36.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Stereographic", 7, $i5, "", "stereographic");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Stereographic> = $r36;

        $r37 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r37.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Transverse_Mercator", 8, 9807, "Transverse Mercator", "transverse_mercator");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Transverse_Mercator> = $r37;

        $r38 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r38.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Latitude_Longitude", 9, 0, "", "latitude_longitude");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Latitude_Longitude> = $r38;

        $r39 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r39.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Vertical_Perspective", 10, 9838, "Vertical Perspective", "vertical_perspective");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Vertical_Perspective> = $r39;

        $r40 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r40.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Lambert_Cylindrical_Equal_Area", 11, 9835, "Lambert Cylindrical Equal Area", "lambert_cylindrical_equal_area");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Cylindrical_Equal_Area> = $r40;

        $r41 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r41.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Mercator", 12, 9805, "Mercator (2SP)", "mercator");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Mercator> = $r41;

        $r42 = new ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo;

        specialinvoke $r42.<ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>("Orthographic", 13, 9840, "Orthographic", "orthographic");

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Orthographic> = $r42;

        $r14 = newarray (ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo)[14];

        $r15 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Unknown>;

        $r14[0] = $r15;

        $r16 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Albers_Conic_Equal_Area>;

        $r14[1] = $r16;

        $r17 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Azimuthal_Equidistant>;

        $r14[2] = $r17;

        $r18 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Azimuthal_Equal_Area>;

        $r14[3] = $r18;

        $r19 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Conformal_Conic_2SP>;

        $r14[4] = $r19;

        $r20 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Polar_Stereographic>;

        $r14[5] = $r20;

        $r21 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Rotated_Pole>;

        $r14[6] = $r21;

        $r22 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Stereographic>;

        $r14[7] = $r22;

        $r23 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Transverse_Mercator>;

        $r14[8] = $r23;

        $r24 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Latitude_Longitude>;

        $r14[9] = $r24;

        $r25 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Vertical_Perspective>;

        $r14[10] = $r25;

        $r26 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Lambert_Cylindrical_Equal_Area>;

        $r14[11] = $r26;

        $r27 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Mercator>;

        $r14[12] = $r27;

        $r28 = <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo Orthographic>;

        $r14[13] = $r28;

        <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo: ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper$ProjectionStandardsInfo[] $VALUES> = $r14;

        return;
    }
}
