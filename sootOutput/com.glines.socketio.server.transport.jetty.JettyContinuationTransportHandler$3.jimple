class com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3 extends java.lang.Object implements com.glines.socketio.server.transport.jetty.ConnectionTimeoutPreventer
{
    private final java.lang.Object val$endpoint;
    private final java.lang.reflect.Method val$scheduleIdle;

    void <init>(java.lang.Object, java.lang.reflect.Method)
    {
        com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3 r0;
        java.lang.Object r1;
        java.lang.reflect.Method r2;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r0.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.Object val$endpoint> = r1;

        r0.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.reflect.Method val$scheduleIdle> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void connectionActive()
    {
        java.lang.Object[] $r8;
        com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3 r2;
        java.util.logging.Level $r14;
        java.lang.String $r5, $r7, $r17, $r20, $r22, $r28, $r30;
        java.lang.reflect.Method $r10;
        java.lang.IllegalAccessException $r23;
        java.util.logging.Logger $r0, $r12, $r24;
        java.lang.reflect.InvocationTargetException $r11;
        java.lang.StringBuilder $r1, $r6, $r13, $r18, $r19, $r21, $r25, $r29;
        java.lang.Object $r3, $r9, $r15, $r26;
        java.lang.Class $r4, $r16, $r27;

        r2 := @this: com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3;

     label1:
        $r0 = staticinvoke <com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler: java.util.logging.Logger access$0()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("TimeoutPreventor - Invoking scheduleIdle() method on endpoint class ");

        $r3 = r2.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.Object val$endpoint>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.logging.Logger: void fine(java.lang.String)>($r7);

        $r10 = r2.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.reflect.Method val$scheduleIdle>;

        $r9 = r2.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.Object val$endpoint>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r8);

     label2:
        goto label5;

     label3:
        $r23 := @caughtexception;

        $r24 = staticinvoke <com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler: java.util.logging.Logger access$0()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("TimeoutPreventor - Cannot access scheduleIdle() method on endpoint class ");

        $r26 = r2.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.Object val$endpoint>;

        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void warning(java.lang.String)>($r30);

        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = staticinvoke <com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler: java.util.logging.Logger access$0()>();

        $r14 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("TimeoutPreventor - Error calling scheduleIdle() method on endpoint class ");

        $r15 = r2.<com.glines.socketio.server.transport.jetty.JettyContinuationTransportHandler$3: java.lang.Object val$endpoint>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r11.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r14, $r22, $r11);

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }
}
