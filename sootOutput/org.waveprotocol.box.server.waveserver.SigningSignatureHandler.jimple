public class org.waveprotocol.box.server.waveserver.SigningSignatureHandler extends java.lang.Object implements org.waveprotocol.box.server.waveserver.SignatureHandler
{
    private final org.waveprotocol.wave.crypto.WaveSigner signer;

    public void <init>(org.waveprotocol.wave.crypto.WaveSigner)
    {
        org.waveprotocol.box.server.waveserver.SigningSignatureHandler r0;
        org.waveprotocol.wave.crypto.WaveSigner r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.SigningSignatureHandler;

        r1 := @parameter0: org.waveprotocol.wave.crypto.WaveSigner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.waveserver.SigningSignatureHandler: org.waveprotocol.wave.crypto.WaveSigner signer> = r1;

        return;
    }

    public java.lang.String getDomain()
    {
        org.waveprotocol.wave.crypto.WaveSigner $r1;
        org.waveprotocol.box.server.waveserver.SigningSignatureHandler r0;
        org.waveprotocol.wave.crypto.SignerInfo $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.box.server.waveserver.SigningSignatureHandler;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.SigningSignatureHandler: org.waveprotocol.wave.crypto.WaveSigner signer>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.crypto.WaveSigner: org.waveprotocol.wave.crypto.SignerInfo getSignerInfo()>();

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.crypto.SignerInfo: java.lang.String getDomain()>();

        return $r3;
    }

    public org.waveprotocol.wave.crypto.SignerInfo getSignerInfo()
    {
        org.waveprotocol.box.server.waveserver.SigningSignatureHandler r0;
        org.waveprotocol.wave.crypto.SignerInfo $r2;
        org.waveprotocol.wave.crypto.WaveSigner $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.SigningSignatureHandler;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.SigningSignatureHandler: org.waveprotocol.wave.crypto.WaveSigner signer>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.crypto.WaveSigner: org.waveprotocol.wave.crypto.SignerInfo getSignerInfo()>();

        return $r2;
    }

    public java.lang.Iterable sign(org.waveprotocol.box.server.waveserver.ByteStringMessage)
    {
        com.google.protobuf.ByteString $r3;
        byte[] $r4;
        org.waveprotocol.wave.crypto.WaveSigner $r2;
        com.google.common.collect.ImmutableList $r6;
        org.waveprotocol.box.server.waveserver.SigningSignatureHandler r0;
        org.waveprotocol.box.server.waveserver.ByteStringMessage r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r5;

        r0 := @this: org.waveprotocol.box.server.waveserver.SigningSignatureHandler;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.ByteStringMessage;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.SigningSignatureHandler: org.waveprotocol.wave.crypto.WaveSigner signer>;

        $r3 = virtualinvoke r1.<org.waveprotocol.box.server.waveserver.ByteStringMessage: com.google.protobuf.ByteString getByteString()>();

        $r4 = virtualinvoke $r3.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $r5 = virtualinvoke $r2.<org.waveprotocol.wave.crypto.WaveSigner: org.waveprotocol.wave.federation.Proto$ProtocolSignature sign(byte[])>($r4);

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r5);

        return $r6;
    }
}
