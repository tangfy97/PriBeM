public abstract class org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser
{

    public void <init>()
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r4;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r8;
        org.w3c.dom.Attr r3;
        org.w3c.dom.Element r0;
        org.w3c.dom.Node $r2;
        org.springframework.beans.factory.xml.ParserContext r5;
        int i0, $i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r6, $r7, $r9;
        boolean $z0, $z1;

        r4 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r8 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i0 = 0;

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i0);

        r3 = (org.w3c.dom.Attr) $r2;

        $z0 = virtualinvoke r4.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: boolean isEligibleAttribute(org.w3c.dom.Attr,org.springframework.beans.factory.xml.ParserContext)>(r3, r5);

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r7 = virtualinvoke r4.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: java.lang.String extractPropertyName(java.lang.String)>($r6);

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r7);

        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z1, "Illegal property name returned from \'extractPropertyName(String)\': cannot be null or empty.");

        $r9 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        virtualinvoke r8.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>($r7, $r9);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i0 < $i1 goto label1;

        virtualinvoke r4.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element)>(r8, r0);

        return;
    }

    protected boolean isEligibleAttribute(org.w3c.dom.Attr, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r0;
        org.w3c.dom.Attr r1;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r4;
        java.lang.String $r2, $r5;
        boolean $z0, $z1, $z2, $z3, z4, $z5;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Attr;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: boolean isEligibleAttribute(org.w3c.dom.Attr)>(r1);

        z4 = $z0;

        if $z0 != 0 goto label3;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Attr: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 != 0 goto label1;

        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r1);

        $z3 = virtualinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: boolean isEligibleAttribute(java.lang.String)>($r5);

        if $z3 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z4 = $z5;

     label3:
        return z4;
    }

    protected boolean isEligibleAttribute(org.w3c.dom.Attr)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Attr;

        return 0;
    }

    protected boolean isEligibleAttribute(java.lang.String)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r2;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r0 := @parameter0: java.lang.String;

        $r1 = "id";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        return $z1;
    }

    protected java.lang.String extractPropertyName(java.lang.String)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r2;
        java.lang.String r0, $r1;

        r2 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.core.Conventions: java.lang.String attributeNameToPropertyName(java.lang.String)>(r0);

        return $r1;
    }

    protected void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser r0;
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r1;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r2 := @parameter1: org.w3c.dom.Element;

        return;
    }
}
