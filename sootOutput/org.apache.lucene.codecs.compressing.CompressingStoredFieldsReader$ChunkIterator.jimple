final class org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator extends java.lang.Object
{
    org.apache.lucene.util.BytesRef bytes;
    int docBase;
    int chunkDocs;
    int[] numStoredFields;
    int[] lengths;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0;

    private void <init>(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;
        int[] $r3, $r4;
        org.apache.lucene.util.BytesRef $r5;
        int $i1;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase> = $i1;

        $r5 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r5.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes> = $r5;

        $r3 = newarray (int)[1];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields> = $r3;

        $r4 = newarray (int)[1];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths> = $r4;

        return;
    }

    int chunkSize()
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;
        int[] $r1;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        if i3 >= $i0 goto label2;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i1 = $r1[i3];

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    void next(int) throws java.io.IOException
    {
        org.apache.lucene.util.packed.PackedInts$ReaderIterator $r28, $r35;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader $r4;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r38, $r39, $r40, $r47, $r48, $r49, $r63, $r64, $r65, $r66, $r67, $r68;
        long $l1, $l16, $l19;
        java.lang.AssertionError $r62;
        java.lang.String $r19, $r41, $r50, $r69;
        org.apache.lucene.store.IndexInput $r2, $r6, $r8, $r23, $r25, $r30, $r32, $r44, $r53, $r56, $r59;
        org.apache.lucene.util.packed.PackedInts$Format $r27, $r34;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;
        org.apache.lucene.index.CorruptIndexException $r9, $r37, $r46;
        int[] $r21, $r36, $r43, $r45, $r52, $r55, $r58, $r60, $r61;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader $r1, $r3, $r5, $r7, $r20, $r22, $r24, $r26, $r29, $r31, $r33, $r42, $r51, $r54, $r57;
        boolean $z0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i26 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i25 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i27 = $i26 + $i25;

        if i0 >= $i27 goto label01;

        $r62 = new java.lang.AssertionError;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i28 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i29 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>($r69);

        throw $r62;

     label01:
        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r1);

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader access$100(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r3);

        $l1 = virtualinvoke $r4.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader: long getStartPointer(int)>(i0);

        virtualinvoke $r2.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r6 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r5);

        $i2 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r8 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r7);

        $i3 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i6 = $i5 + $i4;

        if $i2 < $i6 goto label02;

        $i9 = $i2 + $i3;

        $r20 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $i10 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: int access$300(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r20);

        if $i9 <= $i10 goto label03;

     label02:
        $r9 = new org.apache.lucene.index.CorruptIndexException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupted: current docBase=");

        $i7 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current numDocs=");

        $i8 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new docBase=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new numDocs=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r19);

        throw $r9;

     label03:
        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase> = $i2;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs> = $i3;

        $r21 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $i11 = lengthof $r21;

        if $i3 <= $i11 goto label04;

        $i24 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i3, 4);

        $r60 = newarray (int)[$i24];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields> = $r60;

        $r61 = newarray (int)[$i24];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths> = $r61;

     label04:
        if $i3 != 1 goto label05;

        $r55 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $r54 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r56 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r54);

        $i22 = virtualinvoke $r56.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r55[0] = $i22;

        $r58 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $r57 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r59 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r57);

        $i23 = virtualinvoke $r59.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r58[0] = $i23;

        goto label13;

     label05:
        $r22 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r23 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r22);

        $i12 = virtualinvoke $r23.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i12 != 0 goto label06;

        $r52 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $r51 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r53 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r51);

        $i21 = virtualinvoke $r53.<org.apache.lucene.store.IndexInput: int readVInt()>();

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r52, 0, $i3, $i21);

        goto label09;

     label06:
        if $i12 <= 31 goto label07;

        $r46 = new org.apache.lucene.index.CorruptIndexException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitsPerStoredFields=");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r50);

        throw $r46;

     label07:
        $r24 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r25 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r24);

        $r27 = <org.apache.lucene.util.packed.PackedInts$Format: org.apache.lucene.util.packed.PackedInts$Format PACKED>;

        $r26 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $i13 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: int access$400(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r26);

        $r28 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$ReaderIterator getReaderIteratorNoHeader(org.apache.lucene.store.DataInput,org.apache.lucene.util.packed.PackedInts$Format,int,int,int,int)>($r25, $r27, $i13, $i3, $i12, 1);

        i30 = 0;

     label08:
        if i30 >= $i3 goto label09;

        $r45 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $l19 = interfaceinvoke $r28.<org.apache.lucene.util.packed.PackedInts$ReaderIterator: long next()>();

        $i20 = (int) $l19;

        $r45[i30] = $i20;

        i30 = i30 + 1;

        goto label08;

     label09:
        $r29 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r30 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r29);

        $i14 = virtualinvoke $r30.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i14 != 0 goto label10;

        $r43 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $r42 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r44 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r42);

        $i18 = virtualinvoke $r44.<org.apache.lucene.store.IndexInput: int readVInt()>();

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r43, 0, $i3, $i18);

        goto label13;

     label10:
        if $i14 <= 31 goto label11;

        $r37 = new org.apache.lucene.index.CorruptIndexException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitsPerLength=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r41);

        throw $r37;

     label11:
        $r31 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r32 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r31);

        $r34 = <org.apache.lucene.util.packed.PackedInts$Format: org.apache.lucene.util.packed.PackedInts$Format PACKED>;

        $r33 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $i15 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: int access$400(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r33);

        $r35 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$ReaderIterator getReaderIteratorNoHeader(org.apache.lucene.store.DataInput,org.apache.lucene.util.packed.PackedInts$Format,int,int,int,int)>($r32, $r34, $i15, $i3, $i14, 1);

        i31 = 0;

     label12:
        if i31 >= $i3 goto label13;

        $r36 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $l16 = interfaceinvoke $r35.<org.apache.lucene.util.packed.PackedInts$ReaderIterator: long next()>();

        $i17 = (int) $l16;

        $r36[i31] = $i17;

        i31 = i31 + 1;

        goto label12;

     label13:
        return;
    }

    void decompress() throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader $r1, $r3;
        org.apache.lucene.store.IndexInput $r4;
        org.apache.lucene.util.BytesRef $r5, $r6, $r12;
        org.apache.lucene.codecs.compressing.Decompressor $r2;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        $i0 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkSize()>();

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.codecs.compressing.Decompressor access$500(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r1);

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r3);

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r2.<org.apache.lucene.codecs.compressing.Decompressor: void decompress(org.apache.lucene.store.DataInput,int,int,int,org.apache.lucene.util.BytesRef)>($r4, $i0, 0, $i0, $r5);

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $i1 = $r6.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 == $i0 goto label1;

        $r7 = new org.apache.lucene.index.CorruptIndexException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupted: expected chunk size = ");

        $i2 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkSize()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got ");

        $r12 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $i3 = $r12.<org.apache.lucene.util.BytesRef: int length>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label1:
        return;
    }

    void copyCompressedData(org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r4;
        long $l7, $l8, $l9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader $r1, $r2, $r5, $r7, $r9;
        org.apache.lucene.store.IndexInput $r6, $r8, $r10;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader $r3;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        r4 := @parameter0: org.apache.lucene.store.DataOutput;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i2 = $i1 + $i0;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $i3 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: int access$300(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r1);

        if $i2 != $i3 goto label1;

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r10 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r9);

        $l9 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: long length()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r3 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader access$100(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r2);

        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i6 = $i5 + $i4;

        $l9 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader: long getStartPointer(int)>($i6);

     label2:
        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r6 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r5);

        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader this$0>;

        $r8 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.store.IndexInput access$200(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>($r7);

        $l7 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l8 = $l9 - $l7;

        virtualinvoke r4.<org.apache.lucene.store.DataOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>($r6, $l8);

        return;
    }

    void <init>(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader, org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$1)
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$1 r2;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator r0;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader;

        r2 := @parameter1: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$1;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: void <init>(org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/compressing/CompressingStoredFieldsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
