public class com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException extends com.hp.hpl.jena.assembler.exceptions.AssemblerException
{

    public void <init>(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException r0;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Resource r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException: java.lang.String makeMessage(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, $r2);

        return;
    }

    private static java.lang.String makeMessage(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the object ");

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException: java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be given rules, since it is not a GenericRulesReasoner");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
