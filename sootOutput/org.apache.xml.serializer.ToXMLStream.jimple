public class org.apache.xml.serializer.ToXMLStream extends org.apache.xml.serializer.ToStream
{
    boolean m_cdataTagOpen;
    protected static org.apache.xml.serializer.CharInfo m_xmlcharInfo;

    public void <init>()
    {
        org.apache.xml.serializer.NamespaceMappings $r2;
        org.apache.xml.serializer.ToXMLStream r0;
        org.apache.xml.serializer.CharInfo $r1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void <init>()>();

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_cdataTagOpen> = 0;

        $r1 = <org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo>;

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo> = $r1;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void initCDATA()>();

        $r2 = new org.apache.xml.serializer.NamespaceMappings;

        specialinvoke $r2.<org.apache.xml.serializer.NamespaceMappings: void <init>()>();

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap> = $r2;

        return;
    }

    public void CopyFrom(org.apache.xml.serializer.ToXMLStream)
    {
        org.apache.xml.serializer.ToXMLStream r0, r1;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.Writer $r2;
        org.apache.xml.utils.BoolStack $r4;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: org.apache.xml.serializer.ToXMLStream;

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer> = $r2;

        $r3 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setEncoding(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: boolean getOmitXMLDeclaration()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setOmitXMLDeclaration(boolean)>($z0);

        $z1 = r1.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = $z1;

        $r4 = r1.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves> = $r4;

        $z2 = r1.<org.apache.xml.serializer.ToStream: boolean m_isprevtext>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = $z2;

        $z3 = r1.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent> = $z3;

        $i0 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: int getIndentAmount()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void setIndentAmount(int)>($i0);

        $z4 = r1.<org.apache.xml.serializer.ToStream: boolean m_startNewLine>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = $z4;

        $z5 = r1.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = $z5;

        $r5 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypeSystem(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypePublic()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setDoctypePublic(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: java.lang.String getStandalone()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setStandalone(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<org.apache.xml.serializer.SerializerBase: java.lang.String getMediaType()>();

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setMediaType(java.lang.String)>($r8);

        $i1 = r1.<org.apache.xml.serializer.ToStream: int m_maxCharacter>;

        r0.<org.apache.xml.serializer.ToStream: int m_maxCharacter> = $i1;

        $z6 = r1.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_spaceBeforeClose> = $z6;

        $z7 = r1.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled>;

        r0.<org.apache.xml.serializer.ToStream: boolean m_cdataStartCalled> = $z7;

        return;
    }

    public void startDocumentInternal() throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r5, $r6, $r8, $r9;
        org.apache.xml.serializer.ToXMLStream r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r7, r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.IOException $r11;
        org.xml.sax.SAXException $r12;
        java.io.Writer $r10;
        char[] $r4;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label7;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 0;

        $z2 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: boolean getOmitXMLDeclaration()>();

        if $z2 != 0 goto label7;

        $r1 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        $r2 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getVersion()>();

        r13 = $r3;

        if $r3 != null goto label2;

        r13 = "1.0";

     label2:
        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_standaloneWasSpecified>;

        if $z3 == 0 goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" standalone=\"");

        $r7 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getStandalone()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        r14 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label3:
        r14 = "";

     label4:
        $r10 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"");

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>(r13);

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("\" encoding=\"");

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>($r2);

        virtualinvoke $r10.<java.io.Writer: void write(int)>(34);

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>(r14);

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("?>");

        $z4 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z4 == 0 goto label5;

        $r4 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r10.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i0);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r11);

        throw $r12;

     label7:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        org.xml.sax.SAXException $r2;
        org.apache.xml.serializer.SerializerTrace $r3;
        java.io.IOException $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushPending()>();

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext>;

        if $z1 != 0 goto label4;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputLineSep()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r1);

        throw $r2;

     label4:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushWriter()>();

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label5;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndDoc()>();

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void startPreserving() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(1);

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        return;
    }

    public void endPreserving() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        org.apache.xml.utils.BoolStack $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $r1 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z1 = virtualinvoke $r2.<org.apache.xml.utils.BoolStack: boolean pop()>();

     label2:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = $z1;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.String r1, r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xml.serializer.ElemContext $r2, $r8, $r11;
        char $c5;
        java.io.IOException $r9;
        org.xml.sax.SAXException $r10;
        java.io.Writer $r7;
        org.apache.xml.serializer.SerializerTrace $r12;
        char[] $r4;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_inEntityRef>;

        if $z0 == 0 goto label01;

        return;

     label01:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushPending()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.disable-output-escaping");

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void startNonEscaping()>();

        goto label13;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.enable-output-escaping");

        if $z2 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void endNonEscaping()>();

        goto label13;

     label03:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z3 = $r2.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z3 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r8.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label04:
        $z4 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z4 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label05:
        $r7 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("<?");

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r1);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        $c5 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $z5 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c5);

        if $z5 != 0 goto label06;

        virtualinvoke $r7.<java.io.Writer: void write(int)>(32);

     label06:
        $i6 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("?>");

        if $i6 < 0 goto label08;

        if $i6 <= 0 goto label07;

        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r6);

     label07:
        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("? >");

        $i2 = $i6 + 2;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label09;

        $i4 = $i6 + 2;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i4);

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r5);

        goto label09;

     label08:
        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>(r3);

     label09:
        virtualinvoke $r7.<java.io.Writer: void write(int)>(63);

        virtualinvoke $r7.<java.io.Writer: void write(int)>(62);

        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i7 = $r11.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        if $i7 > 0 goto label10;

        $r4 = r0.<org.apache.xml.serializer.ToStream: char[] m_lineSep>;

        $i1 = r0.<org.apache.xml.serializer.ToStream: int m_lineSepLen>;

        virtualinvoke $r7.<java.io.Writer: void write(char[],int,int)>($r4, 0, $i1);

     label10:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label13:
        $r12 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r12 == null goto label14;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEscapingEvent(java.lang.String,java.lang.String)>(r1, r3);

     label14:
        return;

        catch java.io.IOException from label03 to label11 with label12;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r5;
        java.io.IOException $r6;
        org.apache.xml.serializer.ToXMLStream r0;
        org.xml.sax.SAXException $r7;
        org.apache.xml.serializer.SerializerTrace $r3;
        java.io.Writer $r4;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeStartTag()>();

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label2:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(38);

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke $r4.<java.io.Writer: void write(int)>(59);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label5:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label6;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEntityReference(java.lang.String)>(r2);

     label6:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1;
        java.io.IOException $r8;
        org.apache.xml.serializer.CharInfo $r7;
        org.apache.xml.serializer.ToXMLStream r0;
        org.xml.sax.SAXException $r9;
        java.io.Writer r4;
        int i0, $i1;
        java.lang.String r2, $r3, r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label5;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String patchName(java.lang.String)>(r2);

        r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $i1 = i0 & 1;

        if $i1 <= 0 goto label2;

        $r7 = <org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo>;

        $z1 = $r7.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt>;

        if $z1 == 0 goto label2;

        virtualinvoke r4.<java.io.Writer: void write(int)>(32);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("=\"");

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r5);

        virtualinvoke r4.<java.io.Writer: void write(int)>(34);

        goto label3;

     label2:
        virtualinvoke r4.<java.io.Writer: void write(int)>(32);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("=\"");

        $r6 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)>(r4, r5, $r6);

        virtualinvoke r4.<java.io.Writer: void write(int)>(34);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        javax.xml.transform.Transformer $r5;
        java.lang.Object[] $r2;
        javax.xml.transform.TransformerException $r9;
        javax.xml.transform.ErrorListener $r6;
        java.lang.StringBuffer $r15, $r16, $r17, $r18;
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r3, $r4, r11, r12, r13, $r14, r20;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r7;
        javax.xml.transform.SourceLocator $r8, $r10;
        org.apache.xml.serializer.ElemContext $r1;
        java.lang.Exception $r19;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r11 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r20 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        r13 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z1 != 0 goto label1;

        $r14 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)>(r11, r3, r20);

        if $r14 == null goto label1;

        if r20 == null goto label1;

        $z2 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r14);

        if $z2 != 0 goto label1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r11, r3, r20, r12, r13);

        goto label7;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_POSITION", $r2);

     label3:
        $r5 = specialinvoke r0.<org.apache.xml.serializer.SerializerBase: javax.xml.transform.Transformer getTransformer()>();

        $r6 = virtualinvoke $r5.<javax.xml.transform.Transformer: javax.xml.transform.ErrorListener getErrorListener()>();

        if null == $r6 goto label4;

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: javax.xml.transform.SourceLocator m_sourceLocator>;

        if $r8 == null goto label4;

        $r9 = new javax.xml.transform.TransformerException;

        $r10 = r0.<org.apache.xml.serializer.SerializerBase: javax.xml.transform.SourceLocator m_sourceLocator>;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r4, $r10);

        interfaceinvoke $r6.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r9);

        goto label5;

     label4:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

     label7:
        return;

        catch java.lang.Exception from label3 to label5 with label6;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xml.serializer.ToXMLStream r0;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void endElement(java.lang.String,java.lang.String,java.lang.String)>(null, null, r1);

        return;
    }

    public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r5, $r9;
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String $r2, r3, r4, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r2 = $r1.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI>;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6 = $r5.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        $r7 = staticinvoke <org.apache.xml.serializer.SerializerBase: java.lang.String getPrefixPart(java.lang.String)>($r6);

        if $r7 != null goto label1;

        $r8 = "";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r9.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI> = r4;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r3, r4, 0);

        return;
    }

    protected boolean pushNamespace(java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.ElemContext $r3;
        org.apache.xml.serializer.ToXMLStream r0;
        org.xml.sax.SAXException $r5;
        int $i0;
        java.lang.String r1, r2;
        org.apache.xml.serializer.NamespaceMappings $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i0 = $r3.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        $z0 = virtualinvoke $r4.<org.apache.xml.serializer.NamespaceMappings: boolean pushNamespace(java.lang.String,java.lang.String,int)>(r1, r2, $i0);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void startPrefixMapping(java.lang.String,java.lang.String)>(r1, r2);

        return 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return 0;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public boolean reset()
    {
        org.apache.xml.serializer.ToXMLStream r0;
        boolean $z0, z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        z1 = 0;

        $z0 = specialinvoke r0.<org.apache.xml.serializer.ToStream: boolean reset()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToXMLStream: void resetToXMLStream()>();

        z1 = 1;

     label1:
        return z1;
    }

    private void resetToXMLStream()
    {
        org.apache.xml.serializer.ToXMLStream r0;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_cdataTagOpen> = 0;

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        org.apache.xml.serializer.CharInfo $r1;

        $r0 = <org.apache.xml.serializer.CharInfo: java.lang.String XML_ENTITIES_RESOURCE>;

        $r1 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)>($r0, "xml");

        <org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo> = $r1;

        return;
    }
}
