public class com.jidesoft.swing.PartialLineBorder extends javax.swing.border.LineBorder implements com.jidesoft.swing.PartialSide
{
    private int _sides;
    private int _roundedCornerSize;

    public void <init>(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color)>(r1);

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = 15;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = 5;

        return;
    }

    public void <init>(java.awt.Color, int)
    {
        java.awt.Color r1;
        int i0;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Color;

        i0 := @parameter1: int;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color,int)>(r1, i0);

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = 15;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = 5;

        return;
    }

    public void <init>(java.awt.Color, int, boolean)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PartialLineBorder r0;
        int i0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Color;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color,int,boolean)>(r1, i0, z0);

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = 15;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = 5;

        return;
    }

    public void <init>(java.awt.Color, int, boolean, int)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PartialLineBorder r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Color;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color,int,boolean)>(r1, i0, z0);

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = 15;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = 5;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = i1;

        return;
    }

    public void <init>(java.awt.Color, int, int)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PartialLineBorder r0;
        int i0, i1;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Color;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color,int)>(r1, i0);

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = 15;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = 5;

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = i1;

        return;
    }

    public int getSides()
    {
        int $i0;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        $i0 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        return $i0;
    }

    public void setSides(int)
    {
        int i0;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.PartialLineBorder: int _sides> = i0;

        return;
    }

    public int getRoundedCornerSize()
    {
        int $i0;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        $i0 = r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize>;

        return $i0;
    }

    public void setRoundedCornerSize(int)
    {
        int i0;
        com.jidesoft.swing.PartialLineBorder r0;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize> = i0;

        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r1, $r3;
        java.awt.Component r5;
        com.jidesoft.swing.PartialLineBorder r2;
        boolean $z0;
        java.awt.Graphics r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13, i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, i56;
        java.lang.Object $r4;

        r2 := @this: com.jidesoft.swing.PartialLineBorder;

        r5 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i10 := @parameter2: int;

        i14 := @parameter3: int;

        i11 := @parameter4: int;

        i17 := @parameter5: int;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        $r3 = r2.<com.jidesoft.swing.PartialLineBorder: java.awt.Color lineColor>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        i56 = 0;

     label1:
        $i0 = r2.<com.jidesoft.swing.PartialLineBorder: int thickness>;

        if i56 >= $i0 goto label8;

        $i1 = r2.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        if $i1 != 15 goto label3;

        $z0 = r2.<com.jidesoft.swing.PartialLineBorder: boolean roundedCorners>;

        if $z0 != 0 goto label2;

        $i55 = i10 + i56;

        $i54 = i14 + i56;

        $i48 = i11 - i56;

        $i49 = $i48 - i56;

        $i53 = $i49 - 1;

        $i50 = i17 - i56;

        $i51 = $i50 - i56;

        $i52 = $i51 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i55, $i54, $i53, $i52);

        goto label7;

     label2:
        $r4 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object setupShapeAntialiasing(java.awt.Graphics)>(r0);

        $i47 = i10 + i56;

        $i46 = i14 + i56;

        $i38 = i11 - i56;

        $i39 = $i38 - i56;

        $i45 = $i39 - 1;

        $i40 = i17 - i56;

        $i41 = $i40 - i56;

        $i44 = $i41 - 1;

        $i43 = r2.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize>;

        $i42 = r2.<com.jidesoft.swing.PartialLineBorder: int _roundedCornerSize>;

        virtualinvoke r0.<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>($i47, $i46, $i45, $i44, $i43, $i42);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void restoreShapeAntialiasing(java.awt.Graphics,java.lang.Object)>(r0, $r4);

        goto label7;

     label3:
        $i2 = r2.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label4;

        $i37 = i14 + i56;

        $i34 = i10 + i11;

        $i36 = $i34 - 1;

        $i35 = i14 + i56;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i10, $i37, $i36, $i35);

     label4:
        $i4 = r2.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label5;

        $i26 = i14 + i17;

        $i27 = $i26 - i56;

        $i33 = $i27 - 1;

        $i28 = i10 + i11;

        $i32 = $i28 - 1;

        $i29 = i14 + i17;

        $i30 = $i29 - i56;

        $i31 = $i30 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i10, $i33, $i32, $i31);

     label5:
        $i6 = r2.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i7 = $i6 & 8;

        if $i7 == 0 goto label6;

        $i25 = i10 + i56;

        $i24 = i10 + i56;

        $i22 = i14 + i17;

        $i23 = $i22 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, i14, $i24, $i23);

     label6:
        $i8 = r2.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i9 = $i8 & 4;

        if $i9 == 0 goto label7;

        $i12 = i10 + i11;

        $i13 = $i12 - i56;

        $i21 = $i13 - 1;

        $i15 = i10 + i11;

        $i16 = $i15 - i56;

        $i20 = $i16 - 1;

        $i18 = i14 + i17;

        $i19 = $i18 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i21, i14, $i20, $i19);

     label7:
        i56 = i56 + 1;

        goto label1;

     label8:
        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r2;
        java.awt.Component r1;
        com.jidesoft.swing.PartialLineBorder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Component;

        $r2 = specialinvoke r0.<javax.swing.border.LineBorder: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $i0 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r2.<java.awt.Insets: int top> = 0;

     label1:
        $i2 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label2;

        $r2.<java.awt.Insets: int bottom> = 0;

     label2:
        $i4 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i5 = $i4 & 8;

        if $i5 != 0 goto label3;

        $r2.<java.awt.Insets: int left> = 0;

     label3:
        $i6 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i7 = $i6 & 4;

        if $i7 != 0 goto label4;

        $r2.<java.awt.Insets: int right> = 0;

     label4:
        return $r2;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)
    {
        java.awt.Insets r2, $r3;
        java.awt.Component r1;
        com.jidesoft.swing.PartialLineBorder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.jidesoft.swing.PartialLineBorder;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Insets;

        $r3 = specialinvoke r0.<javax.swing.border.LineBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)>(r1, r2);

        $i0 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r3.<java.awt.Insets: int top> = 0;

     label1:
        $i2 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i3 = $i2 & 2;

        if $i3 != 0 goto label2;

        $r3.<java.awt.Insets: int bottom> = 0;

     label2:
        $i4 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i5 = $i4 & 8;

        if $i5 != 0 goto label3;

        $r3.<java.awt.Insets: int left> = 0;

     label3:
        $i6 = r0.<com.jidesoft.swing.PartialLineBorder: int _sides>;

        $i7 = $i6 & 4;

        if $i7 != 0 goto label4;

        $r3.<java.awt.Insets: int right> = 0;

     label4:
        return $r3;
    }
}
