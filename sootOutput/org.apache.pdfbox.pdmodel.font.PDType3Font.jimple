public class org.apache.pdfbox.pdmodel.font.PDType3Font extends org.apache.pdfbox.pdmodel.font.PDSimpleFont
{
    private java.util.Map images;

    public void <init>()
    {
        org.apache.pdfbox.cos.COSName $r2, $r3;
        org.apache.pdfbox.cos.COSDictionary $r4;
        java.util.HashMap $r1;
        org.apache.pdfbox.pdmodel.font.PDType3Font r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType3Font;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.Map images> = $r1;

        $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary font>;

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r2);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        java.util.HashMap $r2;
        org.apache.pdfbox.pdmodel.font.PDType3Font r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType3Font;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.Map images> = $r2;

        return;
    }

    private java.awt.Image createImageIfNecessary(char) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.Type3StreamParser $r15;
        java.lang.Character $r0;
        java.util.Map $r2, $r17;
        java.lang.String $r11;
        org.apache.pdfbox.cos.COSStream r14;
        org.apache.pdfbox.cos.COSName $r4, $r12;
        java.awt.Image $r16, r18;
        char c0;
        org.apache.pdfbox.pdmodel.font.PDType3Font r1;
        org.apache.pdfbox.cos.COSDictionary $r5, r7;
        org.apache.pdfbox.cos.COSBase $r6, $r13;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8, $r9, $r10;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDType3Font;

        c0 := @parameter0: char;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>(c0);

        $r2 = r1.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.Map images>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r18 = (java.awt.Image) $r3;

        if r18 != null goto label1;

        $r5 = r1.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary font>;

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CHAR_PROCS>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        r7 = (org.apache.pdfbox.cos.COSDictionary) $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r11);

        $r13 = virtualinvoke r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r12);

        r14 = (org.apache.pdfbox.cos.COSStream) $r13;

        if r14 == null goto label1;

        $r15 = new org.apache.pdfbox.pdmodel.font.Type3StreamParser;

        specialinvoke $r15.<org.apache.pdfbox.pdmodel.font.Type3StreamParser: void <init>()>();

        $r16 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.Type3StreamParser: java.awt.Image createImage(org.apache.pdfbox.cos.COSStream)>(r14);

        r18 = $r16;

        $r17 = r1.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.Map images>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r16);

     label1:
        return r18;
    }

    public void drawString(java.lang.String, int[], java.awt.Graphics, float, java.awt.geom.AffineTransform, float, float) throws java.io.IOException
    {
        int[] r5;
        int $i0, $i2, i3, $i4, i5, $i6, $i7, i8;
        java.lang.String r0;
        double $d0, $d1, $d2, $d3;
        java.awt.Image $r2, $r3;
        char $c1;
        org.apache.pdfbox.pdmodel.font.PDType3Font r1;
        java.awt.geom.AffineTransform r6;
        java.awt.Graphics r4;
        float f0, $f1, f2, f3;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDType3Font;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: int[];

        r4 := @parameter2: java.awt.Graphics;

        f2 := @parameter3: float;

        r6 := @parameter4: java.awt.geom.AffineTransform;

        f3 := @parameter5: float;

        f0 := @parameter6: float;

        i8 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i8 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $r2 = specialinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.awt.Image createImageIfNecessary(char)>($c1);

        if $r2 == null goto label2;

        $i2 = virtualinvoke $r2.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $d0 = (double) $i2;

        $d1 = 0.12 * $d0;

        i3 = (int) $d1;

        $i4 = virtualinvoke $r2.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        $d2 = (double) $i4;

        $d3 = 0.12 * $d2;

        i5 = (int) $d3;

        if i3 <= 0 goto label2;

        if i5 <= 0 goto label2;

        $r3 = virtualinvoke $r2.<java.awt.Image: java.awt.Image getScaledInstance(int,int,int)>(i3, i5, 4);

        $i7 = (int) f3;

        $i6 = (int) f0;

        virtualinvoke r4.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r3, $i7, $i6, null);

        $f1 = (float) i3;

        f3 = f3 + $f1;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        return;
    }

    public void setFontMatrix(org.apache.pdfbox.pdmodel.common.PDMatrix)
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.pdmodel.font.PDType3Font r0;
        org.apache.pdfbox.pdmodel.common.PDMatrix r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType3Font;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDMatrix;

        $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary font>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_MATRIX>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1);

        return;
    }
}
