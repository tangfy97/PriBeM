public class com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl extends com.hp.hpl.jena.ontology.impl.RestrictionImpl implements com.hp.hpl.jena.ontology.HasValueRestriction
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.RestrictionImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setHasValue(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_VALUE", r3);

        return;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode getHasValue()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r5, r6;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "HAS_VALUE");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.rdf.model.RDFNode getPropertyValue(com.hp.hpl.jena.rdf.model.Property)>($r4);

        r6 = $r5;

        $z0 = $r5 instanceof com.hp.hpl.jena.rdf.model.Literal;

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.RDFNode: boolean canAs(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Individual;");

        if $z1 == 0 goto label1;

        r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Individual;");

     label1:
        return r6;
    }

    public boolean hasValue(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_VALUE", r3);

        return $z0;
    }

    public void removeHasValue(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r3;
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_VALUE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_VALUE", r3);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
