public class org.apache.batik.extension.svg.LineInfo extends java.lang.Object
{
    java.awt.geom.Point2D$Float loc;
    java.text.AttributedCharacterIterator aci;
    org.apache.batik.gvt.font.GVTGlyphVector gv;
    int startIdx;
    int endIdx;
    float advance;
    float visualAdvance;
    float lastCharWidth;
    float lineWidth;
    boolean partial;
    java.awt.geom.Point2D$Float verticalAlignOffset;

    public void <init>(java.awt.geom.Point2D$Float, java.text.AttributedCharacterIterator, org.apache.batik.gvt.font.GVTGlyphVector, int, int, float, float, float, float, boolean, java.awt.geom.Point2D$Float)
    {
        java.awt.geom.Point2D$Float r1, r4;
        java.text.AttributedCharacterIterator r2;
        org.apache.batik.gvt.font.GVTGlyphVector r3;
        int i0, i1;
        float f0, f1, f2, f3;
        org.apache.batik.extension.svg.LineInfo r0;
        boolean z0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        r1 := @parameter0: java.awt.geom.Point2D$Float;

        r2 := @parameter1: java.text.AttributedCharacterIterator;

        r3 := @parameter2: org.apache.batik.gvt.font.GVTGlyphVector;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        f3 := @parameter8: float;

        z0 := @parameter9: boolean;

        r4 := @parameter10: java.awt.geom.Point2D$Float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float loc> = r1;

        r0.<org.apache.batik.extension.svg.LineInfo: java.text.AttributedCharacterIterator aci> = r2;

        r0.<org.apache.batik.extension.svg.LineInfo: org.apache.batik.gvt.font.GVTGlyphVector gv> = r3;

        r0.<org.apache.batik.extension.svg.LineInfo: int startIdx> = i0;

        r0.<org.apache.batik.extension.svg.LineInfo: int endIdx> = i1;

        r0.<org.apache.batik.extension.svg.LineInfo: float advance> = f0;

        r0.<org.apache.batik.extension.svg.LineInfo: float visualAdvance> = f1;

        r0.<org.apache.batik.extension.svg.LineInfo: float lastCharWidth> = f2;

        r0.<org.apache.batik.extension.svg.LineInfo: float lineWidth> = f3;

        r0.<org.apache.batik.extension.svg.LineInfo: boolean partial> = z0;

        r0.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float verticalAlignOffset> = r4;

        return;
    }

    public java.awt.geom.Point2D$Float getLocation()
    {
        java.awt.geom.Point2D$Float $r1;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $r1 = r0.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float loc>;

        return $r1;
    }

    public java.text.AttributedCharacterIterator getACI()
    {
        java.text.AttributedCharacterIterator $r1;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $r1 = r0.<org.apache.batik.extension.svg.LineInfo: java.text.AttributedCharacterIterator aci>;

        return $r1;
    }

    public org.apache.batik.gvt.font.GVTGlyphVector getGlyphVector()
    {
        org.apache.batik.extension.svg.LineInfo r0;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $r1 = r0.<org.apache.batik.extension.svg.LineInfo: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        return $r1;
    }

    public int getStartIdx()
    {
        int $i0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $i0 = r0.<org.apache.batik.extension.svg.LineInfo: int startIdx>;

        return $i0;
    }

    public int getEndIdx()
    {
        int $i0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $i0 = r0.<org.apache.batik.extension.svg.LineInfo: int endIdx>;

        return $i0;
    }

    public float getAdvance()
    {
        float $f0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $f0 = r0.<org.apache.batik.extension.svg.LineInfo: float advance>;

        return $f0;
    }

    public float getVisualAdvance()
    {
        float $f0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $f0 = r0.<org.apache.batik.extension.svg.LineInfo: float visualAdvance>;

        return $f0;
    }

    public float getLastCharWidth()
    {
        float $f0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $f0 = r0.<org.apache.batik.extension.svg.LineInfo: float lastCharWidth>;

        return $f0;
    }

    public float getLineWidth()
    {
        float $f0;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $f0 = r0.<org.apache.batik.extension.svg.LineInfo: float lineWidth>;

        return $f0;
    }

    public boolean isPartialLine()
    {
        org.apache.batik.extension.svg.LineInfo r0;
        boolean $z0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $z0 = r0.<org.apache.batik.extension.svg.LineInfo: boolean partial>;

        return $z0;
    }

    public java.awt.geom.Point2D$Float getVerticalAlignOffset()
    {
        java.awt.geom.Point2D$Float $r1;
        org.apache.batik.extension.svg.LineInfo r0;

        r0 := @this: org.apache.batik.extension.svg.LineInfo;

        $r1 = r0.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float verticalAlignOffset>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        int $i0, $i1;
        java.lang.String $r23;
        org.apache.batik.extension.svg.LineInfo r2;
        boolean $z0;
        java.awt.geom.Point2D$Float $r3, $r21;
        float $f0, $f1, $f2, $f3;

        r2 := @this: org.apache.batik.extension.svg.LineInfo;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LineInfo loc: ");

        $r3 = r2.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float loc>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $i0 = r2.<org.apache.batik.extension.svg.LineInfo: int startIdx>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $i1 = r2.<org.apache.batik.extension.svg.LineInfo: int endIdx>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" LWidth: ");

        $f0 = r2.<org.apache.batik.extension.svg.LineInfo: float lineWidth>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Adv: ");

        $f1 = r2.<org.apache.batik.extension.svg.LineInfo: float advance>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" VAdv: ");

        $f2 = r2.<org.apache.batik.extension.svg.LineInfo: float visualAdvance>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" LCW: ");

        $f3 = r2.<org.apache.batik.extension.svg.LineInfo: float lastCharWidth>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Partial: ");

        $z0 = r2.<org.apache.batik.extension.svg.LineInfo: boolean partial>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" verticalAlignOffset: ");

        $r21 = r2.<org.apache.batik.extension.svg.LineInfo: java.awt.geom.Point2D$Float verticalAlignOffset>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r23;
    }
}
