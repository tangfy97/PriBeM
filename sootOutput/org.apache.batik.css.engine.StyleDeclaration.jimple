public class org.apache.batik.css.engine.StyleDeclaration extends java.lang.Object
{
    protected static final int INITIAL_LENGTH;
    protected org.apache.batik.css.engine.value.Value[] values;
    protected int[] indexes;
    protected boolean[] priorities;
    protected int count;

    public void <init>()
    {
        org.apache.batik.css.engine.StyleDeclaration r0;
        int[] $r2;
        boolean[] $r3;
        org.apache.batik.css.engine.value.Value[] $r1;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.batik.css.engine.value.Value)[8];

        r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values> = $r1;

        $r2 = newarray (int)[8];

        r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes> = $r2;

        $r3 = newarray (boolean)[8];

        r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities> = $r3;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.batik.css.engine.StyleDeclaration r0;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        $i0 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        return $i0;
    }

    public org.apache.batik.css.engine.value.Value getValue(int)
    {
        org.apache.batik.css.engine.StyleDeclaration r0;
        int i0;
        org.apache.batik.css.engine.value.Value[] $r1;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getIndex(int)
    {
        org.apache.batik.css.engine.StyleDeclaration r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i1 = $r1[i0];

        return $i1;
    }

    public boolean getPriority(int)
    {
        org.apache.batik.css.engine.StyleDeclaration r0;
        int i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $z0 = $r1[i0];

        return $z0;
    }

    public void remove(int)
    {
        int[] $r3, $r4, $r8;
        int $i0, $i1, i2, i3, $i4, i5, $i6, $i7, $i8;
        org.apache.batik.css.engine.value.Value[] $r1, $r2, $r7;
        org.apache.batik.css.engine.StyleDeclaration r0;
        boolean[] $r5, $r6, $r9;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i1 = $i0 - 1;

        r0.<org.apache.batik.css.engine.StyleDeclaration: int count> = $i1;

        i3 = i2 + 1;

        $i4 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        i5 = $i4 - i2;

        $r2 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $r1 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i3, $r1, i2, i5);

        $r4 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $r3 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i3, $r3, i2, i5);

        $r6 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $r5 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i3, $r5, i2, i5);

        $r7 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $i6 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r7[$i6] = null;

        $r8 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i7 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r8[$i7] = 0;

        $r9 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $i8 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r9[$i8] = 0;

        return;
    }

    public void put(int, org.apache.batik.css.engine.value.Value, int, boolean)
    {
        org.apache.batik.css.engine.StyleDeclaration r0;
        boolean[] $r4;
        org.apache.batik.css.engine.value.Value r1;
        int[] $r3;
        int i0, i1;
        org.apache.batik.css.engine.value.Value[] $r2;
        boolean z0;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.batik.css.engine.value.Value;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $r2[i0] = r1;

        $r3 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $r3[i0] = i1;

        $r4 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $r4[i0] = z0;

        return;
    }

    public void append(org.apache.batik.css.engine.value.Value, int, boolean)
    {
        int[] $r2, $r8, r10, $r13;
        org.apache.batik.css.engine.value.Value[] $r1, $r4, $r7, $r12, r15;
        boolean z0, $z1;
        org.apache.batik.css.engine.StyleDeclaration r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        boolean[] $r5, $r6, $r9, r11, $r14;
        org.apache.batik.css.engine.value.Value r3;

        r0 := @this: org.apache.batik.css.engine.StyleDeclaration;

        r3 := @parameter0: org.apache.batik.css.engine.value.Value;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        if $i1 != $i0 goto label1;

        $i10 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i11 = $i10 * 2;

        r15 = newarray (org.apache.batik.css.engine.value.Value)[$i11];

        $i12 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i13 = $i12 * 2;

        r10 = newarray (int)[$i13];

        $i14 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i15 = $i14 * 2;

        r11 = newarray (boolean)[$i15];

        $r12 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $i16 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r15, 0, $i16);

        $r13 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i17 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r10, 0, $i17);

        $r14 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $i18 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i18);

        r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values> = r15;

        r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes> = r10;

        r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities> = r11;

     label1:
        i19 = 0;

        goto label6;

     label2:
        $r2 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i4 = $r2[i19];

        if $i4 != i3 goto label5;

        if z0 != 0 goto label3;

        $r6 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $z1 = $r6[i19];

        if $z1 != z0 goto label4;

     label3:
        $r4 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $r4[i19] = r3;

        $r5 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $r5[i19] = z0;

     label4:
        return;

     label5:
        i19 = i19 + 1;

     label6:
        $i2 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        if i19 < $i2 goto label2;

        $r7 = r0.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $i5 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r7[$i5] = r3;

        $r8 = r0.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i6 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r8[$i6] = i3;

        $r9 = r0.<org.apache.batik.css.engine.StyleDeclaration: boolean[] priorities>;

        $i7 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $r9[$i7] = z0;

        $i8 = r0.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i9 = $i8 + 1;

        r0.<org.apache.batik.css.engine.StyleDeclaration: int count> = $i9;

        return;
    }

    public java.lang.String toString(org.apache.batik.css.engine.CSSEngine)
    {
        org.apache.batik.css.engine.StyleDeclaration r1;
        org.apache.batik.css.engine.value.Value $r6;
        org.apache.batik.css.engine.CSSEngine r2;
        int[] $r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.batik.css.engine.value.Value[] $r5;
        java.lang.String $r4, $r7;

        r1 := @this: org.apache.batik.css.engine.StyleDeclaration;

        r2 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        $r0 = new java.lang.StringBuffer;

        $i0 = r1.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        $i1 = $i0 * 8;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        i4 = 0;

        goto label2;

     label1:
        $r3 = r1.<org.apache.batik.css.engine.StyleDeclaration: int[] indexes>;

        $i3 = $r3[i4];

        $r4 = virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: java.lang.String getPropertyName(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r5 = r1.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value[] values>;

        $r6 = $r5[i4];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        i4 = i4 + 1;

     label2:
        $i2 = r1.<org.apache.batik.css.engine.StyleDeclaration: int count>;

        if i4 < $i2 goto label1;

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <org.apache.batik.css.engine.StyleDeclaration: int INITIAL_LENGTH> = 8;

        return;
    }
}
