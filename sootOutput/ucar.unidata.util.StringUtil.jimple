public class ucar.unidata.util.StringUtil extends java.lang.Object
{
    public static boolean debug;
    public static final java.lang.String[] ordinalNames;
    private static char[] htmlIn;
    private static java.lang.String[] htmlOut;
    private static char[] xmlInC;
    private static java.lang.String[] xmlOutC;
    private static char[] xmlIn;
    private static java.lang.String[] xmlOut;
    private static final java.lang.Object MATCH_MUTEX;
    private static java.util.Hashtable patternCache;

    public void <init>()
    {
        ucar.unidata.util.StringUtil r0;

        r0 := @this: ucar.unidata.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean notEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String collapseWhitespace(java.lang.String)
    {
        char $c1, $c4;
        java.lang.StringBuffer $r1;
        int $i0, $i2, $i3, i5;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        i5 = 0;

     label1:
        if i5 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 != 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label4;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        $i2 = i5 + 1;

        if $i2 >= $i0 goto label4;

        $i3 = i5 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z1 == 0 goto label4;

        i5 = i5 + 1;

        goto label3;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String remove(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String r0, $r2, $r4, r6;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(r0);

        if 0 > $i1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i2 = $i1 + $i0;

        $r4 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r6;
    }

    public static java.lang.String remove(java.lang.String, int)
    {
        char $c2;
        java.lang.StringBuffer $r3;
        int i0, $i1, i3, $i4, $i5;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0);

        if 0 <= $i1 goto label1;

        return r0;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i3 = 0;

     label2:
        $i4 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if i3 >= $i4 goto label4;

        $c2 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>(i3);

        $i5 = (int) $c2;

        if $i5 != i0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i3);

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String findFormatString(java.lang.String, java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r0, $r2, $r4, $r5;
        java.lang.String r1, r3, $r6, r7, $r8;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>($r6);

        if $i0 < 0 goto label1;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String,int)>(r1, $i1);

        if $i2 <= $i0 goto label1;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i4 = $i0 + $i3;

        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i4, $i2);

        return $r8;

     label1:
        return null;
    }

    public static java.lang.String substitute(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2, $r4;
        int $i0, $i1, $i2;
        java.lang.String r0, r1, r3, r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 = r0;

     label1:
        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if 0 > $i0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>(r5);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i0, $i2, r3);

        r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label2:
        return r5;
    }

    public static java.lang.String repeat(java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String substitute(java.lang.String, java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r4;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r2, $r3, $r5, $r6, $r7;
        boolean z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r4 := @parameter2: java.lang.String[];

        z0 = 1;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $r7 = r0[i3];

        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>($r7);

        if 0 > $i2 goto label2;

        z0 = 0;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        return r2;

     label4:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        i4 = 0;

     label5:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label6;

        $r6 = r0[i4];

        $r5 = r4[i4];

        staticinvoke <ucar.unidata.util.StringUtil: void substitute(java.lang.StringBuffer,java.lang.String,java.lang.String)>($r1, $r6, $r5);

        i4 = i4 + 1;

        goto label5;

     label6:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void substitute(java.lang.StringBuffer, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer r2;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, r1;

        r2 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        i4 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        $i2 = virtualinvoke r2.<java.lang.StringBuffer: int indexOf(java.lang.String,int)>(r1, i4);

        if 0 > $i2 goto label2;

        $i3 = $i2 + $i1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i2, $i3, r0);

        i4 = $i2 + $i0;

        goto label1;

     label2:
        return;
    }

    public static boolean isDigits(java.lang.String)
    {
        int $i0, i2;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static java.lang.String quoteHtmlContent(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.unidata.util.StringUtil: char[] htmlIn>;

        $r1 = <ucar.unidata.util.StringUtil: java.lang.String[] htmlOut>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String quoteXmlContent(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.unidata.util.StringUtil: char[] xmlInC>;

        $r1 = <ucar.unidata.util.StringUtil: java.lang.String[] xmlOutC>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String unquoteXmlContent(java.lang.String)
    {
        char[] $r1;
        java.lang.String[] $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.unidata.util.StringUtil: java.lang.String[] xmlOutC>;

        $r1 = <ucar.unidata.util.StringUtil: char[] xmlInC>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String unreplace(java.lang.String,java.lang.String[],char[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String quoteXmlAttribute(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.unidata.util.StringUtil: char[] xmlIn>;

        $r1 = <ucar.unidata.util.StringUtil: java.lang.String[] xmlOut>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String unquoteXmlAttribute(java.lang.String)
    {
        char[] $r1;
        java.lang.String[] $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.unidata.util.StringUtil: java.lang.String[] xmlOut>;

        $r1 = <ucar.unidata.util.StringUtil: char[] xmlIn>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String unreplace(java.lang.String,java.lang.String[],char[])>(r0, $r2, $r1);

        return $r3;
    }

    public static java.lang.String replace(java.lang.String, char[], java.lang.String[])
    {
        java.lang.String[] r4;
        java.lang.StringBuffer $r6;
        int $i0, $i1, $i3, $i6, i7, i8, $i9, $i10;
        java.lang.String r2, $r3, $r5;
        boolean z0, $z2, $z3;
        char $c2, $c4, $c5;
        char[] r0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: char[];

        r4 := @parameter2: java.lang.String[];

        z0 = 1;

        i7 = 0;

     label1:
        $i0 = lengthof r0;

        if i7 >= $i0 goto label5;

        $c5 = r0[i7];

        $i9 = (int) $c5;

        $i6 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i9);

        if $i6 >= 0 goto label2;

        $z3 = 1;

        $z2 = 1;

        goto label3;

     label2:
        $z3 = 0;

        $z2 = 0;

     label3:
        z0 = $z2;

        if $z3 != 0 goto label4;

        goto label5;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        if z0 == 0 goto label6;

        return r2;

     label6:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        i8 = 0;

     label7:
        $i1 = lengthof r0;

        if i8 >= $i1 goto label9;

        $c2 = r0[i8];

        $i10 = (int) $c2;

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i10);

        if $i3 < 0 goto label8;

        $c4 = r0[i8];

        $r5 = r4[i8];

        staticinvoke <ucar.unidata.util.StringUtil: void replace(java.lang.StringBuffer,char,java.lang.String)>($r6, $c4, $r5);

     label8:
        i8 = i8 + 1;

        goto label7;

     label9:
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String unreplace(java.lang.String, java.lang.String[], char[])
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i4, i5, i6;
        java.lang.String r2, $r3, $r4, $r6, $r7;
        boolean z0, $z2, $z3;
        char $c3;
        char[] r5;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r5 := @parameter2: char[];

        z0 = 1;

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label5;

        $r7 = r0[i5];

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>($r7);

        if $i4 >= 0 goto label2;

        $z3 = 1;

        $z2 = 1;

        goto label3;

     label2:
        $z3 = 0;

        $z2 = 0;

     label3:
        z0 = $z2;

        if $z3 != 0 goto label4;

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        if z0 == 0 goto label6;

        return r2;

     label6:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        i6 = 0;

     label7:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label9;

        $r4 = r0[i6];

        $i2 = virtualinvoke $r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>($r4);

        if $i2 < 0 goto label8;

        $r6 = r0[i6];

        $c3 = r5[i6];

        staticinvoke <ucar.unidata.util.StringUtil: void unreplace(java.lang.StringBuffer,java.lang.String,char)>($r1, $r6, $c3);

     label8:
        i6 = i6 + 1;

        goto label7;

     label9:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static int match(java.lang.String, java.lang.String)
    {
        char $c2, $c3;
        int $i0, $i1, i4, $i5, $i6;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i4 >= $i1 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c2;

        $i6 = (int) $c3;

        if $i5 == $i6 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return i4;
    }

    public static void replace(java.lang.StringBuffer, char, java.lang.String)
    {
        char $c1, c2;
        java.lang.StringBuffer r0;
        int $i0, $i3, $i4, $i5, i6, $i7, $i8;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuffer;

        c2 := @parameter1: char;

        r1 := @parameter2: java.lang.String;

        i6 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i6 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i6);

        $i7 = (int) $c1;

        $i8 = (int) c2;

        if $i7 != $i8 goto label2;

        $i3 = i6 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i3, r1);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        i6 = i6 + $i5;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    public static void unreplace(java.lang.StringBuffer, java.lang.String, char)
    {
        java.lang.StringBuffer r0;
        int $i0, $i2, $i3, $i4;
        char c1;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.String;

        c1 := @parameter2: char;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int indexOf(java.lang.String)>(r1);

        if 0 > $i0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>($i0, c1);

        $i2 = $i0 + 1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i0 + $i3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>($i2, $i4);

        goto label1;

     label2:
        return;
    }

    public static java.lang.String replace(java.lang.String, char, java.lang.String)
    {
        java.lang.StringBuffer $r4;
        int $i1, $i2;
        char c0;
        java.lang.String r0, r2, $r3;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        r2 := @parameter2: java.lang.String;

        $i2 = (int) c0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>($i2);

        if $i1 >= 0 goto label1;

        return r0;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        staticinvoke <ucar.unidata.util.StringUtil: void replace(java.lang.StringBuffer,char,java.lang.String)>($r4, c0, r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String escape(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i3, $i5, i6, i7, i8, $i9, $i10, $i11;
        java.lang.String r0, $r2, r3, $r4;
        boolean $z0, $z1, z2;
        char $c2, $c4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z2 = 1;

        i6 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c4);

        if $z1 != 0 goto label2;

        $i9 = (int) $c4;

        $i5 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i9);

        if 0 <= $i5 goto label2;

        z2 = 0;

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        return r0;

     label4:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i7 = 0;

     label5:
        $i1 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if i7 >= $i1 goto label8;

        $c2 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>(i7);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c2);

        if $z0 != 0 goto label7;

        $i10 = (int) $c2;

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i10);

        if 0 > $i3 goto label6;

        goto label7;

     label6:
        virtualinvoke $r5.<java.lang.StringBuffer: void setCharAt(int,char)>(i7, 37);

        i8 = i7 + 1;

        $i11 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i8, $r4);

        i7 = i8 + 1;

     label7:
        i7 = i7 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String escape2(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i3, $i5, i6, i7, i8, $i9, $i10, $i11;
        java.lang.String r0, $r2, r3, $r4;
        boolean z0;
        char $c2, $c4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 = 1;

        i6 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i9 = (int) $c4;

        $i5 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i9);

        if $i5 < 0 goto label2;

        z0 = 0;

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        return r0;

     label4:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i7 = 0;

     label5:
        $i1 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if i7 >= $i1 goto label8;

        $c2 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>(i7);

        $i10 = (int) $c2;

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i10);

        if $i3 >= 0 goto label6;

        goto label7;

     label6:
        virtualinvoke $r5.<java.lang.StringBuffer: void setCharAt(int,char)>(i7, 37);

        i8 = i7 + 1;

        $i11 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i8, $r4);

        i7 = i8 + 1;

     label7:
        i7 = i7 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toHexString(java.awt.Color)
    {
        java.awt.Color r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        java.lang.StringBuilder $r0, $r1, $r5, $r8, $r11;

        r2 := @parameter0: java.awt.Color;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i0 = virtualinvoke r2.<java.awt.Color: int getRed()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int,java.lang.String)>($r3, 2, "0");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = virtualinvoke r2.<java.awt.Color: int getGreen()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r7 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int,java.lang.String)>($r6, 2, "0");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i2 = virtualinvoke r2.<java.awt.Color: int getBlue()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r10 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int,java.lang.String)>($r9, 2, "0");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String filter7bits(java.lang.String)
    {
        byte[] $r1, r2;
        byte $b2, $b3, $b4, $b5, $b9;
        int $i0, $i1, i6, i7, $i8, $i10, $i11, $i12, $i13;
        java.lang.String r0, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r1;

        r2 = newarray (byte)[$i0];

        i6 = 0;

        i7 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i1 goto label5;

        $b2 = $r1[i7];

        $i10 = (int) $b2;

        if $i10 >= 128 goto label2;

        $b5 = $r1[i7];

        $i11 = (int) $b5;

        if $i11 > 31 goto label3;

     label2:
        $b3 = $r1[i7];

        $i12 = (int) $b3;

        if $i12 == 10 goto label3;

        $b4 = $r1[i7];

        $i13 = (int) $b4;

        if $i13 != 9 goto label4;

     label3:
        $i8 = i6;

        i6 = i6 + 1;

        $b9 = $r1[i7];

        r2[$i8] = $b9;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>(r2, 0, i6);

        return $r4;
    }

    public static java.lang.String filter(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2, $i4, $i6, i7, i8, $i9, $i10;
        java.lang.String r0, $r2, r3;
        boolean $z0, $z1, z2;
        char $c3, $c5;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z2 = 1;

        i7 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i0 goto label3;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c5);

        if $z1 != 0 goto label2;

        $i9 = (int) $c5;

        $i6 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i9);

        if 0 <= $i6 goto label2;

        z2 = 0;

        goto label3;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        return r0;

     label4:
        $r4 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i1);

        i8 = 0;

     label5:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i8 >= $i2 goto label8;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c3);

        if $z0 != 0 goto label6;

        $i10 = (int) $c3;

        $i4 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i10);

        if 0 > $i4 goto label7;

     label6:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label7:
        i8 = i8 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String allow(java.lang.String, java.lang.String, char)
    {
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i3, $i6, i7, i8, $i9, $i10;
        java.lang.String r0, $r2, r3;
        boolean $z0, $z1, z2;
        char $c2, c4, $c5;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        c4 := @parameter2: char;

        z2 = 1;

        i7 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i0 goto label3;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c5);

        if $z1 != 0 goto label2;

        $i9 = (int) $c5;

        $i6 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i9);

        if 0 <= $i6 goto label2;

        z2 = 0;

        goto label3;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        return r0;

     label4:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i8 = 0;

     label5:
        $i1 = virtualinvoke $r4.<java.lang.StringBuffer: int length()>();

        if i8 >= $i1 goto label8;

        $c2 = virtualinvoke $r4.<java.lang.StringBuffer: char charAt(int)>(i8);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c2);

        if $z0 != 0 goto label7;

        $i10 = (int) $c2;

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(int)>($i10);

        if 0 > $i3 goto label6;

        goto label7;

     label6:
        virtualinvoke $r4.<java.lang.StringBuffer: void setCharAt(int,char)>(i8, c4);

     label7:
        i8 = i8 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String unescape(java.lang.String)
    {
        java.lang.StringBuffer $r6;
        int $i0, $i1, $i3, $i5, $i7, $i8, $i9, i10, $i12;
        java.lang.String r0, $r3, $r7;
        char $c2, $c4, $c6, c11;
        java.lang.NumberFormatException $r5;
        char[] r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(37);

        if $i0 >= 0 goto label1;

        return r0;

     label1:
        r1 = newarray (char)[2];

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i10 = 0;

     label2:
        $i1 = virtualinvoke $r6.<java.lang.StringBuffer: int length()>();

        if i10 >= $i1 goto label9;

        $c2 = virtualinvoke $r6.<java.lang.StringBuffer: char charAt(int)>(i10);

        $i12 = (int) $c2;

        if $i12 == 37 goto label3;

        goto label8;

     label3:
        $i3 = i10 + 1;

        $c4 = virtualinvoke $r6.<java.lang.StringBuffer: char charAt(int)>($i3);

        r1[0] = $c4;

        $i5 = i10 + 2;

        $c6 = virtualinvoke $r6.<java.lang.StringBuffer: char charAt(int)>($i5);

        r1[1] = $c6;

     label4:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r1);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r7, 16);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        goto label8;

     label7:
        c11 = (char) $i7;

        virtualinvoke $r6.<java.lang.StringBuffer: void setCharAt(int,char)>(i10, c11);

        $i9 = i10 + 1;

        $i8 = i10 + 3;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>($i9, $i8);

     label8:
        i10 = i10 + 1;

        goto label2;

     label9:
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public static java.lang.Object findMatch(java.lang.String, java.util.List, java.lang.Object)
    {
        int i0, $i1;
        java.lang.String r3, $r4, $r8, $r11, $r17;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r6, $r13;
        java.util.List r0;
        java.lang.Object r1, $r2;
        java.lang.StringBuilder $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.Object;

        $z0 = <ucar.unidata.util.StringUtil: boolean debug>;

        if $z0 == 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("findMatch:");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label1:
        i0 = 0;

     label2:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i1 goto label5;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        if $r2 == null goto label4;

        $z1 = <ucar.unidata.util.StringUtil: boolean debug>;

        if $z1 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t:");

        $r8 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label3:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z2 = staticinvoke <ucar.unidata.util.StringUtil: boolean stringMatch(java.lang.String,java.lang.String)>(r3, $r4);

        if $z2 == 0 goto label4;

        return $r2;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        return r1;
    }

    public static java.lang.Object findMatch(java.lang.String, java.util.List, java.util.List, java.lang.Object)
    {
        java.util.List r0, r5;
        int $i0, i1;
        java.lang.Object r1, $r3, $r6;
        java.lang.String r2, $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        r5 := @parameter2: java.util.List;

        r1 := @parameter3: java.lang.Object;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean stringMatch(java.lang.String,java.lang.String)>(r2, $r4);

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public static boolean containsRegExp(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(94);

        if $i0 >= 0 goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        if $i1 >= 0 goto label2;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(124);

        if $i2 >= 0 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        if $i3 >= 0 goto label2;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(36);

        if $i4 >= 0 goto label2;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        if $i5 >= 0 goto label2;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if $i6 >= 0 goto label2;

        $i7 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(91);

        if $i7 < 0 goto label1;

        $i9 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(93);

        if $i9 >= 0 goto label2;

     label1:
        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(43);

        if $i8 < 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean stringMatch(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean stringMatch(java.lang.String,java.lang.String,boolean,boolean)>(r0, r1, 0, 1);

        return $z0;
    }

    public static boolean stringMatch(java.lang.String, java.lang.String, boolean, boolean)
    {
        java.util.regex.Matcher $r7;
        boolean z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Exception $r15;
        java.lang.StringBuilder $r2, $r3, $r4, $r16, $r18, $r19;
        java.util.regex.Pattern $r8, r23;
        java.lang.Throwable $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r10, $r11, $r12, $r13, $r20, r21, $r22;
        java.util.Hashtable $r5, $r9;
        java.io.PrintStream $r17;
        java.lang.Object $r0, $r6;

        r1 := @parameter0: java.lang.String;

        r21 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $r0 = <ucar.unidata.util.StringUtil: java.lang.Object MATCH_MUTEX>;

        entermonitor $r0;

     label01:
        if z0 != 0 goto label04;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21);

        if $z7 == 0 goto label07;

     label02:
        exitmonitor $r0;

     label03:
        return 1;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z1 == 0 goto label07;

     label05:
        exitmonitor $r0;

     label06:
        return 1;

     label07:
        if z2 == 0 goto label13;

        if z0 != 0 goto label10;

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke r21.<java.lang.String: java.lang.String toLowerCase()>();

        $i2 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>($r13);

        if $i2 < 0 goto label13;

     label08:
        exitmonitor $r0;

     label09:
        return 1;

     label10:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r21);

        if $i1 < 0 goto label13;

     label11:
        exitmonitor $r0;

     label12:
        return 1;

     label13:
        $r22 = virtualinvoke r21.<java.lang.String: java.lang.String toLowerCase()>();

        $i3 = virtualinvoke $r22.<java.lang.String: int indexOf(java.lang.String)>("t_");

        if $i3 < 0 goto label14;

     label14:
        $z3 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z3 != 0 goto label15;

        $z5 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z5 == 0 goto label16;

     label15:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        r21 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label17;

     label16:
        $z6 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("glob:");

        if $z6 == 0 goto label17;

        $r10 = "glob:";

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r11 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>($i0);

        r21 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String wildcardToRegexp(java.lang.String)>($r11);

     label17:
        $z8 = staticinvoke <ucar.unidata.util.StringUtil: boolean containsRegExp(java.lang.String)>(r21);

        if $z8 != 0 goto label20;

     label18:
        exitmonitor $r0;

     label19:
        return 0;

     label20:
        $r5 = <ucar.unidata.util.StringUtil: java.util.Hashtable patternCache>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r21);

        r23 = (java.util.regex.Pattern) $r6;

        if r23 != null goto label21;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r21);

        r23 = $r8;

        $r9 = <ucar.unidata.util.StringUtil: java.util.Hashtable patternCache>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, $r8);

     label21:
        $r7 = virtualinvoke r23.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z4 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

     label22:
        exitmonitor $r0;

     label23:
        return $z4;

     label24:
        $r15 := @caughtexception;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error regexpMatch:");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

        exitmonitor $r0;

     label25:
        return 1;

     label26:
        $r14 := @caughtexception;

        exitmonitor $r0;

     label27:
        throw $r14;

        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label04 to label05 with label24;
        catch java.lang.Exception from label07 to label08 with label24;
        catch java.lang.Exception from label10 to label11 with label24;
        catch java.lang.Exception from label13 to label18 with label24;
        catch java.lang.Exception from label20 to label22 with label24;
        catch java.lang.Throwable from label01 to label03 with label26;
        catch java.lang.Throwable from label04 to label06 with label26;
        catch java.lang.Throwable from label07 to label09 with label26;
        catch java.lang.Throwable from label10 to label12 with label26;
        catch java.lang.Throwable from label13 to label19 with label26;
        catch java.lang.Throwable from label20 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public static boolean regexpMatch(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r8;
        java.util.regex.Matcher $r5;
        java.lang.Object $r0, $r3;
        java.lang.String r1, r4;
        java.util.regex.Pattern $r6, r9;
        java.util.Hashtable $r2, $r7;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r0 = <ucar.unidata.util.StringUtil: java.lang.Object MATCH_MUTEX>;

        entermonitor $r0;

     label1:
        $r2 = <ucar.unidata.util.StringUtil: java.util.Hashtable patternCache>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.util.regex.Pattern) $r3;

        if r9 != null goto label2;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        r9 = $r6;

        $r7 = <ucar.unidata.util.StringUtil: java.util.Hashtable patternCache>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label2:
        $r5 = virtualinvoke r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        exitmonitor $r0;

     label3:
        return $z0;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.lang.String wildcardToRegexp(java.lang.String)
    {
        char $c2;
        java.lang.StringBuffer $r3;
        int $i0, $i1, i3, $i4;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(94);

        i3 = 0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i3 >= $i1 goto label7;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        lookupswitch($i4)
        {
            case 36: goto label4;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label2;
            case 46: goto label4;
            case 63: goto label3;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 123: goto label4;
            case 124: goto label4;
            case 125: goto label4;
            default: goto label5;
        };

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".*");

        goto label6;

     label3:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        goto label6;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label6;

     label5:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static boolean startsWithVowel(java.lang.String)
    {
        char $c0, $c1;
        int $i2, $i3, $i4, $i5, $i6;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);

        $i2 = (int) $c1;

        if $i2 == 97 goto label3;

        $i3 = (int) $c1;

        if $i3 == 101 goto label3;

        $i4 = (int) $c1;

        if $i4 == 105 goto label3;

        $i5 = (int) $c1;

        if $i5 == 111 goto label3;

        $i6 = (int) $c1;

        if $i6 != 117 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public static java.lang.String breakText(java.lang.String, java.lang.String, int)
    {
        char $c3;
        java.lang.StringBuffer $r6;
        int $i0, $i1, i2, i4, $i5;
        java.lang.String $r1, r2, r3, r4, $r5;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r3, "\n", " ");

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 >= i2 goto label2;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        goto label6;

     label2:
        i4 = i2;

     label3:
        if i4 >= $i1 goto label4;

        $c3 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c3;

        if $i5 == 32 goto label4;

        i4 = i4 + 1;

        goto label3;

     label4:
        if i4 != $i1 goto label5;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        goto label6;

     label5:
        $r1 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(i4);

        goto label1;

     label6:
        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String breakTextAtWords(java.lang.String, java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        java.util.StringTokenizer $r1;
        int $i0, i1, $i2, $i3, $i4, i5;
        java.lang.String r2, $r3, $r4, r5;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String)>(r2);

        i5 = 0;

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = $i0 + i5;

        if $i2 < i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        i5 = 0;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i4 = $i3 + 1;

        i5 = i5 + $i4;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String stripHtmlTag(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0, r1, r2;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r2 = $r0;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("<html>");

        if $z0 == 0 goto label1;

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(6);

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("</html>");

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = $i0 - 7;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        return r2;
    }

    public static java.lang.String stripTags(java.lang.String)
    {
        java.lang.StringBuffer $r0, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2, $r3, $r7, $r8, r9, $r11, $r12, $r13;
        java.lang.StringBuilder $r4, $r5, $r6;

        r9 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

     label1:
        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $i1 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>("<");

        if $i1 >= 0 goto label2;

        $r8 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label5;

     label2:
        $r1 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        $r3 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        $i3 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(">");

        if $i3 >= 0 goto label4;

        goto label5;

     label4:
        $i4 = $i3 + 1;

        r9 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label1;

     label5:
        $r10 = new java.lang.StringBuffer;

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r11, "&nbsp;", "");

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public static java.lang.String stripAndReplace(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r1, $r2, $r3, r4, r5, r6, $r7;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

     label1:
        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if $i1 >= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        goto label5;

     label2:
        $r2 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label3:
        $i3 = $i1 + 1;

        $r3 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i3);

        r6 = $r3;

        $i4 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(r4);

        if $i4 >= 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $i5 = $i4 + 1;

        r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i5);

        goto label1;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String removeWhitespace(java.lang.String)
    {
        char c1;
        java.lang.StringBuffer $r0;
        int $i0, i2;
        char[] $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r2;

        if i2 >= $i0 goto label4;

        c1 = $r2[i2];

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String zeroString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padZero(int,int)>(i0, 2);

        return $r0;
    }

    public static java.lang.String padZero(int, int)
    {
        int i0, i1;
        java.lang.String $r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padLeft(java.lang.String,int,java.lang.String)>($r0, i1, "0");

        return $r1;
    }

    public static java.lang.String padLeft(java.lang.String, int)
    {
        int i0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padLeft(java.lang.String,int,java.lang.String)>(r0, i0, " ");

        return $r1;
    }

    public static java.lang.String padLeft(java.lang.String, int, java.lang.String)
    {
        int $i0, i1;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String r1, r4;

        r4 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 >= i1 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r4;
    }

    public static java.lang.String padRight(java.lang.String, int)
    {
        int i0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int,java.lang.String)>(r0, i0, " ");

        return $r1;
    }

    public static java.lang.String padRight(java.lang.String, int, java.lang.String)
    {
        int $i0, i1;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, r4;

        r4 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 >= i1 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r4;
    }

    public static java.lang.String join(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String join(java.lang.String,java.lang.Object[])>(" ", r0);

        return $r1;
    }

    public static java.lang.String join(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r2;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String join(java.lang.String,java.lang.Object[],boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.lang.String join(java.lang.String, java.lang.Object[], boolean)
    {
        java.lang.Object[] r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2;
        java.lang.Object $r3, $r6, $r7;
        java.lang.String $r2, $r4, r5, $r8;
        boolean z0;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label5;

        if z0 == 0 goto label2;

        $r6 = r1[i2];

        if $r6 == null goto label4;

        $r7 = r1[i2];

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        goto label4;

     label2:
        if i2 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label3:
        $r3 = r1[i2];

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(java.lang.String, java.util.List)
    {
        java.util.List r1;
        java.lang.String[] $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String[] listToStringArray(java.util.List)>(r1);

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String join(java.lang.String,java.lang.Object[])>(r0, $r2);

        return $r3;
    }

    public static java.lang.String join(java.lang.String, java.util.List, boolean)
    {
        java.util.List r1;
        java.lang.String[] $r2;
        java.lang.String r0, $r3;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String[] listToStringArray(java.util.List)>(r1);

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String join(java.lang.String,java.lang.Object[],boolean)>(r0, $r2, z0);

        return $r3;
    }

    public static java.util.List split(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.List $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String)>(r0, ",");

        return $r1;
    }

    public static java.util.Date parseDate(java.lang.String)
    {
        java.util.TimeZone $r3;
        java.util.Date $r6;
        java.text.ParsePosition $r5;
        java.text.SimpleDateFormat $r1;
        java.lang.String[] $r0;
        int $i0, i1;
        java.lang.String $r2, r4;

        r4 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "yyyy-MM-dd HH:mm:ss z";

        $r0[1] = "yyyy-MM-dd HH:mm:ss";

        $r0[2] = "yyyy-MM-dd HH:mm";

        $r0[3] = "yyyy-MM-dd";

        $r0[4] = "yyyyMMddHHmmss";

        $r0[5] = "yyyyMMddHHmm";

        $r0[6] = "yyyyMMddHH";

        $r0[7] = "yyyyMMdd";

        i1 = 0;

     label1:
        $i0 = lengthof $r0;

        if i1 >= $i0 goto label3;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = $r0[i1];

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        $r5 = new java.text.ParsePosition;

        specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>(0);

        $r6 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r4, $r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static java.util.List parseIntegerListString(java.lang.String)
    {
        java.lang.Integer $r5, $r7, $r10, $r13, $r14;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String r1, r4, $r9, $r12, $r16;
        java.util.List $r2, $r6;
        java.lang.Object $r3, $r8, $r11, $r15;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String)>(r1, ",");

        i5 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i5 >= $i0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        r4 = (java.lang.String) $r3;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 < 0 goto label5;

        i6 = 1;

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String)>(r4, ":");

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 <= 2 goto label2;

        $r14 = new java.lang.Integer;

        $r15 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(2);

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.Integer: void <init>(java.lang.String)>($r16);

        i6 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

     label2:
        $r7 = new java.lang.Integer;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.Integer: void <init>(java.lang.String)>($r9);

        $i3 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r10 = new java.lang.Integer;

        $r11 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.Integer: void <init>(java.lang.String)>($r12);

        $i4 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        i7 = $i3;

     label3:
        if i7 > $i4 goto label4;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i7);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        i7 = i7 + i6;

        goto label3;

     label4:
        goto label6;

     label5:
        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(java.lang.String)>(r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        return $r0;
    }

    public static java.util.List parseLineWords(java.lang.String, int[], java.lang.String, java.lang.String, boolean)
    {
        java.util.List $r5;
        int[] r0, r1;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r2, r3, r4;
        boolean z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: int[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        i3 = 0;

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        r1[i4] = i3;

        $i2 = r0[i4];

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List parseLineWords(java.lang.String,int[],int[],java.lang.String,java.lang.String,boolean)>(r2, r1, r0, r3, r4, z0);

        return $r5;
    }

    public static java.util.List parseLineWords(java.lang.String, int[], int[], java.lang.String, java.lang.String, boolean)
    {
        java.lang.String[] $r13;
        java.util.ArrayList $r3;
        int[] r8, r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, i10;
        java.lang.String r0, r1, r5, $r6, r7, $r10, $r11, $r12;
        boolean z0, $z1;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: int[];

        r9 := @parameter2: int[];

        r1 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean)>(r0, r1, 0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i7 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i7 >= $i0 goto label9;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i7);

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        goto label8;

     label2:
        if r7 == null goto label3;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z1 == 0 goto label3;

        goto label8;

     label3:
        $i2 = lengthof r8;

        $r13 = newarray (java.lang.String)[$i2];

        i8 = 0;

     label4:
        $i9 = lengthof r8;

        if i8 >= $i9 goto label7;

        $i4 = r8[i8];

        $i3 = r9[i8];

        i10 = $i4 + $i3;

        $i5 = virtualinvoke r5.<java.lang.String: int length()>();

        if i10 <= $i5 goto label5;

        i10 = virtualinvoke r5.<java.lang.String: int length()>();

     label5:
        $i6 = r8[i8];

        $r10 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i6, i10);

        $r13[i8] = $r10;

        if z0 == 0 goto label6;

        $r11 = $r13[i8];

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $r13[i8] = $r12;

     label6:
        i8 = i8 + 1;

        goto label4;

     label7:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

     label8:
        i7 = i7 + 1;

        goto label1;

     label9:
        return $r3;
    }

    public static java.lang.String[] splitString(java.lang.String)
    {
        java.lang.String[] $r2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        return $r2;
    }

    public static java.util.List split(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean)>(r0, r1, 1);

        return $r2;
    }

    public static java.util.List split(java.lang.Object, java.lang.String, boolean)
    {
        java.util.List $r2;
        java.lang.Object r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>(r0, r1, z0, 0);

        return $r2;
    }

    public static java.util.List splitWithQuotes(java.lang.String)
    {
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        java.lang.String $r1, $r2, $r3, $r4, r5, r6;

        r5 := @parameter0: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        if r5 != null goto label01;

        return $r7;

     label01:
        $r1 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        r6 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("\"");

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>("\"", $i1);

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(" ", 1);

        if $i0 >= 0 goto label02;

        if $i3 >= 0 goto label02;

        $i9 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i9 <= 0 goto label13;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label13;

     label02:
        if $i0 < 0 goto label09;

        $i12 = (int) -1;

        if $i3 == $i12 goto label03;

        if $i0 >= $i3 goto label09;

     label03:
        if $i0 < $i2 goto label06;

        if $i0 != 0 goto label04;

        $i8 = $i0 + 1;

        r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i8);

        goto label05;

     label04:
        if $i0 <= 0 goto label05;

        r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label05:
        $i10 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i10 <= 0 goto label13;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label13;

     label06:
        if $i2 >= 0 goto label07;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label13;

     label07:
        $i5 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i5, $i2);

        $i6 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i6 <= 0 goto label08;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label08:
        $i7 = $i2 + 1;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i7);

        goto label12;

     label09:
        if $i3 >= 0 goto label10;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label13;

     label10:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i4 <= 0 goto label11;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label11:
        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

     label12:
        goto label01;

     label13:
        return $r7;
    }

    public static java.util.List split(java.lang.Object, java.lang.String, boolean, boolean)
    {
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.String r2, r3, r4;
        boolean z0, z1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        if r1 != null goto label1;

        return $r0;

     label1:
        r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

     label2:
        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(r2);

        if $i3 >= 0 goto label3;

        r4 = r3;

        goto label4;

     label3:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $i1 = $i3 + $i0;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

     label4:
        if z0 == 0 goto label5;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

     label5:
        if z1 == 0 goto label6;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label6;

        if $i3 >= 0 goto label2;

        goto label8;

     label6:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        if $i3 >= 0 goto label7;

        goto label8;

     label7:
        goto label2;

     label8:
        return $r0;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String, int)
    {
        java.lang.String[] r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, $r2, r3;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0 = newarray (java.lang.String)[i0];

        i5 = 0;

     label1:
        $i1 = i0 - 1;

        if i5 >= $i1 goto label3;

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if $i3 >= 0 goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        r0[i5] = $r2;

        $i4 = $i3 + 1;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i4);

        i5 = i5 + 1;

        goto label1;

     label3:
        $i2 = i0 - 1;

        r0[$i2] = r3;

        return r0;
    }

    public static java.util.List splitUpTo(java.lang.String, java.lang.String, int)
    {
        java.util.ArrayList $r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, $r2, $r3, r4;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label1:
        $i1 = i0 - 1;

        if i5 >= $i1 goto label3;

        $i3 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if $i3 >= 0 goto label2;

        goto label3;

     label2:
        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i4 = $i3 + 1;

        $r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i4);

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        i5 = i5 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        return $r0;
    }

    public static java.lang.String replaceDate(java.lang.String, java.lang.String, java.util.Date)
    {
        java.util.Date r2;
        java.lang.String r0, r1, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Date;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replaceDate(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String)>(r0, r1, r2, "${", "}");

        return $r3;
    }

    public static java.lang.String replaceDate(java.lang.String, java.lang.String, java.util.Date, java.util.TimeZone)
    {
        java.util.Date r2;
        java.util.TimeZone r3;
        java.lang.String r0, r1, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: java.util.TimeZone;

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replaceDate(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String,java.util.TimeZone)>(r0, r1, r2, "${", "}", r3);

        return $r4;
    }

    public static java.lang.String replaceDate(java.lang.String, java.lang.String, java.util.Date, java.lang.String, java.lang.String)
    {
        java.util.Date r2;
        java.util.TimeZone $r5;
        java.lang.String r0, r1, r3, r4, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r5 = <ucar.unidata.util.DateUtil: java.util.TimeZone TIMEZONE_GMT>;

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replaceDate(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String,java.util.TimeZone)>(r0, r1, r2, r3, r4, $r5);

        return $r6;
    }

    public static java.lang.String replaceDate(java.lang.String, java.lang.String, java.util.Date, java.lang.String, java.lang.String, java.util.TimeZone)
    {
        java.util.Date r16;
        java.text.SimpleDateFormat $r14;
        java.lang.String[] $r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r1, r3, $r5, r6, $r7, $r13, $r15, $r17, $r22, r23;
        java.util.TimeZone r24;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r0, $r2, $r4, $r10, $r11, $r12, $r18, $r19, $r20, $r21;

        r23 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r16 := @parameter2: java.util.Date;

        r1 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r24 := @parameter5: java.util.TimeZone;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r23.<java.lang.String: int indexOf(java.lang.String)>($r5);

        if $i0 >= 0 goto label2;

        return r23;

     label2:
        $i1 = virtualinvoke r23.<java.lang.String: int indexOf(java.lang.String,int)>(r6, $i0);

        if $i1 >= 0 goto label3;

        return r23;

     label3:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i0 + $i2;

        $r7 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>($i3, $i1);

        $r8 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String[] split(java.lang.String,java.lang.String,int)>($r7, ":", 2);

        if $r8 == null goto label4;

        $i4 = lengthof $r8;

        if $i4 == 2 goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find date format:");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label5:
        $r14 = new java.text.SimpleDateFormat;

        $r15 = $r8[1];

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r15);

        if r24 != null goto label6;

        r24 = <ucar.unidata.util.DateUtil: java.util.TimeZone TIMEZONE_GMT>;

     label6:
        virtualinvoke $r14.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>(r24);

        $r17 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = virtualinvoke r23.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r22, $r17);

        goto label1;
    }

    public static java.lang.String[] listToStringArray(java.util.List)
    {
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.String[] r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r1[i2] = $r3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r1;
    }

    public static java.lang.String listToString(java.util.List)
    {
        java.util.List r1;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String $r2, $r4;

        r1 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

     label2:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.util.List toString(java.util.List)
    {
        java.util.List r1;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.ArrayList $r0;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0, $r2, r3, $r4, r5;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r5;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        $i2 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r0);

        if $i2 >= 0 goto label3;

        goto label5;

     label3:
        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        if r3 == null goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label4:
        $i3 = $i2 + $i1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label2;

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String replaceList(java.lang.String, java.lang.String[], java.lang.String[])
    {
        int $i0, i1;
        java.lang.String[] r0, r1;
        java.lang.String $r2, $r3, r4;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r1 := @parameter2: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r3 = r0[i1];

        $r2 = r1[i1];

        r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r4, $r3, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    public static java.lang.String replaceList(java.lang.String, java.util.List, java.util.List)
    {
        java.lang.IllegalArgumentException $r6;
        java.util.List r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r4;
        java.lang.String $r3, $r5, r7;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        r1 := @parameter2: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Patterns list not the same size as values list");

        throw $r6;

     label1:
        i3 = 0;

     label2:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (java.lang.String) $r4;

        r7 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r7, $r3, $r5);

        i3 = i3 + 1;

        goto label2;

     label3:
        return r7;
    }

    public static java.util.List replaceList(java.util.List, java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r3, r5;
        java.util.ArrayList $r0;
        java.util.List r1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r2;
        java.lang.String $r4, $r6, $r7, r8;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.String[];

        r5 := @parameter2: java.lang.String[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (java.lang.String) $r2;

        i3 = 0;

     label2:
        $i1 = lengthof r3;

        if i3 >= $i1 goto label4;

        $r4 = r3[i3];

        if $r4 == null goto label3;

        $r7 = r3[i3];

        $r6 = r5[i3];

        r8 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r8, $r7, $r6);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r8);

        i2 = i2 + 1;

        goto label1;

     label5:
        return $r0;
    }

    public static java.lang.StringBuffer append(java.lang.StringBuffer, java.lang.Object)
    {
        java.lang.StringBuffer $r1, $r2, r3;
        java.lang.Object r0;
        java.lang.String $r4;

        r3 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r3 != null goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r3 = $r2;

     label1:
        $r1 = r3;

        if r0 != null goto label2;

        $r4 = "null";

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return r3;
    }

    public static java.lang.StringBuffer append(java.lang.StringBuffer, java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuffer $r1, r3;
        java.lang.Object r0, r2;
        java.lang.String $r4;

        r3 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.StringBuffer append(java.lang.StringBuffer,java.lang.Object)>(r3, r0);

        if r2 != null goto label1;

        $r4 = "null";

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return $r1;
    }

    public static java.lang.StringBuffer append(java.lang.StringBuffer, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuffer $r2, r4;
        java.lang.Object r0, r1, r3;
        java.lang.String $r5;

        r4 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.StringBuffer append(java.lang.StringBuffer,java.lang.Object,java.lang.Object)>(r4, r0, r1);

        if r3 != null goto label1;

        $r5 = "null";

        goto label2;

     label1:
        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        return $r2;
    }

    public static java.lang.StringBuffer append(java.lang.StringBuffer, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuffer $r3, r5;
        java.lang.Object r0, r1, r2, r4;
        java.lang.String $r6;

        r5 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.StringBuffer append(java.lang.StringBuffer,java.lang.Object,java.lang.Object,java.lang.Object)>(r5, r0, r1, r2);

        if r4 != null goto label1;

        $r6 = "null";

        goto label2;

     label1:
        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        return $r3;
    }

    public static java.lang.StringBuffer append(java.lang.StringBuffer, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuffer $r4, r6;
        java.lang.Object r0, r1, r2, r3, r5;
        java.lang.String $r7;

        r6 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: java.lang.Object;

        r3 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.StringBuffer append(java.lang.StringBuffer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r6, r0, r1, r2, r3);

        if r5 != null goto label1;

        $r7 = "null";

        goto label2;

     label1:
        $r7 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        return $r4;
    }

    public static java.util.List parseCsv(java.lang.String, boolean)
    {
        byte b8;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r2, $r3, $r16, $r17, $r20, $r21, $r31, $r36, $r37;
        java.lang.String[] $r5, $r6;
        java.util.ArrayList r27, $r32, $r33, $r34, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r0, $r4, $r7, $r11, $r12, $r14, $r18, $r22, $r24, $r25, r26, r28;
        char $c5;
        java.lang.Object $r10, $r13, $r23;

        r26 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        $r0 = virtualinvoke r26.<java.lang.String: java.lang.String trim()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "\"\"\",";

        $r5[1] = ",\"\"\"";

        $r5[2] = "\"\"";

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "_QUOTE_\",";

        $r6[1] = ",\"_QUOTE_";

        $r6[2] = "_QUOTE_";

        $r7 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replaceList(java.lang.String,java.lang.String[],java.lang.String[])>($r4, $r5, $r6);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        r27 = $r33;

        r28 = "";

        b8 = 0;

        i9 = 0;

     label01:
        if i9 >= $i0 goto label15;

        $c5 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i9);

        tableswitch(b8)
        {
            case 0: goto label06;
            case 1: goto label12;
            case 2: goto label02;
            default: goto label14;
        };

     label02:
        $i10 = (int) $c5;

        if $i10 != 44 goto label03;

        b8 = 0;

        goto label14;

     label03:
        $i11 = (int) $c5;

        if $i11 != 10 goto label14;

        $i6 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label05;

        if z3 != 0 goto label04;

        $r13 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 != 0 goto label04;

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label04:
        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        r27 = $r34;

        r28 = "";

     label05:
        b8 = 0;

        goto label14;

     label06:
        $i12 = (int) $c5;

        if $i12 != 34 goto label07;

        b8 = 1;

        goto label14;

     label07:
        $i13 = (int) $c5;

        if $i13 != 44 goto label08;

        $r25 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r28, "_QUOTE_", "\"");

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        r28 = "";

        goto label14;

     label08:
        $i14 = (int) $c5;

        if $i14 != 10 goto label11;

        $r22 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r28, "_QUOTE_", "\"");

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        r28 = "";

        if z3 == 0 goto label09;

        $i7 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        if $i7 <= 1 goto label10;

     label09:
        $r23 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z2 != 0 goto label10;

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label10:
        z3 = 0;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>()>();

        r27 = $r35;

        goto label14;

     label11:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r28 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label12:
        $i15 = (int) $c5;

        if $i15 != 34 goto label13;

        $r18 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r28, "_QUOTE_", "\"");

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        r28 = "";

        b8 = 2;

        goto label14;

     label13:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r28 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        i9 = i9 + 1;

        goto label01;

     label15:
        $i1 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        if $i1 > 0 goto label16;

        $i4 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i4 <= 0 goto label19;

     label16:
        $i2 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i2 <= 0 goto label17;

        $r12 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r28, "_QUOTE_", "\"");

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label17:
        if z3 == 0 goto label18;

        $i3 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        if $i3 <= 1 goto label19;

     label18:
        $r10 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label19;

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label19:
        return $r32;
    }

    public static final java.lang.String shorten(java.lang.String, int)
    {
        int $i0, i1, $i2;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r1, r4;

        r4 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= i1 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i2 = i1 - 1;

        $r1 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r4;
    }

    public static java.lang.String toString(java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.Object $r3, $r4;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]: ");

        $r3 = r1[i1];

        if $r3 != null goto label2;

        $r4 = "null";

        goto label3;

     label2:
        $r4 = r1[i1];

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.util.List expandIso8601(java.lang.String)
    {
        java.util.Date $r17;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, r4, $r7, $r9, $r11, $r16;
        java.lang.IllegalArgumentException $r12;
        java.util.List $r2, $r5;
        java.lang.Object $r3, $r6, $r8, $r10;
        java.lang.StringBuilder $r13, $r14, $r15;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>(r1, ",", 1, 1);

        i3 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        r4 = (java.lang.String) $r3;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("/");

        if $i1 >= 0 goto label2;

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.util.Date parseIso8601(java.lang.String)>(r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label4;

     label2:
        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>(r4, "/", 1, 1);

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i2 == 3 goto label3;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid date format:");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        staticinvoke <ucar.unidata.util.StringUtil: java.util.Date parseIso8601(java.lang.String)>($r7);

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(1);

        $r9 = (java.lang.String) $r8;

        staticinvoke <ucar.unidata.util.StringUtil: java.util.Date parseIso8601(java.lang.String)>($r9);

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(2);

        $r11 = (java.lang.String) $r10;

        staticinvoke <ucar.unidata.util.StringUtil: long parseTimePeriod(java.lang.String)>($r11);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return $r0;
    }

    private static java.lang.String str(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.String findPattern(java.lang.String, java.lang.String)
    {
        java.util.regex.Matcher $r3;
        int $i0;
        java.lang.String r0, r2, $r4;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r0);

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int groupCount()>();

        if $i0 <= 0 goto label2;

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r4;

     label2:
        return null;
    }

    public static boolean isUpperCase(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isLowerCase(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static java.lang.String camelCase(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r4, $r7;
        java.lang.String r1, $r2, $r3, $r5, $r6, $r8;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.util.Date parseIso8601(java.lang.String)
    {
        java.util.Date $r50;
        java.util.regex.Matcher $r2;
        boolean $z0, $z1;
        java.lang.Exception $r27;
        java.lang.StringBuilder $r3, $r5, $r6, $r22, $r24, $r25, $r28, $r30, $r31, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        java.util.regex.Pattern $r0;
        java.text.SimpleDateFormat $r34;
        int $i0, $i1, i2;
        java.lang.String r1, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r32, r33, $r49;
        java.io.PrintStream $r4, $r23, $r29;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d))?(T(\\d\\d):(\\d\\d)(:(\\d\\d)?)?(.*)?)?");

        $r2 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No match:");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        return null;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        i2 = 1;

     label2:
        $i0 = virtualinvoke $r2.<java.util.regex.Matcher: int groupCount()>();

        if i2 > $i0 goto label3;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r9 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r8, "0000");

        $r10 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r11 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r10, "01");

        $r12 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r13 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r12, "01");

        $r14 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        $r15 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r14, "00");

        $r16 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r16, "00");

        $r18 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        $r19 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r18, "00");

        $r20 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(10);

        $r21 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r20, "GMT");

        r33 = $r21;

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("Z");

        if $z1 != 0 goto label4;

        $i1 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label4:
        r33 = "GMT";

     label5:
        $r34 = new java.text.SimpleDateFormat;

        specialinvoke $r34.<java.text.SimpleDateFormat: void <init>()>();

        virtualinvoke $r34.<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>("yyyy-MM-dd-HH-mm-ss-Z");

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r50 = virtualinvoke $r34.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r49);

     label7:
        return $r50;

     label8:
        $r27 := @caughtexception;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exc:");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);

        return null;

        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static long parseTimePeriod(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6, $r20, $r22, $r24, $r26, $r28, $r29, $r32, $r33, $r34;
        java.util.regex.Pattern $r1;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7;
        int $i0, i8;
        java.lang.String $r0, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r23, $r25, $r30, $r35, r36;
        java.io.PrintStream $r4, $r21, $r27;
        java.lang.IllegalArgumentException $r31;

        r36 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r36.<java.lang.String: boolean startsWith(java.lang.String)>("P");

        if $z0 != 0 goto label1;

        $r31 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown time period:");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label1:
        $r0 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int)>(1);

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T((\\d+)H)?((\\d+)M)?((\\d+)S)?)");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z1 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z1 != 0 goto label2;

        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No match:");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r30);

        return 0L;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        i8 = 1;

     label3:
        $i0 = virtualinvoke $r2.<java.util.regex.Matcher: int groupCount()>();

        if i8 > $i0 goto label4;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r23 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(i8);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

        i8 = i8 + 1;

        goto label3;

     label4:
        $r8 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r9 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r8, "0");

        staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r9);

        $r10 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r11 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r10, "0");

        $l1 = staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r11);

        $r12 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        $r13 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r12, "0");

        staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r13);

        $r14 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        $r15 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r14, "0");

        $l2 = staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r15);

        $r16 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(11);

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r16, "0");

        staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r17);

        $r18 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(13);

        $r19 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String str(java.lang.String,java.lang.String)>($r18, "0");

        $l3 = staticinvoke <ucar.unidata.util.StringUtil: long convert(java.lang.String)>($r19);

        $l5 = $l2 * 3600L;

        $l4 = $l1 * 60L;

        $l6 = $l5 + $l4;

        $l7 = $l6 + $l3;

        return $l7;
    }

    private static long convert(java.lang.String)
    {
        long $l0;
        java.lang.String r1;
        java.lang.Long $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.Long;

        specialinvoke $r0.<java.lang.Long: void <init>(java.lang.String)>(r1);

        $l0 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public static java.util.Hashtable parsePropertiesString(java.lang.String)
    {
        java.util.StringTokenizer $r2;
        int $i0, $i1;
        java.lang.String r1, $r3, $r4, $r5, $r6;
        java.util.Hashtable $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        if r1 == null goto label3;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ";");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("=");

        if $i0 >= 0 goto label2;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i1 = $i0 + 1;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label1;

     label3:
        return $r0;
    }

    public static java.util.Hashtable parseHtmlProperties(java.lang.String)
    {
        java.lang.StringBuilder $r8, $r9, $r13, $r14, $r18, $r19, $r23, $r24, $r28, $r29, $r35, $r36, $r40, $r41, $r45, $r46, $r51, $r52, $r53, $r57, $r58, $r62, $r63, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r10, $r15, $r20, $r25, $r30, $r31, $r32, $r37, $r42, $r47, $r48, $r54, $r59, $r64, r65;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Hashtable $r66;
        java.io.PrintStream $r7, $r12, $r17, $r22, $r27, $r34, $r39, $r44, $r50, $r56, $r61;
        char $c3;

        r65 := @parameter0: java.lang.String;

        $r66 = new java.util.Hashtable;

        specialinvoke $r66.<java.util.Hashtable: void <init>()>();

        if 0 == 0 goto label01;

        $r61 = <java.lang.System: java.io.PrintStream err>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Source:");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r64);

     label01:
        if 0 == 0 goto label02;

        $r56 = <java.lang.System: java.io.PrintStream err>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S:");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r59);

     label02:
        $i0 = virtualinvoke r65.<java.lang.String: int indexOf(java.lang.String)>("=");

        if $i0 >= 0 goto label04;

        $r48 = virtualinvoke r65.<java.lang.String: java.lang.String trim()>();

        $i8 = virtualinvoke $r48.<java.lang.String: int length()>();

        if $i8 <= 0 goto label17;

        if 0 == 0 goto label03;

        $r50 = <java.lang.System: java.io.PrintStream err>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tsingle name:");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r54);

     label03:
        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, "");

        goto label17;

     label04:
        $r1 = virtualinvoke r65.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r65.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label06;

        if 0 == 0 goto label05;

        $r44 = <java.lang.System: java.io.PrintStream err>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tsingle name=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);

     label05:
        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "");

        goto label17;

     label06:
        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $i9 = (int) $c3;

        if $i9 != 34 goto label10;

        $r31 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(1);

        $i6 = virtualinvoke $r31.<java.lang.String: int indexOf(java.lang.String)>("\"");

        if $i6 >= 0 goto label07;

        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r31);

        goto label17;

     label07:
        $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        if 0 == 0 goto label08;

        $r39 = <java.lang.System: java.io.PrintStream err>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tname=");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label08:
        if 0 == 0 goto label09;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tvalue=");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label09:
        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r32);

        $i7 = $i6 + 1;

        r65 = virtualinvoke $r31.<java.lang.String: java.lang.String substring(int)>($i7);

        goto label16;

     label10:
        $i4 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i4 >= 0 goto label13;

        if 0 == 0 goto label11;

        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tname=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label11:
        if 0 == 0 goto label12;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tvalue=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label12:
        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        goto label17;

     label13:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        virtualinvoke $r66.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        if 0 == 0 goto label14;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tname=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label14:
        if 0 == 0 goto label15;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tvalue=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label15:
        $i5 = $i4 + 1;

        r65 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i5);

     label16:
        goto label01;

     label17:
        if 0 == 0 goto label18;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("props:");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label18:
        return $r66;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        java.lang.Object[] $r0;
        java.lang.String[] r3;
        java.lang.String $r2;

        r3 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = " ";

        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String escape(java.lang.String,java.lang.String)>(" ", "");

        $r0[1] = $r2;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("escape(%s) == %s%n", $r0);

        return;
    }

    public static void main2(java.lang.String[])
    {
        java.io.PrintStream $r2;
        java.util.List $r3;
        int $i0, i1;
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = r0[i1];

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List parseIntegerListString(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(" StringUtil escape <string> [okChars]");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(" StringUtil unescape <string>");

        return;
    }

    public static void main1(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r0, $r2, $r4, $r6, $r8, $r10;
        java.lang.String[] r12;
        java.util.List $r1, $r3, $r5, $r7, $r9, $r11;

        r12 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream err>;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>(" single  again \"hello there\" another couple of toks  \"how are you\" I am fine \"and you");

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>("text1 text2");

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r3);

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>("hello");

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.Object)>($r5);

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>("\"hello");

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>($r7);

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r9 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>("\"hello\"");

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r11 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitWithQuotes(java.lang.String)>("hello\"");

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.Object)>($r11);

        return;
    }

    public static void main3(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r6, $r9, $r10, $r12, $r16, $r21, $r22, $r24, $r25;
        boolean $z0, $z1;
        java.io.PrintStream $r4, $r14;
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r23;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        staticinvoke <ucar.unidata.util.StringUtil: void showUsage()>();

        return;

     label1:
        $r1 = r0[0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("escape");

        if $z0 == 0 goto label4;

        $i1 = lengthof r0;

        if $i1 <= 2 goto label2;

        $r25 = r0[2];

        goto label3;

     label2:
        $r25 = "";

     label3:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" escape(");

        $r16 = r0[1];

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")= ");

        $r21 = r0[1];

        $r22 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String escape(java.lang.String,java.lang.String)>($r21, $r25);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r24);

        goto label6;

     label4:
        $r2 = r0[0];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("unescape");

        if $z1 == 0 goto label5;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unescape(");

        $r6 = r0[1];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")= ");

        $r9 = r0[1];

        $r10 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String unescape(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r12);

        goto label6;

     label5:
        staticinvoke <ucar.unidata.util.StringUtil: void showUsage()>();

     label6:
        return;
    }

    public static java.util.List splitMacros(java.lang.String)
    {
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r1, $r2, $r3, r4;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i4 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("${");

     label1:
        if i4 < 0 goto label3;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String,int)>("}", i4);

        if $i1 >= 0 goto label2;

        goto label3;

     label2:
        $r1 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i2 = i4 + 2;

        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i3 = $i1 + 1;

        $r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

        r4 = $r3;

        i4 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("${");

        goto label1;

     label3:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        return $r0;
    }

    public static java.lang.String applyMacros(java.lang.String, java.util.Hashtable, boolean)
    {
        java.lang.StringBuffer $r2;
        int $i0, i1;
        java.lang.String r0, $r3, r5, $r12, $r19, $r20;
        java.util.Hashtable r6;
        boolean z0, z1, $z2;
        java.lang.IllegalArgumentException $r13;
        java.util.List $r1;
        java.lang.Object $r4, $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Hashtable;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List splitMacros(java.lang.String)>(r0);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        z1 = 0;

        i1 = 0;

     label01:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label11;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (java.lang.String) $r4;

        if z1 == 0 goto label07;

        $r7 = virtualinvoke r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        if $r7 == null goto label02;

        $r20 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        goto label03;

     label02:
        $r20 = null;

     label03:
        if $r20 != null goto label05;

        if z0 == 0 goto label04;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined macro: ${");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} in:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r13;

     label04:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("${");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label06;

     label05:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

     label06:
        goto label08;

     label07:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label08:
        if z1 != 0 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z1 = $z2;

        i1 = i1 + 1;

        goto label01;

     label11:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static double[][] parseCoordinates(java.lang.String)
    {
        java.lang.IllegalStateException $r26;
        boolean $z0, $z1;
        java.util.List $r2, $r5;
        java.lang.StringBuilder $r27, $r28, $r29;
        double[][] r24, r25;
        java.lang.Double $r6, $r10, $r14, $r18;
        double[] $r7, $r11, $r15, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, $i20;
        java.lang.String $r0, $r1, r4, $r9, $r13, $r17, $r21, r22, r23, $r30;
        double $d0, $d1, $d2, $d3;
        java.lang.Object $r3, $r8, $r12, $r16, $r20;

        r22 := @parameter0: java.lang.String;

        r23 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r22, "\n", " ");

     label01:
        $r0 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r23, " ,", ",");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z0 == 0 goto label02;

        goto label03;

     label02:
        r23 = $r0;

        goto label01;

     label03:
        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r23, ", ", ",");

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z1 == 0 goto label04;

        goto label05;

     label04:
        r23 = $r1;

        goto label03;

     label05:
        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String,boolean,boolean)>(r23, " ", 1, 1);

        r24 = (double[][]) null;

        i16 = 0;

     label06:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i16 >= $i0 goto label14;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i16);

        r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.util.List split(java.lang.Object,java.lang.String)>(r4, ",");

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 == 2 goto label10;

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i4 == 3 goto label10;

        $i5 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i5 <= 3 goto label09;

        $i6 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i6 != 1 goto label09;

        $i7 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i8 = $i7 / 3;

        $i9 = $i8 * 3;

        $i10 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i9 != $i10 goto label09;

        $i11 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i12 = $i11 / 3;

        r25 = newmultiarray (double)[3][$i12];

        i17 = 0;

        i18 = 0;

     label07:
        $i13 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i18 >= $i13 goto label08;

        $r11 = r25[0];

        $r10 = new java.lang.Double;

        $r12 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i18);

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.Double: void <init>(java.lang.String)>($r13);

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11[i17] = $d1;

        $r15 = r25[1];

        $r14 = new java.lang.Double;

        $i14 = i18 + 1;

        $r16 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i14);

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.Double: void <init>(java.lang.String)>($r17);

        $d2 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15[i17] = $d2;

        $r19 = r25[2];

        $r18 = new java.lang.Double;

        $i15 = i18 + 2;

        $r20 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i15);

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.Double: void <init>(java.lang.String)>($r21);

        $d3 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        $r19[i17] = $d3;

        i17 = i17 + 1;

        i18 = i18 + 3;

        goto label07;

     label08:
        return r25;

     label09:
        $r26 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad number of coordinate values:");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label10:
        if r24 != null goto label11;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        r24 = newmultiarray (double)[$i2][$i3];

     label11:
        i19 = 0;

     label12:
        $i20 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i19 >= $i20 goto label13;

        if i19 >= 3 goto label13;

        $r7 = r24[i19];

        $r6 = new java.lang.Double;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i19);

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Double: void <init>(java.lang.String)>($r9);

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7[i16] = $d0;

        i19 = i19 + 1;

        goto label12;

     label13:
        i16 = i16 + 1;

        goto label06;

     label14:
        return r24;
    }

    public static java.lang.String getAnOrA(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("a");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("e");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("o");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("i");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("u");

        if $z4 == 0 goto label2;

     label1:
        return "an";

     label2:
        return "a";
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r2, $r4, $r6;
        char[] $r1, $r3, $r5;
        java.lang.Object $r7;
        java.util.Hashtable $r8;

        <ucar.unidata.util.StringUtil: boolean debug> = 0;

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "Latest";

        $r0[1] = "Second";

        $r0[2] = "Third";

        $r0[3] = "Fourth";

        $r0[4] = "Fifth";

        $r0[5] = "Sixth";

        $r0[6] = "Seventh";

        $r0[7] = "Eighth";

        $r0[8] = "Ninth";

        $r0[9] = "Tenth";

        <ucar.unidata.util.StringUtil: java.lang.String[] ordinalNames> = $r0;

        $r1 = newarray (char)[6];

        $r1[0] = 38;

        $r1[1] = 34;

        $r1[2] = 39;

        $r1[3] = 60;

        $r1[4] = 62;

        $r1[5] = 10;

        <ucar.unidata.util.StringUtil: char[] htmlIn> = $r1;

        $r2 = newarray (java.lang.String)[6];

        $r2[0] = "&amp;";

        $r2[1] = "&quot;";

        $r2[2] = "&#39;";

        $r2[3] = "&lt;";

        $r2[4] = "&gt;";

        $r2[5] = "\n<p>";

        <ucar.unidata.util.StringUtil: java.lang.String[] htmlOut> = $r2;

        $r3 = newarray (char)[3];

        $r3[0] = 38;

        $r3[1] = 60;

        $r3[2] = 62;

        <ucar.unidata.util.StringUtil: char[] xmlInC> = $r3;

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "&amp;";

        $r4[1] = "&lt;";

        $r4[2] = "&gt;";

        <ucar.unidata.util.StringUtil: java.lang.String[] xmlOutC> = $r4;

        $r5 = newarray (char)[7];

        $r5[0] = 38;

        $r5[1] = 34;

        $r5[2] = 39;

        $r5[3] = 60;

        $r5[4] = 62;

        $r5[5] = 13;

        $r5[6] = 10;

        <ucar.unidata.util.StringUtil: char[] xmlIn> = $r5;

        $r6 = newarray (java.lang.String)[7];

        $r6[0] = "&amp;";

        $r6[1] = "&quot;";

        $r6[2] = "&apos;";

        $r6[3] = "&lt;";

        $r6[4] = "&gt;";

        $r6[5] = "&#13;";

        $r6[6] = "&#10;";

        <ucar.unidata.util.StringUtil: java.lang.String[] xmlOut> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        <ucar.unidata.util.StringUtil: java.lang.Object MATCH_MUTEX> = $r7;

        $r8 = new java.util.Hashtable;

        specialinvoke $r8.<java.util.Hashtable: void <init>()>();

        <ucar.unidata.util.StringUtil: java.util.Hashtable patternCache> = $r8;

        return;
    }
}
