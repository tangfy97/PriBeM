final class kodkod.engine.satlab.SAT4J extends java.lang.Object implements kodkod.engine.satlab.SATSolver
{
    private org.sat4j.specs.ISolver solver;
    private final kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt wrapper;
    private java.lang.Boolean sat;
    private int vars;
    private int clauses;

    void <init>(org.sat4j.specs.ISolver)
    {
        kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt $r2;
        kodkod.engine.satlab.SAT4J r0;
        org.sat4j.specs.ISolver r1;
        java.lang.NullPointerException $r3;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("solver");

        throw $r3;

     label1:
        r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver> = r1;

        $r2 = new kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt;

        specialinvoke $r2.<kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt: void <init>(kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt)>(null);

        r0.<kodkod.engine.satlab.SAT4J: kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt wrapper> = $r2;

        r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat> = null;

        r0.<kodkod.engine.satlab.SAT4J: int clauses> = 0;

        r0.<kodkod.engine.satlab.SAT4J: int vars> = 0;

        return;
    }

    public int numberOfVariables()
    {
        int $i0;
        kodkod.engine.satlab.SAT4J r0;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        $i0 = r0.<kodkod.engine.satlab.SAT4J: int vars>;

        return $i0;
    }

    public int numberOfClauses()
    {
        int $i0;
        kodkod.engine.satlab.SAT4J r0;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        $i0 = r0.<kodkod.engine.satlab.SAT4J: int clauses>;

        return $i0;
    }

    public void addVariables(int)
    {
        kodkod.engine.satlab.SAT4J r0;
        org.sat4j.specs.ISolver $r1;
        java.lang.IllegalArgumentException $r2;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("numVars < 0: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        if i0 <= 0 goto label2;

        $i1 = r0.<kodkod.engine.satlab.SAT4J: int vars>;

        $i2 = $i1 + i0;

        r0.<kodkod.engine.satlab.SAT4J: int vars> = $i2;

        $r1 = r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver>;

        $i3 = r0.<kodkod.engine.satlab.SAT4J: int vars>;

        interfaceinvoke $r1.<org.sat4j.specs.ISolver: int newVar(int)>($i3);

     label2:
        return;
    }

    public boolean addClause(int[])
    {
        org.sat4j.specs.ContradictionException $r7;
        kodkod.engine.satlab.SAT4J r0;
        org.sat4j.specs.ISolver $r5;
        org.sat4j.specs.IVecInt $r6;
        int[] r3;
        kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt $r4;
        int $i0, $i1;
        java.lang.Boolean $r1, $r2, $r8;
        boolean $z0;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        r3 := @parameter0: int[];

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1 = r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        $i0 = r0.<kodkod.engine.satlab.SAT4J: int clauses>;

        $i1 = $i0 + 1;

        r0.<kodkod.engine.satlab.SAT4J: int clauses> = $i1;

        $r5 = r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver>;

        $r4 = r0.<kodkod.engine.satlab.SAT4J: kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt wrapper>;

        $r6 = virtualinvoke $r4.<kodkod.engine.satlab.SAT4J$ReadOnlyIVecInt: org.sat4j.specs.IVecInt wrap(int[])>(r3);

        interfaceinvoke $r5.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r6);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat> = $r8;

     label4:
        return 0;

        catch org.sat4j.specs.ContradictionException from label1 to label2 with label3;
    }

    public boolean solve()
    {
        kodkod.engine.satlab.SAT4J r0;
        org.sat4j.specs.ISolver $r4;
        java.lang.RuntimeException $r7;
        java.lang.Boolean $r1, $r2, $r3, $r5;
        org.sat4j.specs.TimeoutException $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: kodkod.engine.satlab.SAT4J;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1 = r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver>;

        $z2 = interfaceinvoke $r4.<org.sat4j.specs.ISolver: boolean isSatisfiable()>();

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat> = $r5;

     label2:
        $r3 = r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat>;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return $z1;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("timed out");

        throw $r7;

        catch org.sat4j.specs.TimeoutException from label1 to label3 with label4;
    }

    public final boolean valueOf(int)
    {
        java.lang.IllegalStateException $r11;
        kodkod.engine.satlab.SAT4J r0;
        org.sat4j.specs.ISolver $r10;
        int i0, $i1, $i2;
        java.lang.Boolean $r1, $r2;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        i0 := @parameter0: int;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = r0.<kodkod.engine.satlab.SAT4J: java.lang.Boolean sat>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        if i0 < 1 goto label2;

        $i2 = r0.<kodkod.engine.satlab.SAT4J: int vars>;

        if i0 <= $i2 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !in [1..");

        $i1 = r0.<kodkod.engine.satlab.SAT4J: int vars>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label3:
        $r10 = r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver>;

        $z1 = interfaceinvoke $r10.<org.sat4j.specs.ISolver: boolean model(int)>(i0);

        return $z1;
    }

    public final synchronized void free()
    {
        kodkod.engine.satlab.SAT4J r0;

        r0 := @this: kodkod.engine.satlab.SAT4J;

        r0.<kodkod.engine.satlab.SAT4J: org.sat4j.specs.ISolver solver> = null;

        return;
    }

    public static void main(java.lang.String[])
    {
        kodkod.engine.satlab.SATFactory $r0;
        java.io.PrintStream $r4;
        kodkod.engine.satlab.SAT4J r2;
        java.lang.String[] r5;
        int[] $r3;
        int $i1;
        kodkod.engine.satlab.SATSolver $r1;
        boolean $z0;

        r5 := @parameter0: java.lang.String[];

        $r0 = <kodkod.engine.satlab.SATFactory: kodkod.engine.satlab.SATFactory DefaultSAT4J>;

        $r1 = virtualinvoke $r0.<kodkod.engine.satlab.SATFactory: kodkod.engine.satlab.SATSolver instance()>();

        r2 = (kodkod.engine.satlab.SAT4J) $r1;

        virtualinvoke r2.<kodkod.engine.satlab.SAT4J: void addVariables(int)>(1);

        $r3 = newarray (int)[1];

        $r3[0] = 1;

        virtualinvoke r2.<kodkod.engine.satlab.SAT4J: boolean addClause(int[])>($r3);

        $i1 = (int) -1;

        $r3[0] = $i1;

        virtualinvoke r2.<kodkod.engine.satlab.SAT4J: boolean addClause(int[])>($r3);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $z0 = virtualinvoke r2.<kodkod.engine.satlab.SAT4J: boolean solve()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(boolean)>($z0);

        return;
    }
}
