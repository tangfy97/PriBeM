public class org.apache.batik.css.engine.value.svg.FillRuleManager extends org.apache.batik.css.engine.value.IdentifierManager
{
    protected static final org.apache.batik.css.engine.value.StringMap values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.IdentifierManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        return 1;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        return 15;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        return "fill-rule";
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.svg.FillRuleManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        $r0 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value NONZERO_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.StringMap getIdentifiers()
    {
        org.apache.batik.css.engine.value.StringMap $r0;
        org.apache.batik.css.engine.value.svg.FillRuleManager r1;

        r1 := @this: org.apache.batik.css.engine.value.svg.FillRuleManager;

        $r0 = <org.apache.batik.css.engine.value.svg.FillRuleManager: org.apache.batik.css.engine.value.StringMap values>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.value.StringMap $r0, $r2, $r4;
        org.apache.batik.css.engine.value.Value $r1, $r3;

        $r0 = new org.apache.batik.css.engine.value.StringMap;

        specialinvoke $r0.<org.apache.batik.css.engine.value.StringMap: void <init>()>();

        <org.apache.batik.css.engine.value.svg.FillRuleManager: org.apache.batik.css.engine.value.StringMap values> = $r0;

        $r2 = <org.apache.batik.css.engine.value.svg.FillRuleManager: org.apache.batik.css.engine.value.StringMap values>;

        $r1 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value EVENODD_VALUE>;

        virtualinvoke $r2.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("evenodd", $r1);

        $r4 = <org.apache.batik.css.engine.value.svg.FillRuleManager: org.apache.batik.css.engine.value.StringMap values>;

        $r3 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value NONZERO_VALUE>;

        virtualinvoke $r4.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("nonzero", $r3);

        return;
    }
}
