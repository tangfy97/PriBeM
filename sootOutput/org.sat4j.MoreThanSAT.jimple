public final class org.sat4j.MoreThanSAT extends java.lang.Object
{

    private void <init>()
    {
        org.sat4j.MoreThanSAT r0;

        r0 := @this: org.sat4j.MoreThanSAT;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        org.sat4j.tools.SolutionCounter $r1;
        int[] $r10;
        boolean $z0;
        java.io.PrintWriter $r11;
        org.sat4j.reader.ParseFormatException $r35;
        java.io.FileNotFoundException $r36;
        java.lang.StringBuilder $r14, $r17, $r18, $r22, $r25, $r26;
        org.sat4j.specs.TimeoutException $r28;
        org.sat4j.reader.InstanceReader $r2;
        org.sat4j.specs.ISolver $r0;
        java.lang.String[] r3;
        long $l0;
        java.lang.String $r4, $r7, $r9, $r16, $r19, $r21, $r24, $r27, $r30, $r33;
        java.io.PrintStream $r6, $r8, $r12, $r15, $r20, $r23, $r29, $r32;
        org.sat4j.specs.ContradictionException $r31;
        org.sat4j.specs.IVecInt $r13;
        java.io.IOException $r34;
        org.sat4j.specs.IProblem $r5;

        r3 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <org.sat4j.minisat.SolverFactory: org.sat4j.specs.ISolver newDefault()>();

        $r1 = new org.sat4j.tools.SolutionCounter;

        specialinvoke $r1.<org.sat4j.tools.SolutionCounter: void <init>(org.sat4j.specs.ISolver)>($r0);

        interfaceinvoke $r0.<org.sat4j.specs.ISolver: void setTimeout(int)>(3600);

        $r2 = new org.sat4j.reader.InstanceReader;

        specialinvoke $r2.<org.sat4j.reader.InstanceReader: void <init>(org.sat4j.specs.ISolver)>($r0);

     label1:
        $r4 = r3[0];

        $r5 = virtualinvoke $r2.<org.sat4j.reader.Reader: org.sat4j.specs.IProblem parseInstance(java.lang.String)>($r4);

        $z0 = interfaceinvoke $r5.<org.sat4j.specs.IProblem: boolean isSatisfiable()>();

        if $z0 == 0 goto label2;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.0");

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = interfaceinvoke $r5.<org.sat4j.specs.IProblem: int[] model()>();

        $r11 = new java.io.PrintWriter;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r12);

        virtualinvoke $r2.<org.sat4j.reader.Reader: void decode(int[],java.io.PrintWriter)>($r10, $r11);

        $r13 = staticinvoke <org.sat4j.tools.RemiUtils: org.sat4j.specs.IVecInt backbone(org.sat4j.specs.ISolver)>($r0);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.1");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r21 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.2");

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.3");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $l0 = virtualinvoke $r1.<org.sat4j.tools.SolutionCounter: long countSolutions()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

        goto label3;

     label2:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.4");

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label3:
        goto label9;

     label4:
        $r36 := @caughtexception;

        virtualinvoke $r36.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label9;

     label5:
        $r35 := @caughtexception;

        virtualinvoke $r35.<org.sat4j.reader.ParseFormatException: void printStackTrace()>();

        goto label9;

     label6:
        $r34 := @caughtexception;

        virtualinvoke $r34.<java.io.IOException: void printStackTrace()>();

        goto label9;

     label7:
        $r31 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r33 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.5");

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r33);

        goto label9;

     label8:
        $r28 := @caughtexception;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r30 = staticinvoke <org.sat4j.Messages: java.lang.String getString(java.lang.String)>("MoreThanSAT.6");

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label9:
        return;

        catch java.io.FileNotFoundException from label1 to label3 with label4;
        catch org.sat4j.reader.ParseFormatException from label1 to label3 with label5;
        catch java.io.IOException from label1 to label3 with label6;
        catch org.sat4j.specs.ContradictionException from label1 to label3 with label7;
        catch org.sat4j.specs.TimeoutException from label1 to label3 with label8;
    }
}
