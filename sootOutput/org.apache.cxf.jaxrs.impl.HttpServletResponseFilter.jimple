public class org.apache.cxf.jaxrs.impl.HttpServletResponseFilter extends javax.servlet.http.HttpServletResponseWrapper
{
    private org.apache.cxf.message.Message m;

    public void <init>(javax.servlet.http.HttpServletResponse, org.apache.cxf.message.Message)
    {
        javax.servlet.http.HttpServletResponse r1;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter r0;
        org.apache.cxf.message.Message r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        r1 := @parameter0: javax.servlet.http.HttpServletResponse;

        r2 := @parameter1: org.apache.cxf.message.Message;

        specialinvoke r0.<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>(r1);

        r0.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: org.apache.cxf.message.Message m> = r2;

        return;
    }

    public void setStatus(int)
    {
        org.apache.cxf.message.Message $r1;
        int i0;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter r0;
        java.lang.String $r3;
        org.apache.cxf.message.Exchange $r2;
        java.lang.Integer $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>(i0);

        $r1 = r0.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: org.apache.cxf.message.Message m>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public void setContentType(java.lang.String)
    {
        org.apache.cxf.message.Message $r2;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter r0;
        java.lang.String r1;
        org.apache.cxf.message.Exchange $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.servlet.http.HttpServletResponseWrapper: void setContentType(java.lang.String)>(r1);

        $r2 = r0.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: org.apache.cxf.message.Message m>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r3.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", r1);

        return;
    }

    public void addHeader(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, r3;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter r2;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = "Content-Type";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: void setContentType(java.lang.String)>(r3);

        goto label2;

     label1:
        specialinvoke r2.<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>(r0, r3);

     label2:
        return;
    }

    public javax.servlet.ServletOutputStream getOutputStream() throws java.io.IOException
    {
        javax.servlet.ServletOutputStream $r2;
        org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter $r0;
        org.apache.cxf.message.Message $r3;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter r1;

        r1 := @this: org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        $r0 = new org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter;

        $r2 = specialinvoke r1.<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.ServletOutputStream getOutputStream()>();

        $r3 = r1.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: org.apache.cxf.message.Message m>;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter: void <init>(javax.servlet.ServletOutputStream,org.apache.cxf.message.Message)>($r2, $r3);

        return $r0;
    }
}
