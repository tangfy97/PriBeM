public class org.waveprotocol.wave.model.document.operation.LocationModifier extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    private int mutatingLocation;
    private int scanPoint;

    public void <init>(int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint> = 0;

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation> = i0;

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        int i0, $i1, $i2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        i0 := @parameter0: int;

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint>;

        $i2 = $i1 + i0;

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint> = $i2;

        return;
    }

    public void characters(java.lang.String)
    {
        int $i0;
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void insert(int)>($i0);

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void insert(int)>(1);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void insert(int)>(1);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        int $i0;
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void delete(int)>($i0);

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void delete(int)>(1);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void delete(int)>(1);

        return;
    }

    private void insert(int)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        i2 := @parameter0: int;

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint>;

        $i0 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation>;

        if $i1 >= $i0 goto label1;

        $i3 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation>;

        $i4 = $i3 + i2;

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation> = $i4;

        $i5 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint>;

        $i6 = $i5 + i2;

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint> = $i6;

     label1:
        return;
    }

    private void delete(int)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        i2 := @parameter0: int;

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint>;

        $i0 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation>;

        if $i1 > $i0 goto label1;

        $i5 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int scanPoint>;

        $i3 = r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation>;

        $i4 = $i3 - i2;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation> = $i6;

     label1:
        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void retain(int)>(1);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void retain(int)>(1);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        org.waveprotocol.wave.model.document.operation.LocationModifier r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.LocationModifier;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        return;
    }

    public static int transformLocation(org.waveprotocol.wave.model.document.operation.DocOp, int)
    {
        org.waveprotocol.wave.model.document.operation.LocationModifier $r0;
        int i0, $i1;
        org.waveprotocol.wave.model.document.operation.DocOp r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        i0 := @parameter1: int;

        $r0 = new org.waveprotocol.wave.model.document.operation.LocationModifier;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: void <init>(int)>(i0);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r0);

        $i1 = $r0.<org.waveprotocol.wave.model.document.operation.LocationModifier: int mutatingLocation>;

        return $i1;
    }
}
