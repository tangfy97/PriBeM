public class com.spatial4j.core.io.GeohashUtils extends java.lang.Object
{
    private static final char[] BASE_32;
    private static final int[] BASE_32_IDX;
    public static final int MAX_PRECISION;
    private static final int[] BITS;
    private static final double[] hashLenToLatHeight;
    private static final double[] hashLenToLonWidth;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        com.spatial4j.core.io.GeohashUtils r0;

        r0 := @this: com.spatial4j.core.io.GeohashUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String encodeLatLon(double, double)
    {
        java.lang.String $r0;
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = staticinvoke <com.spatial4j.core.io.GeohashUtils: java.lang.String encodeLatLon(double,double,int)>(d0, d1, 12);

        return $r0;
    }

    public static java.lang.String encodeLatLon(double, double, int)
    {
        double[] $r0, $r1;
        byte $b2, $b5;
        int[] $r5, $r6;
        int i0, $i1, $i4, $i6, i7, i8, $i9, $i10;
        java.lang.String $r3;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7, d8, d9;
        boolean z0, $z1;
        char $c3;
        char[] $r4;
        java.lang.StringBuilder $r7;

        d3 := @parameter0: double;

        d7 := @parameter1: double;

        i0 := @parameter2: int;

        $r0 = newarray (double)[2];

        $r0[0] = -90.0;

        $r0[1] = 90.0;

        $r1 = newarray (double)[2];

        $r1[0] = -180.0;

        $r1[1] = 180.0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(i0);

        z0 = 1;

        i7 = 0;

        i8 = 0;

     label01:
        $i1 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        if $i1 >= i0 goto label10;

        if z0 == 0 goto label03;

        $d5 = $r1[0];

        $d4 = $r1[1];

        $d6 = $d5 + $d4;

        d8 = $d6 / 2.0;

        $b5 = d7 cmpl d8;

        $i9 = (int) $b5;

        if $i9 <= 0 goto label02;

        $r6 = <com.spatial4j.core.io.GeohashUtils: int[] BITS>;

        $i6 = $r6[i7];

        i8 = i8 | $i6;

        $r1[0] = d8;

        goto label05;

     label02:
        $r1[1] = d8;

        goto label05;

     label03:
        $d1 = $r0[0];

        $d0 = $r0[1];

        $d2 = $d1 + $d0;

        d9 = $d2 / 2.0;

        $b2 = d3 cmpl d9;

        $i10 = (int) $b2;

        if $i10 <= 0 goto label04;

        $r5 = <com.spatial4j.core.io.GeohashUtils: int[] BITS>;

        $i4 = $r5[i7];

        i8 = i8 | $i4;

        $r0[0] = d9;

        goto label05;

     label04:
        $r0[1] = d9;

     label05:
        if z0 != 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        z0 = $z1;

        if i7 >= 4 goto label08;

        i7 = i7 + 1;

        goto label09;

     label08:
        $r4 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $c3 = $r4[i8];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i7 = 0;

        i8 = 0;

     label09:
        goto label01;

     label10:
        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static com.spatial4j.core.shape.Point decode(java.lang.String, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.shape.Rectangle $r2;
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.shape.Point $r3;
        java.lang.String r0;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.spatial4j.core.context.SpatialContext;

        $r2 = staticinvoke <com.spatial4j.core.io.GeohashUtils: com.spatial4j.core.shape.Rectangle decodeBoundary(java.lang.String,com.spatial4j.core.context.SpatialContext)>(r0, r1);

        $d0 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $d1 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $d2 = $d0 + $d1;

        d3 = $d2 / 2.0;

        $d4 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $d5 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $d6 = $d4 + $d5;

        d7 = $d6 / 2.0;

        $r3 = virtualinvoke r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>(d7, d3);

        return $r3;
    }

    public static com.spatial4j.core.shape.Rectangle decodeBoundary(java.lang.String, com.spatial4j.core.context.SpatialContext)
    {
        int[] $r3, $r5;
        boolean z0, $z1;
        com.spatial4j.core.shape.Rectangle $r2;
        com.spatial4j.core.context.SpatialContext r1;
        int $i0, i2, $i3, $i4, $i5, i6, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String r0;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7;
        char $c1, c7, $c8;
        char[] $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.spatial4j.core.context.SpatialContext;

        d4 = -90.0;

        d5 = 90.0;

        d6 = -180.0;

        d7 = 180.0;

        z0 = 1;

        i6 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label11;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        c7 = $c1;

        $i13 = (int) $c1;

        if $i13 < 65 goto label02;

        $i14 = (int) $c1;

        if $i14 > 90 goto label02;

        $i15 = (int) $c1;

        $i5 = $i15 + 32;

        c7 = (char) $i5;

     label02:
        $r3 = <com.spatial4j.core.io.GeohashUtils: int[] BASE_32_IDX>;

        $r4 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $c8 = $r4[0];

        $i16 = (int) c7;

        $i17 = (int) $c8;

        $i9 = $i16 - $i17;

        $i10 = $r3[$i9];

        $r5 = <com.spatial4j.core.io.GeohashUtils: int[] BITS>;

        $i11 = lengthof $r5;

        i12 = 0;

     label03:
        if i12 >= $i11 goto label10;

        i2 = $r5[i12];

        if z0 == 0 goto label05;

        $i4 = $i10 & i2;

        if $i4 == 0 goto label04;

        $d3 = d6 + d7;

        d6 = $d3 / 2.0;

        goto label07;

     label04:
        $d2 = d6 + d7;

        d7 = $d2 / 2.0;

        goto label07;

     label05:
        $i3 = $i10 & i2;

        if $i3 == 0 goto label06;

        $d1 = d4 + d5;

        d4 = $d1 / 2.0;

        goto label07;

     label06:
        $d0 = d4 + d5;

        d5 = $d0 / 2.0;

     label07:
        if z0 != 0 goto label08;

        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        z0 = $z1;

        i12 = i12 + 1;

        goto label03;

     label10:
        i6 = i6 + 1;

        goto label01;

     label11:
        $r2 = virtualinvoke r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>(d6, d7, d4, d5);

        return $r2;
    }

    public static java.lang.String[] getSubGeohashes(java.lang.String)
    {
        java.lang.String[] r1;
        char c2;
        int $i0, $i1, i3;
        char[] $r0, $r2, $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String r5, $r8;

        r5 := @parameter0: java.lang.String;

        $r0 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $i0 = lengthof $r0;

        r1 = newarray (java.lang.String)[$i0];

        i3 = 0;

     label1:
        $r2 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $i1 = lengthof $r2;

        if i3 >= $i1 goto label2;

        $r3 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        c2 = $r3[i3];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[i3] = $r8;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static double[] lookupDegreesSizeForHashLen(int)
    {
        double[] $r0, $r1, $r2;
        int i0;
        double $d0, $d1;

        i0 := @parameter0: int;

        $r0 = newarray (double)[2];

        $r1 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight>;

        $d0 = $r1[i0];

        $r0[0] = $d0;

        $r2 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth>;

        $d1 = $r2[i0];

        $r0[1] = $d1;

        return $r0;
    }

    public static int lookupHashLenForWidthHeight(double, double)
    {
        double[] $r0, $r1;
        byte $b0, $b1;
        int i2, $i3, $i4;
        double d0, d1, d2, d3;

        d3 := @parameter0: double;

        d2 := @parameter1: double;

        i2 = 1;

     label1:
        if i2 >= 24 goto label3;

        $r0 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight>;

        d0 = $r0[i2];

        $r1 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth>;

        d1 = $r1[i2];

        $b0 = d0 cmpg d2;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label2;

        $b1 = d1 cmpg d3;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 24;
    }

    static void <clinit>()
    {
        byte $b17, $b18;
        int[] $r2, $r6, $r7, $r18, $r19;
        boolean $z0, $z1, $z2, z3, $z4;
        double[] $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.AssertionError $r22;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, i14, $i15, i16, $i19, $i20, $i22, $i23, $i24;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        char $c2, $c3, $c10, $c11;
        char[] $r1, $r3, $r4, $r5, $r16, $r17, $r21;
        java.lang.Class $r0;

        <com.spatial4j.core.io.GeohashUtils: int MAX_PRECISION> = 24;

        $r0 = class "Lcom/spatial4j/core/io/GeohashUtils;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        <com.spatial4j.core.io.GeohashUtils: boolean $assertionsDisabled> = $z2;

        $r1 = newarray (char)[32];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 98;

        $r1[11] = 99;

        $r1[12] = 100;

        $r1[13] = 101;

        $r1[14] = 102;

        $r1[15] = 103;

        $r1[16] = 104;

        $r1[17] = 106;

        $r1[18] = 107;

        $r1[19] = 109;

        $r1[20] = 110;

        $r1[21] = 112;

        $r1[22] = 113;

        $r1[23] = 114;

        $r1[24] = 115;

        $r1[25] = 116;

        $r1[26] = 117;

        $r1[27] = 118;

        $r1[28] = 119;

        $r1[29] = 120;

        $r1[30] = 121;

        $r1[31] = 122;

        <com.spatial4j.core.io.GeohashUtils: char[] BASE_32> = $r1;

        $r2 = newarray (int)[5];

        $r2[0] = 16;

        $r2[1] = 8;

        $r2[2] = 4;

        $r2[3] = 2;

        $r2[4] = 1;

        <com.spatial4j.core.io.GeohashUtils: int[] BITS> = $r2;

        $r4 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $r3 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        $c3 = $r4[$i1];

        $r5 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $c2 = $r5[0];

        $i19 = (int) $c3;

        $i20 = (int) $c2;

        $i4 = $i19 - $i20;

        $i5 = $i4 + 1;

        $r6 = newarray (int)[$i5];

        <com.spatial4j.core.io.GeohashUtils: int[] BASE_32_IDX> = $r6;

        $z1 = <com.spatial4j.core.io.GeohashUtils: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r19 = <com.spatial4j.core.io.GeohashUtils: int[] BASE_32_IDX>;

        $i13 = lengthof $r19;

        if $i13 < 100 goto label03;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label03:
        $r7 = <com.spatial4j.core.io.GeohashUtils: int[] BASE_32_IDX>;

        $i22 = (int) -500;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r7, $i22);

        i14 = 0;

     label04:
        $r21 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $i15 = lengthof $r21;

        if i14 >= $i15 goto label05;

        $r18 = <com.spatial4j.core.io.GeohashUtils: int[] BASE_32_IDX>;

        $r16 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $c11 = $r16[i14];

        $r17 = <com.spatial4j.core.io.GeohashUtils: char[] BASE_32>;

        $c10 = $r17[0];

        $i23 = (int) $c11;

        $i24 = (int) $c10;

        $i12 = $i23 - $i24;

        $r18[$i12] = i14;

        i14 = i14 + 1;

        goto label04;

     label05:
        $r8 = newarray (double)[25];

        <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight> = $r8;

        $r9 = newarray (double)[25];

        <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth> = $r9;

        $r10 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight>;

        $r10[0] = 180.0;

        $r11 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth>;

        $r11[0] = 360.0;

        z3 = 0;

        i16 = 1;

     label06:
        if i16 > 24 goto label13;

        $r13 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight>;

        $i9 = i16;

        $r12 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLatHeight>;

        $i6 = i16 - 1;

        $d1 = $r12[$i6];

        if z3 == 0 goto label07;

        $b17 = 8;

        goto label08;

     label07:
        $b17 = 4;

     label08:
        $d0 = (double) $b17;

        $d2 = $d1 / $d0;

        $r13[$i9] = $d2;

        $r15 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth>;

        $i8 = i16;

        $r14 = <com.spatial4j.core.io.GeohashUtils: double[] hashLenToLonWidth>;

        $i7 = i16 - 1;

        $d4 = $r14[$i7];

        if z3 == 0 goto label09;

        $b18 = 4;

        goto label10;

     label09:
        $b18 = 8;

     label10:
        $d3 = (double) $b18;

        $d5 = $d4 / $d3;

        $r15[$i8] = $d5;

        if z3 != 0 goto label11;

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        z3 = $z4;

        i16 = i16 + 1;

        goto label06;

     label13:
        return;
    }
}
