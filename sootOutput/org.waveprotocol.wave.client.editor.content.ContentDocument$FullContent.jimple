public class org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent extends org.waveprotocol.wave.model.document.util.IdentityView implements org.waveprotocol.wave.client.editor.content.ContentView, org.waveprotocol.wave.model.document.util.LocalDocument
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument, org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.model.document.ReadableDocument r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r2 := @parameter1: org.waveprotocol.wave.model.document.ReadableDocument;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.IdentityView: void <init>(org.waveprotocol.wave.model.document.ReadableDocument)>(r2);

        return;
    }

    public void transparentSetAttribute(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r3;
        java.lang.String r4, r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void transparentSetAttribute(java.lang.Object,java.lang.String,java.lang.String)>(r3, r4, r5);

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement transparentCreate(java.lang.String, java.util.Map, org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        java.lang.Throwable $r13;
        org.waveprotocol.wave.client.editor.content.ContentNode r8;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r11, $r14;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r12, $r15;
        java.util.Map r6;
        org.waveprotocol.wave.client.editor.content.ContentElement r7, r10;
        java.lang.String r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object $r9;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Map;

        r7 := @parameter2: org.waveprotocol.wave.client.editor.content.ContentElement;

        r8 := @parameter3: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        $r9 = virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: java.lang.Object transparentCreate(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>(r5, r6, r7, r8);

        r10 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r9;

     label2:
        $r11 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r12 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r11);

        virtualinvoke $r12.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        return r10;

     label3:
        $r13 := @caughtexception;

     label4:
        $r14 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r15 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r14);

        virtualinvoke $r15.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.waveprotocol.wave.client.editor.content.ContentTextNode transparentCreate(java.lang.String, org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        java.lang.Throwable $r12;
        org.waveprotocol.wave.client.editor.content.ContentNode r7;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r10, $r13;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r11, $r14;
        org.waveprotocol.wave.client.editor.content.ContentTextNode r9;
        org.waveprotocol.wave.client.editor.content.ContentElement r6;
        java.lang.Object $r8;
        java.lang.String r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        r7 := @parameter2: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        $r8 = virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: java.lang.Object transparentCreate(java.lang.String,java.lang.Object,java.lang.Object)>(r5, r6, r7);

        r9 = (org.waveprotocol.wave.client.editor.content.ContentTextNode) $r8;

     label2:
        $r10 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r11 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r10);

        virtualinvoke $r11.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        return r9;

     label3:
        $r12 := @caughtexception;

     label4:
        $r13 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r14 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r13);

        virtualinvoke $r14.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void transparentMove(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        java.lang.Throwable $r11;
        org.waveprotocol.wave.client.editor.content.ContentNode r6, r7, r8;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r9, $r12;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r10, $r13;
        org.waveprotocol.wave.client.editor.content.ContentElement r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r6 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        r7 := @parameter2: org.waveprotocol.wave.client.editor.content.ContentNode;

        r8 := @parameter3: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void transparentMove(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r5, r6, r7, r8);

     label2:
        $r9 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r9);

        virtualinvoke $r10.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        goto label5;

     label3:
        $r11 := @caughtexception;

     label4:
        $r12 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r13 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r12);

        virtualinvoke $r13.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r11;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void transparentUnwrap(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        java.lang.Throwable $r8;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r6, $r9;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r7, $r10;
        org.waveprotocol.wave.client.editor.content.ContentElement r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void transparentUnwrap(java.lang.Object)>(r5);

     label2:
        $r6 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r6);

        virtualinvoke $r7.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r9);

        virtualinvoke $r10.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void transparentDeepRemove(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        java.lang.Throwable $r8;
        org.waveprotocol.wave.client.editor.content.ContentNode r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r6, $r9;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r7, $r10;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void transparentDeepRemove(java.lang.Object)>(r5);

     label2:
        $r6 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r6);

        virtualinvoke $r7.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r9);

        virtualinvoke $r10.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.model.document.util.Property r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r4;
        java.lang.Object $r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r4 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $r5 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property,java.lang.Object)>(r3, r4);

        return $r5;
    }

    public boolean isDestroyed(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: boolean isDestroyed(java.lang.Object)>(r3);

        return $z0;
    }

    public void setProperty(org.waveprotocol.wave.model.document.util.Property, org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.model.document.util.Property r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r4;
        java.lang.Object r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r4 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        r5 := @parameter2: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void setProperty(org.waveprotocol.wave.model.document.util.Property,java.lang.Object,java.lang.Object)>(r3, r4, r5);

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode transparentSlice(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r3, $r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object $r4;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: java.lang.Object transparentSlice(java.lang.Object)>(r3);

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentNode) $r4;

        return $r5;
    }

    public void onBeforeFilter(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.model.document.util.Point r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void onBeforeFilter(org.waveprotocol.wave.model.document.util.Point)>(r3);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r2;
        java.lang.StringBuilder $r0, $r1, $r6;
        java.lang.Object $r3;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;
        java.lang.String $r5, $r7;

        r2 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FullContentView: ");

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: java.lang.Object getDocumentElement()>();

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r3;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void markNodeForPersistence(org.waveprotocol.wave.client.editor.content.ContentNode, boolean)
    {
        java.lang.Throwable $r8;
        org.waveprotocol.wave.client.editor.content.ContentNode r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3, $r6, $r9;
        org.waveprotocol.wave.client.editor.content.SelectionMaintainer $r2, $r7, $r10;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r4;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r5 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void saveSelection()>();

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: void markNodeForPersistence(org.waveprotocol.wave.client.editor.content.ContentNode,boolean)>(r5, z0);

     label2:
        $r6 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r6);

        virtualinvoke $r7.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.SelectionMaintainer access$1800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r9);

        virtualinvoke $r10.<org.waveprotocol.wave.client.editor.content.SelectionMaintainer: void restoreSelection()>();

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isTransparent(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc access$1100(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$PersistentContentDoc: boolean isTransparent(java.lang.Object)>(r3);

        return $z0;
    }

    public volatile boolean isTransparent(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: boolean isTransparent(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $z0;
    }

    public volatile void markNodeForPersistence(java.lang.Object, boolean)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void markNodeForPersistence(org.waveprotocol.wave.client.editor.content.ContentNode,boolean)>($r2, z0);

        return;
    }

    public volatile java.lang.Object transparentSlice(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentNode transparentSlice(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile void transparentDeepRemove(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void transparentDeepRemove(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return;
    }

    public volatile void transparentMove(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r5, $r6, $r7;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1, r2, r3, r4;
        org.waveprotocol.wave.client.editor.content.ContentElement $r8;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r8 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r7 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        $r6 = (org.waveprotocol.wave.client.editor.content.ContentNode) r3;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentNode) r4;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void transparentMove(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode,org.waveprotocol.wave.client.editor.content.ContentNode,org.waveprotocol.wave.client.editor.content.ContentNode)>($r8, $r7, $r6, $r5);

        return;
    }

    public volatile void transparentUnwrap(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void transparentUnwrap(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    public volatile java.lang.Object transparentCreate(java.lang.String, java.util.Map, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.util.Map r2;
        java.lang.Object r3, r4;
        org.waveprotocol.wave.client.editor.content.ContentElement $r6, $r7;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = (org.waveprotocol.wave.client.editor.content.ContentElement) r3;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentNode) r4;

        $r7 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentElement transparentCreate(java.lang.String,java.util.Map,org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>(r1, r2, $r6, $r5);

        return $r7;
    }

    public volatile java.lang.Object transparentCreate(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r4;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r6;
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r2, r3;
        org.waveprotocol.wave.client.editor.content.ContentElement $r5;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentNode) r3;

        $r6 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: org.waveprotocol.wave.client.editor.content.ContentTextNode transparentCreate(java.lang.String,org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>(r1, $r5, $r4);

        return $r6;
    }

    public volatile void transparentSetAttribute(java.lang.Object, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void transparentSetAttribute(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,java.lang.String)>($r4, r2, r3);

        return;
    }

    public volatile boolean isDestroyed(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: boolean isDestroyed(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return $z0;
    }

    public volatile void setProperty(org.waveprotocol.wave.model.document.util.Property, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.model.document.util.Property r1;
        java.lang.Object r2, r3;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: void setProperty(org.waveprotocol.wave.model.document.util.Property,org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.Object)>(r1, $r4, r3);

        return;
    }

    public volatile java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent r0;
        org.waveprotocol.wave.model.document.util.Property r1;
        java.lang.Object r2, $r4;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Property;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$FullContent: java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property,org.waveprotocol.wave.client.editor.content.ContentElement)>(r1, $r3);

        return $r4;
    }
}
