public class com.hp.hpl.jena.util.MonitorGraph extends com.hp.hpl.jena.graph.impl.WrappedGraph
{
    protected java.util.Set snapshot;

    public void <init>(com.hp.hpl.jena.graph.Graph)
    {
        java.util.HashSet $r2;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.util.MonitorGraph r0;

        r0 := @this: com.hp.hpl.jena.util.MonitorGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.WrappedGraph: void <init>(com.hp.hpl.jena.graph.Graph)>(r1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.util.MonitorGraph: java.util.Set snapshot> = $r2;

        return;
    }

    public void snapshot(java.util.List, java.util.List)
    {
        com.hp.hpl.jena.graph.Node $r7, $r8, $r9, $r13, $r14, $r15;
        boolean $z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r12, $r18, $r24, $r25;
        com.hp.hpl.jena.util.MonitorGraph r0;
        com.hp.hpl.jena.graph.Triple r23;
        java.util.List r2, r3, r4, r5, $r26, $r27;
        java.util.ArrayList $r29, $r30;
        java.util.HashSet r6, $r28, $r31;
        com.hp.hpl.jena.graph.Graph $r10, $r16;
        com.hp.hpl.jena.graph.GraphEventManager $r1, $r20, $r21;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r11, $r17;
        java.lang.Object $r19, $r22;

        r0 := @this: com.hp.hpl.jena.util.MonitorGraph;

        r2 := @parameter0: java.util.List;

        r4 := @parameter1: java.util.List;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.util.MonitorGraph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.GraphEventManager: boolean listening()>();

        if $z0 != 0 goto label01;

        if r2 == null goto label02;

     label01:
        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z1 = $z4;

        if $z0 != 0 goto label04;

        if r4 == null goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z2 = $z5;

        if r2 == null goto label07;

        $r26 = r2;

        goto label08;

     label07:
        $r29 = new java.util.ArrayList;

        $r26 = $r29;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

     label08:
        r3 = $r26;

        if r4 == null goto label09;

        $r27 = r4;

        goto label10;

     label09:
        $r30 = new java.util.ArrayList;

        $r27 = $r30;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

     label10:
        r5 = $r27;

        if z2 == 0 goto label11;

        $r31 = new java.util.HashSet;

        $r28 = $r31;

        specialinvoke $r31.<java.util.HashSet: void <init>()>();

        goto label12;

     label11:
        $r28 = null;

     label12:
        r6 = $r28;

        if z1 != 0 goto label13;

        if z2 == 0 goto label18;

     label13:
        if z2 == 0 goto label14;

        $r25 = r0.<com.hp.hpl.jena.util.MonitorGraph: java.util.Set snapshot>;

        interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>($r25);

     label14:
        $r10 = r0.<com.hp.hpl.jena.util.MonitorGraph: com.hp.hpl.jena.graph.Graph base>;

        $r9 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r8 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r7 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r9, $r8, $r7);

     label15:
        $z6 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label18;

        $r22 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.hp.hpl.jena.graph.Triple) $r22;

        if z1 == 0 goto label16;

        $r24 = r0.<com.hp.hpl.jena.util.MonitorGraph: java.util.Set snapshot>;

        $z3 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>(r23);

        if $z3 != 0 goto label16;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r23);

     label16:
        if z2 == 0 goto label17;

        interfaceinvoke r6.<java.util.Set: boolean remove(java.lang.Object)>(r23);

     label17:
        goto label15;

     label18:
        if r4 == null goto label19;

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6);

     label19:
        if $z0 == 0 goto label20;

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.util.MonitorGraph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        interfaceinvoke $r20.<com.hp.hpl.jena.graph.GraphEventManager: void notifyAddList(com.hp.hpl.jena.graph.Graph,java.util.List)>(r0, r3);

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.util.MonitorGraph: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        interfaceinvoke $r21.<com.hp.hpl.jena.graph.GraphEventManager: void notifyDeleteList(com.hp.hpl.jena.graph.Graph,java.util.List)>(r0, r5);

     label20:
        $r12 = r0.<com.hp.hpl.jena.util.MonitorGraph: java.util.Set snapshot>;

        interfaceinvoke $r12.<java.util.Set: void clear()>();

        $r16 = r0.<com.hp.hpl.jena.util.MonitorGraph: com.hp.hpl.jena.graph.Graph base>;

        $r15 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r14 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r13 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r15, $r14, $r13);

     label21:
        $z7 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label22;

        $r18 = r0.<com.hp.hpl.jena.util.MonitorGraph: java.util.Set snapshot>;

        $r19 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>($r19);

        goto label21;

     label22:
        return;
    }
}
