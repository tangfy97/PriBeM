class com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch extends com.hp.hpl.jena.mem.SetBunch
{
    private static final com.hp.hpl.jena.mem.TripleBunch empty;

    public void <init>()
    {
        com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch r0;
        com.hp.hpl.jena.mem.TripleBunch $r1;

        r0 := @this: com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch;

        $r1 = <com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch: com.hp.hpl.jena.mem.TripleBunch empty>;

        specialinvoke r0.<com.hp.hpl.jena.mem.SetBunch: void <init>(com.hp.hpl.jena.mem.TripleBunch)>($r1);

        return;
    }

    public java.util.Set baseSet()
    {
        java.util.Set $r1;
        com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch r0;

        r0 := @this: com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch;

        $r1 = r0.<com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch: java.util.Set elements>;

        return $r1;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.mem.ArrayBunch $r0;

        $r0 = new com.hp.hpl.jena.mem.ArrayBunch;

        specialinvoke $r0.<com.hp.hpl.jena.mem.ArrayBunch: void <init>()>();

        <com.hp.hpl.jena.mem.NodeToTriplesMap$OpenSetBunch: com.hp.hpl.jena.mem.TripleBunch empty> = $r0;

        return;
    }
}
