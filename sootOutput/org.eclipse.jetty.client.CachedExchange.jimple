public class org.eclipse.jetty.client.CachedExchange extends org.eclipse.jetty.client.HttpExchange
{
    private final org.eclipse.jetty.http.HttpFields _responseFields;
    private volatile int _responseStatus;

    public void <init>(boolean)
    {
        org.eclipse.jetty.client.CachedExchange r0;
        org.eclipse.jetty.http.HttpFields $r1;
        boolean z0;

        r0 := @this: org.eclipse.jetty.client.CachedExchange;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.eclipse.jetty.client.HttpExchange: void <init>()>();

        if z0 == 0 goto label1;

        $r1 = new org.eclipse.jetty.http.HttpFields;

        specialinvoke $r1.<org.eclipse.jetty.http.HttpFields: void <init>()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        r0.<org.eclipse.jetty.client.CachedExchange: org.eclipse.jetty.http.HttpFields _responseFields> = $r1;

        return;
    }

    public synchronized int getResponseStatus()
    {
        java.lang.IllegalStateException $r1;
        org.eclipse.jetty.client.CachedExchange r0;
        int $i0, $i1;

        r0 := @this: org.eclipse.jetty.client.CachedExchange;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.client.CachedExchange: int getStatus()>();

        if $i0 >= 5 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Response not received yet");

        throw $r1;

     label1:
        $i1 = r0.<org.eclipse.jetty.client.CachedExchange: int _responseStatus>;

        return $i1;
    }

    public synchronized org.eclipse.jetty.http.HttpFields getResponseFields()
    {
        java.lang.IllegalStateException $r2;
        org.eclipse.jetty.client.CachedExchange r0;
        int $i0;
        org.eclipse.jetty.http.HttpFields $r1;

        r0 := @this: org.eclipse.jetty.client.CachedExchange;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.client.CachedExchange: int getStatus()>();

        if $i0 >= 6 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Headers not completely received yet");

        throw $r2;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.CachedExchange: org.eclipse.jetty.http.HttpFields _responseFields>;

        return $r1;
    }

    protected synchronized void onResponseStatus(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.client.CachedExchange r0;
        int i0;
        org.eclipse.jetty.io.Buffer r1, r2;

        r0 := @this: org.eclipse.jetty.client.CachedExchange;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        i0 := @parameter1: int;

        r2 := @parameter2: org.eclipse.jetty.io.Buffer;

        r0.<org.eclipse.jetty.client.CachedExchange: int _responseStatus> = i0;

        specialinvoke r0.<org.eclipse.jetty.client.HttpExchange: void onResponseStatus(org.eclipse.jetty.io.Buffer,int,org.eclipse.jetty.io.Buffer)>(r1, i0, r2);

        return;
    }

    protected synchronized void onResponseHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.client.CachedExchange r0;
        org.eclipse.jetty.http.HttpFields $r1, $r4;
        org.eclipse.jetty.io.Buffer r2, r3, $r5;

        r0 := @this: org.eclipse.jetty.client.CachedExchange;

        r2 := @parameter0: org.eclipse.jetty.io.Buffer;

        r3 := @parameter1: org.eclipse.jetty.io.Buffer;

        $r1 = r0.<org.eclipse.jetty.client.CachedExchange: org.eclipse.jetty.http.HttpFields _responseFields>;

        if $r1 == null goto label1;

        $r4 = r0.<org.eclipse.jetty.client.CachedExchange: org.eclipse.jetty.http.HttpFields _responseFields>;

        $r5 = interfaceinvoke r3.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asImmutableBuffer()>();

        virtualinvoke $r4.<org.eclipse.jetty.http.HttpFields: void add(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r2, $r5);

     label1:
        specialinvoke r0.<org.eclipse.jetty.client.HttpExchange: void onResponseHeader(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r2, r3);

        return;
    }
}
