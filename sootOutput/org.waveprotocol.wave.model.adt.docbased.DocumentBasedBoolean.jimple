public final class org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableBasicValue, org.waveprotocol.wave.model.util.ElementListener
{
    private static final java.lang.String FALSE;
    private final org.waveprotocol.wave.model.document.util.DocumentEventRouter router;
    private final java.lang.String tag;
    private final java.lang.String valueAttr;
    private final java.lang.Object container;
    private java.lang.Object valueElement;
    private java.lang.Boolean value;
    private final java.util.Collection redundantElements;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    static final boolean $assertionsDisabled;

    public static org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean create(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean $r0;
        java.lang.Object r2;
        java.lang.String r3, r4;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void <init>(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.util.ListenerRegistration addChildListener(java.lang.Object,org.waveprotocol.wave.model.util.ElementListener)>(r2, $r0);

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void load()>();

        return $r0;
    }

    private org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter $r1;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.util.DocumentEventRouter router>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        return $r2;
    }

    private void <init>(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        java.lang.Object r4;
        java.lang.String r5, r6;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r3;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r3 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r2;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.util.DocumentEventRouter router> = r3;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object container> = r4;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String tag> = r5;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String valueAttr> = r6;

        return;
    }

    private void load()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1;
        java.lang.Object $r2, r3;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object container>;

        r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocHelper: java.lang.Object getFirstChildElement(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r1, $r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void onElementAdded(java.lang.Object)>(r3);

        r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocHelper: java.lang.Object getNextSiblingElement(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r1, r3);

        goto label1;

     label2:
        return;
    }

    private void changeValue(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r5;
        java.lang.Boolean $r1, $r3, $r9;
        java.lang.Object r2, $r7;
        java.lang.String $r4, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        if r2 == null goto label3;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement> = r2;

        $r4 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String FALSE>;

        $r5 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r7 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String valueAttr>;

        $r8 = interfaceinvoke $r5.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>($r7, $r6);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean value> = $r9;

        goto label4;

     label3:
        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement> = null;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean value> = null;

     label4:
        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void maybeTriggerOnValueChanged(java.lang.Boolean,java.lang.Boolean)>($r1, $r3);

        return;
    }

    private void cleanup()
    {
        java.lang.AssertionError $r7, $r9;
        java.util.ArrayList $r2;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r4;
        java.lang.Boolean $r1, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.util.Iterator $r5;
        java.util.Collection $r3, $r8;
        java.lang.Object $r10;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        interfaceinvoke $r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r3);

        $r4 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.ObservableMutableDocument: void deleteNode(java.lang.Object)>($r10);

        goto label1;

     label2:
        $z1 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r8 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        $z4 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        $z2 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r6 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        $z3 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean equals(java.lang.Boolean,java.lang.Boolean)>($r1, $r6);

        if $z3 != 0 goto label4;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label4:
        return;
    }

    public java.lang.Boolean get()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.lang.Boolean $r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean value>;

        return $r1;
    }

    private static boolean equals(java.lang.Boolean, java.lang.Boolean)
    {
        java.lang.Boolean r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Boolean;

        r1 := @parameter1: java.lang.Boolean;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Boolean: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public void set(java.lang.Boolean)
    {
        java.lang.String[] $r9;
        java.lang.AssertionError $r6;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r3, $r7;
        java.lang.Boolean $r1, r2, $r5;
        java.lang.String $r10, $r13, $r14;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.util.Serializer $r11;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r8;
        java.lang.Object $r4, $r12;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r2 := @parameter0: java.lang.Boolean;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        $z0 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean equals(java.lang.Boolean,java.lang.Boolean)>($r1, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        if r2 == null goto label2;

        $r7 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r12 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object container>;

        $r13 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String tag>;

        $r8 = new org.waveprotocol.wave.model.document.operation.impl.AttributesImpl;

        $r9 = newarray (java.lang.String)[2];

        $r10 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String valueAttr>;

        $r9[0] = $r10;

        $r11 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer BOOLEAN>;

        $r14 = interfaceinvoke $r11.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>(r2);

        $r9[1] = $r14;

        specialinvoke $r8.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: void <init>(java.lang.String[])>($r9);

        interfaceinvoke $r7.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object createChildElement(java.lang.Object,java.lang.String,java.util.Map)>($r12, $r13, $r8);

        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void cleanup()>();

        goto label3;

     label2:
        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void cleanup()>();

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r4 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.ObservableMutableDocument: void deleteNode(java.lang.Object)>($r4);

     label3:
        $z1 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r5 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        $z2 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean equals(java.lang.Boolean,java.lang.Boolean)>(r2, $r5);

        if $z2 != 0 goto label4;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label4:
        return;
    }

    public void onElementAdded(java.lang.Object)
    {
        java.lang.AssertionError $r12;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r1;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.util.Collection $r8, $r9;
        java.lang.Object r2, $r5, $r6, $r7, $r10, $r11;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $z0 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r10 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object container>;

        $r11 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.Object getParentElement(java.lang.Object)>(r2);

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String tag>;

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getTagName(java.lang.Object)>(r2);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r5 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        if $r5 == null goto label4;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: int getLocation(java.lang.Object)>(r2);

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        $i1 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.ObservableMutableDocument: int getLocation(java.lang.Object)>($r6);

        if $i0 >= $i1 goto label3;

        $r9 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        goto label5;

     label3:
        $r8 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        $r7 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void changeValue(java.lang.Object)>(r2);

        goto label5;

     label4:
        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void changeValue(java.lang.Object)>(r2);

     label5:
        return;
    }

    public void onElementRemoved(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.util.Collection $r5;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;
        java.lang.Object r3, $r6, $r7;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String tag>;

        $r2 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ObservableMutableDocument: java.lang.String getTagName(java.lang.Object)>(r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        interfaceinvoke $r5.<java.util.Collection: boolean remove(java.lang.Object)>(r3);

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object valueElement>;

        if r3 != $r6 goto label2;

        $r7 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Object extractLastRedundant()>();

        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void changeValue(java.lang.Object)>($r7);

     label2:
        return;
    }

    private java.lang.Object extractLastRedundant()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.util.Iterator $r2;
        java.util.Collection $r1, $r3;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r5;
        int $i0, i1, $i3;
        java.lang.Object $r4, r6;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r6 = null;

        $i3 = (int) -1;

        i1 = $i3;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        $i0 = interfaceinvoke $r5.<org.waveprotocol.wave.model.document.ObservableMutableDocument: int getLocation(java.lang.Object)>($r4);

        if $i0 <= i1 goto label2;

        i1 = $i0;

        r6 = $r4;

     label2:
        goto label1;

     label3:
        $r3 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.util.Collection redundantElements>;

        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r6);

        return r6;
    }

    private void maybeTriggerOnValueChanged(java.lang.Boolean, java.lang.Boolean)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r2;
        java.util.Iterator $r4;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r6;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r3;
        java.lang.Boolean r0, r1;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r0 := @parameter0: java.lang.Boolean;

        r1 := @parameter1: java.lang.Boolean;

        $z0 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean equals(java.lang.Boolean,java.lang.Boolean)>(r0, r1);

        if $z0 != 0 goto label2;

        $r3 = r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) $r5;

        interfaceinvoke r6.<org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener: void onValueChanged(java.lang.Object,java.lang.Object)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public void addListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object get()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.lang.Boolean $r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.Boolean get()>();

        return $r1;
    }

    public volatile void set(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.lang.Boolean $r2;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void set(java.lang.Boolean)>($r2);

        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void removeListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: void addListener(org.waveprotocol.wave.model.adt.ObservableBasicValue$Listener)>($r2);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.Serializer $r1;
        java.lang.Boolean $r2;
        java.lang.Class $r0;
        java.lang.String $r3;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/adt/docbased/DocumentBasedBoolean;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: boolean $assertionsDisabled> = $z1;

        $r1 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer BOOLEAN>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r2);

        <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBoolean: java.lang.String FALSE> = $r3;

        return;
    }
}
