public class org.apache.commons.fileupload.MultipartStream$ProgressNotifier extends java.lang.Object
{
    private final org.apache.commons.fileupload.ProgressListener listener;
    private final long contentLength;
    private long bytesRead;
    private int items;

    void <init>(org.apache.commons.fileupload.ProgressListener, long)
    {
        org.apache.commons.fileupload.MultipartStream$ProgressNotifier r0;
        long l0;
        org.apache.commons.fileupload.ProgressListener r1;

        r0 := @this: org.apache.commons.fileupload.MultipartStream$ProgressNotifier;

        r1 := @parameter0: org.apache.commons.fileupload.ProgressListener;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: org.apache.commons.fileupload.ProgressListener listener> = r1;

        r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: long contentLength> = l0;

        return;
    }

    void noteBytesRead(int)
    {
        org.apache.commons.fileupload.MultipartStream$ProgressNotifier r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.commons.fileupload.MultipartStream$ProgressNotifier;

        i0 := @parameter0: int;

        $l2 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: long bytesRead>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: long bytesRead> = $l3;

        specialinvoke r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void notifyListener()>();

        return;
    }

    void noteItem()
    {
        int $i0, $i1;
        org.apache.commons.fileupload.MultipartStream$ProgressNotifier r0;

        r0 := @this: org.apache.commons.fileupload.MultipartStream$ProgressNotifier;

        $i0 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: int items>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: int items> = $i1;

        specialinvoke r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: void notifyListener()>();

        return;
    }

    private void notifyListener()
    {
        org.apache.commons.fileupload.MultipartStream$ProgressNotifier r0;
        int $i0;
        long $l1, $l2;
        org.apache.commons.fileupload.ProgressListener $r1, $r2;

        r0 := @this: org.apache.commons.fileupload.MultipartStream$ProgressNotifier;

        $r1 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: org.apache.commons.fileupload.ProgressListener listener>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: org.apache.commons.fileupload.ProgressListener listener>;

        $l2 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: long bytesRead>;

        $l1 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: long contentLength>;

        $i0 = r0.<org.apache.commons.fileupload.MultipartStream$ProgressNotifier: int items>;

        interfaceinvoke $r2.<org.apache.commons.fileupload.ProgressListener: void update(long,long,int)>($l2, $l1, $i0);

     label1:
        return;
    }
}
