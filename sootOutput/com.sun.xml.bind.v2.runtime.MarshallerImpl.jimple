public final class com.sun.xml.bind.v2.runtime.MarshallerImpl extends javax.xml.bind.helpers.AbstractMarshallerImpl implements javax.xml.bind.ValidationEventHandler
{
    private java.lang.String indent;
    private com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper;
    private com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler;
    private java.lang.String header;
    final com.sun.xml.bind.v2.runtime.JAXBContextImpl context;
    protected final com.sun.xml.bind.v2.runtime.XMLSerializer serializer;
    private javax.xml.validation.Schema schema;
    private javax.xml.bind.Marshaller$Listener externalListener;
    private boolean c14nSupport;
    private java.io.Flushable toBeFlushed;
    private java.io.Closeable toBeClosed;
    protected static final java.lang.String INDENT_STRING;
    protected static final java.lang.String PREFIX_MAPPER;
    protected static final java.lang.String ENCODING_HANDLER;
    protected static final java.lang.String ENCODING_HANDLER2;
    protected static final java.lang.String XMLDECLARATION;
    protected static final java.lang.String XML_HEADERS;
    protected static final java.lang.String C14N;
    protected static final java.lang.String OBJECT_IDENTITY_CYCLE_DETECTION;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.runtime.AssociationMap)
    {
        com.sun.xml.bind.v2.runtime.AssociationMap r6;
        java.lang.AssertionError $r5;
        javax.xml.bind.JAXBException $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r2;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1, $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r6 := @parameter1: com.sun.xml.bind.v2.runtime.AssociationMap;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String indent> = "    ";

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper> = null;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler> = null;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header> = null;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.Marshaller$Listener externalListener> = null;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context> = r1;

        $r2 = new com.sun.xml.bind.v2.runtime.XMLSerializer;

        specialinvoke $r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void <init>(com.sun.xml.bind.v2.runtime.MarshallerImpl)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer> = $r2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $z0 = $r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean c14nSupport>;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean c14nSupport> = $z0;

     label1:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void setEventHandler(javax.xml.bind.ValidationEventHandler)>(r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label4:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public com.sun.xml.bind.v2.runtime.JAXBContextImpl getContext()
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        return $r1;
    }

    public void marshal(java.lang.Object, java.io.OutputStream, javax.xml.namespace.NamespaceContext) throws javax.xml.bind.JAXBException
    {
        java.io.OutputStream r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r6;
        com.sun.xml.bind.v2.runtime.StAXPostInitAction $r4;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.Object r1;
        javax.xml.namespace.NamespaceContext r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: javax.xml.namespace.NamespaceContext;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream)>(r2);

        $r4 = new com.sun.xml.bind.v2.runtime.StAXPostInitAction;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.StAXPostInitAction: void <init>(javax.xml.namespace.NamespaceContext,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r5, $r6);

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void write(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Runnable)>(r1, $r3, $r4);

        return;
    }

    public void marshal(java.lang.Object, javax.xml.stream.XMLStreamWriter) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r6;
        com.sun.xml.bind.v2.runtime.StAXPostInitAction $r5;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r4;
        java.lang.Object r1;
        javax.xml.stream.XMLStreamWriter r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.xml.stream.XMLStreamWriter;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.output.XMLStreamWriterOutput: com.sun.xml.bind.v2.runtime.output.XmlOutput create(javax.xml.stream.XMLStreamWriter,com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r2, $r3);

        $r5 = new com.sun.xml.bind.v2.runtime.StAXPostInitAction;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.StAXPostInitAction: void <init>(javax.xml.stream.XMLStreamWriter,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2, $r6);

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void write(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Runnable)>(r1, $r4, $r5);

        return;
    }

    public void marshal(java.lang.Object, javax.xml.stream.XMLEventWriter) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput $r2;
        javax.xml.stream.XMLEventWriter r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r5;
        com.sun.xml.bind.v2.runtime.StAXPostInitAction $r4;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        java.lang.Object r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.xml.stream.XMLEventWriter;

        $r2 = new com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        specialinvoke $r2.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: void <init>(javax.xml.stream.XMLEventWriter)>(r3);

        $r4 = new com.sun.xml.bind.v2.runtime.StAXPostInitAction;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.StAXPostInitAction: void <init>(javax.xml.stream.XMLEventWriter,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r3, $r5);

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void write(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Runnable)>(r1, $r2, $r4);

        return;
    }

    public void marshal(java.lang.Object, com.sun.xml.bind.v2.runtime.output.XmlOutput) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.output.XmlOutput r2;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.output.XmlOutput;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void write(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Runnable)>(r1, r2, null);

        return;
    }

    final com.sun.xml.bind.v2.runtime.output.XmlOutput createXmlOutput(javax.xml.transform.Result) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.marshaller.SAX2DOMEx $r22, $r27;
        java.net.URISyntaxException $r33;
        javax.xml.transform.stream.StreamResult r34;
        javax.xml.transform.Result r0;
        javax.xml.transform.sax.SAXResult $r29;
        com.sun.xml.bind.v2.runtime.output.SAXOutput $r21, $r26, $r28;
        javax.xml.bind.MarshalException $r1, $r32;
        org.w3c.dom.Document $r24;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r12, $r16, $r18;
        java.net.URI $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r11;
        java.io.Writer $r5, $r17;
        java.lang.Object[] $r2;
        java.lang.AssertionError $r14;
        org.w3c.dom.Node $r20;
        com.sun.xml.bind.v2.runtime.Messages $r3;
        java.lang.String $r4, $r7, $r8, r35;
        org.xml.sax.ContentHandler $r30;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r23;
        java.io.OutputStream $r6, $r15;
        java.io.FileOutputStream $r10;
        java.io.IOException $r31;
        java.io.Closeable $r13;
        javax.xml.transform.dom.DOMResult $r19, $r25;

        r11 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: javax.xml.transform.Result;

        $z0 = r0 instanceof javax.xml.transform.sax.SAXResult;

        if $z0 == 0 goto label01;

        $r28 = new com.sun.xml.bind.v2.runtime.output.SAXOutput;

        $r29 = (javax.xml.transform.sax.SAXResult) r0;

        $r30 = virtualinvoke $r29.<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()>();

        specialinvoke $r28.<com.sun.xml.bind.v2.runtime.output.SAXOutput: void <init>(org.xml.sax.ContentHandler)>($r30);

        return $r28;

     label01:
        $z1 = r0 instanceof javax.xml.transform.dom.DOMResult;

        if $z1 == 0 goto label03;

        $r19 = (javax.xml.transform.dom.DOMResult) r0;

        $r20 = virtualinvoke $r19.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        if $r20 != null goto label02;

        $r23 = virtualinvoke r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl getContext()>();

        $z4 = $r23.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean disableSecurityProcessing>;

        $r24 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl: org.w3c.dom.Document createDom(boolean)>($z4);

        $r25 = (javax.xml.transform.dom.DOMResult) r0;

        virtualinvoke $r25.<javax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)>($r24);

        $r26 = new com.sun.xml.bind.v2.runtime.output.SAXOutput;

        $r27 = new com.sun.xml.bind.marshaller.SAX2DOMEx;

        specialinvoke $r27.<com.sun.xml.bind.marshaller.SAX2DOMEx: void <init>(org.w3c.dom.Node)>($r24);

        specialinvoke $r26.<com.sun.xml.bind.v2.runtime.output.SAXOutput: void <init>(org.xml.sax.ContentHandler)>($r27);

        return $r26;

     label02:
        $r21 = new com.sun.xml.bind.v2.runtime.output.SAXOutput;

        $r22 = new com.sun.xml.bind.marshaller.SAX2DOMEx;

        specialinvoke $r22.<com.sun.xml.bind.marshaller.SAX2DOMEx: void <init>(org.w3c.dom.Node)>($r20);

        specialinvoke $r21.<com.sun.xml.bind.v2.runtime.output.SAXOutput: void <init>(org.xml.sax.ContentHandler)>($r22);

        return $r21;

     label03:
        $z2 = r0 instanceof javax.xml.transform.stream.StreamResult;

        if $z2 == 0 goto label13;

        r34 = (javax.xml.transform.stream.StreamResult) r0;

        $r5 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        if $r5 == null goto label04;

        $r17 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        $r18 = virtualinvoke r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.Writer)>($r17);

        return $r18;

     label04:
        $r6 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        if $r6 == null goto label05;

        $r15 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        $r16 = virtualinvoke r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream)>($r15);

        return $r16;

     label05:
        $r7 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        if $r7 == null goto label13;

        $r8 = virtualinvoke r34.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        r35 = $r8;

     label06:
        $r9 = new java.net.URI;

        specialinvoke $r9.<java.net.URI: void <init>(java.lang.String)>($r8);

        r35 = virtualinvoke $r9.<java.net.URI: java.lang.String getPath()>();

     label07:
        goto label09;

     label08:
        $r33 := @caughtexception;

     label09:
        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.lang.String)>(r35);

        $z3 = <com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $r13 = r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Closeable toBeClosed>;

        if $r13 == null goto label10;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label10:
        r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Closeable toBeClosed> = $r10;

        $r12 = virtualinvoke r11.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream)>($r10);

     label11:
        return $r12;

     label12:
        $r31 := @caughtexception;

        $r32 = new javax.xml.bind.MarshalException;

        specialinvoke $r32.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r31);

        throw $r32;

     label13:
        $r1 = new javax.xml.bind.MarshalException;

        $r3 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages UNSUPPORTED_RESULT>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r2);

        specialinvoke $r1.<javax.xml.bind.MarshalException: void <init>(java.lang.String)>($r4);

        throw $r1;

        catch java.net.URISyntaxException from label06 to label07 with label08;
        catch java.io.IOException from label09 to label11 with label12;
    }

    final java.lang.Runnable createPostInitAction(javax.xml.transform.Result)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r5;
        org.w3c.dom.Node $r2;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r4;
        javax.xml.transform.Result r0;
        com.sun.xml.bind.v2.runtime.DomPostInitAction $r3;
        javax.xml.transform.dom.DOMResult $r1;
        boolean $z0;

        r4 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: javax.xml.transform.Result;

        $z0 = r0 instanceof javax.xml.transform.dom.DOMResult;

        if $z0 == 0 goto label1;

        $r1 = (javax.xml.transform.dom.DOMResult) r0;

        $r2 = virtualinvoke $r1.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        $r3 = new com.sun.xml.bind.v2.runtime.DomPostInitAction;

        $r5 = r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.DomPostInitAction: void <init>(org.w3c.dom.Node,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, $r5);

        return $r3;

     label1:
        return null;
    }

    public void marshal(java.lang.Object, javax.xml.transform.Result) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.Object r1;
        javax.xml.transform.Result r2;
        java.lang.Runnable $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.xml.transform.Result;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createXmlOutput(javax.xml.transform.Result)>(r2);

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.Runnable createPostInitAction(javax.xml.transform.Result)>(r2);

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void write(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Runnable)>(r1, $r3, $r4);

        return;
    }

    protected final void write(com.sun.xml.bind.v2.runtime.Name, com.sun.xml.bind.v2.runtime.JaxBeanInfo, java.lang.Object, com.sun.xml.bind.v2.runtime.output.XmlOutput, java.lang.Runnable) throws javax.xml.bind.JAXBException
    {
        java.lang.Throwable $r14, $r15;
        com.sun.xml.bind.v2.runtime.Name r3;
        java.lang.Runnable r2;
        javax.xml.bind.MarshalException $r18, $r20, $r22;
        javax.xml.stream.XMLStreamException $r17;
        com.sun.xml.bind.v2.runtime.output.XmlOutput r1;
        java.io.IOException $r19;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r4, $r7, $r8, $r12, $r13, $r16, $r23, $r24;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        org.xml.sax.SAXException $r21;
        java.lang.Class $r6, $r9, $r10;
        java.lang.Object r11;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        r11 := @parameter2: java.lang.Object;

        r1 := @parameter3: com.sun.xml.bind.v2.runtime.output.XmlOutput;

        r2 := @parameter4: java.lang.Runnable;

     label01:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void prewrite(com.sun.xml.bind.v2.runtime.output.XmlOutput,boolean,java.lang.Runnable)>(r1, 1, r2);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r3, null);

        $r6 = r5.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        if $r6 == class "Ljava/lang/Void;" goto label02;

        $r10 = r5.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r9 = <java.lang.Void: java.lang.Class TYPE>;

        if $r10 != $r9 goto label03;

     label02:
        $r7 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        $r8 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        goto label05;

     label03:
        if r11 != null goto label04;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeXsiNilTrue()>();

        goto label05;

     label04:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>(r11, "root", r5, 0);

     label05:
        $r23 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r23.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void postwrite()>();

     label06:
        $r24 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r24.<com.sun.xml.bind.v2.runtime.XMLSerializer: void close()>();

        goto label12;

     label07:
        $r21 := @caughtexception;

        $r22 = new javax.xml.bind.MarshalException;

        specialinvoke $r22.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label08:
        $r19 := @caughtexception;

        $r20 = new javax.xml.bind.MarshalException;

        specialinvoke $r20.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label09:
        $r17 := @caughtexception;

        $r18 = new javax.xml.bind.MarshalException;

        specialinvoke $r18.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r17);

        throw $r18;

     label10:
        $r15 := @caughtexception;

     label11:
        $r16 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r16.<com.sun.xml.bind.v2.runtime.XMLSerializer: void close()>();

        throw $r15;

     label12:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void cleanUp()>();

        goto label15;

     label13:
        $r14 := @caughtexception;

     label14:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void cleanUp()>();

        throw $r14;

     label15:
        return;

        catch org.xml.sax.SAXException from label01 to label06 with label07;
        catch java.io.IOException from label01 to label06 with label08;
        catch javax.xml.stream.XMLStreamException from label01 to label06 with label09;
        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Throwable from label07 to label11 with label10;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private void write(java.lang.Object, com.sun.xml.bind.v2.runtime.output.XmlOutput, java.lang.Runnable) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.util.FatalAdapter $r8;
        java.lang.Throwable $r17, $r18;
        javax.xml.validation.ValidatorHandler $r7;
        java.lang.Object[] $r14;
        java.lang.Runnable r3;
        javax.xml.validation.Schema $r2, $r6;
        javax.xml.bind.MarshalException $r21, $r23, $r25;
        javax.xml.stream.XMLStreamException $r20;
        com.sun.xml.bind.v2.runtime.output.XmlOutput r26;
        com.sun.xml.bind.v2.runtime.Messages $r15;
        java.lang.String $r16;
        boolean $z0;
        java.io.IOException $r22;
        com.sun.xml.bind.v2.runtime.MarshallerImpl$2 $r12;
        java.lang.IllegalArgumentException $r13;
        com.sun.xml.bind.v2.runtime.MarshallerImpl$1 $r10;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r4, $r5, $r9, $r19;
        com.sun.xml.bind.v2.runtime.output.ForkXmlOutput $r11;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r1;
        org.xml.sax.SAXException $r24;
        java.lang.Object r0;

        r1 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: java.lang.Object;

        r26 := @parameter1: com.sun.xml.bind.v2.runtime.output.XmlOutput;

        r3 := @parameter2: java.lang.Runnable;

     label01:
        if r0 != null goto label02;

        $r13 = new java.lang.IllegalArgumentException;

        $r15 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NOT_MARSHALLABLE>;

        $r14 = newarray (java.lang.Object)[0];

        $r16 = virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r14);

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label02:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.validation.Schema schema>;

        if $r2 == null goto label03;

        $r6 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.validation.Schema schema>;

        $r7 = virtualinvoke $r6.<javax.xml.validation.Schema: javax.xml.validation.ValidatorHandler newValidatorHandler()>();

        $r8 = new com.sun.xml.bind.v2.util.FatalAdapter;

        $r9 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        specialinvoke $r8.<com.sun.xml.bind.v2.util.FatalAdapter: void <init>(org.xml.sax.ErrorHandler)>($r9);

        virtualinvoke $r7.<javax.xml.validation.ValidatorHandler: void setErrorHandler(org.xml.sax.ErrorHandler)>($r8);

        $r10 = new com.sun.xml.bind.v2.runtime.MarshallerImpl$1;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.MarshallerImpl$1: void <init>(com.sun.xml.bind.v2.runtime.MarshallerImpl)>(r1);

        virtualinvoke $r10.<org.xml.sax.helpers.XMLFilterImpl: void setContentHandler(org.xml.sax.ContentHandler)>($r7);

        $r11 = new com.sun.xml.bind.v2.runtime.output.ForkXmlOutput;

        $r12 = new com.sun.xml.bind.v2.runtime.MarshallerImpl$2;

        specialinvoke $r12.<com.sun.xml.bind.v2.runtime.MarshallerImpl$2: void <init>(com.sun.xml.bind.v2.runtime.MarshallerImpl,org.xml.sax.ContentHandler)>(r1, $r10);

        specialinvoke $r11.<com.sun.xml.bind.v2.runtime.output.ForkXmlOutput: void <init>(com.sun.xml.bind.v2.runtime.output.XmlOutput,com.sun.xml.bind.v2.runtime.output.XmlOutput)>($r12, r26);

        r26 = $r11;

     label03:
        $z0 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean isFragment()>();

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void prewrite(com.sun.xml.bind.v2.runtime.output.XmlOutput,boolean,java.lang.Runnable)>(r26, $z0, r3);

        $r4 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsRoot(java.lang.Object)>(r0);

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void postwrite()>();

     label04:
        $r5 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.XMLSerializer: void close()>();

        goto label10;

     label05:
        $r24 := @caughtexception;

        $r25 = new javax.xml.bind.MarshalException;

        specialinvoke $r25.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label06:
        $r22 := @caughtexception;

        $r23 = new javax.xml.bind.MarshalException;

        specialinvoke $r23.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label07:
        $r20 := @caughtexception;

        $r21 = new javax.xml.bind.MarshalException;

        specialinvoke $r21.<javax.xml.bind.MarshalException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label08:
        $r18 := @caughtexception;

     label09:
        $r19 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r19.<com.sun.xml.bind.v2.runtime.XMLSerializer: void close()>();

        throw $r18;

     label10:
        specialinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void cleanUp()>();

        goto label13;

     label11:
        $r17 := @caughtexception;

     label12:
        specialinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void cleanUp()>();

        throw $r17;

     label13:
        return;

        catch org.xml.sax.SAXException from label03 to label04 with label05;
        catch java.io.IOException from label03 to label04 with label06;
        catch javax.xml.stream.XMLStreamException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label09 with label08;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void cleanUp()
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        java.io.Closeable $r2, $r6;
        java.io.IOException $r4, $r5;
        java.io.Flushable $r1, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Flushable toBeFlushed>;

        if $r1 == null goto label4;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Flushable toBeFlushed>;

        interfaceinvoke $r3.<java.io.Flushable: void flush()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Closeable toBeClosed>;

        if $r6 == null goto label8;

     label5:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Closeable toBeClosed>;

        interfaceinvoke $r2.<java.io.Closeable: void close()>();

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

     label8:
        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Flushable toBeFlushed> = null;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Closeable toBeClosed> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private void prewrite(com.sun.xml.bind.v2.runtime.output.XmlOutput, boolean, java.lang.Runnable) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        java.lang.String[] $r8;
        java.lang.Runnable r5;
        com.sun.xml.bind.v2.runtime.output.XmlOutput r1;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, r9, r10;
        boolean z0;
        com.sun.xml.bind.marshaller.NamespacePrefixMapper $r6, $r7, $r13;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r2, $r11, $r12;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.output.XmlOutput;

        z0 := @parameter1: boolean;

        r5 := @parameter2: java.lang.Runnable;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getSchemaLocation()>();

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getNoNSSchemaLocation()>();

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startDocument(com.sun.xml.bind.v2.runtime.output.XmlOutput,boolean,java.lang.String,java.lang.String)>(r1, z0, $r3, $r4);

        if r5 == null goto label1;

        interfaceinvoke r5.<java.lang.Runnable: void run()>();

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper>;

        if $r6 == null goto label4;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper>;

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.marshaller.NamespacePrefixMapper: java.lang.String[] getContextualNamespaceDecls()>();

        if $r8 == null goto label4;

        i2 = 0;

     label2:
        $i0 = lengthof $r8;

        if i2 >= $i0 goto label4;

        r9 = $r8[i2];

        $i1 = i2 + 1;

        r10 = $r8[$i1];

        if r10 == null goto label3;

        if r9 == null goto label3;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.XMLSerializer: void addInscopeBinding(java.lang.String,java.lang.String)>(r10, r9);

     label3:
        i2 = i2 + 2;

        goto label2;

     label4:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper>;

        virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.XMLSerializer: void setPrefixMapper(com.sun.xml.bind.marshaller.NamespacePrefixMapper)>($r13);

        return;
    }

    private void postwrite() throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r1, $r2;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endDocument()>();

        $r2 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reconcileID()>();

        return;
    }

    protected com.sun.xml.bind.marshaller.CharacterEscapeHandler createEscapeHandler(java.lang.String)
    {
        java.lang.Throwable $r7;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler $r1, $r5, $r6, $r8;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        java.lang.String r2, $r4;
        com.sun.xml.bind.marshaller.NioEscapeHandler $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        if $r1 == null goto label1;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        return $r6;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("UTF");

        if $z0 == 0 goto label2;

        $r5 = <com.sun.xml.bind.marshaller.MinimumEscapeHandler: com.sun.xml.bind.marshaller.CharacterEscapeHandler theInstance>;

        return $r5;

     label2:
        $r3 = new com.sun.xml.bind.marshaller.NioEscapeHandler;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getJavaEncoding(java.lang.String)>(r2);

        specialinvoke $r3.<com.sun.xml.bind.marshaller.NioEscapeHandler: void <init>(java.lang.String)>($r4);

     label3:
        return $r3;

     label4:
        $r7 := @caughtexception;

        $r8 = <com.sun.xml.bind.marshaller.DumbEscapeHandler: com.sun.xml.bind.marshaller.CharacterEscapeHandler theInstance>;

        return $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.Writer, java.lang.String)
    {
        java.lang.AssertionError $r10;
        com.sun.xml.bind.v2.runtime.output.SAXOutput $r5;
        com.sun.xml.bind.marshaller.XMLWriter $r3, $r6, r13;
        java.lang.String r1, $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.Flushable $r9;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler $r2;
        java.io.BufferedWriter $r11;
        com.sun.xml.bind.marshaller.DataWriter $r7;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        java.io.Writer r12;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r12 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        $z0 = r12 instanceof java.io.BufferedWriter;

        if $z0 != 0 goto label1;

        $r11 = new java.io.BufferedWriter;

        specialinvoke $r11.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r12);

        r12 = $r11;

     label1:
        $z1 = <com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Flushable toBeFlushed>;

        if $r9 == null goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.io.Flushable toBeFlushed> = r12;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler createEscapeHandler(java.lang.String)>(r1);

        $z2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean isFormattedOutput()>();

        if $z2 == 0 goto label3;

        $r7 = new com.sun.xml.bind.marshaller.DataWriter;

        specialinvoke $r7.<com.sun.xml.bind.marshaller.DataWriter: void <init>(java.io.Writer,java.lang.String,com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r12, r1, $r2);

        $r8 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String indent>;

        virtualinvoke $r7.<com.sun.xml.bind.marshaller.DataWriter: void setIndentStep(java.lang.String)>($r8);

        r13 = $r7;

        goto label4;

     label3:
        $r3 = new com.sun.xml.bind.marshaller.XMLWriter;

        specialinvoke $r3.<com.sun.xml.bind.marshaller.XMLWriter: void <init>(java.io.Writer,java.lang.String,com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r12, r1, $r2);

        r13 = $r3;

     label4:
        $r6 = r13;

        $z3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean isFragment()>();

        if $z3 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        virtualinvoke $r6.<com.sun.xml.bind.marshaller.XMLWriter: void setXmlDecl(boolean)>($z4);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header>;

        virtualinvoke r13.<com.sun.xml.bind.marshaller.XMLWriter: void setHeader(java.lang.String)>($r4);

        $r5 = new com.sun.xml.bind.v2.runtime.output.SAXOutput;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.output.SAXOutput: void <init>(org.xml.sax.ContentHandler)>(r13);

        return $r5;
    }

    public com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.Writer)
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        java.io.Writer r1;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.String $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.io.Writer;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getEncoding()>();

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.Writer,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream) throws javax.xml.bind.JAXBException
    {
        java.io.OutputStream r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.String $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getEncoding()>();

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.OutputStream, java.lang.String) throws javax.xml.bind.JAXBException
    {
        java.lang.Object[] $r19;
        com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput $r8, r22;
        javax.xml.bind.MarshalException $r18;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r5;
        java.io.OutputStreamWriter $r2;
        com.sun.xml.bind.v2.runtime.Messages $r20;
        java.lang.String r0, $r4, $r10, $r16, $r21, $r23;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r6, $r12;
        java.io.OutputStream r3;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler $r9, $r13, $r15;
        com.sun.xml.bind.v2.runtime.output.Encoded[] $r7;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r1;
        com.sun.xml.bind.v2.runtime.output.C14nXmlOutput $r11;
        java.io.UnsupportedEncodingException $r17;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput $r14;

        r1 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r3 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 == 0 goto label5;

        $r6 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.output.Encoded[] getUTF8NameTable()>();

        $z1 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean isFormattedOutput()>();

        if $z1 == 0 goto label1;

        $r14 = new com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        $r16 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String indent>;

        $r15 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void <init>(java.io.OutputStream,java.lang.String,com.sun.xml.bind.v2.runtime.output.Encoded[],com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r3, $r16, $r7, $r15);

        r22 = $r14;

        goto label3;

     label1:
        $z2 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean c14nSupport>;

        if $z2 == 0 goto label2;

        $r11 = new com.sun.xml.bind.v2.runtime.output.C14nXmlOutput;

        $r12 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $z3 = $r12.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean c14nSupport>;

        $r13 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        specialinvoke $r11.<com.sun.xml.bind.v2.runtime.output.C14nXmlOutput: void <init>(java.io.OutputStream,com.sun.xml.bind.v2.runtime.output.Encoded[],boolean,com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r3, $r7, $z3, $r13);

        r22 = $r11;

        goto label3;

     label2:
        $r8 = new com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput;

        $r9 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void <init>(java.io.OutputStream,com.sun.xml.bind.v2.runtime.output.Encoded[],com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r3, $r7, $r9);

        r22 = $r8;

     label3:
        $r23 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header>;

        if $r23 == null goto label4;

        $r10 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header>;

        virtualinvoke r22.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void setHeader(java.lang.String)>($r10);

     label4:
        return r22;

     label5:
        $r2 = new java.io.OutputStreamWriter;

        $r4 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String getJavaEncoding(java.lang.String)>(r0);

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r3, $r4);

        $r5 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.output.XmlOutput createWriter(java.io.Writer,java.lang.String)>($r2, r0);

     label6:
        return $r5;

     label7:
        $r17 := @caughtexception;

        $r18 = new javax.xml.bind.MarshalException;

        $r20 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages UNSUPPORTED_ENCODING>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r0;

        $r21 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r19);

        specialinvoke $r18.<javax.xml.bind.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r17);

        throw $r18;

        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    public java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException
    {
        java.lang.Boolean $r13, $r14, $r16;
        java.lang.String r0, $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler $r4;
        com.sun.xml.bind.marshaller.NamespacePrefixMapper $r17;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r12;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r3;
        java.lang.Object $r11;

        r3 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = "com.sun.xml.bind.indentString";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        $r18 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String indent>;

        return $r18;

     label01:
        $r2 = "com.sun.xml.bind.characterEscapeHandler";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label02;

        $r5 = "com.sun.xml.bind.marshaller.CharacterEscapeHandler";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label03;

     label02:
        $r4 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler>;

        return $r4;

     label03:
        $r6 = "com.sun.xml.bind.namespacePrefixMapper";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label04;

        $r17 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper>;

        return $r17;

     label04:
        $r7 = "com.sun.xml.bind.xmlDeclaration";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label07;

        $z10 = virtualinvoke r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean isFragment()>();

        if $z10 != 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        return $r16;

     label07:
        $r8 = "com.sun.xml.bind.xmlHeaders";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label08;

        $r15 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header>;

        return $r15;

     label08:
        $r9 = "com.sun.xml.bind.c14n";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label09;

        $z9 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean c14nSupport>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        return $r14;

     label09:
        $r10 = "com.sun.xml.bind.objectIdentitityCycleDetection";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label10;

        $r12 = r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $z8 = virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean getObjectIdentityCycleDetection()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        return $r13;

     label10:
        $r11 = specialinvoke r3.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r11;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.PropertyException $r6, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler $r5;
        com.sun.xml.bind.marshaller.NamespacePrefixMapper $r26;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r4;
        java.lang.Object[] $r7, $r28;
        java.lang.Boolean $r20, $r22, $r24, $r25;
        com.sun.xml.bind.v2.runtime.Messages $r9, $r30;
        java.lang.String r0, $r1, $r2, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r23, $r31, $r33, $r34, $r35;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r21;
        java.lang.Object r3;
        java.lang.Class $r8, $r11, $r29, $r32;

        r4 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = "com.sun.xml.bind.indentString";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        specialinvoke r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void checkString(java.lang.String,java.lang.Object)>(r0, r3);

        $r35 = (java.lang.String) r3;

        r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String indent> = $r35;

        return;

     label01:
        $r2 = "com.sun.xml.bind.characterEscapeHandler";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label02;

        $r14 = "com.sun.xml.bind.marshaller.CharacterEscapeHandler";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label04;

     label02:
        $z2 = r3 instanceof com.sun.xml.bind.marshaller.CharacterEscapeHandler;

        if $z2 != 0 goto label03;

        $r6 = new javax.xml.bind.PropertyException;

        $r9 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MUST_BE_X>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = r0;

        $r8 = class "Lcom/sun/xml/bind/marshaller/CharacterEscapeHandler;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r7[1] = $r10;

        $r11 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r7[2] = $r12;

        $r13 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r7);

        specialinvoke $r6.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label03:
        $r5 = (com.sun.xml.bind.marshaller.CharacterEscapeHandler) r3;

        r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.CharacterEscapeHandler escapeHandler> = $r5;

        return;

     label04:
        $r15 = "com.sun.xml.bind.namespacePrefixMapper";

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label06;

        $z12 = r3 instanceof com.sun.xml.bind.marshaller.NamespacePrefixMapper;

        if $z12 != 0 goto label05;

        $r27 = new javax.xml.bind.PropertyException;

        $r30 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MUST_BE_X>;

        $r28 = newarray (java.lang.Object)[3];

        $r28[0] = r0;

        $r29 = class "Lcom/sun/xml/bind/marshaller/NamespacePrefixMapper;";

        $r31 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r28[1] = $r31;

        $r32 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();

        $r28[2] = $r33;

        $r34 = virtualinvoke $r30.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r28);

        specialinvoke $r27.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label05:
        $r26 = (com.sun.xml.bind.marshaller.NamespacePrefixMapper) r3;

        r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper prefixMapper> = $r26;

        return;

     label06:
        $r16 = "com.sun.xml.bind.xmlDeclaration";

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label09;

        specialinvoke r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void checkBoolean(java.lang.String,java.lang.Object)>(r0, r3);

        $r24 = (java.lang.Boolean) r3;

        $z11 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

        if $z11 != 0 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13);

        specialinvoke r4.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r25);

        return;

     label09:
        $r17 = "com.sun.xml.bind.xmlHeaders";

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label10;

        specialinvoke r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void checkString(java.lang.String,java.lang.Object)>(r0, r3);

        $r23 = (java.lang.String) r3;

        r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String header> = $r23;

        return;

     label10:
        $r18 = "com.sun.xml.bind.c14n";

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label11;

        specialinvoke r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void checkBoolean(java.lang.String,java.lang.Object)>(r0, r3);

        $r22 = (java.lang.Boolean) r3;

        $z10 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean c14nSupport> = $z10;

        return;

     label11:
        $r19 = "com.sun.xml.bind.objectIdentitityCycleDetection";

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label12;

        specialinvoke r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void checkBoolean(java.lang.String,java.lang.Object)>(r0, r3);

        $r21 = r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r20 = (java.lang.Boolean) r3;

        $z9 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r21.<com.sun.xml.bind.v2.runtime.XMLSerializer: void setObjectIdentityCycleDetection(boolean)>($z9);

        return;

     label12:
        specialinvoke r4.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setProperty(java.lang.String,java.lang.Object)>(r0, r3);

        return;
    }

    private void checkBoolean(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        java.lang.Object[] $r2;
        javax.xml.bind.PropertyException $r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r10;
        java.lang.Object r0;
        java.lang.Class $r4, $r7;
        com.sun.xml.bind.v2.runtime.Messages $r5;
        java.lang.String r3, $r6, $r8, $r9;
        boolean $z0;

        r10 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 != 0 goto label1;

        $r1 = new javax.xml.bind.PropertyException;

        $r5 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MUST_BE_X>;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r3;

        $r4 = class "Ljava/lang/Boolean;";

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r2[1] = $r6;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r2[2] = $r8;

        $r9 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r2);

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label1:
        return;
    }

    private void checkString(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        java.lang.Object[] $r2;
        javax.xml.bind.PropertyException $r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r10;
        java.lang.Object r0;
        java.lang.Class $r4, $r7;
        com.sun.xml.bind.v2.runtime.Messages $r5;
        java.lang.String r3, $r6, $r8, $r9;
        boolean $z0;

        r10 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r1 = new javax.xml.bind.PropertyException;

        $r5 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MUST_BE_X>;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r3;

        $r4 = class "Ljava/lang/String;";

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r2[1] = $r6;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r2[2] = $r8;

        $r9 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r2);

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label1:
        return;
    }

    public void setAdapter(java.lang.Class, javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r3;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r1;
        java.lang.Class r0;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.'annotation'.adapters.XmlAdapter putAdapter(java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlAdapter)>(r0, r2);

        return;
    }

    public javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer $r2, $r3;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r1;
        java.lang.Class r0;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean containsAdapter(java.lang.Class)>(r0);

        if $z0 == 0 goto label2;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)>(r0);

        return $r4;

     label2:
        return null;
    }

    public void setAttachmentMarshaller(javax.xml.bind.attachment.AttachmentMarshaller)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r2;
        javax.xml.bind.attachment.AttachmentMarshaller r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: javax.xml.bind.attachment.AttachmentMarshaller;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.attachment.AttachmentMarshaller attachmentMarshaller> = r1;

        return;
    }

    public javax.xml.bind.attachment.AttachmentMarshaller getAttachmentMarshaller()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r1;
        javax.xml.bind.attachment.AttachmentMarshaller $r2;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.attachment.AttachmentMarshaller attachmentMarshaller>;

        return $r2;
    }

    public javax.xml.validation.Schema getSchema()
    {
        javax.xml.validation.Schema $r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.validation.Schema schema>;

        return $r1;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        javax.xml.validation.Schema r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: javax.xml.validation.Schema;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.validation.Schema schema> = r1;

        return;
    }

    public boolean handleEvent(javax.xml.bind.ValidationEvent)
    {
        javax.xml.bind.ValidationEvent r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: javax.xml.bind.ValidationEvent;

        return 0;
    }

    public javax.xml.bind.Marshaller$Listener getListener()
    {
        javax.xml.bind.Marshaller$Listener $r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.Marshaller$Listener externalListener>;

        return $r1;
    }

    public void setListener(javax.xml.bind.Marshaller$Listener)
    {
        javax.xml.bind.Marshaller$Listener r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        r1 := @parameter0: javax.xml.bind.Marshaller$Listener;

        r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.Marshaller$Listener externalListener> = r1;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String OBJECT_IDENTITY_CYCLE_DETECTION> = "com.sun.xml.bind.objectIdentitityCycleDetection";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String C14N> = "com.sun.xml.bind.c14n";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String XML_HEADERS> = "com.sun.xml.bind.xmlHeaders";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String XMLDECLARATION> = "com.sun.xml.bind.xmlDeclaration";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String ENCODING_HANDLER2> = "com.sun.xml.bind.marshaller.CharacterEscapeHandler";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String ENCODING_HANDLER> = "com.sun.xml.bind.characterEscapeHandler";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String PREFIX_MAPPER> = "com.sun.xml.bind.namespacePrefixMapper";

        <com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.String INDENT_STRING> = "com.sun.xml.bind.indentString";

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/MarshallerImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.MarshallerImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
