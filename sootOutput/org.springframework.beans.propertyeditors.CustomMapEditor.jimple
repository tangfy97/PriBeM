public class org.springframework.beans.propertyeditors.CustomMapEditor extends java.beans.PropertyEditorSupport
{
    private final java.lang.Class mapType;
    private final boolean nullAsEmptyMap;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.beans.propertyeditors.CustomMapEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.springframework.beans.propertyeditors.CustomMapEditor: void <init>(java.lang.Class,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        java.lang.IllegalArgumentException $r3, $r9;
        java.lang.Class r1, $r2;
        java.lang.StringBuilder $r4, $r6, $r7;
        org.springframework.beans.propertyeditors.CustomMapEditor r0;
        java.lang.String $r5, $r8;
        boolean $z0, z1;

        r0 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r1 := @parameter0: java.lang.Class;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Map type is required");

        throw $r9;

     label1:
        $r2 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Map type [");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not implement [java.util.Map]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        r0.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Class mapType> = r1;

        r0.<org.springframework.beans.propertyeditors.CustomMapEditor: boolean nullAsEmptyMap> = z1;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.springframework.beans.propertyeditors.CustomMapEditor r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>(r1);

        return;
    }

    public void setValue(java.lang.Object)
    {
        java.util.Map r7, $r9, $r19;
        int $i0;
        org.springframework.beans.propertyeditors.CustomMapEditor r1;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map$Entry r13;
        java.util.Iterator $r11;
        java.util.Set $r10;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object r0, $r12, $r14, $r15, $r16, $r17;
        java.lang.Class $r2, $r8, $r18;
        java.lang.StringBuilder $r4, $r5;

        r1 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $z4 = r1.<org.springframework.beans.propertyeditors.CustomMapEditor: boolean nullAsEmptyMap>;

        if $z4 == 0 goto label1;

        $r18 = r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Class mapType>;

        $r19 = virtualinvoke r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.util.Map createMap(java.lang.Class,int)>($r18, 0);

        specialinvoke r1.<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>($r19);

        goto label7;

     label1:
        if r0 == null goto label2;

        $r2 = r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Class mapType>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        $z3 = virtualinvoke r1.<org.springframework.beans.propertyeditors.CustomMapEditor: boolean alwaysCreateNewMap()>();

        if $z3 != 0 goto label3;

     label2:
        specialinvoke r1.<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>(r0);

        goto label7;

     label3:
        $z1 = r0 instanceof java.util.Map;

        if $z1 == 0 goto label6;

        r7 = (java.util.Map) r0;

        $r8 = r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Class mapType>;

        $i0 = interfaceinvoke r7.<java.util.Map: int size()>();

        $r9 = virtualinvoke r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.util.Map createMap(java.lang.Class,int)>($r8, $i0);

        $r10 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = virtualinvoke r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertKey(java.lang.Object)>($r14);

        $r16 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = virtualinvoke r1.<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertValue(java.lang.Object)>($r16);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

     label5:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label4;

        specialinvoke r1.<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>($r9);

        goto label7;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Value cannot be converted to Map: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label7:
        return;
    }

    protected java.util.Map createMap(java.lang.Class, int)
    {
        java.util.LinkedHashMap $r2;
        java.util.Map $r5;
        int i0;
        java.lang.String $r9, $r12, $r14;
        org.springframework.beans.propertyeditors.CustomMapEditor r15;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r7;
        java.lang.Exception $r6;
        java.util.TreeMap $r3;
        java.lang.Class r0, $r1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r10, $r11, $r13;

        r15 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label4;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (java.util.Map) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not instantiate map class [");

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r12 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label4:
        $r1 = class "Ljava/util/SortedMap;";

        $z1 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label5;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        return $r3;

     label5:
        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(i0);

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected boolean alwaysCreateNewMap()
    {
        org.springframework.beans.propertyeditors.CustomMapEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        return 0;
    }

    protected java.lang.Object convertKey(java.lang.Object)
    {
        java.lang.Object r0;
        org.springframework.beans.propertyeditors.CustomMapEditor r1;

        r1 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    protected java.lang.Object convertValue(java.lang.Object)
    {
        java.lang.Object r0;
        org.springframework.beans.propertyeditors.CustomMapEditor r1;

        r1 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.String getAsText()
    {
        org.springframework.beans.propertyeditors.CustomMapEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomMapEditor;

        return null;
    }
}
