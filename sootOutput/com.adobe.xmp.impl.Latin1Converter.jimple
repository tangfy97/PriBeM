public class com.adobe.xmp.impl.Latin1Converter extends java.lang.Object
{
    private static final int STATE_START;
    private static final int STATE_UTF8CHAR;

    private void <init>()
    {
        com.adobe.xmp.impl.Latin1Converter r0;

        r0 := @this: com.adobe.xmp.impl.Latin1Converter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.adobe.xmp.impl.ByteBuffer convert(com.adobe.xmp.impl.ByteBuffer)
    {
        byte[] r3, $r5, $r6, $r7;
        byte $b5, $b8, $b9, $b11, $b13, b16, b20, b21, b22;
        boolean $z0;
        com.adobe.xmp.impl.ByteBuffer r0, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i10, $i12, i14, i15, i17, i18, i19, $i24, $i26;
        java.lang.String $r1, $r2;

        r0 := @parameter0: com.adobe.xmp.impl.ByteBuffer;

        $r1 = "UTF-8";

        $r2 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: java.lang.String getEncoding()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label13;

        r3 = newarray (byte)[8];

        i14 = 0;

        i15 = 0;

        $r8 = new com.adobe.xmp.impl.ByteBuffer;

        $i0 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int length()>();

        $i1 = $i0 * 4;

        $i2 = $i1 / 3;

        specialinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void <init>(int)>($i2);

        b16 = 0;

        b22 = 0;

        b21 = 0;

        i17 = 0;

     label01:
        $i3 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int length()>();

        if i17 >= $i3 goto label10;

        $i4 = virtualinvoke r0.<com.adobe.xmp.impl.ByteBuffer: int charAt(int)>(i17);

        lookupswitch(b22)
        {
            case 0: goto label02;
            case 11: goto label07;
            default: goto label02;
        };

     label02:
        if $i4 >= 127 goto label03;

        $b13 = (byte) $i4;

        virtualinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void append(byte)>($b13);

        goto label09;

     label03:
        if $i4 < 192 goto label06;

        $i24 = (int) -1;

        i15 = $i24;

        i18 = $i4;

     label04:
        if i15 >= 8 goto label05;

        $i12 = i18 & 128;

        if $i12 != 128 goto label05;

        i15 = i15 + 1;

        i18 = i18 << 1;

        goto label04;

     label05:
        $i10 = i14;

        i14 = i14 + 1;

        $b11 = (byte) $i4;

        r3[$i10] = $b11;

        b16 = 11;

        b22 = 11;

        b21 = 11;

        goto label09;

     label06:
        $b9 = (byte) $i4;

        $r7 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>($b9);

        virtualinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>($r7);

        goto label09;

     label07:
        if i15 <= 0 goto label08;

        $i6 = $i4 & 192;

        if $i6 != 128 goto label08;

        $i7 = i14;

        i14 = i14 + 1;

        $b8 = (byte) $i4;

        r3[$i7] = $b8;

        $i26 = (int) -1;

        i15 = i15 + $i26;

        if i15 != 0 goto label09;

        virtualinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void append(byte[],int,int)>(r3, 0, i14);

        i14 = 0;

        b16 = 0;

        b22 = 0;

        b21 = 0;

        goto label09;

     label08:
        $b5 = r3[0];

        $r6 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>($b5);

        virtualinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>($r6);

        i17 = i17 - i14;

        i14 = 0;

        b16 = 0;

        b22 = 0;

        b21 = 0;

     label09:
        i17 = i17 + 1;

        goto label01;

     label10:
        if b21 != 11 goto label12;

        i19 = 0;

     label11:
        if i19 >= i14 goto label12;

        b20 = r3[i19];

        $r5 = staticinvoke <com.adobe.xmp.impl.Latin1Converter: byte[] convertToUTF8(byte)>(b20);

        virtualinvoke $r8.<com.adobe.xmp.impl.ByteBuffer: void append(byte[])>($r5);

        i19 = i19 + 1;

        goto label11;

     label12:
        return $r8;

     label13:
        return r0;
    }

    private static byte[] convertToUTF8(byte)
    {
        byte[] $r0, $r2, $r3, $r5;
        short s1, $s2;
        byte b0;
        int $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r6;
        java.io.UnsupportedEncodingException $r4;

        b0 := @parameter0: byte;

        $s2 = (short) b0;

        s1 = $s2 & 255;

     label1:
        $i3 = (int) s1;

        if $i3 < 128 goto label6;

        $i4 = (int) s1;

        if $i4 == 129 goto label2;

        $i5 = (int) s1;

        if $i5 == 141 goto label2;

        $i6 = (int) s1;

        if $i6 == 143 goto label2;

        $i7 = (int) s1;

        if $i7 == 144 goto label2;

        $i8 = (int) s1;

        if $i8 != 157 goto label4;

     label2:
        $r5 = newarray (byte)[1];

        $r5[0] = 32;

     label3:
        return $r5;

     label4:
        $r6 = new java.lang.String;

        $r2 = newarray (byte)[1];

        $r2[0] = b0;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "cp1252");

        $r3 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label5:
        return $r3;

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

     label8:
        $r0 = newarray (byte)[1];

        $r0[0] = b0;

        return $r0;

        catch java.io.UnsupportedEncodingException from label1 to label3 with label7;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.impl.Latin1Converter: int STATE_UTF8CHAR> = 11;

        <com.adobe.xmp.impl.Latin1Converter: int STATE_START> = 0;

        return;
    }
}
