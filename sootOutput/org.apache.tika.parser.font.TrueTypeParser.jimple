public class org.apache.tika.parser.font.TrueTypeParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final org.apache.tika.mime.MediaType TYPE;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.font.TrueTypeParser r0;

        r0 := @this: org.apache.tika.parser.font.TrueTypeParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.font.TrueTypeParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.font.TrueTypeParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.font.TrueTypeParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.metadata.Property $r12, $r22, $r25;
        org.apache.tika.parser.font.TrueTypeParser r17;
        org.apache.fontbox.ttf.NamingTable $r30;
        org.apache.fontbox.ttf.TTFParser $r2;
        boolean $z0, $z1;
        java.util.List $r31;
        org.apache.fontbox.ttf.TrueTypeFont r19;
        org.apache.tika.parser.ParseContext r18;
        float $f0;
        org.apache.tika.mime.MediaType $r20;
        java.util.Calendar $r24, $r27;
        org.apache.fontbox.ttf.HeaderTable $r23, $r26, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.tika.io.TikaInputStream $r1;
        org.xml.sax.ContentHandler r5;
        java.lang.String $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r21, $r29;
        java.util.Iterator $r32;
        org.apache.tika.sax.XHTMLContentHandler $r4;
        org.apache.fontbox.ttf.NameRecord r7;
        java.io.File $r16;
        java.lang.Object $r6;
        java.io.InputStream r0;

        r17 := @this: org.apache.tika.parser.font.TrueTypeParser;

        r0 := @parameter0: java.io.InputStream;

        r5 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r18 := @parameter3: org.apache.tika.parser.ParseContext;

        $r1 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream cast(java.io.InputStream)>(r0);

        $r2 = new org.apache.fontbox.ttf.TTFParser;

        specialinvoke $r2.<org.apache.fontbox.ttf.TTFParser: void <init>()>();

        if $r1 == null goto label01;

        $z0 = virtualinvoke $r1.<org.apache.tika.io.TikaInputStream: boolean hasFile()>();

        if $z0 == 0 goto label01;

        $r16 = virtualinvoke $r1.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        r19 = virtualinvoke $r2.<org.apache.fontbox.ttf.TTFParser: org.apache.fontbox.ttf.TrueTypeFont parseTTF(java.io.File)>($r16);

        goto label02;

     label01:
        r19 = virtualinvoke $r2.<org.apache.fontbox.ttf.TTFParser: org.apache.fontbox.ttf.TrueTypeFont parseTTF(java.io.InputStream)>(r0);

     label02:
        $r20 = <org.apache.tika.parser.font.TrueTypeParser: org.apache.tika.mime.MediaType TYPE>;

        $r21 = virtualinvoke $r20.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r21);

        $r22 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATED>;

        $r23 = virtualinvoke r19.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>();

        $r24 = virtualinvoke $r23.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar getCreated()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.util.Calendar)>($r22, $r24);

        $r25 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property MODIFIED>;

        $r26 = virtualinvoke r19.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>();

        $r27 = virtualinvoke $r26.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar getModified()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.util.Calendar)>($r25, $r27);

        $r28 = virtualinvoke r19.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>();

        $f0 = virtualinvoke $r28.<org.apache.fontbox.ttf.HeaderTable: float getVersion()>();

        $r29 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("DocVersion", $r29);

        $r30 = virtualinvoke r19.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.NamingTable getNaming()>();

        $r31 = virtualinvoke $r30.<org.apache.fontbox.ttf.NamingTable: java.util.List getNameRecords()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.fontbox.ttf.NameRecord) $r6;

        $i0 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i0 != 1 goto label04;

        $r15 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("FontFamilyName", $r15);

     label04:
        $i1 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i1 != 2 goto label05;

        $r14 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("FontSubFamilyName", $r14);

     label05:
        $i2 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i2 != 4 goto label06;

        $r11 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("FontName", $r11);

        $r12 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TITLE>;

        $r13 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r12, $r13);

     label06:
        $i3 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i3 != 6 goto label07;

        $r10 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("PSName", $r10);

     label07:
        $i4 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i4 != 0 goto label08;

        $r9 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Copyright", $r9);

     label08:
        $i5 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: int getNameId()>();

        if $i5 != 7 goto label09;

        $r8 = virtualinvoke r7.<org.apache.fontbox.ttf.NameRecord: java.lang.String getString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Trademark", $r8);

     label09:
        goto label03;

     label10:
        $r4 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r5, r3);

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;
    }

    static void <clinit>()
    {
        java.util.Set $r2;
        org.apache.tika.mime.MediaType $r0, $r1;

        <org.apache.tika.parser.font.TrueTypeParser: long serialVersionUID> = 44788554612243032L;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("x-font-ttf");

        <org.apache.tika.parser.font.TrueTypeParser: org.apache.tika.mime.MediaType TYPE> = $r0;

        $r1 = <org.apache.tika.parser.font.TrueTypeParser: org.apache.tika.mime.MediaType TYPE>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        <org.apache.tika.parser.font.TrueTypeParser: java.util.Set SUPPORTED_TYPES> = $r2;

        return;
    }
}
