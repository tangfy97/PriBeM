final class org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder extends org.codehaus.stax2.ri.typed.ValueEncoderFactory$TypedScalarEncoder
{
    long _value;

    protected void <init>()
    {
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder;

        specialinvoke r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$TypedScalarEncoder: void <init>()>();

        return;
    }

    protected void reset(long)
    {
        long l0;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder;

        l0 := @parameter0: long;

        r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder: long _value> = l0;

        return;
    }

    public int encodeMore(char[], int, int)
    {
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder r0;
        int i0, $i2, i3;
        char[] r1;
        long $l1;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        $l1 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder: long _value>;

        $i2 = staticinvoke <org.codehaus.stax2.ri.typed.NumberUtil: int writeLong(long,char[],int)>($l1, r1, i0);

        return $i2;
    }

    public int encodeMore(byte[], int, int)
    {
        byte[] r1;
        org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder r0;
        int i0, $i2, i3;
        long $l1;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        $l1 = r0.<org.codehaus.stax2.ri.typed.ValueEncoderFactory$LongEncoder: long _value>;

        $i2 = staticinvoke <org.codehaus.stax2.ri.typed.NumberUtil: int writeLong(long,byte[],int)>($l1, r1, i0);

        return $i2;
    }
}
