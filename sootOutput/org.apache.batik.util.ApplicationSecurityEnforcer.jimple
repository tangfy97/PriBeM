public class org.apache.batik.util.ApplicationSecurityEnforcer extends java.lang.Object
{
    public static final java.lang.String EXCEPTION_ALIEN_SECURITY_MANAGER;
    public static final java.lang.String EXCEPTION_NO_POLICY_FILE;
    public static final java.lang.String PROPERTY_JAVA_SECURITY_POLICY;
    public static final java.lang.String JAR_PROTOCOL;
    public static final java.lang.String JAR_URL_FILE_SEPARATOR;
    public static final java.lang.String PROPERTY_APP_DEV_BASE;
    public static final java.lang.String PROPERTY_APP_JAR_BASE;
    public static final java.lang.String APP_MAIN_CLASS_DIR;
    protected java.lang.Class appMainClass;
    protected java.lang.String securityPolicy;
    protected java.lang.String appMainClassRelativeURL;
    protected org.apache.batik.util.BatikSecurityManager lastSecurityManagerInstalled;

    public void <init>(java.lang.Class, java.lang.String, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2, r3;
        org.apache.batik.util.ApplicationSecurityEnforcer r0;

        r0 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.util.ApplicationSecurityEnforcer: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(java.lang.Class, java.lang.String)
    {
        java.lang.StringBuffer $r3, $r6, $r7;
        java.lang.Class r1;
        java.lang.String r2, $r4, $r5, $r8;
        org.apache.batik.util.ApplicationSecurityEnforcer r0;

        r0 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.Class appMainClass> = r1;

        r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String securityPolicy> = r2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".class");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String appMainClassRelativeURL> = $r8;

        return;
    }

    public void enforceSecurity(boolean)
    {
        org.apache.batik.util.BatikSecurityManager $r2;
        java.lang.SecurityException $r3;
        java.lang.String $r4;
        java.lang.SecurityManager $r0;
        boolean z0;
        org.apache.batik.util.ApplicationSecurityEnforcer r1;

        r1 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label1;

        $r2 = r1.<org.apache.batik.util.ApplicationSecurityEnforcer: org.apache.batik.util.BatikSecurityManager lastSecurityManagerInstalled>;

        if $r0 == $r2 goto label1;

        $r3 = new java.lang.SecurityException;

        $r4 = staticinvoke <org.apache.batik.util.Messages: java.lang.String getString(java.lang.String)>("ApplicationSecurityEnforcer.message.security.exception.alien.security.manager");

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        if z0 == 0 goto label2;

        staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(null);

        virtualinvoke r1.<org.apache.batik.util.ApplicationSecurityEnforcer: void installSecurityManager()>();

        goto label3;

     label2:
        if $r0 == null goto label3;

        staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(null);

        r1.<org.apache.batik.util.ApplicationSecurityEnforcer: org.apache.batik.util.BatikSecurityManager lastSecurityManagerInstalled> = null;

     label3:
        return;
    }

    public java.net.URL getPolicyURL()
    {
        java.lang.Object[] $r6;
        java.net.URL $r4;
        java.lang.NullPointerException $r5;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        java.lang.String $r3, $r7, $r8;
        org.apache.batik.util.ApplicationSecurityEnforcer r0;

        r0 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        $r1 = r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.Class appMainClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String securityPolicy>;

        $r4 = virtualinvoke $r2.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r3);

        if $r4 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String securityPolicy>;

        $r6[0] = $r7;

        $r8 = staticinvoke <org.apache.batik.util.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("ApplicationSecurityEnforcer.message.null.pointer.exception.no.policy.file", $r6);

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        return $r4;
    }

    public void installSecurityManager()
    {
        java.net.URL $r6, $r12;
        java.lang.Error $r9;
        java.lang.String $r5, $r7, $r8, $r10, $r11;
        java.security.Policy $r0;
        boolean $z0, $z1, $z2;
        org.apache.batik.util.BatikSecurityManager $r1;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;
        org.apache.batik.util.ApplicationSecurityEnforcer r2;

        r2 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        $r0 = staticinvoke <java.security.Policy: java.security.Policy getPolicy()>();

        $r1 = new org.apache.batik.util.BatikSecurityManager;

        specialinvoke $r1.<org.apache.batik.util.BatikSecurityManager: void <init>()>();

        $r3 = r2.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.Class appMainClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.security.policy");

        if $r5 == null goto label1;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label2;

     label1:
        $r6 = virtualinvoke r2.<org.apache.batik.util.ApplicationSecurityEnforcer: java.net.URL getPolicyURL()>();

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String toString()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.security.policy", $r7);

     label2:
        $r11 = r2.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String appMainClassRelativeURL>;

        $r12 = virtualinvoke $r4.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r11);

        if $r12 != null goto label3;

        $r9 = new java.lang.Error;

        $r10 = r2.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String appMainClassRelativeURL>;

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        $r8 = virtualinvoke $r12.<java.net.URL: java.lang.String toString()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z0 == 0 goto label4;

        specialinvoke r2.<org.apache.batik.util.ApplicationSecurityEnforcer: void setJarBase(java.lang.String)>($r8);

        goto label5;

     label4:
        specialinvoke r2.<org.apache.batik.util.ApplicationSecurityEnforcer: void setDevBase(java.lang.String)>($r8);

     label5:
        staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r1);

        r2.<org.apache.batik.util.ApplicationSecurityEnforcer: org.apache.batik.util.BatikSecurityManager lastSecurityManagerInstalled> = $r1;

        virtualinvoke $r0.<java.security.Policy: void refresh()>();

        if $r5 == null goto label6;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label7;

     label6:
        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.security.policy", "");

     label7:
        return;
    }

    private void setJarBase(java.lang.String)
    {
        java.lang.Error $r14;
        java.lang.StringBuffer $r4, $r7, $r13;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r0, $r1, $r2, $r6, $r8, $r9, r11, r12;
        org.apache.batik.util.ApplicationSecurityEnforcer r5;

        r5 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        r11 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("app.jar.base");

        if $r0 != null goto label4;

        $r1 = "jar:";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i0);

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!/");

        $r6 = r5.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String appMainClassRelativeURL>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r8);

        $i4 = (int) -1;

        if $i1 != $i4 goto label1;

        $r14 = new java.lang.Error;

        specialinvoke $r14.<java.lang.Error: void <init>()>();

        throw $r14;

     label1:
        $r9 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = virtualinvoke $r9.<java.lang.String: int lastIndexOf(int)>(47);

        $i6 = (int) -1;

        if $i2 != $i6 goto label2;

        r12 = "";

        goto label3;

     label2:
        r12 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label3:
        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("app.jar.base", r12);

     label4:
        return;
    }

    private void setDevBase(java.lang.String)
    {
        java.lang.Error $r11;
        java.lang.StringBuffer $r3, $r6, $r10;
        int $i0, $i2;
        java.lang.String $r0, r1, $r5, $r7, $r8;
        org.apache.batik.util.ApplicationSecurityEnforcer r4;

        r4 := @this: org.apache.batik.util.ApplicationSecurityEnforcer;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("app.dev.base");

        if $r0 != null goto label2;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("classes/");

        $r5 = r4.<org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String appMainClassRelativeURL>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>($r7);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r11 = new java.lang.Error;

        specialinvoke $r11.<java.lang.Error: void <init>()>();

        throw $r11;

     label1:
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("app.dev.base", $r8);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String APP_MAIN_CLASS_DIR> = "classes/";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String PROPERTY_APP_JAR_BASE> = "app.jar.base";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String PROPERTY_APP_DEV_BASE> = "app.dev.base";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String JAR_URL_FILE_SEPARATOR> = "!/";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String JAR_PROTOCOL> = "jar:";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String PROPERTY_JAVA_SECURITY_POLICY> = "java.security.policy";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String EXCEPTION_NO_POLICY_FILE> = "ApplicationSecurityEnforcer.message.null.pointer.exception.no.policy.file";

        <org.apache.batik.util.ApplicationSecurityEnforcer: java.lang.String EXCEPTION_ALIEN_SECURITY_MANAGER> = "ApplicationSecurityEnforcer.message.security.exception.alien.security.manager";

        return;
    }
}
