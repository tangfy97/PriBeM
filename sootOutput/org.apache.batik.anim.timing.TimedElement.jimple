public abstract class org.apache.batik.anim.timing.TimedElement extends java.lang.Object implements org.apache.batik.util.SMILConstants
{
    public static final int FILL_REMOVE;
    public static final int FILL_FREEZE;
    public static final int RESTART_ALWAYS;
    public static final int RESTART_WHEN_NOT_ACTIVE;
    public static final int RESTART_NEVER;
    public static final float INDEFINITE;
    public static final float UNRESOLVED;
    protected org.apache.batik.anim.timing.TimedDocumentRoot root;
    protected org.apache.batik.anim.timing.TimeContainer parent;
    protected org.apache.batik.anim.timing.TimingSpecifier[] beginTimes;
    protected org.apache.batik.anim.timing.TimingSpecifier[] endTimes;
    protected float simpleDur;
    protected boolean durMedia;
    protected float repeatCount;
    protected float repeatDur;
    protected int currentRepeatIteration;
    protected float lastRepeatTime;
    protected int fillMode;
    protected int restartMode;
    protected float min;
    protected boolean minMedia;
    protected float max;
    protected boolean maxMedia;
    protected boolean isActive;
    protected boolean isFrozen;
    protected float lastSampleTime;
    protected float repeatDuration;
    protected java.util.List beginInstanceTimes;
    protected java.util.List endInstanceTimes;
    protected org.apache.batik.anim.timing.Interval currentInterval;
    protected float lastIntervalEnd;
    protected org.apache.batik.anim.timing.Interval previousInterval;
    protected java.util.LinkedList beginDependents;
    protected java.util.LinkedList endDependents;
    protected boolean shouldUpdateCurrentInterval;
    protected boolean hasParsed;
    protected java.util.Map handledEvents;
    protected boolean isSampling;
    protected boolean hasPropagated;
    protected static final java.lang.String RESOURCES;
    protected static org.apache.batik.i18n.LocalizableSupport localizableSupport;
    static java.lang.Class class$org$apache$batik$anim$timing$TimedElement;

    public void <init>()
    {
        java.util.HashMap $r5;
        org.apache.batik.anim.timing.TimingSpecifier[] $r6, $r7;
        java.util.ArrayList $r1, $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        java.util.LinkedList $r3, $r4;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList beginDependents> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList endDependents> = $r4;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.anim.timing.TimedElement: java.util.Map handledEvents> = $r5;

        $r6 = newarray (org.apache.batik.anim.timing.TimingSpecifier)[0];

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes> = $r6;

        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes>;

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes> = $r7;

        r0.<org.apache.batik.anim.timing.TimedElement: float simpleDur> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: float repeatCount> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: float repeatDur> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: float max> = #InfinityF;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastIntervalEnd> = #-InfinityF;

        return;
    }

    public org.apache.batik.anim.timing.TimedDocumentRoot getRoot()
    {
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        return $r1;
    }

    public float getActiveTime()
    {
        float $f0;
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $f0 = r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime>;

        return $f0;
    }

    public float getSimpleTime()
    {
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $f1 = r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime>;

        $f0 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f2 = $f1 - $f0;

        return $f2;
    }

    protected float addInstanceTime(org.apache.batik.anim.timing.InstanceTime, boolean)
    {
        org.apache.batik.anim.timing.InstanceTime r2;
        org.apache.batik.anim.timing.TimedDocumentRoot $r3, $r4, $r5, $r7;
        int $i0, $i1, i2;
        boolean z0, $z1, $z2, $z3;
        java.util.List r1, $r6;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, f1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r2 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        z0 := @parameter1: boolean;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 1;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        goto label2;

     label1:
        $r6 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes>;

     label2:
        r1 = $r6;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r6, r2);

        i2 = $i0;

        if $i0 >= 0 goto label3;

        $i1 = $i0 + 1;

        i2 = neg $i1;

     label3:
        interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>(i2, r2);

        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z1 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isSampling()>();

        if $z1 == 0 goto label4;

        $z2 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isSampling>;

        if $z2 != 0 goto label4;

        $r4 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $f0 = virtualinvoke $r4.<org.apache.batik.anim.timing.TimedDocumentRoot: float getCurrentTime()>();

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z3 = virtualinvoke $r5.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isHyperlinking()>();

        f1 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float sampleAt(float,boolean)>($f0, $z3);

        goto label5;

     label4:
        f1 = #InfinityF;

     label5:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 0;

        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        virtualinvoke $r7.<org.apache.batik.anim.timing.TimedDocumentRoot: void currentIntervalWillUpdate()>();

        return f1;
    }

    protected float removeInstanceTime(org.apache.batik.anim.timing.InstanceTime, boolean)
    {
        org.apache.batik.anim.timing.InstanceTime r2, r8, r9;
        org.apache.batik.anim.timing.TimedDocumentRoot $r5, $r6, $r10, $r11;
        int $i0, $i1, $i2, i3, $i4, i5, $i7;
        boolean z0, $z1, $z2, $z3;
        java.util.List r1, $r7;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, f1;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r2 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        z0 := @parameter1: boolean;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 1;

        if z0 == 0 goto label01;

        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        goto label02;

     label01:
        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes>;

     label02:
        r1 = $r7;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r7, r2);

        i3 = $i0;

        goto label06;

     label03:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (org.apache.batik.anim.timing.InstanceTime) $r3;

        if r8 != r2 goto label04;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i3);

        goto label07;

     label04:
        $i1 = virtualinvoke r8.<org.apache.batik.anim.timing.InstanceTime: int compareTo(java.lang.Object)>(r2);

        if $i1 == 0 goto label05;

        goto label07;

     label05:
        $i7 = (int) -1;

        i3 = i3 + $i7;

     label06:
        if i3 >= 0 goto label03;

     label07:
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        i5 = $i0 + 1;

        goto label11;

     label08:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        r9 = (org.apache.batik.anim.timing.InstanceTime) $r4;

        if r9 != r2 goto label09;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i5);

        goto label12;

     label09:
        $i2 = virtualinvoke r9.<org.apache.batik.anim.timing.InstanceTime: int compareTo(java.lang.Object)>(r2);

        if $i2 == 0 goto label10;

        goto label12;

     label10:
        i5 = i5 + 1;

     label11:
        if i5 < $i4 goto label08;

     label12:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

        $r10 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z3 = virtualinvoke $r10.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isSampling()>();

        if $z3 == 0 goto label13;

        $z1 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isSampling>;

        if $z1 != 0 goto label13;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $f0 = virtualinvoke $r5.<org.apache.batik.anim.timing.TimedDocumentRoot: float getCurrentTime()>();

        $r6 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z2 = virtualinvoke $r6.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isHyperlinking()>();

        f1 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float sampleAt(float,boolean)>($f0, $z2);

        goto label14;

     label13:
        f1 = #InfinityF;

     label14:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 0;

        $r11 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        virtualinvoke $r11.<org.apache.batik.anim.timing.TimedDocumentRoot: void currentIntervalWillUpdate()>();

        return f1;
    }

    protected float instanceTimeChanged(org.apache.batik.anim.timing.InstanceTime, boolean)
    {
        org.apache.batik.anim.timing.InstanceTime r4;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1, $r2, $r3;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, f1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r4 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        z3 := @parameter1: boolean;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 1;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isSampling()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isSampling>;

        if $z1 != 0 goto label1;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $f0 = virtualinvoke $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: float getCurrentTime()>();

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z2 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean isHyperlinking()>();

        f1 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float sampleAt(float,boolean)>($f0, $z2);

        goto label2;

     label1:
        f1 = #InfinityF;

     label2:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated> = 0;

        return f1;
    }

    protected void addDependent(org.apache.batik.anim.timing.TimingSpecifier, boolean)
    {
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.TimingSpecifier r1;
        java.util.LinkedList $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r1 := @parameter0: org.apache.batik.anim.timing.TimingSpecifier;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList beginDependents>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList endDependents>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    protected void removeDependent(org.apache.batik.anim.timing.TimingSpecifier, boolean)
    {
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.TimingSpecifier r1;
        java.util.LinkedList $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r1 := @parameter0: org.apache.batik.anim.timing.TimingSpecifier;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList beginDependents>;

        virtualinvoke $r3.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList endDependents>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public float getSimpleDur()
    {
        org.apache.batik.anim.timing.TimingSpecifier[] $r1;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean durMedia>;

        if $z0 == 0 goto label1;

        $f4 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getImplicitDur()>();

        return $f4;

     label1:
        $f0 = r0.<org.apache.batik.anim.timing.TimedElement: float simpleDur>;

        $z1 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f0);

        if $z1 == 0 goto label3;

        $f2 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatCount>;

        $z2 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f2);

        if $z2 == 0 goto label2;

        $f3 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDur>;

        $z3 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f3);

        if $z3 == 0 goto label2;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label2;

        return #InfinityF;

     label2:
        $f5 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getImplicitDur()>();

        return $f5;

     label3:
        $f1 = r0.<org.apache.batik.anim.timing.TimedElement: float simpleDur>;

        return $f1;
    }

    public static boolean isUnresolved(float)
    {
        float f0;
        boolean $z0;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        return $z0;
    }

    public float getActiveDur(float, float)
    {
        byte $b0, $b1, $b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, f1, $f2, $f3, $f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, f21, $f22, $f23, f24;
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f12 := @parameter0: float;

        f1 := @parameter1: float;

        $f0 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        $z0 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z0 != 0 goto label01;

        $b2 = $f0 cmpl #InfinityF;

        if $b2 != 0 goto label01;

        $f15 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minusTime(float,float)>(f1, f12);

        $f17 = r0.<org.apache.batik.anim.timing.TimedElement: float max>;

        $f16 = r0.<org.apache.batik.anim.timing.TimedElement: float min>;

        $f18 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float maxTime(float,float)>($f16, $f15);

        $f19 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minTime(float,float)>($f17, $f18);

        r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration> = $f19;

        $f20 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration>;

        return $f20;

     label01:
        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label02;

        f21 = 0.0F;

        goto label08;

     label02:
        $f2 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDur>;

        $z1 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f2);

        if $z1 == 0 goto label03;

        $f14 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatCount>;

        $z4 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f14);

        if $z4 == 0 goto label03;

        f21 = $f0;

        goto label08;

     label03:
        $f3 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatCount>;

        $z2 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f3);

        if $z2 == 0 goto label04;

        $f22 = #InfinityF;

        goto label05;

     label04:
        $f4 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatCount>;

        $f22 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float multiplyTime(float,float)>($f0, $f4);

     label05:
        f5 = $f22;

        $f6 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDur>;

        $z3 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>($f6);

        if $z3 == 0 goto label06;

        $f23 = #InfinityF;

        goto label07;

     label06:
        $f23 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDur>;

     label07:
        $f7 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minTime(float,float)>(f5, $f23);

        f21 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minTime(float,float)>($f7, #InfinityF);

     label08:
        $z5 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z5 != 0 goto label09;

        $b1 = f1 cmpl #InfinityF;

        if $b1 != 0 goto label10;

     label09:
        f24 = f21;

        goto label11;

     label10:
        $f13 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minusTime(float,float)>(f1, f12);

        f24 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minTime(float,float)>(f21, $f13);

     label11:
        r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration> = f21;

        $f9 = r0.<org.apache.batik.anim.timing.TimedElement: float max>;

        $f8 = r0.<org.apache.batik.anim.timing.TimedElement: float min>;

        $f10 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float maxTime(float,float)>($f8, f24);

        $f11 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float minTime(float,float)>($f9, $f10);

        return $f11;
    }

    protected float minusTime(float, float)
    {
        byte $b0, $b1;
        org.apache.batik.anim.timing.TimedElement r0;
        float f0, f1, $f2;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z1 == 0 goto label2;

     label1:
        return #NaNF;

     label2:
        $b0 = f0 cmpl #InfinityF;

        if $b0 == 0 goto label3;

        $b1 = f1 cmpl #InfinityF;

        if $b1 != 0 goto label4;

     label3:
        return #InfinityF;

     label4:
        $f2 = f0 - f1;

        return $f2;
    }

    protected float multiplyTime(float, float)
    {
        byte $b0;
        org.apache.batik.anim.timing.TimedElement r0;
        float f0, f1, $f2;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z0 != 0 goto label1;

        $b0 = f0 cmpl #InfinityF;

        if $b0 != 0 goto label2;

     label1:
        return f0;

     label2:
        $f2 = f0 * f1;

        return $f2;
    }

    protected float minTime(float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        int $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.anim.timing.TimedElement r0;
        float f0, f1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label01;

        $b1 = f1 cmpl 0.0F;

        if $b1 != 0 goto label02;

     label01:
        return 0.0F;

     label02:
        $b2 = f0 cmpl #InfinityF;

        if $b2 == 0 goto label03;

        $z5 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z5 == 0 goto label04;

     label03:
        $b3 = f1 cmpl #InfinityF;

        if $b3 == 0 goto label04;

        $z4 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z4 != 0 goto label04;

        return f1;

     label04:
        $b7 = f1 cmpl #InfinityF;

        if $b7 == 0 goto label05;

        $z3 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z3 == 0 goto label06;

     label05:
        $b4 = f0 cmpl #InfinityF;

        if $b4 == 0 goto label06;

        $z2 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z2 != 0 goto label06;

        return f0;

     label06:
        $b8 = f0 cmpl #InfinityF;

        if $b8 != 0 goto label07;

        $z1 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z1 != 0 goto label08;

     label07:
        $z0 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z0 == 0 goto label09;

        $b6 = f1 cmpl #InfinityF;

        if $b6 != 0 goto label09;

     label08:
        return #InfinityF;

     label09:
        $b5 = f0 cmpg f1;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label10;

        return f0;

     label10:
        return f1;
    }

    protected float maxTime(float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        int $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.anim.timing.TimedElement r0;
        float f0, f1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl #InfinityF;

        if $b0 == 0 goto label1;

        $z5 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z5 == 0 goto label2;

     label1:
        $b1 = f1 cmpl #InfinityF;

        if $b1 == 0 goto label2;

        $z4 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z4 != 0 goto label2;

        return f0;

     label2:
        $b5 = f1 cmpl #InfinityF;

        if $b5 == 0 goto label3;

        $z3 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z3 == 0 goto label4;

     label3:
        $b2 = f0 cmpl #InfinityF;

        if $b2 == 0 goto label4;

        $z2 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z2 != 0 goto label4;

        return f1;

     label4:
        $b6 = f0 cmpl #InfinityF;

        if $b6 != 0 goto label5;

        $z1 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f1);

        if $z1 != 0 goto label6;

     label5:
        $z0 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f0);

        if $z0 == 0 goto label7;

        $b4 = f1 cmpl #InfinityF;

        if $b4 != 0 goto label7;

     label6:
        return #NaNF;

     label7:
        $b3 = f0 cmpl f1;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label8;

        return f0;

     label8:
        return f1;
    }

    protected float getImplicitDur()
    {
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        return #NaNF;
    }

    protected float notifyNewInterval(org.apache.batik.anim.timing.Interval)
    {
        byte $b0, $b1;
        int $i2, $i3;
        java.util.LinkedList $r1, $r5;
        org.apache.batik.anim.timing.TimingSpecifier r8, r9;
        boolean $z0, $z1;
        java.util.Iterator $r2, $r6;
        org.apache.batik.anim.timing.Interval r4;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, $f1, f2;
        java.lang.Object $r3, $r7;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r4 := @parameter0: org.apache.batik.anim.timing.Interval;

        f2 = #InfinityF;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList beginDependents>;

        $r2 = virtualinvoke $r1.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.batik.anim.timing.TimingSpecifier) $r3;

        $f0 = virtualinvoke r8.<org.apache.batik.anim.timing.TimingSpecifier: float newInterval(org.apache.batik.anim.timing.Interval)>(r4);

        $b0 = $f0 cmpg f2;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label2;

        f2 = $f0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList endDependents>;

        $r6 = virtualinvoke $r5.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.batik.anim.timing.TimingSpecifier) $r7;

        $f1 = virtualinvoke r9.<org.apache.batik.anim.timing.TimingSpecifier: float newInterval(org.apache.batik.anim.timing.Interval)>(r4);

        $b1 = $f1 cmpg f2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label4;

        f2 = $f1;

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return f2;
    }

    protected float notifyRemoveInterval(org.apache.batik.anim.timing.Interval)
    {
        byte $b0, $b1;
        int $i2, $i3;
        java.util.LinkedList $r1, $r5;
        org.apache.batik.anim.timing.TimingSpecifier r8, r9;
        boolean $z0, $z1;
        java.util.Iterator $r2, $r6;
        org.apache.batik.anim.timing.Interval r4;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, $f1, f2;
        java.lang.Object $r3, $r7;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r4 := @parameter0: org.apache.batik.anim.timing.Interval;

        f2 = #InfinityF;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList beginDependents>;

        $r2 = virtualinvoke $r1.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.batik.anim.timing.TimingSpecifier) $r3;

        $f0 = virtualinvoke r8.<org.apache.batik.anim.timing.TimingSpecifier: float removeInterval(org.apache.batik.anim.timing.Interval)>(r4);

        $b0 = $f0 cmpg f2;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label2;

        f2 = $f0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.LinkedList endDependents>;

        $r6 = virtualinvoke $r5.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.batik.anim.timing.TimingSpecifier) $r7;

        $f1 = virtualinvoke r9.<org.apache.batik.anim.timing.TimingSpecifier: float removeInterval(org.apache.batik.anim.timing.Interval)>(r4);

        $b1 = $f1 cmpg f2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label4;

        f2 = $f1;

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return f2;
    }

    protected float sampleAt(float, boolean)
    {
        byte $b2, $b3, $b4, $b6, $b7, $b8, $b9, $b10, $b12, $b13, $b16, $b17, $b20, $b21, $b22, $b26, $b27, $b28, $b29, $b30;
        java.util.Map $r1, $r12;
        org.apache.batik.anim.timing.Interval $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r39, $r40, $r41, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        org.w3c.dom.events.Event r43;
        org.apache.batik.anim.timing.TimedDocumentRoot $r37;
        int $i0, $i1, $i5, $i11, $i14, $i15, $i18, $i19, $i23, $i24, $i25, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        java.lang.Object $r4, $r5, $r6, $r8, $r10;
        org.apache.batik.anim.timing.InstanceTime $r21;
        java.util.Set $r2, r44;
        java.lang.String $r38;
        java.util.Map$Entry r42;
        org.apache.batik.anim.timing.TimedElement r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16, $z17, z19, $z20, z21, $z22, $z23, $z24, z25, $z26, $z27, z28, z29, $z30, z31, $z32, $z33, $z34, $z35, $z36, $z37, z38, $z39, z40, z41, z42, z43, z44, z45, $z46, $z47;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, f51, f52, f53, $f54, f55, f56, $f57;
        org.apache.batik.anim.timing.EventLikeTimingSpecifier r9, $r11;
        java.util.Iterator $r3, $r7, $r45;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f0 := @parameter0: float;

        z14 := @parameter1: boolean;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isSampling> = 1;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.Map handledEvents>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label19;

     label01:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        r43 = (org.w3c.dom.events.Event) $r5;

        $r6 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        r44 = (java.util.Set) $r6;

        $r7 = interfaceinvoke r44.<java.util.Set: java.util.Iterator iterator()>();

        z15 = 0;

        z45 = 0;

        z44 = 0;

        z43 = 0;

        z16 = 0;

        z42 = 0;

        z41 = 0;

        z40 = 0;

        goto label04;

     label02:
        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.apache.batik.anim.timing.EventLikeTimingSpecifier) $r10;

        $z4 = virtualinvoke $r11.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin()>();

        if $z4 == 0 goto label03;

        z15 = 1;

        z45 = 1;

        z44 = 1;

        z43 = 1;

        goto label04;

     label03:
        z16 = 1;

        z42 = 1;

        z41 = 1;

        z40 = 1;

     label04:
        $z17 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label05;

        if z44 == 0 goto label02;

        if z42 == 0 goto label02;

     label05:
        if z43 == 0 goto label11;

        if z41 == 0 goto label11;

        $z3 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z3 == 0 goto label06;

        $i1 = r0.<org.apache.batik.anim.timing.TimedElement: int restartMode>;

        if $i1 != 0 goto label07;

     label06:
        $z47 = 1;

        $z46 = 1;

        goto label08;

     label07:
        $z47 = 0;

        $z46 = 0;

     label08:
        z19 = $z46;

        if $z47 != 0 goto label09;

        $z20 = 1;

        goto label10;

     label09:
        $z20 = 0;

     label10:
        z21 = $z20;

        goto label14;

     label11:
        if z45 == 0 goto label13;

        $z2 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z2 == 0 goto label12;

        $i0 = r0.<org.apache.batik.anim.timing.TimedElement: int restartMode>;

        if $i0 != 0 goto label13;

     label12:
        z19 = 1;

        z21 = 0;

        goto label14;

     label13:
        if z40 == 0 goto label19;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z0 == 0 goto label19;

        z19 = 0;

        z21 = 1;

     label14:
        $r45 = interfaceinvoke r44.<java.util.Set: java.util.Iterator iterator()>();

        goto label18;

     label15:
        $r8 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.batik.anim.timing.EventLikeTimingSpecifier) $r8;

        $z1 = virtualinvoke r9.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin()>();

        if $z1 == 0 goto label16;

        if z19 != 0 goto label17;

     label16:
        if $z1 != 0 goto label18;

        if z21 == 0 goto label18;

     label17:
        virtualinvoke r9.<org.apache.batik.anim.timing.EventLikeTimingSpecifier: void resolve(org.w3c.dom.events.Event)>(r43);

        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

     label18:
        $z22 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z22 != 0 goto label15;

     label19:
        $z23 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z23 != 0 goto label01;

        $r12 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.Map handledEvents>;

        interfaceinvoke $r12.<java.util.Map: void clear()>();

        $r13 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r13 == null goto label21;

        $r40 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f48 = virtualinvoke $r40.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $f49 = r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime>;

        $b27 = $f49 cmpg $f48;

        $i31 = (int) $b27;

        if $i31 >= 0 goto label21;

        $b28 = f0 cmpl $f48;

        $i32 = (int) $b28;

        if $i32 < 0 goto label21;

        $z13 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z13 != 0 goto label20;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void toActive(float)>($f48);

     label20:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive> = 1;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = $f48;

        $r41 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f50 = virtualinvoke $r41.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,float,int)>("beginEvent", $f50, 0);

     label21:
        $r46 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r46 == null goto label22;

        $r39 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f47 = virtualinvoke $r39.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $b26 = f0 cmpl $f47;

        $i33 = (int) $b26;

        if $i33 < 0 goto label22;

        $z24 = 1;

        goto label23;

     label22:
        $z24 = 0;

     label23:
        z25 = $z24;

        $r47 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r47 == null goto label26;

        $r36 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f36 = virtualinvoke $r36.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $b20 = f0 cmpl $f36;

        $i34 = (int) $b20;

        if $i34 < 0 goto label26;

        $f37 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        goto label25;

     label24:
        $f44 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f45 = $f44 + $f37;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = $f45;

        $i23 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        $i24 = $i23 + 1;

        r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration> = $i24;

        $r37 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $r38 = virtualinvoke $r37.<org.apache.batik.anim.timing.TimedDocumentRoot: java.lang.String getRepeatEventName()>();

        $f46 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $i25 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,float,int)>($r38, $f46, $i25);

     label25:
        $f38 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f39 = f0 - $f38;

        $b21 = $f39 cmpl $f37;

        $i35 = (int) $b21;

        if $i35 < 0 goto label26;

        $f40 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f43 = $f40 + $f37;

        $f41 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration>;

        $f42 = $f36 + $f41;

        $b22 = $f43 cmpg $f42;

        $i36 = (int) $b22;

        if $i36 < 0 goto label24;

     label26:
        f51 = #InfinityF;

        if z14 == 0 goto label56;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 1;

        goto label56;

     label27:
        if z25 == 0 goto label30;

        $r26 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval> = $r26;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive> = 0;

        $i11 = r0.<org.apache.batik.anim.timing.TimedElement: int fillMode>;

        if $i11 != 1 goto label28;

        $z26 = 1;

        goto label29;

     label28:
        $z26 = 0;

     label29:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = $z26;

        $z5 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void toInactive(boolean,boolean)>(0, $z5);

        $r27 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f12 = virtualinvoke $r27.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,float,int)>("endEvent", $f12, 0);

     label30:
        $r48 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r48 != null goto label31;

        $r25 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        if $r25 != null goto label31;

        $z27 = 1;

        goto label32;

     label31:
        $z27 = 0;

     label32:
        z28 = $z27;

        $r49 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r49 == null goto label33;

        if z14 == 0 goto label33;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = 0;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void toInactive(boolean,boolean)>(0, 0);

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval> = null;

     label33:
        $r50 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r50 == null goto label34;

        if z25 == 0 goto label44;

     label34:
        if z28 != 0 goto label35;

        if z14 != 0 goto label35;

        $i5 = r0.<org.apache.batik.anim.timing.TimedElement: int restartMode>;

        if $i5 == 2 goto label43;

     label35:
        z29 = 1;

        if z28 != 0 goto label36;

        if z14 == 0 goto label37;

     label36:
        f52 = #-InfinityF;

        goto label40;

     label37:
        $r15 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f3 = virtualinvoke $r15.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        f52 = $f3;

        $r16 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f4 = virtualinvoke $r16.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $b4 = $f3 cmpl $f4;

        if $b4 == 0 goto label38;

        $z30 = 1;

        goto label39;

     label38:
        $z30 = 0;

     label39:
        z29 = $z30;

     label40:
        $r51 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval computeInterval(boolean,boolean,float,boolean)>(z28, 0, f52, z29);

        if $r51 != null goto label41;

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval> = null;

        goto label42;

     label41:
        $f1 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float selectNewInterval(float,org.apache.batik.anim.timing.Interval)>(f0, $r51);

        $b2 = $f1 cmpg f51;

        $i37 = (int) $b2;

        if $i37 >= 0 goto label42;

        f51 = $f1;

     label42:
        goto label53;

     label43:
        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval> = null;

        goto label53;

     label44:
        $r17 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f5 = virtualinvoke $r17.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $b6 = $f5 cmpl f0;

        $i38 = (int) $b6;

        if $i38 <= 0 goto label52;

        z31 = 1;

        $r22 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        if $r22 != null goto label45;

        f53 = #-InfinityF;

        goto label48;

     label45:
        $r23 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f9 = virtualinvoke $r23.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        f53 = $f9;

        $r24 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f10 = virtualinvoke $r24.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $b9 = $f9 cmpl $f10;

        if $b9 == 0 goto label46;

        $z32 = 1;

        goto label47;

     label46:
        $z32 = 0;

     label47:
        z31 = $z32;

     label48:
        $r52 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval computeInterval(boolean,boolean,float,boolean)>(0, 0, f53, z31);

        $r53 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f54 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float notifyRemoveInterval(org.apache.batik.anim.timing.Interval)>($r53);

        $b29 = $f54 cmpg f51;

        $i39 = (int) $b29;

        if $i39 >= 0 goto label49;

        f51 = $f54;

     label49:
        if $r52 != null goto label50;

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval> = null;

        goto label51;

     label50:
        $f11 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float selectNewInterval(float,org.apache.batik.anim.timing.Interval)>(f0, $r52);

        $b10 = $f11 cmpg f51;

        $i40 = (int) $b10;

        if $i40 >= 0 goto label51;

        f51 = $f11;

     label51:
        goto label53;

     label52:
        $r18 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval computeInterval(boolean,boolean,float,boolean)>(0, 1, $f5, 1);

        $f6 = virtualinvoke $r18.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $r19 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f7 = virtualinvoke $r19.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $b7 = $f7 cmpl $f6;

        if $b7 == 0 goto label53;

        $r20 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $r21 = virtualinvoke $r18.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime getEndInstanceTime()>();

        $f8 = virtualinvoke $r20.<org.apache.batik.anim.timing.Interval: float setEnd(float,org.apache.batik.anim.timing.InstanceTime)>($f6, $r21);

        $b8 = $f8 cmpg f51;

        $i41 = (int) $b8;

        if $i41 >= 0 goto label53;

        f51 = $f8;

     label53:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval> = 0;

        z14 = 0;

        $r54 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r54 == null goto label54;

        $r14 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f2 = virtualinvoke $r14.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $b3 = f0 cmpl $f2;

        $i42 = (int) $b3;

        if $i42 < 0 goto label54;

        $z33 = 1;

        goto label55;

     label54:
        $z33 = 0;

     label55:
        z25 = $z33;

     label56:
        $z34 = r0.<org.apache.batik.anim.timing.TimedElement: boolean shouldUpdateCurrentInterval>;

        if $z34 != 0 goto label27;

        if z25 != 0 goto label27;

        $f13 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        $z6 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z6 == 0 goto label60;

        $z11 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        if $z11 != 0 goto label60;

        $r35 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f31 = virtualinvoke $r35.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $f33 = f0 - $f31;

        $f32 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration>;

        $b17 = $f33 cmpl $f32;

        $i43 = (int) $b17;

        if $i43 < 0 goto label59;

        $i19 = r0.<org.apache.batik.anim.timing.TimedElement: int fillMode>;

        if $i19 != 1 goto label57;

        $z35 = 1;

        goto label58;

     label57:
        $z35 = 0;

     label58:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = $z35;

        $z12 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void toInactive(boolean,boolean)>(1, $z12);

        goto label60;

     label59:
        $f34 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f35 = f0 - $f34;

        $i18 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void sampledAt(float,float,int)>($f35, $f13, $i18);

     label60:
        $z36 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        if $z36 == 0 goto label69;

        $z10 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z10 == 0 goto label63;

        $r33 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f22 = virtualinvoke $r33.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $f23 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration>;

        $f25 = $f22 + $f23;

        $f24 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        f55 = $f25 - $f24;

        $f26 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f27 = $f26 + $f13;

        $r34 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f28 = virtualinvoke $r34.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $f29 = r0.<org.apache.batik.anim.timing.TimedElement: float repeatDuration>;

        $f30 = $f28 + $f29;

        $b16 = $f27 cmpl $f30;

        if $b16 != 0 goto label61;

        $z37 = 1;

        goto label62;

     label61:
        $z37 = 0;

     label62:
        z38 = $z37;

        goto label66;

     label63:
        $r31 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f16 = virtualinvoke $r31.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $f17 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        f55 = $f16 - $f17;

        $f18 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f19 = $f18 + $f13;

        $r32 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval previousInterval>;

        $f20 = virtualinvoke $r32.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $b13 = $f19 cmpl $f20;

        if $b13 != 0 goto label64;

        $z39 = 1;

        goto label65;

     label64:
        $z39 = 0;

     label65:
        z38 = $z39;

     label66:
        if z38 == 0 goto label67;

        $i15 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void sampledLastValue(int)>($i15);

        goto label68;

     label67:
        $f21 = f55 % $f13;

        $i14 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void sampledAt(float,float,int)>($f21, $f13, $i14);

     label68:
        goto label70;

     label69:
        $z7 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z7 != 0 goto label70;

     label70:
        r0.<org.apache.batik.anim.timing.TimedElement: boolean isSampling> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime> = f0;

        $r28 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r28 == null goto label76;

        $r29 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f14 = virtualinvoke $r29.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        f56 = $f14 - f0;

        $b12 = f56 cmpg 0.0F;

        $i44 = (int) $b12;

        if $i44 > 0 goto label74;

        $z8 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: boolean isConstantAnimation()>();

        if $z8 != 0 goto label71;

        $z9 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        if $z9 == 0 goto label72;

     label71:
        $r30 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f15 = virtualinvoke $r30.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $f57 = $f15 - f0;

        goto label73;

     label72:
        $f57 = 0.0F;

     label73:
        f56 = $f57;

     label74:
        $b30 = f51 cmpg f56;

        $i45 = (int) $b30;

        if $i45 >= 0 goto label75;

        return f51;

     label75:
        return f56;

     label76:
        return f51;
    }

    protected boolean endHasEventConditions()
    {
        org.apache.batik.anim.timing.TimedElement r0;
        int $i0, i1;
        org.apache.batik.anim.timing.TimingSpecifier[] $r1, $r2;
        org.apache.batik.anim.timing.TimingSpecifier $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $r3 = $r2[i1];

        $z0 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimingSpecifier: boolean isEventCondition()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $i0 = lengthof $r1;

        if i1 < $i0 goto label1;

        return 0;
    }

    protected float selectNewInterval(float, org.apache.batik.anim.timing.Interval)
    {
        org.apache.batik.anim.timing.TimedDocumentRoot $r5;
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r6;
        org.apache.batik.anim.timing.Interval r1, $r2, $r3, $r4;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, $f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f2 := @parameter0: float;

        r1 := @parameter1: org.apache.batik.anim.timing.Interval;

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval> = r1;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f0 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float notifyNewInterval(org.apache.batik.anim.timing.Interval)>($r2);

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f1 = virtualinvoke $r3.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        f12 = $f1;

        $b0 = f2 cmpl $f1;

        $i7 = (int) $b0;

        if $i7 < 0 goto label4;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = $f1;

        $b1 = $f1 cmpg 0.0F;

        $i8 = (int) $b1;

        if $i8 >= 0 goto label1;

        f12 = 0.0F;

     label1:
        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void toActive(float)>(f12);

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive> = 1;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = 0;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,float,int)>("beginEvent", f12, 0);

        $f3 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        $r4 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f4 = virtualinvoke $r4.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        goto label3;

     label2:
        $f9 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f10 = $f9 + $f3;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = $f10;

        $i4 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration> = $i5;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $r6 = virtualinvoke $r5.<org.apache.batik.anim.timing.TimedDocumentRoot: java.lang.String getRepeatEventName()>();

        $f11 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $i6 = r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration>;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,float,int)>($r6, $f11, $i6);

     label3:
        $f5 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f6 = f2 - $f5;

        $b2 = $f6 cmpl $f3;

        $i9 = (int) $b2;

        if $i9 < 0 goto label4;

        $f7 = r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime>;

        $f8 = $f7 + $f3;

        $b3 = $f8 cmpg $f4;

        $i10 = (int) $b3;

        if $i10 < 0 goto label2;

     label4:
        return $f0;
    }

    protected org.apache.batik.anim.timing.Interval computeInterval(boolean, boolean, float, boolean)
    {
        org.apache.batik.anim.timing.InstanceTime $r16, r17, r18, r19;
        byte $b0, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15;
        org.apache.batik.anim.timing.TimeContainer $r5;
        org.apache.batik.anim.timing.Interval $r10, $r11, $r21;
        org.apache.batik.anim.timing.TimingSpecifier[] $r7;
        org.apache.batik.anim.timing.TimedElement r0;
        boolean $z0, z1, z2, $z3, $z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, $z14;
        java.util.List $r1, $r3, $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13, $f14;
        int $i1, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.util.Iterator $r2, $r4;
        java.lang.Object $r6, $r9, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        z5 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        f10 := @parameter2: float;

        z2 := @parameter3: boolean;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimeContainer parent>;

        $f0 = virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label01;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (org.apache.batik.anim.timing.InstanceTime) $r15;

        goto label02;

     label01:
        $r16 = null;

     label02:
        r17 = $r16;

        z12 = 1;

        r18 = null;

        r19 = null;

        goto label03;

     label03:
        if z1 == 0 goto label06;

        f11 = f10;

        goto label05;

     label04:
        $r14 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.batik.anim.timing.InstanceTime) $r14;

        $f9 = virtualinvoke r19.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        $b14 = $f9 cmpl f11;

        $i17 = (int) $b14;

        if $i17 <= 0 goto label05;

        goto label10;

     label05:
        $z11 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label04;

        goto label10;

     label06:
        $z13 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z13 != 0 goto label07;

        return null;

     label07:
        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.batik.anim.timing.InstanceTime) $r6;

        $f1 = virtualinvoke r18.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        f11 = $f1;

        if z2 == 0 goto label08;

        $b13 = $f1 cmpl f10;

        $i18 = (int) $b13;

        if $i18 >= 0 goto label09;

     label08:
        if z2 != 0 goto label06;

        $b0 = $f1 cmpl f10;

        $i19 = (int) $b0;

        if $i19 <= 0 goto label06;

     label09:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.batik.anim.timing.InstanceTime) $r13;

        $f7 = virtualinvoke r18.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        $f8 = virtualinvoke r19.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        $b12 = $f7 cmpl $f8;

        if $b12 != 0 goto label10;

        r19 = null;

        goto label06;

     label10:
        $b15 = f11 cmpl $f0;

        $i20 = (int) $b15;

        if $i20 < 0 goto label11;

        return null;

     label11:
        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $i1 = lengthof $r7;

        if $i1 != 0 goto label12;

        $f6 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getActiveDur(float,float)>(f11, #InfinityF);

        f12 = f11 + $f6;

        goto label25;

     label12:
        $r8 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes>;

        $z4 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label13;

        f13 = #NaNF;

        goto label24;

     label13:
        $f2 = virtualinvoke r17.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        f13 = $f2;

        if z5 == 0 goto label14;

        if z12 != 0 goto label14;

        $b11 = $f2 cmpl f11;

        if $b11 == 0 goto label16;

     label14:
        if z5 != 0 goto label19;

        $r10 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r10 == null goto label19;

        $r11 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f4 = virtualinvoke $r11.<org.apache.batik.anim.timing.Interval: float getEnd()>();

        $b7 = $f2 cmpl $f4;

        if $b7 != 0 goto label19;

        if z2 == 0 goto label15;

        $b10 = f10 cmpl $f2;

        $i21 = (int) $b10;

        if $i21 >= 0 goto label16;

     label15:
        if z2 != 0 goto label19;

        $b8 = f10 cmpl $f2;

        $i22 = (int) $b8;

        if $i22 <= 0 goto label19;

        goto label16;

     label16:
        $z14 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z14 != 0 goto label18;

        $z10 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: boolean endHasEventConditions()>();

        if $z10 == 0 goto label17;

        f13 = #NaNF;

        goto label19;

     label17:
        return null;

     label18:
        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.batik.anim.timing.InstanceTime) $r12;

        $f5 = virtualinvoke r17.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        f13 = $f5;

        $b9 = $f5 cmpl f11;

        $i23 = (int) $b9;

        if $i23 <= 0 goto label16;

        goto label19;

     label19:
        z12 = 0;

        goto label20;

     label20:
        $b2 = f13 cmpl f11;

        $i24 = (int) $b2;

        if $i24 < 0 goto label21;

        goto label24;

     label21:
        $z6 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label23;

        $z7 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: boolean endHasEventConditions()>();

        if $z7 == 0 goto label22;

        f13 = #NaNF;

        goto label24;

     label22:
        return null;

     label23:
        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.batik.anim.timing.InstanceTime) $r9;

        f13 = virtualinvoke r17.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        goto label20;

     label24:
        $f14 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float getActiveDur(float,float)>(f11, f13);

        f12 = f11 + $f14;

     label25:
        if z5 == 0 goto label27;

        $b4 = f12 cmpl 0.0F;

        $i25 = (int) $b4;

        if $i25 > 0 goto label27;

        $b5 = f11 cmpl 0.0F;

        if $b5 != 0 goto label26;

        $b6 = f12 cmpl 0.0F;

        if $b6 == 0 goto label27;

     label26:
        $z9 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f12);

        if $z9 == 0 goto label30;

     label27:
        $i16 = r0.<org.apache.batik.anim.timing.TimedElement: int restartMode>;

        if $i16 != 0 goto label29;

        if r19 == null goto label29;

        $f3 = virtualinvoke r19.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        $b3 = $f3 cmpg f12;

        $i26 = (int) $b3;

        if $i26 < 0 goto label28;

        $z8 = staticinvoke <org.apache.batik.anim.timing.TimedElement: boolean isUnresolved(float)>(f12);

        if $z8 == 0 goto label29;

     label28:
        f12 = $f3;

        r17 = r19;

     label29:
        $r21 = new org.apache.batik.anim.timing.Interval;

        specialinvoke $r21.<org.apache.batik.anim.timing.Interval: void <init>(float,float,org.apache.batik.anim.timing.InstanceTime,org.apache.batik.anim.timing.InstanceTime)>(f11, f12, r18, r17);

        return $r21;

     label30:
        if z1 == 0 goto label31;

        return null;

     label31:
        f10 = f12;

        goto label03;
    }

    protected void reset(boolean)
    {
        org.apache.batik.anim.timing.InstanceTime $r6, r10, r11;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r2, $r8;
        org.apache.batik.anim.timing.Interval $r4, $r5;
        java.util.List $r1, $r7;
        org.apache.batik.anim.timing.TimedElement r0;
        java.lang.Object $r3, $r9;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        z1 := @parameter0: boolean;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.batik.anim.timing.InstanceTime) $r3;

        $z0 = virtualinvoke r10.<org.apache.batik.anim.timing.InstanceTime: boolean getClearOnReset()>();

        if $z0 == 0 goto label3;

        if z1 != 0 goto label2;

        $r4 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $r6 = virtualinvoke $r5.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime getBeginInstanceTime()>();

        if $r6 == r10 goto label3;

     label2:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label3:
        $z4 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label1;

        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List endInstanceTimes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.batik.anim.timing.InstanceTime) $r9;

        $z2 = virtualinvoke r11.<org.apache.batik.anim.timing.InstanceTime: boolean getClearOnReset()>();

        if $z2 == 0 goto label5;

        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

     label5:
        $z5 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label4;

        $z3 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen>;

        if $z3 == 0 goto label6;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void removeFill()>();

     label6:
        r0.<org.apache.batik.anim.timing.TimedElement: int currentRepeatIteration> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastRepeatTime> = #NaNF;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: boolean isFrozen> = 0;

        r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime> = #NaNF;

        return;
    }

    public void parseAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        byte $b0;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i1;
        float $f0, $f1;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r9;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        r9 := @parameter8: java.lang.String;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean hasParsed>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseBegin(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseDur(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseEnd(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseMin(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseMax(java.lang.String)>(r5);

        $f1 = r0.<org.apache.batik.anim.timing.TimedElement: float min>;

        $f0 = r0.<org.apache.batik.anim.timing.TimedElement: float max>;

        $b0 = $f1 cmpl $f0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        r0.<org.apache.batik.anim.timing.TimedElement: float min> = 0.0F;

        r0.<org.apache.batik.anim.timing.TimedElement: float max> = #InfinityF;

     label1:
        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseRepeatCount(java.lang.String)>(r6);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseRepeatDur(java.lang.String)>(r7);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseFill(java.lang.String)>(r8);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseRestart(java.lang.String)>(r9);

        r0.<org.apache.batik.anim.timing.TimedElement: boolean hasParsed> = 1;

     label2:
        return;
    }

    protected void parseBegin(java.lang.String)
    {
        java.lang.Object[] $r5;
        org.apache.batik.anim.timing.TimingSpecifier[] $r3;
        org.apache.batik.anim.AnimationException $r6;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1, $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i0;
        java.lang.String r7;
        boolean $z0, $z1;
        org.apache.batik.parser.ParseException $r4;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r7 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r7 = "0";

     label2:
        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z1 = $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean useSVG11AccessKeys>;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z0 = $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean useSVG12AccessKeys>;

        $r3 = staticinvoke <org.apache.batik.anim.timing.TimingSpecifierListProducer: org.apache.batik.anim.timing.TimingSpecifier[] parseTimingSpecifierList(org.apache.batik.anim.timing.TimedElement,boolean,java.lang.String,boolean,boolean)>(r0, 1, r7, $z1, $z0);

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes> = $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = null;

        $r5[1] = "begin";

        $r6 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r5);

        throw $r6;

     label5:
        return;

        catch org.apache.batik.parser.ParseException from label1 to label3 with label4;
    }

    protected void parseDur(java.lang.String)
    {
        java.lang.Object[] $r3;
        org.apache.batik.anim.AnimationException $r4;
        byte $b1;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0, $i2;
        float $f0, $f1;
        java.lang.String r0;
        boolean $z0, $z1;
        org.apache.batik.parser.ParseException $r2;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("media");

        if $z0 == 0 goto label1;

        r1.<org.apache.batik.anim.timing.TimedElement: boolean durMedia> = 1;

        r1.<org.apache.batik.anim.timing.TimedElement: float simpleDur> = #NaNF;

        goto label7;

     label1:
        r1.<org.apache.batik.anim.timing.TimedElement: boolean durMedia> = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("indefinite");

        if $z1 == 0 goto label3;

     label2:
        r1.<org.apache.batik.anim.timing.TimedElement: float simpleDur> = #InfinityF;

        goto label7;

     label3:
        $f0 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: float parseClockValue(java.lang.String,boolean)>(r0, 0);

        r1.<org.apache.batik.anim.timing.TimedElement: float simpleDur> = $f0;

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = null;

        $r3[1] = "dur";

        $r4 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r3);

        throw $r4;

     label6:
        $f1 = r1.<org.apache.batik.anim.timing.TimedElement: float simpleDur>;

        $b1 = $f1 cmpg 0.0F;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label7;

        r1.<org.apache.batik.anim.timing.TimedElement: float simpleDur> = #InfinityF;

     label7:
        return;

        catch org.apache.batik.parser.ParseException from label3 to label4 with label5;
    }

    protected float parseClockValue(java.lang.String, boolean) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.anim.timing.TimedElement$1$Handler $r1;
        org.apache.batik.anim.timing.TimedElement r2;
        float $f0;
        java.lang.String r3;
        org.apache.batik.parser.ClockParser $r0;
        boolean z0;

        r2 := @this: org.apache.batik.anim.timing.TimedElement;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.batik.parser.ClockParser;

        specialinvoke $r0.<org.apache.batik.parser.ClockParser: void <init>(boolean)>(z0);

        $r1 = new org.apache.batik.anim.timing.TimedElement$1$Handler;

        specialinvoke $r1.<org.apache.batik.anim.timing.TimedElement$1$Handler: void <init>(org.apache.batik.anim.timing.TimedElement)>(r2);

        virtualinvoke $r0.<org.apache.batik.parser.ClockParser: void setClockHandler(org.apache.batik.parser.ClockHandler)>($r1);

        virtualinvoke $r0.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>(r3);

        $f0 = $r1.<org.apache.batik.anim.timing.TimedElement$1$Handler: float v>;

        return $f0;
    }

    protected void parseEnd(java.lang.String)
    {
        java.lang.Object[] $r6;
        org.apache.batik.anim.timing.TimingSpecifier[] $r4;
        org.apache.batik.anim.AnimationException $r7;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2, $r3;
        org.apache.batik.anim.timing.TimedElement r0;
        java.lang.String r1;
        boolean $z0, $z1;
        org.apache.batik.parser.ParseException $r5;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z1 = $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean useSVG11AccessKeys>;

        $r3 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $z0 = $r3.<org.apache.batik.anim.timing.TimedDocumentRoot: boolean useSVG12AccessKeys>;

        $r4 = staticinvoke <org.apache.batik.anim.timing.TimingSpecifierListProducer: org.apache.batik.anim.timing.TimingSpecifier[] parseTimingSpecifierList(org.apache.batik.anim.timing.TimedElement,boolean,java.lang.String,boolean,boolean)>(r0, 0, r1, $z1, $z0);

        r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = null;

        $r6[1] = "end";

        $r7 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r6);

        throw $r7;

     label4:
        return;

        catch org.apache.batik.parser.ParseException from label1 to label2 with label3;
    }

    protected void parseMin(java.lang.String)
    {
        byte $b1;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0, $i2;
        float $f0, $f1;
        java.lang.String r0;
        boolean $z0;
        org.apache.batik.parser.ParseException $r2;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("media");

        if $z0 == 0 goto label1;

        r1.<org.apache.batik.anim.timing.TimedElement: float min> = 0.0F;

        r1.<org.apache.batik.anim.timing.TimedElement: boolean minMedia> = 1;

        goto label6;

     label1:
        r1.<org.apache.batik.anim.timing.TimedElement: boolean minMedia> = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r1.<org.apache.batik.anim.timing.TimedElement: float min> = 0.0F;

        goto label6;

     label2:
        $f0 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: float parseClockValue(java.lang.String,boolean)>(r0, 0);

        r1.<org.apache.batik.anim.timing.TimedElement: float min> = $f0;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        r1.<org.apache.batik.anim.timing.TimedElement: float min> = 0.0F;

     label5:
        $f1 = r1.<org.apache.batik.anim.timing.TimedElement: float min>;

        $b1 = $f1 cmpg 0.0F;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label6;

        r1.<org.apache.batik.anim.timing.TimedElement: float min> = 0.0F;

     label6:
        return;

        catch org.apache.batik.parser.ParseException from label2 to label3 with label4;
    }

    protected void parseMax(java.lang.String)
    {
        byte $b1;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0, $i2;
        float $f0, $f1;
        java.lang.String r0;
        boolean $z0, $z1;
        org.apache.batik.parser.ParseException $r2;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("media");

        if $z0 == 0 goto label1;

        r1.<org.apache.batik.anim.timing.TimedElement: float max> = #InfinityF;

        r1.<org.apache.batik.anim.timing.TimedElement: boolean maxMedia> = 1;

        goto label7;

     label1:
        r1.<org.apache.batik.anim.timing.TimedElement: boolean maxMedia> = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("indefinite");

        if $z1 == 0 goto label3;

     label2:
        r1.<org.apache.batik.anim.timing.TimedElement: float max> = #InfinityF;

        goto label7;

     label3:
        $f0 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: float parseClockValue(java.lang.String,boolean)>(r0, 0);

        r1.<org.apache.batik.anim.timing.TimedElement: float max> = $f0;

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        r1.<org.apache.batik.anim.timing.TimedElement: float max> = #InfinityF;

     label6:
        $f1 = r1.<org.apache.batik.anim.timing.TimedElement: float max>;

        $b1 = $f1 cmpg 0.0F;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label7;

        r1.<org.apache.batik.anim.timing.TimedElement: float max> = 0.0F;

     label7:
        return;

        catch org.apache.batik.parser.ParseException from label3 to label4 with label5;
    }

    protected void parseRepeatCount(java.lang.String)
    {
        java.lang.Object[] $r3;
        java.lang.NumberFormatException $r2;
        org.apache.batik.anim.AnimationException $r4;
        byte $b1;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0, $i2;
        float $f0, $f1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatCount> = #NaNF;

        goto label5;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("indefinite");

        if $z0 == 0 goto label2;

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatCount> = #InfinityF;

        goto label5;

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r0);

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatCount> = $f0;

        $f1 = r1.<org.apache.batik.anim.timing.TimedElement: float repeatCount>;

        $b1 = $f1 cmpl 0.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label3;

        return;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = null;

        $r3[1] = "repeatCount";

        $r4 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r3);

        throw $r4;

     label5:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    protected void parseRepeatDur(java.lang.String)
    {
        java.lang.Object[] $r3;
        org.apache.batik.anim.AnimationException $r4;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0;
        float $f0;
        java.lang.String r0;
        boolean $z0;
        org.apache.batik.parser.ParseException $r2;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatDur> = #NaNF;

        goto label4;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("indefinite");

        if $z0 == 0 goto label3;

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatDur> = #InfinityF;

        goto label4;

     label3:
        $f0 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: float parseClockValue(java.lang.String,boolean)>(r0, 0);

        r1.<org.apache.batik.anim.timing.TimedElement: float repeatDur> = $f0;

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = null;

        $r3[1] = "repeatDur";

        $r4 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r3);

        throw $r4;

     label6:
        return;

        catch org.apache.batik.parser.ParseException from label1 to label4 with label5;
    }

    protected void parseFill(java.lang.String)
    {
        java.lang.Object[] $r2;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0;
        java.lang.String r0;
        org.apache.batik.anim.AnimationException $r3;
        boolean $z0, $z1;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("remove");

        if $z0 == 0 goto label2;

     label1:
        r1.<org.apache.batik.anim.timing.TimedElement: int fillMode> = 0;

        goto label4;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("freeze");

        if $z1 == 0 goto label3;

        r1.<org.apache.batik.anim.timing.TimedElement: int fillMode> = 1;

        goto label4;

     label3:
        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = null;

        $r2[1] = "fill";

        $r3 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r2);

        throw $r3;

     label4:
        return;
    }

    protected void parseRestart(java.lang.String)
    {
        java.lang.Object[] $r2;
        org.apache.batik.anim.AnimationException $r3;
        org.apache.batik.anim.timing.TimedElement r1;
        int $i0;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.batik.anim.timing.TimedElement;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("always");

        if $z0 == 0 goto label2;

     label1:
        r1.<org.apache.batik.anim.timing.TimedElement: int restartMode> = 0;

        goto label5;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("whenNotActive");

        if $z1 == 0 goto label3;

        r1.<org.apache.batik.anim.timing.TimedElement: int restartMode> = 1;

        goto label5;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("never");

        if $z2 == 0 goto label4;

        r1.<org.apache.batik.anim.timing.TimedElement: int restartMode> = 2;

        goto label5;

     label4:
        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = null;

        $r2[1] = "restart";

        $r3 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r2);

        throw $r3;

     label5:
        return;
    }

    public void initialize()
    {
        org.apache.batik.anim.timing.TimingSpecifier[] $r1, $r2, $r4, $r5;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i0, $i1, i2, i3;
        org.apache.batik.anim.timing.TimingSpecifier $r3, $r6;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.batik.anim.timing.TimingSpecifier: void initialize()>();

        i2 = i2 + 1;

     label2:
        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes>;

        $i0 = lengthof $r1;

        if i2 < $i0 goto label1;

        i3 = 0;

        goto label4;

     label3:
        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $r6 = $r5[i3];

        virtualinvoke $r6.<org.apache.batik.anim.timing.TimingSpecifier: void initialize()>();

        i3 = i3 + 1;

     label4:
        $r4 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $i1 = lengthof $r4;

        if i3 < $i1 goto label3;

        return;
    }

    public void deinitialize()
    {
        org.apache.batik.anim.timing.TimingSpecifier[] $r1, $r2, $r4, $r5;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i0, $i1, i2, i3;
        org.apache.batik.anim.timing.TimingSpecifier $r3, $r6;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.batik.anim.timing.TimingSpecifier: void deinitialize()>();

        i2 = i2 + 1;

     label2:
        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] beginTimes>;

        $i0 = lengthof $r1;

        if i2 < $i0 goto label1;

        i3 = 0;

        goto label4;

     label3:
        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $r6 = $r5[i3];

        virtualinvoke $r6.<org.apache.batik.anim.timing.TimingSpecifier: void deinitialize()>();

        i3 = i3 + 1;

     label4:
        $r4 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimingSpecifier[] endTimes>;

        $i1 = lengthof $r4;

        if i3 < $i1 goto label3;

        return;
    }

    public void beginElement()
    {
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void beginElement(float)>(0.0F);

        return;
    }

    public void beginElement(float)
    {
        java.util.Calendar $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.InstanceTime $r3;
        float $f0, f1, $f2;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f1 := @parameter0: float;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: float convertWallclockTime(java.util.Calendar)>($r2);

        $r3 = new org.apache.batik.anim.timing.InstanceTime;

        $f2 = $f0 + f1;

        specialinvoke $r3.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(null, $f2, 1);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r3, 1);

        return;
    }

    public void endElement()
    {
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void endElement(float)>(0.0F);

        return;
    }

    public void endElement(float)
    {
        java.util.Calendar $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.InstanceTime $r3;
        float $f0, f1, $f2;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        f1 := @parameter0: float;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: float convertWallclockTime(java.util.Calendar)>($r2);

        $r3 = new org.apache.batik.anim.timing.InstanceTime;

        $f2 = $f0 + f1;

        specialinvoke $r3.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(null, $f2, 1);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r3, 0);

        return;
    }

    public float getLastSampleTime()
    {
        float $f0;
        org.apache.batik.anim.timing.TimedElement r0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $f0 = r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime>;

        return $f0;
    }

    public float getCurrentBeginTime()
    {
        byte $b0;
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.Interval $r1, $r2;
        int $i1;
        float $f0, $f1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f0 = virtualinvoke $r2.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        $f1 = r0.<org.apache.batik.anim.timing.TimedElement: float lastSampleTime>;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

     label1:
        return #NaNF;

     label2:
        return $f0;
    }

    public boolean canBegin()
    {
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.timing.Interval $r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        if $r1 == null goto label1;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z0 == 0 goto label2;

        $i0 = r0.<org.apache.batik.anim.timing.TimedElement: int restartMode>;

        if $i0 == 2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean canEnd()
    {
        org.apache.batik.anim.timing.TimedElement r0;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        return $z0;
    }

    public float getHyperlinkBeginTime()
    {
        org.apache.batik.anim.timing.InstanceTime $r4;
        org.apache.batik.anim.timing.Interval $r5;
        java.util.List $r1, $r2;
        org.apache.batik.anim.timing.TimedElement r0;
        float $f0, $f1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        $z0 = r0.<org.apache.batik.anim.timing.TimedElement: boolean isActive>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.Interval currentInterval>;

        $f1 = virtualinvoke $r5.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        return $f1;

     label1:
        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.List beginInstanceTimes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.batik.anim.timing.InstanceTime) $r3;

        $f0 = virtualinvoke $r4.<org.apache.batik.anim.timing.InstanceTime: float getTime()>();

        return $f0;

     label2:
        return #NaNF;
    }

    protected void fireTimeEvent(java.lang.String, float, int)
    {
        long $l0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;
        java.util.Calendar $r2, r4;
        org.apache.batik.anim.timing.TimedElement r0;
        int $i1, i2;
        float f0;
        java.lang.Object $r3;
        java.lang.String r5;
        double $d0, $d1;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r5 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: java.util.Calendar getDocumentBeginTime()>();

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.lang.Object clone()>();

        r4 = (java.util.Calendar) $r3;

        $d0 = (double) f0;

        $d1 = $d0 * 1000.0;

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d1);

        $i1 = (int) $l0;

        virtualinvoke r4.<java.util.Calendar: void add(int,int)>(14, $i1);

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void fireTimeEvent(java.lang.String,java.util.Calendar,int)>(r5, r4, i2);

        return;
    }

    void eventOccurred(org.apache.batik.anim.timing.TimingSpecifier, org.w3c.dom.events.Event)
    {
        org.apache.batik.anim.timing.TimedDocumentRoot $r5;
        java.util.HashSet $r6, r8;
        org.apache.batik.anim.timing.TimedElement r0;
        java.util.Map $r2, $r7;
        org.w3c.dom.events.Event r1;
        java.lang.Object $r3;
        org.apache.batik.anim.timing.TimingSpecifier r4;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r4 := @parameter0: org.apache.batik.anim.timing.TimingSpecifier;

        r1 := @parameter1: org.w3c.dom.events.Event;

        $r2 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.Map handledEvents>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.util.HashSet) $r3;

        if r8 != null goto label1;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r8 = $r6;

        $r7 = r0.<org.apache.batik.anim.timing.TimedElement: java.util.Map handledEvents>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label1:
        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r4);

        $r5 = r0.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot root>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedDocumentRoot: void currentIntervalWillUpdate()>();

        return;
    }

    protected abstract void fireTimeEvent(java.lang.String, java.util.Calendar, int);

    protected abstract void toActive(float);

    protected abstract void toInactive(boolean, boolean);

    protected abstract void removeFill();

    protected abstract void sampledAt(float, float, int);

    protected abstract void sampledLastValue(int);

    protected abstract org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String);

    protected abstract org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String);

    protected abstract org.w3c.dom.events.EventTarget getRootEventTarget();

    public abstract org.w3c.dom.Element getElement();

    protected abstract org.w3c.dom.events.EventTarget getAnimationEventTarget();

    public abstract boolean isBefore(org.apache.batik.anim.timing.TimedElement);

    protected abstract boolean isConstantAnimation();

    public org.apache.batik.anim.AnimationException createException(java.lang.String, java.lang.Object[])
    {
        org.w3c.dom.Element $r1;
        java.lang.Object[] r4;
        org.apache.batik.anim.timing.TimedElement r0;
        org.apache.batik.anim.AnimationException $r2;
        java.lang.String r3, $r5;

        r0 := @this: org.apache.batik.anim.timing.TimedElement;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.Element getElement()>();

        if $r1 == null goto label1;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        r4[0] = $r5;

     label1:
        $r2 = new org.apache.batik.anim.AnimationException;

        specialinvoke $r2.<org.apache.batik.anim.AnimationException: void <init>(org.apache.batik.anim.timing.TimedElement,java.lang.String,java.lang.Object[])>(r0, r3, r4);

        return $r2;
    }

    public static void setLocale(java.util.Locale)
    {
        java.util.Locale r0;
        org.apache.batik.i18n.LocalizableSupport $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = <org.apache.batik.anim.timing.TimedElement: org.apache.batik.i18n.LocalizableSupport localizableSupport>;

        virtualinvoke $r1.<org.apache.batik.i18n.LocalizableSupport: void setLocale(java.util.Locale)>(r0);

        return;
    }

    public static java.util.Locale getLocale()
    {
        java.util.Locale $r1;
        org.apache.batik.i18n.LocalizableSupport $r0;

        $r0 = <org.apache.batik.anim.timing.TimedElement: org.apache.batik.i18n.LocalizableSupport localizableSupport>;

        $r1 = virtualinvoke $r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale getLocale()>();

        return $r1;
    }

    public static java.lang.String formatMessage(java.lang.String, java.lang.Object[]) throws java.util.MissingResourceException
    {
        java.lang.Object[] r1;
        java.lang.String r0, $r3;
        org.apache.batik.i18n.LocalizableSupport $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <org.apache.batik.anim.timing.TimedElement: org.apache.batik.i18n.LocalizableSupport localizableSupport>;

        $r3 = virtualinvoke $r2.<org.apache.batik.i18n.LocalizableSupport: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>(r0, r1);

        return $r3;
    }

    public static java.lang.String toString(float)
    {
        byte $b0;
        float f0;
        java.lang.String $r0;
        boolean $z0;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label1;

        return "UNRESOLVED";

     label1:
        $b0 = f0 cmpl #InfinityF;

        if $b0 != 0 goto label2;

        return "INDEFINITE";

     label2:
        $r0 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r2;
        org.apache.batik.i18n.LocalizableSupport $r0;

        <org.apache.batik.anim.timing.TimedElement: java.lang.String RESOURCES> = "org.apache.batik.anim.resources.Messages";

        <org.apache.batik.anim.timing.TimedElement: float UNRESOLVED> = #NaNF;

        <org.apache.batik.anim.timing.TimedElement: float INDEFINITE> = #InfinityF;

        <org.apache.batik.anim.timing.TimedElement: int RESTART_NEVER> = 2;

        <org.apache.batik.anim.timing.TimedElement: int RESTART_WHEN_NOT_ACTIVE> = 1;

        <org.apache.batik.anim.timing.TimedElement: int RESTART_ALWAYS> = 0;

        <org.apache.batik.anim.timing.TimedElement: int FILL_FREEZE> = 1;

        <org.apache.batik.anim.timing.TimedElement: int FILL_REMOVE> = 0;

        $r0 = new org.apache.batik.i18n.LocalizableSupport;

        $r1 = <org.apache.batik.anim.timing.TimedElement: java.lang.Class class$org$apache$batik$anim$timing$TimedElement>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.batik.anim.timing.TimedElement: java.lang.Class class$(java.lang.String)>("org.apache.batik.anim.timing.TimedElement");

        <org.apache.batik.anim.timing.TimedElement: java.lang.Class class$org$apache$batik$anim$timing$TimedElement> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.batik.anim.timing.TimedElement: java.lang.Class class$org$apache$batik$anim$timing$TimedElement>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r0.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.anim.resources.Messages", $r2);

        <org.apache.batik.anim.timing.TimedElement: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r0;

        return;
    }
}
