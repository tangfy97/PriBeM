class com.google.common.collect.Lists$Partition extends java.util.AbstractList
{
    final java.util.List list;
    final int size;

    void <init>(java.util.List, int)
    {
        int i0;
        com.google.common.collect.Lists$Partition r0;
        java.util.List r1;

        r0 := @this: com.google.common.collect.Lists$Partition;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.google.common.collect.Lists$Partition: java.util.List list> = r1;

        r0.<com.google.common.collect.Lists$Partition: int size> = i0;

        return;
    }

    public java.util.List get(int)
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1, $r2, $r3;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.google.common.collect.Lists$Partition;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.google.common.collect.Lists$Partition: int size()>();

        staticinvoke <com.google.common.base.Preconditions: int checkElementIndex(int,int)>(i1, $i0);

        $i2 = r0.<com.google.common.collect.Lists$Partition: int size>;

        i3 = i1 * $i2;

        $i4 = r0.<com.google.common.collect.Lists$Partition: int size>;

        $i5 = i3 + $i4;

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $i6 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $r2 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(i3, $i7);

        return $r3;
    }

    public int size()
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = r0.<com.google.common.collect.Lists$Partition: int size>;

        $i2 = $i0 + $i1;

        $i4 = $i2 - 1;

        $i3 = r0.<com.google.common.collect.Lists$Partition: int size>;

        $i5 = $i4 / $i3;

        return $i5;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Lists$Partition;

        $r1 = r0.<com.google.common.collect.Lists$Partition: java.util.List list>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        com.google.common.collect.Lists$Partition r0;
        java.util.List $r1;

        r0 := @this: com.google.common.collect.Lists$Partition;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.google.common.collect.Lists$Partition: java.util.List get(int)>(i0);

        return $r1;
    }
}
