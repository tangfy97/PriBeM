public class org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener extends java.awt.event.MouseAdapter
{
    private final org.apache.batik.util.gui.resource.JToolbarToggleButton this$0;

    protected void <init>(org.apache.batik.util.gui.resource.JToolbarToggleButton)
    {
        org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener r0;
        org.apache.batik.util.gui.resource.JToolbarToggleButton r1;

        r0 := @this: org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener;

        r1 := @parameter0: org.apache.batik.util.gui.resource.JToolbarToggleButton;

        specialinvoke r0.<java.awt.event.MouseAdapter: void <init>()>();

        r0.<org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener: org.apache.batik.util.gui.resource.JToolbarToggleButton this$0> = r1;

        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener r0;
        org.apache.batik.util.gui.resource.JToolbarToggleButton $r1;
        java.awt.event.MouseEvent r2;

        r0 := @this: org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener;

        r2 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener: org.apache.batik.util.gui.resource.JToolbarToggleButton this$0>;

        virtualinvoke $r1.<javax.swing.AbstractButton: void setBorderPainted(boolean)>(1);

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener r0;
        org.apache.batik.util.gui.resource.JToolbarToggleButton $r1;
        java.awt.event.MouseEvent r2;

        r0 := @this: org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener;

        r2 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<org.apache.batik.util.gui.resource.JToolbarToggleButton$MouseListener: org.apache.batik.util.gui.resource.JToolbarToggleButton this$0>;

        virtualinvoke $r1.<javax.swing.AbstractButton: void setBorderPainted(boolean)>(0);

        return;
    }
}
