public class com.jidesoft.plaf.office2003.Office2003Painter extends com.jidesoft.plaf.basic.BasicPainter
{
    private static com.jidesoft.plaf.office2003.Office2003Painter _instance;
    private java.lang.String _colorName;
    private static boolean _native;
    private static com.jidesoft.plaf.office2003.Office2003Theme _defaultTheme;
    private static com.jidesoft.plaf.office2003.Office2003Theme _normalTheme;
    private static com.jidesoft.plaf.office2003.Office2003Theme _blueTheme;
    private static com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme;
    private static com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme;
    private static java.util.Map _themeCache;

    public static com.jidesoft.plaf.basic.ThemePainter getInstance()
    {
        java.lang.UnsupportedOperationException $r8;
        com.jidesoft.plaf.office2003.Office2003Painter $r0, $r1, $r5, $r6, $r9, $r10;
        java.lang.String $r7;
        com.jidesoft.plaf.office2003.Office2003Painter$1 $r2;
        java.awt.Toolkit $r3, $r4;
        boolean $z0, $z1;

        $r0 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        if $r0 != null goto label5;

        $r1 = new com.jidesoft.plaf.office2003.Office2003Painter;

        specialinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Painter: void <init>()>();

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance> = $r1;

        $r2 = new com.jidesoft.plaf.office2003.Office2003Painter$1;

        specialinvoke $r2.<com.jidesoft.plaf.office2003.Office2003Painter$1: void <init>()>();

        $r3 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        virtualinvoke $r3.<java.awt.Toolkit: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("win.xpstyle.colorName", $r2);

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        virtualinvoke $r4.<java.awt.Toolkit: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("win.xpstyle.themeActive", $r2);

        $z0 = staticinvoke <com.jidesoft.plaf.office2003.Office2003Painter: boolean isNative()>();

        if $z0 == 0 goto label5;

     label1:
        $z1 = staticinvoke <com.jidesoft.plaf.XPUtils: boolean isXPStyleOn()>();

        if $z1 == 0 goto label2;

        $r6 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        $r7 = staticinvoke <com.jidesoft.plaf.XPUtils: java.lang.String getColorName()>();

        virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Painter: void setColorName(java.lang.String)>($r7);

        goto label3;

     label2:
        $r5 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        virtualinvoke $r5.<com.jidesoft.plaf.office2003.Office2003Painter: void setColorName(java.lang.String)>("");

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        virtualinvoke $r9.<com.jidesoft.plaf.office2003.Office2003Painter: void setColorName(java.lang.String)>("");

     label5:
        $r10 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        return $r10;

        catch java.lang.UnsupportedOperationException from label1 to label3 with label4;
    }

    protected void <init>()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicPainter: void <init>()>();

        r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String _colorName> = "Default";

        return;
    }

    public void addTheme(com.jidesoft.plaf.office2003.Office2003Theme)
    {
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        com.jidesoft.plaf.office2003.Office2003Theme r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: com.jidesoft.plaf.office2003.Office2003Theme;

        $r1 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return;
    }

    public com.jidesoft.plaf.office2003.Office2003Theme getTheme(java.lang.String)
    {
        com.jidesoft.plaf.office2003.Office2003Painter r4;
        com.jidesoft.plaf.office2003.Office2003Theme $r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0;

        r4 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (com.jidesoft.plaf.office2003.Office2003Theme) $r2;

        return $r3;
    }

    public void removeTheme(java.lang.String)
    {
        java.lang.String r0;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        java.util.Map $r1;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        return;
    }

    public java.util.Collection getAvailableThemes()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        java.util.Map $r0;
        java.util.Collection $r1;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r0 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        return $r1;
    }

    public void installDefaults()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r1;
        java.lang.Boolean $r0;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void installDefaults()>();

     label1:
        return;
    }

    public void uninstallDefaults()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r1;
        java.lang.Boolean $r0;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void uninstallDefaults()>();

     label1:
        return;
    }

    public java.lang.String getColorName()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String _colorName>;

        return $r1;
    }

    public void setColorName(java.lang.String)
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        java.lang.String r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String _colorName> = r1;

        return;
    }

    public static boolean isNative()
    {
        boolean $z0;

        $z0 = <com.jidesoft.plaf.office2003.Office2003Painter: boolean _native>;

        return $z0;
    }

    public static void setNative(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.plaf.office2003.Office2003Painter: boolean _native> = z0;

        return;
    }

    public com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r10, $r13;
        java.util.Map $r4, $r7, $r11;
        int $i0;
        java.lang.Object $r6, $r9, $r12;
        java.lang.String $r1, $r2, $r3, $r5, $r8;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String getColorName()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String getColorName()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r4 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r5 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String getColorName()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        if $r6 != null goto label2;

     label1:
        $r11 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("Default");

        $r13 = (com.jidesoft.plaf.office2003.Office2003Theme) $r12;

        return $r13;

     label2:
        $r7 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r8 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: java.lang.String getColorName()>();

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (com.jidesoft.plaf.office2003.Office2003Theme) $r9;

        return $r10;
    }

    public void paintButtonBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int, boolean)
    {
        java.awt.Color $r4, $r6, $r11, $r12, $r23, r26, r27, r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        com.jidesoft.swing.ComponentStateSupport $r13, $r16, $r19, $r22;
        java.awt.Graphics r7;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        java.awt.Graphics2D $r9;
        int i0, i1;
        java.lang.Boolean $r0;
        javax.swing.JComponent r1;
        com.jidesoft.plaf.office2003.Office2003Theme $r3, $r5, $r10, $r14, $r15, $r17, $r18, $r20, $r21, $r24, $r25;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r7 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        z11 := @parameter5: boolean;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label01;

        specialinvoke r2.<com.jidesoft.plaf.basic.BasicPainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r1, r7, r8, i1, i0, z11);

        return;

     label01:
        r26 = null;

        r27 = null;

        r28 = null;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label13;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label16;
            case 5: goto label10;
            default: goto label16;
        };

     label02:
        $r23 = virtualinvoke r1.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $z10 = $r23 instanceof javax.swing.plaf.UIResource;

        if $z10 != 0 goto label03;

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r23, 0.6F);

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r23, 0.4F);

        z11 = 0;

        goto label16;

     label03:
        $r24 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r26 = virtualinvoke $r24.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        $r25 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r27 = virtualinvoke $r25.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        goto label16;

     label04:
        $z6 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z6 == 0 goto label05;

        $r19 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r28 = interfaceinvoke $r19.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

     label05:
        if r28 == null goto label06;

        $z7 = r28 instanceof javax.swing.plaf.UIResource;

        if $z7 != 0 goto label06;

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.6F);

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.4F);

        goto label16;

     label06:
        $r17 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r26 = virtualinvoke $r17.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.RolloverLt");

        $r18 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r27 = virtualinvoke $r18.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.RolloverDk");

        goto label16;

     label07:
        $z4 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z4 == 0 goto label08;

        $r16 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r28 = interfaceinvoke $r16.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

     label08:
        if r28 == null goto label09;

        $z5 = r28 instanceof javax.swing.plaf.UIResource;

        if $z5 != 0 goto label09;

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.6F);

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.4F);

        goto label16;

     label09:
        $r14 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r26 = virtualinvoke $r14.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedLt");

        $r15 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r27 = virtualinvoke $r15.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedDk");

        goto label16;

     label10:
        $z2 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z2 == 0 goto label11;

        $r13 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r28 = interfaceinvoke $r13.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

     label11:
        if r28 == null goto label12;

        $z3 = r28 instanceof javax.swing.plaf.UIResource;

        if $z3 != 0 goto label12;

        $r11 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.6F);

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r11);

        $r12 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.4F);

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r12);

        goto label16;

     label12:
        $r3 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r4 = virtualinvoke $r3.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedLt");

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r4);

        $r5 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r6 = virtualinvoke $r5.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedDk");

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r6);

        goto label16;

     label13:
        $z8 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z8 == 0 goto label14;

        $r22 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r28 = interfaceinvoke $r22.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

     label14:
        if r28 == null goto label15;

        $z9 = r28 instanceof javax.swing.plaf.UIResource;

        if $z9 != 0 goto label15;

        r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.4F);

        r27 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.6F);

        goto label16;

     label15:
        $r20 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r26 = virtualinvoke $r20.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.PressedDk");

        $r21 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r27 = virtualinvoke $r21.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.PressedLt");

     label16:
        if r26 == null goto label19;

        if r27 == null goto label19;

        $r9 = (java.awt.Graphics2D) r7;

        if z11 == 0 goto label17;

        $r10 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r29 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.border");

        goto label18;

     label17:
        $r29 = null;

     label18:
        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintBackground(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Rectangle,java.awt.Color,java.awt.Color,java.awt.Color,int)>(r1, $r9, r8, $r29, r26, r27, i1);

     label19:
        return;
    }

    protected void paintBackground(javax.swing.JComponent, java.awt.Graphics2D, java.awt.Rectangle, java.awt.Color, java.awt.Color, java.awt.Color, int)
    {
        java.awt.Color r0, r1, r2, $r7;
        com.jidesoft.plaf.office2003.Office2003Painter r15;
        java.lang.String $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7;
        java.awt.Rectangle $r4, r5, $r14;
        java.awt.Graphics2D r3;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46;
        java.lang.Boolean $r13;
        javax.swing.JComponent r6;
        java.lang.Object $r8, $r16;

        r15 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r6 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics2D;

        r5 := @parameter2: java.awt.Rectangle;

        r0 := @parameter3: java.awt.Color;

        r1 := @parameter4: java.awt.Color;

        r2 := @parameter5: java.awt.Color;

        i4 := @parameter6: int;

        if r0 == null goto label14;

        if r1 == null goto label03;

        if r2 == null goto label03;

        $r14 = new java.awt.Rectangle;

        $i46 = r5.<java.awt.Rectangle: int x>;

        $i45 = r5.<java.awt.Rectangle: int y>;

        $i44 = r5.<java.awt.Rectangle: int width>;

        $i43 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r14.<java.awt.Rectangle: void <init>(int,int,int,int)>($i46, $i45, $i44, $i43);

        if i4 != 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r14, r1, r2, $z4);

     label03:
        z5 = 1;

        $r16 = virtualinvoke r6.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("JideButton.paintDefaultBorder");

        $z6 = $r16 instanceof java.lang.Boolean;

        if $z6 == 0 goto label04;

        $r13 = (java.lang.Boolean) $r16;

        z5 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

     label04:
        if z5 == 0 goto label13;

        $r7 = virtualinvoke r3.<java.awt.Graphics2D: java.awt.Color getColor()>();

        virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r0);

        $r8 = virtualinvoke r6.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("JButton.segmentPosition");

        if $r8 == null goto label05;

        $r9 = "only";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label06;

     label05:
        $i10 = r5.<java.awt.Rectangle: int x>;

        $i9 = r5.<java.awt.Rectangle: int y>;

        $i5 = r5.<java.awt.Rectangle: int width>;

        $i8 = $i5 - 1;

        $i6 = r5.<java.awt.Rectangle: int height>;

        $i7 = $i6 - 1;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i10, $i9, $i8, $i7);

        goto label12;

     label06:
        $r10 = "first";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label08;

        if i4 != 0 goto label07;

        $i42 = r5.<java.awt.Rectangle: int x>;

        $i41 = r5.<java.awt.Rectangle: int y>;

        $i40 = r5.<java.awt.Rectangle: int width>;

        $i38 = r5.<java.awt.Rectangle: int height>;

        $i39 = $i38 - 1;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i42, $i41, $i40, $i39);

        goto label12;

     label07:
        $i37 = r5.<java.awt.Rectangle: int x>;

        $i36 = r5.<java.awt.Rectangle: int y>;

        $i33 = r5.<java.awt.Rectangle: int width>;

        $i35 = $i33 - 1;

        $i34 = r5.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i37, $i36, $i35, $i34);

        goto label12;

     label08:
        $r11 = "middle";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label10;

        if i4 != 0 goto label09;

        $i32 = r5.<java.awt.Rectangle: int x>;

        $i31 = r5.<java.awt.Rectangle: int y>;

        $i30 = r5.<java.awt.Rectangle: int width>;

        $i28 = r5.<java.awt.Rectangle: int height>;

        $i29 = $i28 - 1;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i32, $i31, $i30, $i29);

        goto label12;

     label09:
        $i27 = r5.<java.awt.Rectangle: int x>;

        $i26 = r5.<java.awt.Rectangle: int y>;

        $i23 = r5.<java.awt.Rectangle: int width>;

        $i25 = $i23 - 1;

        $i24 = r5.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i27, $i26, $i25, $i24);

        goto label12;

     label10:
        $r12 = "last";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label12;

        if i4 != 0 goto label11;

        $i22 = r5.<java.awt.Rectangle: int x>;

        $i21 = r5.<java.awt.Rectangle: int y>;

        $i17 = r5.<java.awt.Rectangle: int width>;

        $i20 = $i17 - 1;

        $i18 = r5.<java.awt.Rectangle: int height>;

        $i19 = $i18 - 1;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i22, $i21, $i20, $i19);

        goto label12;

     label11:
        $i16 = r5.<java.awt.Rectangle: int x>;

        $i15 = r5.<java.awt.Rectangle: int y>;

        $i11 = r5.<java.awt.Rectangle: int width>;

        $i14 = $i11 - 1;

        $i12 = r5.<java.awt.Rectangle: int height>;

        $i13 = $i12 - 1;

        virtualinvoke r3.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i16, $i15, $i14, $i13);

     label12:
        virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

     label13:
        goto label17;

     label14:
        if r1 == null goto label17;

        if r2 == null goto label17;

        $r4 = new java.awt.Rectangle;

        $i3 = r5.<java.awt.Rectangle: int x>;

        $i2 = r5.<java.awt.Rectangle: int y>;

        $i1 = r5.<java.awt.Rectangle: int width>;

        $i0 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        if i4 != 0 goto label15;

        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r4, r1, r2, $z7);

     label17:
        return;
    }

    public void paintChevronBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7, $r10, $r12, $r14, $r16, $r18, $r20;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        java.awt.Graphics2D r1;
        int i0, i1;
        javax.swing.JComponent r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6, $r9, $r11, $r13, $r15, $r17, $r19;
        java.awt.Graphics r0;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r3 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        r1 = (java.awt.Graphics2D) r0;

        if i0 != 0 goto label1;

        $r17 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r18 = virtualinvoke $r17.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Chevron.backgroundLt");

        $r19 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r20 = virtualinvoke $r19.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Chevron.backgroundDk");

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintChevron(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Color,java.awt.Color,java.awt.Rectangle,int)>(r3, r1, $r18, $r20, r8, i1);

        goto label4;

     label1:
        if i0 != 2 goto label2;

        $r13 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r14 = virtualinvoke $r13.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.RolloverLt");

        $r15 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r16 = virtualinvoke $r15.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.RolloverDk");

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintChevron(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Color,java.awt.Color,java.awt.Rectangle,int)>(r3, r1, $r14, $r16, r8, i1);

        goto label4;

     label2:
        if i0 != 3 goto label3;

        $r9 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r10 = virtualinvoke $r9.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedDk");

        $r11 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r12 = virtualinvoke $r11.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedLt");

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintChevron(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Color,java.awt.Color,java.awt.Rectangle,int)>(r3, r1, $r10, $r12, r8, i1);

        goto label4;

     label3:
        if i0 != 1 goto label4;

        $r4 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.PressedDk");

        $r6 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.PressedLt");

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintChevron(javax.swing.JComponent,java.awt.Graphics2D,java.awt.Color,java.awt.Color,java.awt.Rectangle,int)>(r3, r1, $r5, $r7, r8, i1);

     label4:
        return;
    }

    public void paintDividerBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        javax.swing.JComponent r8;
        java.awt.Rectangle r2;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics2D r1;
        java.awt.Graphics r0;
        int i0, i1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r8 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 = (java.awt.Graphics2D) r0;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Divider.backgroundLt");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Divider.backgroundDk");

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r2, $r5, $r7, 1);

        return;
    }

    protected void paintChevron(javax.swing.JComponent, java.awt.Graphics2D, java.awt.Color, java.awt.Color, java.awt.Rectangle, int)
    {
        java.awt.Color r3, r4;
        java.awt.ComponentOrientation $r6;
        java.awt.Graphics2D r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157;
        com.jidesoft.plaf.office2003.Office2003Painter r9;
        boolean $z0;
        java.awt.Rectangle $r1, r2, $r7, $r8;
        javax.swing.JComponent r5;

        r9 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r5 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics2D;

        r3 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        r2 := @parameter4: java.awt.Rectangle;

        i0 := @parameter5: int;

        if i0 != 0 goto label2;

        $r6 = virtualinvoke r5.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r6.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label1;

        $r8 = new java.awt.Rectangle;

        $i111 = r2.<java.awt.Rectangle: int x>;

        $i105 = r2.<java.awt.Rectangle: int y>;

        $i110 = $i105 + 2;

        $i106 = r2.<java.awt.Rectangle: int width>;

        $i109 = $i106 - 2;

        $i107 = r2.<java.awt.Rectangle: int height>;

        $i108 = $i107 - 4;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i111, $i110, $i109, $i108);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r8, r3, r4, 1);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);

        $i112 = r2.<java.awt.Rectangle: int x>;

        $i119 = $i112 + 2;

        $i118 = r2.<java.awt.Rectangle: int y>;

        $i114 = r2.<java.awt.Rectangle: int x>;

        $i113 = r2.<java.awt.Rectangle: int width>;

        $i115 = $i114 + $i113;

        $i117 = $i115 - 1;

        $i116 = r2.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i119, $i118, $i117, $i116);

        $i120 = r2.<java.awt.Rectangle: int x>;

        $i129 = $i120 + 1;

        $i121 = r2.<java.awt.Rectangle: int y>;

        $i128 = $i121 + 1;

        $i123 = r2.<java.awt.Rectangle: int x>;

        $i122 = r2.<java.awt.Rectangle: int width>;

        $i124 = $i123 + $i122;

        $i127 = $i124 - 2;

        $i125 = r2.<java.awt.Rectangle: int y>;

        $i126 = $i125 + 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i129, $i128, $i127, $i126);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r4);

        $i130 = r2.<java.awt.Rectangle: int x>;

        $i143 = $i130 + 1;

        $i132 = r2.<java.awt.Rectangle: int y>;

        $i131 = r2.<java.awt.Rectangle: int height>;

        $i133 = $i132 + $i131;

        $i142 = $i133 - 2;

        $i135 = r2.<java.awt.Rectangle: int x>;

        $i134 = r2.<java.awt.Rectangle: int width>;

        $i136 = $i135 + $i134;

        $i141 = $i136 - 2;

        $i138 = r2.<java.awt.Rectangle: int y>;

        $i137 = r2.<java.awt.Rectangle: int height>;

        $i139 = $i138 + $i137;

        $i140 = $i139 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i143, $i142, $i141, $i140);

        $i144 = r2.<java.awt.Rectangle: int x>;

        $i157 = $i144 + 2;

        $i146 = r2.<java.awt.Rectangle: int y>;

        $i145 = r2.<java.awt.Rectangle: int height>;

        $i147 = $i146 + $i145;

        $i156 = $i147 - 1;

        $i149 = r2.<java.awt.Rectangle: int x>;

        $i148 = r2.<java.awt.Rectangle: int width>;

        $i150 = $i149 + $i148;

        $i155 = $i150 - 1;

        $i152 = r2.<java.awt.Rectangle: int y>;

        $i151 = r2.<java.awt.Rectangle: int height>;

        $i153 = $i152 + $i151;

        $i154 = $i153 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i157, $i156, $i155, $i154);

        goto label3;

     label1:
        $r7 = new java.awt.Rectangle;

        $i53 = r2.<java.awt.Rectangle: int x>;

        $i60 = $i53 + 2;

        $i54 = r2.<java.awt.Rectangle: int y>;

        $i59 = $i54 + 2;

        $i55 = r2.<java.awt.Rectangle: int width>;

        $i58 = $i55 - 2;

        $i56 = r2.<java.awt.Rectangle: int height>;

        $i57 = $i56 - 4;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i60, $i59, $i58, $i57);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r7, r3, r4, 1);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);

        $i67 = r2.<java.awt.Rectangle: int x>;

        $i66 = r2.<java.awt.Rectangle: int y>;

        $i62 = r2.<java.awt.Rectangle: int x>;

        $i61 = r2.<java.awt.Rectangle: int width>;

        $i63 = $i62 + $i61;

        $i65 = $i63 - 3;

        $i64 = r2.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i67, $i66, $i65, $i64);

        $i68 = r2.<java.awt.Rectangle: int x>;

        $i77 = $i68 + 1;

        $i69 = r2.<java.awt.Rectangle: int y>;

        $i76 = $i69 + 1;

        $i71 = r2.<java.awt.Rectangle: int x>;

        $i70 = r2.<java.awt.Rectangle: int width>;

        $i72 = $i71 + $i70;

        $i75 = $i72 - 2;

        $i73 = r2.<java.awt.Rectangle: int y>;

        $i74 = $i73 + 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i77, $i76, $i75, $i74);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r4);

        $i78 = r2.<java.awt.Rectangle: int x>;

        $i91 = $i78 + 1;

        $i80 = r2.<java.awt.Rectangle: int y>;

        $i79 = r2.<java.awt.Rectangle: int height>;

        $i81 = $i80 + $i79;

        $i90 = $i81 - 2;

        $i83 = r2.<java.awt.Rectangle: int x>;

        $i82 = r2.<java.awt.Rectangle: int width>;

        $i84 = $i83 + $i82;

        $i89 = $i84 - 2;

        $i86 = r2.<java.awt.Rectangle: int y>;

        $i85 = r2.<java.awt.Rectangle: int height>;

        $i87 = $i86 + $i85;

        $i88 = $i87 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i91, $i90, $i89, $i88);

        $i104 = r2.<java.awt.Rectangle: int x>;

        $i93 = r2.<java.awt.Rectangle: int y>;

        $i92 = r2.<java.awt.Rectangle: int height>;

        $i94 = $i93 + $i92;

        $i103 = $i94 - 1;

        $i96 = r2.<java.awt.Rectangle: int x>;

        $i95 = r2.<java.awt.Rectangle: int width>;

        $i97 = $i96 + $i95;

        $i102 = $i97 - 3;

        $i99 = r2.<java.awt.Rectangle: int y>;

        $i98 = r2.<java.awt.Rectangle: int height>;

        $i100 = $i99 + $i98;

        $i101 = $i100 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i104, $i103, $i102, $i101);

        goto label3;

     label2:
        $r1 = new java.awt.Rectangle;

        $i1 = r2.<java.awt.Rectangle: int x>;

        $i8 = $i1 + 2;

        $i2 = r2.<java.awt.Rectangle: int y>;

        $i7 = $i2 + 2;

        $i3 = r2.<java.awt.Rectangle: int width>;

        $i6 = $i3 - 4;

        $i4 = r2.<java.awt.Rectangle: int height>;

        $i5 = $i4 - 2;

        specialinvoke $r1.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r1, r3, r4, 0);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);

        $i15 = r2.<java.awt.Rectangle: int x>;

        $i14 = r2.<java.awt.Rectangle: int y>;

        $i13 = r2.<java.awt.Rectangle: int x>;

        $i10 = r2.<java.awt.Rectangle: int y>;

        $i9 = r2.<java.awt.Rectangle: int height>;

        $i11 = $i10 + $i9;

        $i12 = $i11 - 3;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i15, $i14, $i13, $i12);

        $i16 = r2.<java.awt.Rectangle: int x>;

        $i25 = $i16 + 1;

        $i17 = r2.<java.awt.Rectangle: int y>;

        $i24 = $i17 + 1;

        $i18 = r2.<java.awt.Rectangle: int x>;

        $i23 = $i18 + 1;

        $i20 = r2.<java.awt.Rectangle: int y>;

        $i19 = r2.<java.awt.Rectangle: int height>;

        $i21 = $i20 + $i19;

        $i22 = $i21 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i25, $i24, $i23, $i22);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r4);

        $i27 = r2.<java.awt.Rectangle: int x>;

        $i26 = r2.<java.awt.Rectangle: int width>;

        $i28 = $i27 + $i26;

        $i39 = $i28 - 2;

        $i29 = r2.<java.awt.Rectangle: int y>;

        $i38 = $i29 + 1;

        $i31 = r2.<java.awt.Rectangle: int x>;

        $i30 = r2.<java.awt.Rectangle: int width>;

        $i32 = $i31 + $i30;

        $i37 = $i32 - 2;

        $i34 = r2.<java.awt.Rectangle: int y>;

        $i33 = r2.<java.awt.Rectangle: int height>;

        $i35 = $i34 + $i33;

        $i36 = $i35 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i39, $i38, $i37, $i36);

        $i41 = r2.<java.awt.Rectangle: int x>;

        $i40 = r2.<java.awt.Rectangle: int width>;

        $i42 = $i41 + $i40;

        $i52 = $i42 - 1;

        $i51 = r2.<java.awt.Rectangle: int y>;

        $i44 = r2.<java.awt.Rectangle: int x>;

        $i43 = r2.<java.awt.Rectangle: int width>;

        $i45 = $i44 + $i43;

        $i50 = $i45 - 1;

        $i47 = r2.<java.awt.Rectangle: int y>;

        $i46 = r2.<java.awt.Rectangle: int height>;

        $i48 = $i47 + $i46;

        $i49 = $i48 - 3;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i52, $i51, $i50, $i49);

     label3:
        return;
    }

    public java.awt.Color getColor(java.lang.Object)
    {
        java.awt.Color $r3;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        java.lang.Object r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r3 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>(r2);

        return $r3;
    }

    public void paintCommandBarBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r7, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.awt.Graphics r1;
        float $f0, $f1, $f2, $f3;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33;
        java.lang.Boolean $r0;
        javax.swing.JComponent r12;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r8, $r10;
        java.awt.geom.RoundRectangle2D$Float $r3;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r12 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i33 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicPainter: void paintCommandBarBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r12, r1, r4, i4, i33);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r3 = new java.awt.geom.RoundRectangle2D$Float;

        $i0 = r4.<java.awt.Rectangle: int x>;

        $f3 = (float) $i0;

        $i1 = r4.<java.awt.Rectangle: int y>;

        $f2 = (float) $i1;

        $i2 = r4.<java.awt.Rectangle: int width>;

        $f1 = (float) $i2;

        $i3 = r4.<java.awt.Rectangle: int height>;

        $f0 = (float) $i3;

        specialinvoke $r3.<java.awt.geom.RoundRectangle2D$Float: void <init>(float,float,float,float,float,float)>($f3, $f2, $f1, $f0, 4.0F, 4.0F);

        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        $r8 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r9 = virtualinvoke $r8.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        if i4 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r3, $r7, $r9, $z2);

        $r10 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r11);

        if i4 != 0 goto label4;

        $i19 = r4.<java.awt.Rectangle: int x>;

        $i32 = $i19 + 2;

        $i21 = r4.<java.awt.Rectangle: int y>;

        $i20 = r4.<java.awt.Rectangle: int height>;

        $i22 = $i21 + $i20;

        $i31 = $i22 - 1;

        $i24 = r4.<java.awt.Rectangle: int x>;

        $i23 = r4.<java.awt.Rectangle: int width>;

        $i25 = $i24 + $i23;

        $i30 = $i25 - 3;

        $i27 = r4.<java.awt.Rectangle: int y>;

        $i26 = r4.<java.awt.Rectangle: int height>;

        $i28 = $i27 + $i26;

        $i29 = $i28 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i32, $i31, $i30, $i29);

        goto label5;

     label4:
        $i6 = r4.<java.awt.Rectangle: int x>;

        $i5 = r4.<java.awt.Rectangle: int width>;

        $i7 = $i6 + $i5;

        $i18 = $i7 - 1;

        $i8 = r4.<java.awt.Rectangle: int y>;

        $i17 = $i8 + 2;

        $i10 = r4.<java.awt.Rectangle: int x>;

        $i9 = r4.<java.awt.Rectangle: int width>;

        $i11 = $i10 + $i9;

        $i16 = $i11 - 1;

        $i13 = r4.<java.awt.Rectangle: int y>;

        $i12 = r4.<java.awt.Rectangle: int height>;

        $i14 = $i13 + $i12;

        $i15 = $i14 - 3;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i18, $i17, $i16, $i15);

     label5:
        return;
    }

    public void paintFloatingCommandBarBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        javax.swing.JComponent r8;
        java.awt.Rectangle r2;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics2D r1;
        java.awt.Graphics r0;
        int i0, i1;
        boolean $z0;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r8 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 = (java.awt.Graphics2D) r0;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r2, $r5, $r7, $z0);

        return;
    }

    public void paintMenuShadow(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r7, $r9, $r11, $r13;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D r1;
        int i0, i1;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r8, $r10, $r12;
        java.awt.ComponentOrientation $r3;
        java.awt.Graphics r0;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 = (java.awt.Graphics2D) r0;

        $r3 = virtualinvoke r2.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r3.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        $r12 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r13 = virtualinvoke $r12.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        if i0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r4, $r11, $r13, $z1);

        goto label6;

     label3:
        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        $r8 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r9 = virtualinvoke $r8.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        if i0 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r4, $r7, $r9, $z2);

     label6:
        return;
    }

    public java.awt.Color getControl()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("control");

        return $r2;
    }

    public java.awt.Color getControlLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlLt");

        return $r2;
    }

    public java.awt.Color getControlDk()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlDk");

        return $r2;
    }

    public java.awt.Color getControlShadow()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        return $r2;
    }

    public java.awt.Color getGripperForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Gripper.foreground");

        return $r2;
    }

    public java.awt.Color getGripperForegroundLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Gripper.foregroundLt");

        return $r2;
    }

    public java.awt.Color getSeparatorForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Separator.foreground");

        return $r2;
    }

    public java.awt.Color getSeparatorForegroundLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("Separator.foregroundLt");

        return $r2;
    }

    public java.awt.Color getCollapsiblePaneContentBackground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePane.contentBackground");

        return $r2;
    }

    public java.awt.Color getCollapsiblePaneTitleForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.foreground");

        return $r2;
    }

    public java.awt.Color getCollapsiblePaneFocusTitleForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.foreground.focus");

        return $r2;
    }

    public java.awt.Color getCollapsiblePaneTitleForegroundEmphasized()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.foreground.emphasized");

        return $r2;
    }

    public java.awt.Color getCollapsiblePaneFocusTitleForegroundEmphasized()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.foreground.focus.emphasized");

        return $r2;
    }

    public javax.swing.ImageIcon getCollapsiblePaneUpIcon()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.upIcon");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneDownIcon()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.downIcon");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneUpIconEmphasized()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.upIcon.emphasized");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneDownIconEmphasized()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.downIcon.emphasized");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneTitleButtonBackground()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.titleButtonBackground");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneTitleButtonBackgroundEmphasized()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.titleButtonBackground.emphasized");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneUpMask()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.upMask");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public javax.swing.ImageIcon getCollapsiblePaneDownMask()
    {
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;
        javax.swing.ImageIcon $r3;
        javax.swing.Icon $r2;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: javax.swing.Icon getIcon(java.lang.Object)>("CollapsiblePane.downMask");

        $r3 = (javax.swing.ImageIcon) $r2;

        return $r3;
    }

    public java.awt.Color getBackgroundDk()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("backgroundDk");

        return $r2;
    }

    public java.awt.Color getBackgroundLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("backgroundLt");

        return $r2;
    }

    public java.awt.Color getSelectionSelectedDk()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedDk");

        return $r2;
    }

    public java.awt.Color getSelectionSelectedLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedLt");

        return $r2;
    }

    public java.awt.Color getMenuItemBorderColor()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.border");

        return $r2;
    }

    public java.awt.Color getMenuItemBackground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("MenuItem.background");

        return $r2;
    }

    public java.awt.Color getCommandBarTitleBarBackground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CommandBar.titleBarBackground");

        return $r2;
    }

    public java.awt.Color getDockableFrameTitleBarActiveForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrameTitlePane.activeForeground");

        return $r2;
    }

    public java.awt.Color getDockableFrameTitleBarInactiveForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrameTitlePane.inactiveForeground");

        return $r2;
    }

    public java.awt.Color getTitleBarBackground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrameTitlePane.backgroundDk");

        return $r2;
    }

    public java.awt.Color getOptionPaneBannerForeground()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerForeground");

        return $r2;
    }

    public java.awt.Color getTabbedPaneSelectDk()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("TabbedPane.selectDk");

        return $r2;
    }

    public java.awt.Color getTabbedPaneSelectLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("TabbedPane.selectLt");

        return $r2;
    }

    public java.awt.Color getOptionPaneBannerDk()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerDk");

        return $r2;
    }

    public java.awt.Color getOptionPaneBannerLt()
    {
        java.awt.Color $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r1;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r2 = virtualinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("OptionPane.bannerLt");

        return $r2;
    }

    public void paintContentBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r5;
        javax.swing.JComponent r6;
        java.awt.Rectangle r2;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        java.awt.Graphics2D r1;
        java.awt.Graphics r0;
        int i0, i1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r6 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r1 = (java.awt.Graphics2D) r0;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getBackgroundDk()>();

        $r5 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getBackgroundLt()>();

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r1, r2, $r4, $r5, 0);

        return;
    }

    public void paintGripper(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r3, $r4;
        java.awt.Graphics r1;
        java.awt.Rectangle r0;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i25, i26, i27, i28;
        javax.swing.JComponent r5;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r5 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i24 := @parameter3: int;

        i23 := @parameter4: int;

        $i0 = r0.<java.awt.Rectangle: int width>;

        if $i0 <= 30 goto label01;

        i24 = 1;

        goto label02;

     label01:
        $i1 = r0.<java.awt.Rectangle: int height>;

        if $i1 <= 30 goto label02;

        i24 = 0;

     label02:
        if i24 != 0 goto label03;

        $i25 = r0.<java.awt.Rectangle: int height>;

        goto label04;

     label03:
        $i25 = r0.<java.awt.Rectangle: int width>;

     label04:
        $i2 = $i25 - 6;

        $i3 = $i2 / 4;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(9, $i3);

        $i21 = r0.<java.awt.Rectangle: int y>;

        $i22 = r0.<java.awt.Rectangle: int x>;

        if i24 != 0 goto label05;

        $i14 = r0.<java.awt.Rectangle: int height>;

        $i16 = $i14 / 2;

        $i15 = $i4 * 2;

        $i17 = $i16 - $i15;

        i26 = $i21 + $i17;

        $i18 = r0.<java.awt.Rectangle: int width>;

        $i19 = $i18 / 2;

        $i20 = $i19 - 1;

        i27 = $i22 + $i20;

        goto label06;

     label05:
        $i5 = r0.<java.awt.Rectangle: int width>;

        $i7 = $i5 / 2;

        $i6 = $i4 * 2;

        $i8 = $i7 - $i6;

        i27 = $i22 + $i8;

        $i9 = r0.<java.awt.Rectangle: int height>;

        $i10 = $i9 / 2;

        $i11 = $i10 - 1;

        i26 = $i21 + $i11;

     label06:
        i28 = 0;

     label07:
        if i28 >= $i4 goto label10;

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getGripperForegroundLt()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i13 = i27 + 1;

        $i12 = i26 + 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i13, $i12, 2, 2);

        $r4 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getGripperForeground()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(i27, i26, 2, 2);

        if i24 != 0 goto label08;

        i26 = i26 + 4;

        goto label09;

     label08:
        i27 = i27 + 4;

     label09:
        i28 = i28 + 1;

        goto label07;

     label10:
        return;
    }

    public void paintChevronMore(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        byte $b29, $b30, $b31, $b32, $b33, $b34, $b35, $b36, $b37, $b38, $b39, $b40;
        com.jidesoft.plaf.office2003.Office2003Painter r16;
        java.awt.ComponentOrientation $r7;
        boolean $z0;
        java.awt.Graphics r1;
        java.awt.Rectangle r0;
        int $i0, $i1, i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, $i42, $i44, $i46, $i48, $i50, $i52, $i54, $i56, $i58, $i60;
        javax.swing.JComponent r6;

        r16 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r6 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i2 := @parameter3: int;

        i4 := @parameter4: int;

        $i0 = r0.<java.awt.Rectangle: int x>;

        i5 = $i0 + 4;

        $i1 = r0.<java.awt.Rectangle: int x>;

        i6 = $i1 + 5;

        if i2 != 0 goto label1;

        $b40 = 1;

        $b39 = 1;

        $b38 = 1;

        $b37 = 1;

        $b36 = 1;

        $b35 = 1;

        $b34 = 1;

        $b33 = 1;

        $b32 = 1;

        $b31 = 1;

        $b30 = 1;

        $b29 = 1;

        goto label2;

     label1:
        $b40 = 0;

        $b39 = 0;

        $b38 = 0;

        $b37 = 0;

        $b36 = 0;

        $b35 = 0;

        $b34 = 0;

        $b33 = 0;

        $b32 = 0;

        $b31 = 0;

        $b30 = 0;

        $b29 = 0;

     label2:
        if i2 != 0 goto label4;

        $r7 = virtualinvoke r6.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label3;

        $i3 = r0.<java.awt.Rectangle: int width>;

        i7 = $i3 - 8;

        $i42 = (int) -1;

        i8 = i7 + $i42;

        i9 = i6 + 1;

        $r12 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(javax.swing.JComponent,java.awt.Graphics,java.awt.Color,int,int,int,int)>(r6, r1, $r12, i8, i9, 3, $b38);

        $i44 = (int) -4;

        i10 = i8 + $i44;

        $r13 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(javax.swing.JComponent,java.awt.Graphics,java.awt.Color,int,int,int,int)>(r6, r1, $r13, i10, i9, 3, $b31);

        i11 = i10 + 1;

        i12 = i11 + 4;

        $i46 = (int) -1;

        i13 = i9 + $i46;

        $r14 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(javax.swing.JComponent,java.awt.Graphics,java.awt.Color,int,int,int,int)>(r6, r1, $r14, i12, i13, 3, $b39);

        $i48 = (int) -4;

        i14 = i12 + $i48;

        $r15 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(javax.swing.JComponent,java.awt.Graphics,java.awt.Color,int,int,int,int)>(r6, r1, $r15, i14, i13, 3, $b32);

        goto label5;

     label3:
        i15 = i5 + 1;

        i16 = i6 + 1;

        $r8 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r8, i15, i16, 3, $b37);

        i17 = i15 + 4;

        $r9 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r9, i17, i16, 3, $b33);

        $i50 = (int) -1;

        i18 = i17 + $i50;

        $i52 = (int) -4;

        i19 = i18 + $i52;

        $i54 = (int) -1;

        i20 = i16 + $i54;

        $r10 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r10, i19, i20, 3, $b40);

        i21 = i19 + 4;

        $r11 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r11, i21, i20, 3, $b29);

        goto label5;

     label4:
        if i2 != 1 goto label5;

        i22 = i5 + 1;

        i23 = i6 + 1;

        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r2, i22, i23, 3, $b35);

        i24 = i23 + 4;

        $r3 = <java.awt.Color: java.awt.Color WHITE>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r3, i22, i24, 3, $b36);

        $i56 = (int) -1;

        i25 = i22 + $i56;

        $i58 = (int) -1;

        i26 = i24 + $i58;

        $i60 = (int) -4;

        i27 = i26 + $i60;

        $r4 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r4, i25, i27, 3, $b34);

        i28 = i27 + 4;

        $r5 = <java.awt.Color: java.awt.Color BLACK>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, $r5, i25, i28, 3, $b30);

     label5:
        return;
    }

    public void paintChevronOption(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r6;
        boolean $z0;
        java.awt.Graphics r1;
        java.awt.Rectangle r0;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, i23, $i25, $i27;
        javax.swing.JComponent r3;
        java.awt.ComponentOrientation $r4;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r3 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i17 := @parameter4: int;

        if i0 != 0 goto label2;

        $r4 = virtualinvoke r3.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r4.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label1;

        $i13 = r0.<java.awt.Rectangle: int x>;

        i18 = $i13 + 2;

        $i15 = r0.<java.awt.Rectangle: int y>;

        $i14 = r0.<java.awt.Rectangle: int height>;

        $i16 = $i15 + $i14;

        i19 = $i16 - 10;

        goto label4;

     label1:
        $i8 = r0.<java.awt.Rectangle: int x>;

        $i7 = r0.<java.awt.Rectangle: int width>;

        $i9 = $i8 + $i7;

        i18 = $i9 - 8;

        $i11 = r0.<java.awt.Rectangle: int y>;

        $i10 = r0.<java.awt.Rectangle: int height>;

        $i12 = $i11 + $i10;

        i19 = $i12 - 10;

        goto label4;

     label2:
        if i0 != 1 goto label3;

        $i2 = r0.<java.awt.Rectangle: int x>;

        $i1 = r0.<java.awt.Rectangle: int width>;

        $i3 = $i2 + $i1;

        i18 = $i3 - 10;

        $i5 = r0.<java.awt.Rectangle: int y>;

        $i4 = r0.<java.awt.Rectangle: int height>;

        $i6 = $i5 + $i4;

        i19 = $i6 - 8;

        goto label4;

     label3:
        return;

     label4:
        i20 = i18 + 1;

        i21 = i19 + 1;

        $r5 = <java.awt.Color: java.awt.Color WHITE>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        specialinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintDown(java.awt.Graphics,int,int,int)>(r1, i20, i21, i0);

        $i25 = (int) -1;

        i22 = i20 + $i25;

        $i27 = (int) -1;

        i23 = i21 + $i27;

        $r6 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        specialinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintDown(java.awt.Graphics,int,int,int)>(r1, i22, i23, i0);

        return;
    }

    private void paintDown(java.awt.Graphics, int, int, int)
    {
        java.awt.Color $r1, $r2;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.awt.Graphics r0;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        if i0 != 0 goto label1;

        $i5 = i1 + 4;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i1, i2, $i5, i2);

        $r2 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        $i6 = i2 + 3;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r0, $r2, i1, $i6, 5, 0);

        goto label2;

     label1:
        $i3 = i2 + 4;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i1, i2, i1, $i3);

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        $i4 = i1 + 3;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r0, $r1, $i4, i2, 5, i0);

     label2:
        return;
    }

    public void paintDockableFrameBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r7, $r9;
        java.awt.Rectangle $r3, r4;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0, $z1;
        javax.swing.JComponent r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r8;
        java.awt.Graphics r1;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $z0 = virtualinvoke r0.<javax.swing.JComponent: boolean isOpaque()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r3 = new java.awt.Rectangle;

        $i3 = r4.<java.awt.Rectangle: int x>;

        $i2 = r4.<java.awt.Rectangle: int y>;

        $i1 = r4.<java.awt.Rectangle: int width>;

        $i0 = r4.<java.awt.Rectangle: int height>;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrame.backgroundLt");

        $r8 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r9 = virtualinvoke $r8.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrame.backgroundDk");

        if i4 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r3, $r7, $r9, $z1);

        return;
    }

    public void paintDockableFrameTitlePane(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r14, $r15;
        javax.swing.border.Border $r2, $r11;
        boolean $z0, $z1, z3, $z4, $z5, $z6;
        java.awt.Graphics r4;
        java.awt.Rectangle $r3, r13;
        java.awt.Insets $r12;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        java.lang.Boolean $r0;
        javax.swing.JComponent r1;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r7, $r8, $r9;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.awt.Graphics;

        r13 := @parameter2: java.awt.Rectangle;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label01;

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicPainter: void paintDockableFrameTitlePane(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r4, r13, i1, i0);

        return;

     label01:
        i10 = r13.<java.awt.Rectangle: int x>;

        i11 = r13.<java.awt.Rectangle: int y>;

        i12 = r13.<java.awt.Rectangle: int width>;

        i13 = r13.<java.awt.Rectangle: int height>;

        $r2 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        if $r2 == null goto label02;

        $r11 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        $r12 = interfaceinvoke $r11.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $i2 = $r12.<java.awt.Insets: int left>;

        i10 = i10 + $i2;

        $i3 = $r12.<java.awt.Insets: int top>;

        i11 = i11 + $i3;

        $i5 = $r12.<java.awt.Insets: int right>;

        $i4 = $r12.<java.awt.Insets: int left>;

        $i6 = $i5 + $i4;

        i12 = i12 - $i6;

        $i8 = $r12.<java.awt.Insets: int top>;

        $i7 = $r12.<java.awt.Insets: int bottom>;

        $i9 = $i8 + $i7;

        i13 = i13 - $i9;

     label02:
        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>(i10, i11, i12, i13);

        if i0 != 3 goto label03;

        $z6 = 1;

        $z5 = 1;

        goto label04;

     label03:
        $z6 = 0;

        $z5 = 0;

     label04:
        z3 = $z5;

        $r10 = (java.awt.Graphics2D) r4;

        if $z6 == 0 goto label05;

        $r9 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r14 = virtualinvoke $r9.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedLt");

        goto label06;

     label05:
        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r14 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrameTitlePane.backgroundLt");

     label06:
        if z3 == 0 goto label07;

        $r8 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r15 = virtualinvoke $r8.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.SelectedDk");

        goto label08;

     label07:
        $r7 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r15 = virtualinvoke $r7.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("DockableFrameTitlePane.backgroundDk");

     label08:
        if i1 != 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r10, $r3, $r14, $r15, $z4);

        return;
    }

    private void paintCollapsiblePaneTitlePane(java.awt.Graphics2D, java.awt.Color, java.awt.Color, int, java.awt.Rectangle)
    {
        java.awt.Color $r1, r2, r5;
        java.awt.Graphics2D r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200;
        com.jidesoft.plaf.office2003.Office2003Painter r9;
        java.awt.Rectangle r3, $r4, $r6, $r7, $r8;

        r9 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: java.awt.Graphics2D;

        r2 := @parameter1: java.awt.Color;

        r5 := @parameter2: java.awt.Color;

        i0 := @parameter3: int;

        r3 := @parameter4: java.awt.Rectangle;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.Color getColor()>();

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r2);

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label2;
            default: goto label5;
        };

     label1:
        $i101 = r3.<java.awt.Rectangle: int x>;

        $i108 = $i101 + 2;

        $i107 = r3.<java.awt.Rectangle: int y>;

        $i103 = r3.<java.awt.Rectangle: int x>;

        $i102 = r3.<java.awt.Rectangle: int width>;

        $i104 = $i103 + $i102;

        $i106 = $i104 - 1;

        $i105 = r3.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i108, $i107, $i106, $i105);

        $i109 = r3.<java.awt.Rectangle: int x>;

        $i118 = $i109 + 1;

        $i110 = r3.<java.awt.Rectangle: int y>;

        $i117 = $i110 + 1;

        $i112 = r3.<java.awt.Rectangle: int x>;

        $i111 = r3.<java.awt.Rectangle: int width>;

        $i113 = $i112 + $i111;

        $i116 = $i113 - 1;

        $i114 = r3.<java.awt.Rectangle: int y>;

        $i115 = $i114 + 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i118, $i117, $i116, $i115);

        $r7 = new java.awt.Rectangle;

        $i124 = r3.<java.awt.Rectangle: int x>;

        $i119 = r3.<java.awt.Rectangle: int y>;

        $i123 = $i119 + 2;

        $i122 = r3.<java.awt.Rectangle: int width>;

        $i120 = r3.<java.awt.Rectangle: int height>;

        $i121 = $i120 - 4;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i124, $i123, $i122, $i121);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r7, r2, r5, 1);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        $i125 = r3.<java.awt.Rectangle: int x>;

        $i138 = $i125 + 1;

        $i127 = r3.<java.awt.Rectangle: int y>;

        $i126 = r3.<java.awt.Rectangle: int height>;

        $i128 = $i127 + $i126;

        $i137 = $i128 - 2;

        $i130 = r3.<java.awt.Rectangle: int x>;

        $i129 = r3.<java.awt.Rectangle: int width>;

        $i131 = $i130 + $i129;

        $i136 = $i131 - 1;

        $i133 = r3.<java.awt.Rectangle: int y>;

        $i132 = r3.<java.awt.Rectangle: int height>;

        $i134 = $i133 + $i132;

        $i135 = $i134 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i138, $i137, $i136, $i135);

        $i139 = r3.<java.awt.Rectangle: int x>;

        $i152 = $i139 + 2;

        $i141 = r3.<java.awt.Rectangle: int y>;

        $i140 = r3.<java.awt.Rectangle: int height>;

        $i142 = $i141 + $i140;

        $i151 = $i142 - 1;

        $i144 = r3.<java.awt.Rectangle: int x>;

        $i143 = r3.<java.awt.Rectangle: int width>;

        $i145 = $i144 + $i143;

        $i150 = $i145 - 1;

        $i147 = r3.<java.awt.Rectangle: int y>;

        $i146 = r3.<java.awt.Rectangle: int height>;

        $i148 = $i147 + $i146;

        $i149 = $i148 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i152, $i151, $i150, $i149);

        goto label5;

     label2:
        $i7 = r3.<java.awt.Rectangle: int x>;

        $i6 = r3.<java.awt.Rectangle: int y>;

        $i2 = r3.<java.awt.Rectangle: int x>;

        $i1 = r3.<java.awt.Rectangle: int width>;

        $i3 = $i2 + $i1;

        $i5 = $i3 - 3;

        $i4 = r3.<java.awt.Rectangle: int y>;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i7, $i6, $i5, $i4);

        $i16 = r3.<java.awt.Rectangle: int x>;

        $i8 = r3.<java.awt.Rectangle: int y>;

        $i15 = $i8 + 1;

        $i10 = r3.<java.awt.Rectangle: int x>;

        $i9 = r3.<java.awt.Rectangle: int width>;

        $i11 = $i10 + $i9;

        $i14 = $i11 - 1;

        $i12 = r3.<java.awt.Rectangle: int y>;

        $i13 = $i12 + 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i16, $i15, $i14, $i13);

        $r4 = new java.awt.Rectangle;

        $i22 = r3.<java.awt.Rectangle: int x>;

        $i17 = r3.<java.awt.Rectangle: int y>;

        $i21 = $i17 + 2;

        $i20 = r3.<java.awt.Rectangle: int width>;

        $i18 = r3.<java.awt.Rectangle: int height>;

        $i19 = $i18 - 4;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>($i22, $i21, $i20, $i19);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r4, r2, r5, 1);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        $i35 = r3.<java.awt.Rectangle: int x>;

        $i24 = r3.<java.awt.Rectangle: int y>;

        $i23 = r3.<java.awt.Rectangle: int height>;

        $i25 = $i24 + $i23;

        $i34 = $i25 - 2;

        $i27 = r3.<java.awt.Rectangle: int x>;

        $i26 = r3.<java.awt.Rectangle: int width>;

        $i28 = $i27 + $i26;

        $i33 = $i28 - 1;

        $i30 = r3.<java.awt.Rectangle: int y>;

        $i29 = r3.<java.awt.Rectangle: int height>;

        $i31 = $i30 + $i29;

        $i32 = $i31 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i35, $i34, $i33, $i32);

        $i48 = r3.<java.awt.Rectangle: int x>;

        $i37 = r3.<java.awt.Rectangle: int y>;

        $i36 = r3.<java.awt.Rectangle: int height>;

        $i38 = $i37 + $i36;

        $i47 = $i38 - 1;

        $i40 = r3.<java.awt.Rectangle: int x>;

        $i39 = r3.<java.awt.Rectangle: int width>;

        $i41 = $i40 + $i39;

        $i46 = $i41 - 2;

        $i43 = r3.<java.awt.Rectangle: int y>;

        $i42 = r3.<java.awt.Rectangle: int height>;

        $i44 = $i43 + $i42;

        $i45 = $i44 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i48, $i47, $i46, $i45);

        goto label5;

     label3:
        $i159 = r3.<java.awt.Rectangle: int x>;

        $i158 = r3.<java.awt.Rectangle: int y>;

        $i157 = r3.<java.awt.Rectangle: int x>;

        $i154 = r3.<java.awt.Rectangle: int y>;

        $i153 = r3.<java.awt.Rectangle: int height>;

        $i155 = $i154 + $i153;

        $i156 = $i155 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i159, $i158, $i157, $i156);

        $i160 = r3.<java.awt.Rectangle: int x>;

        $i168 = $i160 + 1;

        $i167 = r3.<java.awt.Rectangle: int y>;

        $i161 = r3.<java.awt.Rectangle: int x>;

        $i166 = $i161 + 1;

        $i163 = r3.<java.awt.Rectangle: int y>;

        $i162 = r3.<java.awt.Rectangle: int height>;

        $i164 = $i163 + $i162;

        $i165 = $i164 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i168, $i167, $i166, $i165);

        $r8 = new java.awt.Rectangle;

        $i169 = r3.<java.awt.Rectangle: int x>;

        $i174 = $i169 + 2;

        $i173 = r3.<java.awt.Rectangle: int y>;

        $i170 = r3.<java.awt.Rectangle: int width>;

        $i172 = $i170 - 4;

        $i171 = r3.<java.awt.Rectangle: int height>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i174, $i173, $i172, $i171);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r8, r2, r5, 0);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        $i176 = r3.<java.awt.Rectangle: int x>;

        $i175 = r3.<java.awt.Rectangle: int width>;

        $i177 = $i176 + $i175;

        $i187 = $i177 - 2;

        $i186 = r3.<java.awt.Rectangle: int y>;

        $i179 = r3.<java.awt.Rectangle: int x>;

        $i178 = r3.<java.awt.Rectangle: int width>;

        $i180 = $i179 + $i178;

        $i185 = $i180 - 2;

        $i182 = r3.<java.awt.Rectangle: int y>;

        $i181 = r3.<java.awt.Rectangle: int height>;

        $i183 = $i182 + $i181;

        $i184 = $i183 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i187, $i186, $i185, $i184);

        $i189 = r3.<java.awt.Rectangle: int x>;

        $i188 = r3.<java.awt.Rectangle: int width>;

        $i190 = $i189 + $i188;

        $i200 = $i190 - 1;

        $i199 = r3.<java.awt.Rectangle: int y>;

        $i192 = r3.<java.awt.Rectangle: int x>;

        $i191 = r3.<java.awt.Rectangle: int width>;

        $i193 = $i192 + $i191;

        $i198 = $i193 - 1;

        $i195 = r3.<java.awt.Rectangle: int y>;

        $i194 = r3.<java.awt.Rectangle: int height>;

        $i196 = $i195 + $i194;

        $i197 = $i196 - 2;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i200, $i199, $i198, $i197);

        goto label5;

     label4:
        $i56 = r3.<java.awt.Rectangle: int x>;

        $i49 = r3.<java.awt.Rectangle: int y>;

        $i55 = $i49 + 2;

        $i54 = r3.<java.awt.Rectangle: int x>;

        $i51 = r3.<java.awt.Rectangle: int y>;

        $i50 = r3.<java.awt.Rectangle: int height>;

        $i52 = $i51 + $i50;

        $i53 = $i52 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i56, $i55, $i54, $i53);

        $i57 = r3.<java.awt.Rectangle: int x>;

        $i66 = $i57 + 1;

        $i58 = r3.<java.awt.Rectangle: int y>;

        $i65 = $i58 + 1;

        $i59 = r3.<java.awt.Rectangle: int x>;

        $i64 = $i59 + 1;

        $i61 = r3.<java.awt.Rectangle: int y>;

        $i60 = r3.<java.awt.Rectangle: int height>;

        $i62 = $i61 + $i60;

        $i63 = $i62 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i66, $i65, $i64, $i63);

        $r6 = new java.awt.Rectangle;

        $i67 = r3.<java.awt.Rectangle: int x>;

        $i72 = $i67 + 2;

        $i71 = r3.<java.awt.Rectangle: int y>;

        $i68 = r3.<java.awt.Rectangle: int width>;

        $i70 = $i68 - 4;

        $i69 = r3.<java.awt.Rectangle: int height>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i72, $i71, $i70, $i69);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r0, $r6, r2, r5, 0);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r5);

        $i74 = r3.<java.awt.Rectangle: int x>;

        $i73 = r3.<java.awt.Rectangle: int width>;

        $i75 = $i74 + $i73;

        $i86 = $i75 - 2;

        $i76 = r3.<java.awt.Rectangle: int y>;

        $i85 = $i76 + 1;

        $i78 = r3.<java.awt.Rectangle: int x>;

        $i77 = r3.<java.awt.Rectangle: int width>;

        $i79 = $i78 + $i77;

        $i84 = $i79 - 2;

        $i81 = r3.<java.awt.Rectangle: int y>;

        $i80 = r3.<java.awt.Rectangle: int height>;

        $i82 = $i81 + $i80;

        $i83 = $i82 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i86, $i85, $i84, $i83);

        $i88 = r3.<java.awt.Rectangle: int x>;

        $i87 = r3.<java.awt.Rectangle: int width>;

        $i89 = $i88 + $i87;

        $i100 = $i89 - 1;

        $i90 = r3.<java.awt.Rectangle: int y>;

        $i99 = $i90 + 2;

        $i92 = r3.<java.awt.Rectangle: int x>;

        $i91 = r3.<java.awt.Rectangle: int width>;

        $i93 = $i92 + $i91;

        $i98 = $i93 - 1;

        $i95 = r3.<java.awt.Rectangle: int y>;

        $i94 = r3.<java.awt.Rectangle: int height>;

        $i96 = $i95 + $i94;

        $i97 = $i96 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i100, $i99, $i98, $i97);

     label5:
        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r1);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, r9, r10;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D r2;
        int i0, i1;
        java.lang.Boolean $r0;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r7;
        java.awt.Graphics r1;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r3 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r3, r1, r8, i0, i1);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $z2 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z2 != 0 goto label2;

        r9 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r4, 0.6F);

        r10 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r4, 0.5F);

        goto label3;

     label2:
        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r9 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundLt");

        $r7 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r10 = virtualinvoke $r7.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundDk");

     label3:
        specialinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: void paintCollapsiblePaneTitlePane(java.awt.Graphics2D,java.awt.Color,java.awt.Color,int,java.awt.Rectangle)>(r2, r9, r10, i0, r8);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundEmphasized(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, r9, r10;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r5;
        java.awt.Graphics2D r2;
        int i0, i1;
        java.lang.Boolean $r0;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r6, $r7;
        java.awt.Graphics r1;

        r5 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r3 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r5.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r3, r1, r8, i0, i1);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $z2 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z2 != 0 goto label2;

        r9 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r4, 0.5F);

        r10 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r4, 0.4F);

        goto label3;

     label2:
        $r6 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r9 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundLt.emphasized");

        $r7 = virtualinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        r10 = virtualinvoke $r7.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundDk.emphasized");

     label3:
        specialinvoke r5.<com.jidesoft.plaf.office2003.Office2003Painter: void paintCollapsiblePaneTitlePane(java.awt.Graphics2D,java.awt.Color,java.awt.Color,int,java.awt.Rectangle)>(r2, r9, r10, i0, r8);

        return;
    }

    public void paintCollapsiblePanesBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r9, $r11, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.Graphics r2;
        java.awt.Rectangle $r5, r6, $r12;
        com.jidesoft.plaf.office2003.Office2003Painter r7;
        java.awt.Graphics2D r3;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Boolean $r1;
        javax.swing.JComponent r0;
        com.jidesoft.plaf.office2003.Office2003Theme $r8, $r10;

        r7 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r6 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i9 := @parameter4: int;

        $z0 = virtualinvoke r0.<javax.swing.JComponent: boolean isOpaque()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $z2 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        specialinvoke r7.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePanesBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r2, r6, i4, i9);

        return;

     label2:
        r3 = (java.awt.Graphics2D) r2;

        $r4 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $z3 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z3 != 0 goto label5;

        $r12 = new java.awt.Rectangle;

        $i8 = r6.<java.awt.Rectangle: int x>;

        $i7 = r6.<java.awt.Rectangle: int y>;

        $i6 = r6.<java.awt.Rectangle: int width>;

        $i5 = r6.<java.awt.Rectangle: int height>;

        specialinvoke $r12.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        $r13 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $r14 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r13, 0.6F);

        $r15 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        if i4 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r12, $r14, $r15, $z4);

        goto label8;

     label5:
        $r5 = new java.awt.Rectangle;

        $i3 = r6.<java.awt.Rectangle: int x>;

        $i2 = r6.<java.awt.Rectangle: int y>;

        $i1 = r6.<java.awt.Rectangle: int width>;

        $i0 = r6.<java.awt.Rectangle: int height>;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r8 = virtualinvoke r7.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r9 = virtualinvoke $r8.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePanes.backgroundLt");

        $r10 = virtualinvoke r7.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePanes.backgroundDk");

        if i4 != 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r5, $r9, $r11, $z5);

     label8:
        return;
    }

    private void paintCollapsiblePaneTitlePanePlain(java.awt.Graphics2D, java.awt.Color, java.awt.Color, int, java.awt.Rectangle)
    {
        java.awt.Color r3, r4;
        java.awt.Rectangle $r0, r1, $r5, $r6, $r7, $r8, r10;
        com.jidesoft.plaf.office2003.Office2003Painter r9;
        java.awt.Graphics2D r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0;

        r9 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r2 := @parameter0: java.awt.Graphics2D;

        r4 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        i0 := @parameter3: int;

        r1 := @parameter4: java.awt.Rectangle;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label2;
            default: goto label4;
        };

     label1:
        $r6 = new java.awt.Rectangle;

        $i5 = r1.<java.awt.Rectangle: int x>;

        $i4 = r1.<java.awt.Rectangle: int width>;

        $i6 = $i5 + $i4;

        $i9 = $i6 - 1;

        $i8 = r1.<java.awt.Rectangle: int y>;

        $i7 = r1.<java.awt.Rectangle: int height>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i9, $i8, 1, $i7);

        r10 = $r6;

        goto label5;

     label2:
        $r0 = new java.awt.Rectangle;

        $i3 = r1.<java.awt.Rectangle: int x>;

        $i2 = r1.<java.awt.Rectangle: int y>;

        $i1 = r1.<java.awt.Rectangle: int height>;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, 1, $i1);

        r10 = $r0;

        goto label5;

     label3:
        $r7 = new java.awt.Rectangle;

        $i12 = r1.<java.awt.Rectangle: int x>;

        $i11 = r1.<java.awt.Rectangle: int y>;

        $i10 = r1.<java.awt.Rectangle: int width>;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i12, $i11, $i10, 1);

        r10 = $r7;

        goto label5;

     label4:
        $r8 = new java.awt.Rectangle;

        $i18 = r1.<java.awt.Rectangle: int x>;

        $i14 = r1.<java.awt.Rectangle: int y>;

        $i13 = r1.<java.awt.Rectangle: int height>;

        $i15 = $i14 + $i13;

        $i17 = $i15 - 1;

        $i16 = r1.<java.awt.Rectangle: int width>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i18, $i17, $i16, 1);

        r10 = $r8;

     label5:
        $r5 = r10;

        if i0 == 1 goto label6;

        if i0 != 5 goto label7;

     label6:
        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r5, r3, r4, $z0);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundPlainEmphasized(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        javax.swing.JComponent r9;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics2D r2;
        java.awt.Graphics r1;
        int i0, i1;
        java.lang.Boolean $r0;
        boolean $z0, $z1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r9 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r3.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundPlainEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r9, r1, r8, i0, i1);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundLt.emphasized");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundDk.emphasized");

        specialinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: void paintCollapsiblePaneTitlePanePlain(java.awt.Graphics2D,java.awt.Color,java.awt.Color,int,java.awt.Rectangle)>(r2, $r7, $r5, i0, r8);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundPlain(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        javax.swing.JComponent r9;
        java.awt.Rectangle r8;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics2D r2;
        java.awt.Graphics r1;
        int i0, i1;
        java.lang.Boolean $r0;
        boolean $z0, $z1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r9 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r8 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r3.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundPlain(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r9, r1, r8, i0, i1);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundLt");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundDk");

        specialinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: void paintCollapsiblePaneTitlePanePlain(java.awt.Graphics2D,java.awt.Color,java.awt.Color,int,java.awt.Rectangle)>(r2, $r7, $r5, i0, r8);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundSeparatorEmphasized(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        java.awt.Rectangle $r8, r9;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Boolean $r0;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r10;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics r1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r10 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r9 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r3.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundSeparatorEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r10, r1, r9, i4, i5);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundLt.emphasized");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("CollapsiblePaneTitlePane.backgroundDk.emphasized");

        $r8 = new java.awt.Rectangle;

        $i3 = r9.<java.awt.Rectangle: int x>;

        $i2 = r9.<java.awt.Rectangle: int y>;

        $i1 = r9.<java.awt.Rectangle: int width>;

        $i0 = r9.<java.awt.Rectangle: int height>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        if i4 == 1 goto label2;

        if i4 != 5 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r8, $r7, $r5, $z2);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        java.awt.Rectangle $r8, r9;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Boolean $r0;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r10;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r6;
        java.awt.Graphics r1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r10 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r9 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r3.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r10, r1, r9, i4, i5);

        return;

     label1:
        r2 = (java.awt.Graphics2D) r1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("backgroundLt");

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("backgroundDk");

        $r8 = new java.awt.Rectangle;

        $i3 = r9.<java.awt.Rectangle: int x>;

        $i2 = r9.<java.awt.Rectangle: int y>;

        $i1 = r9.<java.awt.Rectangle: int width>;

        $i0 = r9.<java.awt.Rectangle: int height>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        if i4 == 1 goto label2;

        if i4 != 5 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r8, $r5, $r7, $z2);

        return;
    }

    public void paintTabAreaBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r8, $r9;
        com.jidesoft.swing.JideTabbedPane $r10, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.awt.Graphics r3;
        java.awt.Rectangle r5, $r11, $r12, $r13, $r14;
        com.jidesoft.plaf.office2003.Office2003Painter r7;
        java.awt.Graphics2D r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23;
        java.lang.Boolean $r0, $r15;
        javax.swing.JComponent r1;
        java.lang.Object $r2;

        r7 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r5 := @parameter2: java.awt.Rectangle;

        i22 := @parameter3: int;

        i23 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label01;

        specialinvoke r7.<com.jidesoft.plaf.basic.BasicPainter: void paintTabAreaBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r3, r5, i22, i23);

        return;

     label01:
        $z2 = r1 instanceof com.jidesoft.swing.JideTabbedPane;

        if $z2 == 0 goto label02;

        $r16 = (com.jidesoft.swing.JideTabbedPane) r1;

        $i21 = virtualinvoke $r16.<com.jidesoft.swing.JideTabbedPane: int getColorTheme()>();

        if $i21 == 2 goto label02;

        specialinvoke r7.<com.jidesoft.plaf.basic.BasicPainter: void paintTabAreaBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r3, r5, i22, i23);

        goto label11;

     label02:
        $z3 = virtualinvoke r1.<javax.swing.JComponent: boolean isOpaque()>();

        if $z3 == 0 goto label11;

        $r2 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("JideTabbedPane.gradientTabArea");

        $z4 = $r2 instanceof java.lang.Boolean;

        if $z4 == 0 goto label03;

        $r15 = (java.lang.Boolean) $r2;

        $z6 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        goto label04;

     label03:
        $z6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object,boolean)>("JideTabbedPane.gradientTabArea", 1);

     label04:
        $z5 = r1 instanceof com.jidesoft.swing.JideTabbedPane;

        if $z5 == 0 goto label10;

        if $z6 == 0 goto label10;

        r6 = (java.awt.Graphics2D) r3;

        $r8 = virtualinvoke r7.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getTabAreaBackgroundDk()>();

        $r9 = virtualinvoke r7.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getTabAreaBackgroundLt()>();

        $r10 = (com.jidesoft.swing.JideTabbedPane) r1;

        $i4 = virtualinvoke $r10.<com.jidesoft.swing.JideTabbedPane: int getTabPlacement()>();

        tableswitch($i4)
        {
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label08;
            default: goto label09;
        };

     label05:
        $r14 = new java.awt.Rectangle;

        $i20 = r5.<java.awt.Rectangle: int x>;

        $i19 = r5.<java.awt.Rectangle: int y>;

        $i18 = r5.<java.awt.Rectangle: int width>;

        $i17 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r14.<java.awt.Rectangle: void <init>(int,int,int,int)>($i20, $i19, $i18, $i17);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r6, $r14, $r8, $r9, 1);

        goto label09;

     label06:
        $r12 = new java.awt.Rectangle;

        $i12 = r5.<java.awt.Rectangle: int x>;

        $i11 = r5.<java.awt.Rectangle: int y>;

        $i10 = r5.<java.awt.Rectangle: int width>;

        $i9 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r12.<java.awt.Rectangle: void <init>(int,int,int,int)>($i12, $i11, $i10, $i9);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r6, $r12, $r9, $r8, 1);

        goto label09;

     label07:
        $r13 = new java.awt.Rectangle;

        $i16 = r5.<java.awt.Rectangle: int x>;

        $i15 = r5.<java.awt.Rectangle: int y>;

        $i14 = r5.<java.awt.Rectangle: int width>;

        $i13 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r13.<java.awt.Rectangle: void <init>(int,int,int,int)>($i16, $i15, $i14, $i13);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r6, $r13, $r8, $r9, 0);

        goto label09;

     label08:
        $r11 = new java.awt.Rectangle;

        $i8 = r5.<java.awt.Rectangle: int x>;

        $i7 = r5.<java.awt.Rectangle: int y>;

        $i6 = r5.<java.awt.Rectangle: int width>;

        $i5 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r6, $r11, $r9, $r8, 0);

     label09:
        goto label11;

     label10:
        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i3 = r5.<java.awt.Rectangle: int x>;

        $i2 = r5.<java.awt.Rectangle: int y>;

        $i1 = r5.<java.awt.Rectangle: int width>;

        $i0 = r5.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

     label11:
        return;
    }

    public void paintHeaderBoxBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r6, $r8, $r9, $r11, $r12;
        java.awt.Graphics r2;
        java.awt.Rectangle r3;
        com.jidesoft.plaf.office2003.Office2003Painter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        javax.swing.JComponent r1;
        com.jidesoft.plaf.office2003.Office2003Theme $r4, $r7, $r10;

        r0 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicPainter: void paintHeaderBoxBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r2, r3, i0, i1);

        if i1 != 2 goto label1;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r5 = virtualinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.Rollover");

        $r6 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r5, 0.3F);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i2 = r3.<java.awt.Rectangle: int x>;

        $i15 = $i2 + 1;

        $i4 = r3.<java.awt.Rectangle: int y>;

        $i3 = r3.<java.awt.Rectangle: int height>;

        $i5 = $i4 + $i3;

        $i14 = $i5 - 3;

        $i7 = r3.<java.awt.Rectangle: int x>;

        $i6 = r3.<java.awt.Rectangle: int width>;

        $i8 = $i7 + $i6;

        $i13 = $i8 - 2;

        $i10 = r3.<java.awt.Rectangle: int y>;

        $i9 = r3.<java.awt.Rectangle: int height>;

        $i11 = $i10 + $i9;

        $i12 = $i11 - 3;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i15, $i14, $i13, $i12);

        $r7 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r8 = virtualinvoke $r7.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.Rollover");

        $r9 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r8, 0.35F);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i16 = r3.<java.awt.Rectangle: int x>;

        $i29 = $i16 + 2;

        $i18 = r3.<java.awt.Rectangle: int y>;

        $i17 = r3.<java.awt.Rectangle: int height>;

        $i19 = $i18 + $i17;

        $i28 = $i19 - 2;

        $i21 = r3.<java.awt.Rectangle: int x>;

        $i20 = r3.<java.awt.Rectangle: int width>;

        $i22 = $i21 + $i20;

        $i27 = $i22 - 3;

        $i24 = r3.<java.awt.Rectangle: int y>;

        $i23 = r3.<java.awt.Rectangle: int height>;

        $i25 = $i24 + $i23;

        $i26 = $i25 - 2;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i29, $i28, $i27, $i26);

        $r10 = virtualinvoke r0.<com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme getCurrentTheme()>();

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.awt.Color getColor(java.lang.Object)>("selection.Rollover");

        $r12 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r11, 0.4F);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i30 = r3.<java.awt.Rectangle: int x>;

        $i43 = $i30 + 3;

        $i32 = r3.<java.awt.Rectangle: int y>;

        $i31 = r3.<java.awt.Rectangle: int height>;

        $i33 = $i32 + $i31;

        $i42 = $i33 - 1;

        $i35 = r3.<java.awt.Rectangle: int x>;

        $i34 = r3.<java.awt.Rectangle: int width>;

        $i36 = $i35 + $i34;

        $i41 = $i36 - 4;

        $i38 = r3.<java.awt.Rectangle: int y>;

        $i37 = r3.<java.awt.Rectangle: int height>;

        $i39 = $i38 + $i37;

        $i40 = $i39 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i43, $i42, $i41, $i40);

     label1:
        return;
    }

    public void paintToolBarSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r5, $r6, $r7;
        java.awt.Graphics r2;
        java.awt.Rectangle r0;
        com.jidesoft.plaf.office2003.Office2003Painter r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, i20, i21, i22, i23, i24, $i26;
        javax.swing.JComponent r1;

        r3 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i18 := @parameter4: int;

        if i0 != 0 goto label1;

        $i19 = r0.<java.awt.Rectangle: int height>;

        goto label2;

     label1:
        $i19 = r0.<java.awt.Rectangle: int width>;

     label2:
        $i26 = (int) -9;

        i20 = $i19 + $i26;

        $i1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        if $i1 != 0 goto label3;

        $i10 = r0.<java.awt.Rectangle: int y>;

        i21 = $i10 + 5;

        $i11 = r0.<java.awt.Rectangle: int x>;

        i22 = $i11 + 1;

        $r6 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForeground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i12 = i21 + i20;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i22, i21, i22, $i12);

        $r7 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForegroundLt()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i17 = i22 + 1;

        $i16 = i21 + 1;

        $i15 = i22 + 1;

        $i13 = i21 + i20;

        $i14 = $i13 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i17, $i16, $i15, $i14);

        goto label4;

     label3:
        $i2 = r0.<java.awt.Rectangle: int y>;

        i23 = $i2 + 1;

        $i3 = r0.<java.awt.Rectangle: int x>;

        i24 = $i3 + 5;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForeground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i4 = i24 + i20;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i24, i23, $i4, i23);

        $r5 = virtualinvoke r3.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForegroundLt()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i9 = i24 + 1;

        $i8 = i23 + 1;

        $i5 = i24 + 1;

        $i7 = $i5 + i20;

        $i6 = i23 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i9, $i8, $i7, $i6);

     label4:
        return;
    }

    public void paintPopupMenuSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r6, $r7, $r9, $r10;
        boolean $z0;
        java.awt.Graphics r3;
        java.awt.Rectangle $r4, r5, $r8;
        com.jidesoft.plaf.office2003.Office2003Painter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43;
        javax.swing.JComponent r0;
        java.awt.ComponentOrientation $r1;

        r2 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r5 := @parameter2: java.awt.Rectangle;

        i42 := @parameter3: int;

        i43 := @parameter4: int;

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.shadowWidth");

        $i1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.textIconGap");

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r1.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label1;

        $r8 = new java.awt.Rectangle;

        $i25 = r5.<java.awt.Rectangle: int x>;

        $i24 = r5.<java.awt.Rectangle: int y>;

        $i23 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>($i25, $i24, $i0, $i23);

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintMenuShadow(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r3, $r8, 0, 0);

        $r9 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getMenuItemBackground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i26 = r5.<java.awt.Rectangle: int x>;

        $i31 = $i26 + $i0;

        $i30 = r5.<java.awt.Rectangle: int y>;

        $i27 = r5.<java.awt.Rectangle: int width>;

        $i29 = $i27 - $i0;

        $i28 = r5.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>($i31, $i30, $i29, $i28);

        $r10 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForeground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i32 = r5.<java.awt.Rectangle: int x>;

        $i33 = $i32 + $i0;

        $i41 = $i33 + $i1;

        $i34 = r5.<java.awt.Rectangle: int y>;

        $i40 = $i34 + 1;

        $i36 = r5.<java.awt.Rectangle: int x>;

        $i35 = r5.<java.awt.Rectangle: int width>;

        $i39 = $i36 + $i35;

        $i37 = r5.<java.awt.Rectangle: int y>;

        $i38 = $i37 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i41, $i40, $i39, $i38);

        goto label2;

     label1:
        $r4 = new java.awt.Rectangle;

        $i3 = r5.<java.awt.Rectangle: int x>;

        $i2 = r5.<java.awt.Rectangle: int width>;

        $i4 = $i3 + $i2;

        $i7 = $i4 - $i0;

        $i6 = r5.<java.awt.Rectangle: int y>;

        $i5 = r5.<java.awt.Rectangle: int height>;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>($i7, $i6, $i0, $i5);

        virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: void paintMenuShadow(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r3, $r4, 0, 0);

        $r6 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getMenuItemBackground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i12 = r5.<java.awt.Rectangle: int x>;

        $i11 = r5.<java.awt.Rectangle: int y>;

        $i8 = r5.<java.awt.Rectangle: int width>;

        $i10 = $i8 - $i0;

        $i9 = r5.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>($i12, $i11, $i10, $i9);

        $r7 = virtualinvoke r2.<com.jidesoft.plaf.office2003.Office2003Painter: java.awt.Color getSeparatorForeground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i22 = r5.<java.awt.Rectangle: int x>;

        $i13 = r5.<java.awt.Rectangle: int y>;

        $i21 = $i13 + 1;

        $i15 = r5.<java.awt.Rectangle: int x>;

        $i14 = r5.<java.awt.Rectangle: int width>;

        $i16 = $i15 + $i14;

        $i17 = $i16 - $i0;

        $i20 = $i17 - $i1;

        $i18 = r5.<java.awt.Rectangle: int y>;

        $i19 = $i18 + 1;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i22, $i21, $i20, $i19);

     label2:
        return;
    }

    public void paintStatusBarSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r3, $r4, $r5, $r6;
        java.awt.Rectangle r1;
        com.jidesoft.plaf.office2003.Office2003Painter r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, i15, i16, i17, $i19;
        javax.swing.JComponent r0;
        java.awt.Graphics r2;

        r7 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r1 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i11 := @parameter4: int;

        if i0 != 0 goto label1;

        $i12 = virtualinvoke r0.<javax.swing.JComponent: int getHeight()>();

        goto label2;

     label1:
        $i12 = virtualinvoke r0.<javax.swing.JComponent: int getWidth()>();

     label2:
        $i19 = (int) -3;

        i13 = $i12 + $i19;

        if i0 != 0 goto label3;

        i14 = r1.<java.awt.Rectangle: int x>;

        $i6 = r1.<java.awt.Rectangle: int y>;

        i15 = $i6 + 1;

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i7 = i15 + i13;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i14, i15, i14, $i7);

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i10 = i14 + 1;

        $i9 = i14 + 1;

        $i8 = i15 + i13;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i10, i15, $i9, $i8);

        goto label4;

     label3:
        $i1 = r1.<java.awt.Rectangle: int x>;

        i16 = $i1 + 1;

        i17 = r1.<java.awt.Rectangle: int y>;

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i2 = i16 + i13;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i16, i17, $i2, i17);

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i5 = i17 + 1;

        $i4 = i16 + i13;

        $i3 = i17 + 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i16, $i5, $i4, $i3);

     label4:
        return;
    }

    public void fillBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int, java.awt.Color)
    {
        java.awt.Color r5, $r6, $r8, $r9;
        java.awt.Rectangle $r3, r4, $r7;
        com.jidesoft.plaf.office2003.Office2003Painter r10;
        java.awt.Graphics2D r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        javax.swing.JComponent r11;
        java.awt.Graphics r0, $r1;

        r10 := @this: com.jidesoft.plaf.office2003.Office2003Painter;

        r11 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i9 := @parameter4: int;

        r5 := @parameter5: java.awt.Color;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

        r2 = (java.awt.Graphics2D) $r1;

        if i0 != 0 goto label1;

        $r7 = new java.awt.Rectangle;

        $i8 = r4.<java.awt.Rectangle: int x>;

        $i7 = r4.<java.awt.Rectangle: int y>;

        $i6 = r4.<java.awt.Rectangle: int width>;

        $i5 = r4.<java.awt.Rectangle: int height>;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        $r8 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r5, 0.6F);

        $r9 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r5, 0.4F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r7, $r8, $r9, 1);

        goto label2;

     label1:
        $r3 = new java.awt.Rectangle;

        $i4 = r4.<java.awt.Rectangle: int x>;

        $i3 = r4.<java.awt.Rectangle: int y>;

        $i2 = r4.<java.awt.Rectangle: int width>;

        $i1 = r4.<java.awt.Rectangle: int height>;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>($i4, $i3, $i2, $i1);

        $r6 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r5, 0.55F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r2, $r3, $r6, r5, 0);

     label2:
        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    static com.jidesoft.plaf.office2003.Office2003Painter access$000()
    {
        com.jidesoft.plaf.office2003.Office2003Painter $r0;

        $r0 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Painter _instance>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.Map $r7, $r11, $r15, $r19, $r23;
        com.jidesoft.plaf.office2003.DefaultOffice2003Theme $r0;
        java.lang.Object[] $r26, $r56, $r86, $r116, $r152, $r175, $r198, $r221;
        java.util.TreeMap $r5;
        int $i0, $i1, $i2, $i3, $i4;
        javax.swing.plaf.ColorUIResource $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232;
        javax.swing.ImageIcon $r146, $r147, $r148, $r149, $r150, $r151, $r164, $r165, $r166, $r167, $r169, $r170, $r171, $r172, $r173, $r174, $r187, $r188, $r189, $r190, $r192, $r193, $r194, $r195, $r196, $r197, $r210, $r211, $r212, $r213, $r215, $r216, $r217, $r218, $r219, $r220, $r233, $r234, $r235, $r236;
        java.lang.String $r8, $r12, $r16, $r20, $r24;
        com.jidesoft.plaf.office2003.Office2003Theme $r1, $r2, $r3, $r4, $r6, $r9, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r25, $r55, $r85, $r115, $r145, $r168, $r191, $r214, $r237;
        boolean $z0, $z1, $z2;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindowsXP()>();

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindowsVistaAbove()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        <com.jidesoft.plaf.office2003.Office2003Painter: boolean _native> = $z2;

        $r0 = new com.jidesoft.plaf.office2003.DefaultOffice2003Theme;

        specialinvoke $r0.<com.jidesoft.plaf.office2003.DefaultOffice2003Theme: void <init>()>();

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _defaultTheme> = $r0;

        $r1 = new com.jidesoft.plaf.office2003.Office2003Theme;

        specialinvoke $r1.<com.jidesoft.plaf.office2003.Office2003Theme: void <init>(java.lang.String)>("Gray");

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _normalTheme> = $r1;

        $r2 = new com.jidesoft.plaf.office2003.Office2003Theme;

        specialinvoke $r2.<com.jidesoft.plaf.office2003.Office2003Theme: void <init>(java.lang.String)>("NormalColor");

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _blueTheme> = $r2;

        $r3 = new com.jidesoft.plaf.office2003.Office2003Theme;

        specialinvoke $r3.<com.jidesoft.plaf.office2003.Office2003Theme: void <init>(java.lang.String)>("HomeStead");

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme> = $r3;

        $r4 = new com.jidesoft.plaf.office2003.Office2003Theme;

        specialinvoke $r4.<com.jidesoft.plaf.office2003.Office2003Theme: void <init>(java.lang.String)>("Metallic");

        <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme> = $r4;

        $r5 = new java.util.TreeMap;

        specialinvoke $r5.<java.util.TreeMap: void <init>()>();

        <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache> = $r5;

        $r7 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r6 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _defaultTheme>;

        $r8 = virtualinvoke $r6.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        $r9 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _defaultTheme>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r11 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r10 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _normalTheme>;

        $r12 = virtualinvoke $r10.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        $r13 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _normalTheme>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r15 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r14 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _blueTheme>;

        $r16 = virtualinvoke $r14.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        $r17 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _blueTheme>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r19 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r18 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme>;

        $r20 = virtualinvoke $r18.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        $r21 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r23 = <com.jidesoft.plaf.office2003.Office2003Painter: java.util.Map _themeCache>;

        $r22 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme>;

        $r24 = virtualinvoke $r22.<com.jidesoft.plaf.office2003.Office2003Theme: java.lang.String getThemeName()>();

        $r25 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $r26 = newarray (java.lang.Object)[56];

        $r26[0] = "control";

        $r27 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r27.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(219, 216, 209);

        $r26[1] = $r27;

        $r26[2] = "controlLt";

        $r28 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r28.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(245, 244, 242);

        $r26[3] = $r28;

        $r26[4] = "controlDk";

        $r29 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r29.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(213, 210, 202);

        $r26[5] = $r29;

        $r26[6] = "controlShadow";

        $r30 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r30.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(128, 128, 128);

        $r26[7] = $r30;

        $r26[8] = "TabbedPane.selectDk";

        $r31 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r31.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r26[9] = $r31;

        $r26[10] = "TabbedPane.selectLt";

        $r32 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r32.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r26[11] = $r32;

        $r26[12] = "OptionPane.bannerLt";

        $r33 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r33.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 52, 206);

        $r26[13] = $r33;

        $r26[14] = "OptionPane.bannerDk";

        $r34 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r34.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(45, 96, 249);

        $r26[15] = $r34;

        $r26[16] = "OptionPane.bannerForeground";

        $r35 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r35.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r26[17] = $r35;

        $r26[18] = "Separator.foreground";

        $r36 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r36.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(166, 166, 166);

        $r26[19] = $r36;

        $r26[20] = "Separator.foregroundLt";

        $r37 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r37.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r26[21] = $r37;

        $r26[22] = "Gripper.foreground";

        $r38 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r38.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(160, 160, 160);

        $r26[23] = $r38;

        $r26[24] = "Gripper.foregroundLt";

        $r39 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r39.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r26[25] = $r39;

        $r26[26] = "Chevron.backgroundLt";

        $r40 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r40.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(160, 160, 160);

        $r26[27] = $r40;

        $r26[28] = "Chevron.backgroundDk";

        $r41 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r41.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(128, 128, 128);

        $r26[29] = $r41;

        $r26[30] = "Divider.backgroundLt";

        $r42 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r42.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(110, 110, 110);

        $r26[31] = $r42;

        $r26[32] = "Divider.backgroundDk";

        $r43 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r43.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(90, 90, 90);

        $r26[33] = $r43;

        $r26[34] = "backgroundLt";

        $r44 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r44.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(245, 245, 244);

        $r26[35] = $r44;

        $r26[36] = "backgroundDk";

        $r45 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r45.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(212, 208, 200);

        $r26[37] = $r45;

        $r26[38] = "selection.border";

        $r46 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r46.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 128);

        $r26[39] = $r46;

        $r26[40] = "MenuItem.background";

        $r47 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r47.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(249, 248, 247);

        $r26[41] = $r47;

        $r26[42] = "DockableFrameTitlePane.backgroundLt";

        $r48 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r48.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(243, 242, 240);

        $r26[43] = $r48;

        $r26[44] = "DockableFrameTitlePane.backgroundDk";

        $r49 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r49.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(212, 208, 200);

        $r26[45] = $r49;

        $r26[46] = "DockableFrameTitlePane.activeForeground";

        $r50 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r50.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r26[47] = $r50;

        $r26[48] = "DockableFrameTitlePane.inactiveForeground";

        $r51 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r51.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r26[49] = $r51;

        $r26[50] = "DockableFrame.backgroundLt";

        $r52 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r52.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(234, 232, 228);

        $r26[51] = $r52;

        $r26[52] = "DockableFrame.backgroundDk";

        $r53 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r53.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(234, 232, 228);

        $r26[53] = $r53;

        $r26[54] = "CommandBar.titleBarBackground";

        $r54 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r54.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(128, 128, 128);

        $r26[55] = $r54;

        $r55 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _normalTheme>;

        virtualinvoke $r55.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r26);

        $i1 = $i0 & 2;

        if $i1 == 0 goto label4;

        $r215 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_gray.png");

        $r216 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_mask.png");

        $r217 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r215, 0, 0, 20, 20);

        $r218 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r215, 20, 0, 20, 20);

        $r219 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r216, 0, 0, 11, 11);

        $r220 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r216, 0, 11, 11, 11);

        $r221 = newarray (java.lang.Object)[38];

        $r221[0] = "CollapsiblePane.contentBackground";

        $r222 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r222.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r221[1] = $r222;

        $r221[2] = "CollapsiblePanes.backgroundLt";

        $r223 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r223.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(160, 160, 160);

        $r221[3] = $r223;

        $r221[4] = "CollapsiblePanes.backgroundDk";

        $r224 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r224.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(128, 128, 128);

        $r221[5] = $r224;

        $r221[6] = "CollapsiblePaneTitlePane.backgroundLt";

        $r225 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r225.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r221[7] = $r225;

        $r221[8] = "CollapsiblePaneTitlePane.backgroundDk";

        $r226 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r226.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(213, 210, 202);

        $r221[9] = $r226;

        $r221[10] = "CollapsiblePaneTitlePane.foreground";

        $r227 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r227.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(91, 91, 91);

        $r221[11] = $r227;

        $r221[12] = "CollapsiblePaneTitlePane.foreground.focus";

        $r228 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r228.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(137, 137, 137);

        $r221[13] = $r228;

        $r221[14] = "CollapsiblePaneTitlePane.backgroundLt.emphasized";

        $r229 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r229.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(68, 68, 68);

        $r221[15] = $r229;

        $r221[16] = "CollapsiblePaneTitlePane.backgroundDk.emphasized";

        $r230 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r230.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(94, 94, 94);

        $r221[17] = $r230;

        $r221[18] = "CollapsiblePaneTitlePane.foreground.emphasized";

        $r231 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r231.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r221[19] = $r231;

        $r221[20] = "CollapsiblePaneTitlePane.foreground.focus.emphasized";

        $r232 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r232.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 230, 230);

        $r221[21] = $r232;

        $r221[22] = "CollapsiblePane.downIcon";

        $r233 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r217, $r219, 0);

        $r221[23] = $r233;

        $r221[24] = "CollapsiblePane.upIcon";

        $r234 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r217, $r220, 0);

        $r221[25] = $r234;

        $r221[26] = "CollapsiblePane.downIcon.emphasized";

        $r235 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r218, $r219, 0);

        $r221[27] = $r235;

        $r221[28] = "CollapsiblePane.upIcon.emphasized";

        $r236 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r218, $r220, 0);

        $r221[29] = $r236;

        $r221[30] = "CollapsiblePane.upMask";

        $r221[31] = $r220;

        $r221[32] = "CollapsiblePane.downMask";

        $r221[33] = $r219;

        $r221[34] = "CollapsiblePane.titleButtonBackground";

        $r221[35] = $r217;

        $r221[36] = "CollapsiblePane.titleButtonBackground.emphasized";

        $r221[37] = $r218;

        $r237 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _normalTheme>;

        virtualinvoke $r237.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r221);

     label4:
        $r56 = newarray (java.lang.Object)[56];

        $r56[0] = "control";

        $r57 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r57.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 219, 249);

        $r56[1] = $r57;

        $r56[2] = "controlLt";

        $r58 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r58.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(218, 234, 253);

        $r56[3] = $r58;

        $r56[4] = "controlDk";

        $r59 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r59.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(129, 169, 226);

        $r56[5] = $r59;

        $r56[6] = "controlShadow";

        $r60 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r60.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(59, 67, 156);

        $r56[7] = $r60;

        $r56[8] = "TabbedPane.selectDk";

        $r61 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r61.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r56[9] = $r61;

        $r56[10] = "TabbedPane.selectLt";

        $r62 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r62.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r56[11] = $r62;

        $r56[12] = "OptionPane.bannerLt";

        $r63 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r63.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 52, 206);

        $r56[13] = $r63;

        $r56[14] = "OptionPane.bannerDk";

        $r64 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r64.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(45, 96, 249);

        $r56[15] = $r64;

        $r56[16] = "OptionPane.bannerForeground";

        $r65 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r65.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r56[17] = $r65;

        $r56[18] = "Separator.foreground";

        $r66 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r66.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(106, 140, 203);

        $r56[19] = $r66;

        $r56[20] = "Separator.foregroundLt";

        $r67 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r67.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(241, 249, 255);

        $r56[21] = $r67;

        $r56[22] = "Gripper.foreground";

        $r68 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r68.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(39, 65, 118);

        $r56[23] = $r68;

        $r56[24] = "Gripper.foregroundLt";

        $r69 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r69.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r56[25] = $r69;

        $r56[26] = "Chevron.backgroundLt";

        $r70 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r70.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(117, 166, 241);

        $r56[27] = $r70;

        $r56[28] = "Chevron.backgroundDk";

        $r71 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r71.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 53, 145);

        $r56[29] = $r71;

        $r56[30] = "Divider.backgroundLt";

        $r72 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r72.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(89, 135, 214);

        $r56[31] = $r72;

        $r56[32] = "Divider.backgroundDk";

        $r73 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r73.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 45, 150);

        $r56[33] = $r73;

        $r56[34] = "backgroundLt";

        $r74 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r74.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(195, 218, 249);

        $r56[35] = $r74;

        $r56[36] = "backgroundDk";

        $r75 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r75.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(158, 190, 245);

        $r56[37] = $r75;

        $r56[38] = "selection.border";

        $r76 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r76.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 128);

        $r56[39] = $r76;

        $r56[40] = "MenuItem.background";

        $r77 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r77.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(246, 246, 246);

        $r56[41] = $r77;

        $r56[42] = "DockableFrameTitlePane.backgroundLt";

        $r78 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r78.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(218, 234, 253);

        $r56[43] = $r78;

        $r56[44] = "DockableFrameTitlePane.backgroundDk";

        $r79 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r79.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(123, 164, 224);

        $r56[45] = $r79;

        $r56[46] = "DockableFrameTitlePane.activeForeground";

        $r80 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r80.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r56[47] = $r80;

        $r56[48] = "DockableFrameTitlePane.inactiveForeground";

        $r81 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r81.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r56[49] = $r81;

        $r56[50] = "DockableFrame.backgroundLt";

        $r82 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r82.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(221, 236, 254);

        $r56[51] = $r82;

        $r56[52] = "DockableFrame.backgroundDk";

        $r83 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r83.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(221, 236, 254);

        $r56[53] = $r83;

        $r56[54] = "CommandBar.titleBarBackground";

        $r84 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r84.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(42, 102, 201);

        $r56[55] = $r84;

        $r85 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _blueTheme>;

        virtualinvoke $r85.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r56);

        $i2 = $i0 & 2;

        if $i2 == 0 goto label5;

        $r192 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_blue.png");

        $r193 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_mask.png");

        $r194 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r192, 0, 0, 20, 20);

        $r195 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r192, 20, 0, 20, 20);

        $r196 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r193, 0, 11, 11, 11);

        $r197 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r193, 0, 0, 11, 11);

        $r198 = newarray (java.lang.Object)[38];

        $r198[0] = "CollapsiblePane.contentBackground";

        $r199 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r199.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(214, 223, 247);

        $r198[1] = $r199;

        $r198[2] = "CollapsiblePanes.backgroundLt";

        $r200 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r200.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(123, 162, 231);

        $r198[3] = $r200;

        $r198[4] = "CollapsiblePanes.backgroundDk";

        $r201 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r201.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(103, 125, 217);

        $r198[5] = $r201;

        $r198[6] = "CollapsiblePaneTitlePane.backgroundLt";

        $r202 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r202.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r198[7] = $r202;

        $r198[8] = "CollapsiblePaneTitlePane.backgroundDk";

        $r203 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r203.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(198, 211, 247);

        $r198[9] = $r203;

        $r198[10] = "CollapsiblePaneTitlePane.foreground";

        $r204 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r204.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(33, 93, 198);

        $r198[11] = $r204;

        $r198[12] = "CollapsiblePaneTitlePane.foreground.focus";

        $r205 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r205.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(65, 142, 254);

        $r198[13] = $r205;

        $r198[14] = "CollapsiblePaneTitlePane.backgroundLt.emphasized";

        $r206 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r206.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 73, 181);

        $r198[15] = $r206;

        $r198[16] = "CollapsiblePaneTitlePane.backgroundDk.emphasized";

        $r207 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r207.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(41, 93, 206);

        $r198[17] = $r207;

        $r198[18] = "CollapsiblePaneTitlePane.foreground.emphasized";

        $r208 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r208.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r198[19] = $r208;

        $r198[20] = "CollapsiblePaneTitlePane.foreground.focus.emphasized";

        $r209 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r209.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(65, 142, 254);

        $r198[21] = $r209;

        $r198[22] = "CollapsiblePane.downIcon";

        $r210 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r194, $r197, 0);

        $r198[23] = $r210;

        $r198[24] = "CollapsiblePane.upIcon";

        $r211 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r194, $r196, 0);

        $r198[25] = $r211;

        $r198[26] = "CollapsiblePane.downIcon.emphasized";

        $r212 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r195, $r197, 0);

        $r198[27] = $r212;

        $r198[28] = "CollapsiblePane.upIcon.emphasized";

        $r213 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r195, $r196, 0);

        $r198[29] = $r213;

        $r198[30] = "CollapsiblePane.upMask";

        $r198[31] = $r196;

        $r198[32] = "CollapsiblePane.downMask";

        $r198[33] = $r197;

        $r198[34] = "CollapsiblePane.titleButtonBackground";

        $r198[35] = $r194;

        $r198[36] = "CollapsiblePane.titleButtonBackground.emphasized";

        $r198[37] = $r195;

        $r214 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _blueTheme>;

        virtualinvoke $r214.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r198);

     label5:
        $r86 = newarray (java.lang.Object)[56];

        $r86[0] = "control";

        $r87 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r87.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(209, 222, 173);

        $r86[1] = $r87;

        $r86[2] = "controlLt";

        $r88 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r88.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(244, 247, 222);

        $r86[3] = $r88;

        $r86[4] = "controlDk";

        $r89 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r89.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(183, 198, 145);

        $r86[5] = $r89;

        $r86[6] = "controlShadow";

        $r90 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r90.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(96, 128, 88);

        $r86[7] = $r90;

        $r86[8] = "TabbedPane.selectDk";

        $r91 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r91.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(207, 114, 37);

        $r86[9] = $r91;

        $r86[10] = "TabbedPane.selectLt";

        $r92 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r92.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(227, 145, 79);

        $r86[11] = $r92;

        $r86[12] = "OptionPane.bannerLt";

        $r93 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r93.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(150, 185, 120);

        $r86[13] = $r93;

        $r86[14] = "OptionPane.bannerDk";

        $r94 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r94.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(179, 214, 149);

        $r86[15] = $r94;

        $r86[16] = "OptionPane.bannerForeground";

        $r95 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r95.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r86[17] = $r95;

        $r86[18] = "Separator.foreground";

        $r96 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r96.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(96, 128, 88);

        $r86[19] = $r96;

        $r86[20] = "Separator.foregroundLt";

        $r97 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r97.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(244, 247, 242);

        $r86[21] = $r97;

        $r86[22] = "Gripper.foreground";

        $r98 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r98.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(81, 94, 51);

        $r86[23] = $r98;

        $r86[24] = "Gripper.foregroundLt";

        $r99 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r99.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r86[25] = $r99;

        $r86[26] = "Chevron.backgroundLt";

        $r100 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r100.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(176, 194, 140);

        $r86[27] = $r100;

        $r86[28] = "Chevron.backgroundDk";

        $r101 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r101.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(96, 119, 107);

        $r86[29] = $r101;

        $r86[30] = "Divider.backgroundLt";

        $r102 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r102.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(120, 142, 111);

        $r86[31] = $r102;

        $r86[32] = "Divider.backgroundDk";

        $r103 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r103.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(73, 91, 67);

        $r86[33] = $r103;

        $r86[34] = "backgroundLt";

        $r104 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r104.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(242, 240, 228);

        $r86[35] = $r104;

        $r86[36] = "backgroundDk";

        $r105 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r105.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(217, 217, 167);

        $r86[37] = $r105;

        $r86[38] = "selection.border";

        $r106 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r106.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(63, 93, 56);

        $r86[39] = $r106;

        $r86[40] = "MenuItem.background";

        $r107 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r107.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(244, 244, 238);

        $r86[41] = $r107;

        $r86[42] = "DockableFrameTitlePane.backgroundLt";

        $r108 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r108.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(237, 242, 212);

        $r86[43] = $r108;

        $r86[44] = "DockableFrameTitlePane.backgroundDk";

        $r109 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r109.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(181, 196, 143);

        $r86[45] = $r109;

        $r86[46] = "DockableFrameTitlePane.activeForeground";

        $r110 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r110.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r86[47] = $r110;

        $r86[48] = "DockableFrameTitlePane.inactiveForeground";

        $r111 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r111.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r86[49] = $r111;

        $r86[50] = "DockableFrame.backgroundLt";

        $r112 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r112.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(243, 242, 231);

        $r86[51] = $r112;

        $r86[52] = "DockableFrame.backgroundDk";

        $r113 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r113.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(243, 242, 231);

        $r86[53] = $r113;

        $r86[54] = "CommandBar.titleBarBackground";

        $r114 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r114.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(116, 134, 94);

        $r86[55] = $r114;

        $r115 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme>;

        virtualinvoke $r115.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r86);

        $i3 = $i0 & 2;

        if $i3 == 0 goto label6;

        $r169 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_homestead.png");

        $r170 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_mask.png");

        $r171 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r169, 0, 0, 20, 20);

        $r172 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r169, 20, 0, 20, 20);

        $r173 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r170, 0, 0, 11, 11);

        $r174 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r170, 0, 11, 11, 11);

        $r175 = newarray (java.lang.Object)[38];

        $r175[0] = "CollapsiblePane.contentBackground";

        $r176 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r176.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(246, 246, 246);

        $r175[1] = $r176;

        $r175[2] = "CollapsiblePanes.backgroundLt";

        $r177 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r177.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(204, 217, 173);

        $r175[3] = $r177;

        $r175[4] = "CollapsiblePanes.backgroundDk";

        $r178 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r178.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(165, 189, 132);

        $r175[5] = $r178;

        $r175[6] = "CollapsiblePaneTitlePane.backgroundLt";

        $r179 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r179.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(254, 252, 236);

        $r175[7] = $r179;

        $r175[8] = "CollapsiblePaneTitlePane.backgroundDk";

        $r180 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r180.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(224, 231, 184);

        $r175[9] = $r180;

        $r175[10] = "CollapsiblePaneTitlePane.foreground";

        $r181 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r181.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(86, 102, 45);

        $r175[11] = $r181;

        $r175[12] = "CollapsiblePaneTitlePane.foreground.focus";

        $r182 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r182.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(114, 146, 29);

        $r175[13] = $r182;

        $r175[14] = "CollapsiblePaneTitlePane.backgroundLt.emphasized";

        $r183 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r183.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(119, 140, 64);

        $r175[15] = $r183;

        $r175[16] = "CollapsiblePaneTitlePane.backgroundDk.emphasized";

        $r184 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r184.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(150, 168, 103);

        $r175[17] = $r184;

        $r175[18] = "CollapsiblePaneTitlePane.foreground.emphasized";

        $r185 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r185.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r175[19] = $r185;

        $r175[20] = "CollapsiblePaneTitlePane.foreground.focus.emphasized";

        $r186 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r186.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(224, 231, 151);

        $r175[21] = $r186;

        $r175[22] = "CollapsiblePane.downIcon";

        $r187 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r171, $r173, 0);

        $r175[23] = $r187;

        $r175[24] = "CollapsiblePane.upIcon";

        $r188 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r171, $r174, 0);

        $r175[25] = $r188;

        $r175[26] = "CollapsiblePane.downIcon.emphasized";

        $r189 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r172, $r173, 0);

        $r175[27] = $r189;

        $r175[28] = "CollapsiblePane.upIcon.emphasized";

        $r190 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r172, $r174, 0);

        $r175[29] = $r190;

        $r175[30] = "CollapsiblePane.upMask";

        $r175[31] = $r174;

        $r175[32] = "CollapsiblePane.downMask";

        $r175[33] = $r173;

        $r175[34] = "CollapsiblePane.titleButtonBackground";

        $r175[35] = $r171;

        $r175[36] = "CollapsiblePane.titleButtonBackground.emphasized";

        $r175[37] = $r172;

        $r191 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _homeSteadTheme>;

        virtualinvoke $r191.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r175);

     label6:
        $r116 = newarray (java.lang.Object)[56];

        $r116[0] = "control";

        $r117 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r117.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(219, 218, 228);

        $r116[1] = $r117;

        $r116[2] = "controlLt";

        $r118 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r118.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(243, 244, 250);

        $r116[3] = $r118;

        $r116[4] = "controlDk";

        $r119 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r119.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(153, 151, 181);

        $r116[5] = $r119;

        $r116[6] = "controlShadow";

        $r120 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r120.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(124, 124, 148);

        $r116[7] = $r120;

        $r116[8] = "TabbedPane.selectDk";

        $r121 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r121.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r116[9] = $r121;

        $r116[10] = "TabbedPane.selectLt";

        $r122 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r122.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 200, 60);

        $r116[11] = $r122;

        $r116[12] = "OptionPane.bannerLt";

        $r123 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r123.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(181, 195, 222);

        $r116[13] = $r123;

        $r116[14] = "OptionPane.bannerDk";

        $r124 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r124.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(120, 140, 167);

        $r116[15] = $r124;

        $r116[16] = "OptionPane.bannerForeground";

        $r125 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r125.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r116[17] = $r125;

        $r116[18] = "Separator.foreground";

        $r126 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r126.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(110, 109, 143);

        $r116[19] = $r126;

        $r116[20] = "Separator.foregroundLt";

        $r127 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r127.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r116[21] = $r127;

        $r116[22] = "Gripper.foreground";

        $r128 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r128.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(84, 84, 117);

        $r116[23] = $r128;

        $r116[24] = "Gripper.foregroundLt";

        $r129 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r129.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r116[25] = $r129;

        $r116[26] = "Chevron.backgroundLt";

        $r130 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r130.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(179, 178, 200);

        $r116[27] = $r130;

        $r116[28] = "Chevron.backgroundDk";

        $r131 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r131.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(118, 116, 146);

        $r116[29] = $r131;

        $r116[30] = "Divider.backgroundLt";

        $r132 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r132.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(168, 167, 191);

        $r116[31] = $r132;

        $r116[32] = "Divider.backgroundDk";

        $r133 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r133.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(119, 118, 151);

        $r116[33] = $r133;

        $r116[34] = "backgroundLt";

        $r134 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r134.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(243, 243, 247);

        $r116[35] = $r134;

        $r116[36] = "backgroundDk";

        $r135 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r135.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(215, 215, 229);

        $r116[37] = $r135;

        $r116[38] = "selection.border";

        $r136 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r136.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(75, 75, 111);

        $r116[39] = $r136;

        $r116[40] = "MenuItem.background";

        $r137 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r137.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(253, 250, 255);

        $r116[41] = $r137;

        $r116[42] = "DockableFrameTitlePane.backgroundLt";

        $r138 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r138.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(240, 240, 248);

        $r116[43] = $r138;

        $r116[44] = "DockableFrameTitlePane.backgroundDk";

        $r139 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r139.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(147, 145, 176);

        $r116[45] = $r139;

        $r116[46] = "DockableFrameTitlePane.activeForeground";

        $r140 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r140.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r116[47] = $r140;

        $r116[48] = "DockableFrameTitlePane.inactiveForeground";

        $r141 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r141.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(0, 0, 0);

        $r116[49] = $r141;

        $r116[50] = "DockableFrame.backgroundLt";

        $r142 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r142.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(238, 238, 244);

        $r116[51] = $r142;

        $r116[52] = "DockableFrame.backgroundDk";

        $r143 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r143.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(238, 238, 244);

        $r116[53] = $r143;

        $r116[54] = "CommandBar.titleBarBackground";

        $r144 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r144.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(122, 121, 153);

        $r116[55] = $r144;

        $r145 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme>;

        virtualinvoke $r145.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r116);

        $i4 = $i0 & 2;

        if $i4 == 0 goto label7;

        $r146 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_metallic.png");

        $r147 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2003/Office2003WindowsUtils;", "icons/collapsible_pane_mask.png");

        $r148 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r146, 0, 0, 20, 20);

        $r149 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r146, 20, 0, 20, 20);

        $r150 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r147, 0, 0, 11, 11);

        $r151 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r147, 0, 11, 11, 11);

        $r152 = newarray (java.lang.Object)[38];

        $r152[0] = "CollapsiblePane.contentBackground";

        $r153 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r153.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(240, 241, 245);

        $r152[1] = $r153;

        $r152[2] = "CollapsiblePanes.backgroundLt";

        $r154 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r154.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 200, 212);

        $r152[3] = $r154;

        $r152[4] = "CollapsiblePanes.backgroundDk";

        $r155 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r155.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(177, 179, 200);

        $r152[5] = $r155;

        $r152[6] = "CollapsiblePaneTitlePane.backgroundLt";

        $r156 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r156.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r152[7] = $r156;

        $r152[8] = "CollapsiblePaneTitlePane.backgroundDk";

        $r157 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r157.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(214, 215, 224);

        $r152[9] = $r157;

        $r152[10] = "CollapsiblePaneTitlePane.foreground";

        $r158 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r158.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(63, 61, 61);

        $r152[11] = $r158;

        $r152[12] = "CollapsiblePaneTitlePane.foreground.focus";

        $r159 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r159.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(126, 124, 124);

        $r152[13] = $r159;

        $r152[14] = "CollapsiblePaneTitlePane.backgroundLt.emphasized";

        $r160 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r160.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(119, 119, 145);

        $r152[15] = $r160;

        $r152[16] = "CollapsiblePaneTitlePane.backgroundDk.emphasized";

        $r161 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r161.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(180, 182, 199);

        $r152[17] = $r161;

        $r152[18] = "CollapsiblePaneTitlePane.foreground.emphasized";

        $r162 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r162.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 255, 255);

        $r152[19] = $r162;

        $r152[20] = "CollapsiblePaneTitlePane.foreground.focus.emphasized";

        $r163 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r163.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 230, 230);

        $r152[21] = $r163;

        $r152[22] = "CollapsiblePane.downIcon";

        $r164 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r148, $r150, 0);

        $r152[23] = $r164;

        $r152[24] = "CollapsiblePane.upIcon";

        $r165 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r148, $r151, 0);

        $r152[25] = $r165;

        $r152[26] = "CollapsiblePane.downIcon.emphasized";

        $r166 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r149, $r150, 0);

        $r152[27] = $r166;

        $r152[28] = "CollapsiblePane.upIcon.emphasized";

        $r167 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int)>(null, $r149, $r151, 0);

        $r152[29] = $r167;

        $r152[30] = "CollapsiblePane.upMask";

        $r152[31] = $r151;

        $r152[32] = "CollapsiblePane.downMask";

        $r152[33] = $r150;

        $r152[34] = "CollapsiblePane.titleButtonBackground";

        $r152[35] = $r148;

        $r152[36] = "CollapsiblePane.titleButtonBackground.emphasized";

        $r152[37] = $r149;

        $r168 = <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.office2003.Office2003Theme _metallicTheme>;

        virtualinvoke $r168.<com.jidesoft.plaf.office2003.Office2003Theme: void putDefaults(java.lang.Object[])>($r152);

     label7:
        return;
    }
}
