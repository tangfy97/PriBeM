public class org.springframework.core.OrderComparator extends java.lang.Object implements java.util.Comparator
{
    public static org.springframework.core.OrderComparator INSTANCE;

    static void <clinit>()
    {
        org.springframework.core.OrderComparator $r0;

        $r0 = new org.springframework.core.OrderComparator;

        specialinvoke $r0.<org.springframework.core.OrderComparator: void <init>()>();

        <org.springframework.core.OrderComparator: org.springframework.core.OrderComparator INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.core.OrderComparator r0;

        r0 := @this: org.springframework.core.OrderComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.springframework.core.OrderComparator r2;
        byte $b2;
        int $i0, $i1, $i4;
        java.lang.Object r0, r1;
        boolean z0, z1;

        r2 := @this: org.springframework.core.OrderComparator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 = r0 instanceof org.springframework.core.PriorityOrdered;

        z1 = r1 instanceof org.springframework.core.PriorityOrdered;

        if z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        if z1 == 0 goto label2;

        if z0 != 0 goto label2;

        return 1;

     label2:
        $i0 = virtualinvoke r2.<org.springframework.core.OrderComparator: int getOrder(java.lang.Object)>(r0);

        $i1 = virtualinvoke r2.<org.springframework.core.OrderComparator: int getOrder(java.lang.Object)>(r1);

        if $i0 >= $i1 goto label3;

        $b2 = -1;

        goto label5;

     label3:
        if $i0 <= $i1 goto label4;

        $b2 = 1;

        goto label5;

     label4:
        $b2 = 0;

     label5:
        return $b2;
    }

    protected int getOrder(java.lang.Object)
    {
        org.springframework.core.Ordered $r1;
        int $i0;
        java.lang.Object r0;
        org.springframework.core.OrderComparator r2;
        boolean $z0;

        r2 := @this: org.springframework.core.OrderComparator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.core.Ordered;

        if $z0 == 0 goto label1;

        $r1 = (org.springframework.core.Ordered) r0;

        $i0 = interfaceinvoke $r1.<org.springframework.core.Ordered: int getOrder()>();

        goto label2;

     label1:
        $i0 = 2147483647;

     label2:
        return $i0;
    }

    public static void sort(java.util.List)
    {
        int $i0;
        java.util.List r0;
        org.springframework.core.OrderComparator $r1;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r1 = <org.springframework.core.OrderComparator: org.springframework.core.OrderComparator INSTANCE>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

     label1:
        return;
    }

    public static void sort(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0;
        org.springframework.core.OrderComparator $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 <= 1 goto label1;

        $r1 = <org.springframework.core.OrderComparator: org.springframework.core.OrderComparator INSTANCE>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, $r1);

     label1:
        return;
    }
}
