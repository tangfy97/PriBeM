public abstract class org.apache.xmlbeans.impl.values.JavaDecimalHolderEx extends org.apache.xmlbeans.impl.values.JavaDecimalHolder
{
    private org.apache.xmlbeans.SchemaType _schemaType;

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolderEx r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolderEx;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.values.JavaDecimalHolderEx r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolderEx;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    protected void set_text(java.lang.String)
    {
        java.lang.Object[] $r8;
        org.apache.xmlbeans.impl.values.JavaDecimalHolderEx r0;
        java.lang.NumberFormatException $r7;
        java.math.BigDecimal $r1, r10;
        org.apache.xmlbeans.impl.common.ValidationContext $r3, $r5, $r9;
        java.lang.String r2;
        org.apache.xmlbeans.SchemaType $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolderEx;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r5 = <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r2, $r6, $r5);

     label1:
        r10 = null;

     label2:
        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(r2);

        r10 = $r1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r9 = <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r2;

        interfaceinvoke $r9.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("decimal", $r8);

     label5:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: boolean _validateOnSet()>();

        if $z1 == 0 goto label6;

        $r4 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r3 = <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void validateValue(java.math.BigDecimal,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r10, $r4, $r3);

     label6:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: void set_BigDecimal(java.math.BigDecimal)>(r10);

        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    protected void set_BigDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        org.apache.xmlbeans.impl.common.ValidationContext $r2;
        org.apache.xmlbeans.impl.values.JavaDecimalHolderEx r0;
        org.apache.xmlbeans.SchemaType $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolderEx;

        r1 := @parameter0: java.math.BigDecimal;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void validateValue(java.math.BigDecimal,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r3, $r2);

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaDecimalHolder: void set_BigDecimal(java.math.BigDecimal)>(r1);

        return;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r3;
        org.apache.xmlbeans.impl.common.ValidationContext r1;
        java.lang.String r0, $r4;
        org.apache.xmlbeans.SchemaType r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolder: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, r1);

        $z0 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean hasPatternFacet()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r0);

        if $z1 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "decimal";

        $r3[1] = r0;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r3[2] = $r4;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r3);

     label1:
        return;
    }

    public static void validateValue(java.math.BigDecimal, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Integer $r48, $r49, $r50, $r51;
        java.math.BigDecimal r10, $r14, $r16, $r20, $r24, $r28;
        java.math.BigInteger $r31, $r34, $r41;
        java.lang.ArithmeticException $r42;
        org.apache.xmlbeans.SchemaType r0;
        java.lang.Object[] $r9, $r17, $r21, $r25, $r29, $r35, $r43;
        java.lang.String $r11, $r18, $r22, $r26, $r30, $r32, $r37, $r39, $r45, $r47;
        org.apache.xmlbeans.impl.common.ValidationContext r8;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r13, $r15, $r19, $r23, $r27, $r33, $r40;
        boolean $z0;
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2, $r3, $r4, $r5, $r6, $r12;
        org.apache.xmlbeans.XmlAnySimpleType[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, i11, i12, i13, i15, $i16, $i18, $i19, $i21;
        char $c7, $c14;

        r10 := @parameter0: java.math.BigDecimal;

        r0 := @parameter1: org.apache.xmlbeans.SchemaType;

        r8 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(8);

        if $r1 == null goto label04;

        $r40 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r1;

        $r41 = virtualinvoke $r40.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger getBigIntegerValue()>();

        $i9 = virtualinvoke $r41.<java.math.BigInteger: int intValue()>();

     label01:
        virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal setScale(int)>($i9);

     label02:
        goto label04;

     label03:
        $r42 := @caughtexception;

        $r43 = newarray (java.lang.Object)[4];

        $r48 = new java.lang.Integer;

        $i10 = virtualinvoke r10.<java.math.BigDecimal: int scale()>();

        specialinvoke $r48.<java.lang.Integer: void <init>(int)>($i10);

        $r43[0] = $r48;

        $r45 = virtualinvoke r10.<java.math.BigDecimal: java.lang.String toString()>();

        $r43[1] = $r45;

        $r49 = new java.lang.Integer;

        specialinvoke $r49.<java.lang.Integer: void <init>(int)>($i9);

        $r43[2] = $r49;

        $r47 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r43[3] = $r47;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-fractionDigits-valid", $r43);

        return;

     label04:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(7);

        if $r2 == null goto label09;

        $r31 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r32 = virtualinvoke $r31.<java.math.BigInteger: java.lang.String toString()>();

        $r33 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r2;

        $r34 = virtualinvoke $r33.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger getBigIntegerValue()>();

        $i5 = virtualinvoke $r34.<java.math.BigInteger: int intValue()>();

        $i6 = virtualinvoke $r32.<java.lang.String: int length()>();

        i11 = $i6;

        if $i6 <= 0 goto label08;

        $c7 = virtualinvoke $r32.<java.lang.String: char charAt(int)>(0);

        $i16 = (int) $c7;

        if $i16 != 45 goto label05;

        $i18 = (int) -1;

        i11 = $i6 + $i18;

     label05:
        i12 = 0;

        $i8 = virtualinvoke r10.<java.math.BigDecimal: int scale()>();

        i13 = $i6 - 1;

     label06:
        $c14 = virtualinvoke $r32.<java.lang.String: char charAt(int)>(i13);

        $i19 = (int) $c14;

        if $i19 != 48 goto label07;

        if i13 <= 0 goto label07;

        if i12 >= $i8 goto label07;

        i12 = i12 + 1;

        $i21 = (int) -1;

        i13 = i13 + $i21;

        goto label06;

     label07:
        i11 = i11 - i12;

     label08:
        if i11 <= $i5 goto label09;

        $r35 = newarray (java.lang.Object)[4];

        $r50 = new java.lang.Integer;

        specialinvoke $r50.<java.lang.Integer: void <init>(int)>(i11);

        $r35[0] = $r50;

        $r37 = virtualinvoke r10.<java.math.BigDecimal: java.lang.String toString()>();

        $r35[1] = $r37;

        $r51 = new java.lang.Integer;

        specialinvoke $r51.<java.lang.Integer: void <init>(int)>($i5);

        $r35[2] = $r51;

        $r39 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r35[3] = $r39;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-totalDigits-valid", $r35);

        return;

     label09:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(3);

        if $r3 == null goto label10;

        $r27 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r3;

        $r28 = virtualinvoke $r27.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $i4 = virtualinvoke r10.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r28);

        if $i4 > 0 goto label10;

        $r29 = newarray (java.lang.Object)[4];

        $r29[0] = "decimal";

        $r29[1] = r10;

        $r29[2] = $r28;

        $r30 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r29[3] = $r30;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minExclusive-valid", $r29);

        return;

     label10:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(4);

        if $r4 == null goto label11;

        $r23 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r4;

        $r24 = virtualinvoke $r23.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $i3 = virtualinvoke r10.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r24);

        if $i3 >= 0 goto label11;

        $r25 = newarray (java.lang.Object)[4];

        $r25[0] = "decimal";

        $r25[1] = r10;

        $r25[2] = $r24;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r25[3] = $r26;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minInclusive-valid", $r25);

        return;

     label11:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(5);

        if $r5 == null goto label12;

        $r19 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r5;

        $r20 = virtualinvoke $r19.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $i2 = virtualinvoke r10.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r20);

        if $i2 <= 0 goto label12;

        $r21 = newarray (java.lang.Object)[4];

        $r21[0] = "decimal";

        $r21[1] = r10;

        $r21[2] = $r20;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r21[3] = $r22;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxInclusive-valid", $r21);

        return;

     label12:
        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(6);

        if $r6 == null goto label13;

        $r15 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r6;

        $r16 = virtualinvoke $r15.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $i1 = virtualinvoke r10.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r16);

        if $i1 < 0 goto label13;

        $r17 = newarray (java.lang.Object)[4];

        $r17[0] = "decimal";

        $r17[1] = r10;

        $r17[2] = $r16;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r17[3] = $r18;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxExclusive-valid", $r17);

        return;

     label13:
        $r7 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r7 == null goto label17;

        i15 = 0;

     label14:
        $i0 = lengthof $r7;

        if i15 >= $i0 goto label16;

        $r12 = $r7[i15];

        $r13 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r12;

        $r14 = virtualinvoke $r13.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal getBigDecimalValue()>();

        $z0 = virtualinvoke r10.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label15;

        return;

     label15:
        i15 = i15 + 1;

        goto label14;

     label16:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "decimal";

        $r9[1] = r10;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r9[2] = $r11;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-enumeration-valid", $r9);

     label17:
        return;

        catch java.lang.ArithmeticException from label01 to label02 with label03;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.math.BigDecimal $r4;
        org.apache.xmlbeans.impl.common.ValidationContext r3;
        org.apache.xmlbeans.impl.values.JavaDecimalHolderEx r1;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r2, $r5;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaDecimalHolderEx;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r2, r3);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: java.math.BigDecimal getBigDecimalValue()>();

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolderEx: void validateValue(java.math.BigDecimal,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($r4, $r5, r3);

        return;
    }
}
