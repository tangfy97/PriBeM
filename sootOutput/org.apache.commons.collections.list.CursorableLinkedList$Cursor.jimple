public class org.apache.commons.collections.list.CursorableLinkedList$Cursor extends org.apache.commons.collections.list.AbstractLinkedList$LinkedListIterator
{
    boolean valid;
    boolean nextIndexValid;
    boolean currentRemovedByAnother;

    protected void <init>(org.apache.commons.collections.list.CursorableLinkedList, int)
    {
        int i0;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.list.CursorableLinkedList r1;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        r1 := @parameter0: org.apache.commons.collections.list.CursorableLinkedList;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.collections.list.AbstractLinkedList$LinkedListIterator: void <init>(org.apache.commons.collections.list.AbstractLinkedList,int)>(r1, i0);

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean valid> = 1;

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean nextIndexValid> = 1;

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 0;

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean valid> = 1;

        return;
    }

    public void remove()
    {
        org.apache.commons.collections.list.AbstractLinkedList$Node $r1, $r3;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.list.AbstractLinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother>;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: void checkModCount()>();

        $r2 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $r3 = virtualinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node getLastNodeReturned()>();

        virtualinvoke $r2.<org.apache.commons.collections.list.AbstractLinkedList: void removeNode(org.apache.commons.collections.list.AbstractLinkedList$Node)>($r3);

     label2:
        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 0;

        return;
    }

    public void add(java.lang.Object)
    {
        org.apache.commons.collections.list.AbstractLinkedList$Node $r2, $r3;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.list.AbstractLinkedList$LinkedListIterator: void add(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        $r3 = $r2.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next> = $r3;

        return;
    }

    public int nextIndex()
    {
        org.apache.commons.collections.list.AbstractLinkedList$Node $r2, $r3, $r5, $r6, r8;
        int $i0, i1, $i2;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.list.AbstractLinkedList $r1, $r4, $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        $z0 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean nextIndexValid>;

        if $z0 != 0 goto label5;

        $r3 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $r2 = $r1.<org.apache.commons.collections.list.AbstractLinkedList: org.apache.commons.collections.list.AbstractLinkedList$Node header>;

        if $r3 != $r2 goto label1;

        $r7 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $i0 = virtualinvoke $r7.<org.apache.commons.collections.list.AbstractLinkedList: int size()>();

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex> = $i0;

        goto label4;

     label1:
        i1 = 0;

        $r4 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $r5 = $r4.<org.apache.commons.collections.list.AbstractLinkedList: org.apache.commons.collections.list.AbstractLinkedList$Node header>;

        r8 = $r5.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

     label2:
        $r6 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        if r8 == $r6 goto label3;

        i1 = i1 + 1;

        r8 = r8.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        goto label2;

     label3:
        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex> = i1;

     label4:
        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean nextIndexValid> = 1;

     label5:
        $i2 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex>;

        return $i2;
    }

    protected void nodeChanged(org.apache.commons.collections.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.list.AbstractLinkedList$Node r1;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        r1 := @parameter0: org.apache.commons.collections.list.AbstractLinkedList$Node;

        return;
    }

    protected void nodeRemoved(org.apache.commons.collections.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections.list.AbstractLinkedList$Node r0, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r1;

        r1 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        r0 := @parameter0: org.apache.commons.collections.list.AbstractLinkedList$Node;

        $r2 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        if r0 != $r2 goto label1;

        $r6 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current>;

        if r0 != $r6 goto label1;

        $r7 = r0.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next> = $r7;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current> = null;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 1;

        goto label4;

     label1:
        $r3 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        if r0 != $r3 goto label2;

        $r5 = r0.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next> = $r5;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 0;

        goto label4;

     label2:
        $r4 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current>;

        if r0 != $r4 goto label3;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current> = null;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 1;

        $i0 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex>;

        $i1 = $i0 - 1;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex> = $i1;

        goto label4;

     label3:
        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean nextIndexValid> = 0;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean currentRemovedByAnother> = 0;

     label4:
        return;
    }

    protected void nodeInserted(org.apache.commons.collections.list.AbstractLinkedList$Node)
    {
        org.apache.commons.collections.list.AbstractLinkedList$Node r0, $r2, $r3, $r4, $r5;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r1;

        r1 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        r0 := @parameter0: org.apache.commons.collections.list.AbstractLinkedList$Node;

        $r3 = r0.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node previous>;

        $r2 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node current>;

        if $r3 != $r2 goto label1;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next> = r0;

        goto label3;

     label1:
        $r4 = r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next>;

        $r5 = $r4.<org.apache.commons.collections.list.AbstractLinkedList$Node: org.apache.commons.collections.list.AbstractLinkedList$Node previous>;

        if $r5 != r0 goto label2;

        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList$Node next> = r0;

        goto label3;

     label2:
        r1.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean nextIndexValid> = 0;

     label3:
        return;
    }

    protected void checkModCount()
    {
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        java.util.ConcurrentModificationException $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        $z0 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean valid>;

        if $z0 != 0 goto label1;

        $r1 = new java.util.ConcurrentModificationException;

        specialinvoke $r1.<java.util.ConcurrentModificationException: void <init>(java.lang.String)>("Cursor closed");

        throw $r1;

     label1:
        return;
    }

    public void close()
    {
        org.apache.commons.collections.list.CursorableLinkedList $r2;
        org.apache.commons.collections.list.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.list.AbstractLinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$Cursor;

        $z0 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean valid>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $r2 = (org.apache.commons.collections.list.CursorableLinkedList) $r1;

        virtualinvoke $r2.<org.apache.commons.collections.list.CursorableLinkedList: void unregisterCursor(org.apache.commons.collections.list.CursorableLinkedList$Cursor)>(r0);

        r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: boolean valid> = 0;

     label1:
        return;
    }
}
