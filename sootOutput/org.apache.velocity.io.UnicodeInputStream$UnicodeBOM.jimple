final class org.apache.velocity.io.UnicodeInputStream$UnicodeBOM extends java.lang.Object
{
    private final java.lang.String encoding;
    private final byte[] bytes;

    private void <init>(java.lang.String, byte[])
    {
        byte[] r2;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: java.lang.String encoding> = r1;

        r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: byte[] bytes> = r2;

        return;
    }

    java.lang.String getEncoding()
    {
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: java.lang.String encoding>;

        return $r1;
    }

    byte[] getBytes()
    {
        byte[] $r1;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: byte[] bytes>;

        return $r1;
    }

    void <init>(java.lang.String, byte[], org.apache.velocity.io.UnicodeInputStream$1)
    {
        byte[] r2;
        org.apache.velocity.io.UnicodeInputStream$1 r3;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: org.apache.velocity.io.UnicodeInputStream$1;

        specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[])>(r1, r2);

        return;
    }
}
