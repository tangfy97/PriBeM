public class org.sat4j.tools.LexicoDecorator extends org.sat4j.tools.SolverDecorator implements org.sat4j.specs.IOptimizationProblem
{
    protected final java.util.List criteria;
    protected int currentCriterion;
    private org.sat4j.specs.IConstr prevConstr;
    private java.lang.Number currentValue;
    protected int[] prevfullmodel;
    protected boolean[] prevboolmodel;
    private boolean isSolutionOptimal;
    private static final long serialVersionUID;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.specs.ISolver r1;
        int $i1;
        org.sat4j.tools.LexicoDecorator r0;
        java.lang.Integer $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: void <init>(org.sat4j.specs.ISolver)>(r1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria> = $r4;

        r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion> = 0;

        $i1 = (int) -1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue> = $r3;

        return;
    }

    public void addCriterion(org.sat4j.specs.IVecInt)
    {
        java.util.List $r3;
        org.sat4j.specs.IVecInt r1;
        int $i0;
        org.sat4j.core.VecInt $r0;
        org.sat4j.tools.LexicoDecorator r2;

        r2 := @this: org.sat4j.tools.LexicoDecorator;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $r0 = new org.sat4j.core.VecInt;

        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        interfaceinvoke r1.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r0);

        $r3 = r2.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public boolean admitABetterSolution() throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.tools.LexicoDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = <org.sat4j.core.VecInt: org.sat4j.specs.IVecInt EMPTY>;

        $z0 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: boolean admitABetterSolution(org.sat4j.specs.IVecInt)>($r1);

        return $z0;
    }

    public boolean admitABetterSolution(org.sat4j.specs.IVecInt) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.ISolver $r1, $r4, $r7;
        org.sat4j.specs.IVecInt r2;
        boolean[] $r3, $r6;
        org.sat4j.tools.LexicoDecorator r0;
        int[] $r5;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        r0.<org.sat4j.tools.LexicoDecorator: boolean isSolutionOptimal> = 0;

        $r1 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.ISolver decorated()>();

        $z0 = interfaceinvoke $r1.<org.sat4j.specs.ISolver: boolean isSatisfiable(org.sat4j.specs.IVecInt,boolean)>(r2, 1);

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: int nVars()>();

        $r3 = newarray (boolean)[$i0];

        r0.<org.sat4j.tools.LexicoDecorator: boolean[] prevboolmodel> = $r3;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: int nVars()>();

        if i3 >= $i1 goto label2;

        $r6 = r0.<org.sat4j.tools.LexicoDecorator: boolean[] prevboolmodel>;

        $r7 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.ISolver decorated()>();

        $i2 = i3 + 1;

        $z2 = interfaceinvoke $r7.<org.sat4j.specs.ISolver: boolean model(int)>($i2);

        $r6[i3] = $z2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.ISolver decorated()>();

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.ISolver: int[] model()>();

        r0.<org.sat4j.tools.LexicoDecorator: int[] prevfullmodel> = $r5;

        virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number calculateObjective()>();

        return 1;

     label3:
        $z1 = specialinvoke r0.<org.sat4j.tools.LexicoDecorator: boolean manageUnsatCase()>();

        return $z1;
    }

    private boolean manageUnsatCase()
    {
        java.lang.IllegalStateException $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r5, $r8, $r12, $r16;
        boolean $z0, $z1;
        java.io.PrintStream $r4, $r11;
        org.sat4j.specs.ContradictionException $r18;
        org.sat4j.specs.IConstr $r1, $r2, $r9, $r17;
        org.sat4j.tools.LexicoDecorator r0;
        java.lang.StringBuilder $r3, $r6, $r7, $r10, $r13, $r14, $r15;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $i0 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $i1 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: int numberOfCriteria()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label6;

        $r9 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        if $r9 == null goto label1;

        $r17 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: boolean removeConstr(org.sat4j.specs.IConstr)>($r17);

        r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr> = null;

     label1:
        virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: void fixCriterionValue()>();

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r18);

        throw $r19;

     label4:
        $z1 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: boolean isVerbose()>();

        if $z1 == 0 goto label5;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: java.lang.String getLogPrefix()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found optimal criterion number ");

        $i5 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $i6 = $i5 + 1;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label5:
        $i3 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $i4 = $i3 + 1;

        r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion> = $i4;

        virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number calculateObjective()>();

        return 1;

     label6:
        $z0 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: boolean isVerbose()>();

        if $z0 == 0 goto label7;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: java.lang.String getLogPrefix()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found optimal solution for the last criterion ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label7:
        r0.<org.sat4j.tools.LexicoDecorator: boolean isSolutionOptimal> = 1;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        if $r1 == null goto label8;

        $r2 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: boolean removeConstr(org.sat4j.specs.IConstr)>($r2);

        r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr> = null;

     label8:
        return 0;

        catch org.sat4j.specs.ContradictionException from label1 to label2 with label3;
    }

    protected int numberOfCriteria()
    {
        int $i0;
        java.util.List $r1;
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    protected void fixCriterionValue() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IVecInt $r4, $r8;
        org.sat4j.tools.LexicoDecorator r0;
        java.util.List $r1, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2, $r6;
        java.lang.Number $r3, $r7;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        $i0 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.sat4j.specs.IVecInt) $r2;

        $r3 = r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue>;

        $i1 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>($r4, $i1);

        $r5 = r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        $i2 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i2);

        $r8 = (org.sat4j.specs.IVecInt) $r6;

        $r7 = r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue>;

        $i3 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt,int)>($r8, $i3);

        return;
    }

    public int[] model()
    {
        org.sat4j.tools.LexicoDecorator r0;
        int[] $r1;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: int[] prevfullmodel>;

        return $r1;
    }

    public boolean model(int)
    {
        int i0, $i1;
        boolean[] $r1;
        org.sat4j.tools.LexicoDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: boolean[] prevboolmodel>;

        $i1 = i0 - 1;

        $z0 = $r1[$i1];

        return $z0;
    }

    public boolean hasNoObjectiveFunction()
    {
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        return 0;
    }

    public boolean nonOptimalMeansSatisfiable()
    {
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        return 1;
    }

    public java.lang.Number calculateObjective()
    {
        java.lang.Number $r1, $r2;
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number evaluate()>();

        r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue> = $r1;

        $r2 = r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue>;

        return $r2;
    }

    public java.lang.Number getObjectiveValue()
    {
        java.lang.Number $r1;
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue>;

        return $r1;
    }

    public void forceObjectiveValueTo(java.lang.Number) throws org.sat4j.specs.ContradictionException
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Number r2;
        org.sat4j.tools.LexicoDecorator r1;

        r1 := @this: org.sat4j.tools.LexicoDecorator;

        r2 := @parameter0: java.lang.Number;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void discard() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.tools.LexicoDecorator r0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: void discardCurrentSolution()>();

        return;
    }

    public void discardCurrentSolution() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.ContradictionException $r4;
        org.sat4j.specs.IConstr $r1, $r2, $r3;
        org.sat4j.tools.LexicoDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        if $r1 == null goto label1;

        $r3 = r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr>;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: boolean removeSubsumedConstr(org.sat4j.specs.IConstr)>($r3);

     label1:
        $r2 = virtualinvoke r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr discardSolutionsForOptimizing()>();

        r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr> = $r2;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.sat4j.tools.LexicoDecorator: org.sat4j.specs.IConstr prevConstr> = null;

        $z0 = specialinvoke r0.<org.sat4j.tools.LexicoDecorator: boolean manageUnsatCase()>();

        if $z0 != 0 goto label4;

        throw $r4;

     label4:
        return;

        catch org.sat4j.specs.ContradictionException from label1 to label2 with label3;
    }

    protected org.sat4j.specs.IConstr discardSolutionsForOptimizing() throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr $r5;
        org.sat4j.specs.IVecInt $r4;
        org.sat4j.tools.LexicoDecorator r0;
        java.util.List $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.Number $r3;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        $i0 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.sat4j.specs.IVecInt) $r2;

        $r3 = r0.<org.sat4j.tools.LexicoDecorator: java.lang.Number currentValue>;

        $i1 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $i2 = $i1 - 1;

        $r5 = specialinvoke r0.<org.sat4j.tools.SolverDecorator: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>($r4, $i2);

        return $r5;
    }

    protected java.lang.Number evaluate()
    {
        org.sat4j.specs.IteratorInt $r4;
        java.lang.Integer $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVecInt $r3;
        boolean[] $r6, $r7;
        org.sat4j.tools.LexicoDecorator r0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        i5 = 0;

        $r1 = r0.<org.sat4j.tools.LexicoDecorator: java.util.List criteria>;

        $i0 = r0.<org.sat4j.tools.LexicoDecorator: int currentCriterion>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.sat4j.specs.IVecInt) $r2;

        $r4 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label1:
        $z2 = interfaceinvoke $r4.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $i1 = interfaceinvoke $r4.<org.sat4j.specs.IteratorInt: int next()>();

        if $i1 <= 0 goto label2;

        $r7 = r0.<org.sat4j.tools.LexicoDecorator: boolean[] prevboolmodel>;

        $i4 = $i1 - 1;

        $z1 = $r7[$i4];

        if $z1 != 0 goto label3;

     label2:
        if $i1 >= 0 goto label1;

        $r6 = r0.<org.sat4j.tools.LexicoDecorator: boolean[] prevboolmodel>;

        $i2 = neg $i1;

        $i3 = $i2 - 1;

        $z0 = $r6[$i3];

        if $z0 != 0 goto label1;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        return $r5;
    }

    public boolean isOptimal()
    {
        org.sat4j.tools.LexicoDecorator r0;
        boolean $z0;

        r0 := @this: org.sat4j.tools.LexicoDecorator;

        $z0 = r0.<org.sat4j.tools.LexicoDecorator: boolean isSolutionOptimal>;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.sat4j.tools.LexicoDecorator: long serialVersionUID> = 1L;

        return;
    }
}
