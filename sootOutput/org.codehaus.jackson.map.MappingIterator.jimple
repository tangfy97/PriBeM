public class org.codehaus.jackson.map.MappingIterator extends java.lang.Object implements java.util.Iterator
{
    protected static final org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR;
    protected final org.codehaus.jackson.type.JavaType _type;
    protected final org.codehaus.jackson.map.DeserializationContext _context;
    protected final org.codehaus.jackson.map.JsonDeserializer _deserializer;
    protected org.codehaus.jackson.JsonParser _parser;
    protected final boolean _closeParser;
    protected boolean _hasNextChecked;
    protected final java.lang.Object _updatedValue;

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.map.JsonDeserializer r4;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.DeserializationContext r3;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.JsonParser;

        r3 := @parameter2: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>(r1, r2, r3, r4, 1, null);

        return;
    }

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.JsonDeserializer, boolean, java.lang.Object)
    {
        org.codehaus.jackson.JsonToken $r6, $r7;
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.map.DeserializationContext r3;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.JsonDeserializer r4;
        java.lang.Object r5;
        org.codehaus.jackson.JsonStreamContext $r8;
        org.codehaus.jackson.JsonParser r2;
        boolean z0, $z1;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.JsonParser;

        r3 := @parameter2: org.codehaus.jackson.map.DeserializationContext;

        r4 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.type.JavaType _type> = r1;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser> = r2;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.DeserializationContext _context> = r3;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.JsonDeserializer _deserializer> = r4;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        if $r6 != $r7 goto label1;

        $r8 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonStreamContext getParsingContext()>();

        $z1 = virtualinvoke $r8.<org.codehaus.jackson.JsonStreamContext: boolean inRoot()>();

        if $z1 != 0 goto label1;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

     label1:
        r0.<org.codehaus.jackson.map.MappingIterator: boolean _closeParser> = z0;

        if r5 != null goto label2;

        r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object _updatedValue> = null;

        goto label3;

     label2:
        r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object _updatedValue> = r5;

     label3:
        return;
    }

    protected static org.codehaus.jackson.map.MappingIterator emptyIterator()
    {
        org.codehaus.jackson.map.MappingIterator $r0;

        $r0 = <org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR>;

        return $r0;
    }

    public boolean hasNext()
    {
        org.codehaus.jackson.map.MappingIterator r0;
        java.io.IOException $r1;
        java.lang.RuntimeException $r2;
        org.codehaus.jackson.map.JsonMappingException $r4;
        java.lang.String $r3, $r6;
        org.codehaus.jackson.map.RuntimeJsonMappingException $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.MappingIterator: boolean hasNextValue()>();

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.codehaus.jackson.map.RuntimeJsonMappingException;

        $r6 = virtualinvoke $r4.<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.map.JsonMappingException)>($r6, $r4);

        throw $r5;

     label4:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r3 = virtualinvoke $r1.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, $r1);

        throw $r2;

        catch org.codehaus.jackson.map.JsonMappingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public java.lang.Object next()
    {
        org.codehaus.jackson.map.MappingIterator r0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        org.codehaus.jackson.map.JsonMappingException $r5;
        java.lang.Object $r1;
        java.lang.String $r4, $r7;
        org.codehaus.jackson.map.RuntimeJsonMappingException $r6;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object nextValue()>();

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.codehaus.jackson.map.RuntimeJsonMappingException;

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.map.JsonMappingException)>($r7, $r5);

        throw $r6;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r3;

        catch org.codehaus.jackson.map.JsonMappingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.jackson.map.MappingIterator r1;

        r1 := @this: org.codehaus.jackson.map.MappingIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean hasNextValue() throws java.io.IOException
    {
        org.codehaus.jackson.JsonToken $r3, $r5, $r6;
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.JsonParser $r1, $r2, $r4, r7;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $r1 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<org.codehaus.jackson.map.MappingIterator: boolean _hasNextChecked>;

        if $z0 != 0 goto label4;

        $r2 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r0.<org.codehaus.jackson.map.MappingIterator: boolean _hasNextChecked> = 1;

        if $r3 != null goto label4;

        $r4 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r5 != null goto label3;

        r7 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser> = null;

        $z1 = r0.<org.codehaus.jackson.map.MappingIterator: boolean _closeParser>;

        if $z1 == 0 goto label2;

        virtualinvoke r7.<org.codehaus.jackson.JsonParser: void close()>();

     label2:
        return 0;

     label3:
        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r5 != $r6 goto label4;

        return 0;

     label4:
        return 1;
    }

    public java.lang.Object nextValue() throws java.io.IOException
    {
        org.codehaus.jackson.map.MappingIterator r0;
        org.codehaus.jackson.map.DeserializationContext $r4, $r8;
        org.codehaus.jackson.map.JsonDeserializer $r6, $r10;
        java.util.NoSuchElementException $r11, $r12;
        org.codehaus.jackson.JsonParser $r1, $r5, $r7, $r9;
        boolean $z0, $z1;
        java.lang.Object $r2, $r3, r13;

        r0 := @this: org.codehaus.jackson.map.MappingIterator;

        $z0 = r0.<org.codehaus.jackson.map.MappingIterator: boolean _hasNextChecked>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.MappingIterator: boolean hasNextValue()>();

        if $z1 != 0 goto label1;

        $r12 = new java.util.NoSuchElementException;

        specialinvoke $r12.<java.util.NoSuchElementException: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        if $r1 != null goto label2;

        $r11 = new java.util.NoSuchElementException;

        specialinvoke $r11.<java.util.NoSuchElementException: void <init>()>();

        throw $r11;

     label2:
        r0.<org.codehaus.jackson.map.MappingIterator: boolean _hasNextChecked> = 0;

        $r2 = r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object _updatedValue>;

        if $r2 != null goto label3;

        $r10 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.JsonDeserializer _deserializer>;

        $r9 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r8 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.DeserializationContext _context>;

        r13 = virtualinvoke $r10.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r9, $r8);

        goto label4;

     label3:
        $r6 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.JsonDeserializer _deserializer>;

        $r5 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        $r4 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.DeserializationContext _context>;

        $r3 = r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object _updatedValue>;

        virtualinvoke $r6.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>($r5, $r4, $r3);

        r13 = r0.<org.codehaus.jackson.map.MappingIterator: java.lang.Object _updatedValue>;

     label4:
        $r7 = r0.<org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.JsonParser _parser>;

        virtualinvoke $r7.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return r13;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.MappingIterator $r0;

        $r0 = new org.codehaus.jackson.map.MappingIterator;

        specialinvoke $r0.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>(null, null, null, null, 0, null);

        <org.codehaus.jackson.map.MappingIterator: org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR> = $r0;

        return;
    }
}
