public abstract class org.springframework.util.FileSystemUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.util.FileSystemUtils r0;

        r0 := @this: org.springframework.util.FileSystemUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean deleteRecursively(java.io.File)
    {
        java.io.File r0, r2;
        int i0, i1;
        java.io.File[] $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label4;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 == null goto label3;

        i0 = lengthof $r1;

        i1 = 0;

        goto label2;

     label1:
        r2 = $r1[i1];

        staticinvoke <org.springframework.util.FileSystemUtils: boolean deleteRecursively(java.io.File)>(r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $z2 = virtualinvoke r0.<java.io.File: boolean delete()>();

        return $z2;

     label4:
        return 0;
    }

    public static void copyRecursively(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z2, "Source File must denote a directory or file");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Destination File must not be null");

        staticinvoke <org.springframework.util.FileSystemUtils: void doCopyRecursively(java.io.File,java.io.File)>(r0, r1);

        return;
    }

    private static void doCopyRecursively(java.io.File, java.io.File) throws java.io.IOException
    {
        int i0, i1;
        java.lang.String $r4, $r8, $r13;
        boolean $z0, $z1;
        java.io.IOException $r5, $r9, $r10;
        java.io.File r0, r1, $r3, r14;
        java.lang.StringBuilder $r6, $r7, $r11, $r12;
        java.io.File[] $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        virtualinvoke r1.<java.io.File: boolean mkdir()>();

        $r2 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r2 != null goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not list files in directory: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        i0 = lengthof $r2;

        i1 = 0;

        goto label3;

     label2:
        r14 = $r2[i1];

        $r3 = new java.io.File;

        $r4 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4);

        staticinvoke <org.springframework.util.FileSystemUtils: void doCopyRecursively(java.io.File,java.io.File)>(r14, $r3);

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label2;

        goto label9;

     label4:
        $z1 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label9;

     label5:
        virtualinvoke r1.<java.io.File: boolean createNewFile()>();

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to create file: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r13);

        virtualinvoke $r10.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

        throw $r10;

     label8:
        staticinvoke <org.springframework.util.FileCopyUtils: int copy(java.io.File,java.io.File)>(r0, r1);

     label9:
        return;

        catch java.io.IOException from label5 to label6 with label7;
    }
}
