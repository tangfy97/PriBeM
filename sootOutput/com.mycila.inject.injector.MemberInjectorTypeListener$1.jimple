class com.mycila.inject.injector.MemberInjectorTypeListener$1 extends java.lang.Object implements com.google.inject.MembersInjector
{
    final com.google.inject.Provider val$provider;
    final com.google.inject.TypeLiteral val$injectableType;
    final com.google.inject.Provider val$injectorProvider;
    final com.mycila.inject.injector.MemberInjectorTypeListener this$0;

    void <init>(com.mycila.inject.injector.MemberInjectorTypeListener, com.google.inject.Provider, com.google.inject.TypeLiteral, com.google.inject.Provider)
    {
        com.google.inject.Provider r2, r4;
        com.mycila.inject.injector.MemberInjectorTypeListener$1 r0;
        com.google.inject.TypeLiteral r3;
        com.mycila.inject.injector.MemberInjectorTypeListener r1;

        r0 := @this: com.mycila.inject.injector.MemberInjectorTypeListener$1;

        r1 := @parameter0: com.mycila.inject.injector.MemberInjectorTypeListener;

        r2 := @parameter1: com.google.inject.Provider;

        r3 := @parameter2: com.google.inject.TypeLiteral;

        r4 := @parameter3: com.google.inject.Provider;

        r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.mycila.inject.injector.MemberInjectorTypeListener this$0> = r1;

        r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.Provider val$provider> = r2;

        r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.TypeLiteral val$injectableType> = r3;

        r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.Provider val$injectorProvider> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void injectMembers(java.lang.Object)
    {
        com.mycila.inject.injector.KeyProvider r3;
        com.mycila.inject.injector.MemberInjectorTypeListener$1 r0;
        java.lang.Exception $r45;
        java.lang.StringBuilder $r49, $r50, $r51, $r52, $r54;
        com.google.inject.TypeLiteral $r4, $r11, $r21, $r39;
        com.mycila.inject.internal.guava.base.Predicate $r8, $r16;
        com.mycila.inject.internal.MethodInvoker $r25;
        java.lang.Object[] r58;
        java.lang.String $r53, $r55;
        java.lang.RuntimeException $r46;
        java.lang.reflect.Field r56;
        java.lang.IllegalStateException $r48;
        com.google.inject.Key $r31, $r42;
        java.lang.reflect.Method r57;
        boolean $z0, $z1, $z2;
        java.lang.IllegalAccessException $r47;
        java.util.List $r24;
        java.lang.'annotation'.Annotation $r23, $r41;
        com.mycila.inject.injector.MemberInjectorTypeListener $r6, $r14, $r20, $r37;
        java.lang.Iterable $r9, $r13, $r17;
        int $i0, $i1, i2;
        java.util.Iterator $r10, $r18;
        com.google.inject.Injector $r29, $r38;
        com.google.inject.Provider $r1, $r27, $r32, $r35, $r43;
        java.lang.Object $r2, $r19, r26, $r28, $r30, $r33, $r34, $r36, $r44;
        java.lang.Class $r5, $r7, $r12, $r15, $r22, $r40;

        r0 := @this: com.mycila.inject.injector.MemberInjectorTypeListener$1;

        r26 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.Provider val$provider>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Provider: java.lang.Object get()>();

        r3 = (com.mycila.inject.injector.KeyProvider) $r2;

        $r4 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.TypeLiteral val$injectableType>;

        $r5 = virtualinvoke $r4.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r6 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.mycila.inject.injector.MemberInjectorTypeListener this$0>;

        $r7 = staticinvoke <com.mycila.inject.injector.MemberInjectorTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MemberInjectorTypeListener)>($r6);

        $r8 = staticinvoke <com.mycila.inject.internal.Reflect: com.mycila.inject.internal.guava.base.Predicate annotatedBy(java.lang.Class)>($r7);

        $r9 = staticinvoke <com.mycila.inject.internal.Reflect: java.lang.Iterable findFields(java.lang.Class,com.mycila.inject.internal.guava.base.Predicate)>($r5, $r8);

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r34 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r56 = (java.lang.reflect.Field) $r34;

        $r35 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.Provider val$injectorProvider>;

        $r36 = interfaceinvoke $r35.<com.google.inject.Provider: java.lang.Object get()>();

        $r38 = (com.google.inject.Injector) $r36;

        $r39 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.TypeLiteral val$injectableType>;

        $r37 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.mycila.inject.injector.MemberInjectorTypeListener this$0>;

        $r40 = staticinvoke <com.mycila.inject.injector.MemberInjectorTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MemberInjectorTypeListener)>($r37);

        $r41 = virtualinvoke r56.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r40);

        $r42 = interfaceinvoke r3.<com.mycila.inject.injector.KeyProvider: com.google.inject.Key getKey(com.google.inject.TypeLiteral,java.lang.reflect.Field,java.lang.'annotation'.Annotation)>($r39, r56, $r41);

        $r43 = interfaceinvoke $r38.<com.google.inject.Injector: com.google.inject.Provider getProvider(com.google.inject.Key)>($r42);

        $r44 = interfaceinvoke $r43.<com.google.inject.Provider: java.lang.Object get()>();

        $z2 = virtualinvoke r56.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z2 != 0 goto label02;

        virtualinvoke r56.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label02:
        virtualinvoke r56.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r26, $r44);

     label03:
        goto label05;

     label04:
        $r47 := @caughtexception;

        $r48 = new java.lang.IllegalStateException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to inject field ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Reason: ");

        $r53 = virtualinvoke $r47.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r55, $r47);

        throw $r48;

     label05:
        goto label01;

     label06:
        $r11 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.TypeLiteral val$injectableType>;

        $r12 = virtualinvoke $r11.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r13 = staticinvoke <com.mycila.inject.internal.Reflect: java.lang.Iterable findMethods(java.lang.Class)>($r12);

        $r14 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.mycila.inject.injector.MemberInjectorTypeListener this$0>;

        $r15 = staticinvoke <com.mycila.inject.injector.MemberInjectorTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MemberInjectorTypeListener)>($r14);

        $r16 = staticinvoke <com.mycila.inject.internal.Reflect: com.mycila.inject.internal.guava.base.Predicate annotatedBy(java.lang.Class)>($r15);

        $r17 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.mycila.inject.internal.guava.base.Predicate)>($r13, $r16);

        $r18 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.lang.reflect.Method) $r19;

        $r21 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.TypeLiteral val$injectableType>;

        $r20 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.mycila.inject.injector.MemberInjectorTypeListener this$0>;

        $r22 = staticinvoke <com.mycila.inject.injector.MemberInjectorTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MemberInjectorTypeListener)>($r20);

        $r23 = virtualinvoke r57.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r22);

        $r24 = interfaceinvoke r3.<com.mycila.inject.injector.KeyProvider: java.util.List getParameterKeys(com.google.inject.TypeLiteral,java.lang.reflect.Method,java.lang.'annotation'.Annotation)>($r21, r57, $r23);

        $i0 = interfaceinvoke $r24.<java.util.List: int size()>();

        r58 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label08:
        $i1 = lengthof r58;

        if i2 >= $i1 goto label09;

        $r27 = r0.<com.mycila.inject.injector.MemberInjectorTypeListener$1: com.google.inject.Provider val$injectorProvider>;

        $r28 = interfaceinvoke $r27.<com.google.inject.Provider: java.lang.Object get()>();

        $r29 = (com.google.inject.Injector) $r28;

        $r30 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i2);

        $r31 = (com.google.inject.Key) $r30;

        $r32 = interfaceinvoke $r29.<com.google.inject.Injector: com.google.inject.Provider getProvider(com.google.inject.Key)>($r31);

        $r33 = interfaceinvoke $r32.<com.google.inject.Provider: java.lang.Object get()>();

        r58[i2] = $r33;

        i2 = i2 + 1;

        goto label08;

     label09:
        $r25 = staticinvoke <com.mycila.inject.internal.Proxy: com.mycila.inject.internal.MethodInvoker invoker(java.lang.reflect.Method)>(r57);

        interfaceinvoke $r25.<com.mycila.inject.internal.MethodInvoker: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r26, r58);

     label10:
        goto label12;

     label11:
        $r45 := @caughtexception;

        $r46 = staticinvoke <com.mycila.inject.MycilaGuiceException: java.lang.RuntimeException runtime(java.lang.Throwable)>($r45);

        throw $r46;

     label12:
        goto label07;

     label13:
        return;

        catch java.lang.IllegalAccessException from label02 to label03 with label04;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
