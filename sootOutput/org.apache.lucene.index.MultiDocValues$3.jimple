final class org.apache.lucene.index.MultiDocValues$3 extends org.apache.lucene.index.BinaryDocValues
{
    final int[] val$starts;
    final org.apache.lucene.index.BinaryDocValues[] val$values;

    void <init>(int[], org.apache.lucene.index.BinaryDocValues[])
    {
        org.apache.lucene.index.BinaryDocValues[] r2;
        int[] r1;
        org.apache.lucene.index.MultiDocValues$3 r0;

        r0 := @this: org.apache.lucene.index.MultiDocValues$3;

        r1 := @parameter0: int[];

        r2 := @parameter1: org.apache.lucene.index.BinaryDocValues[];

        r0.<org.apache.lucene.index.MultiDocValues$3: int[] val$starts> = r1;

        r0.<org.apache.lucene.index.MultiDocValues$3: org.apache.lucene.index.BinaryDocValues[] val$values> = r2;

        specialinvoke r0.<org.apache.lucene.index.BinaryDocValues: void <init>()>();

        return;
    }

    public void get(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.index.BinaryDocValues[] $r2;
        org.apache.lucene.util.BytesRef r4;
        int[] $r1, $r3;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.index.BinaryDocValues $r5;
        org.apache.lucene.index.MultiDocValues$3 r0;

        r0 := @this: org.apache.lucene.index.MultiDocValues$3;

        i0 := @parameter0: int;

        r4 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.index.MultiDocValues$3: int[] val$starts>;

        $i1 = staticinvoke <org.apache.lucene.index.ReaderUtil: int subIndex(int,int[])>(i0, $r1);

        $r2 = r0.<org.apache.lucene.index.MultiDocValues$3: org.apache.lucene.index.BinaryDocValues[] val$values>;

        $r5 = $r2[$i1];

        $r3 = r0.<org.apache.lucene.index.MultiDocValues$3: int[] val$starts>;

        $i2 = $r3[$i1];

        $i3 = i0 - $i2;

        virtualinvoke $r5.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>($i3, r4);

        return;
    }
}
