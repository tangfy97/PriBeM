public abstract class com.sun.lwuit.plaf.LookAndFeel extends java.lang.Object
{
    private com.sun.lwuit.Component verticalScroll;
    private com.sun.lwuit.Component horizontalScroll;
    private com.sun.lwuit.Component verticalScrollThumb;
    private com.sun.lwuit.Component horizontalScrollThumb;
    private boolean rtl;
    private long tickerSpeed;
    private int defaultFormTintColor;
    private int disableColor;
    private com.sun.lwuit.animations.Transition defaultFormTransitionIn;
    private com.sun.lwuit.animations.Transition defaultFormTransitionOut;
    private com.sun.lwuit.animations.Transition defaultMenuTransitionIn;
    private com.sun.lwuit.animations.Transition defaultMenuTransitionOut;
    private com.sun.lwuit.animations.Transition defaultDialogTransitionIn;
    private com.sun.lwuit.animations.Transition defaultDialogTransitionOut;
    private boolean defaultSmoothScrolling;
    private boolean focusScrolling;
    private int defaultSmoothScrollingSpeed;
    private boolean reverseSoftButtons;
    private com.sun.lwuit.list.ListCellRenderer menuRenderer;
    private com.sun.lwuit.Image[] menuIcons;
    private boolean touchMenus;
    private int tactileTouchDuration;
    private boolean defaultEndsWith3Points;
    private boolean defaultTensileDrag;

    public void <init>()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.Image[] $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.plaf.LookAndFeel: long tickerSpeed> = 50L;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultFormTintColor> = 1996488704;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int disableColor> = 13421772;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultSmoothScrolling> = 1;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultSmoothScrollingSpeed> = 150;

        $r1 = newarray (com.sun.lwuit.Image)[3];

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Image[] menuIcons> = $r1;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int tactileTouchDuration> = 0;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultEndsWith3Points> = 1;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultTensileDrag> = 1;

        return;
    }

    public void bind(com.sun.lwuit.Component)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.Component r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Component;

        return;
    }

    public void uninstall()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        return;
    }

    public abstract void drawButton(com.sun.lwuit.Graphics, com.sun.lwuit.Button);

    public abstract void drawCheckBox(com.sun.lwuit.Graphics, com.sun.lwuit.Button);

    public abstract void drawComboBox(com.sun.lwuit.Graphics, com.sun.lwuit.List);

    public abstract void drawLabel(com.sun.lwuit.Graphics, com.sun.lwuit.Label);

    public abstract void drawList(com.sun.lwuit.Graphics, com.sun.lwuit.List);

    public abstract void drawRadioButton(com.sun.lwuit.Graphics, com.sun.lwuit.Button);

    public abstract void drawTextArea(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea);

    public abstract void drawTextField(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea);

    public abstract void drawTextFieldCursor(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea);

    public abstract void drawTabbedPane(com.sun.lwuit.Graphics, com.sun.lwuit.TabbedPane);

    public abstract com.sun.lwuit.geom.Dimension getButtonPreferredSize(com.sun.lwuit.Button);

    public abstract com.sun.lwuit.geom.Dimension getCheckBoxPreferredSize(com.sun.lwuit.Button);

    public abstract com.sun.lwuit.geom.Dimension getLabelPreferredSize(com.sun.lwuit.Label);

    public abstract com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List);

    public abstract com.sun.lwuit.geom.Dimension getRadioButtonPreferredSize(com.sun.lwuit.Button);

    public abstract com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea, boolean);

    public abstract com.sun.lwuit.geom.Dimension getTextFieldPreferredSize(com.sun.lwuit.TextArea);

    public abstract com.sun.lwuit.geom.Dimension getComboBoxPreferredSize(com.sun.lwuit.List);

    public void drawVerticalScroll(com.sun.lwuit.Graphics, com.sun.lwuit.Component, float, float)
    {
        com.sun.lwuit.Graphics r5;
        com.sun.lwuit.Component $r1, r2, $r6, $r7;
        com.sun.lwuit.plaf.Style $r3, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        com.sun.lwuit.plaf.Border $r4, $r9;
        com.sun.lwuit.plaf.LookAndFeel r0;
        float f0, f1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r5 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Component;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void initScroll()>();

     label1:
        i8 = 0;

        $r3 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        if $r4 == null goto label2;

        $r8 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        i8 = virtualinvoke $r9.<com.sun.lwuit.plaf.Border: int getThickness()>();

     label2:
        $i0 = virtualinvoke r2.<com.sun.lwuit.Component: int getX()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.Component: boolean isRTL()>();

        if $z0 != 0 goto label3;

        $i4 = virtualinvoke r2.<com.sun.lwuit.Component: int getWidth()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: int getVerticalScrollWidth()>();

        $i6 = $i4 - $i5;

        $i7 = $i6 - i8;

        i9 = $i0 + $i7;

        goto label4;

     label3:
        i9 = $i0 + i8;

     label4:
        $i1 = virtualinvoke r2.<com.sun.lwuit.Component: int getY()>();

        $i2 = virtualinvoke r2.<com.sun.lwuit.Component: int getHeight()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: int getVerticalScrollWidth()>();

        $r7 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll>;

        $r6 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScrollThumb>;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void drawScroll(com.sun.lwuit.Graphics,com.sun.lwuit.Component,float,float,boolean,int,int,int,int,com.sun.lwuit.Component,com.sun.lwuit.Component)>(r5, r2, f0, f1, 1, i9, $i1, $i3, $i2, $r7, $r6);

        return;
    }

    public void drawHorizontalScroll(com.sun.lwuit.Graphics, com.sun.lwuit.Component, float, float)
    {
        com.sun.lwuit.Graphics r5;
        com.sun.lwuit.Component $r1, r2, $r6, $r7;
        com.sun.lwuit.plaf.Style $r3, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        com.sun.lwuit.plaf.Border $r4, $r9;
        com.sun.lwuit.plaf.LookAndFeel r0;
        float f0, f1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r5 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Component;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void initScroll()>();

     label1:
        i9 = 0;

        $r3 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        if $r4 == null goto label2;

        $r8 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.plaf.Border getBorder()>();

        i9 = virtualinvoke $r9.<com.sun.lwuit.plaf.Border: int getThickness()>();

     label2:
        $i0 = virtualinvoke r2.<com.sun.lwuit.Component: int getX()>();

        $i1 = virtualinvoke r2.<com.sun.lwuit.Component: int getY()>();

        $i2 = virtualinvoke r2.<com.sun.lwuit.Component: int getHeight()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: int getHorizontalScrollHeight()>();

        $i5 = $i3 - $i4;

        $i8 = $i5 - i9;

        $i6 = virtualinvoke r2.<com.sun.lwuit.Component: int getWidth()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: int getHorizontalScrollHeight()>();

        $r7 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll>;

        $r6 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScrollThumb>;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void drawScroll(com.sun.lwuit.Graphics,com.sun.lwuit.Component,float,float,boolean,int,int,int,int,com.sun.lwuit.Component,com.sun.lwuit.Component)>(r5, r2, f0, f1, 0, $i0, $i8, $i6, $i7, $r7, $r6);

        return;
    }

    private void drawScroll(com.sun.lwuit.Graphics, com.sun.lwuit.Component, float, float, boolean, int, int, int, int, com.sun.lwuit.Component, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0, r2, r4;
        com.sun.lwuit.plaf.Style $r1, $r3;
        boolean $z0, $z1, $z2, $z3, z4;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        com.sun.lwuit.Graphics r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        com.sun.lwuit.plaf.LookAndFeel r6;

        r6 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r5 := @parameter0: com.sun.lwuit.Graphics;

        r4 := @parameter1: com.sun.lwuit.Component;

        f3 := @parameter2: float;

        f0 := @parameter3: float;

        z4 := @parameter4: boolean;

        i24 := @parameter5: int;

        i25 := @parameter6: int;

        i26 := @parameter7: int;

        i27 := @parameter8: int;

        r0 := @parameter9: com.sun.lwuit.Component;

        r2 := @parameter10: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $z0 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isRTL()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z0, 1);

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        i28 = i24 + $i0;

        $z1 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isRTL()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z1, 3);

        $i3 = $i0 + $i2;

        i29 = i26 - $i3;

        i30 = i25 + $i1;

        $i4 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i5 = $i1 + $i4;

        i31 = i27 - $i5;

        virtualinvoke r0.<com.sun.lwuit.Component: void setX(int)>(i28);

        virtualinvoke r0.<com.sun.lwuit.Component: void setY(int)>(i30);

        virtualinvoke r0.<com.sun.lwuit.Component: void setWidth(int)>(i29);

        virtualinvoke r0.<com.sun.lwuit.Component: void setHeight(int)>(i31);

        $i6 = virtualinvoke r5.<com.sun.lwuit.Graphics: int getClipX()>();

        $i7 = virtualinvoke r5.<com.sun.lwuit.Graphics: int getClipY()>();

        $i8 = virtualinvoke r5.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i9 = virtualinvoke r5.<com.sun.lwuit.Graphics: int getClipHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Component: void paintComponent(com.sun.lwuit.Graphics)>(r5);

        $z2 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isRTL()>();

        $i10 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z2, 1);

        $i11 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        i32 = i28 + $i10;

        $z3 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isRTL()>();

        $i12 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z3, 3);

        $i13 = $i10 + $i12;

        i33 = i29 - $i13;

        i34 = i30 + $i11;

        $i14 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i15 = $i11 + $i14;

        i35 = i31 - $i15;

        if z4 == 0 goto label1;

        $i21 = virtualinvoke r4.<com.sun.lwuit.Component: int getHeight()>();

        $f6 = (float) $i21;

        $f7 = $f6 * f0;

        $i22 = (int) $f7;

        i36 = $i22 + 2;

        $i23 = virtualinvoke r4.<com.sun.lwuit.Component: int getHeight()>();

        $f8 = (float) $i23;

        $f9 = $f8 * f3;

        i37 = (int) $f9;

        goto label2;

     label1:
        $i16 = virtualinvoke r4.<com.sun.lwuit.Component: int getWidth()>();

        $f1 = (float) $i16;

        $f2 = $f1 * f0;

        $i17 = (int) $f2;

        i36 = $i17 + 2;

        $i18 = virtualinvoke r4.<com.sun.lwuit.Component: int getWidth()>();

        $f4 = (float) $i18;

        $f5 = $f4 * f3;

        i37 = (int) $f5;

     label2:
        if z4 == 0 goto label3;

        virtualinvoke r2.<com.sun.lwuit.Component: void setX(int)>(i32);

        $i20 = i34 + i37;

        virtualinvoke r2.<com.sun.lwuit.Component: void setY(int)>($i20);

        virtualinvoke r2.<com.sun.lwuit.Component: void setWidth(int)>(i33);

        virtualinvoke r2.<com.sun.lwuit.Component: void setHeight(int)>(i36);

        goto label4;

     label3:
        $i19 = i32 + i37;

        virtualinvoke r2.<com.sun.lwuit.Component: void setX(int)>($i19);

        virtualinvoke r2.<com.sun.lwuit.Component: void setY(int)>(i34);

        virtualinvoke r2.<com.sun.lwuit.Component: void setWidth(int)>(i36);

        virtualinvoke r2.<com.sun.lwuit.Component: void setHeight(int)>(i35);

     label4:
        virtualinvoke r5.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i6, $i7, $i8, $i9);

        virtualinvoke r2.<com.sun.lwuit.Component: void paintComponent(com.sun.lwuit.Graphics)>(r5);

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i6, $i7, $i8, $i9);

        return;
    }

    public void setFG(com.sun.lwuit.Graphics, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.plaf.LookAndFeel r4;
        int $i0, $i1;
        com.sun.lwuit.Font $r3;
        boolean $z0;

        r4 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r3 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        virtualinvoke r2.<com.sun.lwuit.Graphics: void setFont(com.sun.lwuit.Font)>($r3);

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r2.<com.sun.lwuit.Graphics: void setColor(int)>($i1);

        goto label2;

     label1:
        $i0 = r4.<com.sun.lwuit.plaf.LookAndFeel: int disableColor>;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void setColor(int)>($i0);

     label2:
        return;
    }

    public int getVerticalScrollWidth()
    {
        com.sun.lwuit.Component $r1, $r2;
        com.sun.lwuit.plaf.Style $r3;
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void initScroll()>();

     label1:
        $r2 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 1);

        $i1 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public int getHorizontalScrollHeight()
    {
        com.sun.lwuit.Component $r1, $r2;
        com.sun.lwuit.plaf.Style $r3;
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void initScroll()>();

     label1:
        $r2 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $i1 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i6 = $i4 + $i5;

        return $i6;
    }

    void drawBorder(com.sun.lwuit.Graphics, com.sun.lwuit.Component, int, int)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.plaf.LookAndFeel r0;
        int i0, i1;
        com.sun.lwuit.Graphics r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void drawBorder(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int)>(r1, r2, i0, i0, i1);

        return;
    }

    void drawBorder(com.sun.lwuit.Graphics, com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.Graphics r0;
        com.sun.lwuit.Component r1;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        com.sun.lwuit.plaf.LookAndFeel r2;

        r2 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        r1 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        i8 := @parameter3: int;

        i4 := @parameter4: int;

        virtualinvoke r0.<com.sun.lwuit.Graphics: void setColor(int)>(i0);

        $i1 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i3 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i3, i4);

        $i5 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i6 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i7 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i5, $i6, i4, $i7);

        virtualinvoke r0.<com.sun.lwuit.Graphics: void setColor(int)>(i8);

        $i9 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i10 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i11 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        $i12 = $i10 + $i11;

        $i13 = $i12 - i4;

        $i14 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i9, $i13, $i14, i4);

        $i15 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i16 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        $i17 = $i15 + $i16;

        $i18 = $i17 - i4;

        $i19 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i20 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i18, $i19, i4, $i20);

        return;
    }

    public abstract com.sun.lwuit.Component getTabbedPaneCell(com.sun.lwuit.TabbedPane, java.lang.String, com.sun.lwuit.Image, boolean, boolean, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, int, int, com.sun.lwuit.geom.Dimension, com.sun.lwuit.geom.Dimension);

    public abstract void drawTabbedPaneContentPane(com.sun.lwuit.TabbedPane, com.sun.lwuit.Graphics, com.sun.lwuit.geom.Rectangle, com.sun.lwuit.geom.Dimension, int, int, com.sun.lwuit.geom.Dimension, int, int);

    public com.sun.lwuit.animations.Transition getDefaultFormTransitionIn()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultFormTransitionIn>;

        return $r1;
    }

    public void setDefaultFormTransitionIn(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultFormTransitionIn> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getDefaultFormTransitionOut()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultFormTransitionOut>;

        return $r1;
    }

    public void setDefaultFormTransitionOut(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultFormTransitionOut> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getDefaultMenuTransitionIn()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultMenuTransitionIn>;

        return $r1;
    }

    public void setDefaultMenuTransitionIn(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultMenuTransitionIn> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getDefaultMenuTransitionOut()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultMenuTransitionOut>;

        return $r1;
    }

    public void setDefaultMenuTransitionOut(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultMenuTransitionOut> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getDefaultDialogTransitionIn()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultDialogTransitionIn>;

        return $r1;
    }

    public void setDefaultDialogTransitionIn(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultDialogTransitionIn> = r1;

        return;
    }

    public com.sun.lwuit.animations.Transition getDefaultDialogTransitionOut()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultDialogTransitionOut>;

        return $r1;
    }

    public void setDefaultDialogTransitionOut(com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.animations.Transition r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.animations.Transition;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.animations.Transition defaultDialogTransitionOut> = r1;

        return;
    }

    public int getDefaultFormTintColor()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $i0 = r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultFormTintColor>;

        return $i0;
    }

    public void setDefaultFormTintColor(int)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultFormTintColor> = i0;

        return;
    }

    public int getDisableColor()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $i0 = r0.<com.sun.lwuit.plaf.LookAndFeel: int disableColor>;

        return $i0;
    }

    public void setDisableColor(int)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int disableColor> = i0;

        return;
    }

    public boolean isDefaultSmoothScrolling()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultSmoothScrolling>;

        return $z0;
    }

    public void setDefaultSmoothScrolling(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultSmoothScrolling> = z0;

        return;
    }

    public int getDefaultSmoothScrollingSpeed()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $i0 = r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultSmoothScrollingSpeed>;

        return $i0;
    }

    public void setDefaultSmoothScrollingSpeed(int)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int defaultSmoothScrollingSpeed> = i0;

        return;
    }

    public boolean isReverseSoftButtons()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean reverseSoftButtons>;

        return $z0;
    }

    public void setReverseSoftButtons(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean reverseSoftButtons> = z0;

        return;
    }

    public com.sun.lwuit.list.ListCellRenderer getMenuRenderer()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.list.ListCellRenderer $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.list.ListCellRenderer menuRenderer>;

        return $r1;
    }

    public void setMenuRenderer(com.sun.lwuit.list.ListCellRenderer)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.list.ListCellRenderer r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.list.ListCellRenderer;

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.list.ListCellRenderer menuRenderer> = r1;

        return;
    }

    public void setMenuIcons(com.sun.lwuit.Image, com.sun.lwuit.Image, com.sun.lwuit.Image)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.Image[] $r2, $r4, $r6;
        com.sun.lwuit.Image r1, r3, r5;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Image;

        r3 := @parameter1: com.sun.lwuit.Image;

        r5 := @parameter2: com.sun.lwuit.Image;

        $r2 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Image[] menuIcons>;

        $r2[0] = r1;

        $r4 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Image[] menuIcons>;

        $r4[1] = r3;

        $r6 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Image[] menuIcons>;

        $r6[2] = r5;

        return;
    }

    public com.sun.lwuit.Image[] getMenuIcons()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        com.sun.lwuit.Image[] $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Image[] menuIcons>;

        return $r1;
    }

    public long getTickerSpeed()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        long $l0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $l0 = r0.<com.sun.lwuit.plaf.LookAndFeel: long tickerSpeed>;

        return $l0;
    }

    public void setTickerSpeed(long)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        long l0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        l0 := @parameter0: long;

        r0.<com.sun.lwuit.plaf.LookAndFeel: long tickerSpeed> = l0;

        return;
    }

    private void initScroll()
    {
        com.sun.lwuit.Label $r1, $r3, $r5, $r7;
        com.sun.lwuit.Component $r2, $r4, $r6, $r8;
        com.sun.lwuit.plaf.LookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $r1 = new com.sun.lwuit.Label;

        specialinvoke $r1.<com.sun.lwuit.Label: void <init>()>();

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll> = $r1;

        $r2 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScroll>;

        virtualinvoke $r2.<com.sun.lwuit.Component: void setUIID(java.lang.String)>("Scroll");

        $r3 = new com.sun.lwuit.Label;

        specialinvoke $r3.<com.sun.lwuit.Label: void <init>()>();

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll> = $r3;

        $r4 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScroll>;

        virtualinvoke $r4.<com.sun.lwuit.Component: void setUIID(java.lang.String)>("HorizontalScroll");

        $r5 = new com.sun.lwuit.Label;

        specialinvoke $r5.<com.sun.lwuit.Label: void <init>()>();

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScrollThumb> = $r5;

        $r6 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component verticalScrollThumb>;

        virtualinvoke $r6.<com.sun.lwuit.Component: void setUIID(java.lang.String)>("ScrollThumb");

        $r7 = new com.sun.lwuit.Label;

        specialinvoke $r7.<com.sun.lwuit.Label: void <init>()>();

        r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScrollThumb> = $r7;

        $r8 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.Component horizontalScrollThumb>;

        virtualinvoke $r8.<com.sun.lwuit.Component: void setUIID(java.lang.String)>("HorizontalScrollThumb");

        return;
    }

    public void refreshTheme()
    {
        com.sun.lwuit.Component $r4;
        com.sun.lwuit.list.ListCellRenderer $r1, $r2, $r3;
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void initScroll()>();

        $r1 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.list.ListCellRenderer menuRenderer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.list.ListCellRenderer menuRenderer>;

        $z0 = $r2 instanceof com.sun.lwuit.Component;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.list.ListCellRenderer menuRenderer>;

        $r4 = (com.sun.lwuit.Component) $r3;

        virtualinvoke $r4.<com.sun.lwuit.Component: void refreshTheme()>();

     label1:
        return;
    }

    public boolean isTouchMenus()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean touchMenus>;

        return $z0;
    }

    public void setTouchMenus(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean touchMenus> = z0;

        return;
    }

    public void setRTL(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean rtl> = z0;

        if z0 == 0 goto label1;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        virtualinvoke $r1.<com.sun.lwuit.Display: void setBidiAlgorithm(boolean)>(1);

     label1:
        return;
    }

    public boolean isRTL()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean rtl>;

        return $z0;
    }

    public int getTactileTouchDuration()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int $i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $i0 = r0.<com.sun.lwuit.plaf.LookAndFeel: int tactileTouchDuration>;

        return $i0;
    }

    public void setTactileTouchDuration(int)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        int i0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.plaf.LookAndFeel: int tactileTouchDuration> = i0;

        return;
    }

    public boolean isDefaultEndsWith3Points()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultEndsWith3Points>;

        return $z0;
    }

    public void setDefaultEndsWith3Points(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultEndsWith3Points> = z0;

        return;
    }

    public boolean isDefaultTensileDrag()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultTensileDrag>;

        return $z0;
    }

    public void setDefaultTensileDrag(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean defaultTensileDrag> = z0;

        return;
    }

    public boolean isFocusScrolling()
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        $z0 = r0.<com.sun.lwuit.plaf.LookAndFeel: boolean focusScrolling>;

        return $z0;
    }

    public void setFocusScrolling(boolean)
    {
        com.sun.lwuit.plaf.LookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.LookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.LookAndFeel: boolean focusScrolling> = z0;

        return;
    }
}
