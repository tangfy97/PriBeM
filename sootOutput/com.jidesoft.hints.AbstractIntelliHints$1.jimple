class com.jidesoft.hints.AbstractIntelliHints$1 extends java.lang.Object implements java.awt.event.KeyListener
{
    final com.jidesoft.hints.AbstractIntelliHints this$0;

    void <init>(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.hints.AbstractIntelliHints$1 r0;
        com.jidesoft.hints.AbstractIntelliHints r1;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$1;

        r1 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        r0.<com.jidesoft.hints.AbstractIntelliHints$1: com.jidesoft.hints.AbstractIntelliHints this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void keyTyped(java.awt.event.KeyEvent)
    {
        com.jidesoft.hints.AbstractIntelliHints$1 r0;
        java.awt.event.KeyEvent r1;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$1;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyPressed(java.awt.event.KeyEvent)
    {
        com.jidesoft.hints.AbstractIntelliHints$1 r0;
        java.awt.event.KeyEvent r1;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$1;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyReleased(java.awt.event.KeyEvent)
    {
        com.jidesoft.hints.AbstractIntelliHints$1 r1;
        int $i0, $i1;
        java.awt.event.KeyEvent r0;
        com.jidesoft.hints.AbstractIntelliHints $r2;

        r1 := @this: com.jidesoft.hints.AbstractIntelliHints$1;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if 27 == $i0 goto label1;

        $i1 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if 10 == $i1 goto label1;

        $r2 = r1.<com.jidesoft.hints.AbstractIntelliHints$1: com.jidesoft.hints.AbstractIntelliHints this$0>;

        staticinvoke <com.jidesoft.hints.AbstractIntelliHints: void access$000(com.jidesoft.hints.AbstractIntelliHints,boolean)>($r2, 1);

     label1:
        return;
    }
}
