public abstract class org.apache.poi.hssf.record.PageBreakRecord extends org.apache.poi.hssf.record.StandardRecord
{
    private static final int[] EMPTY_INT_ARRAY;
    private java.util.List _breaks;
    private java.util.Map _breakMap;

    protected void <init>()
    {
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.util.HashMap $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap> = $r2;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        java.util.HashMap $r9;
        java.lang.Integer $r7;
        java.util.ArrayList $r8;
        short $s0;
        java.util.List $r5;
        org.apache.poi.hssf.record.RecordInputStream r1;
        java.util.Map $r6;
        int $i1, $i2, i3, $i4, $i5;
        org.apache.poi.hssf.record.PageBreakRecord r0;
        org.apache.poi.hssf.record.PageBreakRecord$Break $r10;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $r8 = new java.util.ArrayList;

        $i4 = (int) $s0;

        $i1 = $i4 + 2;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap> = $r9;

        i3 = 0;

     label1:
        $i5 = (int) $s0;

        if i3 >= $i5 goto label2;

        $r10 = new org.apache.poi.hssf.record.PageBreakRecord$Break;

        specialinvoke $r10.<org.apache.poi.hssf.record.PageBreakRecord$Break: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        $r5 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r6 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        $i2 = $r10.<org.apache.poi.hssf.record.PageBreakRecord$Break: int main>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $r1 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    protected int getDataSize()
    {
        java.util.List $r1;
        int $i0, $i1, $i2;
        org.apache.poi.hssf.record.PageBreakRecord r0;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $r1 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 * 6;

        $i2 = 2 + $i1;

        return $i2;
    }

    public final void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        java.util.List $r1, $r3;
        org.apache.poi.util.LittleEndianOutput r2;
        int $i0, i1;
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.lang.Object $r4;
        org.apache.poi.hssf.record.PageBreakRecord$Break $r5;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        r2 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $r1 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r4;

        virtualinvoke $r5.<org.apache.poi.hssf.record.PageBreakRecord$Break: void serialize(org.apache.poi.util.LittleEndianOutput)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getNumBreaks()
    {
        int $i0;
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $r1 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public final java.util.Iterator getBreaksIterator()
    {
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $r1 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.PageBreakRecord r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r14, $r15, $r16, $r42, $r43;
        org.apache.poi.hssf.record.PageBreakRecord$Break r21;
        short $s0, $s1;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11, $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r41;
        int $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        java.lang.String $r6, $r17, $r19, r34, r35, r36, r37, r38, r39, r40;
        java.util.Iterator $r12;
        java.lang.Object $r20;

        r1 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.PageBreakRecord: short getSid()>();

        $i8 = (int) $s0;

        if $i8 != 27 goto label1;

        r34 = "HORIZONTALPAGEBREAK";

        r40 = "HORIZONTALPAGEBREAK";

        r39 = "HORIZONTALPAGEBREAK";

        r35 = "row";

        r36 = "col";

        r38 = "col";

        r37 = "col";

        goto label2;

     label1:
        r34 = "VERTICALPAGEBREAK";

        r40 = "VERTICALPAGEBREAK";

        r39 = "VERTICALPAGEBREAK";

        r35 = "column";

        r36 = "row";

        r38 = "row";

        r37 = "row";

     label2:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .sid        =");

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.PageBreakRecord: short getSid()>();

        $i9 = (int) $s1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .numbreaks =");

        $i2 = virtualinvoke r1.<org.apache.poi.hssf.record.PageBreakRecord: int getNumBreaks()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r12 = virtualinvoke r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Iterator getBreaksIterator()>();

        i6 = 0;

     label3:
        $i7 = virtualinvoke r1.<org.apache.poi.hssf.record.PageBreakRecord: int getNumBreaks()>();

        if i6 >= $i7 goto label4;

        $r20 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r20;

        $r22 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r35);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (zero-based) =");

        $i3 = r21.<org.apache.poi.hssf.record.PageBreakRecord$Break: int main>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r26 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("From    =");

        $i4 = r21.<org.apache.poi.hssf.record.PageBreakRecord$Break: int subFrom>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r30 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r37);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("To      =");

        $i5 = r21.<org.apache.poi.hssf.record.PageBreakRecord$Break: int subTo>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i6 = i6 + 1;

        goto label3;

     label4:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r19;
    }

    public void addBreak(int, int, int)
    {
        java.lang.Integer $r0;
        java.util.List $r6;
        java.util.Map $r2, $r5;
        int i0, i1, i2;
        org.apache.poi.hssf.record.PageBreakRecord r1;
        java.lang.Object $r3;
        org.apache.poi.hssf.record.PageBreakRecord$Break $r4, r7;

        r1 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r7 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r3;

        if r7 != null goto label1;

        $r4 = new org.apache.poi.hssf.record.PageBreakRecord$Break;

        specialinvoke $r4.<org.apache.poi.hssf.record.PageBreakRecord$Break: void <init>(int,int,int)>(i0, i1, i2);

        $r5 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

        $r6 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label1:
        r7.<org.apache.poi.hssf.record.PageBreakRecord$Break: int main> = i0;

        r7.<org.apache.poi.hssf.record.PageBreakRecord$Break: int subFrom> = i1;

        r7.<org.apache.poi.hssf.record.PageBreakRecord$Break: int subTo> = i2;

     label2:
        return;
    }

    public final void removeBreak(int)
    {
        java.lang.Integer $r0;
        java.util.List $r5;
        java.util.Map $r2, $r6;
        int i0;
        org.apache.poi.hssf.record.PageBreakRecord r1;
        java.lang.Object $r3;
        org.apache.poi.hssf.record.PageBreakRecord$Break r4;

        r1 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r4 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r3;

        $r5 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r4);

        $r6 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        return;
    }

    public final org.apache.poi.hssf.record.PageBreakRecord$Break getBreak(int)
    {
        java.util.Map $r2;
        int i0;
        org.apache.poi.hssf.record.PageBreakRecord r1;
        java.lang.Object $r3;
        java.lang.Integer $r0;
        org.apache.poi.hssf.record.PageBreakRecord$Break $r4;

        r1 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = r1.<org.apache.poi.hssf.record.PageBreakRecord: java.util.Map _breakMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r3;

        return $r4;
    }

    public final int[] getBreaks()
    {
        java.util.List $r2;
        int[] r1, $r5;
        int $i0, $i1, i2;
        org.apache.poi.hssf.record.PageBreakRecord r0;
        java.lang.Object $r3;
        org.apache.poi.hssf.record.PageBreakRecord$Break r4;

        r0 := @this: org.apache.poi.hssf.record.PageBreakRecord;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.PageBreakRecord: int getNumBreaks()>();

        if $i0 >= 1 goto label1;

        $r5 = <org.apache.poi.hssf.record.PageBreakRecord: int[] EMPTY_INT_ARRAY>;

        return $r5;

     label1:
        r1 = newarray (int)[$i0];

        i2 = 0;

     label2:
        if i2 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.hssf.record.PageBreakRecord: java.util.List _breaks>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.apache.poi.hssf.record.PageBreakRecord$Break) $r3;

        $i1 = r4.<org.apache.poi.hssf.record.PageBreakRecord$Break: int main>;

        r1[i2] = $i1;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[0];

        <org.apache.poi.hssf.record.PageBreakRecord: int[] EMPTY_INT_ARRAY> = $r0;

        return;
    }
}
