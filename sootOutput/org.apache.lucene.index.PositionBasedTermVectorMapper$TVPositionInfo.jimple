public class org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo extends java.lang.Object
{
    private int position;
    private java.util.List terms;
    private java.util.List offsets;

    public void <init>(int, boolean)
    {
        int i0;
        org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo r0;
        java.util.ArrayList $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: int position> = i0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List terms> = $r1;

        if z0 == 0 goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List offsets> = $r2;

     label1:
        return;
    }

    void addTerm(java.lang.String, org.apache.lucene.index.TermVectorOffsetInfo)
    {
        java.util.List $r2, $r3, $r5;
        org.apache.lucene.index.TermVectorOffsetInfo r4;
        java.lang.String r1;
        org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo r0;

        r0 := @this: org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.lucene.index.TermVectorOffsetInfo;

        $r2 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List terms>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List offsets>;

        if $r3 == null goto label1;

        $r5 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List offsets>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label1:
        return;
    }

    public int getPosition()
    {
        int $i0;
        org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo r0;

        r0 := @this: org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo;

        $i0 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: int position>;

        return $i0;
    }

    public java.util.List getTerms()
    {
        java.util.List $r1;
        org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo r0;

        r0 := @this: org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo;

        $r1 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List terms>;

        return $r1;
    }

    public java.util.List getOffsets()
    {
        java.util.List $r1;
        org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo r0;

        r0 := @this: org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo;

        $r1 = r0.<org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo: java.util.List offsets>;

        return $r1;
    }
}
