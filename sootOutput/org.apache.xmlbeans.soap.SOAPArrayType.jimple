public final class org.apache.xmlbeans.soap.SOAPArrayType extends java.lang.Object
{
    private javax.xml.namespace.QName _type;
    private int[] _ranks;
    private int[] _dimensions;
    private static int[] EMPTY_INT_ARRAY;

    public boolean isSameRankAs(org.apache.xmlbeans.soap.SOAPArrayType)
    {
        int[] $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.xmlbeans.soap.SOAPArrayType r0, r2;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r2 := @parameter0: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i1 = lengthof $r1;

        $r3 = r2.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i7 = 0;

     label2:
        $r4 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i2 = lengthof $r4;

        if i7 >= $i2 goto label4;

        $r7 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i6 = $r7[i7];

        $r8 = r2.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i5 = $r8[i7];

        if $i6 == $i5 goto label3;

        return 0;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        $r5 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i4 = lengthof $r5;

        $r6 = r2.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i3 = lengthof $r6;

        if $i4 == $i3 goto label5;

        return 0;

     label5:
        return 1;
    }

    public static int[] parseSoap11Index(java.lang.String)
    {
        java.lang.IllegalArgumentException $r1;
        int[] $r3;
        int $i0, $i1;
        java.lang.String $r0, $r2, r4;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>(r4, 3);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z1 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Misformed SOAP 1.1 index: must be contained in braces []");

        throw $r1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $r3 = staticinvoke <org.apache.xmlbeans.soap.SOAPArrayType: int[] internalParseCommaIntString(java.lang.String)>($r2);

        return $r3;
    }

    private static int[] internalParseCommaIntString(java.lang.String)
    {
        java.util.ArrayList $r11;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r12;
        int[] r10;
        int $i0, $i1, $i2, i3, i4, $i6;
        java.lang.String r1, $r2, $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        java.lang.Exception $r8;
        java.lang.Object $r5;

        r1 := @parameter0: java.lang.String;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label01:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, i3);

        if $i0 >= 0 goto label02;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label03;

     label02:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, $i0);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r2);

        i3 = $i0 + 1;

        goto label01;

     label03:
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        r10 = newarray (int)[$i1];

        i4 = 0;

        $r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>($r6, 3);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label06;

     label05:
        $i6 = (int) -1;

        r10[i4] = $i6;

        goto label09;

     label06:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r10[i4] = $i2;

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

        $r12 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r12.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>(java.lang.String)>("Malformed integer in SOAP array index");

        throw $r12;

     label09:
        i4 = i4 + 1;

        goto label04;

     label10:
        return r10;

        catch java.lang.Exception from label06 to label07 with label08;
    }

    public void <init>(java.lang.String, org.apache.xmlbeans.impl.common.PrefixResolver)
    {
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r8, $r9;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2, $r3, $r5, $r6, r10;
        javax.xml.namespace.QName $r7;
        org.apache.xmlbeans.soap.SOAPArrayType r0;
        org.apache.xmlbeans.impl.common.PrefixResolver r4;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.xmlbeans.impl.common.PrefixResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(91);

        if $i0 >= 0 goto label1;

        $r9 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r9.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r9;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>($r2, 3);

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(58);

        r10 = "";

        if $i1 < 0 goto label2;

        r10 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $r5 = interfaceinvoke r4.<org.apache.xmlbeans.impl.common.PrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)>(r10);

        if $r5 != null goto label3;

        $r8 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r8.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r8;

     label3:
        $i2 = $i1 + 1;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r6, $r5);

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = $r7;

        specialinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: void initDimensions(java.lang.String,int)>(r1, $i0);

        return;
    }

    public void <init>(javax.xml.namespace.QName, java.lang.String)
    {
        java.lang.String[] $r4;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r12;
        int[] $r2, $r7, $r8;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r3, r5, $r6, r11;
        org.apache.xmlbeans.soap.SOAPArrayType r0;
        boolean $z0;
        java.lang.Exception $r9;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r1 := @parameter0: javax.xml.namespace.QName;

        r11 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r11.<java.lang.String: int indexOf(int)>(91);

        if $i0 >= 0 goto label7;

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = r1;

        $r2 = <org.apache.xmlbeans.soap.SOAPArrayType: int[] EMPTY_INT_ARRAY>;

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks> = $r2;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>(r11, 3);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i3 = 0;

     label1:
        $i1 = lengthof $r4;

        if i3 >= $i1 goto label6;

        r5 = $r4[i3];

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i5 = (int) -1;

        $r8[i3] = $i5;

        goto label5;

     label2:
        $r7 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $r6 = $r4[i3];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7[i3] = $i2;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r12 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r12.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r12;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        goto label8;

     label7:
        r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = r1;

        specialinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: void initDimensions(java.lang.String,int)>(r11, $i0);

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void <init>(org.apache.xmlbeans.soap.SOAPArrayType, int[])
    {
        int[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xmlbeans.soap.SOAPArrayType r0, r1;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r1 := @parameter0: org.apache.xmlbeans.soap.SOAPArrayType;

        r11 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = $r2;

        $r3 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r3;

        $i1 = $i0 + 1;

        $r4 = newarray (int)[$i1];

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks> = $r4;

        $r7 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r6 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r5 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i2 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i2);

        $r10 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r8 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i3 = lengthof $r8;

        $i5 = $i3 - 1;

        $r9 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i4 = lengthof $r9;

        $r10[$i5] = $i4;

        $i6 = lengthof r11;

        $r12 = newarray (int)[$i6];

        r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions> = $r12;

        $r13 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i7 = lengthof r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, $r13, 0, $i7);

        return;
    }

    private void initDimensions(java.lang.String, int)
    {
        int[] $r4, $r5, $r8, $r11;
        boolean $z0, $z1;
        java.util.ArrayList $r16;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r17, $r18, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, i12, i13, i14, i15, i16, $i18, $i19;
        java.lang.String r1, $r2, $r7, r10, $r14;
        org.apache.xmlbeans.soap.SOAPArrayType r3;
        char $c9;
        java.lang.Object $r6, $r9;

        r3 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $i18 = (int) -1;

        i12 = $i18;

        i13 = i0;

     label01:
        if i13 < 0 goto label03;

        $i10 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(93, i13);

        i12 = $i10;

        if $i10 >= 0 goto label02;

        $r17 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r17.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r17;

     label02:
        $i11 = i13 + 1;

        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i11, $i10);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r14);

        i13 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(91, $i10);

        goto label01;

     label03:
        $i1 = i12 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: boolean isAllSpace(java.lang.String)>($r2);

        if $z0 != 0 goto label04;

        $r18 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r18.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r18;

     label04:
        $i2 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r4 = newarray (int)[$i3];

        r3.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks> = $r4;

        i14 = 0;

     label05:
        $r5 = r3.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i4 = lengthof $r5;

        if i14 >= $i4 goto label10;

        $r9 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i14);

        r10 = (java.lang.String) $r9;

        i15 = 0;

        i16 = 0;

     label06:
        $i7 = virtualinvoke r10.<java.lang.String: int length()>();

        if i16 >= $i7 goto label09;

        $c9 = virtualinvoke r10.<java.lang.String: char charAt(int)>(i16);

        $i19 = (int) $c9;

        if $i19 != 44 goto label07;

        i15 = i15 + 1;

        goto label08;

     label07:
        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: boolean isSpace(char)>($c9);

        if $z1 != 0 goto label08;

        $r19 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r19.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r19;

     label08:
        i16 = i16 + 1;

        goto label06;

     label09:
        $r11 = r3.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i8 = i15 + 1;

        $r11[i14] = $i8;

        i14 = i14 + 1;

        goto label05;

     label10:
        $i5 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r6 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i6);

        $r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.apache.xmlbeans.soap.SOAPArrayType: int[] internalParseCommaIntString(java.lang.String)>($r7);

        r3.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions> = $r8;

        return;
    }

    public javax.xml.namespace.QName getQName()
    {
        javax.xml.namespace.QName $r1;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        return $r1;
    }

    public int[] getRanks()
    {
        int[] $r1, r2, $r3;
        int $i0, $i1;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r1;

        r2 = newarray (int)[$i0];

        $r3 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i1);

        return r2;
    }

    public int[] getDimensions()
    {
        int[] $r1, r2, $r3;
        int $i0, $i1;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i0 = lengthof $r1;

        r2 = newarray (int)[$i0];

        $r3 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i1);

        return r2;
    }

    public boolean containsNestedArrays()
    {
        int[] $r1;
        int $i0;
        org.apache.xmlbeans.soap.SOAPArrayType r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String soap11DimensionString()
    {
        java.lang.String $r2;
        int[] $r1;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: java.lang.String soap11DimensionString(int[])>($r1);

        return $r2;
    }

    public java.lang.String soap11DimensionString(int[])
    {
        int[] $r2, r3, $r5;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r4;
        org.apache.xmlbeans.soap.SOAPArrayType r1;

        r1 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r3 := @parameter0: int[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i5 = 0;

     label1:
        $r2 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r2;

        if i5 >= $i0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i6 = 1;

     label2:
        $r5 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i4 = $r5[i5];

        if i6 >= $i4 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        i6 = i6 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        i5 = i5 + 1;

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i7 = 0;

     label5:
        $i1 = lengthof r3;

        if i7 >= $i1 goto label8;

        if i7 <= 0 goto label6;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label6:
        $i2 = r3[i7];

        if $i2 < 0 goto label7;

        $i3 = r3[i7];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

     label7:
        i7 = i7 + 1;

        goto label5;

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private void <init>()
    {
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xmlbeans.soap.SOAPArrayType newSoap12Array(javax.xml.namespace.QName, java.lang.String)
    {
        java.lang.String[] $r2;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r11;
        int[] r0, r3;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r1, r6, $r7, r10;
        org.apache.xmlbeans.soap.SOAPArrayType $r12;
        boolean $z0;
        java.lang.Exception $r8;
        javax.xml.namespace.QName r5;

        r5 := @parameter0: javax.xml.namespace.QName;

        r10 := @parameter1: java.lang.String;

        r0 = <org.apache.xmlbeans.soap.SOAPArrayType: int[] EMPTY_INT_ARRAY>;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>(r10, 3);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        r3 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof $r2;

        if i3 >= $i1 goto label6;

        r6 = $r2[i3];

        if i3 != 0 goto label2;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label2;

        $i5 = (int) -1;

        r3[i3] = $i5;

        goto label5;

     label2:
        $r7 = $r2[i3];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r3[i3] = $i2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r11 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r11.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r11;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r12 = new org.apache.xmlbeans.soap.SOAPArrayType;

        specialinvoke $r12.<org.apache.xmlbeans.soap.SOAPArrayType: void <init>()>();

        $r12.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks> = r0;

        $r12.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = r5;

        $r12.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions> = r3;

        return $r12;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String soap12DimensionString(int[])
    {
        int[] r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2;
        org.apache.xmlbeans.soap.SOAPArrayType r3;

        r3 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label4;

        if i3 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $i1 = r1[i3];

        if $i1 < 0 goto label3;

        $i2 = r1[i3];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public org.apache.xmlbeans.soap.SOAPArrayType nestedArrayType()
    {
        java.lang.IllegalStateException $r14;
        int[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9;
        org.apache.xmlbeans.soap.SOAPArrayType r0, $r15;
        boolean $z0;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.soap.SOAPArrayType: boolean containsNestedArrays()>();

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label1:
        $r15 = new org.apache.xmlbeans.soap.SOAPArrayType;

        specialinvoke $r15.<org.apache.xmlbeans.soap.SOAPArrayType: void <init>()>();

        $r2 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        $r15.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type> = $r2;

        $r3 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        $r4 = newarray (int)[$i1];

        $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks> = $r4;

        $r7 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r6 = $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r5 = $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i2 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i2);

        $r9 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $r8 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i3 = lengthof $r8;

        $i4 = $i3 - 1;

        $i5 = $r9[$i4];

        $r10 = newarray (int)[$i5];

        $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions> = $r10;

        i7 = 0;

     label2:
        $r11 = $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i6 = lengthof $r11;

        if i7 >= $i6 goto label3;

        $r12 = $r15.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i9 = (int) -1;

        $r12[i7] = $i9;

        i7 = i7 + 1;

        goto label2;

     label3:
        return $r15;
    }

    public int hashCode()
    {
        int[] $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javax.xml.namespace.QName $r1;
        org.apache.xmlbeans.soap.SOAPArrayType r0;

        r0 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        $r1 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        $i0 = virtualinvoke $r1.<javax.xml.namespace.QName: int hashCode()>();

        $r2 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i1 = lengthof $r2;

        $i3 = $i0 + $i1;

        $r3 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i2 = lengthof $r3;

        $i5 = $i3 + $i2;

        $r4 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i4 = lengthof $r4;

        if $i4 != 0 goto label1;

        $i7 = 0;

        goto label2;

     label1:
        $r5 = r0.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i7 = $r5[0];

     label2:
        $i6 = $i5 + $i7;

        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        int[] $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        org.apache.xmlbeans.soap.SOAPArrayType r1, r4;
        boolean $z0, $z1;
        java.lang.Object r0;
        java.lang.Class $r2, $r3;
        javax.xml.namespace.QName $r5, $r6;

        r1 := @this: org.apache.xmlbeans.soap.SOAPArrayType;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r4 = (org.apache.xmlbeans.soap.SOAPArrayType) r0;

        $r6 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        $r5 = r4.<org.apache.xmlbeans.soap.SOAPArrayType: javax.xml.namespace.QName _type>;

        $z1 = virtualinvoke $r6.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i1 = lengthof $r7;

        $r8 = r4.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i0 = lengthof $r8;

        if $i1 == $i0 goto label04;

        return 0;

     label04:
        $r9 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i3 = lengthof $r9;

        $r10 = r4.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i2 = lengthof $r10;

        if $i3 == $i2 goto label05;

        return 0;

     label05:
        i10 = 0;

     label06:
        $r11 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i4 = lengthof $r11;

        if i10 >= $i4 goto label08;

        $r15 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i9 = $r15[i10];

        $r16 = r4.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _ranks>;

        $i8 = $r16[i10];

        if $i9 == $i8 goto label07;

        return 0;

     label07:
        i10 = i10 + 1;

        goto label06;

     label08:
        i11 = 0;

     label09:
        $r12 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i5 = lengthof $r12;

        if i11 >= $i5 goto label11;

        $r13 = r1.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i7 = $r13[i11];

        $r14 = r4.<org.apache.xmlbeans.soap.SOAPArrayType: int[] _dimensions>;

        $i6 = $r14[i11];

        if $i7 == $i6 goto label10;

        return 0;

     label10:
        i11 = i11 + 1;

        goto label09;

     label11:
        return 1;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[0];

        <org.apache.xmlbeans.soap.SOAPArrayType: int[] EMPTY_INT_ARRAY> = $r0;

        return;
    }
}
