public class org.jdom.filter.ElementFilter extends org.jdom.filter.AbstractFilter
{
    private static final java.lang.String CVS_ID;
    private java.lang.String name;
    private transient org.jdom.Namespace namespace;

    public void <init>()
    {
        org.jdom.filter.ElementFilter r0;

        r0 := @this: org.jdom.filter.ElementFilter;

        specialinvoke r0.<org.jdom.filter.AbstractFilter: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.jdom.filter.ElementFilter r0;

        r0 := @this: org.jdom.filter.ElementFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jdom.filter.AbstractFilter: void <init>()>();

        r0.<org.jdom.filter.ElementFilter: java.lang.String name> = r1;

        return;
    }

    public void <init>(java.lang.String, org.jdom.Namespace)
    {
        org.jdom.Namespace r2;
        java.lang.String r1;
        org.jdom.filter.ElementFilter r0;

        r0 := @this: org.jdom.filter.ElementFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.jdom.Namespace;

        specialinvoke r0.<org.jdom.filter.AbstractFilter: void <init>()>();

        r0.<org.jdom.filter.ElementFilter: java.lang.String name> = r1;

        r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace> = r2;

        return;
    }

    public void <init>(org.jdom.Namespace)
    {
        org.jdom.Namespace r1;
        org.jdom.filter.ElementFilter r0;

        r0 := @this: org.jdom.filter.ElementFilter;

        r1 := @parameter0: org.jdom.Namespace;

        specialinvoke r0.<org.jdom.filter.AbstractFilter: void <init>()>();

        r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace> = r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jdom.Namespace $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r4, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jdom.filter.ElementFilter r0, r2;
        java.lang.Object r1;

        r0 := @this: org.jdom.filter.ElementFilter;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof org.jdom.filter.ElementFilter;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (org.jdom.filter.ElementFilter) r1;

        $r3 = r0.<org.jdom.filter.ElementFilter: java.lang.String name>;

        if $r3 == null goto label03;

        $r10 = r0.<org.jdom.filter.ElementFilter: java.lang.String name>;

        $r9 = r2.<org.jdom.filter.ElementFilter: java.lang.String name>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        $z3 = $z2 ^ 1;

        goto label04;

     label03:
        $r4 = r2.<org.jdom.filter.ElementFilter: java.lang.String name>;

        if $r4 != null goto label05;

        $z3 = 0;

        goto label04;

     label04:
        if $z3 == 0 goto label06;

     label05:
        return 0;

     label06:
        $r5 = r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        if $r5 == null goto label07;

        $r8 = r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $r7 = r2.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $z1 = virtualinvoke $r8.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r7);

        $z4 = $z1 ^ 1;

        goto label08;

     label07:
        $r6 = r2.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        if $r6 != null goto label09;

        $z4 = 0;

        goto label08;

     label08:
        if $z4 == 0 goto label10;

     label09:
        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        org.jdom.filter.ElementFilter r0;
        int $i0, $i1, $i2, $i3;
        org.jdom.Namespace $r2, $r3;
        java.lang.String $r1, $r4;

        r0 := @this: org.jdom.filter.ElementFilter;

        $r1 = r0.<org.jdom.filter.ElementFilter: java.lang.String name>;

        if $r1 == null goto label1;

        $r4 = r0.<org.jdom.filter.ElementFilter: java.lang.String name>;

        $i2 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $i0 = 29 * $i2;

        $r2 = r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        if $r2 == null goto label3;

        $r3 = r0.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $i3 = virtualinvoke $r3.<org.jdom.Namespace: int hashCode()>();

        goto label4;

     label3:
        $i3 = 0;

     label4:
        $i1 = $i0 + $i3;

        return $i1;
    }

    public boolean matches(java.lang.Object)
    {
        org.jdom.filter.ElementFilter r2;
        java.lang.Object r0;
        org.jdom.Namespace $r4, $r5, $r6;
        java.lang.String $r3, $r7, $r8;
        org.jdom.Element r1;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.jdom.filter.ElementFilter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.jdom.Element;

        if $z0 == 0 goto label5;

        r1 = (org.jdom.Element) r0;

        $r3 = r2.<org.jdom.filter.ElementFilter: java.lang.String name>;

        if $r3 == null goto label1;

        $r7 = r2.<org.jdom.filter.ElementFilter: java.lang.String name>;

        $r8 = virtualinvoke r1.<org.jdom.Element: java.lang.String getName()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

     label1:
        $r4 = r2.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        if $r4 == null goto label3;

        $r5 = r2.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $r6 = virtualinvoke r1.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $z1 = virtualinvoke $r5.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

     label2:
        $z3 = 0;

        goto label4;

     label3:
        $z3 = 1;

     label4:
        return $z3;

     label5:
        return 0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.jdom.filter.ElementFilter r1;
        java.io.ObjectInputStream r0;
        java.lang.Object $r2, $r4;
        org.jdom.Namespace $r6;
        java.lang.String $r3, $r5;

        r1 := @this: org.jdom.filter.ElementFilter;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>($r3, $r5);

        r1.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace> = $r6;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.jdom.filter.ElementFilter r1;
        java.io.ObjectOutputStream r0;
        org.jdom.Namespace $r2, $r4;
        java.lang.String $r3, $r5;

        r1 := @this: org.jdom.filter.ElementFilter;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $r3 = virtualinvoke $r2.<org.jdom.Namespace: java.lang.String getPrefix()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $r4 = r1.<org.jdom.filter.ElementFilter: org.jdom.Namespace namespace>;

        $r5 = virtualinvoke $r4.<org.jdom.Namespace: java.lang.String getURI()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

        return;
    }

    public static void <clinit>()
    {
        <org.jdom.filter.ElementFilter: java.lang.String CVS_ID> = "@(#) $RCSfile: ElementFilter.java,v $ $Revision: 1.18 $ $Date: 2004/09/07 06:37:20 $ $Name: jdom_1_0 $";

        return;
    }
}
