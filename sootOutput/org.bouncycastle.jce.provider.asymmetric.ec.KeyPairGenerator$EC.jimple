public class org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC extends org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator
{
    org.bouncycastle.crypto.params.ECKeyGenerationParameters param;
    org.bouncycastle.crypto.generators.ECKeyPairGenerator engine;
    java.lang.Object ecParams;
    int strength;
    int certainty;
    java.security.SecureRandom random;
    boolean initialised;
    java.lang.String algorithm;
    private static java.util.Hashtable ecParameters;

    public void <init>()
    {
        org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC r0;
        java.security.SecureRandom $r2;
        org.bouncycastle.crypto.generators.ECKeyPairGenerator $r1;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC;

        specialinvoke r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator: void <init>(java.lang.String)>("EC");

        $r1 = new org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        specialinvoke $r1.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void <init>()>();

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine> = $r1;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = null;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: int strength> = 239;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: int certainty> = 50;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.SecureRandom random> = $r2;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 0;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm> = "EC";

        return;
    }

    public void <init>(java.lang.String)
    {
        java.security.SecureRandom $r3;
        org.bouncycastle.crypto.generators.ECKeyPairGenerator $r2;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC r0;
        java.lang.String r1;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator: void <init>(java.lang.String)>(r1);

        $r2 = new org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        specialinvoke $r2.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void <init>()>();

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine> = $r2;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = null;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: int strength> = 239;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: int certainty> = 50;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.SecureRandom random> = $r3;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 0;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm> = r1;

        return;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        java.lang.Integer $r2;
        java.security.InvalidAlgorithmParameterException $r9;
        java.security.SecureRandom r1;
        java.security.spec.ECGenParameterSpec $r8;
        java.security.InvalidParameterException $r6, $r10;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC r0;
        int i0;
        java.lang.Object $r4, $r5, $r7;
        java.util.Hashtable $r3;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: int strength> = i0;

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.SecureRandom random> = r1;

        $r3 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = $r4;

        $r5 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        if $r5 == null goto label4;

     label1:
        $r7 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        $r8 = (java.security.spec.ECGenParameterSpec) $r7;

        virtualinvoke r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r8, r1);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.security.InvalidParameterException;

        specialinvoke $r10.<java.security.InvalidParameterException: void <init>(java.lang.String)>("key size not configurable.");

        throw $r10;

     label4:
        $r6 = new java.security.InvalidParameterException;

        specialinvoke $r6.<java.security.InvalidParameterException: void <init>(java.lang.String)>("unknown key size.");

        throw $r6;

     label5:
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        byte[] $r33;
        java.security.SecureRandom r12;
        java.math.BigInteger $r11, $r31, $r32, $r45, $r46, $r53, $r68, $r69, $r78, $r79;
        org.bouncycastle.asn1.x9.X9ECParameters $r18, $r19, $r21, r64;
        java.lang.StringBuilder $r23, $r24, $r25, $r35, $r36, $r37, $r58, $r59, $r60;
        long $l1, $l3;
        java.security.InvalidAlgorithmParameterException $r1, $r3, $r22, $r34, $r57;
        org.bouncycastle.math.ec.ECPoint $r10, $r30, $r42, $r52, $r67, $r75;
        java.security.spec.ECGenParameterSpec $r15;
        org.bouncycastle.crypto.params.ECKeyGenerationParameters $r7, $r13, $r43, $r47, $r49, $r54, $r76, $r81;
        java.lang.String $r16, $r17, $r26, $r38, $r61;
        org.bouncycastle.crypto.generators.ECKeyPairGenerator $r14, $r48, $r55, $r80;
        java.security.spec.ECParameterSpec r63, $r71;
        java.security.spec.ECPoint $r41, $r74;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC r6;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0, $z1, $z2, $z3;
        org.bouncycastle.asn1.DERObjectIdentifier $r20;
        java.security.spec.EllipticCurve $r39, $r72;
        org.bouncycastle.jce.spec.ECNamedCurveSpec $r28, $r65;
        org.bouncycastle.crypto.params.ECDomainParameters $r8, $r27, $r44, $r50, $r77;
        int $i0, $i2;
        org.bouncycastle.math.ec.ECCurve $r9, $r29, $r40, $r51, $r66, $r73;
        java.lang.IllegalArgumentException $r56;
        org.bouncycastle.jce.spec.ECParameterSpec $r2, $r4, $r5, r62;
        java.lang.Object $r70;

        r6 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r12 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof org.bouncycastle.jce.spec.ECParameterSpec;

        if $z0 == 0 goto label01;

        r62 = (org.bouncycastle.jce.spec.ECParameterSpec) r0;

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = r0;

        $r49 = new org.bouncycastle.crypto.params.ECKeyGenerationParameters;

        $r50 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r51 = virtualinvoke r62.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r52 = virtualinvoke r62.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r53 = virtualinvoke r62.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        specialinvoke $r50.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>($r51, $r52, $r53);

        specialinvoke $r49.<org.bouncycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.bouncycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>($r50, r12);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param> = $r49;

        $r55 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine>;

        $r54 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param>;

        virtualinvoke $r55.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r54);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 1;

        goto label18;

     label01:
        $z1 = r0 instanceof java.security.spec.ECParameterSpec;

        if $z1 == 0 goto label02;

        r63 = (java.security.spec.ECParameterSpec) r0;

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = r0;

        $r39 = virtualinvoke r63.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r40 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r39);

        $r41 = virtualinvoke r63.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $r42 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r40, $r41, 0);

        $r43 = new org.bouncycastle.crypto.params.ECKeyGenerationParameters;

        $r44 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r45 = virtualinvoke r63.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $i0 = virtualinvoke r63.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l1 = (long) $i0;

        $r46 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        specialinvoke $r44.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r40, $r42, $r45, $r46);

        specialinvoke $r43.<org.bouncycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.bouncycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>($r44, r12);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param> = $r43;

        $r48 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine>;

        $r47 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param>;

        virtualinvoke $r48.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r47);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 1;

        goto label18;

     label02:
        $z2 = r0 instanceof java.security.spec.ECGenParameterSpec;

        if $z2 == 0 goto label15;

        $r15 = (java.security.spec.ECGenParameterSpec) r0;

        $r16 = virtualinvoke $r15.<java.security.spec.ECGenParameterSpec: java.lang.String getName()>();

        $r17 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("ECGOST3410");

        if $z3 == 0 goto label04;

        $r27 = staticinvoke <org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves: org.bouncycastle.crypto.params.ECDomainParameters getByName(java.lang.String)>($r16);

        if $r27 != null goto label03;

        $r34 = new java.security.InvalidAlgorithmParameterException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown curve name: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r38);

        throw $r34;

     label03:
        $r28 = new org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r29 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r30 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r31 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r32 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $r33 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        specialinvoke $r28.<org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r16, $r29, $r30, $r31, $r32, $r33);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = $r28;

        goto label14;

     label04:
        $r18 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>($r16);

        r64 = $r18;

        if $r18 != null goto label13;

        $r19 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>($r16);

        r64 = $r19;

        if $r19 != null goto label05;

        r64 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>($r16);

     label05:
        if r64 != null goto label06;

        r64 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>($r16);

     label06:
        if r64 != null goto label13;

     label07:
        $r20 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r20.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>($r16);

        $r21 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r20);

        r64 = $r21;

        if $r21 != null goto label08;

        r64 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r20);

     label08:
        if r64 != null goto label09;

        r64 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r20);

     label09:
        if r64 != null goto label10;

        r64 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r20);

     label10:
        if r64 != null goto label11;

        $r22 = new java.security.InvalidAlgorithmParameterException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown curve OID: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label11:
        goto label13;

     label12:
        $r56 := @caughtexception;

        $r57 = new java.security.InvalidAlgorithmParameterException;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown curve name: ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r61);

        throw $r57;

     label13:
        $r65 = new org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r66 = virtualinvoke r64.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r67 = virtualinvoke r64.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r68 = virtualinvoke r64.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r69 = virtualinvoke r64.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        specialinvoke $r65.<org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r16, $r66, $r67, $r68, $r69, null);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = $r65;

     label14:
        $r70 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        $r71 = (java.security.spec.ECParameterSpec) $r70;

        $r72 = virtualinvoke $r71.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r73 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r72);

        $r74 = virtualinvoke $r71.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $r75 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r73, $r74, 0);

        $r76 = new org.bouncycastle.crypto.params.ECKeyGenerationParameters;

        $r77 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r78 = virtualinvoke $r71.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $i2 = virtualinvoke $r71.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l3 = (long) $i2;

        $r79 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        specialinvoke $r77.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r73, $r75, $r78, $r79);

        specialinvoke $r76.<org.bouncycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.bouncycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>($r77, r12);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param> = $r76;

        $r80 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine>;

        $r81 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param>;

        virtualinvoke $r80.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r81);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 1;

        goto label18;

     label15:
        if r0 != null goto label16;

        $r4 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        if $r4 == null goto label16;

        $r5 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams> = r0;

        $r7 = new org.bouncycastle.crypto.params.ECKeyGenerationParameters;

        $r8 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r9 = virtualinvoke $r5.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r10 = virtualinvoke $r5.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r5.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        specialinvoke $r8.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>($r9, $r10, $r11);

        specialinvoke $r7.<org.bouncycastle.crypto.params.ECKeyGenerationParameters: void <init>(org.bouncycastle.crypto.params.ECDomainParameters,java.security.SecureRandom)>($r8, r12);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param> = $r7;

        $r14 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine>;

        $r13 = r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.params.ECKeyGenerationParameters param>;

        virtualinvoke $r14.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r13);

        r6.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised> = 1;

        goto label18;

     label16:
        if r0 != null goto label17;

        $r2 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        if $r2 != null goto label17;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("null parameter passed but no implicitCA set");

        throw $r3;

     label17:
        $r1 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r1.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a ECParameterSpec");

        throw $r1;

     label18:
        return;

        catch java.lang.IllegalArgumentException from label07 to label11 with label12;
    }

    public java.security.KeyPair generateKeyPair()
    {
        java.security.KeyPair $r12, $r15, $r23;
        java.lang.IllegalStateException $r26;
        org.bouncycastle.crypto.params.ECPublicKeyParameters r4;
        org.bouncycastle.crypto.params.ECPrivateKeyParameters r6;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r2;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC r0;
        java.lang.String $r11, $r14, $r17, $r19, $r22, $r25;
        boolean $z0, $z1;
        org.bouncycastle.crypto.CipherParameters $r3, $r5;
        org.bouncycastle.crypto.generators.ECKeyPairGenerator $r1;
        org.bouncycastle.jce.provider.JCEECPublicKey $r10, $r16, $r21;
        java.security.spec.ECParameterSpec r28;
        java.lang.Object $r7, $r8, $r9, $r20;
        org.bouncycastle.jce.spec.ECParameterSpec r27;
        org.bouncycastle.jce.provider.JCEECPrivateKey $r13, $r18, $r24;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC;

        $z0 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: boolean initialised>;

        if $z0 != 0 goto label1;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("EC Key Pair Generator not initialised");

        throw $r26;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: org.bouncycastle.crypto.generators.ECKeyPairGenerator engine>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.generators.ECKeyPairGenerator: org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPublic()>();

        r4 = (org.bouncycastle.crypto.params.ECPublicKeyParameters) $r3;

        $r5 = virtualinvoke $r2.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPrivate()>();

        r6 = (org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r5;

        $r7 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        $z1 = $r7 instanceof org.bouncycastle.jce.spec.ECParameterSpec;

        if $z1 == 0 goto label2;

        $r20 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        r27 = (org.bouncycastle.jce.spec.ECParameterSpec) $r20;

        $r21 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r22 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r21.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,org.bouncycastle.jce.spec.ECParameterSpec)>($r22, r4, r27);

        $r23 = new java.security.KeyPair;

        $r24 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r25 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r24.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>($r25, r6, $r21, r27);

        specialinvoke $r23.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r21, $r24);

        return $r23;

     label2:
        $r8 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        if $r8 != null goto label3;

        $r15 = new java.security.KeyPair;

        $r16 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r17 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r16.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters)>($r17, r4);

        $r18 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r19 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r18.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters)>($r19, r6);

        specialinvoke $r15.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r16, $r18);

        return $r15;

     label3:
        $r9 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.Object ecParams>;

        r28 = (java.security.spec.ECParameterSpec) $r9;

        $r10 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r11 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r10.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,java.security.spec.ECParameterSpec)>($r11, r4, r28);

        $r12 = new java.security.KeyPair;

        $r13 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r14 = r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.lang.String algorithm>;

        specialinvoke $r13.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,java.security.spec.ECParameterSpec)>($r14, r6, $r10, r28);

        specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r13);

        return $r12;
    }

    static void <clinit>()
    {
        java.lang.Integer $r1, $r4, $r7, $r10, $r13, $r16;
        java.security.spec.ECGenParameterSpec $r3, $r6, $r9, $r12, $r15, $r18;
        java.util.Hashtable $r0, $r2, $r5, $r8, $r11, $r14, $r17;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters> = $r0;

        $r2 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(192);

        $r3 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r3.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("prime192v1");

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        $r5 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(239);

        $r6 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r6.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("prime239v1");

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $r8 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(256);

        $r9 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r9.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("prime256v1");

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r11 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(224);

        $r12 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r12.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("P-224");

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r14 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(384);

        $r15 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r15.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("P-384");

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

        $r17 = <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.util.Hashtable ecParameters>;

        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(521);

        $r18 = new java.security.spec.ECGenParameterSpec;

        specialinvoke $r18.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>("P-521");

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r18);

        return;
    }
}
