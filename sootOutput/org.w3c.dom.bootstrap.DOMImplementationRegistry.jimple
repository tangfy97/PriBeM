public final class org.w3c.dom.bootstrap.DOMImplementationRegistry extends java.lang.Object
{
    public static final java.lang.String PROPERTY;
    private static final int DEFAULT_LINE_LENGTH;
    private static final java.lang.String DEFAULT_DOM_IMPLEMENTATION_SOURCE;
    private java.util.Vector sources;
    static java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry;

    private void <init>(java.util.Vector)
    {
        java.util.Vector r1;
        org.w3c.dom.bootstrap.DOMImplementationRegistry r0;

        r0 := @this: org.w3c.dom.bootstrap.DOMImplementationRegistry;

        r1 := @parameter0: java.util.Vector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources> = r1;

        return;
    }

    public static org.w3c.dom.bootstrap.DOMImplementationRegistry newInstance() throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassCastException
    {
        org.w3c.dom.DOMImplementationSource $r7;
        org.w3c.dom.bootstrap.DOMImplementationRegistry $r3;
        java.util.Vector $r0;
        java.util.StringTokenizer $r4;
        int $i0;
        java.lang.Object $r6;
        java.lang.Class r9;
        java.lang.ClassLoader $r1;
        java.lang.String $r2, $r5, r8;
        boolean $z0;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.String getSystemProperty(java.lang.String)>("org.w3c.dom.DOMImplementationSourceList");

        r8 = $r2;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        r8 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.String getServiceValue(java.lang.ClassLoader)>($r1);

     label2:
        if r8 != null goto label3;

        r8 = "org.apache.xerces.dom.DOMXSImplementationSourceImpl";

     label3:
        if r8 == null goto label8;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>(r8);

        goto label7;

     label4:
        $r5 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if $r1 == null goto label5;

        r9 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r5);

        goto label6;

     label5:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

     label6:
        $r6 = virtualinvoke r9.<java.lang.Class: java.lang.Object newInstance()>();

        $r7 = (org.w3c.dom.DOMImplementationSource) $r6;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r7);

     label7:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label4;

     label8:
        $r3 = new org.w3c.dom.bootstrap.DOMImplementationRegistry;

        specialinvoke $r3.<org.w3c.dom.bootstrap.DOMImplementationRegistry: void <init>(java.util.Vector)>($r0);

        return $r3;
    }

    public org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String)
    {
        org.w3c.dom.DOMImplementationSource r4;
        org.w3c.dom.bootstrap.DOMImplementationRegistry r0;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r5;
        org.w3c.dom.DOMImplementation $r6;

        r0 := @this: org.w3c.dom.bootstrap.DOMImplementationRegistry;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.w3c.dom.DOMImplementationSource) $r3;

        $r6 = interfaceinvoke r4.<org.w3c.dom.DOMImplementationSource: org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String)>(r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

        return null;
    }

    public org.w3c.dom.DOMImplementationList getDOMImplementationList(java.lang.String)
    {
        org.w3c.dom.DOMImplementationSource r5;
        org.w3c.dom.bootstrap.DOMImplementationRegistry r1;
        java.util.Vector $r0, $r2, $r3;
        org.w3c.dom.DOMImplementationList $r7;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4;
        java.lang.String r6;
        org.w3c.dom.DOMImplementation $r8;
        org.w3c.dom.bootstrap.DOMImplementationRegistry$1 $r9;

        r1 := @this: org.w3c.dom.bootstrap.DOMImplementationRegistry;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i2 = 0;

        goto label4;

     label1:
        $r3 = r1.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r5 = (org.w3c.dom.DOMImplementationSource) $r4;

        $r7 = interfaceinvoke r5.<org.w3c.dom.DOMImplementationSource: org.w3c.dom.DOMImplementationList getDOMImplementationList(java.lang.String)>(r6);

        i3 = 0;

        goto label3;

     label2:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.DOMImplementationList: org.w3c.dom.DOMImplementation item(int)>(i3);

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        i3 = i3 + 1;

     label3:
        $i1 = interfaceinvoke $r7.<org.w3c.dom.DOMImplementationList: int getLength()>();

        if i3 < $i1 goto label2;

        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        $r9 = new org.w3c.dom.bootstrap.DOMImplementationRegistry$1;

        specialinvoke $r9.<org.w3c.dom.bootstrap.DOMImplementationRegistry$1: void <init>(org.w3c.dom.bootstrap.DOMImplementationRegistry,java.util.Vector)>(r1, $r0);

        return $r9;
    }

    public void addSource(org.w3c.dom.DOMImplementationSource)
    {
        org.w3c.dom.DOMImplementationSource r0;
        java.util.Vector $r2, $r3;
        org.w3c.dom.bootstrap.DOMImplementationRegistry r1;
        java.lang.NullPointerException $r4;
        boolean $z0;

        r1 := @this: org.w3c.dom.bootstrap.DOMImplementationRegistry;

        r0 := @parameter0: org.w3c.dom.DOMImplementationSource;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r3 = r1.<org.w3c.dom.bootstrap.DOMImplementationRegistry: java.util.Vector sources>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r0);

     label2:
        return;
    }

    private static java.lang.ClassLoader getClassLoader()
    {
        java.lang.Exception $r3;
        java.lang.Class $r1, $r4, $r6, $r7;
        java.lang.ClassLoader $r0, $r2, $r5;

     label1:
        $r0 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.ClassLoader getContextClassLoader()>();

        if $r0 == null goto label2;

        return $r0;

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry>;

        if $r4 != null goto label4;

        $r6 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$(java.lang.String)>("org.w3c.dom.bootstrap.DOMImplementationRegistry");

        <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry> = $r6;

        goto label5;

     label4:
        $r6 = <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry>;

     label5:
        $r5 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r5;

     label6:
        $r1 = <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry>;

        if $r1 != null goto label7;

        $r7 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$(java.lang.String)>("org.w3c.dom.bootstrap.DOMImplementationRegistry");

        <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry> = $r7;

        goto label8;

     label7:
        $r7 = <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$w3c$dom$bootstrap$DOMImplementationRegistry>;

     label8:
        $r2 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String getServiceValue(java.lang.ClassLoader)
    {
        java.lang.Throwable $r6;
        java.io.InputStreamReader $r3, $r9;
        java.lang.Exception $r5;
        int $i0;
        java.lang.ClassLoader r0;
        java.io.BufferedReader $r2, $r8, r10;
        java.lang.String $r4;
        java.io.UnsupportedEncodingException $r7;
        java.io.InputStream $r1;

        r0 := @parameter0: java.lang.ClassLoader;

     label01:
        $r1 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r0, "META-INF/services/org.w3c.dom.DOMImplementationSourceList");

        if $r1 == null goto label10;

     label02:
        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r1, "UTF-8");

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 80);

        r10 = $r2;

     label03:
        goto label05;

     label04:
        $r7 := @caughtexception;

        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 80);

        r10 = $r8;

     label05:
        $r4 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label13;

     label06:
        goto label09;

     label07:
        $r6 := @caughtexception;

        goto label14;

     label08:
        throw $r6;

     label09:
        if $r4 == null goto label10;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

        return $r4;

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

        return null;

     label12:
        return null;

     label13:
        virtualinvoke r10.<java.io.BufferedReader: void close()>();

        goto label06;

     label14:
        virtualinvoke r10.<java.io.BufferedReader: void close()>();

        goto label08;

     label15:
        nop;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label07 with label07;
        catch java.lang.Exception from label01 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label11;
        catch java.lang.Exception from label14 to label15 with label11;
    }

    private static boolean isJRE11()
    {
        java.lang.Exception $r0;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.security.AccessController");

        return 0;

     label2:
        $r0 := @caughtexception;

        return 1;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    private static java.lang.ClassLoader getContextClassLoader()
    {
        java.lang.Object $r1;
        java.lang.ClassLoader $r2;
        org.w3c.dom.bootstrap.DOMImplementationRegistry$2 $r0;
        boolean $z0;

        $z0 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: boolean isJRE11()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r0 = new org.w3c.dom.bootstrap.DOMImplementationRegistry$2;

        specialinvoke $r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry$2: void <init>()>();

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r2 = (java.lang.ClassLoader) $r1;

     label2:
        return $r2;
    }

    private static java.lang.String getSystemProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1, $r3;
        org.w3c.dom.bootstrap.DOMImplementationRegistry$3 $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: boolean isJRE11()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r1);

        goto label2;

     label1:
        $r0 = new org.w3c.dom.bootstrap.DOMImplementationRegistry$3;

        specialinvoke $r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry$3: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r3 = (java.lang.String) $r2;

     label2:
        return $r3;
    }

    private static java.io.InputStream getResourceAsStream(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.Object $r3;
        org.w3c.dom.bootstrap.DOMImplementationRegistry$4 $r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        boolean $z0;
        java.io.InputStream $r4, r5;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.w3c.dom.bootstrap.DOMImplementationRegistry: boolean isJRE11()>();

        if $z0 == 0 goto label3;

        if r1 != null goto label1;

        r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r2);

        goto label2;

     label1:
        r5 = virtualinvoke r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r2);

     label2:
        return r5;

     label3:
        $r0 = new org.w3c.dom.bootstrap.DOMImplementationRegistry$4;

        specialinvoke $r0.<org.w3c.dom.bootstrap.DOMImplementationRegistry$4: void <init>(java.lang.ClassLoader,java.lang.String)>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r4 = (java.io.InputStream) $r3;

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.String DEFAULT_DOM_IMPLEMENTATION_SOURCE> = "org.apache.xerces.dom.DOMXSImplementationSourceImpl";

        <org.w3c.dom.bootstrap.DOMImplementationRegistry: int DEFAULT_LINE_LENGTH> = 80;

        <org.w3c.dom.bootstrap.DOMImplementationRegistry: java.lang.String PROPERTY> = "org.w3c.dom.DOMImplementationSourceList";

        return;
    }
}
