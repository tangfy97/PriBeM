class com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList extends com.mycila.inject.internal.guava.collect.ImmutableList
{
    private final transient com.mycila.inject.internal.guava.collect.ImmutableList forwardList;
    private final transient int size;

    void <init>(com.mycila.inject.internal.guava.collect.ImmutableList)
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableList r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableList;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList> = r1;

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ImmutableList: int size()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size> = $i0;

        return;
    }

    private int reverseIndex(int)
    {
        int $i0, i1, $i2, $i3;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i1 := @parameter0: int;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        $i2 = $i0 - 1;

        $i3 = $i2 - i1;

        return $i3;
    }

    private int reversePosition(int)
    {
        int i0, $i1, $i2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        $i1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        $i2 = $i1 - i0;

        return $i2;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableList reverse()
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $z0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collection r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $z0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public int indexOf(java.lang.Object)
    {
        int $i0, $i1, $i3;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $i0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: int lastIndexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $i1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reverseIndex(int)>($i0);

        goto label2;

     label1:
        $i3 = (int) -1;

        $i1 = $i3;

     label2:
        return $i1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        int $i0, $i1, $i3;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $i0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $i1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reverseIndex(int)>($i0);

        goto label2;

     label1:
        $i3 = (int) -1;

        $i1 = $i3;

     label2:
        return $i1;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableList subList(int, int)
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r1, $r2, $r3;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkPositionIndexes(int,int,int)>(i0, i1, $i2);

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $i3 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reversePosition(int)>(i1);

        $i4 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reversePosition(int)>(i0);

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList subList(int,int)>($i3, $i4);

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList reverse()>();

        return $r3;
    }

    public java.lang.Object get(int)
    {
        int i0, $i1, $i2;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        $i1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: int checkElementIndex(int,int)>(i0, $i1);

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $i2 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reverseIndex(int)>(i0);

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: java.lang.Object get(int)>($i2);

        return $r2;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator(int)
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 $r3;
        int i0, $i1, $i2;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        $i1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: int checkPositionIndex(int,int)>(i0, $i1);

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $i2 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reversePosition(int)>(i0);

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator(int)>($i2);

        $r3 = new com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: void <init>(com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList,com.mycila.inject.internal.guava.collect.UnmodifiableListIterator)>(r0, $r2);

        return $r3;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int size>;

        return $i0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $z0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: boolean isEmpty()>();

        return $z0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList forwardList>;

        $z0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: boolean isPartialView()>();

        return $z0;
    }

    public volatile java.util.List subList(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList subList(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.util.ListIterator listIterator(int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator(int)>(i0);

        return $r1;
    }

    public volatile java.util.ListIterator listIterator()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator()>();

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    static int access$000(com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList, int)
    {
        int i0, $i1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r0;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int reverseIndex(int)>(i0);

        return $i1;
    }
}
