class thredds.catalog2.xml.parser.stax.CatalogElementParser extends thredds.catalog2.xml.parser.stax.AbstractElementParser
{
    private final java.lang.String docBaseUriString;
    private final thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory propertyElemParserFactory;
    private final thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory serviceElemParserFactory;
    private final thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory datasetElemParserFactory;
    thredds.catalog2.builder.CatalogBuilder selfBuilder;

    private void <init>(javax.xml.namespace.QName, java.lang.String, javax.xml.stream.XMLEventReader, thredds.catalog2.builder.ThreddsBuilderFactory)
    {
        javax.xml.stream.XMLEventReader r2;
        thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory $r7;
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory $r5;
        thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory $r6;
        thredds.catalog2.builder.ThreddsBuilderFactory r3;
        javax.xml.namespace.QName r1;
        java.lang.String r4;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        r1 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.xml.stream.XMLEventReader;

        r3 := @parameter3: thredds.catalog2.builder.ThreddsBuilderFactory;

        specialinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: void <init>(javax.xml.namespace.QName,javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory)>(r1, r2, r3);

        r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: java.lang.String docBaseUriString> = r4;

        $r5 = new thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory;

        specialinvoke $r5.<thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory: void <init>()>();

        r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory propertyElemParserFactory> = $r5;

        $r6 = new thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory;

        specialinvoke $r6.<thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory: void <init>()>();

        r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory serviceElemParserFactory> = $r6;

        $r7 = new thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory;

        specialinvoke $r7.<thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory: void <init>()>();

        r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory datasetElemParserFactory> = $r7;

        return;
    }

    thredds.catalog2.builder.CatalogBuilder getSelfBuilder()
    {
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        thredds.catalog2.builder.CatalogBuilder $r1;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        $r1 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder selfBuilder>;

        return $r1;
    }

    void parseStartElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r32, $r47, $r62;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r26, $r28, $r30, $r34, $r35, $r36, $r37, $r41, $r43, $r45, $r49, $r50, $r51, $r52, $r56, $r58, $r60;
        javax.xml.namespace.QName $r2, $r5, $r8, $r11;
        java.lang.String r4, r7, r10, $r14, $r20, $r23, $r29, $r31, $r38, $r44, $r46, $r53, $r59, $r61, $r63, $r64, $r65, $r68, r69;
        thredds.catalog2.builder.CatalogBuilder $r16;
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        java.net.URISyntaxException $r17;
        java.net.URI $r13;
        java.text.ParseException $r33, $r48;
        thredds.catalog2.xml.parser.ThreddsXmlParserIssue $r25, $r40, $r55;
        ucar.nc2.units.DateType $r66, r67, $r70;
        javax.xml.stream.events.Attribute $r3, $r6, $r9, $r12;
        javax.xml.stream.events.StartElement $r1;
        javax.xml.stream.XMLEventReader $r24, $r39, $r54;
        org.slf4j.Logger $r27, $r42, $r57;
        thredds.catalog2.builder.ThreddsBuilderFactory $r15;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        $r1 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.events.StartElement getNextEventIfStartElementIsMine()>();

        $r2 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Name>;

        $r3 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)>($r2);

        if $r3 == null goto label01;

        $r63 = interfaceinvoke $r3.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        goto label02;

     label01:
        $r63 = null;

     label02:
        r4 = $r63;

        $r5 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Version>;

        $r6 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)>($r5);

        if $r6 == null goto label03;

        $r64 = interfaceinvoke $r6.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        goto label04;

     label03:
        $r64 = null;

     label04:
        r7 = $r64;

        $r8 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_Expires>;

        $r9 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)>($r8);

        if $r9 == null goto label05;

        $r65 = interfaceinvoke $r9.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        goto label06;

     label05:
        $r65 = null;

     label06:
        r10 = $r65;

     label07:
        if $r65 == null goto label08;

        $r66 = new ucar.nc2.units.DateType;

        specialinvoke $r66.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r65, null, null);

        goto label09;

     label08:
        $r66 = null;

     label09:
        r67 = $r66;

     label10:
        goto label12;

     label11:
        $r48 := @caughtexception;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog expires date [");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r55 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForException(java.lang.String,javax.xml.stream.XMLEventReader,java.lang.Exception)>($r53, $r54, $r48);

        $r57 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: org.slf4j.Logger log>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseStartElement(): ");

        $r59 = virtualinvoke $r55.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r61, $r48);

        $r62 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r62.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r55);

        throw $r62;

     label12:
        $r11 = <thredds.catalog2.xml.names.CatalogElementNames: javax.xml.namespace.QName CatalogElement_LastModified>;

        $r12 = interfaceinvoke $r1.<javax.xml.stream.events.StartElement: javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)>($r11);

        if $r12 == null goto label13;

        $r68 = interfaceinvoke $r12.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        goto label14;

     label13:
        $r68 = null;

     label14:
        r69 = $r68;

     label15:
        if $r68 == null goto label16;

        $r70 = new ucar.nc2.units.DateType;

        specialinvoke $r70.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r68, null, null);

        goto label17;

     label16:
        $r70 = null;

     label17:
        goto label19;

     label18:
        $r33 := @caughtexception;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog lastModified date [");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r40 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForException(java.lang.String,javax.xml.stream.XMLEventReader,java.lang.Exception)>($r38, $r39, $r33);

        $r42 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: org.slf4j.Logger log>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseStartElement(): ");

        $r44 = virtualinvoke $r40.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r46, $r33);

        $r47 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r47.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r40);

        throw $r47;

     label19:
        $r13 = new java.net.URI;

        $r14 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: java.lang.String docBaseUriString>;

        specialinvoke $r13.<java.net.URI: void <init>(java.lang.String)>($r14);

     label20:
        goto label22;

     label21:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad catalog base URI [");

        $r20 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: java.lang.String docBaseUriString>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r25 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForException(java.lang.String,javax.xml.stream.XMLEventReader,java.lang.Exception)>($r23, $r24, $r17);

        $r27 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseStartElement(): ");

        $r29 = virtualinvoke $r25.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r31, $r17);

        $r32 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r32.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r25);

        throw $r32;

     label22:
        $r15 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.ThreddsBuilderFactory builderFactory>;

        $r16 = interfaceinvoke $r15.<thredds.catalog2.builder.ThreddsBuilderFactory: thredds.catalog2.builder.CatalogBuilder newCatalogBuilder(java.lang.String,java.net.URI,java.lang.String,ucar.nc2.units.DateType,ucar.nc2.units.DateType)>(r4, $r13, r7, r67, $r70);

        r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder selfBuilder> = $r16;

        return;

        catch java.text.ParseException from label07 to label10 with label11;
        catch java.text.ParseException from label15 to label17 with label18;
        catch java.net.URISyntaxException from label19 to label20 with label21;
    }

    void handleChildStartElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory $r2, $r19;
        thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory $r3, $r14;
        thredds.catalog2.xml.parser.stax.PropertyElementParser $r15;
        javax.xml.stream.events.StartElement $r1;
        boolean $z0, $z1, $z2;
        thredds.catalog2.xml.parser.stax.ServiceElementParser $r20;
        javax.xml.stream.XMLEventReader $r5, $r8, $r13, $r18;
        thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory $r4, $r9;
        thredds.catalog2.xml.parser.stax.DatasetElementParser $r10;
        thredds.catalog2.builder.ThreddsBuilderFactory $r7, $r12, $r17;
        thredds.catalog2.builder.CatalogBuilder $r6, $r11, $r16;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        $r1 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.events.StartElement peekAtNextEventIfStartElement()>();

        $r2 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory serviceElemParserFactory>;

        $z0 = virtualinvoke $r2.<thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory: boolean isEventMyStartElement(javax.xml.stream.events.XMLEvent)>($r1);

        if $z0 == 0 goto label1;

        $r19 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory serviceElemParserFactory>;

        $r18 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r17 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.ThreddsBuilderFactory builderFactory>;

        $r16 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder selfBuilder>;

        $r20 = virtualinvoke $r19.<thredds.catalog2.xml.parser.stax.ServiceElementParser$Factory: thredds.catalog2.xml.parser.stax.ServiceElementParser getNewParser(javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory,thredds.catalog2.builder.CatalogBuilder)>($r18, $r17, $r16);

        virtualinvoke $r20.<thredds.catalog2.xml.parser.stax.ServiceElementParser: thredds.catalog2.builder.ThreddsBuilder parse()>();

        goto label4;

     label1:
        $r3 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory propertyElemParserFactory>;

        $z1 = virtualinvoke $r3.<thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory: boolean isEventMyStartElement(javax.xml.stream.events.XMLEvent)>($r1);

        if $z1 == 0 goto label2;

        $r14 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory propertyElemParserFactory>;

        $r13 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r12 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.ThreddsBuilderFactory builderFactory>;

        $r11 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder selfBuilder>;

        $r15 = virtualinvoke $r14.<thredds.catalog2.xml.parser.stax.PropertyElementParser$Factory: thredds.catalog2.xml.parser.stax.PropertyElementParser getNewParser(javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory,thredds.catalog2.builder.CatalogBuilder)>($r13, $r12, $r11);

        virtualinvoke $r15.<thredds.catalog2.xml.parser.stax.PropertyElementParser: thredds.catalog2.builder.ThreddsBuilder parse()>();

        goto label4;

     label2:
        $r4 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory datasetElemParserFactory>;

        $z2 = virtualinvoke $r4.<thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory: boolean isEventMyStartElement(javax.xml.stream.events.XMLEvent)>($r1);

        if $z2 == 0 goto label3;

        $r9 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory datasetElemParserFactory>;

        $r8 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        $r7 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.ThreddsBuilderFactory builderFactory>;

        $r6 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder selfBuilder>;

        $r10 = virtualinvoke $r9.<thredds.catalog2.xml.parser.stax.DatasetElementParser$Factory: thredds.catalog2.xml.parser.stax.DatasetElementParser getNewParser(javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory,thredds.catalog2.builder.CatalogBuilder,thredds.catalog2.xml.parser.stax.DatasetNodeElementParserHelper)>($r8, $r7, $r6, null);

        virtualinvoke $r10.<thredds.catalog2.xml.parser.stax.DatasetElementParser: thredds.catalog2.builder.ThreddsBuilder parse()>();

        goto label4;

     label3:
        $r5 = r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: javax.xml.stream.XMLEventReader reader>;

        staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: java.lang.String consumeElementAndConvertToXmlString(javax.xml.stream.XMLEventReader)>($r5);

     label4:
        return;
    }

    void postProcessingAfterEndElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        return;
    }

    volatile thredds.catalog2.builder.ThreddsBuilder getSelfBuilder()
    {
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        thredds.catalog2.builder.CatalogBuilder $r1;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        $r1 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.CatalogBuilder getSelfBuilder()>();

        return $r1;
    }

    void <init>(javax.xml.namespace.QName, java.lang.String, javax.xml.stream.XMLEventReader, thredds.catalog2.builder.ThreddsBuilderFactory, thredds.catalog2.xml.parser.stax.CatalogElementParser$1)
    {
        javax.xml.stream.XMLEventReader r3;
        thredds.catalog2.xml.parser.stax.CatalogElementParser r0;
        thredds.catalog2.builder.ThreddsBuilderFactory r4;
        thredds.catalog2.xml.parser.stax.CatalogElementParser$1 r5;
        javax.xml.namespace.QName r1;
        java.lang.String r2;

        r0 := @this: thredds.catalog2.xml.parser.stax.CatalogElementParser;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.stream.XMLEventReader;

        r4 := @parameter3: thredds.catalog2.builder.ThreddsBuilderFactory;

        r5 := @parameter4: thredds.catalog2.xml.parser.stax.CatalogElementParser$1;

        specialinvoke r0.<thredds.catalog2.xml.parser.stax.CatalogElementParser: void <init>(javax.xml.namespace.QName,java.lang.String,javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory)>(r1, r2, r3, r4);

        return;
    }
}
