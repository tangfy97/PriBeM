final class org.joda.time.chrono.GJChronology$ImpreciseCutoverField extends org.joda.time.chrono.GJChronology$CutoverField
{
    private static final long serialVersionUID;
    private final org.joda.time.chrono.GJChronology this$0;

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long)
    {
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        long l0;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        l0 := @parameter3: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>(r1, r2, r3, null, l0, 0);

        return;
    }

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long)
    {
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DurationField r4;
        org.joda.time.DateTimeField r2, r3;
        long l0;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        r4 := @parameter3: org.joda.time.DurationField;

        l0 := @parameter4: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>(r1, r2, r3, r4, l0, 0);

        return;
    }

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long, boolean)
    {
        org.joda.time.DurationField $r5, r6;
        long l0;
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        boolean z0;
        org.joda.time.chrono.GJChronology$LinkedDurationField $r4;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        r6 := @parameter3: org.joda.time.DurationField;

        l0 := @parameter4: long;

        z0 := @parameter5: boolean;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$CutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)>(r1, r2, r3, l0, z0);

        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0> = r1;

        if r6 != null goto label1;

        $r4 = new org.joda.time.chrono.GJChronology$LinkedDurationField;

        $r5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField>;

        specialinvoke $r4.<org.joda.time.chrono.GJChronology$LinkedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)>($r5, r0);

        r6 = $r4;

     label1:
        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField> = r6;

        return;
    }

    public long add(long, int)
    {
        long $l0, $l3, $l4, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l15, l17, l18;
        org.joda.time.chrono.GJChronology $r2, $r4;
        byte $b1, $b5, $b9, $b12, $b16;
        int i2, $i19, $i20, $i21, $i22, $i23;
        org.joda.time.DateTimeField $r1, $r3;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l17 := @parameter0: long;

        i2 := @parameter1: int;

        $l0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b1 = l17 cmp $l0;

        $i19 = (int) $b1;

        if $i19 < 0 goto label1;

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l10 = virtualinvoke $r3.<org.joda.time.DateTimeField: long add(long,int)>(l17, i2);

        l18 = $l10;

        $l11 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b12 = $l10 cmp $l11;

        $i20 = (int) $b12;

        if $i20 >= 0 goto label2;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l13 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r4);

        $l15 = $l10 + $l13;

        $l14 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b16 = $l15 cmp $l14;

        $i21 = (int) $b16;

        if $i21 >= 0 goto label2;

        l18 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l10);

        goto label2;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l3 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>(l17, i2);

        l18 = $l3;

        $l4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b5 = $l3 cmp $l4;

        $i22 = (int) $b5;

        if $i22 < 0 goto label2;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l6 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l8 = $l3 - $l6;

        $l7 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b9 = $l8 cmp $l7;

        $i23 = (int) $b9;

        if $i23 < 0 goto label2;

        l18 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l3);

     label2:
        return l18;
    }

    public long add(long, long)
    {
        long $l0, l2, $l3, $l4, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l15, l17, l18;
        org.joda.time.chrono.GJChronology $r2, $r4;
        byte $b1, $b5, $b9, $b12, $b16;
        int $i19, $i20, $i21, $i22, $i23;
        org.joda.time.DateTimeField $r1, $r3;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l17 := @parameter0: long;

        l2 := @parameter1: long;

        $l0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b1 = l17 cmp $l0;

        $i19 = (int) $b1;

        if $i19 < 0 goto label1;

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l10 = virtualinvoke $r3.<org.joda.time.DateTimeField: long add(long,long)>(l17, l2);

        l18 = $l10;

        $l11 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b12 = $l10 cmp $l11;

        $i20 = (int) $b12;

        if $i20 >= 0 goto label2;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l13 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r4);

        $l15 = $l10 + $l13;

        $l14 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b16 = $l15 cmp $l14;

        $i21 = (int) $b16;

        if $i21 >= 0 goto label2;

        l18 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l10);

        goto label2;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l3 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,long)>(l17, l2);

        l18 = $l3;

        $l4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b5 = $l3 cmp $l4;

        $i22 = (int) $b5;

        if $i22 < 0 goto label2;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l6 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l8 = $l3 - $l6;

        $l7 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b9 = $l8 cmp $l7;

        $i23 = (int) $b9;

        if $i23 < 0 goto label2;

        l18 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l3);

     label2:
        return l18;
    }

    public int getDifference(long, long)
    {
        long $l0, l2, $l3, $l5, $l8, $l10, l13;
        byte $b1, $b4, $b9;
        int $i6, $i7, $i11, $i12, $i14, $i15, $i16;
        org.joda.time.DateTimeField $r1, $r2, $r3, $r4;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l13 := @parameter0: long;

        l2 := @parameter1: long;

        $l0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b1 = l13 cmp $l0;

        $i14 = (int) $b1;

        if $i14 < 0 goto label2;

        $l8 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b9 = l2 cmp $l8;

        $i15 = (int) $b9;

        if $i15 < 0 goto label1;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i12 = virtualinvoke $r4.<org.joda.time.DateTimeField: int getDifference(long,long)>(l13, l2);

        return $i12;

     label1:
        $l10 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l13);

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i11 = virtualinvoke $r3.<org.joda.time.DateTimeField: int getDifference(long,long)>($l10, l2);

        return $i11;

     label2:
        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l2 cmp $l3;

        $i16 = (int) $b4;

        if $i16 >= 0 goto label3;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i7 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getDifference(long,long)>(l13, l2);

        return $i7;

     label3:
        $l5 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l13);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i6 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>($l5, l2);

        return $i6;
    }

    public long getDifferenceAsLong(long, long)
    {
        long $l0, l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, l13;
        byte $b1, $b4, $b9;
        int $i14, $i15, $i16;
        org.joda.time.DateTimeField $r1, $r2, $r3, $r4;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l13 := @parameter0: long;

        l2 := @parameter1: long;

        $l0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b1 = l13 cmp $l0;

        $i14 = (int) $b1;

        if $i14 < 0 goto label2;

        $l8 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b9 = l2 cmp $l8;

        $i15 = (int) $b9;

        if $i15 < 0 goto label1;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l12 = virtualinvoke $r4.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l13, l2);

        return $l12;

     label1:
        $l10 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l13);

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l11 = virtualinvoke $r3.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l10, l2);

        return $l11;

     label2:
        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l2 cmp $l3;

        $i16 = (int) $b4;

        if $i16 >= 0 goto label3;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l7 = virtualinvoke $r2.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l13, l2);

        return $l7;

     label3:
        $l5 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l13);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l6 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l5, l2);

        return $l6;
    }

    public int getMinimumValue(long)
    {
        long l0, $l1;
        byte $b2;
        int $i3, $i4, $i5;
        org.joda.time.DateTimeField $r1, $r2;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMinimumValue(long)>(l0);

        return $i4;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMinimumValue(long)>(l0);

        return $i3;
    }

    public int getMaximumValue(long)
    {
        long l0, $l1;
        byte $b2;
        int $i3, $i4, $i5;
        org.joda.time.DateTimeField $r1, $r2;
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0);

        return $i4;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0);

        return $i3;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long serialVersionUID> = 3410248757173576441L;

        return;
    }
}
