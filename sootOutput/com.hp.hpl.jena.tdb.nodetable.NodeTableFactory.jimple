public class com.hp.hpl.jena.tdb.nodetable.NodeTableFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableFactory r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.index.IndexBuilder, com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.base.file.Location r0;
        com.hp.hpl.jena.tdb.index.IndexBuilder r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        com.hp.hpl.jena.tdb.base.file.FileSet $r4, $r5, r6, r7;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.tdb.setup.SystemParams $r1;

        r2 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        r0 := @parameter1: com.hp.hpl.jena.tdb.base.file.Location;

        r6 = null;

        if r0 == null goto label1;

        $r5 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r0, "nodes");

        r6 = $r5;

     label1:
        r7 = null;

        if r0 == null goto label2;

        $r4 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r0, "node2id");

        r7 = $r4;

     label2:
        $r1 = staticinvoke <com.hp.hpl.jena.tdb.setup.SystemParams: com.hp.hpl.jena.tdb.setup.SystemParams getStdSystemParams()>();

        $i2 = $r1.<com.hp.hpl.jena.tdb.setup.SystemParams: int Node2NodeIdCacheSize>;

        $i1 = $r1.<com.hp.hpl.jena.tdb.setup.SystemParams: int NodeId2NodeCacheSize>;

        $i0 = $r1.<com.hp.hpl.jena.tdb.setup.SystemParams: int NodeMissCacheSize>;

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableFactory: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int)>(r2, r6, r7, $i2, $i1, $i0);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.index.IndexBuilder, com.hp.hpl.jena.tdb.base.file.FileSet, com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int)
    {
        com.hp.hpl.jena.tdb.index.Index $r5, $r12;
        com.hp.hpl.jena.tdb.index.IndexBuilder r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r8, $r9, $r15, $r16;
        com.hp.hpl.jena.tdb.base.file.FileSet r0, r2, $r10;
        int i0, i1, i2;
        java.lang.String $r1;
        boolean $z0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r6, $r13;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative $r7, $r14;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r4, $r11;

        r3 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        r0 := @parameter1: com.hp.hpl.jena.tdb.base.file.FileSet;

        r2 := @parameter2: com.hp.hpl.jena.tdb.base.file.FileSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>("dat");

        $z0 = virtualinvoke r2.<com.hp.hpl.jena.tdb.base.file.FileSet: boolean isMem()>();

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileSet: com.hp.hpl.jena.tdb.base.file.FileSet mem()>();

        $r11 = <com.hp.hpl.jena.tdb.sys.SystemTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory nodeRecordFactory>;

        $r12 = virtualinvoke r3.<com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.Index newIndex(com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.record.RecordFactory)>($r10, $r11);

        $r13 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileFactory: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile createObjectFileMem(java.lang.String)>($r1);

        $r14 = new com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        specialinvoke $r14.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: void <init>(com.hp.hpl.jena.tdb.index.Index,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>($r12, $r13);

        $r15 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable,int,int,int)>($r14, 100, 100, 100);

        $r16 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableInline: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable)>($r15);

        return $r16;

     label1:
        $r4 = <com.hp.hpl.jena.tdb.sys.SystemTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory nodeRecordFactory>;

        $r5 = virtualinvoke r3.<com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.Index newIndex(com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r2, $r4);

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileFactory: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile createObjectFileDisk(java.lang.String)>($r1);

        $r7 = new com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        specialinvoke $r7.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: void <init>(com.hp.hpl.jena.tdb.index.Index,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>($r5, $r6);

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable,int,int,int)>($r7, i0, i1, i2);

        $r9 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableInline: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable)>($r8);

        return $r9;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable createMem(com.hp.hpl.jena.tdb.index.IndexBuilder)
    {
        com.hp.hpl.jena.tdb.index.IndexBuilder r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        com.hp.hpl.jena.tdb.base.file.FileSet $r1, $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileSet: com.hp.hpl.jena.tdb.base.file.FileSet mem()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileSet: com.hp.hpl.jena.tdb.base.file.FileSet mem()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableFactory: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int)>(r0, $r1, $r2, 100, 100, 10);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable createSink(com.hp.hpl.jena.tdb.index.IndexBuilder, com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.base.file.Location r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableSink $r0;
        com.hp.hpl.jena.tdb.index.IndexBuilder r1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.file.Location;

        $r0 = new com.hp.hpl.jena.tdb.nodetable.NodeTableSink;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableSink: void <init>()>();

        return $r0;
    }
}
