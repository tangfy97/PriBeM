public class facebook4j.FacebookAPIMonitor extends java.lang.Object
{
    private static final facebook4j.internal.logging.Logger logger;
    private static final facebook4j.FacebookAPIMonitor SINGLETON;
    private static final facebook4j.management.APIStatistics STATISTICS;

    private void <init>()
    {
        facebook4j.FacebookAPIMonitor r0;

        r0 := @this: facebook4j.FacebookAPIMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static facebook4j.FacebookAPIMonitor getInstance()
    {
        facebook4j.FacebookAPIMonitor $r0;

        $r0 = <facebook4j.FacebookAPIMonitor: facebook4j.FacebookAPIMonitor SINGLETON>;

        return $r0;
    }

    public facebook4j.management.APIStatisticsMBean getStatistics()
    {
        facebook4j.management.APIStatistics $r0;
        facebook4j.FacebookAPIMonitor r1;

        r1 := @this: facebook4j.FacebookAPIMonitor;

        $r0 = <facebook4j.FacebookAPIMonitor: facebook4j.management.APIStatistics STATISTICS>;

        return $r0;
    }

    void methodCalled(java.lang.String, long, boolean)
    {
        facebook4j.FacebookAPIMonitor r5;
        java.net.MalformedURLException $r4;
        java.net.URL $r0;
        long l0;
        facebook4j.management.APIStatistics $r3;
        java.lang.String r1, $r2;
        boolean z0;

        r5 := @this: facebook4j.FacebookAPIMonitor;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>();

        $r3 = <facebook4j.FacebookAPIMonitor: facebook4j.management.APIStatistics STATISTICS>;

        virtualinvoke $r3.<facebook4j.management.APIStatistics: void methodCalled(java.lang.String,long,boolean)>($r2, l0, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        facebook4j.FacebookAPIMonitor $r1;
        javax.management.InstanceAlreadyExistsException $r16;
        javax.management.MBeanServer $r3;
        javax.management.MBeanRegistrationException $r13;
        java.lang.String $r9, $r12, $r15, $r18;
        javax.management.NotCompliantMBeanException $r10;
        javax.management.ObjectName $r4;
        facebook4j.management.APIStatistics $r2, $r6;
        javax.management.MalformedObjectNameException $r7;
        facebook4j.internal.logging.Logger $r0, $r8, $r11, $r14, $r17;
        facebook4j.management.APIStatisticsOpenMBean $r5;

        $r0 = staticinvoke <facebook4j.internal.logging.Logger: facebook4j.internal.logging.Logger getLogger(java.lang.Class)>(class "Lfacebook4j/FacebookAPIMonitor;");

        <facebook4j.FacebookAPIMonitor: facebook4j.internal.logging.Logger logger> = $r0;

        $r1 = new facebook4j.FacebookAPIMonitor;

        specialinvoke $r1.<facebook4j.FacebookAPIMonitor: void <init>()>();

        <facebook4j.FacebookAPIMonitor: facebook4j.FacebookAPIMonitor SINGLETON> = $r1;

        $r2 = new facebook4j.management.APIStatistics;

        specialinvoke $r2.<facebook4j.management.APIStatistics: void <init>(int)>(100);

        <facebook4j.FacebookAPIMonitor: facebook4j.management.APIStatistics STATISTICS> = $r2;

     label1:
        $r3 = staticinvoke <java.lang.management.ManagementFactory: javax.management.MBeanServer getPlatformMBeanServer()>();

        $r4 = new javax.management.ObjectName;

        specialinvoke $r4.<javax.management.ObjectName: void <init>(java.lang.String)>("facebook4j.mbean:type=APIStatisticsOpenMBean");

        $r5 = new facebook4j.management.APIStatisticsOpenMBean;

        $r6 = <facebook4j.FacebookAPIMonitor: facebook4j.management.APIStatistics STATISTICS>;

        specialinvoke $r5.<facebook4j.management.APIStatisticsOpenMBean: void <init>(facebook4j.management.APIStatistics)>($r6);

        interfaceinvoke $r3.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>($r5, $r4);

     label2:
        goto label7;

     label3:
        $r16 := @caughtexception;

        virtualinvoke $r16.<javax.management.InstanceAlreadyExistsException: void printStackTrace()>();

        $r17 = <facebook4j.FacebookAPIMonitor: facebook4j.internal.logging.Logger logger>;

        $r18 = virtualinvoke $r16.<javax.management.InstanceAlreadyExistsException: java.lang.String getMessage()>();

        virtualinvoke $r17.<facebook4j.internal.logging.Logger: void error(java.lang.String)>($r18);

        goto label7;

     label4:
        $r13 := @caughtexception;

        virtualinvoke $r13.<javax.management.MBeanRegistrationException: void printStackTrace()>();

        $r14 = <facebook4j.FacebookAPIMonitor: facebook4j.internal.logging.Logger logger>;

        $r15 = virtualinvoke $r13.<javax.management.MBeanRegistrationException: java.lang.String getMessage()>();

        virtualinvoke $r14.<facebook4j.internal.logging.Logger: void error(java.lang.String)>($r15);

        goto label7;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r10.<javax.management.NotCompliantMBeanException: void printStackTrace()>();

        $r11 = <facebook4j.FacebookAPIMonitor: facebook4j.internal.logging.Logger logger>;

        $r12 = virtualinvoke $r10.<javax.management.NotCompliantMBeanException: java.lang.String getMessage()>();

        virtualinvoke $r11.<facebook4j.internal.logging.Logger: void error(java.lang.String)>($r12);

        goto label7;

     label6:
        $r7 := @caughtexception;

        virtualinvoke $r7.<javax.management.MalformedObjectNameException: void printStackTrace()>();

        $r8 = <facebook4j.FacebookAPIMonitor: facebook4j.internal.logging.Logger logger>;

        $r9 = virtualinvoke $r7.<javax.management.MalformedObjectNameException: java.lang.String getMessage()>();

        virtualinvoke $r8.<facebook4j.internal.logging.Logger: void error(java.lang.String)>($r9);

     label7:
        return;

        catch javax.management.InstanceAlreadyExistsException from label1 to label2 with label3;
        catch javax.management.MBeanRegistrationException from label1 to label2 with label4;
        catch javax.management.NotCompliantMBeanException from label1 to label2 with label5;
        catch javax.management.MalformedObjectNameException from label1 to label2 with label6;
    }
}
