public class org.apache.batik.util.io.UTF8Decoder extends org.apache.batik.util.io.AbstractCharDecoder
{
    protected static final byte[] UTF8_BYTES;
    protected int nextChar;

    public void <init>(java.io.InputStream)
    {
        int $i1;
        org.apache.batik.util.io.UTF8Decoder r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.batik.util.io.UTF8Decoder;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void <init>(java.io.InputStream)>(r1);

        $i1 = (int) -1;

        r0.<org.apache.batik.util.io.UTF8Decoder: int nextChar> = $i1;

        return;
    }

    public int readChar() throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.batik.util.io.UTF8Decoder r0;
        byte $b6, $b7, $b26, $b27, $b28, $b41, $b42, $b50, $b51, $b57, $b60, $b64, $b67, $b70;
        short $s23, $s24, $s25, $s39, $s40, $s46, s54, $s55, $s62, $s86, $s98, $s100, $s111, $s113, $s115;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i43, $i44, $i45, $i47, $i48, $i49, $i52, i53, $i56, $i58, $i59, $i61, $i63, $i65, $i66, $i68, $i69, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i79, $i81, $i83, $i85, $i87, $i88, $i89, $i91, $i92, $i93, $i95, $i97, $i99, $i101, $i102, $i103, $i104, $i106, $i108, $i110, $i112, $i114, $i116, $i117, $i118, $i119, $i120, $i122, $i124;

        r0 := @this: org.apache.batik.util.io.UTF8Decoder;

        $i0 = r0.<org.apache.batik.util.io.UTF8Decoder: int nextChar>;

        $i79 = (int) -1;

        if $i0 == $i79 goto label01;

        i53 = r0.<org.apache.batik.util.io.UTF8Decoder: int nextChar>;

        $i81 = (int) -1;

        r0.<org.apache.batik.util.io.UTF8Decoder: int nextChar> = $i81;

        return i53;

     label01:
        $i2 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i1 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i2 != $i1 goto label02;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label02:
        $i3 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i83 = (int) -1;

        if $i3 != $i83 goto label03;

        $i85 = (int) -1;

        return $i85;

     label03:
        $r1 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i4 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i5;

        $b6 = $r1[$i4];

        $s86 = (short) $b6;

        s54 = $s86 & 255;

        $r2 = <org.apache.batik.util.io.UTF8Decoder: byte[] UTF8_BYTES>;

        $i87 = (int) s54;

        $b7 = $r2[$i87];

        $i88 = (int) $b7;

        tableswitch($i88)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label16;
            default: goto label04;
        };

     label04:
        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void charError(java.lang.String)>("UTF-8");

     label05:
        $i89 = (int) s54;

        return $i89;

     label06:
        $i44 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i43 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i44 != $i43 goto label07;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label07:
        $i45 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i91 = (int) -1;

        if $i45 != $i91 goto label08;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label08:
        $s46 = s54 & 31;

        $i92 = (int) $s46;

        $i49 = $i92 << 6;

        $r8 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i47 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i48 = $i47 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i48;

        $b50 = $r8[$i47];

        $b51 = $b50 & 63;

        $i93 = (int) $b51;

        $i52 = $i49 | $i93;

        return $i52;

     label09:
        $i30 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i29 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i30 != $i29 goto label10;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label10:
        $i31 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i95 = (int) -1;

        if $i31 != $i95 goto label11;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label11:
        $r6 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i32 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i33 = $i32 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i33;

        $b42 = $r6[$i32];

        $i35 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i34 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i35 != $i34 goto label12;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label12:
        $i36 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i97 = (int) -1;

        if $i36 != $i97 goto label13;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label13:
        $r7 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i37 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i38 = $i37 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i38;

        $b41 = $r7[$i37];

        $s98 = (short) $b42;

        $s39 = $s98 & 192;

        $i99 = (int) $s39;

        if $i99 != 128 goto label14;

        $s100 = (short) $b41;

        $s40 = $s100 & 192;

        $i101 = (int) $s40;

        if $i101 == 128 goto label15;

     label14:
        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void charError(java.lang.String)>("UTF-8");

     label15:
        $s55 = s54 & 31;

        $i102 = (int) $s55;

        $i56 = $i102 << 12;

        $b57 = $b42 & 63;

        $i103 = (int) $b57;

        $i58 = $i103 << 6;

        $i59 = $i56 | $i58;

        $b60 = $b41 & 31;

        $i104 = (int) $b60;

        $i61 = $i59 | $i104;

        return $i61;

     label16:
        $i9 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i8 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i9 != $i8 goto label17;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label17:
        $i10 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i106 = (int) -1;

        if $i10 != $i106 goto label18;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label18:
        $r3 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i11 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i12 = $i11 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i12;

        $b28 = $r3[$i11];

        $i14 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i13 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i14 != $i13 goto label19;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label19:
        $i15 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i108 = (int) -1;

        if $i15 != $i108 goto label20;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label20:
        $r4 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i16 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i17 = $i16 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i17;

        $b27 = $r4[$i16];

        $i19 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i18 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i19 != $i18 goto label21;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label21:
        $i20 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i110 = (int) -1;

        if $i20 != $i110 goto label22;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-8");

     label22:
        $r5 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i21 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i22 = $i21 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i22;

        $b26 = $r5[$i21];

        $s111 = (short) $b28;

        $s23 = $s111 & 192;

        $i112 = (int) $s23;

        if $i112 != 128 goto label23;

        $s113 = (short) $b27;

        $s24 = $s113 & 192;

        $i114 = (int) $s24;

        if $i114 != 128 goto label23;

        $s115 = (short) $b26;

        $s25 = $s115 & 192;

        $i116 = (int) $s25;

        if $i116 == 128 goto label24;

     label23:
        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void charError(java.lang.String)>("UTF-8");

     label24:
        $s62 = s54 & 31;

        $i117 = (int) $s62;

        $i63 = $i117 << 18;

        $b64 = $b28 & 63;

        $i118 = (int) $b64;

        $i65 = $i118 << 12;

        $i66 = $i63 | $i65;

        $b67 = $b27 & 31;

        $i119 = (int) $b67;

        $i68 = $i119 << 6;

        $i69 = $i66 | $i68;

        $b70 = $b26 & 31;

        $i120 = (int) $b70;

        $i71 = $i69 | $i120;

        $i72 = $i71 - 65536;

        $i73 = $i72 % 1024;

        $i122 = (int) 56320;

        $i74 = $i73 + $i122;

        r0.<org.apache.batik.util.io.UTF8Decoder: int nextChar> = $i74;

        $i75 = $i71 - 65536;

        $i76 = $i75 / 1024;

        $i124 = (int) 55296;

        $i77 = $i76 + $i124;

        return $i77;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[256];

        $r0[0] = 1;

        $r0[1] = 1;

        $r0[2] = 1;

        $r0[3] = 1;

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 1;

        $r0[8] = 1;

        $r0[9] = 1;

        $r0[10] = 1;

        $r0[11] = 1;

        $r0[12] = 1;

        $r0[13] = 1;

        $r0[14] = 1;

        $r0[15] = 1;

        $r0[16] = 1;

        $r0[17] = 1;

        $r0[18] = 1;

        $r0[19] = 1;

        $r0[20] = 1;

        $r0[21] = 1;

        $r0[22] = 1;

        $r0[23] = 1;

        $r0[24] = 1;

        $r0[25] = 1;

        $r0[26] = 1;

        $r0[27] = 1;

        $r0[28] = 1;

        $r0[29] = 1;

        $r0[30] = 1;

        $r0[31] = 1;

        $r0[32] = 1;

        $r0[33] = 1;

        $r0[34] = 1;

        $r0[35] = 1;

        $r0[36] = 1;

        $r0[37] = 1;

        $r0[38] = 1;

        $r0[39] = 1;

        $r0[40] = 1;

        $r0[41] = 1;

        $r0[42] = 1;

        $r0[43] = 1;

        $r0[44] = 1;

        $r0[45] = 1;

        $r0[46] = 1;

        $r0[47] = 1;

        $r0[48] = 1;

        $r0[49] = 1;

        $r0[50] = 1;

        $r0[51] = 1;

        $r0[52] = 1;

        $r0[53] = 1;

        $r0[54] = 1;

        $r0[55] = 1;

        $r0[56] = 1;

        $r0[57] = 1;

        $r0[58] = 1;

        $r0[59] = 1;

        $r0[60] = 1;

        $r0[61] = 1;

        $r0[62] = 1;

        $r0[63] = 1;

        $r0[64] = 1;

        $r0[65] = 1;

        $r0[66] = 1;

        $r0[67] = 1;

        $r0[68] = 1;

        $r0[69] = 1;

        $r0[70] = 1;

        $r0[71] = 1;

        $r0[72] = 1;

        $r0[73] = 1;

        $r0[74] = 1;

        $r0[75] = 1;

        $r0[76] = 1;

        $r0[77] = 1;

        $r0[78] = 1;

        $r0[79] = 1;

        $r0[80] = 1;

        $r0[81] = 1;

        $r0[82] = 1;

        $r0[83] = 1;

        $r0[84] = 1;

        $r0[85] = 1;

        $r0[86] = 1;

        $r0[87] = 1;

        $r0[88] = 1;

        $r0[89] = 1;

        $r0[90] = 1;

        $r0[91] = 1;

        $r0[92] = 1;

        $r0[93] = 1;

        $r0[94] = 1;

        $r0[95] = 1;

        $r0[96] = 1;

        $r0[97] = 1;

        $r0[98] = 1;

        $r0[99] = 1;

        $r0[100] = 1;

        $r0[101] = 1;

        $r0[102] = 1;

        $r0[103] = 1;

        $r0[104] = 1;

        $r0[105] = 1;

        $r0[106] = 1;

        $r0[107] = 1;

        $r0[108] = 1;

        $r0[109] = 1;

        $r0[110] = 1;

        $r0[111] = 1;

        $r0[112] = 1;

        $r0[113] = 1;

        $r0[114] = 1;

        $r0[115] = 1;

        $r0[116] = 1;

        $r0[117] = 1;

        $r0[118] = 1;

        $r0[119] = 1;

        $r0[120] = 1;

        $r0[121] = 1;

        $r0[122] = 1;

        $r0[123] = 1;

        $r0[124] = 1;

        $r0[125] = 1;

        $r0[126] = 1;

        $r0[127] = 1;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 0;

        $r0[135] = 0;

        $r0[136] = 0;

        $r0[137] = 0;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $r0[142] = 0;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 0;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        $r0[163] = 0;

        $r0[164] = 0;

        $r0[165] = 0;

        $r0[166] = 0;

        $r0[167] = 0;

        $r0[168] = 0;

        $r0[169] = 0;

        $r0[170] = 0;

        $r0[171] = 0;

        $r0[172] = 0;

        $r0[173] = 0;

        $r0[174] = 0;

        $r0[175] = 0;

        $r0[176] = 0;

        $r0[177] = 0;

        $r0[178] = 0;

        $r0[179] = 0;

        $r0[180] = 0;

        $r0[181] = 0;

        $r0[182] = 0;

        $r0[183] = 0;

        $r0[184] = 0;

        $r0[185] = 0;

        $r0[186] = 0;

        $r0[187] = 0;

        $r0[188] = 0;

        $r0[189] = 0;

        $r0[190] = 0;

        $r0[191] = 0;

        $r0[192] = 2;

        $r0[193] = 2;

        $r0[194] = 2;

        $r0[195] = 2;

        $r0[196] = 2;

        $r0[197] = 2;

        $r0[198] = 2;

        $r0[199] = 2;

        $r0[200] = 2;

        $r0[201] = 2;

        $r0[202] = 2;

        $r0[203] = 2;

        $r0[204] = 2;

        $r0[205] = 2;

        $r0[206] = 2;

        $r0[207] = 2;

        $r0[208] = 2;

        $r0[209] = 2;

        $r0[210] = 2;

        $r0[211] = 2;

        $r0[212] = 2;

        $r0[213] = 2;

        $r0[214] = 2;

        $r0[215] = 2;

        $r0[216] = 2;

        $r0[217] = 2;

        $r0[218] = 2;

        $r0[219] = 2;

        $r0[220] = 2;

        $r0[221] = 2;

        $r0[222] = 2;

        $r0[223] = 2;

        $r0[224] = 3;

        $r0[225] = 3;

        $r0[226] = 3;

        $r0[227] = 3;

        $r0[228] = 3;

        $r0[229] = 3;

        $r0[230] = 3;

        $r0[231] = 3;

        $r0[232] = 3;

        $r0[233] = 3;

        $r0[234] = 3;

        $r0[235] = 3;

        $r0[236] = 3;

        $r0[237] = 3;

        $r0[238] = 3;

        $r0[239] = 3;

        $r0[240] = 4;

        $r0[241] = 4;

        $r0[242] = 4;

        $r0[243] = 4;

        $r0[244] = 4;

        $r0[245] = 4;

        $r0[246] = 4;

        $r0[247] = 4;

        $r0[248] = 0;

        $r0[249] = 0;

        $r0[250] = 0;

        $r0[251] = 0;

        $r0[252] = 0;

        $r0[253] = 0;

        $r0[254] = 0;

        $r0[255] = 0;

        <org.apache.batik.util.io.UTF8Decoder: byte[] UTF8_BYTES> = $r0;

        return;
    }
}
