class thredds.catalog2.simpleImpl.PropertyContainer extends java.lang.Object
{
    private org.slf4j.Logger log;
    private java.util.Map propertiesMap;
    private boolean isBuilt;

    void <init>()
    {
        java.lang.Class $r1;
        org.slf4j.Logger $r2;
        thredds.catalog2.simpleImpl.PropertyContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.simpleImpl.PropertyContainer: org.slf4j.Logger log> = $r2;

        r0.<thredds.catalog2.simpleImpl.PropertyContainer: boolean isBuilt> = 0;

        r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap> = null;

        return;
    }

    boolean isEmpty()
    {
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.util.Map $r1, $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    int size()
    {
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.util.Map $r1, $r2;
        int $i0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        return $i0;
    }

    void addProperty(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r15;
        java.util.LinkedHashMap $r14;
        java.util.Map $r1, $r5;
        java.lang.String r3, r4, $r13;
        boolean $z0, $z1;
        thredds.catalog2.simpleImpl.PropertyImpl $r2;
        org.slf4j.Logger $r7, $r9;
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r10, $r11, $r12;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This PropertyContainer has been built.");

        throw $r15;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r1 != null goto label2;

        $r14 = new java.util.LinkedHashMap;

        specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap> = $r14;

     label2:
        $r2 = new thredds.catalog2.simpleImpl.PropertyImpl;

        specialinvoke $r2.<thredds.catalog2.simpleImpl.PropertyImpl: void <init>(java.lang.String,java.lang.String)>(r3, r4);

        $r5 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r2);

        if null == $r6 goto label3;

        $r7 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: org.slf4j.Logger log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addProperty(): reseting property [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

     label3:
        return;
    }

    boolean removeProperty(java.lang.String)
    {
        java.lang.IllegalStateException $r7;
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.lang.IllegalArgumentException $r6;
        java.util.Map $r2, $r3;
        thredds.catalog2.Property r5;
        java.lang.Object $r4;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This PropertyContainer has been built.");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given name may not be null.");

        throw $r6;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r5 = (thredds.catalog2.Property) $r4;

        if r5 != null goto label4;

        return 0;

     label4:
        return 1;
    }

    java.util.List getPropertyNames()
    {
        java.util.List $r5, $r6;
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.util.Map $r1, $r3;
        java.util.Set $r4;
        java.util.ArrayList $r2;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r5;
    }

    boolean containsPropertyName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.PropertyContainer r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r0;

        r1 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r2 != null goto label2;

        return 0;

     label2:
        $r3 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r4 != null goto label3;

        return 0;

     label3:
        return 1;
    }

    java.lang.String getPropertyValue(java.lang.String)
    {
        thredds.catalog2.simpleImpl.PropertyContainer r1;
        java.util.Map $r2, $r3;
        thredds.catalog2.Property r5;
        java.lang.Object $r4;
        java.lang.String r0, $r6;

        r1 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (thredds.catalog2.Property) $r4;

        if r5 != null goto label3;

        return null;

     label3:
        $r6 = interfaceinvoke r5.<thredds.catalog2.Property: java.lang.String getValue()>();

        return $r6;
    }

    java.util.List getProperties()
    {
        java.util.List $r5, $r6;
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        java.util.Map $r1, $r3;
        java.util.Collection $r4;
        java.util.ArrayList $r2;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        $r1 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r5;
    }

    thredds.catalog2.Property getPropertyByName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.PropertyContainer r1;
        java.util.Map $r2, $r3;
        thredds.catalog2.Property $r5;
        java.lang.Object $r4;
        java.lang.String r0;

        r1 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.Map propertiesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (thredds.catalog2.Property) $r4;

        return $r5;
    }

    boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.PropertyContainer r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        $z0 = r0.<thredds.catalog2.simpleImpl.PropertyContainer: boolean isBuilt>;

        return $z0;
    }

    thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.simpleImpl.PropertyContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        return null;
    }

    void build()
    {
        thredds.catalog2.simpleImpl.PropertyContainer r0;

        r0 := @this: thredds.catalog2.simpleImpl.PropertyContainer;

        r0.<thredds.catalog2.simpleImpl.PropertyContainer: boolean isBuilt> = 1;

        return;
    }
}
