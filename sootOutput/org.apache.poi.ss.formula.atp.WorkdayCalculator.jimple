public class org.apache.poi.ss.formula.atp.WorkdayCalculator extends java.lang.Object
{
    public static final org.apache.poi.ss.formula.atp.WorkdayCalculator instance;

    private void <init>()
    {
        org.apache.poi.ss.formula.atp.WorkdayCalculator r0;

        r0 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int calculateWorkdays(double, double, double[])
    {
        double[] r1;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        double d0, d1, $d2, $d3;

        r0 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        $i0 = virtualinvoke r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: int pastDaysOfWeek(double,double,int)>(d0, d1, 7);

        $i1 = virtualinvoke r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: int pastDaysOfWeek(double,double,int)>(d0, d1, 1);

        $i2 = virtualinvoke r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: int calculateNonWeekendHolidays(double,double,double[])>(d0, d1, r1);

        $d2 = d1 - d0;

        $d3 = $d2 + 1.0;

        $i3 = (int) $d3;

        $i4 = $i3 - $i0;

        $i5 = $i4 - $i1;

        $i6 = $i5 - $i2;

        return $i6;
    }

    public java.util.Date calculateWorkdays(double, int, double[])
    {
        java.util.Date $r0, $r2, $r3;
        double[] r5;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r4;
        java.util.Calendar $r1;
        byte b0, $b4;
        int $i1, $i2, i3;
        double d0, $d1, d2;
        boolean $z0;

        r4 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        i3 := @parameter1: int;

        r5 := @parameter2: double[];

        $r0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double)>(d0);

        if i3 >= 0 goto label1;

        $b4 = -1;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        b0 = $b4;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        d2 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Date)>($r2);

     label3:
        if i3 == 0 goto label4;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(6, b0);

        $d1 = (double) b0;

        d2 = d2 + $d1;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(7);

        if $i1 == 7 goto label3;

        $i2 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(7);

        if $i2 == 1 goto label3;

        $z0 = virtualinvoke r4.<org.apache.poi.ss.formula.atp.WorkdayCalculator: boolean isHoliday(double,double[])>(d2, r5);

        if $z0 != 0 goto label3;

        i3 = i3 - b0;

        goto label3;

     label4:
        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;
    }

    protected int pastDaysOfWeek(double, double, int)
    {
        java.util.Date $r1;
        java.util.Calendar $r0;
        byte $b0, $b1, $b2;
        int $i3, i4, $i5, i6, i7, $i8, $i9, $i10, $i11;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r2;

        r2 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i4 := @parameter2: int;

        i6 = 0;

        $b0 = d0 cmpg d1;

        $i9 = (int) $b0;

        if $i9 >= 0 goto label1;

        $d5 = d0;

        goto label2;

     label1:
        $d5 = d1;

     label2:
        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d5);

        i7 = (int) $d2;

        $b1 = d1 cmpl d0;

        $i10 = (int) $b1;

        if $i10 <= 0 goto label3;

        $d6 = d1;

        goto label4;

     label3:
        $d6 = d0;

     label4:
        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d6);

        $i5 = (int) $d3;

     label5:
        if i7 > $i5 goto label7;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $d4 = (double) i7;

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double)>($d4);

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $i3 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(7);

        if $i3 != i4 goto label6;

        i6 = i6 + 1;

     label6:
        i7 = i7 + 1;

        goto label5;

     label7:
        $b2 = d0 cmpg d1;

        $i11 = (int) $b2;

        if $i11 >= 0 goto label8;

        $i8 = i6;

        goto label9;

     label8:
        $i8 = neg i6;

     label9:
        return $i8;
    }

    protected int calculateNonWeekendHolidays(double, double, double[])
    {
        double[] r0;
        byte $b0, $b1, $b2;
        int i3, i4, $i5, $i6, $i7, $i8, $i9;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7;
        boolean $z0, $z1;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r1;

        r1 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: double[];

        i3 = 0;

        $b0 = d0 cmpg d1;

        $i7 = (int) $b0;

        if $i7 >= 0 goto label1;

        $d6 = d0;

        goto label2;

     label1:
        $d6 = d1;

     label2:
        d2 = $d6;

        $b1 = d1 cmpl d0;

        $i8 = (int) $b1;

        if $i8 <= 0 goto label3;

        $d7 = d1;

        goto label4;

     label3:
        $d7 = d0;

     label4:
        d3 = $d7;

        i4 = 0;

     label5:
        $i5 = lengthof r0;

        if i4 >= $i5 goto label7;

        $d4 = r0[i4];

        $z0 = virtualinvoke r1.<org.apache.poi.ss.formula.atp.WorkdayCalculator: boolean isInARange(double,double,double)>(d2, d3, $d4);

        if $z0 == 0 goto label6;

        $d5 = r0[i4];

        $z1 = virtualinvoke r1.<org.apache.poi.ss.formula.atp.WorkdayCalculator: boolean isWeekend(double)>($d5);

        if $z1 != 0 goto label6;

        i3 = i3 + 1;

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        $b2 = d0 cmpg d1;

        $i9 = (int) $b2;

        if $i9 >= 0 goto label8;

        $i6 = i3;

        goto label9;

     label8:
        $i6 = neg i3;

     label9:
        return $i6;
    }

    protected boolean isWeekend(double)
    {
        java.util.Calendar $r0;
        java.util.Date $r1;
        int $i0, $i1;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r2;
        double d0;
        boolean $z0;

        r2 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double)>(d0);

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(7);

        if $i0 == 7 goto label1;

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(7);

        if $i1 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected boolean isHoliday(double, double[])
    {
        double[] r0;
        long $l1, $l2;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r1;
        byte $b3;
        int $i0, i4;
        double $d0, d1;

        r1 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d1 := @parameter0: double;

        r0 := @parameter1: double[];

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $d0 = r0[i4];

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $l2 = staticinvoke <java.lang.Math: long round(double)>(d1);

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected int isNonWorkday(double, double[])
    {
        byte $b0;
        double[] r1;
        org.apache.poi.ss.formula.atp.WorkdayCalculator r0;
        double d0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $z0 = virtualinvoke r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: boolean isWeekend(double)>(d0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: boolean isHoliday(double,double[])>(d0, r1);

        if $z1 == 0 goto label2;

     label1:
        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        return $b0;
    }

    protected boolean isInARange(double, double, double)
    {
        org.apache.poi.ss.formula.atp.WorkdayCalculator r0;
        byte $b0, $b1;
        int $i2, $i3;
        double d0, d1, d2;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.atp.WorkdayCalculator;

        d1 := @parameter0: double;

        d2 := @parameter1: double;

        d0 := @parameter2: double;

        $b0 = d0 cmpl d1;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $b1 = d0 cmpg d2;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.atp.WorkdayCalculator $r0;

        $r0 = new org.apache.poi.ss.formula.atp.WorkdayCalculator;

        specialinvoke $r0.<org.apache.poi.ss.formula.atp.WorkdayCalculator: void <init>()>();

        <org.apache.poi.ss.formula.atp.WorkdayCalculator: org.apache.poi.ss.formula.atp.WorkdayCalculator instance> = $r0;

        return;
    }
}
