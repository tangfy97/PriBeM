public final class org.apache.lucene.util.packed.AppendingLongBuffer$Iterator extends org.apache.lucene.util.packed.AbstractAppendingLongBuffer$Iterator
{
    final org.apache.lucene.util.packed.AppendingLongBuffer this$0;

    private void <init>(org.apache.lucene.util.packed.AppendingLongBuffer)
    {
        org.apache.lucene.util.packed.AppendingLongBuffer$Iterator r0;
        org.apache.lucene.util.packed.AppendingLongBuffer r1;

        r0 := @this: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator;

        r1 := @parameter0: org.apache.lucene.util.packed.AppendingLongBuffer;

        r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0> = r1;

        specialinvoke r0.<org.apache.lucene.util.packed.AbstractAppendingLongBuffer$Iterator: void <init>(org.apache.lucene.util.packed.AbstractAppendingLongBuffer)>(r1);

        return;
    }

    void fillValues()
    {
        long $l4, $l5, $l6, $l11;
        org.apache.lucene.util.packed.AppendingLongBuffer$Iterator r0;
        long[] $r5, $r7, $r10, $r13, $r14, $r16;
        int $i0, $i1, $i2, $i3, $i7, $i8, $i9, $i10, i12, i13;
        org.apache.lucene.util.packed.PackedInts$Reader[] $r3, $r9;
        org.apache.lucene.util.packed.PackedInts$Reader $r4, $r11;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1, $r2, $r6, $r8, $r12, $r15;

        r0 := @this: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator;

        $i1 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: int vOff>;

        $r1 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $i0 = $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: int valuesOff>;

        if $i1 != $i0 goto label1;

        $r15 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $r16 = $r15.<org.apache.lucene.util.packed.AppendingLongBuffer: long[] pending>;

        r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: long[] currentValues> = $r16;

        goto label6;

     label1:
        $r2 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $r3 = $r2.<org.apache.lucene.util.packed.AppendingLongBuffer: org.apache.lucene.util.packed.PackedInts$Reader[] deltas>;

        $i2 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: int vOff>;

        $r4 = $r3[$i2];

        if $r4 != null goto label2;

        $r14 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: long[] currentValues>;

        $r12 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $r13 = $r12.<org.apache.lucene.util.packed.AppendingLongBuffer: long[] minValues>;

        $i10 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: int vOff>;

        $l11 = $r13[$i10];

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r14, $l11);

        goto label6;

     label2:
        i12 = 0;

     label3:
        if i12 >= 1024 goto label4;

        $r8 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $r9 = $r8.<org.apache.lucene.util.packed.AppendingLongBuffer: org.apache.lucene.util.packed.PackedInts$Reader[] deltas>;

        $i7 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: int vOff>;

        $r11 = $r9[$i7];

        $r10 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: long[] currentValues>;

        $i8 = 1024 - i12;

        $i9 = interfaceinvoke $r11.<org.apache.lucene.util.packed.PackedInts$Reader: int get(int,long[],int,int)>(i12, $r10, i12, $i8);

        i12 = i12 + $i9;

        goto label3;

     label4:
        i13 = 0;

     label5:
        if i13 >= 1024 goto label6;

        $r5 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: long[] currentValues>;

        $l5 = $r5[i13];

        $r6 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: org.apache.lucene.util.packed.AppendingLongBuffer this$0>;

        $r7 = $r6.<org.apache.lucene.util.packed.AppendingLongBuffer: long[] minValues>;

        $i3 = r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: int vOff>;

        $l4 = $r7[$i3];

        $l6 = $l5 + $l4;

        $r5[i13] = $l6;

        i13 = i13 + 1;

        goto label5;

     label6:
        return;
    }

    void <init>(org.apache.lucene.util.packed.AppendingLongBuffer, org.apache.lucene.util.packed.AppendingLongBuffer$1)
    {
        org.apache.lucene.util.packed.AppendingLongBuffer$1 r2;
        org.apache.lucene.util.packed.AppendingLongBuffer$Iterator r0;
        org.apache.lucene.util.packed.AppendingLongBuffer r1;

        r0 := @this: org.apache.lucene.util.packed.AppendingLongBuffer$Iterator;

        r1 := @parameter0: org.apache.lucene.util.packed.AppendingLongBuffer;

        r2 := @parameter1: org.apache.lucene.util.packed.AppendingLongBuffer$1;

        specialinvoke r0.<org.apache.lucene.util.packed.AppendingLongBuffer$Iterator: void <init>(org.apache.lucene.util.packed.AppendingLongBuffer)>(r1);

        return;
    }
}
