public class org.dom4j.util.PerThreadSingleton extends java.lang.Object implements org.dom4j.util.SingletonStrategy
{
    private java.lang.String singletonClassName;
    private java.lang.ThreadLocal perThreadCache;

    public void <init>()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = null;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public void reset()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public java.lang.Object instance()
    {
        java.lang.Thread $r4;
        java.lang.String $r6, $r11;
        java.lang.ref.WeakReference r3, $r15;
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1, $r14;
        java.lang.Exception $r9, $r10;
        java.lang.Object $r2, $r8, r13;
        java.lang.Class $r7, $r12;
        java.lang.ClassLoader $r5;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        r13 = null;

        $r1 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.lang.ref.WeakReference) $r2;

        if r3 == null goto label1;

        $r8 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r8 != null goto label8;

     label1:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r6 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r7 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

        r13 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        goto label7;

     label3:
        $r10 := @caughtexception;

     label4:
        $r11 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

        r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>();

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        $r14 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        $r15 = new java.lang.ref.WeakReference;

        specialinvoke $r15.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r13);

        virtualinvoke $r14.<java.lang.ThreadLocal: void set(java.lang.Object)>($r15);

        goto label9;

     label8:
        r13 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

     label9:
        return r13;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setSingletonClassName(java.lang.String)
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = r1;

        return;
    }
}
