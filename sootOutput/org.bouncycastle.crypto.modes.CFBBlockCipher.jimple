public class org.bouncycastle.crypto.modes.CFBBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private byte[] IV;
    private byte[] cfbV;
    private byte[] cfbOutV;
    private int blockSize;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private boolean encrypting;

    public void <init>(org.bouncycastle.crypto.BlockCipher, int)
    {
        byte[] $r2, $r3, $r4;
        org.bouncycastle.crypto.BlockCipher r1;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = null;

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i1 = i0 / 8;

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize> = $i1;

        $i2 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i2];

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV> = $r2;

        $i3 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV> = $r3;

        $i4 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r4 = newarray (byte)[$i4];

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV> = $r4;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        org.bouncycastle.crypto.params.ParametersWithIV r3;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r9;
        org.bouncycastle.crypto.BlockCipher $r2, $r8;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: boolean encrypting> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z1 == 0 goto label5;

        r3 = (org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r4 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $i1 = lengthof $r4;

        $r5 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        if $i1 >= $i0 goto label3;

        $r11 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r10 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i4 = lengthof $r10;

        $i3 = lengthof $r4;

        $i6 = $i4 - $i3;

        $i5 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r11, $i6, $i5);

        i10 = 0;

     label1:
        $r12 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i8 = lengthof $r12;

        $i7 = lengthof $r4;

        $i9 = $i8 - $i7;

        if i10 >= $i9 goto label2;

        $r13 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r13[i10] = 0;

        i10 = i10 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r7 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r6 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i2 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r7, 0, $i2);

     label4:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: void reset()>();

        $r8 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r9);

        goto label6;

     label5:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r1);

     label6:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.BlockCipher $r2;
        org.bouncycastle.crypto.modes.CFBBlockCipher r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r1 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/CFB");

        $i0 = r1.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i1 = $i0 * 8;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int getBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $i0 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return $i0;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: boolean encrypting>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int encryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int decryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label2:
        return $i2;
    }

    public int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        org.bouncycastle.crypto.DataLengthException $r12, $r13;
        byte $b19, $b20, $b21, $b22;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i23, i24;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r13 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r13.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r13;

     label1:
        $i5 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label2;

        $r12 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r12.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r12;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r3 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        i24 = 0;

     label3:
        $i8 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        if i24 >= $i8 goto label4;

        $i23 = i4 + i24;

        $r11 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        $b20 = $r11[i24];

        $i18 = i0 + i24;

        $b19 = r1[$i18];

        $b21 = $b20 ^ $b19;

        $b22 = (byte) $b21;

        r2[$i23] = $b22;

        i24 = i24 + 1;

        goto label3;

     label4:
        $r8 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i12 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $r7 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i10 = lengthof $r6;

        $i9 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i11 = $i10 - $i9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i12, $r7, 0, $i11);

        $r10 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r9 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i14 = lengthof $r9;

        $i13 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i16 = $i14 - $i13;

        $i15 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r10, $i16, $i15);

        $i17 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return $i17;
    }

    public int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        org.bouncycastle.crypto.DataLengthException $r12, $r13;
        byte $b19, $b20, $b21, $b22;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i23, i24;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r13 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r13.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r13;

     label1:
        $i5 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label2;

        $r12 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r12.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r12;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r3 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        $r8 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i11 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $r7 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r6 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i9 = lengthof $r6;

        $i8 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i10 = $i9 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i11, $r7, 0, $i10);

        $r10 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r9 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $i13 = lengthof $r9;

        $i12 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        $i15 = $i13 - $i12;

        $i14 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r10, $i15, $i14);

        i24 = 0;

     label3:
        $i16 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        if i24 >= $i16 goto label4;

        $i23 = i4 + i24;

        $r11 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbOutV>;

        $b20 = $r11[i24];

        $i18 = i0 + i24;

        $b19 = r1[$i18];

        $b21 = $b20 ^ $b19;

        $b22 = (byte) $b21;

        r2[$i23] = $b22;

        i24 = i24 + 1;

        goto label3;

     label4:
        $i17 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: int blockSize>;

        return $i17;
    }

    public void reset()
    {
        byte[] $r1, $r2, $r3;
        org.bouncycastle.crypto.modes.CFBBlockCipher r0;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r4;

        r0 := @this: org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r3 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $r2 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] cfbV>;

        $r1 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $r4 = r0.<org.bouncycastle.crypto.modes.CFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }
}
