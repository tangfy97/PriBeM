class org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS extends java.lang.Object implements java.lang.CharSequence
{
    static final int XMLWHITESPACE_PRESERVE;
    static final int XMLWHITESPACE_TRIM;
    private static int INITIAL_SIZE;
    private char[] _buf;
    private int _start;
    private int _length;
    private int _nonWSStart;
    private int _nonWSEnd;
    private java.lang.String _toStringValue;
    private org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam;
    private final org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location;
    private boolean _hasText;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl r2;
        int $i0;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        char[] $r1;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r3;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        r2 := @parameter0: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int INITIAL_SIZE>;

        $r1 = newarray (char)[$i0];

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf> = $r1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = 0;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = 0;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = 0;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam> = r2;

        $r3 = new org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation;

        specialinvoke $r3.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void <init>()>();

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location> = $r3;

        return;
    }

    void reload(int) throws javax.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        java.lang.String $r3, $r5, $r11, $r13;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        char $c10, $c14, $c19, $c23;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r2, $r4, $r10, $r12, $r14;
        char[] $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: java.lang.String _toStringValue> = null;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void reset()>();

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: boolean _hasText> = 0;

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void fillBuffer()>();

        if i0 != 1 goto label01;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = 0;

        $i26 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i26;

        $z4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: boolean _hasText>;

        if $z4 != 0 goto label13;

        $r10 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r10);

        if $r11 == null goto label13;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = 0;

        $r12 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r12);

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void fillBufferFromString(java.lang.CharSequence)>($r13);

        goto label13;

     label01:
        if i0 != 2 goto label13;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = 0;

     label02:
        $i2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        if $i2 >= $i1 goto label04;

        $r9 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i22 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $c23 = $r9[$i22];

        $i31 = (int) $c23;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i31);

        if $z3 != 0 goto label03;

        goto label04;

     label03:
        $i24 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i25 = $i24 + 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = $i25;

        goto label02;

     label04:
        $i3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i3;

     label05:
        $i27 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i28 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        if $i27 <= $i28 goto label07;

        $r8 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i17 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i18 = $i17 - 1;

        $c19 = $r8[$i18];

        $i32 = (int) $c19;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i32);

        if $z2 != 0 goto label06;

        goto label07;

     label06:
        $i20 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i21 = $i20 - 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i21;

        goto label05;

     label07:
        $i4 = virtualinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int length()>();

        if $i4 != 0 goto label13;

        $r2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r2);

        if $r3 == null goto label13;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r4);

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void fillBufferFromString(java.lang.CharSequence)>($r5);

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = 0;

     label08:
        $i6 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        if $i6 >= $i5 goto label10;

        $r7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i13 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $c14 = $r7[$i13];

        $i33 = (int) $c14;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i33);

        if $z1 != 0 goto label09;

        goto label10;

     label09:
        $i15 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i16 = $i15 + 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = $i16;

        goto label08;

     label10:
        $i7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i7;

     label11:
        $i29 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i30 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        if $i29 <= $i30 goto label13;

        $r6 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i8 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i9 = $i8 - 1;

        $c10 = $r6[$i9];

        $i34 = (int) $c10;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i34);

        if $z0 != 0 goto label12;

        goto label13;

     label12:
        $i11 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i12 = $i11 - 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i12;

        goto label11;

     label13:
        $r14 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$002(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl,java.lang.String)>($r14, null);

        return;
    }

    private void fillBuffer() throws javax.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r5, $r8, $r12, $r15, $r24;
        javax.xml.stream.XMLStreamException $r31;
        boolean $z0;
        javax.xml.namespace.QName $r20;
        java.lang.StringBuffer $r18, $r21, $r22, $r30;
        int $i0, i1, i2, $i4;
        java.lang.String r28;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r1, $r2, $r3, $r4, $r7, $r11, $r14, $r19, $r23, $r26, $r27, $r29;
        javax.xml.stream.Location $r6, $r9, $r13, $r16, $r25;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int getEventType()>();

        if $i0 != 7 goto label01;

        $r27 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        virtualinvoke $r27.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int next()>();

     label01:
        $r2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: boolean isStartElement()>();

        if $z0 == 0 goto label02;

        $r26 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        virtualinvoke $r26.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int next()>();

     label02:
        i1 = 0;

        r28 = null;

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        i2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int getEventType()>();

     label03:
        tableswitch(i2)
        {
            case 1: goto label09;
            case 2: goto label07;
            case 3: goto label05;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label04;
            case 7: goto label05;
            case 8: goto label06;
            case 9: goto label08;
            case 10: goto label05;
            case 11: goto label05;
            case 12: goto label04;
            case 13: goto label05;
            case 14: goto label05;
            case 15: goto label05;
            default: goto label10;
        };

     label04:
        $r12 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r11 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r13 = virtualinvoke $r11.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r12.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r13);

        if i1 != 0 goto label10;

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void addTextToBuffer()>();

        goto label10;

     label05:
        goto label10;

     label06:
        $r8 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r9 = virtualinvoke $r7.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r8.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r9);

        goto label11;

     label07:
        $r15 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r14 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r16 = virtualinvoke $r14.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r15.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r16);

        $i4 = (int) -1;

        i1 = i1 + $i4;

        if i1 >= 0 goto label10;

        goto label11;

     label08:
        $r5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r6 = virtualinvoke $r4.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r6);

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void addEntityToBuffer()>();

        goto label10;

     label09:
        i1 = i1 + 1;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected element \'");

        $r19 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r20 = virtualinvoke $r19.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.namespace.QName getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in text content.");

        r28 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r23 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r25 = virtualinvoke $r23.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r24.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r25);

     label10:
        $r29 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        i2 = virtualinvoke $r29.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int next()>();

        goto label03;

     label11:
        if r28 == null goto label12;

        $r31 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r31.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>(r28);

        throw $r31;

     label12:
        return;
    }

    private void ensureBufferLength(int)
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        $i3 = $i1 + i0;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

        $i4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        $i5 = $i4 + i0;

        r2 = newarray (char)[$i5];

        $i6 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        if $i6 <= 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i7);

     label1:
        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf> = r2;

     label2:
        return;
    }

    private void fillBufferFromString(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0, i2;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r1;
        char[] $r2;
        char $c1;

        r1 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        specialinvoke r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void ensureBufferLength(int)>($i0);

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r2 = r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $r2[i2] = $c1;

        i2 = i2 + 1;

        goto label1;

     label2:
        r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = $i0;

        return;
    }

    private void addTextToBuffer()
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: boolean _hasText> = 1;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int getTextLength()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void ensureBufferLength(int)>($i0);

        $r2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: char[] getTextCharacters()>();

        $r4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $i1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: int getTextStart()>();

        $r5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r5, $i2, $i0);

        $i3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        $i4 = $i3 + $i0;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = $i4;

        return;
    }

    private void addEntityToBuffer()
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String getText()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: void ensureBufferLength(int)>($i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, $r3, $i2);

        $i3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length>;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _length> = $i5;

        return;
    }

    java.lang.CharSequence reloadAtt(int, int) throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r14;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r1, $r3;
        int i0, i1, $i2, $i5, i6, i7, $i8, $i9, $i11;
        java.lang.String $r6, $r10, r12;
        boolean $z0, $z1;
        java.lang.CharSequence $r8;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        char $c3, $c4;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r2, $r5, $r9, $r11, $r13;
        javax.xml.stream.Location $r4;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void reset()>();

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r4);

        $r5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String getAttributeValue(int)>(i0);

        r12 = $r6;

        if $r6 != null goto label01;

        $r9 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r10 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r9);

        if $r10 == null goto label01;

        $r11 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        r12 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r11);

     label01:
        $r13 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$002(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl,java.lang.String)>($r13, null);

        $i5 = virtualinvoke r12.<java.lang.String: int length()>();

        if i1 != 1 goto label02;

        return r12;

     label02:
        if i1 != 2 goto label10;

        i6 = 0;

     label03:
        if i6 >= $i5 goto label05;

        $c4 = virtualinvoke r12.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c4;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i8);

        if $z1 != 0 goto label04;

        goto label05;

     label04:
        i6 = i6 + 1;

        goto label03;

     label05:
        i7 = $i5;

     label06:
        if i7 <= i6 goto label08;

        $i2 = i7 - 1;

        $c3 = virtualinvoke r12.<java.lang.String: char charAt(int)>($i2);

        $i9 = (int) $c3;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i9);

        if $z0 != 0 goto label07;

        goto label08;

     label07:
        $i11 = (int) -1;

        i7 = i7 + $i11;

        goto label06;

     label08:
        if i6 != 0 goto label09;

        if i7 != $i5 goto label09;

        return r12;

     label09:
        $r8 = virtualinvoke r12.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(i6, i7);

        return $r8;

     label10:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unknown style");

        throw $r14;
    }

    java.lang.CharSequence reloadAtt(java.lang.String, java.lang.String, int) throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r16;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r1, $r3;
        boolean $z0, $z1;
        java.lang.CharSequence $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String r5, r6, $r8, $r12, r14;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        char $c8, $c12;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl $r2, $r7, $r11, $r13, $r15;
        javax.xml.stream.Location $r4;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void reset()>();

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        $r2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: javax.xml.stream.Location getLocation()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r4);

        $r7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r5, r6);

        r14 = $r8;

        if $r8 != null goto label01;

        $r11 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        $r12 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r11);

        if $r12 == null goto label01;

        $r13 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        r14 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$000(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl)>($r13);

     label01:
        $r15 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl _xmlSteam>;

        staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.String access$002(org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl,java.lang.String)>($r15, null);

        $i15 = virtualinvoke r14.<java.lang.String: int length()>();

        if i0 != 1 goto label02;

        return r14;

     label02:
        if i0 != 2 goto label10;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = 0;

     label03:
        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        if $i1 >= $i15 goto label05;

        $i11 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $c12 = virtualinvoke r14.<java.lang.String: char charAt(int)>($i11);

        $i18 = (int) $c12;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i18);

        if $z1 != 0 goto label04;

        goto label05;

     label04:
        $i13 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart> = $i14;

        goto label03;

     label05:
        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i15;

     label06:
        $i16 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i17 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        if $i16 <= $i17 goto label08;

        $i6 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i7 = $i6 - 1;

        $c8 = virtualinvoke r14.<java.lang.String: char charAt(int)>($i7);

        $i19 = (int) $c8;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i19);

        if $z0 != 0 goto label07;

        goto label08;

     label07:
        $i9 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd> = $i10;

        goto label06;

     label08:
        $i2 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        if $i2 != 0 goto label09;

        $i5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        if $i5 != $i15 goto label09;

        return r14;

     label09:
        $i4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $r10 = virtualinvoke r14.<java.lang.String: java.lang.CharSequence subSequence(int,int)>($i4, $i3);

        return $r10;

     label10:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unknown style");

        throw $r16;
    }

    javax.xml.stream.Location getLocation()
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r1;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation $r0, $r2;

        r1 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        $r0 = new org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation;

        specialinvoke $r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation _location>;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS$ExtLocation: void set(javax.xml.stream.Location)>($r2);

        return $r0;
    }

    public int length()
    {
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i0 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public char charAt(int)
    {
        java.lang.AssertionError $r10;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        java.lang.String $r8;
        boolean $z0;
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        char $c3;
        char[] $r1;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i6 = $i5 - $i4;

        if i0 >= $i6 goto label1;

        $i11 = (int) -1;

        if $i11 < i0 goto label2;

     label1:
        $r10 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must be >-1 and <");

        $i8 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i7 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i9 = $i8 - $i7;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r10;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r1;
        int i0, $i1, i2, $i3, $i4;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i1 = r1.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i4 = $i1 + i0;

        $i3 = i2 - i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i4, $i3);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS r0;
        int $i0, $i1, $i2, $i3;
        char[] $r3;
        java.lang.String $r1, $r2, $r4, $r5;

        r0 := @this: org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS;

        $r1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: java.lang.String _toStringValue>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: java.lang.String _toStringValue>;

        return $r5;

     label1:
        $r2 = new java.lang.String;

        $r3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: char[] _buf>;

        $i3 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i1 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSEnd>;

        $i0 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int _nonWSStart>;

        $i2 = $i1 - $i0;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i3, $i2);

        r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: java.lang.String _toStringValue> = $r2;

        $r4 = r0.<org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: java.lang.String _toStringValue>;

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int XMLWHITESPACE_TRIM> = 2;

        <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int XMLWHITESPACE_PRESERVE> = 1;

        $r0 = <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.Class class$org$apache$xmlbeans$impl$richParser$XMLStreamReaderExtImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl");

        <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.Class class$org$apache$xmlbeans$impl$richParser$XMLStreamReaderExtImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl: java.lang.Class class$org$apache$xmlbeans$impl$richParser$XMLStreamReaderExtImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: boolean $assertionsDisabled> = $z1;

        <org.apache.xmlbeans.impl.richParser.XMLStreamReaderExtImpl$CharSeqTrimWS: int INITIAL_SIZE> = 100;

        return;
    }
}
