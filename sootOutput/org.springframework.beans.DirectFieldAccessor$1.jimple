final class org.springframework.beans.DirectFieldAccessor$1 extends java.lang.Object implements org.springframework.util.ReflectionUtils$FieldCallback
{
    final org.springframework.beans.DirectFieldAccessor this$0;

    void <init>(org.springframework.beans.DirectFieldAccessor)
    {
        org.springframework.beans.DirectFieldAccessor r1;
        org.springframework.beans.DirectFieldAccessor$1 r0;

        r0 := @this: org.springframework.beans.DirectFieldAccessor$1;

        r1 := @parameter0: org.springframework.beans.DirectFieldAccessor;

        r0.<org.springframework.beans.DirectFieldAccessor$1: org.springframework.beans.DirectFieldAccessor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doWith(java.lang.reflect.Field)
    {
        java.util.Map $r2;
        org.springframework.beans.DirectFieldAccessor $r1;
        java.lang.String $r4;
        java.lang.reflect.Field r3;
        org.springframework.beans.DirectFieldAccessor$1 r0;

        r0 := @this: org.springframework.beans.DirectFieldAccessor$1;

        r3 := @parameter0: java.lang.reflect.Field;

        $r1 = r0.<org.springframework.beans.DirectFieldAccessor$1: org.springframework.beans.DirectFieldAccessor this$0>;

        $r2 = staticinvoke <org.springframework.beans.DirectFieldAccessor: java.util.Map access$0(org.springframework.beans.DirectFieldAccessor)>($r1);

        $r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r3);

        return;
    }
}
