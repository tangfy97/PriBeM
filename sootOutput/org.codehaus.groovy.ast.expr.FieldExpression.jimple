public class org.codehaus.groovy.ast.expr.FieldExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private final org.codehaus.groovy.ast.FieldNode field;

    public void <init>(org.codehaus.groovy.ast.FieldNode)
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.FieldNode r1;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.FieldNode;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field> = r1;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.FieldExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitFieldExpression(org.codehaus.groovy.ast.expr.FieldExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r1;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        return r0;
    }

    public java.lang.String getFieldName()
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        java.lang.String $r2;
        org.codehaus.groovy.ast.FieldNode $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: java.lang.String getName()>();

        return $r2;
    }

    public org.codehaus.groovy.ast.FieldNode getField()
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.FieldNode $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        return $r1;
    }

    public java.lang.String getText()
    {
        org.codehaus.groovy.ast.expr.FieldExpression r2;
        java.lang.StringBuffer $r0, $r1, $r5;
        org.codehaus.groovy.ast.FieldNode $r3;
        java.lang.String $r4, $r6;

        r2 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("this.");

        $r3 = r2.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.ast.FieldNode: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public boolean isDynamicTyped()
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        $z0 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: boolean isDynamicTyped()>();

        return $z0;
    }

    public void setType(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.ClassNode r1;
        org.codehaus.groovy.ast.FieldNode $r2;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void setType(org.codehaus.groovy.ast.ClassNode)>(r1);

        $r2 = r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        virtualinvoke $r2.<org.codehaus.groovy.ast.FieldNode: void setType(org.codehaus.groovy.ast.ClassNode)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.ClassNode getType()
    {
        org.codehaus.groovy.ast.expr.FieldExpression r0;
        org.codehaus.groovy.ast.FieldNode $r1;
        org.codehaus.groovy.ast.ClassNode $r2;

        r0 := @this: org.codehaus.groovy.ast.expr.FieldExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.FieldExpression: org.codehaus.groovy.ast.FieldNode field>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.FieldNode: org.codehaus.groovy.ast.ClassNode getType()>();

        return $r2;
    }
}
