public final class org.apache.cxf.transport.https_jetty.JettySslConnectorFactory extends java.lang.Object implements org.apache.cxf.transport.http_jetty.JettyConnectorFactory
{
    org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters;
    int maxIdleTime;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.cxf.configuration.jsse.TLSServerParameters)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters r1;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        r1 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters> = r1;

        return;
    }

    public void <init>(org.apache.cxf.configuration.jsse.TLSServerParameters, int)
    {
        int i0;
        org.apache.cxf.configuration.jsse.TLSServerParameters r1;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        r1 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: void <init>(org.apache.cxf.configuration.jsse.TLSServerParameters)>(r1);

        r0.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: int maxIdleTime> = i0;

        return;
    }

    public org.eclipse.jetty.server.AbstractConnector createConnector(int)
    {
        int i0;
        org.eclipse.jetty.server.AbstractConnector $r1;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)>(null, i0);

        return $r1;
    }

    public org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String, int)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r3;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector $r0;
        java.lang.AssertionError $r4;
        int i0, $i1, $i2;
        java.lang.String r1;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory r2;
        boolean $z0;

        r2 := @this: org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = <org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r2.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        if $r3 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r0 = new org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        specialinvoke $r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void <init>()>();

        if r1 == null goto label2;

        virtualinvoke $r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setHost(java.lang.String)>(r1);

     label2:
        virtualinvoke $r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setPort(int)>(i0);

        $i1 = r2.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: int maxIdleTime>;

        if $i1 <= 0 goto label3;

        $i2 = r2.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: int maxIdleTime>;

        virtualinvoke $r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setMaxIdleTime(int)>($i2);

     label3:
        specialinvoke r2.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: void decorateCXFJettySslSocketConnector(org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector)>($r0);

        return $r0;
    }

    private void decorateCXFJettySslSocketConnector(org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r2, $r4, $r6, $r8, $r11, $r14, $r16, $r18, $r21;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        org.apache.cxf.configuration.security.ClientAuthentication $r9;
        java.security.SecureRandom $r7;
        org.apache.cxf.configuration.security.FiltersType $r19;
        java.lang.String $r12, $r15, $r22;
        org.apache.cxf.transport.https_jetty.JettySslConnectorFactory r1;
        java.util.List $r17;
        javax.net.ssl.TrustManager[] $r5;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r10, $r13, $r20;
        javax.net.ssl.KeyManager[] $r3;

        r1 := @this: org.apache.cxf.transport.https_jetty.JettySslConnectorFactory;

        r0 := @parameter0: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        $r2 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.configuration.jsse.TLSServerParameters: javax.net.ssl.KeyManager[] getKeyManagers()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setKeyManagers(javax.net.ssl.KeyManager[])>($r3);

        $r4 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.configuration.jsse.TLSServerParameters: javax.net.ssl.TrustManager[] getTrustManagers()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setTrustManagers(javax.net.ssl.TrustManager[])>($r5);

        $r6 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r7 = virtualinvoke $r6.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.security.SecureRandom getSecureRandom()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setSecureRandom(java.security.SecureRandom)>($r7);

        $r8 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r9 = virtualinvoke $r8.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setClientAuthentication(org.apache.cxf.configuration.security.ClientAuthentication)>($r9);

        $r10 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r11 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r12 = virtualinvoke $r11.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.lang.String getSecureSocketProtocol()>();

        interfaceinvoke $r10.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setProtocol(java.lang.String)>($r12);

        $r13 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r14 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r15 = virtualinvoke $r14.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.lang.String getJsseProvider()>();

        interfaceinvoke $r13.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setProvider(java.lang.String)>($r15);

        $r16 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r17 = virtualinvoke $r16.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.util.List getCipherSuites()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setCipherSuites(java.util.List)>($r17);

        $r18 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r19 = virtualinvoke $r18.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()>();

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)>($r19);

        $r20 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r21 = r1.<org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: org.apache.cxf.configuration.jsse.TLSServerParameters tlsServerParameters>;

        $r22 = virtualinvoke $r21.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.lang.String getCertAlias()>();

        interfaceinvoke $r20.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setCertAlias(java.lang.String)>($r22);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/cxf/transport/https_jetty/JettySslConnectorFactory;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.cxf.transport.https_jetty.JettySslConnectorFactory: boolean $assertionsDisabled> = $z1;

        return;
    }
}
