public class org.apache.log4j.xml.XMLLayout extends org.apache.log4j.Layout
{
    private final int DEFAULT_SIZE;
    private final int UPPER_LIMIT;
    private java.lang.StringBuffer buf;
    private boolean locationInfo;
    private boolean properties;

    public void <init>()
    {
        org.apache.log4j.xml.XMLLayout r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        specialinvoke r0.<org.apache.log4j.Layout: void <init>()>();

        r0.<org.apache.log4j.xml.XMLLayout: int UPPER_LIMIT> = 2048;

        r0.<org.apache.log4j.xml.XMLLayout: int DEFAULT_SIZE> = 256;

        r0.<org.apache.log4j.xml.XMLLayout: int DEFAULT_SIZE> = 256;

        r0.<org.apache.log4j.xml.XMLLayout: int UPPER_LIMIT> = 2048;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(256);

        r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf> = $r1;

        r0.<org.apache.log4j.xml.XMLLayout: boolean locationInfo> = 0;

        r0.<org.apache.log4j.xml.XMLLayout: boolean properties> = 0;

        return;
    }

    public void setLocationInfo(boolean)
    {
        org.apache.log4j.xml.XMLLayout r0;
        boolean z0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.xml.XMLLayout: boolean locationInfo> = z0;

        return;
    }

    public boolean getLocationInfo()
    {
        org.apache.log4j.xml.XMLLayout r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        $z0 = r0.<org.apache.log4j.xml.XMLLayout: boolean locationInfo>;

        return $z0;
    }

    public void setProperties(boolean)
    {
        org.apache.log4j.xml.XMLLayout r0;
        boolean z0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.xml.XMLLayout: boolean properties> = z0;

        return;
    }

    public boolean getProperties()
    {
        org.apache.log4j.xml.XMLLayout r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        $z0 = r0.<org.apache.log4j.xml.XMLLayout: boolean properties>;

        return $z0;
    }

    public void activateOptions()
    {
        org.apache.log4j.xml.XMLLayout r0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        return;
    }

    public java.lang.String format(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.Level $r12;
        org.apache.log4j.xml.XMLLayout r0;
        java.util.Set $r26;
        java.lang.Object[] $r28;
        long $l1;
        java.lang.StringBuffer $r1, $r2, $r3, $r5, $r8, $r9, $r10, $r11, $r15, $r16, $r19, $r20, $r21, $r23, $r27, $r29, $r33, $r34, $r36, $r37, $r40, $r42, $r43, $r46, $r47, $r50, $r51, $r54, $r55, $r57, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68;
        java.lang.String $r6, $r7, $r13, $r14, $r17, $r18, $r22, $r24, $r31, $r35, $r38, $r39, $r44, $r45, $r48, $r49, $r52, $r53, $r56, $r60, $r69;
        boolean $z0, $z1;
        org.apache.log4j.spi.LocationInfo $r41;
        java.lang.String[] $r25;
        int $i0, $i2, $i3, $i4, i5, i6;
        org.apache.log4j.spi.LoggingEvent r4;
        java.lang.Object $r30, $r32;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        r4 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int capacity()>();

        if $i0 <= 2048 goto label01;

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>(int)>(256);

        r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf> = $r66;

        goto label02;

     label01:
        $r2 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

     label02:
        $r3 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:event logger=\"");

        $r5 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r6 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.String getLoggerName()>();

        $r7 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" timestamp=\"");

        $r9 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $l1 = r4.<org.apache.log4j.spi.LoggingEvent: long timeStamp>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r10 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" level=\"");

        $r11 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r12 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);

        $r14 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" thread=\"");

        $r16 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r17 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.String getThreadName()>();

        $r18 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r19 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">\r\n");

        $r20 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:message><![CDATA[");

        $r21 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r22 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.String getRenderedMessage()>();

        staticinvoke <org.apache.log4j.helpers.Transform: void appendEscapingCDATA(java.lang.StringBuffer,java.lang.String)>($r21, $r22);

        $r23 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]]></log4j:message>\r\n");

        $r24 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.String getNDC()>();

        if $r24 == null goto label03;

        $r63 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:NDC><![CDATA[");

        $r64 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        staticinvoke <org.apache.log4j.helpers.Transform: void appendEscapingCDATA(java.lang.StringBuffer,java.lang.String)>($r64, $r24);

        $r65 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]]></log4j:NDC>\r\n");

     label03:
        $r25 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        if $r25 == null goto label06;

        $r58 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:throwable><![CDATA[");

        i5 = 0;

     label04:
        $i4 = lengthof $r25;

        if i5 >= $i4 goto label05;

        $r61 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r60 = $r25[i5];

        staticinvoke <org.apache.log4j.helpers.Transform: void appendEscapingCDATA(java.lang.StringBuffer,java.lang.String)>($r61, $r60);

        $r62 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        i5 = i5 + 1;

        goto label04;

     label05:
        $r59 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]]></log4j:throwable>\r\n");

     label06:
        $z0 = r0.<org.apache.log4j.xml.XMLLayout: boolean locationInfo>;

        if $z0 == 0 goto label07;

        $r41 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

        $r42 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:locationInfo class=\"");

        $r43 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r44 = virtualinvoke $r41.<org.apache.log4j.spi.LocationInfo: java.lang.String getClassName()>();

        $r45 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r44);

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r46 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" method=\"");

        $r47 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r48 = virtualinvoke $r41.<org.apache.log4j.spi.LocationInfo: java.lang.String getMethodName()>();

        $r49 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r48);

        virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r50 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" file=\"");

        $r51 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r52 = virtualinvoke $r41.<org.apache.log4j.spi.LocationInfo: java.lang.String getFileName()>();

        $r53 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r52);

        virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r54 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" line=\"");

        $r55 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r56 = virtualinvoke $r41.<org.apache.log4j.spi.LocationInfo: java.lang.String getLineNumber()>();

        virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r57 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"/>\r\n");

     label07:
        $z1 = r0.<org.apache.log4j.xml.XMLLayout: boolean properties>;

        if $z1 == 0 goto label11;

        $r26 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.util.Set getPropertyKeySet()>();

        $i2 = interfaceinvoke $r26.<java.util.Set: int size()>();

        if $i2 <= 0 goto label11;

        $r27 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:properties>\r\n");

        $r28 = interfaceinvoke $r26.<java.util.Set: java.lang.Object[] toArray()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r28);

        i6 = 0;

     label08:
        $i3 = lengthof $r28;

        if i6 >= $i3 goto label10;

        $r30 = $r28[i6];

        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        $r32 = virtualinvoke r4.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMDC(java.lang.String)>($r31);

        if $r32 == null goto label09;

        $r33 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:data name=\"");

        $r34 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r35 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r31);

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r36 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" value=\"");

        $r37 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r32);

        $r39 = staticinvoke <org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>($r38);

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r40 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"/>\r\n");

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        $r29 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</log4j:properties>\r\n");

     label11:
        $r67 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</log4j:event>\r\n\r\n");

        $r68 = r0.<org.apache.log4j.xml.XMLLayout: java.lang.StringBuffer buf>;

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r69;
    }

    public boolean ignoresThrowable()
    {
        org.apache.log4j.xml.XMLLayout r0;

        r0 := @this: org.apache.log4j.xml.XMLLayout;

        return 0;
    }
}
