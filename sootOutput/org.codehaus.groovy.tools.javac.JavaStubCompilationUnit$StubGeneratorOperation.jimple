class org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation extends org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation
{
    private final org.codehaus.groovy.tools.javac.JavaStubGenerator generator;
    private final org.codehaus.groovy.tools.javac.JavaStubCompilationUnit this$0;

    public void <init>(org.codehaus.groovy.tools.javac.JavaStubCompilationUnit, java.io.File)
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r1;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        java.io.File r2;
        java.lang.String $r4, $r5;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation r0;
        org.codehaus.groovy.tools.javac.JavaStubGenerator $r6;
        boolean $z0, z1;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation;

        r1 := @parameter0: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        r2 := @parameter1: java.io.File;

        r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit this$0> = r1;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation: void <init>()>();

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        z1 = 0;

        $r3 = virtualinvoke r1.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: org.codehaus.groovy.control.CompilerConfiguration getConfiguration()>();

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getTargetBytecode()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("1.5");

        if $z0 == 0 goto label1;

        z1 = 1;

     label1:
        $r6 = new org.codehaus.groovy.tools.javac.JavaStubGenerator;

        specialinvoke $r6.<org.codehaus.groovy.tools.javac.JavaStubGenerator: void <init>(java.io.File,boolean,boolean)>(r2, 1, z1);

        r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation: org.codehaus.groovy.tools.javac.JavaStubGenerator generator> = $r6;

        return;
    }

    public void call(org.codehaus.groovy.control.SourceUnit, org.codehaus.groovy.classgen.GeneratorContext, org.codehaus.groovy.ast.ClassNode) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit $r1;
        org.codehaus.groovy.control.SourceUnit r5;
        org.codehaus.groovy.ast.ClassNode r2;
        java.lang.Exception $r4;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation r0;
        org.codehaus.groovy.tools.javac.JavaStubGenerator $r3;
        org.codehaus.groovy.classgen.GeneratorContext r6;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation;

        r5 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        r6 := @parameter1: org.codehaus.groovy.classgen.GeneratorContext;

        r2 := @parameter2: org.codehaus.groovy.ast.ClassNode;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit this$0>;

        $z0 = staticinvoke <org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: boolean access$100(org.codehaus.groovy.tools.javac.JavaStubCompilationUnit)>($r1);

        if $z0 == 0 goto label4;

     label1:
        $r3 = r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation: org.codehaus.groovy.tools.javac.JavaStubGenerator generator>;

        virtualinvoke $r3.<org.codehaus.groovy.tools.javac.JavaStubGenerator: void generateClass(org.codehaus.groovy.ast.ClassNode)>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r5.<org.codehaus.groovy.control.SourceUnit: void addException(java.lang.Exception)>($r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
