public class org.noggit.JSONUtil extends java.lang.Object
{
    public static final char[] TRUE_CHARS;
    public static final char[] FALSE_CHARS;
    public static final char[] NULL_CHARS;
    public static final char[] HEX_CHARS;
    public static final char VALUE_SEPARATOR;
    public static final char NAME_SEPARATOR;
    public static final char OBJECT_START;
    public static final char OBJECT_END;
    public static final char ARRAY_START;
    public static final char ARRAY_END;

    public void <init>()
    {
        org.noggit.JSONUtil r0;

        r0 := @this: org.noggit.JSONUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toJSON(java.lang.Object)
    {
        org.noggit.CharArr $r0;
        java.lang.Object r2;
        org.noggit.JSONWriter $r1;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.noggit.CharArr;

        specialinvoke $r0.<org.noggit.CharArr: void <init>()>();

        $r1 = new org.noggit.JSONWriter;

        specialinvoke $r1.<org.noggit.JSONWriter: void <init>(org.noggit.CharArr)>($r0);

        virtualinvoke $r1.<org.noggit.JSONWriter: void write(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r0.<org.noggit.CharArr: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String toJSON(java.lang.Object, int)
    {
        int i0;
        org.noggit.CharArr $r0;
        java.lang.Object r2;
        org.noggit.JSONWriter $r1;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new org.noggit.CharArr;

        specialinvoke $r0.<org.noggit.CharArr: void <init>()>();

        $r1 = new org.noggit.JSONWriter;

        specialinvoke $r1.<org.noggit.JSONWriter: void <init>(org.noggit.CharArr,int)>($r0, i0);

        virtualinvoke $r1.<org.noggit.JSONWriter: void write(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r0.<org.noggit.CharArr: java.lang.String toString()>();

        return $r3;
    }

    public static void writeNumber(int, org.noggit.CharArr)
    {
        int i0;
        org.noggit.CharArr r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: org.noggit.CharArr;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke r0.<org.noggit.CharArr: void write(java.lang.String)>($r1);

        return;
    }

    public static void writeNumber(long, org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        long l0;
        java.lang.String $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: org.noggit.CharArr;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r0.<org.noggit.CharArr: void write(java.lang.String)>($r1);

        return;
    }

    public static void writeNumber(float, org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        float f0;
        java.lang.String $r1;

        f0 := @parameter0: float;

        r0 := @parameter1: org.noggit.CharArr;

        $r1 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        virtualinvoke r0.<org.noggit.CharArr: void write(java.lang.String)>($r1);

        return;
    }

    public static void writeNumber(double, org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        java.lang.String $r1;
        double d0;

        d0 := @parameter0: double;

        r0 := @parameter1: org.noggit.CharArr;

        $r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        virtualinvoke r0.<org.noggit.CharArr: void write(java.lang.String)>($r1);

        return;
    }

    public static void writeString(org.noggit.CharArr, org.noggit.CharArr)
    {
        int $i0, $i1;
        org.noggit.CharArr r0, r2;
        char[] $r1;

        r0 := @parameter0: org.noggit.CharArr;

        r2 := @parameter1: org.noggit.CharArr;

        $r1 = virtualinvoke r0.<org.noggit.CharArr: char[] getArray()>();

        $i0 = virtualinvoke r0.<org.noggit.CharArr: int getStart()>();

        $i1 = virtualinvoke r0.<org.noggit.CharArr: int getEnd()>();

        staticinvoke <org.noggit.JSONUtil: void writeString(char[],int,int,org.noggit.CharArr)>($r1, $i0, $i1, r2);

        return;
    }

    public static void writeString(char[], int, int, org.noggit.CharArr)
    {
        int i0, i1;
        org.noggit.CharArr r0;
        char[] r1;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.noggit.CharArr;

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(34);

        staticinvoke <org.noggit.JSONUtil: void writeStringPart(char[],int,int,org.noggit.CharArr)>(r1, i0, i1, r0);

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(34);

        return;
    }

    public static void writeString(java.lang.CharSequence, int, int, org.noggit.CharArr)
    {
        java.lang.CharSequence r1;
        int i0, i1;
        org.noggit.CharArr r0;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.noggit.CharArr;

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(34);

        staticinvoke <org.noggit.JSONUtil: void writeStringPart(java.lang.CharSequence,int,int,org.noggit.CharArr)>(r1, i0, i1, r0);

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(34);

        return;
    }

    public static void writeStringPart(char[], int, int, org.noggit.CharArr)
    {
        org.noggit.CharArr r1;
        char c2;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        char[] r0;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.noggit.CharArr;

        i3 = i0;

     label01:
        if i3 >= i1 goto label13;

        c2 = r0[i3];

        $i4 = (int) c2;

        lookupswitch($i4)
        {
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 12: goto label07;
            case 13: goto label03;
            case 34: goto label02;
            case 92: goto label02;
            default: goto label08;
        };

     label02:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(c2);

        goto label12;

     label03:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(114);

        goto label12;

     label04:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(110);

        goto label12;

     label05:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(116);

        goto label12;

     label06:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(98);

        goto label12;

     label07:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(102);

        goto label12;

     label08:
        $i5 = (int) c2;

        if $i5 > 31 goto label09;

        $i6 = (int) c2;

        staticinvoke <org.noggit.JSONUtil: void unicodeEscape(int,org.noggit.CharArr)>($i6, r1);

        goto label12;

     label09:
        $i7 = (int) c2;

        if $i7 == 8232 goto label10;

        $i8 = (int) c2;

        if $i8 != 8233 goto label11;

     label10:
        $i9 = (int) c2;

        staticinvoke <org.noggit.JSONUtil: void unicodeEscape(int,org.noggit.CharArr)>($i9, r1);

        goto label12;

     label11:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(c2);

     label12:
        i3 = i3 + 1;

        goto label01;

     label13:
        return;
    }

    public static void writeStringPart(java.lang.CharSequence, int, int, org.noggit.CharArr)
    {
        java.lang.CharSequence r0;
        org.noggit.CharArr r1;
        char $c2;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.noggit.CharArr;

        i3 = i0;

     label01:
        if i3 >= i1 goto label13;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        $i4 = (int) $c2;

        lookupswitch($i4)
        {
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            case 12: goto label07;
            case 13: goto label03;
            case 34: goto label02;
            case 92: goto label02;
            default: goto label08;
        };

     label02:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>($c2);

        goto label12;

     label03:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(114);

        goto label12;

     label04:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(110);

        goto label12;

     label05:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(116);

        goto label12;

     label06:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(98);

        goto label12;

     label07:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r1.<org.noggit.CharArr: void write(char)>(102);

        goto label12;

     label08:
        $i5 = (int) $c2;

        if $i5 > 31 goto label09;

        $i6 = (int) $c2;

        staticinvoke <org.noggit.JSONUtil: void unicodeEscape(int,org.noggit.CharArr)>($i6, r1);

        goto label12;

     label09:
        $i7 = (int) $c2;

        if $i7 == 8232 goto label10;

        $i8 = (int) $c2;

        if $i8 != 8233 goto label11;

     label10:
        $i9 = (int) $c2;

        staticinvoke <org.noggit.JSONUtil: void unicodeEscape(int,org.noggit.CharArr)>($i9, r1);

        goto label12;

     label11:
        virtualinvoke r1.<org.noggit.CharArr: void write(char)>($c2);

     label12:
        i3 = i3 + 1;

        goto label01;

     label13:
        return;
    }

    public static void unicodeEscape(int, org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        int i0, $i1, $i3, $i4, $i6, $i7, $i9;
        char $c2, $c5, $c8, $c10;
        char[] $r1, $r2, $r3, $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: org.noggit.CharArr;

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(92);

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>(117);

        $r1 = <org.noggit.JSONUtil: char[] HEX_CHARS>;

        $i1 = i0 >>> 12;

        $c2 = $r1[$i1];

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>($c2);

        $r2 = <org.noggit.JSONUtil: char[] HEX_CHARS>;

        $i3 = i0 >>> 8;

        $i4 = $i3 & 15;

        $c5 = $r2[$i4];

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>($c5);

        $r3 = <org.noggit.JSONUtil: char[] HEX_CHARS>;

        $i6 = i0 >>> 4;

        $i7 = $i6 & 15;

        $c8 = $r3[$i7];

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>($c8);

        $r4 = <org.noggit.JSONUtil: char[] HEX_CHARS>;

        $i9 = i0 & 15;

        $c10 = $r4[$i9];

        virtualinvoke r0.<org.noggit.CharArr: void write(char)>($c10);

        return;
    }

    public static void writeNull(org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        char[] $r1;

        r0 := @parameter0: org.noggit.CharArr;

        $r1 = <org.noggit.JSONUtil: char[] NULL_CHARS>;

        virtualinvoke r0.<org.noggit.CharArr: void write(char[])>($r1);

        return;
    }

    public static void writeBoolean(boolean, org.noggit.CharArr)
    {
        org.noggit.CharArr r0;
        char[] $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.noggit.CharArr;

        if z0 == 0 goto label1;

        $r1 = <org.noggit.JSONUtil: char[] TRUE_CHARS>;

        goto label2;

     label1:
        $r1 = <org.noggit.JSONUtil: char[] FALSE_CHARS>;

     label2:
        virtualinvoke r0.<org.noggit.CharArr: void write(char[])>($r1);

        return;
    }

    static void <clinit>()
    {
        char[] $r0, $r1, $r2, $r3;

        <org.noggit.JSONUtil: char ARRAY_END> = 93;

        <org.noggit.JSONUtil: char ARRAY_START> = 91;

        <org.noggit.JSONUtil: char OBJECT_END> = 125;

        <org.noggit.JSONUtil: char OBJECT_START> = 123;

        <org.noggit.JSONUtil: char NAME_SEPARATOR> = 58;

        <org.noggit.JSONUtil: char VALUE_SEPARATOR> = 44;

        $r0 = newarray (char)[4];

        $r0[0] = 116;

        $r0[1] = 114;

        $r0[2] = 117;

        $r0[3] = 101;

        <org.noggit.JSONUtil: char[] TRUE_CHARS> = $r0;

        $r1 = newarray (char)[5];

        $r1[0] = 102;

        $r1[1] = 97;

        $r1[2] = 108;

        $r1[3] = 115;

        $r1[4] = 101;

        <org.noggit.JSONUtil: char[] FALSE_CHARS> = $r1;

        $r2 = newarray (char)[4];

        $r2[0] = 110;

        $r2[1] = 117;

        $r2[2] = 108;

        $r2[3] = 108;

        <org.noggit.JSONUtil: char[] NULL_CHARS> = $r2;

        $r3 = newarray (char)[16];

        $r3[0] = 48;

        $r3[1] = 49;

        $r3[2] = 50;

        $r3[3] = 51;

        $r3[4] = 52;

        $r3[5] = 53;

        $r3[6] = 54;

        $r3[7] = 55;

        $r3[8] = 56;

        $r3[9] = 57;

        $r3[10] = 97;

        $r3[11] = 98;

        $r3[12] = 99;

        $r3[13] = 100;

        $r3[14] = 101;

        $r3[15] = 102;

        <org.noggit.JSONUtil: char[] HEX_CHARS> = $r3;

        return;
    }
}
