class ucar.nc2.ft.point.standard.NestedTable$CoordVarTop extends ucar.nc2.ft.point.standard.CoordVarExtractor
{
    protected ucar.nc2.dataset.VariableDS varTop;
    final ucar.nc2.ft.point.standard.NestedTable this$0;

    void <init>(ucar.nc2.ft.point.standard.NestedTable, ucar.nc2.dataset.VariableDS)
    {
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS r2;
        java.lang.String $r3;
        ucar.nc2.ft.point.standard.NestedTable r1;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        r1 := @parameter0: ucar.nc2.ft.point.standard.NestedTable;

        r2 := @parameter1: ucar.nc2.dataset.VariableDS;

        r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.ft.point.standard.NestedTable this$0> = r1;

        $r3 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        specialinvoke r0.<ucar.nc2.ft.point.standard.CoordVarExtractor: void <init>(java.lang.String,int)>($r3, 0);

        r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop> = r2;

        return;
    }

    public double getCoordValue(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r5;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        r5 := @parameter0: ucar.ma2.StructureData;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: double readScalarDouble()>();

     label2:
        return $d0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getUnitsString()>();

        return $r2;
    }

    public boolean isString()
    {
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.ma2.DataType $r2;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $z0 = virtualinvoke $r2.<ucar.ma2.DataType: boolean isString()>();

        return $z0;
    }

    public boolean isInt()
    {
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.ma2.DataType $r2;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $z0 = virtualinvoke $r2.<ucar.ma2.DataType: boolean isIntegral()>();

        return $z0;
    }

    public long getCoordValueLong(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r5;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        long $l0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String $r4;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        r5 := @parameter0: ucar.ma2.StructureData;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $l0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: long readScalarLong()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getCoordValueString(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r6;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r1;
        java.io.IOException $r3;
        java.lang.String $r2, $r5;
        java.lang.RuntimeException $r4;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        r6 := @parameter0: ucar.ma2.StructureData;

     label1:
        $r1 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String readScalarString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isMissing(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r1;
        ucar.nc2.ft.point.standard.NestedTable$CoordVarTop r0;
        ucar.nc2.dataset.VariableDS $r2;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.standard.NestedTable$CoordVarTop;

        r1 := @parameter0: ucar.ma2.StructureData;

        $z0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: boolean isString()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: double getCoordValue(ucar.ma2.StructureData)>(r1);

        $r2 = r0.<ucar.nc2.ft.point.standard.NestedTable$CoordVarTop: ucar.nc2.dataset.VariableDS varTop>;

        $z1 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: boolean isMissing(double)>($d0);

        return $z1;
    }
}
