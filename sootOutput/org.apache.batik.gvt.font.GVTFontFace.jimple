public class org.apache.batik.gvt.font.GVTFontFace extends java.lang.Object implements org.apache.batik.util.SVGConstants
{
    protected java.lang.String familyName;
    protected float unitsPerEm;
    protected java.lang.String fontWeight;
    protected java.lang.String fontStyle;
    protected java.lang.String fontVariant;
    protected java.lang.String fontStretch;
    protected float slope;
    protected java.lang.String panose1;
    protected float ascent;
    protected float descent;
    protected float strikethroughPosition;
    protected float strikethroughThickness;
    protected float underlinePosition;
    protected float underlineThickness;
    protected float overlinePosition;
    protected float overlineThickness;

    public void <init>(java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, java.lang.String, float, float, float, float, float, float, float, float)
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        java.lang.String r1, r2, r3, r4, r5, r6;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        f1 := @parameter6: float;

        r6 := @parameter7: java.lang.String;

        f2 := @parameter8: float;

        f3 := @parameter9: float;

        f4 := @parameter10: float;

        f5 := @parameter11: float;

        f6 := @parameter12: float;

        f7 := @parameter13: float;

        f8 := @parameter14: float;

        f9 := @parameter15: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String familyName> = r1;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float unitsPerEm> = f0;

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontWeight> = r2;

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontStyle> = r3;

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontVariant> = r4;

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontStretch> = r5;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float slope> = f1;

        r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String panose1> = r6;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float ascent> = f2;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float descent> = f3;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughPosition> = f4;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughThickness> = f5;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float underlinePosition> = f6;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float underlineThickness> = f7;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float overlinePosition> = f8;

        r0.<org.apache.batik.gvt.font.GVTFontFace: float overlineThickness> = f9;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: void <init>(java.lang.String,float,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,java.lang.String,float,float,float,float,float,float,float,float)>(r1, 1000.0F, "all", "all", "normal", "normal", 0.0F, "0 0 0 0 0 0 0 0 0 0", 800.0F, 200.0F, 300.0F, 50.0F, -75.0F, 50.0F, 800.0F, 50.0F);

        return;
    }

    public java.lang.String getFamilyName()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $r1 = r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String familyName>;

        return $r1;
    }

    public boolean hasFamilyName(java.lang.String)
    {
        boolean z0, z1, z2;
        org.apache.batik.gvt.font.GVTFontFace r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, i15, $i16, $i17, $i18, i19, $i21, $i22, $i23, $i25, $i26, $i27;
        java.lang.String r1, $r2, $r3, r4;
        char $c7, $c11, $c13, $c14;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        r1 := @parameter0: java.lang.String;

        r4 = r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String familyName>;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label01;

        return 0;

     label01:
        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r3);

        $i21 = (int) -1;

        if $i2 != $i21 goto label02;

        return 0;

     label02:
        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 <= $i4 goto label22;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        if $i2 <= 0 goto label12;

        $i12 = $i2 - 1;

        $c13 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i12);

        $i22 = (int) $c13;

        lookupswitch($i22)
        {
            case 32: goto label04;
            case 34: goto label11;
            case 39: goto label11;
            case 44: goto label12;
            default: goto label03;
        };

     label03:
        return 0;

     label04:
        i15 = $i2 - 2;

        goto label10;

     label05:
        $c14 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i15);

        $i23 = (int) $c14;

        lookupswitch($i23)
        {
            case 32: goto label07;
            case 34: goto label08;
            case 39: goto label08;
            default: goto label06;
        };

     label06:
        return 0;

     label07:
        goto label09;

     label08:
        z0 = 1;

        z2 = 1;

        z1 = 1;

        goto label12;

     label09:
        $i25 = (int) -1;

        i15 = i15 + $i25;

     label10:
        if i15 >= 0 goto label05;

        goto label12;

     label11:
        z0 = 1;

        z2 = 1;

        z1 = 1;

     label12:
        $i16 = virtualinvoke r1.<java.lang.String: int length()>();

        $i17 = $i2 + $i16;

        $i18 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i17 >= $i18 goto label22;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i2 + $i5;

        $c7 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i6);

        $i26 = (int) $c7;

        lookupswitch($i26)
        {
            case 32: goto label14;
            case 34: goto label21;
            case 39: goto label21;
            case 44: goto label22;
            default: goto label13;
        };

     label13:
        return 0;

     label14:
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        $i9 = $i2 + $i8;

        i19 = $i9 + 1;

        goto label20;

     label15:
        $c11 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i19);

        $i27 = (int) $c11;

        lookupswitch($i27)
        {
            case 32: goto label17;
            case 34: goto label18;
            case 39: goto label18;
            default: goto label16;
        };

     label16:
        return 0;

     label17:
        goto label19;

     label18:
        if z2 != 0 goto label22;

        return 0;

     label19:
        i19 = i19 + 1;

     label20:
        $i10 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i19 < $i10 goto label15;

        goto label22;

     label21:
        if z1 != 0 goto label22;

        return 0;

     label22:
        return 1;
    }

    public java.lang.String getFontWeight()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $r1 = r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontWeight>;

        return $r1;
    }

    public java.lang.String getFontStyle()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $r1 = r0.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String fontStyle>;

        return $r1;
    }

    public float getUnitsPerEm()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float unitsPerEm>;

        return $f0;
    }

    public float getAscent()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float ascent>;

        return $f0;
    }

    public float getDescent()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float descent>;

        return $f0;
    }

    public float getStrikethroughPosition()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughPosition>;

        return $f0;
    }

    public float getStrikethroughThickness()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float strikethroughThickness>;

        return $f0;
    }

    public float getUnderlinePosition()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float underlinePosition>;

        return $f0;
    }

    public float getUnderlineThickness()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float underlineThickness>;

        return $f0;
    }

    public float getOverlinePosition()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float overlinePosition>;

        return $f0;
    }

    public float getOverlineThickness()
    {
        org.apache.batik.gvt.font.GVTFontFace r0;
        float $f0;

        r0 := @this: org.apache.batik.gvt.font.GVTFontFace;

        $f0 = r0.<org.apache.batik.gvt.font.GVTFontFace: float overlineThickness>;

        return $f0;
    }
}
