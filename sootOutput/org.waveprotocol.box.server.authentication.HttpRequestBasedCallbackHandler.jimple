public class org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler extends java.lang.Object implements javax.security.auth.callback.CallbackHandler
{
    public static final java.lang.String ADDRESS_FIELD;
    public static final java.lang.String PASSWORD_FIELD;
    private final org.eclipse.jetty.util.MultiMap parameters;

    public void <init>(org.eclipse.jetty.util.MultiMap)
    {
        org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler r0;
        org.eclipse.jetty.util.MultiMap r1;

        r0 := @this: org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler;

        r1 := @parameter0: org.eclipse.jetty.util.MultiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: org.eclipse.jetty.util.MultiMap parameters> = r1;

        return;
    }

    public void handle(javax.security.auth.callback.Callback[]) throws javax.security.auth.callback.UnsupportedCallbackException
    {
        javax.security.auth.callback.UnsupportedCallbackException $r2;
        javax.security.auth.callback.Callback[] r0;
        int i0, i1;
        java.lang.String $r6, $r12;
        boolean $z0, $z1, $z2, $z3;
        javax.security.auth.callback.PasswordCallback $r7;
        org.eclipse.jetty.util.MultiMap $r4, $r5, $r9, $r10;
        org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler r3;
        javax.security.auth.callback.NameCallback $r11;
        char[] $r8;
        javax.security.auth.callback.Callback r1;

        r3 := @this: org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler;

        r0 := @parameter0: javax.security.auth.callback.Callback[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = r0[i1];

        $z0 = r1 instanceof javax.security.auth.callback.NameCallback;

        if $z0 == 0 goto label2;

        $r9 = r3.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: org.eclipse.jetty.util.MultiMap parameters>;

        $z3 = virtualinvoke $r9.<org.eclipse.jetty.util.MultiMap: boolean containsKey(java.lang.Object)>("address");

        if $z3 == 0 goto label4;

        $r11 = (javax.security.auth.callback.NameCallback) r1;

        $r10 = r3.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: org.eclipse.jetty.util.MultiMap parameters>;

        $r12 = virtualinvoke $r10.<org.eclipse.jetty.util.MultiMap: java.lang.String getString(java.lang.Object)>("address");

        virtualinvoke $r11.<javax.security.auth.callback.NameCallback: void setName(java.lang.String)>($r12);

        goto label4;

     label2:
        $z1 = r1 instanceof javax.security.auth.callback.PasswordCallback;

        if $z1 == 0 goto label3;

        $r4 = r3.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: org.eclipse.jetty.util.MultiMap parameters>;

        $z2 = virtualinvoke $r4.<org.eclipse.jetty.util.MultiMap: boolean containsKey(java.lang.Object)>("password");

        if $z2 == 0 goto label4;

        $r5 = r3.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: org.eclipse.jetty.util.MultiMap parameters>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.util.MultiMap: java.lang.String getString(java.lang.Object)>("password");

        $r7 = (javax.security.auth.callback.PasswordCallback) r1;

        $r8 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r7.<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>($r8);

        goto label4;

     label3:
        $r2 = new javax.security.auth.callback.UnsupportedCallbackException;

        specialinvoke $r2.<javax.security.auth.callback.UnsupportedCallbackException: void <init>(javax.security.auth.callback.Callback)>(r1);

        throw $r2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: java.lang.String PASSWORD_FIELD> = "password";

        <org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: java.lang.String ADDRESS_FIELD> = "address";

        return;
    }
}
