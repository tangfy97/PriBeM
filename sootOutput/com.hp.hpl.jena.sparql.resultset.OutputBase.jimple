public abstract class com.hp.hpl.jena.sparql.resultset.OutputBase extends java.lang.Object implements com.hp.hpl.jena.sparql.resultset.OutputFormatter
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.resultset.OutputBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.OutputBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String asString(com.hp.hpl.jena.query.ResultSet)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r0;
        com.hp.hpl.jena.sparql.resultset.OutputBase r1;
        java.lang.String $r3;
        com.hp.hpl.jena.query.ResultSet r2;
        java.io.UnsupportedEncodingException $r5;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.OutputBase;

        r2 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.OutputBase: void format(java.io.OutputStream,com.hp.hpl.jena.query.ResultSet)>($r0, r2);

     label1:
        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r1, "UnsupportedEncodingException");

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String asString(boolean)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        com.hp.hpl.jena.sparql.resultset.OutputBase r1;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException $r4;
        boolean z0;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.OutputBase;

        z0 := @parameter0: boolean;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.OutputBase: void format(java.io.OutputStream,boolean)>($r0, z0);

     label1:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r1, "UnsupportedEncodingException");

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
