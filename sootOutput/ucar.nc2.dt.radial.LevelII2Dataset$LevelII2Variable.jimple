class ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable extends ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter implements ucar.nc2.dt.RadialDatasetSweep$RadialVariable
{
    int nsweeps;
    int nsweepsHR;
    java.util.ArrayList sweeps;
    java.lang.String name;
    final ucar.nc2.dt.radial.LevelII2Dataset this$0;

    private void <init>(ucar.nc2.dt.radial.LevelII2Dataset, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.VariableSimpleIF, ucar.nc2.Variable)
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        int[] $r17, $r20;
        boolean $z0;
        java.util.List $r5;
        ucar.nc2.VariableSimpleIF r2;
        java.lang.StringBuilder $r13, $r14, $r22;
        ucar.nc2.dt.radial.LevelII2Dataset r1;
        java.util.ArrayList $r10, $r19, $r21;
        int $i0, i1, $i2, $i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, i12, $i13, i14, $i15, i16, $i17, $i18, $i19, $i21, $i23, $i25, $i27;
        ucar.nc2.Variable r4, $r16;
        java.lang.String $r3, $r7, $r11, $r15;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep $r23, $r24;
        ucar.nc2.dataset.NetcdfDataset r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        r1 := @parameter0: ucar.nc2.dt.radial.LevelII2Dataset;

        r8 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter2: ucar.nc2.VariableSimpleIF;

        r4 := @parameter3: ucar.nc2.Variable;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0> = r1;

        $r3 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.util.List getAttributes()>();

        specialinvoke r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: void <init>(ucar.nc2.dt.radial.RadialDatasetSweepAdapter,java.lang.String,java.util.List)>(r1, $r3, $r5);

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR> = 0;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps> = $r21;

        $r7 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.lang.String name> = $r7;

        $z0 = virtualinvoke r1.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>(r8);

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r8.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r15);

        if $r16 == null goto label2;

        $r17 = virtualinvoke $r16.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke $r16.<ucar.nc2.Variable: int getRank()>();

        i4 = $i0 - 1;

        i5 = $r17[i4];

        $i21 = (int) -1;

        i6 = i4 + $i21;

        i1 = $r17[i6];

        $i23 = (int) -1;

        i7 = i6 + $i23;

        $i2 = $r17[i7];

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR> = $i2;

        i8 = 0;

     label1:
        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if i8 >= $i3 goto label2;

        $r19 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $r23 = new ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        specialinvoke $r23.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void <init>(ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable,ucar.nc2.Variable,int,int,int)>(r0, $r16, i8, i1, i5);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r20 = virtualinvoke r4.<ucar.nc2.Variable: int[] getShape()>();

        $i9 = virtualinvoke r4.<ucar.nc2.Variable: int getRank()>();

        $i10 = $i9 - 1;

        $i11 = $r20[$i10];

        $i25 = (int) -1;

        i12 = $i10 + $i25;

        $i13 = $r20[i12];

        $i27 = (int) -1;

        i14 = i12 + $i27;

        $i15 = $r20[i14];

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweeps> = $i15;

        i16 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

     label3:
        $i17 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweeps>;

        $i18 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        $i19 = $i17 + $i18;

        if i16 >= $i19 goto label4;

        $r10 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $r24 = new ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        specialinvoke $r24.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void <init>(ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable,ucar.nc2.Variable,int,int,int)>(r0, r4, i16, $i13, $i11);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        i16 = i16 + 1;

        goto label3;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.lang.String name>;

        return $r1;
    }

    public int getNumSweeps()
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r1, $r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.dataset.NetcdfDataset $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        $r2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r1);

        $z0 = virtualinvoke $r2.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r3);

        if $z0 == 0 goto label1;

        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweeps>;

        $i3 = $i2 + $i1;

        return $i3;

     label1:
        $i0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweeps>;

        return $i0;
    }

    public ucar.nc2.dt.RadialDatasetSweep$Sweep getSweep(int)
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        ucar.nc2.dt.RadialDatasetSweep$Sweep $r3;
        int i0;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (ucar.nc2.dt.RadialDatasetSweep$Sweep) $r2;

        return $r3;
    }

    public int getNumRadials()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        return 0;
    }

    public float[] readAllData() throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        ucar.nc2.dt.RadialDatasetSweep$Sweep r4, r41;
        ucar.ma2.Section $r19, r43;
        float[] $r22, $r25, $r30, $r31, $r33, $r34, $r35;
        java.util.ArrayList $r1, $r2, $r10;
        java.lang.String $r13, $r39;
        java.io.IOException $r37, $r38;
        ucar.ma2.Array $r6, r40;
        ucar.ma2.InvalidRangeException $r32, $r36;
        ucar.nc2.dataset.NetcdfDataset $r9;
        int[] $r14, $r15, $r16, $r17, $r18, $r26, $r27, r42;
        boolean $z0, $z1;
        ucar.nc2.dt.radial.LevelII2Dataset $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        ucar.nc2.Variable $r5, $r12;
        java.lang.Object $r3, $r11, $r21, $r24, $r29;
        java.lang.Class $r20, $r23, $r28;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        r40 = null;

        $r2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r4 = (ucar.nc2.dt.RadialDatasetSweep$Sweep) $r3;

        $r5 = interfaceinvoke r4.<ucar.nc2.dt.RadialDatasetSweep$Sweep: ucar.nc2.Variable getsweepVar()>();

     label01:
        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label02:
        goto label04;

     label03:
        $r37 := @caughtexception;

        $r38 = new java.io.IOException;

        $r39 = virtualinvoke $r37.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>($r39);

        throw $r38;

     label04:
        $r8 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r9 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r7);

        $z0 = virtualinvoke $r8.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r9);

        if $z0 != 0 goto label05;

        $r28 = <java.lang.Float: java.lang.Class TYPE>;

        $r29 = virtualinvoke $r6.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r28);

        $r30 = (float[]) $r29;

        $r31 = (float[]) $r30;

        return $r31;

     label05:
        $r10 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: java.util.ArrayList sweeps>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r41 = (ucar.nc2.dt.RadialDatasetSweep$Sweep) $r11;

        $r12 = interfaceinvoke r41.<ucar.nc2.dt.RadialDatasetSweep$Sweep: ucar.nc2.Variable getsweepVar()>();

        $r13 = virtualinvoke $r12.<ucar.nc2.Variable: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("Reflect");

        if $z1 == 0 goto label06;

        $r27 = newarray (int)[3];

        $r27[0] = 1;

        $r27[1] = 2;

        $r27[2] = 4;

        r42 = $r27;

        goto label07;

     label06:
        $r14 = newarray (int)[3];

        $r14[0] = 1;

        $r14[1] = 2;

        $r14[2] = 1;

        r42 = $r14;

     label07:
        $r15 = virtualinvoke $r5.<ucar.nc2.Variable: int[] getShape()>();

        $r16 = virtualinvoke $r12.<ucar.nc2.Variable: int[] getShape()>();

        $i3 = $r15[1];

        $i2 = r42[1];

        $i5 = $i3 * $i2;

        $i4 = $r16[1];

        if $i5 <= $i4 goto label08;

        $i24 = $r16[1];

        goto label09;

     label08:
        $i7 = $r15[1];

        $i6 = r42[1];

        $i24 = $i7 * $i6;

     label09:
        i8 = $i24;

        $i10 = $r16[2];

        $i9 = $r15[2];

        if $i10 != $i9 goto label10;

        $r26 = newarray (int)[3];

        $r26[0] = 1;

        $r26[1] = 2;

        $r26[2] = 1;

        r42 = $r26;

     label10:
        $i12 = $r15[2];

        $i11 = r42[2];

        $i14 = $i12 * $i11;

        $i13 = $r16[2];

        if $i14 <= $i13 goto label11;

        $i25 = $r16[2];

        goto label12;

     label11:
        $i16 = $r15[2];

        $i15 = r42[2];

        $i25 = $i16 * $i15;

     label12:
        $r17 = newarray (int)[3];

        $i17 = $r16[0];

        $r17[0] = $i17;

        $r17[1] = i8;

        $r17[2] = $i25;

        $r18 = newarray (int)[3];

        $r18[0] = 0;

        $r18[1] = 0;

        $r18[2] = 0;

        r43 = null;

     label13:
        $r19 = new ucar.ma2.Section;

        specialinvoke $r19.<ucar.ma2.Section: void <init>(int[],int[],int[])>($r18, $r17, r42);

        r43 = $r19;

     label14:
        goto label16;

     label15:
        $r36 := @caughtexception;

        virtualinvoke $r36.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label16:
        r40 = virtualinvoke $r12.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>(r43);

     label17:
        goto label19;

     label18:
        $r32 := @caughtexception;

        virtualinvoke $r32.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label19:
        $r20 = <java.lang.Float: java.lang.Class TYPE>;

        $r21 = virtualinvoke r40.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r20);

        $r22 = (float[]) $r21;

        $r33 = (float[]) $r22;

        $r23 = <java.lang.Float: java.lang.Class TYPE>;

        $r24 = virtualinvoke $r6.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r23);

        $r25 = (float[]) $r24;

        $r34 = (float[]) $r25;

        $i19 = lengthof $r33;

        $i18 = lengthof $r34;

        $i20 = $i19 + $i18;

        $r35 = newarray (float)[$i20];

        $i21 = lengthof $r33;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r33, 0, $r35, 0, $i21);

        $i23 = lengthof $r33;

        $i22 = lengthof $r34;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 0, $r35, $i23, $i22);

        return $r35;

        catch java.io.IOException from label01 to label02 with label03;
        catch ucar.ma2.InvalidRangeException from label13 to label14 with label15;
        catch ucar.ma2.InvalidRangeException from label16 to label17 with label18;
    }

    public void clearVariableMemory()
    {
        int $i0, i1;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        i1 = 0;

     label1:
        $i0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweeps>;

        if i1 >= $i0 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void <init>(ucar.nc2.dt.radial.LevelII2Dataset, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.VariableSimpleIF, ucar.nc2.Variable, ucar.nc2.dt.radial.LevelII2Dataset$1)
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r0;
        ucar.nc2.VariableSimpleIF r3;
        ucar.nc2.dt.radial.LevelII2Dataset r1;
        ucar.nc2.dt.radial.LevelII2Dataset$1 r5;
        ucar.nc2.Variable r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        r1 := @parameter0: ucar.nc2.dt.radial.LevelII2Dataset;

        r2 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter2: ucar.nc2.VariableSimpleIF;

        r4 := @parameter3: ucar.nc2.Variable;

        r5 := @parameter4: ucar.nc2.dt.radial.LevelII2Dataset$1;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: void <init>(ucar.nc2.dt.radial.LevelII2Dataset,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.VariableSimpleIF,ucar.nc2.Variable)>(r1, r2, r3, r4);

        return;
    }
}
