public class org.apache.jena.atlas.lib.MultiSet extends java.lang.Object implements java.lang.Iterable
{
    private java.util.Map map;
    private int multiSetSize;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.jena.atlas.lib.MultiSet r0;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map> = $r1;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = 0;

        return;
    }

    private org.apache.jena.atlas.lib.RefLong _get(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r2, $r5;
        java.lang.Object r1, $r3;
        org.apache.jena.atlas.lib.RefLong $r4, r6;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (org.apache.jena.atlas.lib.RefLong) $r3;

        if r6 != null goto label1;

        $r4 = new org.apache.jena.atlas.lib.RefLong;

        specialinvoke $r4.<org.apache.jena.atlas.lib.RefLong: void <init>(long)>(0L);

        r6 = $r4;

        $r5 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r6;
    }

    public boolean isEmpty()
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Iterator elements()
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public void add(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        int $i0, $i1;
        java.lang.Object r1;
        org.apache.jena.atlas.lib.RefLong $r2;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.jena.atlas.lib.MultiSet: org.apache.jena.atlas.lib.RefLong _get(java.lang.Object)>(r1);

        virtualinvoke $r2.<org.apache.jena.atlas.lib.RefLong: void inc()>();

        $i0 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        $i1 = $i0 + 1;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = $i1;

        return;
    }

    public void add(java.lang.Object, long)
    {
        long l0, $l3, $l4;
        org.apache.jena.atlas.lib.RefLong $r2;
        org.apache.jena.atlas.lib.MultiSet r0;
        byte $b1;
        int $i2, $i5, $i6;
        java.lang.Object r1;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 > 0 goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<org.apache.jena.atlas.lib.MultiSet: org.apache.jena.atlas.lib.RefLong _get(java.lang.Object)>(r1);

        virtualinvoke $r2.<org.apache.jena.atlas.lib.RefLong: void add(long)>(l0);

        $i2 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        $l3 = (long) $i2;

        $l4 = $l3 + l0;

        $i5 = (int) $l4;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = $i5;

        return;
    }

    public void remove(java.lang.Object)
    {
        long $l2;
        org.apache.jena.atlas.lib.RefLong r4;
        org.apache.jena.atlas.lib.MultiSet r0;
        byte $b3;
        java.util.Map $r2, $r5;
        int $i0, $i1;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.jena.atlas.lib.RefLong) $r3;

        if r4 != null goto label1;

        return;

     label1:
        virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: void dec()>();

        $i0 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        $i1 = $i0 - 1;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = $i1;

        $l2 = virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $r5 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void remove(java.lang.Object, long)
    {
        long $l0, $l3, $l4, $l6, l8;
        org.apache.jena.atlas.lib.RefLong r4;
        org.apache.jena.atlas.lib.MultiSet r0;
        byte $b1, $b7;
        java.util.Map $r2, $r5;
        int $i2, $i5, $i9, $i10;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        l8 := @parameter1: long;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.jena.atlas.lib.RefLong) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $l0 = virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $b1 = $l0 cmp l8;

        $i9 = (int) $b1;

        if $i9 >= 0 goto label2;

        l8 = $l0;

     label2:
        virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: void subtract(long)>(l8);

        $i2 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        $l3 = (long) $i2;

        $l4 = $l3 - l8;

        $i5 = (int) $l4;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = $i5;

        $l6 = virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $b7 = $l6 cmp 0L;

        $i10 = (int) $b7;

        if $i10 > 0 goto label3;

        $r5 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label3:
        return;
    }

    public void removeAll(java.lang.Object)
    {
        long $l1, $l2, $l3;
        org.apache.jena.atlas.lib.RefLong r4;
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r2, $r5;
        int $i0, $i4;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.jena.atlas.lib.RefLong) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $i0 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        $l1 = (long) $i0;

        $l2 = virtualinvoke r4.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $l3 = $l1 - $l2;

        $i4 = (int) $l3;

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = $i4;

        $r5 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize> = 0;

        return;
    }

    public long count(java.lang.Object)
    {
        long $l0;
        org.apache.jena.atlas.lib.RefLong $r5;
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r2, $r3;
        java.lang.Object r1, $r4;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0L;

     label1:
        $r3 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (org.apache.jena.atlas.lib.RefLong) $r4;

        $l0 = virtualinvoke $r5.<org.apache.jena.atlas.lib.RefLong: long value()>();

        return $l0;
    }

    public int size()
    {
        int $i0;
        org.apache.jena.atlas.lib.MultiSet r0;

        r0 := @this: org.apache.jena.atlas.lib.MultiSet;

        $i0 = r0.<org.apache.jena.atlas.lib.MultiSet: int multiSetSize>;

        return $i0;
    }

    private java.util.Iterator iterator1()
    {
        long $l0, $l1;
        org.apache.jena.atlas.lib.RefLong $r9;
        java.util.ArrayList $r11;
        org.apache.jena.atlas.lib.MultiSet r1;
        byte $b2;
        java.util.Map $r2;
        int i3, $i4;
        boolean $z0;
        java.util.Map$Entry r7;
        java.util.Iterator $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6, $r8, $r10;

        r1 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        i3 = 0;

     label2:
        $l0 = (long) i3;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.jena.atlas.lib.RefLong) $r8;

        $l1 = virtualinvoke $r9.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label3;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        i3 = i3 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r5 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        return $r5;
    }

    public java.util.Iterator iterator()
    {
        org.apache.jena.atlas.lib.MultiSet$1 $r0;
        org.apache.jena.atlas.lib.MultiSet r1;

        r1 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r0 = new org.apache.jena.atlas.lib.MultiSet$1;

        specialinvoke $r0.<org.apache.jena.atlas.lib.MultiSet$1: void <init>(org.apache.jena.atlas.lib.MultiSet)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        long $l0;
        org.apache.jena.atlas.lib.RefLong $r11;
        org.apache.jena.atlas.lib.MultiSet r1;
        java.util.Map $r2;
        java.lang.String $r5, $r9, $r12, r13;
        boolean $z0;
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6, $r8, $r10;

        r1 := @this: org.apache.jena.atlas.lib.MultiSet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        r13 = "";

        $r2 = r1.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r13 = ", ";

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (org.apache.jena.atlas.lib.RefLong) $r10;

        $l0 = virtualinvoke $r11.<org.apache.jena.atlas.lib.RefLong: long value()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static java.util.Map access$000(org.apache.jena.atlas.lib.MultiSet)
    {
        org.apache.jena.atlas.lib.MultiSet r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.jena.atlas.lib.MultiSet;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiSet: java.util.Map map>;

        return $r1;
    }
}
