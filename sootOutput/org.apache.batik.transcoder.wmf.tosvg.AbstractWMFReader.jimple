public abstract class org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader extends java.lang.Object
{
    public static final float PIXEL_PER_INCH;
    public static final float MM_PER_PIXEL;
    protected int left;
    protected int right;
    protected int top;
    protected int bottom;
    protected int width;
    protected int height;
    protected int inch;
    protected float scaleX;
    protected float scaleY;
    protected float scaleXY;
    protected int vpW;
    protected int vpH;
    protected int vpX;
    protected int vpY;
    protected int xSign;
    protected int ySign;
    protected volatile boolean bReading;
    protected boolean isAldus;
    protected boolean isotropic;
    protected int mtType;
    protected int mtHeaderSize;
    protected int mtVersion;
    protected int mtSize;
    protected int mtNoObjects;
    protected int mtMaxRecord;
    protected int mtNoParameters;
    protected int windowWidth;
    protected int windowHeight;
    protected int numObjects;
    protected java.util.List objectVector;
    public int lastObjectIdx;

    public void <init>()
    {
        java.util.ArrayList $r2;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int xSign> = 1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int ySign> = 1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean bReading> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isAldus> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isotropic> = 1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleX> = 1.0F;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleY> = 1.0F;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY> = 1.0F;

        $i7 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left> = $i7;

        $i9 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top> = $i9;

        $i11 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width> = $i11;

        $i13 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height> = $i13;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $i2 = $i1 + $i0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right> = $i2;

        $i4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height>;

        $i5 = $i4 + $i3;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom> = $i5;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: java.util.List objectVector> = $r2;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width> = i0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height> = i1;

        return;
    }

    protected short readShort(java.io.DataInputStream) throws java.io.IOException
    {
        byte[] r0;
        java.io.DataInputStream r1;
        short $s1, $s5, $s6, s7, s8, $s9, $s13;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r2;
        byte $b0, $b4;
        int i2, $i3, $i10, $i12;

        r2 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        r1 := @parameter0: java.io.DataInputStream;

        r0 = newarray (byte)[2];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[])>(r0);

        $b0 = r0[1];

        $s9 = (short) $b0;

        $s1 = 255 & $s9;

        $i10 = (int) $s1;

        i2 = $i10 << 8;

        $i12 = (int) 65535;

        $i3 = $i12 & i2;

        s7 = (short) $i3;

        $b4 = r0[0];

        $s13 = (short) $b4;

        $s5 = 255 & $s13;

        $s6 = s7 | $s5;

        s8 = (short) $s6;

        return s8;
    }

    protected int readInt(java.io.DataInputStream) throws java.io.IOException
    {
        byte[] r0;
        java.io.DataInputStream r1;
        short $s1, $s3, $s6, $s9, $s14, $s16, $s18, $s20;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r2;
        byte $b0, $b2, $b5, $b8;
        int $i4, $i7, i10, i11, i12, i13, $i15, $i17, $i19, $i21;

        r2 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        r1 := @parameter0: java.io.DataInputStream;

        r0 = newarray (byte)[4];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[])>(r0);

        $b0 = r0[3];

        $s14 = (short) $b0;

        $s1 = 255 & $s14;

        $i15 = (int) $s1;

        i10 = $i15 << 24;

        $b2 = r0[2];

        $s16 = (short) $b2;

        $s3 = 255 & $s16;

        $i17 = (int) $s3;

        $i4 = $i17 << 16;

        i11 = i10 | $i4;

        $b5 = r0[1];

        $s18 = (short) $b5;

        $s6 = 255 & $s18;

        $i19 = (int) $s6;

        $i7 = $i19 << 8;

        i12 = i11 | $i7;

        $b8 = r0[0];

        $s20 = (short) $b8;

        $s9 = 255 & $s20;

        $i21 = (int) $s9;

        i13 = i12 | $i21;

        return i13;
    }

    public float getViewportWidthUnits()
    {
        int $i0;
        float $f0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f0 = (float) $i0;

        return $f0;
    }

    public float getViewportHeightUnits()
    {
        int $i0;
        float $f0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $f0 = (float) $i0;

        return $f0;
    }

    public float getViewportWidthInch()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public float getViewportHeightInch()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public float getPixelsPerUnit()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f0 = (float) $i0;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public int getVpW()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public int getVpH()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public int getLeftUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        return $i0;
    }

    public int getRightUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        return $i0;
    }

    public int getTopUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        return $i0;
    }

    public int getWidthUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        return $i0;
    }

    public int getHeightUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height>;

        return $i0;
    }

    public int getBottomUnits()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        return $i0;
    }

    public int getMetaFileUnitsPerInch()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        return $i0;
    }

    public java.awt.Rectangle getRectangleUnits()
    {
        java.awt.Rectangle $r0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r1;
        int $i0, $i1, $i2, $i3;

        r1 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $r0 = new java.awt.Rectangle;

        $i3 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $i2 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $i1 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $i0 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height>;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        return $r0;
    }

    public java.awt.geom.Rectangle2D getRectanglePixel()
    {
        java.awt.geom.Rectangle2D$Float $r1;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, f14, $f15, $f16, $f17, $f18, f19, $f20, $f21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        f4 = $f3 / $f2;

        $f6 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        $f5 = (float) $i2;

        $f8 = $f6 * $f5;

        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f7 = (float) $i3;

        f9 = $f8 / $f7;

        $f11 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $f10 = (float) $i4;

        $f13 = $f11 * $f10;

        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f12 = (float) $i5;

        f14 = $f13 / $f12;

        $f16 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i6 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        $f15 = (float) $i6;

        $f18 = $f16 * $f15;

        $i7 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f17 = (float) $i7;

        f19 = $f18 / $f17;

        $r1 = new java.awt.geom.Rectangle2D$Float;

        $f21 = f9 - f4;

        $f20 = f19 - f14;

        specialinvoke $r1.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f4, f14, $f21, $f20);

        return $r1;
    }

    public java.awt.geom.Rectangle2D getRectangleInch()
    {
        java.awt.geom.Rectangle2D$Float $r1;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, f8, $f9, $f10, f11, $f12, $f13;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f0 = (float) $i1;

        f2 = $f1 / $f0;

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        $f4 = (float) $i2;

        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f3 = (float) $i3;

        f5 = $f4 / $f3;

        $i4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $f7 = (float) $i4;

        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f6 = (float) $i5;

        f8 = $f7 / $f6;

        $i6 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        $f10 = (float) $i6;

        $i7 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f9 = (float) $i7;

        f11 = $f10 / $f9;

        $r1 = new java.awt.geom.Rectangle2D$Float;

        $f13 = f5 - f2;

        $f12 = f11 - f8;

        specialinvoke $r1.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f2, f8, $f13, $f12);

        return $r1;
    }

    public int getWidthPixels()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public float getUnitsToPixels()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f0 = (float) $i0;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public float getVpWFactor()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f5 = $f3 / $f2;

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f4 = (float) $i2;

        $f6 = $f5 / $f4;

        return $f6;
    }

    public float getVpHFactor()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f5 = $f3 / $f2;

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $f4 = (float) $i2;

        $f6 = $f5 / $f4;

        return $f6;
    }

    public int getHeightPixels()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $f1 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height>;

        $f0 = (float) $i0;

        $f3 = $f1 * $f0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f2 = (float) $i1;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public int getXSign()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int xSign>;

        return $i0;
    }

    public int getYSign()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int ySign>;

        return $i0;
    }

    protected synchronized void setReading(boolean)
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        boolean z0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean bReading> = z0;

        return;
    }

    public synchronized boolean isReading()
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        boolean $z0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean bReading>;

        return $z0;
    }

    public abstract void reset();

    protected abstract boolean readRecords(java.io.DataInputStream) throws java.io.IOException;

    public void read(java.io.DataInputStream) throws java.io.IOException
    {
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r7;
        boolean $z0;
        java.util.List $r4;
        java.io.DataInputStream r1;
        java.util.ArrayList $r6;
        short $s4, $s6, $s8, $s12, $s13, $s14, $s15, $s16, $s27, $s28;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i10, $i11, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i29, $i30, i31, i32, i33, $i34, $i35, $i36, $i37, $i38, $i40, $i42, $i43, $i44, $i45, $i46, $i47;
        java.io.IOException $r8;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        r1 := @parameter0: java.io.DataInputStream;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void reset()>();

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void setReading(boolean)>(1);

        $i0 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        if $i0 != -1698247209 goto label3;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isAldus> = 1;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s12 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i34 = (int) $s12;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left> = $i34;

        $s13 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i35 = (int) $s13;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top> = $i35;

        $s14 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i36 = (int) $s14;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right> = $i36;

        $s15 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i37 = (int) $s15;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom> = $i37;

        $s16 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i38 = (int) $s16;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch> = $i38;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i18 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $i17 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        if $i18 <= $i17 goto label1;

        i31 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        $i30 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right> = $i30;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left> = i31;

        $i40 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int xSign> = $i40;

     label1:
        $i20 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $i19 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        if $i20 <= $i19 goto label2;

        i32 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        $i29 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom> = $i29;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top> = i32;

        $i42 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int ySign> = $i42;

     label2:
        $i22 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right>;

        $i21 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left>;

        $i23 = $i22 - $i21;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width> = $i23;

        $i25 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom>;

        $i24 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top>;

        $i26 = $i25 - $i24;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height> = $i26;

        $s27 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i43 = (int) $s27;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtType> = $i43;

        $s28 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i44 = (int) $s28;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtHeaderSize> = $i44;

        goto label4;

     label3:
        $i1 = $i0 << 16;

        $i2 = $i1 >> 16;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtType> = $i2;

        $i3 = $i0 >> 16;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtHeaderSize> = $i3;

     label4:
        $s4 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i45 = (int) $s4;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtVersion> = $i45;

        $i5 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtSize> = $i5;

        $s6 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i46 = (int) $s6;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtNoObjects> = $i46;

        $i7 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtMaxRecord> = $i7;

        $s8 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i47 = (int) $s8;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtNoParameters> = $i47;

        $i9 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int mtNoObjects>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects> = $i9;

        $r6 = new java.util.ArrayList;

        $i10 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i10);

        i33 = 0;

        goto label6;

     label5:
        $r7 = new org.apache.batik.transcoder.wmf.tosvg.GdiObject;

        specialinvoke $r7.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void <init>(int,boolean)>(i33, 0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        i33 = i33 + 1;

     label6:
        $i11 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        if i33 < $i11 goto label5;

        $r4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: java.util.List objectVector>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $z0 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean readRecords(java.io.DataInputStream)>(r1);

        virtualinvoke r1.<java.io.FilterInputStream: void close()>();

        if $z0 != 0 goto label7;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Unhandled exception while reading records");

        throw $r8;

     label7:
        return;
    }

    public int addObject(int, java.lang.Object)
    {
        java.util.List $r1;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int $i0, i1, $i2, i3;
        java.lang.Object $r2, r4;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject r3;
        boolean $z0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        i1 := @parameter0: int;

        r4 := @parameter1: java.lang.Object;

        i3 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: java.util.List objectVector>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (org.apache.batik.transcoder.wmf.tosvg.GdiObject) $r2;

        $z0 = r3.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: boolean used>;

        if $z0 != 0 goto label2;

        virtualinvoke r3.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void Setup(int,java.lang.Object)>(i1, r4);

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int lastObjectIdx> = i3;

        goto label4;

     label2:
        i3 = i3 + 1;

     label3:
        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        if i3 < $i0 goto label1;

     label4:
        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int lastObjectIdx>;

        return $i2;
    }

    public int addObjectAt(int, java.lang.Object, int)
    {
        java.util.List $r2;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.Object r1, $r3;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject r4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        if i0 == 0 goto label1;

        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        if i0 <= $i3 goto label2;

     label1:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObject(int,java.lang.Object)>(i1, r1);

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int lastObjectIdx>;

        return $i2;

     label2:
        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int lastObjectIdx> = i0;

        i5 = 0;

        goto label5;

     label3:
        $r2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: java.util.List objectVector>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        r4 = (org.apache.batik.transcoder.wmf.tosvg.GdiObject) $r3;

        if i5 != i0 goto label4;

        virtualinvoke r4.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void Setup(int,java.lang.Object)>(i1, r1);

        goto label6;

     label4:
        i5 = i5 + 1;

     label5:
        $i4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        if i5 < $i4 goto label3;

     label6:
        return i0;
    }

    public org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)
    {
        java.util.List $r1;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;
        int i0;
        java.lang.Object $r2;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r3;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: java.util.List objectVector>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.batik.transcoder.wmf.tosvg.GdiObject) $r2;

        return $r3;
    }

    public int getNumObjects()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int numObjects>;

        return $i0;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        float $f0, $f1, $f2;
        java.awt.Toolkit $r0, $r1;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i0 = virtualinvoke $r0.<java.awt.Toolkit: int getScreenResolution()>();

        $f0 = (float) $i0;

        <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH> = $f0;

        $r1 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i1 = virtualinvoke $r1.<java.awt.Toolkit: int getScreenResolution()>();

        $f1 = (float) $i1;

        $f2 = 25.4F / $f1;

        <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float MM_PER_PIXEL> = $f2;

        return;
    }
}
