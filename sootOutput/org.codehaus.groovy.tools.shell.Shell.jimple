public class org.codehaus.groovy.tools.shell.Shell extends java.lang.Object implements groovy.lang.GroovyObject
{
    protected final org.codehaus.groovy.tools.shell.util.Logger log;
    private final org.codehaus.groovy.tools.shell.CommandRegistry registry;
    private final org.codehaus.groovy.tools.shell.IO io;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696898;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Command;

    public void <init>(org.codehaus.groovy.tools.shell.IO)
    {
        org.codehaus.groovy.tools.shell.CommandRegistry $r19;
        boolean $z0;
        org.codehaus.groovy.tools.shell.IO r27, $r31;
        org.codehaus.groovy.tools.shell.util.Logger $r11, $r14;
        java.lang.Object[] $r6, $r21;
        java.lang.StringBuffer $r28;
        groovy.lang.MetaClass $r24, $r26;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r9, $r12, $r15, $r17, $r20, $r29, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        java.lang.Object $r7, $r8, $r10, $r13, $r16, $r18, $r22, $r23, $r25, $r30;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        r27 := @parameter0: org.codehaus.groovy.tools.shell.IO;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r32 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r32;

        goto label02;

     label01:
        $r32 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label02:
        r2 = $r32;

        $r3 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r33;

        goto label04;

     label03:
        $r33 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        r4 = $r33;

        $r5 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r5 != null goto label05;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r34;

        goto label06;

     label05:
        $r34 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r0, "class");

        $r6[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r34, "create", $r6);

        $r9 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r9 != null goto label07;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r35;

        goto label08;

     label07:
        $r35 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label08:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r35);

        $r11 = (org.codehaus.groovy.tools.shell.util.Logger) $r10;

        $r12 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r12 != null goto label09;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r36;

        goto label10;

     label09:
        $r36 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label10:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r36);

        $r14 = (org.codehaus.groovy.tools.shell.util.Logger) $r13;

        r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.util.Logger log> = $r14;

        $r15 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

        if $r15 != null goto label11;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandRegistry");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry> = $r37;

        goto label12;

     label11:
        $r37 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

     label12:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r2, $r37);

        $r17 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

        if $r17 != null goto label13;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandRegistry");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry> = $r38;

        goto label14;

     label13:
        $r38 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

     label14:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r16, $r38);

        $r19 = (org.codehaus.groovy.tools.shell.CommandRegistry) $r18;

        r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.CommandRegistry registry> = $r19;

        $r20 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r20 != null goto label15;

        $r39 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r39;

        goto label16;

     label15:
        $r39 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label16:
        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r0;

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r39, "initMetaClass", $r21);

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, r4);

        $r24 = (groovy.lang.MetaClass) $r23;

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r24, r4);

        $r26 = (groovy.lang.MetaClass) $r25;

        r0.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass metaClass> = $r26;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r27);

        if $z0 == 0 goto label17;

        goto label18;

     label17:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>(java.lang.String)>("io. Values: ");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("io = ");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r27);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r28, null);

     label18:
        $r29 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r29 != null goto label19;

        $r40 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r40;

        goto label20;

     label19:
        $r40 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label20:
        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r27, $r40);

        $r31 = (org.codehaus.groovy.tools.shell.IO) $r30;

        r0.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.IO io> = $r31;

        return;
    }

    public void <init>()
    {
        java.lang.Object[] $r12;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.groovy.tools.shell.IO $r7;
        java.lang.Class $r0, r1, $r2, $r3, $r10, $r11, $r13;
        java.lang.Object $r4, $r6, $r9;
        org.codehaus.groovy.tools.shell.Shell r5;

        r5 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r10;

        goto label02;

     label01:
        $r10 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label02:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label04;

     label03:
        $r11 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r12 = newarray (java.lang.Object)[1];

        $r3 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r3 != null goto label05;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r13;

        goto label06;

     label05:
        $r13 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r13);

        $r12[0] = $r4;

        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r12, 2, r1);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r9 = $r12[0];

        $r12 = (java.lang.Object[]) $r9;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        specialinvoke r5.<org.codehaus.groovy.tools.shell.Shell: void <init>()>();

        goto label11;

     label09:
        $r6 = $r12[0];

        $r7 = (org.codehaus.groovy.tools.shell.IO) $r6;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.Shell: void <init>(org.codehaus.groovy.tools.shell.IO)>($r7);

        goto label11;

     label10:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r8;

     label11:
        return;
    }

    protected java.util.List parseLine(java.lang.String)
    {
        java.util.List $r9;
        java.lang.StringBuffer $r4;
        java.lang.Class $r0, r1, $r2, $r7, $r11, $r12, $r13;
        java.lang.Object $r5, $r6, $r8;
        java.lang.String r3;
        org.codehaus.groovy.tools.shell.Shell r10;
        boolean $z0;

        r10 := @this: org.codehaus.groovy.tools.shell.Shell;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(line != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("line = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "trim");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "tokenize");

        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$util$List>;

        if $r7 != null goto label7;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$util$List> = $r13;

        goto label8;

     label7:
        $r13 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$util$List>;

     label8:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r13);

        $r9 = (java.util.List) $r8;

        return $r9;
    }

    public org.codehaus.groovy.tools.shell.Command findCommand(java.lang.String)
    {
        java.lang.Object[] $r6, $r10, $r13;
        org.codehaus.groovy.tools.shell.Command $r18;
        java.lang.Integer $r9, $r11;
        java.lang.StringBuffer $r4;
        org.codehaus.groovy.tools.shell.CommandRegistry $r14;
        java.lang.String r3;
        boolean $z0, $z1;
        java.lang.Class $r0, r1, $r2, $r16, $r19, $r20, $r21;
        java.lang.Object $r7, $r8, $r12, $r15, $r17;
        org.codehaus.groovy.tools.shell.Shell r5;

        r5 := @this: org.codehaus.groovy.tools.shell.Shell;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label02:
        r1 = $r19;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("line. Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("line = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "parseLine", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "size");

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z1 == 0 goto label07;

        goto label08;

     label07:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>("(args.size() > 0)", null);

     label08:
        $r10 = newarray (java.lang.Object)[1];

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(0);

        $r10[0] = $r11;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "getAt", $r10);

        $r14 = r5.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.CommandRegistry registry>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r12;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "getAt", $r13);

        $r16 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command>;

        if $r16 != null goto label09;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Command");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command> = $r21;

        goto label10;

     label09:
        $r21 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command>;

     label10:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r21);

        $r18 = (org.codehaus.groovy.tools.shell.Command) $r17;

        return $r18;
    }

    public boolean isExecutable(java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.Boolean $r10, $r14;
        java.lang.String r5;
        boolean $z0, $z1;
        java.lang.Class $r0, r1, $r2, $r7, $r8, $r9, $r11, $r12;
        java.lang.Object $r6, $r13;
        org.codehaus.groovy.tools.shell.Shell r3;

        r3 := @this: org.codehaus.groovy.tools.shell.Shell;

        r5 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r8;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "findCommand", $r4);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r6, null);

        if $z0 == 0 goto label5;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label6;

     label5:
        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label6:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Boolean>;

        if $r7 != null goto label7;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        $r12 = $r11;

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Boolean> = $r11;

        goto label8;

     label7:
        $r12 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Boolean>;

     label8:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r10, $r12);

        $r14 = (java.lang.Boolean) $r13;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r14);

        return $z1;
    }

    public java.lang.Object execute(java.lang.String)
    {
        java.lang.Integer $r44, $r45, $r46;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.GStringImpl $r47, $r48;
        java.util.List $r19;
        org.codehaus.groovy.tools.shell.util.Logger $r23, $r33;
        java.lang.Object[] $r6, $r12, $r16, $r20, $r22, $r26, $r28, $r30, $r32, $r36;
        java.lang.String[] $r25, $r35;
        java.lang.StringBuffer $r43;
        int $i1;
        java.lang.String r3;
        java.lang.Class $r0, r1, $r2, $r8, $r31, $r37, $r38, $r41, $r42;
        java.lang.Object $r7, $r9, $r10, $r11, $r13, $r14, $r24, $r27, $r34, r39, r40;
        org.codehaus.groovy.tools.shell.Shell r5;

        r5 := @this: org.codehaus.groovy.tools.shell.Shell;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r37;

        goto label02;

     label01:
        $r37 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label02:
        r1 = $r37;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r38;

        goto label04;

     label03:
        $r38 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>(java.lang.String)>("line. Values: ");

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("line = ");

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r43, null);

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "findCommand", $r6);

        r39 = null;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r7);

        if $z1 == 0 goto label11;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r3;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "parseLine", $r12);

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r13, "size");

        $r44 = new java.lang.Integer;

        specialinvoke $r44.<java.lang.Integer: void <init>(int)>(1);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r14, $r44);

        if $z2 == 0 goto label07;

        $r36 = newarray (java.lang.Object)[0];

        r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r36);

        goto label08;

     label07:
        $r16 = newarray (java.lang.Object)[1];

        $r45 = new java.lang.Integer;

        specialinvoke $r45.<java.lang.Integer: void <init>(int)>(1);

        $r46 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r46.<java.lang.Integer: void <init>(int)>($i1);

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createRange(java.lang.Object,java.lang.Object,boolean)>($r45, $r46, 1);

        $r16[0] = $r19;

        r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "getAt", $r16);

     label08:
        $r23 = r5.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.util.Logger log>;

        $r20 = newarray (java.lang.Object)[1];

        $r47 = new org.codehaus.groovy.runtime.GStringImpl;

        $r22 = newarray (java.lang.Object)[3];

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "name");

        $r22[0] = $r24;

        $r22[1] = $r7;

        $r22[2] = r40;

        $r25 = newarray (java.lang.String)[4];

        $r25[0] = "Executing command(";

        $r25[1] = "): ";

        $r25[2] = "; w/args: ";

        $r25[3] = "";

        specialinvoke $r47.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r22, $r25);

        $r20[0] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r23, "debug", $r20);

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r40;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "execute", $r26);

        r39 = $r27;

        $r33 = r5.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.util.Logger log>;

        $r28 = newarray (java.lang.Object)[1];

        $r48 = new org.codehaus.groovy.runtime.GStringImpl;

        $r30 = newarray (java.lang.Object)[1];

        $r31 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$String>;

        if $r31 != null goto label09;

        $r41 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$String> = $r41;

        goto label10;

     label09:
        $r41 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$String>;

     label10:
        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = $r27;

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r41, "valueOf", $r32);

        $r30[0] = $r34;

        $r35 = newarray (java.lang.String)[2];

        $r35[0] = "Result: ";

        $r35[1] = "";

        specialinvoke $r48.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r30, $r35);

        $r28[0] = $r48;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r33, "debug", $r28);

        goto label11;

     label11:
        $r11 = r39;

        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label12;

        $r42 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Object> = $r42;

        goto label13;

     label12:
        $r42 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$java$lang$Object>;

     label13:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, $r42);

        $r10 = (java.lang.Object) $r9;

        return $r10;
    }

    public org.codehaus.groovy.tools.shell.Command register(org.codehaus.groovy.tools.shell.Command)
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.Command r5, $r10;
        org.codehaus.groovy.tools.shell.CommandRegistry $r6;
        java.lang.Class $r0, r1, $r2, $r8, $r11, $r12, $r13;
        java.lang.Object $r7, $r9;
        org.codehaus.groovy.tools.shell.Shell r3;

        r3 := @this: org.codehaus.groovy.tools.shell.Shell;

        r5 := @parameter0: org.codehaus.groovy.tools.shell.Command;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r6 = r3.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.CommandRegistry registry>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "leftShift", $r4);

        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command>;

        if $r8 != null goto label5;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Command");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command> = $r13;

        goto label6;

     label5:
        $r13 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$Command>;

     label6:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r13);

        $r10 = (org.codehaus.groovy.tools.shell.Command) $r9;

        return $r10;
    }

    public java.lang.Object leftShift(java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.Class $r0, r1, $r2, $r7, $r8;
        java.lang.Object $r6;
        org.codehaus.groovy.tools.shell.Shell r3;
        java.lang.String r5;

        r3 := @this: org.codehaus.groovy.tools.shell.Shell;

        r5 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r7;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "execute", $r4);

        return $r6;
    }

    public java.lang.Object leftShift(org.codehaus.groovy.tools.shell.Command)
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.Command r5;
        java.lang.Class $r0, r1, $r2, $r7, $r8;
        java.lang.Object $r6;
        org.codehaus.groovy.tools.shell.Shell r3;

        r3 := @this: org.codehaus.groovy.tools.shell.Shell;

        r5 := @parameter0: org.codehaus.groovy.tools.shell.Command;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r7;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "register", $r4);

        return $r6;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;
        org.codehaus.groovy.tools.shell.Shell r4;

        r4 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        org.codehaus.groovy.tools.shell.Shell r2;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        org.codehaus.groovy.tools.shell.Shell r2;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.Shell r2;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        r4 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        org.codehaus.groovy.tools.shell.Shell r2;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.Shell: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696898L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Long __timeStamp__239_neverHappen1239119696898> = $r5;

        return;
    }

    public final org.codehaus.groovy.tools.shell.CommandRegistry getRegistry()
    {
        org.codehaus.groovy.tools.shell.CommandRegistry $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.Shell r2;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.CommandRegistry registry>;

        $r3 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandRegistry");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandRegistry>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.codehaus.groovy.tools.shell.CommandRegistry) $r5;

        return $r6;
    }

    public final org.codehaus.groovy.tools.shell.IO getIo()
    {
        org.codehaus.groovy.tools.shell.IO $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.Shell r2;

        r2 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.Shell: org.codehaus.groovy.tools.shell.IO io>;

        $r3 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.Shell: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.codehaus.groovy.tools.shell.IO) $r5;

        return $r6;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.Shell r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.Shell r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.Shell r0;

        r0 := @this: org.codehaus.groovy.tools.shell.Shell;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
