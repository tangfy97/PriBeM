public class org.apache.pdfbox.util.operator.SetTextFont extends org.apache.pdfbox.util.operator.OperatorProcessor
{

    public void <init>()
    {
        org.apache.pdfbox.util.operator.SetTextFont r0;

        r0 := @this: org.apache.pdfbox.util.operator.SetTextFont;

        specialinvoke r0.<org.apache.pdfbox.util.operator.OperatorProcessor: void <init>()>();

        return;
    }

    public void process(org.apache.pdfbox.util.PDFOperator, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSNumber $r4;
        java.util.Map $r13, $r27;
        org.apache.pdfbox.pdmodel.text.PDTextState $r8, $r11, $r19;
        org.apache.pdfbox.pdmodel.graphics.PDGraphicsState $r7, $r10, $r18;
        java.util.List r0;
        float $f0;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r28;
        org.apache.pdfbox.util.PDFOperator r30;
        org.apache.pdfbox.pdmodel.font.PDFont $r16, $r20;
        int $i0;
        org.apache.pdfbox.util.operator.SetTextFont r5;
        java.lang.String $r14, $r29;
        org.apache.pdfbox.cos.COSName r2;
        java.io.IOException $r21;
        org.apache.pdfbox.util.PDFStreamEngine $r6, $r9, $r12, $r17, $r26;
        java.lang.Object $r1, $r3, $r15;

        r5 := @this: org.apache.pdfbox.util.operator.SetTextFont;

        r30 := @parameter0: org.apache.pdfbox.util.PDFOperator;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (org.apache.pdfbox.cos.COSName) $r1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = (org.apache.pdfbox.cos.COSNumber) $r3;

        $f0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $r6 = r5.<org.apache.pdfbox.util.operator.SetTextFont: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.text.PDTextState: void setFontSize(float)>($f0);

        $r9 = r5.<org.apache.pdfbox.util.operator.SetTextFont: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $r12 = r5.<org.apache.pdfbox.util.operator.SetTextFont: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r13 = virtualinvoke $r12.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map getFonts()>();

        $r14 = virtualinvoke r2.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r16 = (org.apache.pdfbox.pdmodel.font.PDFont) $r15;

        virtualinvoke $r11.<org.apache.pdfbox.pdmodel.text.PDTextState: void setFont(org.apache.pdfbox.pdmodel.font.PDFont)>($r16);

        $r17 = r5.<org.apache.pdfbox.util.operator.SetTextFont: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r18 = virtualinvoke $r17.<org.apache.pdfbox.util.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.PDGraphicsState getGraphicsState()>();

        $r19 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.graphics.PDGraphicsState: org.apache.pdfbox.pdmodel.text.PDTextState getTextState()>();

        $r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.text.PDTextState: org.apache.pdfbox.pdmodel.font.PDFont getFont()>();

        if $r20 != null goto label1;

        $r21 = new java.io.IOException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not find font(");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in map=");

        $r26 = r5.<org.apache.pdfbox.util.operator.SetTextFont: org.apache.pdfbox.util.PDFStreamEngine context>;

        $r27 = virtualinvoke $r26.<org.apache.pdfbox.util.PDFStreamEngine: java.util.Map getFonts()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r21;

     label1:
        return;
    }
}
