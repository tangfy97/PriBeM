public class org.apache.xpath.patterns.ContextMatchStepPattern extends org.apache.xpath.patterns.StepPattern
{

    public void <init>(int, int)
    {
        org.apache.xpath.patterns.ContextMatchStepPattern r0;
        int i0, i1, $i3;

        r0 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = (int) -1;

        specialinvoke r0.<org.apache.xpath.patterns.StepPattern: void <init>(int,int,int)>($i3, i0, i1);

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.ContextMatchStepPattern r2;
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.objects.XNumber $r1, $r3;
        int $i0, $i1;

        r2 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getIteratorRoot()>();

        $i1 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        if $i0 != $i1 goto label1;

        $r3 = virtualinvoke r2.<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber getStaticScore()>();

        return $r3;

     label1:
        $r1 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r1;
    }

    public org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext, org.apache.xpath.patterns.StepPattern) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r9, $r10;
        org.apache.xpath.patterns.StepPattern r11;
        short $s2, $s3;
        byte b6;
        org.apache.xpath.XPathContext r0;
        int $i0, $i1, i4, i5, i7, i8, $i9, $i11, $i13;
        org.apache.xml.dtm.DTMAxisTraverser $r5, $r13;
        boolean $z0, z1, $z2, $z4, $z5;
        org.apache.xpath.objects.XNumber $r4, $r7, $r8;
        org.apache.xpath.patterns.ContextMatchStepPattern r2;
        org.apache.xml.dtm.DTM $r1;
        org.apache.xpath.objects.XObject $r3, $r6, r12;

        r2 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        r11 := @parameter1: org.apache.xpath.patterns.StepPattern;

        r12 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        $i0 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r1 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        if null == $r1 goto label25;

        virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        i4 = r2.<org.apache.xpath.patterns.StepPattern: int m_axis>;

        $z0 = staticinvoke <org.apache.xpath.axes.WalkerFactory: boolean isDownwardAxisOfMany(int)>(i4);

        $i1 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getIteratorRoot()>();

        $s2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i1);

        $i9 = (int) $s2;

        if $i9 != 2 goto label01;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

     label02:
        z1 = $z4;

        if 11 != i4 goto label03;

        if $z5 == 0 goto label03;

        i4 = 15;

     label03:
        $r13 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(i4);

        i5 = virtualinvoke $r13.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>($i0);

        goto label24;

     label04:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i5);

        $r3 = virtualinvoke r2.<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        r12 = $r3;

        $r4 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if $r3 == $r4 goto label07;

        $z2 = virtualinvoke r2.<org.apache.xpath.patterns.StepPattern: boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)>(r0, $r1, $i0);

        if $z2 == 0 goto label06;

        goto label26;

     label05:
        return $r3;

     label06:
        r12 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

     label07:
        if $z0 == 0 goto label19;

        if z1 == 0 goto label19;

        $s3 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i5);

        if 1 != $s3 goto label19;

        b6 = 2;

        i7 = 0;

        goto label18;

     label08:
        $r5 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(b6);

        i8 = virtualinvoke $r5.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i5);

        goto label17;

     label09:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i8);

        $r6 = virtualinvoke r2.<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        r12 = $r6;

        $r7 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if $r6 == $r7 goto label12;

        $r8 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if $r6 == $r8 goto label12;

        goto label27;

     label10:
        goto label28;

     label11:
        return $r6;

     label12:
        goto label29;

     label13:
        goto label16;

     label14:
        $r10 := @caughtexception;

        goto label30;

     label15:
        throw $r10;

     label16:
        i8 = virtualinvoke $r5.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i5, i8);

     label17:
        $i11 = (int) -1;

        if $i11 != i8 goto label09;

        b6 = 9;

        i7 = i7 + 1;

     label18:
        if i7 < 2 goto label08;

     label19:
        goto label31;

     label20:
        goto label23;

     label21:
        $r9 := @caughtexception;

        goto label32;

     label22:
        throw $r9;

     label23:
        i5 = virtualinvoke $r13.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>($i0, i5);

     label24:
        $i13 = (int) -1;

        if $i13 != i5 goto label04;

     label25:
        return r12;

     label26:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label05;

     label27:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label10;

     label28:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label11;

     label29:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label13;

     label30:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label15;

     label31:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label20;

     label32:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label22;

        catch java.lang.Throwable from label09 to label14 with label14;
        catch java.lang.Throwable from label04 to label21 with label21;
        catch java.lang.Throwable from label27 to label28 with label21;
        catch java.lang.Throwable from label29 to label30 with label21;
        catch java.lang.Throwable from label30 to label31 with label21;
    }
}
