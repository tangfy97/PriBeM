class org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser
{

    private void <init>()
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/springframework/beans/factory/config/FieldRetrievingFactoryBean;";
    }

    protected java.lang.String resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.beans.factory.support.AbstractBeanDefinition r2;
        java.lang.String $r4, r5;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.AbstractBeanDefinition;

        r3 := @parameter2: org.springframework.beans.factory.xml.ParserContext;

        $r4 = specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)>(r1, r2, r3);

        r5 = $r4;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("static-field");

     label1:
        return r5;
    }

    void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser)
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser r0, r1;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser: void <init>()>();

        return;
    }
}
