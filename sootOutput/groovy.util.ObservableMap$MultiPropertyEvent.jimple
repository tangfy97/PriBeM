public class groovy.util.ObservableMap$MultiPropertyEvent extends groovy.util.ObservableMap$PropertyEvent
{
    public static final java.lang.String MULTI_PROPERTY;
    private groovy.util.ObservableMap$PropertyEvent[] events;

    public void <init>(java.lang.Object, groovy.util.ObservableMap$PropertyEvent[])
    {
        groovy.util.ObservableMap$PropertyEvent[] $r4, r5, $r6, $r7;
        groovy.util.ObservableMap$MultiPropertyEvent r0;
        int $i0, $i1, $i2;
        java.lang.Object r1, $r2, $r3;

        r0 := @this: groovy.util.ObservableMap$MultiPropertyEvent;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: groovy.util.ObservableMap$PropertyEvent[];

        $r3 = <groovy.util.ObservableMap$MultiPropertyEvent: java.lang.Object OLDVALUE>;

        $r2 = <groovy.util.ObservableMap$MultiPropertyEvent: java.lang.Object NEWVALUE>;

        specialinvoke r0.<groovy.util.ObservableMap$PropertyEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,int)>(r1, "groovy_util_ObservableMap_MultiPropertyEvent_MULTI", $r3, $r2, 4);

        $r4 = newarray (groovy.util.ObservableMap$PropertyEvent)[0];

        r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events> = $r4;

        if r5 == null goto label1;

        $i0 = lengthof r5;

        if $i0 <= 0 goto label1;

        $i1 = lengthof r5;

        $r6 = newarray (groovy.util.ObservableMap$PropertyEvent)[$i1];

        r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events> = $r6;

        $r7 = r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events>;

        $i2 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r7, 0, $i2);

     label1:
        return;
    }

    public groovy.util.ObservableMap$PropertyEvent[] getEvents()
    {
        groovy.util.ObservableMap$PropertyEvent[] $r1, r2, $r3, $r4;
        groovy.util.ObservableMap$MultiPropertyEvent r0;
        int $i0, $i1;

        r0 := @this: groovy.util.ObservableMap$MultiPropertyEvent;

        $r1 = r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events>;

        $i0 = lengthof $r1;

        r2 = newarray (groovy.util.ObservableMap$PropertyEvent)[$i0];

        $r4 = r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events>;

        $r3 = r0.<groovy.util.ObservableMap$MultiPropertyEvent: groovy.util.ObservableMap$PropertyEvent[] events>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i1);

        return r2;
    }

    public static void <clinit>()
    {
        <groovy.util.ObservableMap$MultiPropertyEvent: java.lang.String MULTI_PROPERTY> = "groovy_util_ObservableMap_MultiPropertyEvent_MULTI";

        return;
    }
}
