public final class com.google.common.primitives.Bytes extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.primitives.Bytes r0;

        r0 := @this: com.google.common.primitives.Bytes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int hashCode(byte)
    {
        int $i1;
        byte b0;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        return $i1;
    }

    public static boolean contains(byte[], byte)
    {
        byte[] r0;
        byte b1, b2;
        int i0, i3, $i4, $i5;

        r0 := @parameter0: byte[];

        b2 := @parameter1: byte;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        b1 = r0[i3];

        $i4 = (int) b1;

        $i5 = (int) b2;

        if $i4 != $i5 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static int indexOf(byte[], byte)
    {
        byte[] r0;
        byte b0;
        int $i1, $i2;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        $i1 = lengthof r0;

        $i2 = staticinvoke <com.google.common.primitives.Bytes: int indexOf(byte[],byte,int,int)>(r0, b0, 0, $i1);

        return $i2;
    }

    private static int indexOf(byte[], byte, int, int)
    {
        byte[] r0;
        byte b2, $b3;
        int i0, i1, i4, $i5, $i6, $i8;

        r0 := @parameter0: byte[];

        b2 := @parameter1: byte;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i4 = i0;

     label1:
        if i4 >= i1 goto label3;

        $b3 = r0[i4];

        $i5 = (int) $b3;

        $i6 = (int) b2;

        if $i5 != $i6 goto label2;

        return i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i8 = (int) -1;

        return $i8;
    }

    public static int indexOf(byte[], byte[])
    {
        byte[] r0, r1;
        byte $b7, $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i9, i10, $i11, $i12, $i14;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "array");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "target");

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        i9 = 0;

     label2:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        $i3 = $i2 - $i1;

        $i4 = $i3 + 1;

        if i9 >= $i4 goto label7;

        i10 = 0;

     label3:
        $i5 = lengthof r1;

        if i10 >= $i5 goto label5;

        $i6 = i9 + i10;

        $b8 = r0[$i6];

        $b7 = r1[i10];

        $i11 = (int) $b8;

        $i12 = (int) $b7;

        if $i11 == $i12 goto label4;

        goto label6;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        return i9;

     label6:
        i9 = i9 + 1;

        goto label2;

     label7:
        $i14 = (int) -1;

        return $i14;
    }

    public static int lastIndexOf(byte[], byte)
    {
        byte[] r0;
        byte b0;
        int $i1, $i2;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        $i1 = lengthof r0;

        $i2 = staticinvoke <com.google.common.primitives.Bytes: int lastIndexOf(byte[],byte,int,int)>(r0, b0, 0, $i1);

        return $i2;
    }

    private static int lastIndexOf(byte[], byte, int, int)
    {
        byte[] r0;
        byte b2, $b3;
        int i0, i1, i4, $i5, $i6, $i8, $i10;

        r0 := @parameter0: byte[];

        b2 := @parameter1: byte;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i4 = i0 - 1;

     label1:
        if i4 < i1 goto label3;

        $b3 = r0[i4];

        $i5 = (int) $b3;

        $i6 = (int) b2;

        if $i5 != $i6 goto label2;

        return i4;

     label2:
        $i8 = (int) -1;

        i4 = i4 + $i8;

        goto label1;

     label3:
        $i10 = (int) -1;

        return $i10;
    }

    public static transient byte[] concat(byte[][])
    {
        byte[] r1, r2, r3;
        byte[][] r0;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8;

        r0 := @parameter0: byte[][];

        i3 = 0;

        i4 = lengthof r0;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        r2 = r0[i5];

        $i2 = lengthof r2;

        i3 = i3 + $i2;

        i5 = i5 + 1;

        goto label1;

     label2:
        r3 = newarray (byte)[i3];

        i6 = 0;

        i7 = lengthof r0;

        i8 = 0;

     label3:
        if i8 >= i7 goto label4;

        r1 = r0[i8];

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, i6, $i0);

        $i1 = lengthof r1;

        i6 = i6 + $i1;

        i8 = i8 + 1;

        goto label3;

     label4:
        return r3;
    }

    public static byte[] ensureCapacity(byte[], int, int)
    {
        byte[] r4, $r5;
        java.lang.Object[] $r0, $r2;
        java.lang.Integer $r1, $r3;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;

        r4 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Invalid minLength: %s", $r0);

        if i1 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[0] = $r3;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "Invalid padding: %s", $r2);

        $i2 = lengthof r4;

        if $i2 >= i0 goto label5;

        $i3 = i0 + i1;

        $r5 = staticinvoke <com.google.common.primitives.Bytes: byte[] copyOf(byte[],int)>(r4, $i3);

        goto label6;

     label5:
        $r5 = r4;

     label6:
        return $r5;
    }

    private static byte[] copyOf(byte[], int)
    {
        byte[] r0, r1;
        int i0, $i1, $i2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r0 = newarray (byte)[i0];

        $i1 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i2);

        return r0;
    }

    public static byte[] toArray(java.util.Collection)
    {
        byte[] r2, $r6;
        java.lang.Object[] $r1;
        java.util.Collection r0;
        com.google.common.primitives.Bytes$ByteArrayAsList $r5;
        byte $b1;
        int i0, i2;
        java.lang.Object $r3;
        java.lang.Byte $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        $z0 = r0 instanceof com.google.common.primitives.Bytes$ByteArrayAsList;

        if $z0 == 0 goto label1;

        $r5 = (com.google.common.primitives.Bytes$ByteArrayAsList) r0;

        $r6 = virtualinvoke $r5.<com.google.common.primitives.Bytes$ByteArrayAsList: byte[] toByteArray()>();

        return $r6;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray()>();

        i0 = lengthof $r1;

        r2 = newarray (byte)[i0];

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r3 = $r1[i2];

        $r4 = (java.lang.Byte) $r3;

        $b1 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        r2[i2] = $b1;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public static transient java.util.List asList(byte[])
    {
        byte[] r0;
        java.util.List $r2;
        int $i0;
        com.google.common.primitives.Bytes$ByteArrayAsList $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;

     label1:
        $r1 = new com.google.common.primitives.Bytes$ByteArrayAsList;

        specialinvoke $r1.<com.google.common.primitives.Bytes$ByteArrayAsList: void <init>(byte[])>(r0);

        return $r1;
    }

    static int access$000(byte[], byte, int, int)
    {
        byte[] r0;
        byte b0;
        int i1, i2, $i3;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <com.google.common.primitives.Bytes: int indexOf(byte[],byte,int,int)>(r0, b0, i1, i2);

        return $i3;
    }

    static int access$100(byte[], byte, int, int)
    {
        byte[] r0;
        byte b0;
        int i1, i2, $i3;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <com.google.common.primitives.Bytes: int lastIndexOf(byte[],byte,int,int)>(r0, b0, i1, i2);

        return $i3;
    }
}
