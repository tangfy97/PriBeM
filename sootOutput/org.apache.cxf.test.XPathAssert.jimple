public final class org.apache.cxf.test.XPathAssert extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.test.XPathAssert r0;

        r0 := @this: org.apache.cxf.test.XPathAssert;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.NodeList assertValid(java.lang.String, org.w3c.dom.Node, java.util.Map) throws java.lang.Exception
    {
        java.lang.Throwable $r19;
        javax.xml.xpath.XPath $r2;
        java.lang.NullPointerException $r16;
        org.w3c.dom.Node r0;
        java.util.Map r1;
        int $i0;
        java.lang.String r3, $r12, $r14;
        org.w3c.dom.NodeList r6;
        junit.framework.AssertionFailedError $r18;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r17;
        javax.xml.namespace.QName $r4;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Node;

        r1 := @parameter2: java.util.Map;

        if r0 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("Node cannot be null.");

        throw $r16;

     label1:
        $r2 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r1);

        $r4 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r5 = interfaceinvoke $r2.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>(r3, r0, $r4);

        r6 = (org.w3c.dom.NodeList) $r5;

        $i0 = interfaceinvoke r6.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label2;

        $r18 = new junit.framework.AssertionFailedError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to select any nodes for expression:\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from document:\n");

        $r12 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r14);

        $r19 = (java.lang.Throwable) $r18;

        throw $r19;

     label2:
        return r6;
    }

    public static void assertValidBoolean(java.lang.String, org.w3c.dom.Node, java.util.Map) throws java.lang.Exception
    {
        java.lang.Throwable $r29, $r30;
        javax.xml.xpath.XPath $r2;
        java.lang.NullPointerException $r24;
        org.w3c.dom.Node r0;
        java.util.Map r1;
        java.lang.Boolean r6;
        java.lang.String r3, $r12, $r14, $r20, $r22;
        boolean $z0;
        junit.framework.AssertionFailedError $r26, $r28;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r17, $r18, $r19, $r21, $r25, $r27;
        javax.xml.namespace.QName $r4;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Node;

        r1 := @parameter2: java.util.Map;

        if r0 != null goto label1;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("Node cannot be null.");

        throw $r24;

     label1:
        $r2 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r1);

        $r4 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName BOOLEAN>;

        $r5 = interfaceinvoke $r2.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>(r3, r0, $r4);

        r6 = (java.lang.Boolean) $r5;

        if r6 != null goto label2;

        $r26 = new junit.framework.AssertionFailedError;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to select any nodes for expression:\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from document:\n");

        $r20 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r22);

        $r29 = (java.lang.Throwable) $r26;

        throw $r29;

     label2:
        $z0 = virtualinvoke r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label3;

        $r28 = new junit.framework.AssertionFailedError;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Boolean XPath assertion evaluated to false:\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from document:\n");

        $r12 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r14);

        $r30 = (java.lang.Throwable) $r28;

        throw $r30;

     label3:
        return;
    }

    private static java.lang.String writeNodeToString(org.w3c.dom.Node)
    {
        java.io.ByteArrayOutputStream $r0;
        javax.xml.transform.TransformerException $r3;
        org.w3c.dom.Node r1;
        java.lang.String $r2;
        java.lang.RuntimeException $r4;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.cxf.helpers.DOMUtils: void writeXml(org.w3c.dom.Node,java.io.OutputStream)>(r1, $r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r2;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public static org.w3c.dom.NodeList assertInvalid(java.lang.String, org.w3c.dom.Node, java.util.Map) throws java.lang.Exception
    {
        java.lang.Throwable $r19;
        javax.xml.xpath.XPath $r2;
        java.lang.NullPointerException $r16;
        org.w3c.dom.Node r0;
        java.util.Map r1;
        int $i0;
        java.lang.String r3, $r7, $r14;
        org.w3c.dom.NodeList r6;
        junit.framework.AssertionFailedError $r18;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r17;
        javax.xml.namespace.QName $r4;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Node;

        r1 := @parameter2: java.util.Map;

        if r0 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("Node cannot be null.");

        throw $r16;

     label1:
        $r2 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r1);

        $r4 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r5 = interfaceinvoke $r2.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>(r3, r0, $r4);

        r6 = (org.w3c.dom.NodeList) $r5;

        $i0 = interfaceinvoke r6.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label2;

        $r7 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r0);

        $r18 = new junit.framework.AssertionFailedError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found multiple nodes for expression:\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r14);

        $r19 = (java.lang.Throwable) $r18;

        throw $r19;

     label2:
        return r6;
    }

    public static void assertXPathEquals(java.lang.String, java.lang.String, org.w3c.dom.Node, java.util.Map) throws java.lang.Exception
    {
        java.lang.Throwable $r25;
        javax.xml.xpath.XPath $r1, $r7;
        javax.xml.xpath.XPathExpression $r3, $r8;
        java.util.Map r0;
        org.w3c.dom.Node r4, r21;
        java.lang.String r2, $r16, $r18, r19, $r20, $r22;
        boolean $z0, $z1;
        junit.framework.AssertionFailedError $r24;
        java.lang.Object $r6, $r10;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r23;
        javax.xml.namespace.QName $r5, $r9;

        r2 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r4 := @parameter2: org.w3c.dom.Node;

        r0 := @parameter3: java.util.Map;

        $r1 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r0);

        $r3 = interfaceinvoke $r1.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r2);

        $r5 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODE>;

        $r6 = interfaceinvoke $r3.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r4, $r5);

        $z0 = $r6 instanceof org.w3c.dom.Node;

        if $z0 == 0 goto label1;

        r21 = (org.w3c.dom.Node) $r6;

        $r22 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getContent(org.w3c.dom.Node)>(r21);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r19, $r22);

        return;

     label1:
        $r7 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r0);

        $r8 = interfaceinvoke $r7.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r2);

        $r9 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName STRING>;

        $r10 = interfaceinvoke $r8.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r4, $r9);

        $z1 = $r10 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r20 = (java.lang.String) $r10;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r19, $r20);

        return;

     label2:
        $r24 = new junit.framework.AssertionFailedError;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No nodes were found for expression: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in document ");

        $r16 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r18);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;
    }

    public static void assertXPathEquals(java.lang.String, javax.xml.namespace.QName, org.w3c.dom.Node, java.util.Map) throws java.lang.Exception
    {
        java.lang.Throwable $r27;
        javax.xml.xpath.XPath $r1, $r7;
        javax.xml.xpath.XPathExpression $r3, $r8;
        java.util.Map r0;
        org.w3c.dom.Node r4, r24;
        java.lang.String r2, $r16, $r18, $r19, $r22;
        boolean $z0, $z1;
        junit.framework.AssertionFailedError $r26;
        java.lang.Object $r6, $r10;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r25;
        javax.xml.namespace.QName $r5, $r9, $r20, r21, $r23;

        r2 := @parameter0: java.lang.String;

        r21 := @parameter1: javax.xml.namespace.QName;

        r4 := @parameter2: org.w3c.dom.Node;

        r0 := @parameter3: java.util.Map;

        $r1 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r0);

        $r3 = interfaceinvoke $r1.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r2);

        $r5 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODE>;

        $r6 = interfaceinvoke $r3.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r4, $r5);

        $z0 = $r6 instanceof org.w3c.dom.Node;

        if $z0 == 0 goto label1;

        r24 = (org.w3c.dom.Node) $r6;

        $r22 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getContent(org.w3c.dom.Node)>(r24);

        $r23 = staticinvoke <org.apache.cxf.helpers.DOMUtils: javax.xml.namespace.QName createQName(java.lang.String,org.w3c.dom.Node)>($r22, r24);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r21, $r23);

        return;

     label1:
        $r7 = staticinvoke <org.apache.cxf.test.XPathAssert: javax.xml.xpath.XPath createXPath(java.util.Map)>(r0);

        $r8 = interfaceinvoke $r7.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r2);

        $r9 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName STRING>;

        $r10 = interfaceinvoke $r8.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r4, $r9);

        $z1 = $r10 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r19 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r20 = staticinvoke <org.apache.cxf.helpers.DOMUtils: javax.xml.namespace.QName createQName(java.lang.String,org.w3c.dom.Node)>($r19, r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r21, $r20);

        return;

     label2:
        $r26 = new junit.framework.AssertionFailedError;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No nodes were found for expression: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in document ");

        $r16 = staticinvoke <org.apache.cxf.test.XPathAssert: java.lang.String writeNodeToString(org.w3c.dom.Node)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>($r18);

        $r27 = (java.lang.Throwable) $r26;

        throw $r27;
    }

    public static void assertNoFault(org.w3c.dom.Node) throws java.lang.Exception
    {
        java.util.HashMap $r0;
        org.w3c.dom.Node r1;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s", "http://schemas.xmlsoap.org/soap/envelope/");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s12", "http://www.w3.org/2003/05/soap-envelope");

        staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertInvalid(java.lang.String,org.w3c.dom.Node,java.util.Map)>("/s:Envelope/s:Body/s:Fault", r1, $r0);

        staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertInvalid(java.lang.String,org.w3c.dom.Node,java.util.Map)>("/s12:Envelope/s12:Body/s12:Fault", r1, $r0);

        return;
    }

    public static void assertFault(org.w3c.dom.Node) throws java.lang.Exception
    {
        java.util.HashMap $r0;
        org.w3c.dom.Node r1;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s", "http://schemas.xmlsoap.org/soap/envelope/");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s12", "http://www.w3.org/2003/05/soap-envelope");

        staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertValid(java.lang.String,org.w3c.dom.Node,java.util.Map)>("/s:Envelope/s:Body/s:Fault", r1, $r0);

        staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertValid(java.lang.String,org.w3c.dom.Node,java.util.Map)>("/s12:Envelope/s12:Body/s12:Fault", r1, $r0);

        return;
    }

    public static javax.xml.xpath.XPath createXPath(java.util.Map) throws java.lang.Exception
    {
        javax.xml.xpath.XPathFactory $r0;
        org.apache.cxf.test.XPathAssert$MapNamespaceContext $r3;
        javax.xml.xpath.XPath $r1;
        java.util.Map r2;

        r2 := @parameter0: java.util.Map;

        $r0 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        if r2 == null goto label1;

        $r3 = new org.apache.cxf.test.XPathAssert$MapNamespaceContext;

        specialinvoke $r3.<org.apache.cxf.test.XPathAssert$MapNamespaceContext: void <init>(java.util.Map)>(r2);

        interfaceinvoke $r1.<javax.xml.xpath.XPath: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>($r3);

     label1:
        return $r1;
    }
}
