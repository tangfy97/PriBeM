public class com.hp.hpl.jena.sparql.engine.binding.BindingFixed extends com.hp.hpl.jena.sparql.engine.binding.BindingWrapped
{
    int varSize;
    int calcHashCode;
    private boolean haveDoneHashCode;

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingFixed r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingWrapped: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r1);

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int varSize> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int calcHashCode> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: boolean haveDoneHashCode> = 0;

        return;
    }

    private int calcHashCode()
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.sparql.core.Var r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingFixed r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        i5 = 0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: java.util.Iterator vars()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.sparql.core.Var) $r2;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r3);

        if $r4 != null goto label2;

        goto label1;

     label2:
        $i0 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: int hashCode()>();

        $i1 = i5 ^ $i0;

        $i2 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.Var: int hashCode()>();

        i5 = $i1 ^ $i2;

        $i3 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int varSize>;

        $i4 = $i3 + 1;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int varSize> = $i4;

        goto label1;

     label3:
        return i5;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingFixed r0, r2;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.sparql.engine.binding.BindingFixed) r1;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingBase: boolean equals(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r2);

        return $z1;
    }

    public int hashCode()
    {
        int $i0, $i1;
        com.hp.hpl.jena.sparql.engine.binding.BindingFixed r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: boolean haveDoneHashCode>;

        if $z0 != 0 goto label1;

        $i1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int calcHashCode()>();

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int calcHashCode> = $i1;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: boolean haveDoneHashCode> = 1;

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingFixed: int calcHashCode>;

        return $i0;
    }

    protected void checkAdd1(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.Var r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingFixed r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingFixed;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        return;
    }
}
