public class com.google.gxp.compiler.base.TemplateType extends com.google.gxp.compiler.base.Type
{
    private final com.google.gxp.compiler.base.TemplateName templateName;

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.base.TemplateName)
    {
        com.google.gxp.compiler.base.Node r1;
        com.google.gxp.compiler.base.TemplateType r0;
        com.google.gxp.compiler.base.TemplateName r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.base.TemplateName;

        specialinvoke r0.<com.google.gxp.compiler.base.Type: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.gxp.compiler.base.TemplateName) $r3;

        r0.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName templateName> = $r4;

        return;
    }

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, com.google.gxp.compiler.base.TemplateName)
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        com.google.gxp.compiler.base.TemplateType r0;
        com.google.gxp.compiler.base.TemplateName r3, $r5;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.gxp.compiler.base.TemplateName;

        specialinvoke r0.<com.google.gxp.compiler.base.Type: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (com.google.gxp.compiler.base.TemplateName) $r4;

        r0.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName templateName> = $r5;

        return;
    }

    public com.google.gxp.compiler.base.TemplateName getTemplateName()
    {
        com.google.gxp.compiler.base.TemplateType r0;
        com.google.gxp.compiler.base.TemplateName $r1;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        $r1 = r0.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName templateName>;

        return $r1;
    }

    public boolean onlyAllowedInParam()
    {
        com.google.gxp.compiler.base.TemplateType r0;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        return 1;
    }

    public boolean takesDefaultParam()
    {
        com.google.gxp.compiler.base.TemplateType r0;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        return 0;
    }

    public com.google.gxp.compiler.base.Expression parseObjectConstant(java.lang.String, com.google.gxp.compiler.base.ObjectConstant, com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.base.ObjectConstant r0, $r2;
        com.google.gxp.compiler.alerts.AlertSink r4;
        com.google.gxp.compiler.base.TemplateType r1;
        java.lang.String r3;

        r1 := @this: com.google.gxp.compiler.base.TemplateType;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: com.google.gxp.compiler.base.ObjectConstant;

        r4 := @parameter2: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.ObjectConstant: com.google.gxp.compiler.base.ObjectConstant withType(com.google.gxp.compiler.base.Type)>(r1);

        return $r2;
    }

    public java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)
    {
        com.google.gxp.compiler.base.TypeVisitor r0;
        com.google.gxp.compiler.base.TemplateType r1;
        java.lang.Object $r2;

        r1 := @this: com.google.gxp.compiler.base.TemplateType;

        r0 := @parameter0: com.google.gxp.compiler.base.TypeVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.TypeVisitor: java.lang.Object visitTemplateType(com.google.gxp.compiler.base.TemplateType)>(r1);

        return $r2;
    }

    public boolean matches(com.google.gxp.compiler.base.Type)
    {
        com.google.gxp.compiler.base.TemplateType r1, r2;
        com.google.gxp.compiler.base.TemplateName $r3, $r4;
        com.google.gxp.compiler.base.Type r0;
        boolean $z0, $z1;

        r2 := @this: com.google.gxp.compiler.base.TemplateType;

        r0 := @parameter0: com.google.gxp.compiler.base.Type;

        $z0 = r0 instanceof com.google.gxp.compiler.base.TemplateType;

        if $z0 == 0 goto label1;

        r1 = (com.google.gxp.compiler.base.TemplateType) r0;

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        com.google.gxp.compiler.base.TemplateType r0;
        com.google.gxp.compiler.base.TemplateName $r1;
        java.lang.String $r2;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        $r1 = r0.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName templateName>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.TemplateName: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.TemplateType r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.base.TemplateType;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.base.TemplateType) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.base.TemplateType: boolean equals(com.google.gxp.compiler.base.TemplateType)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.TemplateType)
    {
        com.google.gxp.compiler.base.TemplateType r0, r1;
        com.google.gxp.compiler.base.TemplateName $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.TemplateType;

        r1 := @parameter0: com.google.gxp.compiler.base.TemplateType;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.TemplateType: boolean equalsType(com.google.gxp.compiler.base.Type)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        com.google.gxp.compiler.base.TemplateType r1;
        com.google.gxp.compiler.base.TemplateName $r3;
        java.lang.Integer $r2;

        r1 := @this: com.google.gxp.compiler.base.TemplateType;

        $r0 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.TemplateType: int typeHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.TemplateType: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $r0[1] = $r3;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
