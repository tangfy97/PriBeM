class org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream extends org.apache.cxf.io.AbstractWrappedOutputStream implements org.apache.cxf.io.CopyingOutputStream
{
    protected javax.servlet.http.HttpServletResponse response;
    private org.apache.cxf.message.Message outMessage;
    final org.apache.cxf.transport.http.AbstractHTTPDestination this$0;

    void <init>(org.apache.cxf.transport.http.AbstractHTTPDestination, org.apache.cxf.message.Message, javax.servlet.http.HttpServletResponse)
    {
        org.apache.cxf.transport.http.AbstractHTTPDestination r1;
        org.apache.cxf.message.Message r2;
        javax.servlet.http.HttpServletResponse r3;
        org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream r0;

        r0 := @this: org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream;

        r1 := @parameter0: org.apache.cxf.transport.http.AbstractHTTPDestination;

        r2 := @parameter1: org.apache.cxf.message.Message;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.transport.http.AbstractHTTPDestination this$0> = r1;

        specialinvoke r0.<org.apache.cxf.io.AbstractWrappedOutputStream: void <init>()>();

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.message.Message outMessage> = r2;

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: javax.servlet.http.HttpServletResponse response> = r3;

        return;
    }

    public int copyFrom(java.io.InputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3;
        int $i0, $i1;
        org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream r0;
        boolean $z0;
        java.io.InputStream r2;

        r0 := @this: org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream;

        r2 := @parameter0: java.io.InputStream;

        $z0 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: boolean written>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: void onFirstWrite()>();

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: boolean written> = 1;

     label1:
        $r1 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r1 == null goto label2;

        $r3 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream>;

        $i1 = staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r2, $r3);

        return $i1;

     label2:
        $i0 = staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream,int)>(r2, r0, 4096);

        return $i0;
    }

    protected void onFirstWrite() throws java.io.IOException
    {
        org.apache.cxf.transport.http.AbstractHTTPDestination $r2;
        java.io.OutputStream $r3;
        org.apache.cxf.message.Message $r1;
        org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream r0;

        r0 := @this: org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream;

        $r2 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.transport.http.AbstractHTTPDestination this$0>;

        $r1 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.message.Message outMessage>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.transport.http.AbstractHTTPDestination: java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)>($r1);

        if null == $r3 goto label1;

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream> = $r3;

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3, $r6, $r7;
        org.apache.cxf.message.Message $r4;
        javax.servlet.http.HttpServletResponse $r2;
        org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream r0;
        org.apache.cxf.transport.http.AbstractHTTPDestination $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream;

        $z0 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: boolean written>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r3 != null goto label1;

        $r5 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.transport.http.AbstractHTTPDestination this$0>;

        $r4 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: org.apache.cxf.message.Message outMessage>;

        $r6 = virtualinvoke $r5.<org.apache.cxf.transport.http.AbstractHTTPDestination: java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)>($r4, 0);

        if null == $r6 goto label1;

        r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream> = $r6;

     label1:
        $r7 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream>;

        if $r7 == null goto label2;

        $r1 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: java.io.OutputStream wrappedStream>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        $r2 = r0.<org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream: javax.servlet.http.HttpServletResponse response>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

     label2:
        return;
    }
}
