public class org.codehaus.groovy.classgen.MethodCallerMultiAdapter extends java.lang.Object
{
    private org.codehaus.groovy.classgen.MethodCaller[] methods;
    boolean skipSpreadSafeAndSafe;
    public static final int MAX_ARGS;

    public void <init>()
    {
        org.codehaus.groovy.classgen.MethodCallerMultiAdapter r0;

        r0 := @this: org.codehaus.groovy.classgen.MethodCallerMultiAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.codehaus.groovy.classgen.MethodCallerMultiAdapter newStatic(java.lang.Class, java.lang.String, boolean, boolean)
    {
        java.lang.StringBuffer $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r20, $r21, $r24, $r26, $r27, $r28, $r31, $r33, $r34, $r35, $r38, $r40, $r41, $r44, $r46, $r47, $r48, $r51, $r53, $r54, $r55;
        java.lang.String r3, $r10, $r15, $r22, $r29, $r36, $r42, $r49, $r56;
        org.codehaus.groovy.classgen.MethodCallerMultiAdapter $r0;
        boolean z0, z1;
        org.codehaus.groovy.classgen.MethodCaller[] $r1, $r5, $r17, $r19, $r25, $r32, $r39, $r45, $r52;
        org.codehaus.groovy.classgen.MethodCaller $r4, $r6, $r11, $r16, $r23, $r30, $r37, $r43, $r50, $r57;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Class r2;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $r0 = new org.codehaus.groovy.classgen.MethodCallerMultiAdapter;

        specialinvoke $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: void <init>()>();

        $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: boolean skipSpreadSafeAndSafe> = z0;

        if z1 == 0 goto label6;

        $i0 = specialinvoke $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: int numberOfBaseMethods()>();

        $i1 = 2 * $i0;

        $r17 = newarray (org.codehaus.groovy.classgen.MethodCaller)[$i1];

        $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods> = $r17;

        i12 = 0;

     label1:
        if i12 > 0 goto label4;

        $r39 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i7 = i12 * $i0;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        $r43 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r42);

        $r39[$i7] = $r43;

        if z0 == 0 goto label2;

        goto label3;

     label2:
        $r45 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i8 = i12 * $i0;

        $i9 = $i8 + 1;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Safe");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        $r50 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r49);

        $r45[$i9] = $r50;

        $r52 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i10 = i12 * $i0;

        $i11 = $i10 + 2;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SpreadSafe");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        $r57 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r56);

        $r52[$i11] = $r57;

     label3:
        i12 = i12 + 1;

        goto label1;

     label4:
        $r19 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i2 = 1 * $i0;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("N");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r22);

        $r19[$i2] = $r23;

        if z0 != 0 goto label5;

        $r25 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i3 = 1 * $i0;

        $i4 = $i3 + 1;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("N");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Safe");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $r30 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r29);

        $r25[$i4] = $r30;

        $r32 = $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $i5 = 1 * $i0;

        $i6 = $i5 + 2;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("N");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SpreadSafe");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r36);

        $r32[$i6] = $r37;

     label5:
        goto label8;

     label6:
        if z0 != 0 goto label7;

        $r5 = newarray (org.codehaus.groovy.classgen.MethodCaller)[3];

        $r6 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, r3);

        $r5[0] = $r6;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Safe");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r10);

        $r5[1] = $r11;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SpreadSafe");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, $r15);

        $r5[2] = $r16;

        $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods> = $r5;

        goto label8;

     label7:
        $r1 = newarray (org.codehaus.groovy.classgen.MethodCaller)[1];

        $r4 = staticinvoke <org.codehaus.groovy.classgen.MethodCaller: org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class,java.lang.String)>(r2, r3);

        $r1[0] = $r4;

        $r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods> = $r1;

     label8:
        return $r0;
    }

    public void call(groovyjarjarasm.asm.MethodVisitor, int, boolean, boolean)
    {
        org.codehaus.groovy.classgen.MethodCallerMultiAdapter r0;
        groovyjarjarasm.asm.MethodVisitor r2;
        byte b5, b7, b8;
        int i0, $i1, $i2, $i3, $i4, i6;
        boolean z0, z1, $z2, $z3;
        org.codehaus.groovy.classgen.MethodCaller[] $r1;
        org.codehaus.groovy.classgen.MethodCaller $r3;

        r0 := @this: org.codehaus.groovy.classgen.MethodCallerMultiAdapter;

        r2 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        b5 = 0;

        b8 = 0;

        b7 = 0;

        if z0 == 0 goto label1;

        $z3 = r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: boolean skipSpreadSafeAndSafe>;

        if $z3 != 0 goto label1;

        b5 = 1;

        b8 = 1;

        b7 = 1;

     label1:
        if z1 == 0 goto label2;

        $z2 = r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: boolean skipSpreadSafeAndSafe>;

        if $z2 != 0 goto label2;

        b5 = 2;

        b8 = 2;

        b7 = 2;

     label2:
        if i0 > 0 goto label3;

        if i0 >= 0 goto label4;

     label3:
        $i1 = specialinvoke r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: int numberOfBaseMethods()>();

        $i2 = 1 * $i1;

        i6 = b8 + $i2;

        goto label5;

     label4:
        $i3 = specialinvoke r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: int numberOfBaseMethods()>();

        $i4 = i0 * $i3;

        i6 = b7 + $i4;

     label5:
        $r1 = r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: org.codehaus.groovy.classgen.MethodCaller[] methods>;

        $r3 = $r1[i6];

        virtualinvoke $r3.<org.codehaus.groovy.classgen.MethodCaller: void call(groovyjarjarasm.asm.MethodVisitor)>(r2);

        return;
    }

    private int numberOfBaseMethods()
    {
        org.codehaus.groovy.classgen.MethodCallerMultiAdapter r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.classgen.MethodCallerMultiAdapter;

        $z0 = r0.<org.codehaus.groovy.classgen.MethodCallerMultiAdapter: boolean skipSpreadSafeAndSafe>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 3;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.classgen.MethodCallerMultiAdapter: int MAX_ARGS> = 0;

        return;
    }
}
