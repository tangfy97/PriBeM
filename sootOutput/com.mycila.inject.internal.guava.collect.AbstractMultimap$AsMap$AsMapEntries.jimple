class com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries extends com.mycila.inject.internal.guava.collect.Maps$EntrySet
{
    final com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1;

    void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap)
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$EntrySet: void <init>()>();

        return;
    }

    java.util.Map map()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapIterator $r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries r1;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap $r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries;

        $r0 = new com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapIterator;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapIterator: void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap)>($r2);

        return $r0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map $r2;
        java.util.Set $r3;
        java.lang.Object r4;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries;

        r4 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $z0 = staticinvoke <com.mycila.inject.internal.guava.collect.Collections2: boolean safeContains(java.util.Collection,java.lang.Object)>($r3, r4);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r2;
        java.lang.Object r1, $r5;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap $r3;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap$AsMapEntries: com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap this$1>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.AbstractMultimap$AsMap: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <com.mycila.inject.internal.guava.collect.AbstractMultimap: int access$500(com.mycila.inject.internal.guava.collect.AbstractMultimap,java.lang.Object)>($r4, $r5);

        return 1;
    }
}
