public class org.apache.solr.client.solrj.request.DocumentAnalysisRequest extends org.apache.solr.client.solrj.SolrRequest
{
    private java.util.List documents;
    private java.lang.String query;
    private boolean showMatch;

    public void <init>()
    {
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, "/analysis/document");

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents> = $r2;

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: boolean showMatch> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.solr.client.solrj.SolrRequest$METHOD $r2;
        java.lang.String r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r2, r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents> = $r3;

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: boolean showMatch> = 0;

        return;
    }

    public java.util.Collection getContentStreams() throws java.io.IOException
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.lang.String getXML()>();

        $r2 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.util.Collection toContentStreams(java.lang.String,java.lang.String)>($r1, "application/xml; charset=UTF-8");

        return $r2;
    }

    public org.apache.solr.common.params.ModifiableSolrParams getParams()
    {
        org.apache.solr.common.params.ModifiableSolrParams $r0;
        java.lang.String[] $r3, $r5;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r1;
        java.lang.String $r2, $r4, $r6;
        boolean $z0;

        r1 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r0 = new org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: void <init>()>();

        $r2 = r1.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.lang.String query>;

        if $r2 == null goto label1;

        $r3 = newarray (java.lang.String)[1];

        $r4 = r1.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.lang.String query>;

        $r3[0] = $r4;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.query", $r3);

        $r5 = newarray (java.lang.String)[1];

        $z0 = r1.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: boolean showMatch>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r5[0] = $r6;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.showmatch", $r5);

     label1:
        return $r0;
    }

    public org.apache.solr.client.solrj.response.DocumentAnalysisResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.solr.client.solrj.SolrServer r1;
        org.apache.solr.client.solrj.response.DocumentAnalysisResponse $r0;
        long $l0, $l1, $l2;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r2;
        org.apache.solr.common.util.NamedList $r3;

        r2 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: org.apache.solr.client.solrj.SolrServer;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new org.apache.solr.client.solrj.response.DocumentAnalysisResponse;

        specialinvoke $r0.<org.apache.solr.client.solrj.response.DocumentAnalysisResponse: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.SolrServer: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>(r2);

        virtualinvoke $r0.<org.apache.solr.client.solrj.response.DocumentAnalysisResponse: void setResponse(org.apache.solr.common.util.NamedList)>($r3);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        virtualinvoke $r0.<org.apache.solr.client.solrj.response.DocumentAnalysisResponse: void setElapsedTime(long)>($l2);

        return $r0;
    }

    java.lang.String getXML() throws java.io.IOException
    {
        java.util.Iterator $r3;
        java.io.StringWriter $r0;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;
        org.apache.solr.common.SolrInputDocument r6;

        r1 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("<docs>");

        $r2 = r1.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.solr.common.SolrInputDocument) $r5;

        staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: void writeXML(org.apache.solr.common.SolrInputDocument,java.io.Writer)>(r6, $r0);

        goto label1;

     label2:
        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("</docs>");

        virtualinvoke $r0.<java.io.StringWriter: void flush()>();

        $r4 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r7 = $r4;

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

    public org.apache.solr.client.solrj.request.DocumentAnalysisRequest addDocument(org.apache.solr.common.SolrInputDocument)
    {
        java.util.List $r2;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        org.apache.solr.common.SolrInputDocument r1;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: org.apache.solr.common.SolrInputDocument;

        $r2 = r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.apache.solr.client.solrj.request.DocumentAnalysisRequest addDocuments(java.util.Collection)
    {
        java.util.List $r2;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        java.util.Collection r1;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.apache.solr.client.solrj.request.DocumentAnalysisRequest setQuery(java.lang.String)
    {
        java.lang.String r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.lang.String query> = r1;

        return r0;
    }

    public org.apache.solr.client.solrj.request.DocumentAnalysisRequest setShowMatch(boolean)
    {
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        z0 := @parameter0: boolean;

        r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: boolean showMatch> = z0;

        return r0;
    }

    public java.util.List getDocuments()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.util.List documents>;

        return $r1;
    }

    public java.lang.String getQuery()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: java.lang.String query>;

        return $r1;
    }

    public boolean isShowMatch()
    {
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $z0 = r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: boolean showMatch>;

        return $z0;
    }

    public volatile org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        org.apache.solr.client.solrj.SolrServer r1;
        org.apache.solr.client.solrj.response.DocumentAnalysisResponse $r2;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        r1 := @parameter0: org.apache.solr.client.solrj.SolrServer;

        $r2 = virtualinvoke r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: org.apache.solr.client.solrj.response.DocumentAnalysisResponse process(org.apache.solr.client.solrj.SolrServer)>(r1);

        return $r2;
    }

    public volatile org.apache.solr.common.params.SolrParams getParams()
    {
        org.apache.solr.client.solrj.request.DocumentAnalysisRequest r0;
        org.apache.solr.common.params.ModifiableSolrParams $r1;

        r0 := @this: org.apache.solr.client.solrj.request.DocumentAnalysisRequest;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.request.DocumentAnalysisRequest: org.apache.solr.common.params.ModifiableSolrParams getParams()>();

        return $r1;
    }
}
