public class org.apache.batik.dom.svg12.XBLOMDefinitionElement extends org.apache.batik.dom.svg12.XBLOMElement
{

    protected void <init>()
    {
        org.apache.batik.dom.svg12.XBLOMDefinitionElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        specialinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;
        org.apache.batik.dom.svg12.XBLOMDefinitionElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.dom.svg12.XBLOMDefinitionElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        return "definition";
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.svg12.XBLOMDefinitionElement $r0, r1;

        r1 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        $r0 = new org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        specialinvoke $r0.<org.apache.batik.dom.svg12.XBLOMDefinitionElement: void <init>()>();

        return $r0;
    }

    public java.lang.String getElementNamespaceURI()
    {
        java.lang.Object[] $r4;
        org.apache.batik.dom.svg12.XBLOMDefinitionElement r0;
        java.lang.Integer $r8;
        short $s0;
        org.w3c.dom.DOMException $r7;
        int $i1;
        java.lang.String $r1, $r2, $r3, $r6;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "element");

        $r2 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: java.lang.String getPrefix(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: java.lang.String lookupNamespaceURI(java.lang.String)>($r2);

        if $r3 != null goto label1;

        $r4 = newarray (java.lang.Object)[3];

        $r8 = new java.lang.Integer;

        $s0 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: short getNodeType()>();

        $i1 = (int) $s0;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i1);

        $r4[0] = $r8;

        $r6 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String getNodeName()>();

        $r4[1] = $r6;

        $r4[2] = $r2;

        $r7 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(14, "prefix", $r4);

        throw $r7;

     label1:
        return $r3;
    }

    public java.lang.String getElementLocalName()
    {
        java.lang.String $r1, $r2;
        org.apache.batik.dom.svg12.XBLOMDefinitionElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMDefinitionElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "element");

        $r2 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: java.lang.String getLocalName(java.lang.String)>($r1);

        return $r2;
    }
}
