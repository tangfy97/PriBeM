public class org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream extends java.lang.Object implements org.apache.jena.atlas.lib.Sink
{
    private java.io.OutputStream out;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream: java.io.OutputStream out> = r1;

        return;
    }

    public void send(java.nio.ByteBuffer)
    {
        java.io.OutputStream $r2;
        byte[] $r3;
        org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream r0;
        int $i0;
        java.io.IOException $r4;
        java.nio.ByteBuffer r1;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream;

        r1 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r2 = r0.<org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream: java.io.OutputStream out>;

        $r3 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.BufferingWriter: void access$000(java.io.IOException)>($r4);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        java.io.OutputStream $r1;
        java.io.IOException $r2;
        org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream;

     label1:
        $r1 = r0.<org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.BufferingWriter: void access$000(java.io.IOException)>($r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void flush()
    {
        java.io.OutputStream $r1;
        java.io.IOException $r2;
        org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream;

     label1:
        $r1 = r0.<org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.BufferingWriter: void access$000(java.io.IOException)>($r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public volatile void send(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.nio.ByteBuffer) r1;

        virtualinvoke r0.<org.apache.jena.atlas.io.BufferingWriter$SinkOutputStream: void send(java.nio.ByteBuffer)>($r2);

        return;
    }
}
