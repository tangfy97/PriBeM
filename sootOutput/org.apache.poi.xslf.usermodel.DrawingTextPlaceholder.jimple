public class org.apache.poi.xslf.usermodel.DrawingTextPlaceholder extends org.apache.poi.xslf.usermodel.DrawingTextBody
{
    private final org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder placeholder;

    public void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody, org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder)
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody r1;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder r2;

        r0 := @this: org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody;

        r2 := @parameter1: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.DrawingTextBody: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody)>(r1);

        r0.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder placeholder> = r2;

        return;
    }

    public java.lang.String getPlaceholderType()
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r1;
        org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        $r1 = r0.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder placeholder>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum getType()>();

        $r3 = virtualinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum: java.lang.String toString()>();

        return $r3;
    }

    public org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum getPlaceholderTypeEnum()
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder r0;
        org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum $r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        $r1 = r0.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder placeholder>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum getType()>();

        return $r2;
    }

    public boolean isPlaceholderCustom()
    {
        org.apache.poi.xslf.usermodel.DrawingTextPlaceholder r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.DrawingTextPlaceholder;

        $r1 = r0.<org.apache.poi.xslf.usermodel.DrawingTextPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder placeholder>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder: boolean getHasCustomPrompt()>();

        return $z0;
    }
}
