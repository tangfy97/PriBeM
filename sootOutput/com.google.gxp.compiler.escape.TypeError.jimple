public class com.google.gxp.compiler.escape.TypeError extends com.google.gxp.compiler.alerts.ErrorAlert
{

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.String, java.lang.String)
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r10;
        java.lang.String r3, r6, r9, $r11;
        com.google.gxp.compiler.escape.TypeError r0;

        r0 := @this: com.google.gxp.compiler.escape.TypeError;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but expected ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.google.gxp.compiler.alerts.ErrorAlert: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, $r11);

        return;
    }

    public void <init>(com.google.gxp.compiler.schema.Schema, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r2;
        com.google.gxp.compiler.base.Expression r1;
        com.google.gxp.compiler.schema.Schema $r4, r6;
        java.lang.String $r3, $r5, $r7;
        com.google.gxp.compiler.escape.TypeError r0;

        r0 := @this: com.google.gxp.compiler.escape.TypeError;

        r6 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: java.lang.String getDisplayName()>();

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r5 = virtualinvoke $r4.<com.google.gxp.compiler.schema.Schema: java.lang.String toString()>();

        $r7 = virtualinvoke r6.<com.google.gxp.compiler.schema.Schema: java.lang.String toString()>();

        specialinvoke r0.<com.google.gxp.compiler.escape.TypeError: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r5, $r7);

        return;
    }
}
