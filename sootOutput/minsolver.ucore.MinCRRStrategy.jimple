public final class minsolver.ucore.MinCRRStrategy extends java.lang.Object implements kodkod.engine.satlab.ReductionStrategy
{
    private java.util.Set excluded;

    public void <init>()
    {
        minsolver.ucore.MinCRRStrategy r0;

        r0 := @this: minsolver.ucore.MinCRRStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<minsolver.ucore.MinCRRStrategy: java.util.Set excluded> = null;

        return;
    }

    public final kodkod.util.ints.IntSet next(kodkod.engine.satlab.ResolutionTrace)
    {
        long $l4;
        minsolver.ucore.MinCRRStrategy r2;
        kodkod.util.ints.IntIterator $r4;
        java.util.HashSet $r12;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0, $z1;
        double $d0, $d1;
        kodkod.engine.satlab.ResolutionTrace r0;
        kodkod.util.ints.IntSet $r1, $r7, $r8, $r9, $r10, $r11;
        kodkod.engine.satlab.Clause $r6;
        java.util.Set $r3, $r5;

        r2 := @this: minsolver.ucore.MinCRRStrategy;

        r0 := @parameter0: kodkod.engine.satlab.ResolutionTrace;

        $r1 = interfaceinvoke r0.<kodkod.engine.satlab.ResolutionTrace: kodkod.util.ints.IntSet core()>();

        $r3 = r2.<minsolver.ucore.MinCRRStrategy: java.util.Set excluded>;

        if $r3 != null goto label1;

        $r12 = new java.util.HashSet;

        $i3 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int size()>();

        $d0 = (double) $i3;

        $d1 = $d0 * 0.75;

        $l4 = staticinvoke <java.lang.StrictMath: long round(double)>($d1);

        $i5 = (int) $l4;

        specialinvoke $r12.<java.util.HashSet: void <init>(int)>($i5);

        r2.<minsolver.ucore.MinCRRStrategy: java.util.Set excluded> = $r12;

     label1:
        $r4 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: kodkod.util.ints.IntIterator iterator(int,int)>(2147483647, -2147483648);

        goto label3;

     label2:
        $i0 = interfaceinvoke $r4.<kodkod.util.ints.IntIterator: int next()>();

        $r5 = r2.<minsolver.ucore.MinCRRStrategy: java.util.Set excluded>;

        $r6 = interfaceinvoke r0.<kodkod.engine.satlab.ResolutionTrace: kodkod.engine.satlab.Clause get(int)>($i0);

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        $i1 = interfaceinvoke r0.<kodkod.engine.satlab.ResolutionTrace: int size()>();

        $i2 = $i1 - 1;

        $r7 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet singleton(int)>($i2);

        $r8 = interfaceinvoke r0.<kodkod.engine.satlab.ResolutionTrace: kodkod.util.ints.IntSet reachable(kodkod.util.ints.IntSet)>($r7);

        $r9 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet singleton(int)>($i0);

        $r10 = interfaceinvoke r0.<kodkod.engine.satlab.ResolutionTrace: kodkod.util.ints.IntSet backwardReachable(kodkod.util.ints.IntSet)>($r9);

        interfaceinvoke $r8.<kodkod.util.ints.IntSet: boolean removeAll(kodkod.util.ints.IntCollection)>($r10);

        return $r8;

     label3:
        $z0 = interfaceinvoke $r4.<kodkod.util.ints.IntIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r11 = <kodkod.util.ints.Ints: kodkod.util.ints.IntSet EMPTY_SET>;

        return $r11;
    }
}
