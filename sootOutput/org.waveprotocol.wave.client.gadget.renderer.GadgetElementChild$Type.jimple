public final enum class org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type CATEGORIES;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type TITLE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type STATE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type PREF;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type UNKNOWN;
    private final java.lang.String tag;
    private static final org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] $VALUES;

    public static org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] values()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r2;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/client/gadget/renderer/GadgetElementChild$Type;", r0);

        $r2 = (org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type r0;
        int i0;
        java.lang.String r1, r2;
        org.waveprotocol.wave.model.util.StringMap $r3;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: java.lang.String tag> = r2;

        $r3 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.model.util.StringMap access$000()>();

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r2, r0);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: java.lang.String tag>;

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] $r5;

        $r0 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        specialinvoke $r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: void <init>(java.lang.String,int,java.lang.String)>("CATEGORIES", 0, "category");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type CATEGORIES> = $r0;

        $r1 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        specialinvoke $r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: void <init>(java.lang.String,int,java.lang.String)>("TITLE", 1, "title");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type TITLE> = $r1;

        $r2 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        specialinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: void <init>(java.lang.String,int,java.lang.String)>("STATE", 2, "state");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type STATE> = $r2;

        $r3 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        specialinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: void <init>(java.lang.String,int,java.lang.String)>("PREF", 3, "pref");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type PREF> = $r3;

        $r4 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type;

        specialinvoke $r4.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: void <init>(java.lang.String,int,java.lang.String)>("UNKNOWN", 4, "?");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type UNKNOWN> = $r4;

        $r5 = newarray (org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type)[5];

        $r6 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type CATEGORIES>;

        $r5[0] = $r6;

        $r7 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type TITLE>;

        $r5[1] = $r7;

        $r8 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type STATE>;

        $r5[2] = $r8;

        $r9 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type PREF>;

        $r5[3] = $r9;

        $r10 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type UNKNOWN>;

        $r5[4] = $r10;

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type[] $VALUES> = $r5;

        return;
    }
}
