public class org.apache.zookeeper.server.DataTree extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    private final java.util.concurrent.ConcurrentHashMap nodes;
    private final org.apache.zookeeper.server.WatchManager dataWatches;
    private final org.apache.zookeeper.server.WatchManager childWatches;
    private static final java.lang.String rootZookeeper;
    private static final java.lang.String procZookeeper;
    private static final java.lang.String procChildZookeeper;
    private static final java.lang.String quotaZookeeper;
    private static final java.lang.String quotaChildZookeeper;
    private final org.apache.zookeeper.common.PathTrie pTrie;
    private final java.util.Map ephemerals;
    public final java.util.Map longKeyMap;
    public final java.util.Map aclKeyMap;
    protected long aclIndex;
    private org.apache.zookeeper.server.DataNode root;
    private org.apache.zookeeper.server.DataNode procDataNode;
    private org.apache.zookeeper.server.DataNode quotaDataNode;
    public volatile long lastProcessedZxid;
    int scount;
    public boolean initialized;
    static final boolean $assertionsDisabled;

    public java.util.HashSet getEphemerals(long)
    {
        java.lang.Throwable $r7;
        long l0;
        java.util.HashSet r4, $r6, r8;
        java.lang.Long $r2;
        java.util.Map $r1;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.util.HashSet) $r3;

        if r4 != null goto label1;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        return $r6;

     label1:
        entermonitor r4;

     label2:
        $r5 = virtualinvoke r4.<java.util.HashSet: java.lang.Object clone()>();

        r8 = (java.util.HashSet) $r5;

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor r4;

     label5:
        throw $r7;

     label6:
        return r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.Map getEphemeralsMap()
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.Map $r1;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        return $r1;
    }

    private long incrementIndex()
    {
        org.apache.zookeeper.server.DataTree r0;
        long $l0, $l1;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $l0 = r0.<org.apache.zookeeper.server.DataTree: long aclIndex>;

        $l1 = $l0 + 1L;

        r0.<org.apache.zookeeper.server.DataTree: long aclIndex> = $l1;

        return $l1;
    }

    private boolean listACLEquals(java.util.List, java.util.List)
    {
        org.apache.zookeeper.data.ACL r3, r5;
        java.util.List r0, r1;
        int $i0, $i1, $i2, i3;
        org.apache.zookeeper.server.DataTree r6;
        java.lang.Object $r2, $r4;
        boolean $z0;

        r6 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i2 goto label4;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (org.apache.zookeeper.data.ACL) $r2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (org.apache.zookeeper.data.ACL) $r4;

        $z0 = virtualinvoke r3.<org.apache.zookeeper.data.ACL: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    public synchronized java.lang.Long convertAcls(java.util.List)
    {
        long $l0;
        java.util.List r0;
        java.lang.Long r4, $r6, $r8, $r9, $r10;
        java.util.Map $r2, $r5, $r7;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.Object $r3;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        return $r10;

     label1:
        $r2 = r1.<org.apache.zookeeper.server.DataTree: java.util.Map aclKeyMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.lang.Long) $r3;

        if r4 == null goto label2;

        return r4;

     label2:
        $l0 = specialinvoke r1.<org.apache.zookeeper.server.DataTree: long incrementIndex()>();

        $r5 = r1.<org.apache.zookeeper.server.DataTree: java.util.Map longKeyMap>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r0);

        $r7 = r1.<org.apache.zookeeper.server.DataTree: java.util.Map aclKeyMap>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r8);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r9;
    }

    public synchronized java.util.List convertLong(java.lang.Long)
    {
        long $l0;
        java.util.ArrayList $r15;
        byte $b1;
        java.lang.Long r0;
        java.util.Map $r2;
        java.lang.String $r9, $r14;
        org.slf4j.Logger $r6;
        java.lang.RuntimeException $r10;
        java.util.List r4;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r12, $r13;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.Long;

        if r0 != null goto label1;

        return null;

     label1:
        $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        $r15 = <org.apache.zookeeper.ZooDefs$Ids: java.util.ArrayList OPEN_ACL_UNSAFE>;

        return $r15;

     label2:
        $r2 = r1.<org.apache.zookeeper.server.DataTree: java.util.Map longKeyMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.util.List) $r3;

        if r4 != null goto label3;

        $r6 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR: ACL not available for long ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r9);

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fetch acls for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label3:
        return r4;
    }

    public java.util.Collection getSessions()
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.Set $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public void addDataNode(java.lang.String, org.apache.zookeeper.server.DataNode)
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.String r1;
        org.apache.zookeeper.server.DataNode r2;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.server.DataNode;

        $r3 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public org.apache.zookeeper.server.DataNode getNode(java.lang.String)
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.zookeeper.server.DataNode $r4;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.zookeeper.server.DataNode) $r3;

        return $r4;
    }

    public int getNodeCount()
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        int $i0;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: int size()>();

        return $i0;
    }

    public int getWatchCount()
    {
        org.apache.zookeeper.server.WatchManager $r1, $r2;
        org.apache.zookeeper.server.DataTree r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        $i0 = virtualinvoke $r1.<org.apache.zookeeper.server.WatchManager: int size()>();

        $r2 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        $i1 = virtualinvoke $r2.<org.apache.zookeeper.server.WatchManager: int size()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getEphemeralsCount()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.HashSet r5;
        java.util.Map $r1;
        org.apache.zookeeper.server.DataTree r0;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.DataTree: java.util.Map getEphemeralsMap()>();

        i1 = 0;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.HashSet) $r4;

        $i0 = virtualinvoke r5.<java.util.HashSet: int size()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public long approximateDataSize()
    {
        java.lang.Throwable $r12;
        byte[] $r10, $r11;
        long $l1, $l2, l3, l4;
        int $i0, $i5;
        java.lang.String $r9;
        boolean $z0;
        org.apache.zookeeper.server.DataNode r7;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.Set $r2;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        l3 = 0L;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (org.apache.zookeeper.server.DataNode) $r6;

        entermonitor r7;

     label2:
        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $l1 = (long) $i0;

        l4 = l3 + $l1;

        $r10 = r7.<org.apache.zookeeper.server.DataNode: byte[] data>;

        if $r10 != null goto label3;

        $i5 = 0;

        goto label4;

     label3:
        $r11 = r7.<org.apache.zookeeper.server.DataNode: byte[] data>;

        $i5 = lengthof $r11;

     label4:
        $l2 = (long) $i5;

        l3 = l4 + $l2;

        exitmonitor r7;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        exitmonitor r7;

     label7:
        throw $r12;

     label8:
        goto label1;

     label9:
        return l3;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void <init>()
    {
        byte[] $r9, $r14, $r19;
        java.lang.Long $r10, $r15, $r20;
        org.apache.zookeeper.server.DataNode $r8, $r12, $r13, $r17, $r18, $r22, $r24, $r27, $r28, $r31, $r32;
        java.util.concurrent.ConcurrentHashMap $r1, $r5, $r23, $r25, $r29, $r33;
        org.apache.zookeeper.common.PathTrie $r4;
        java.util.HashMap $r6, $r7;
        org.apache.zookeeper.data.StatPersisted $r11, $r16, $r21;
        java.lang.String $r26, $r30;
        org.apache.zookeeper.server.WatchManager $r2, $r3;
        org.apache.zookeeper.server.DataTree r0;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes> = $r1;

        $r2 = new org.apache.zookeeper.server.WatchManager;

        specialinvoke $r2.<org.apache.zookeeper.server.WatchManager: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches> = $r2;

        $r3 = new org.apache.zookeeper.server.WatchManager;

        specialinvoke $r3.<org.apache.zookeeper.server.WatchManager: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches> = $r3;

        $r4 = new org.apache.zookeeper.common.PathTrie;

        specialinvoke $r4.<org.apache.zookeeper.common.PathTrie: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.common.PathTrie pTrie> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: java.util.Map longKeyMap> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.DataTree: java.util.Map aclKeyMap> = $r7;

        r0.<org.apache.zookeeper.server.DataTree: long aclIndex> = 0L;

        $r8 = new org.apache.zookeeper.server.DataNode;

        $r9 = newarray (byte)[0];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r11 = new org.apache.zookeeper.data.StatPersisted;

        specialinvoke $r11.<org.apache.zookeeper.data.StatPersisted: void <init>()>();

        specialinvoke $r8.<org.apache.zookeeper.server.DataNode: void <init>(org.apache.zookeeper.server.DataNode,byte[],java.lang.Long,org.apache.zookeeper.data.StatPersisted)>(null, $r9, $r10, $r11);

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root> = $r8;

        $r12 = new org.apache.zookeeper.server.DataNode;

        $r13 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        $r14 = newarray (byte)[0];

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r16 = new org.apache.zookeeper.data.StatPersisted;

        specialinvoke $r16.<org.apache.zookeeper.data.StatPersisted: void <init>()>();

        specialinvoke $r12.<org.apache.zookeeper.server.DataNode: void <init>(org.apache.zookeeper.server.DataNode,byte[],java.lang.Long,org.apache.zookeeper.data.StatPersisted)>($r13, $r14, $r15, $r16);

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode procDataNode> = $r12;

        $r17 = new org.apache.zookeeper.server.DataNode;

        $r18 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode procDataNode>;

        $r19 = newarray (byte)[0];

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r21 = new org.apache.zookeeper.data.StatPersisted;

        specialinvoke $r21.<org.apache.zookeeper.data.StatPersisted: void <init>()>();

        specialinvoke $r17.<org.apache.zookeeper.server.DataNode: void <init>(org.apache.zookeeper.server.DataNode,byte[],java.lang.Long,org.apache.zookeeper.data.StatPersisted)>($r18, $r19, $r20, $r21);

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode quotaDataNode> = $r17;

        r0.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid> = 0L;

        r0.<org.apache.zookeeper.server.DataTree: boolean initialized> = 0;

        $r23 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r22 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        virtualinvoke $r23.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("", $r22);

        $r25 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r24 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        virtualinvoke $r25.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("/", $r24);

        $r27 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        $r26 = <org.apache.zookeeper.server.DataTree: java.lang.String procChildZookeeper>;

        virtualinvoke $r27.<org.apache.zookeeper.server.DataNode: boolean addChild(java.lang.String)>($r26);

        $r29 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r28 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode procDataNode>;

        virtualinvoke $r29.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("/zookeeper", $r28);

        $r31 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode procDataNode>;

        $r30 = <org.apache.zookeeper.server.DataTree: java.lang.String quotaChildZookeeper>;

        virtualinvoke $r31.<org.apache.zookeeper.server.DataNode: boolean addChild(java.lang.String)>($r30);

        $r33 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r32 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode quotaDataNode>;

        virtualinvoke $r33.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("/zookeeper/quota", $r32);

        return;
    }

    boolean isSpecialPath(java.lang.String)
    {
        org.apache.zookeeper.server.DataTree r4;
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.String;

        $r1 = "/";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "/zookeeper";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r3 = "/zookeeper/quota";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void copyStatPersisted(org.apache.zookeeper.data.StatPersisted, org.apache.zookeeper.data.StatPersisted)
    {
        long $l1, $l3, $l4, $l5, $l6, $l8;
        org.apache.zookeeper.data.StatPersisted r0, r1;
        int $i0, $i2, $i7;

        r1 := @parameter0: org.apache.zookeeper.data.StatPersisted;

        r0 := @parameter1: org.apache.zookeeper.data.StatPersisted;

        $i0 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: int getAversion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setAversion(int)>($i0);

        $l1 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getCtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setCtime(long)>($l1);

        $i2 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: int getCversion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setCversion(int)>($i2);

        $l3 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getCzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setCzxid(long)>($l3);

        $l4 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getMtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setMtime(long)>($l4);

        $l5 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getMzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setMzxid(long)>($l5);

        $l6 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getPzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setPzxid(long)>($l6);

        $i7 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: int getVersion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setVersion(int)>($i7);

        $l8 = virtualinvoke r1.<org.apache.zookeeper.data.StatPersisted: long getEphemeralOwner()>();

        virtualinvoke r0.<org.apache.zookeeper.data.StatPersisted: void setEphemeralOwner(long)>($l8);

        return;
    }

    public static void copyStat(org.apache.zookeeper.data.Stat, org.apache.zookeeper.data.Stat)
    {
        long $l1, $l3, $l4, $l5, $l6, $l8;
        org.apache.zookeeper.data.Stat r0, r1;
        int $i0, $i2, $i7, $i9, $i10;

        r1 := @parameter0: org.apache.zookeeper.data.Stat;

        r0 := @parameter1: org.apache.zookeeper.data.Stat;

        $i0 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: int getAversion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setAversion(int)>($i0);

        $l1 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getCtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCtime(long)>($l1);

        $i2 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: int getCversion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCversion(int)>($i2);

        $l3 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getCzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCzxid(long)>($l3);

        $l4 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getMtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setMtime(long)>($l4);

        $l5 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getMzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setMzxid(long)>($l5);

        $l6 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getPzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setPzxid(long)>($l6);

        $i7 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: int getVersion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setVersion(int)>($i7);

        $l8 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: long getEphemeralOwner()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setEphemeralOwner(long)>($l8);

        $i9 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: int getDataLength()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setDataLength(int)>($i9);

        $i10 = virtualinvoke r1.<org.apache.zookeeper.data.Stat: int getNumChildren()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setNumChildren(int)>($i10);

        return;
    }

    public void updateCount(java.lang.String, int)
    {
        byte[] $r7, $r9, $r15;
        org.apache.zookeeper.server.DataNode r37, r38;
        java.util.concurrent.ConcurrentHashMap $r3, $r11;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r28, $r32, $r33, $r39, $r42, $r45;
        java.lang.Throwable $r35, $r36;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.String r0, $r1, $r8, $r10, $r24, $r29, $r34, $r40, $r43;
        org.slf4j.Logger $r17, $r26, $r31;
        org.apache.zookeeper.StatsTrack $r41, $r44;
        org.apache.zookeeper.server.DataTree r2;
        java.lang.Object $r4, $r12;

        r2 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r1 = staticinvoke <org.apache.zookeeper.Quotas: java.lang.String statPath(java.lang.String)>(r0);

        $r3 = r2.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r37 = (org.apache.zookeeper.server.DataNode) $r4;

        if r37 != null goto label01;

        $r31 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing count node for stat ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r34);

        return;

     label01:
        entermonitor r37;

     label02:
        $r41 = new org.apache.zookeeper.StatsTrack;

        $r40 = new java.lang.String;

        $r7 = r37.<org.apache.zookeeper.server.DataNode: byte[] data>;

        specialinvoke $r40.<java.lang.String: void <init>(byte[])>($r7);

        specialinvoke $r41.<org.apache.zookeeper.StatsTrack: void <init>(java.lang.String)>($r40);

        $i0 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: int getCount()>();

        $i2 = $i0 + i1;

        virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: void setCount(int)>($i2);

        $r8 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        r37.<org.apache.zookeeper.server.DataNode: byte[] data> = $r9;

        exitmonitor r37;

     label03:
        goto label06;

     label04:
        $r36 := @caughtexception;

        exitmonitor r37;

     label05:
        throw $r36;

     label06:
        $r10 = staticinvoke <org.apache.zookeeper.Quotas: java.lang.String quotaPath(java.lang.String)>(r0);

        $r11 = r2.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r10);

        r38 = (org.apache.zookeeper.server.DataNode) $r12;

        if r38 != null goto label07;

        $r26 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing count node for quota ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r29);

        return;

     label07:
        entermonitor r38;

     label08:
        $r44 = new org.apache.zookeeper.StatsTrack;

        $r43 = new java.lang.String;

        $r15 = r38.<org.apache.zookeeper.server.DataNode: byte[] data>;

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r15);

        specialinvoke $r44.<org.apache.zookeeper.StatsTrack: void <init>(java.lang.String)>($r43);

        exitmonitor r38;

     label09:
        goto label12;

     label10:
        $r35 := @caughtexception;

        exitmonitor r38;

     label11:
        throw $r35;

     label12:
        $i3 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: int getCount()>();

        $i9 = (int) -1;

        if $i3 <= $i9 goto label13;

        $i4 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: int getCount()>();

        $i5 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: int getCount()>();

        if $i4 >= $i5 goto label13;

        $r17 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quota exceeded: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i6 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: int getCount()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit=");

        $i7 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: int getCount()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r24);

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void updateBytes(java.lang.String, long)
    {
        byte[] $r7, $r9, $r15;
        byte $b4, $b7;
        org.apache.zookeeper.server.DataNode r37, r38;
        java.util.concurrent.ConcurrentHashMap $r3, $r11;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r28, $r32, $r33, $r39, $r42, $r45;
        java.lang.Throwable $r35, $r36;
        long $l0, l1, $l2, $l3, $l5, $l6, $l8, $l9;
        int $i10, $i11;
        java.lang.String r0, $r1, $r8, $r10, $r24, $r29, $r34, $r40, $r43;
        org.slf4j.Logger $r17, $r26, $r31;
        org.apache.zookeeper.StatsTrack $r41, $r44;
        org.apache.zookeeper.server.DataTree r2;
        java.lang.Object $r4, $r12;

        r2 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.String;

        l1 := @parameter1: long;

        $r1 = staticinvoke <org.apache.zookeeper.Quotas: java.lang.String statPath(java.lang.String)>(r0);

        $r3 = r2.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r37 = (org.apache.zookeeper.server.DataNode) $r4;

        if r37 != null goto label01;

        $r31 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing stat node for bytes ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r34);

        return;

     label01:
        entermonitor r37;

     label02:
        $r41 = new org.apache.zookeeper.StatsTrack;

        $r40 = new java.lang.String;

        $r7 = r37.<org.apache.zookeeper.server.DataNode: byte[] data>;

        specialinvoke $r40.<java.lang.String: void <init>(byte[])>($r7);

        specialinvoke $r41.<org.apache.zookeeper.StatsTrack: void <init>(java.lang.String)>($r40);

        $l0 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $l2 = $l0 + l1;

        virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: void setBytes(long)>($l2);

        $r8 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        r37.<org.apache.zookeeper.server.DataNode: byte[] data> = $r9;

        exitmonitor r37;

     label03:
        goto label06;

     label04:
        $r36 := @caughtexception;

        exitmonitor r37;

     label05:
        throw $r36;

     label06:
        $r10 = staticinvoke <org.apache.zookeeper.Quotas: java.lang.String quotaPath(java.lang.String)>(r0);

        $r11 = r2.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r10);

        r38 = (org.apache.zookeeper.server.DataNode) $r12;

        if r38 != null goto label07;

        $r26 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing quota node for bytes ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r29);

        return;

     label07:
        entermonitor r38;

     label08:
        $r44 = new org.apache.zookeeper.StatsTrack;

        $r43 = new java.lang.String;

        $r15 = r38.<org.apache.zookeeper.server.DataNode: byte[] data>;

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r15);

        specialinvoke $r44.<org.apache.zookeeper.StatsTrack: void <init>(java.lang.String)>($r43);

        exitmonitor r38;

     label09:
        goto label12;

     label10:
        $r35 := @caughtexception;

        exitmonitor r38;

     label11:
        throw $r35;

     label12:
        $l3 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $b4 = $l3 cmp -1L;

        $i10 = (int) $b4;

        if $i10 <= 0 goto label13;

        $l5 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $l6 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $b7 = $l5 cmp $l6;

        $i11 = (int) $b7;

        if $i11 >= 0 goto label13;

        $r17 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quota exceeded: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes=");

        $l8 = virtualinvoke $r41.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit=");

        $l9 = virtualinvoke $r44.<org.apache.zookeeper.StatsTrack: long getBytes()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r24);

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.String createNode(java.lang.String, byte[], java.util.List, long, int, long, long) throws org.apache.zookeeper.KeeperException$NoNodeException, org.apache.zookeeper.KeeperException$NodeExistsException
    {
        byte[] r14;
        org.apache.zookeeper.KeeperException$NoNodeException $r43;
        byte $b5;
        java.lang.Long $r12, $r26, $r31;
        java.util.Map $r25, $r30;
        org.apache.zookeeper.server.DataNode r7, $r45;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.ConcurrentHashMap $r5, $r15;
        org.apache.zookeeper.common.PathTrie $r23;
        java.util.Set $r8;
        java.util.List r11;
        java.lang.Throwable $r35, $r36;
        long l2, l3, l4, $l11;
        java.util.HashSet r28, r37, $r46;
        int $i0, $i1, $i6, $i7, $i8, $i9, i10, $i13;
        org.apache.zookeeper.data.StatPersisted $r9, $r10, $r32, $r42;
        java.lang.String r0, $r1, $r2, $r18, $r19, $r20, $r21, $r22, $r24, $r38, $r41;
        org.apache.zookeeper.KeeperException$NodeExistsException $r44;
        org.apache.zookeeper.server.WatchManager $r16, $r39;
        org.apache.zookeeper.Watcher$Event$EventType $r17, $r40;
        org.apache.zookeeper.server.DataTree r4;
        java.lang.Object $r6, $r27;

        r4 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.String;

        r14 := @parameter1: byte[];

        r11 := @parameter2: java.util.List;

        l4 := @parameter3: long;

        i10 := @parameter4: int;

        l3 := @parameter5: long;

        l2 := @parameter6: long;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r42 = new org.apache.zookeeper.data.StatPersisted;

        specialinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void <init>()>();

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setCtime(long)>(l2);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setMtime(long)>(l2);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setCzxid(long)>(l3);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setMzxid(long)>(l3);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setPzxid(long)>(l3);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setVersion(int)>(0);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setAversion(int)>(0);

        virtualinvoke $r42.<org.apache.zookeeper.data.StatPersisted: void setEphemeralOwner(long)>(l4);

        $r5 = r4.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (org.apache.zookeeper.server.DataNode) $r6;

        if r7 != null goto label01;

        $r43 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r43.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r43;

     label01:
        entermonitor r7;

     label02:
        $r8 = virtualinvoke r7.<org.apache.zookeeper.server.DataNode: java.util.Set getChildren()>();

        if $r8 == null goto label03;

        $z3 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z3 == 0 goto label03;

        $r44 = new org.apache.zookeeper.KeeperException$NodeExistsException;

        specialinvoke $r44.<org.apache.zookeeper.KeeperException$NodeExistsException: void <init>()>();

        throw $r44;

     label03:
        $i13 = (int) -1;

        if i10 != $i13 goto label04;

        $r32 = r7.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i9 = virtualinvoke $r32.<org.apache.zookeeper.data.StatPersisted: int getCversion()>();

        i10 = $i9 + 1;

     label04:
        $r9 = r7.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r9.<org.apache.zookeeper.data.StatPersisted: void setCversion(int)>(i10);

        $r10 = r7.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r10.<org.apache.zookeeper.data.StatPersisted: void setPzxid(long)>(l3);

        $r12 = virtualinvoke r4.<org.apache.zookeeper.server.DataTree: java.lang.Long convertAcls(java.util.List)>(r11);

        $r45 = new org.apache.zookeeper.server.DataNode;

        specialinvoke $r45.<org.apache.zookeeper.server.DataNode: void <init>(org.apache.zookeeper.server.DataNode,byte[],java.lang.Long,org.apache.zookeeper.data.StatPersisted)>(r7, r14, $r12, $r42);

        virtualinvoke r7.<org.apache.zookeeper.server.DataNode: boolean addChild(java.lang.String)>($r2);

        $r15 = r4.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r15.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r45);

        $b5 = l4 cmp 0L;

        if $b5 == 0 goto label10;

        $r25 = r4.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26);

        r37 = (java.util.HashSet) $r27;

        if r37 != null goto label05;

        $r46 = new java.util.HashSet;

        specialinvoke $r46.<java.util.HashSet: void <init>()>();

        r37 = $r46;

        $r30 = r4.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r46);

     label05:
        r28 = r37;

        entermonitor r37;

     label06:
        virtualinvoke r37.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

        exitmonitor r37;

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        exitmonitor r28;

     label09:
        throw $r36;

     label10:
        exitmonitor r7;

     label11:
        goto label14;

     label12:
        $r35 := @caughtexception;

        exitmonitor r7;

     label13:
        throw $r35;

     label14:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/zookeeper/quota");

        if $z0 == 0 goto label16;

        $r18 = "zookeeper_limits";

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label15;

        $r23 = r4.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.common.PathTrie pTrie>;

        $r22 = "/zookeeper/quota";

        $i8 = virtualinvoke $r22.<java.lang.String: int length()>();

        $r24 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i8);

        virtualinvoke $r23.<org.apache.zookeeper.common.PathTrie: void addPath(java.lang.String)>($r24);

     label15:
        $r19 = "zookeeper_stats";

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label16;

        $r20 = "/zookeeper/quota";

        $i7 = virtualinvoke $r20.<java.lang.String: int length()>();

        $r21 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i7);

        specialinvoke r4.<org.apache.zookeeper.server.DataTree: void updateQuotaForPath(java.lang.String)>($r21);

     label16:
        $r38 = virtualinvoke r4.<org.apache.zookeeper.server.DataTree: java.lang.String getMaxPrefixWithQuota(java.lang.String)>(r0);

        if $r38 == null goto label19;

        virtualinvoke r4.<org.apache.zookeeper.server.DataTree: void updateCount(java.lang.String,int)>($r38, 1);

        if r14 != null goto label17;

        $l11 = 0L;

        goto label18;

     label17:
        $i6 = lengthof r14;

        $l11 = (long) $i6;

     label18:
        virtualinvoke r4.<org.apache.zookeeper.server.DataTree: void updateBytes(java.lang.String,long)>($r38, $l11);

     label19:
        $r39 = r4.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        $r40 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeCreated>;

        virtualinvoke $r39.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType)>(r0, $r40);

        $r16 = r4.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 == 0 goto label20;

        $r41 = "/";

        goto label21;

     label20:
        $r41 = $r1;

     label21:
        $r17 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeChildrenChanged>;

        virtualinvoke $r16.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType)>($r41, $r17);

        return r0;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void deleteNode(java.lang.String, long) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        byte[] $r31, $r32;
        org.apache.zookeeper.KeeperException$NoNodeException $r48, $r49;
        byte $b4;
        java.lang.Long $r38;
        java.util.Map $r37;
        org.apache.zookeeper.server.DataNode r6, r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.ConcurrentHashMap $r4, $r7, $r8;
        org.apache.zookeeper.common.PathTrie $r35;
        java.util.Set $r16;
        java.lang.StringBuilder $r23, $r24, $r28, $r29, $r50, $r51;
        java.lang.Throwable $r43, $r44, $r45;
        long l2, $l3, $l6;
        java.util.HashSet r40;
        int $i0, $i1, $i5, $i7, $i8, $i10;
        org.apache.zookeeper.data.StatPersisted $r11, $r12;
        java.lang.String r0, $r1, $r2, $r25, $r30, $r33, $r34, $r36, $r46, $r47;
        org.slf4j.Logger $r13, $r22, $r27;
        org.apache.zookeeper.server.WatchManager $r15, $r18, $r19;
        org.apache.zookeeper.Watcher$Event$EventType $r14, $r17, $r20;
        org.apache.zookeeper.server.DataTree r3;
        java.lang.Object $r5, $r9, $r39;

        r3 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.lang.String;

        l2 := @parameter1: long;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = r3.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (org.apache.zookeeper.server.DataNode) $r5;

        if r6 != null goto label01;

        $r48 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r48.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r48;

     label01:
        $r7 = r3.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r0);

        $r8 = r3.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r10 = (org.apache.zookeeper.server.DataNode) $r9;

        if r10 != null goto label02;

        $r49 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r49.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r49;

     label02:
        entermonitor r10;

     label03:
        virtualinvoke r10.<org.apache.zookeeper.server.DataNode: boolean removeChild(java.lang.String)>($r2);

        $r11 = r10.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r11.<org.apache.zookeeper.data.StatPersisted: void setPzxid(long)>(l2);

        $r12 = r6.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l3 = virtualinvoke $r12.<org.apache.zookeeper.data.StatPersisted: long getEphemeralOwner()>();

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label08;

        $r37 = r3.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r39 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38);

        r40 = (java.util.HashSet) $r39;

        if r40 == null goto label08;

        entermonitor r40;

     label04:
        virtualinvoke r40.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

        exitmonitor r40;

     label05:
        goto label08;

     label06:
        $r45 := @caughtexception;

        exitmonitor r40;

     label07:
        throw $r45;

     label08:
        r6.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.server.DataNode parent> = null;

        exitmonitor r10;

     label09:
        goto label12;

     label10:
        $r44 := @caughtexception;

        exitmonitor r10;

     label11:
        throw $r44;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/zookeeper");

        if $z0 == 0 goto label13;

        $r33 = "zookeeper_limits";

        $z3 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z3 == 0 goto label13;

        $r35 = r3.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.common.PathTrie pTrie>;

        $r34 = "/zookeeper/quota";

        $i7 = virtualinvoke $r34.<java.lang.String: int length()>();

        $r36 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i7);

        virtualinvoke $r35.<org.apache.zookeeper.common.PathTrie: void deletePath(java.lang.String)>($r36);

     label13:
        $r46 = virtualinvoke r3.<org.apache.zookeeper.server.DataTree: java.lang.String getMaxPrefixWithQuota(java.lang.String)>(r0);

        if $r46 == null goto label21;

        $i10 = (int) -1;

        virtualinvoke r3.<org.apache.zookeeper.server.DataTree: void updateCount(java.lang.String,int)>($r46, $i10);

        entermonitor r6;

     label14:
        $r31 = r6.<org.apache.zookeeper.server.DataNode: byte[] data>;

        if $r31 != null goto label15;

        $i8 = 0;

        goto label16;

     label15:
        $r32 = r6.<org.apache.zookeeper.server.DataNode: byte[] data>;

        $i5 = lengthof $r32;

        $i8 = neg $i5;

     label16:
        exitmonitor r6;

     label17:
        goto label20;

     label18:
        $r43 := @caughtexception;

        exitmonitor r6;

     label19:
        throw $r43;

     label20:
        $l6 = (long) $i8;

        virtualinvoke r3.<org.apache.zookeeper.server.DataTree: void updateBytes(java.lang.String,long)>($r46, $l6);

     label21:
        $r13 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label22;

        $r22 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dataWatches.triggerWatch ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r22, 64L, $r25);

        $r27 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("childWatches.triggerWatch ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r27, 64L, $r30);

     label22:
        $r15 = r3.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        $r14 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDeleted>;

        $r16 = virtualinvoke $r15.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType)>(r0, $r14);

        $r18 = r3.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        $r17 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDeleted>;

        virtualinvoke $r18.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType,java.util.Set)>(r0, $r17, $r16);

        $r19 = r3.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label23;

        $r47 = "/";

        goto label24;

     label23:
        $r47 = $r1;

     label24:
        $r20 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeChildrenChanged>;

        virtualinvoke $r19.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType)>($r47, $r20);

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], int, long, long) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r12;
        byte[] r6, r13;
        long l0, l1, $l6;
        org.apache.zookeeper.data.Stat $r0;
        org.apache.zookeeper.KeeperException$NoNodeException $r11;
        org.apache.zookeeper.data.StatPersisted $r7, $r8, $r9;
        int i2, $i3, $i4, $i5;
        java.lang.String r2, $r10;
        org.apache.zookeeper.server.DataNode r5;
        java.util.concurrent.ConcurrentHashMap $r3;
        org.apache.zookeeper.server.WatchManager $r14;
        org.apache.zookeeper.Watcher$Event$EventType $r15;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.Object $r4;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: byte[];

        i2 := @parameter2: int;

        l1 := @parameter3: long;

        l0 := @parameter4: long;

        $r0 = new org.apache.zookeeper.data.Stat;

        specialinvoke $r0.<org.apache.zookeeper.data.Stat: void <init>()>();

        $r3 = r1.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (org.apache.zookeeper.server.DataNode) $r4;

        if r5 != null goto label01;

        $r11 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r11.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r11;

     label01:
        entermonitor r5;

     label02:
        r13 = r5.<org.apache.zookeeper.server.DataNode: byte[] data>;

        r5.<org.apache.zookeeper.server.DataNode: byte[] data> = r6;

        $r7 = r5.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r7.<org.apache.zookeeper.data.StatPersisted: void setMtime(long)>(l0);

        $r8 = r5.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r8.<org.apache.zookeeper.data.StatPersisted: void setMzxid(long)>(l1);

        $r9 = r5.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r9.<org.apache.zookeeper.data.StatPersisted: void setVersion(int)>(i2);

        virtualinvoke r5.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>($r0);

        exitmonitor r5;

     label03:
        goto label06;

     label04:
        $r12 := @caughtexception;

        exitmonitor r5;

     label05:
        throw $r12;

     label06:
        $r10 = virtualinvoke r1.<org.apache.zookeeper.server.DataTree: java.lang.String getMaxPrefixWithQuota(java.lang.String)>(r2);

        if $r10 == null goto label11;

        if r6 != null goto label07;

        $i3 = 0;

        goto label08;

     label07:
        $i3 = lengthof r6;

     label08:
        if r13 != null goto label09;

        $i4 = 0;

        goto label10;

     label09:
        $i4 = lengthof r13;

     label10:
        $i5 = $i3 - $i4;

        $l6 = (long) $i5;

        virtualinvoke r1.<org.apache.zookeeper.server.DataTree: void updateBytes(java.lang.String,long)>($r10, $l6);

     label11:
        $r14 = r1.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        $r15 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDataChanged>;

        virtualinvoke $r14.<org.apache.zookeeper.server.WatchManager: java.util.Set triggerWatch(java.lang.String,org.apache.zookeeper.Watcher$Event$EventType)>(r2, $r15);

        return $r0;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    public java.lang.String getMaxPrefixWithQuota(java.lang.String)
    {
        org.apache.zookeeper.common.PathTrie $r2;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.String r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.common.PathTrie pTrie>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.common.PathTrie: java.lang.String findMaxPrefix(java.lang.String)>(r1);

        $r4 = "/";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = "";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        return $r3;

     label1:
        return null;
    }

    public byte[] getData(java.lang.String, org.apache.zookeeper.data.Stat, org.apache.zookeeper.Watcher) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r10;
        byte[] $r7;
        org.apache.zookeeper.Watcher r6;
        java.util.concurrent.ConcurrentHashMap $r2;
        org.apache.zookeeper.data.Stat r5;
        org.apache.zookeeper.KeeperException$NoNodeException $r9;
        org.apache.zookeeper.server.WatchManager $r8;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.zookeeper.server.DataNode r4;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.zookeeper.data.Stat;

        r6 := @parameter2: org.apache.zookeeper.Watcher;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.zookeeper.server.DataNode) $r3;

        if r4 != null goto label1;

        $r9 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r9.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r9;

     label1:
        entermonitor r4;

     label2:
        virtualinvoke r4.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>(r5);

        if r6 == null goto label3;

        $r8 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r8.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r1, r6);

     label3:
        $r7 = r4.<org.apache.zookeeper.server.DataNode: byte[] data>;

        exitmonitor r4;

     label4:
        return $r7;

     label5:
        $r10 := @caughtexception;

        exitmonitor r4;

     label6:
        throw $r10;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.zookeeper.data.Stat statNode(java.lang.String, org.apache.zookeeper.Watcher) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r9;
        org.apache.zookeeper.Watcher r6;
        java.util.concurrent.ConcurrentHashMap $r3;
        org.apache.zookeeper.data.Stat $r0;
        org.apache.zookeeper.KeeperException$NoNodeException $r7;
        org.apache.zookeeper.server.WatchManager $r8;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.zookeeper.server.DataNode r5;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.zookeeper.Watcher;

        $r0 = new org.apache.zookeeper.data.Stat;

        specialinvoke $r0.<org.apache.zookeeper.data.Stat: void <init>()>();

        $r3 = r1.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (org.apache.zookeeper.server.DataNode) $r4;

        if r6 == null goto label1;

        $r8 = r1.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r8.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r2, r6);

     label1:
        if r5 != null goto label2;

        $r7 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r7.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r7;

     label2:
        entermonitor r5;

     label3:
        virtualinvoke r5.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>($r0);

        exitmonitor r5;

     label4:
        return $r0;

     label5:
        $r9 := @caughtexception;

        exitmonitor r5;

     label6:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getChildren(java.lang.String, org.apache.zookeeper.data.Stat, org.apache.zookeeper.Watcher) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r12;
        org.apache.zookeeper.Watcher r8;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Set $r6;
        org.apache.zookeeper.data.Stat r5;
        org.apache.zookeeper.KeeperException$NoNodeException $r11;
        java.util.ArrayList $r7, $r10, r13;
        org.apache.zookeeper.server.WatchManager $r9;
        org.apache.zookeeper.server.DataTree r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.zookeeper.server.DataNode r4;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.zookeeper.data.Stat;

        r8 := @parameter2: org.apache.zookeeper.Watcher;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.zookeeper.server.DataNode) $r3;

        if r4 != null goto label1;

        $r11 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r11.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r11;

     label1:
        entermonitor r4;

     label2:
        if r5 == null goto label3;

        virtualinvoke r4.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>(r5);

     label3:
        $r6 = virtualinvoke r4.<org.apache.zookeeper.server.DataNode: java.util.Set getChildren()>();

        if $r6 == null goto label4;

        $r10 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r6.<java.util.Set: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r13 = $r10;

        virtualinvoke $r10.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

        goto label5;

     label4:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(0);

        r13 = $r7;

     label5:
        if r8 == null goto label6;

        $r9 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        virtualinvoke $r9.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r1, r8);

     label6:
        exitmonitor r4;

     label7:
        return r13;

     label8:
        $r12 := @caughtexception;

        exitmonitor r4;

     label9:
        throw $r12;

        catch java.lang.Throwable from label2 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public org.apache.zookeeper.data.Stat setACL(java.lang.String, java.util.List, int) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r10;
        java.util.concurrent.ConcurrentHashMap $r3;
        org.apache.zookeeper.data.Stat $r0;
        org.apache.zookeeper.KeeperException$NoNodeException $r9;
        java.util.List r7;
        java.lang.Long $r8;
        org.apache.zookeeper.server.DataTree r1;
        int i0;
        org.apache.zookeeper.data.StatPersisted $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.zookeeper.server.DataNode r5;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r2 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $r0 = new org.apache.zookeeper.data.Stat;

        specialinvoke $r0.<org.apache.zookeeper.data.Stat: void <init>()>();

        $r3 = r1.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (org.apache.zookeeper.server.DataNode) $r4;

        if r5 != null goto label1;

        $r9 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r9.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r9;

     label1:
        entermonitor r5;

     label2:
        $r6 = r5.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r6.<org.apache.zookeeper.data.StatPersisted: void setAversion(int)>(i0);

        $r8 = virtualinvoke r1.<org.apache.zookeeper.server.DataTree: java.lang.Long convertAcls(java.util.List)>(r7);

        r5.<org.apache.zookeeper.server.DataNode: java.lang.Long acl> = $r8;

        virtualinvoke r5.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>($r0);

        exitmonitor r5;

     label3:
        return $r0;

     label4:
        $r10 := @caughtexception;

        exitmonitor r5;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List getACL(java.lang.String, org.apache.zookeeper.data.Stat) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r10;
        java.util.concurrent.ConcurrentHashMap $r2;
        org.apache.zookeeper.data.Stat r5;
        org.apache.zookeeper.KeeperException$NoNodeException $r9;
        java.util.ArrayList $r6;
        java.util.List $r8;
        java.lang.Long $r7;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.zookeeper.server.DataNode r4;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.zookeeper.data.Stat;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.zookeeper.server.DataNode) $r3;

        if r4 != null goto label1;

        $r9 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r9.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>()>();

        throw $r9;

     label1:
        entermonitor r4;

     label2:
        virtualinvoke r4.<org.apache.zookeeper.server.DataNode: void copyStat(org.apache.zookeeper.data.Stat)>(r5);

        $r6 = new java.util.ArrayList;

        $r7 = r4.<org.apache.zookeeper.server.DataNode: java.lang.Long acl>;

        $r8 = virtualinvoke r0.<org.apache.zookeeper.server.DataTree: java.util.List convertLong(java.lang.Long)>($r7);

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        exitmonitor r4;

     label3:
        return $r6;

     label4:
        $r10 := @caughtexception;

        exitmonitor r4;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader, org.apache.jute.Record)
    {
        byte[] $r33, $r59, $r65;
        byte $b48;
        org.apache.zookeeper.txn.CreateTxn r94, r103, $r106;
        org.apache.jute.Record r2, r99;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r20, $r21, $r22, $r24, $r25, $r26, $r47, $r48, $r71, $r72, $r79, $r80, $r81, $r82, $r89, $r90, $r91, $r92, $r111, $r117, $r118, $r119, $r120, $r121;
        org.apache.zookeeper.txn.DeleteTxn r95, $r107;
        long $l0, $l2, $l16, $l17, $l27, $l28, $l29, $l31, $l32, $l34, $l35, $l38, $l40, $l42, $l43, $l46, $l47;
        org.apache.zookeeper.txn.Txn r32, r98;
        java.io.IOException $r75, $r112;
        org.apache.zookeeper.server.DataTree r8;
        org.apache.zookeeper.txn.SetDataTxn r96, $r108;
        org.apache.zookeeper.data.Stat $r56, $r60;
        org.apache.zookeeper.KeeperException$NoNodeException $r68;
        org.apache.zookeeper.txn.CheckVersionTxn r51, $r110;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i30, $i33, $i36, $i37, $i39, $i41, $i44, $i45, $i50, $i52, $i54, $i56, $i57;
        org.slf4j.Logger $r11, $r19, $r70, $r76, $r78, $r85, $r88;
        org.apache.zookeeper.KeeperException $r84;
        java.lang.Object $r31, $r50;
        org.apache.zookeeper.server.DataTree$ProcessTxnResult $r101, $r104;
        java.lang.AssertionError $r113, $r115;
        java.util.ArrayList $r105;
        java.lang.String $r16, $r23, $r27, $r28, $r29, $r30, $r49, $r52, $r53, $r54, $r57, $r58, $r61, $r62, $r63, $r64, $r73, $r83, $r93;
        org.apache.zookeeper.txn.MultiTxn r3;
        org.apache.zookeeper.txn.TxnHeader r1, $r116;
        org.apache.zookeeper.txn.ErrorTxn r67, $r109, $r114;
        java.nio.ByteBuffer $r34;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, $z7, $z8, z9, z10;
        java.util.List $r4, $r55, $r66, $r102;
        org.apache.zookeeper.txn.SetACLTxn r97;
        org.apache.zookeeper.KeeperException$Code $r9, $r17, $r37, $r39, $r74, $r86;
        java.util.Iterator $r6, $r7;

        r8 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: org.apache.zookeeper.txn.TxnHeader;

        r2 := @parameter1: org.apache.jute.Record;

        $r104 = new org.apache.zookeeper.server.DataTree$ProcessTxnResult;

        specialinvoke $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: void <init>()>();

     label01:
        $l0 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: long clientId> = $l0;

        $i1 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getCxid()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int cxid> = $i1;

        $l2 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: long zxid> = $l2;

        $i3 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int type> = $i3;

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err> = 0;

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.util.List multiResult> = null;

        $i4 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        tableswitch($i4)
        {
            case -11: goto label08;
            case -10: goto label29;
            case -9: goto label29;
            case -8: goto label29;
            case -7: goto label29;
            case -6: goto label29;
            case -5: goto label29;
            case -4: goto label29;
            case -3: goto label29;
            case -2: goto label29;
            case -1: goto label09;
            case 0: goto label29;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label29;
            case 4: goto label29;
            case 5: goto label06;
            case 6: goto label29;
            case 7: goto label07;
            case 8: goto label29;
            case 9: goto label29;
            case 10: goto label29;
            case 11: goto label29;
            case 12: goto label29;
            case 13: goto label10;
            case 14: goto label11;
            default: goto label29;
        };

     label02:
        r94 = (org.apache.zookeeper.txn.CreateTxn) r2;

        $r63 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: java.lang.String getPath()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path> = $r63;

        $r64 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: java.lang.String getPath()>();

        $r65 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: byte[] getData()>();

        $r66 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: java.util.List getAcl()>();

        $z2 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: boolean getEphemeral()>();

        if $z2 == 0 goto label03;

        $l38 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        goto label04;

     label03:
        $l38 = 0L;

     label04:
        $i30 = virtualinvoke r94.<org.apache.zookeeper.txn.CreateTxn: int getParentCVersion()>();

        $l31 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $l32 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getTime()>();

        virtualinvoke r8.<org.apache.zookeeper.server.DataTree: java.lang.String createNode(java.lang.String,byte[],java.util.List,long,int,long,long)>($r64, $r65, $r66, $l38, $i30, $l31, $l32);

        goto label29;

     label05:
        r95 = (org.apache.zookeeper.txn.DeleteTxn) r2;

        $r61 = virtualinvoke r95.<org.apache.zookeeper.txn.DeleteTxn: java.lang.String getPath()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path> = $r61;

        $r62 = virtualinvoke r95.<org.apache.zookeeper.txn.DeleteTxn: java.lang.String getPath()>();

        $l29 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        virtualinvoke r8.<org.apache.zookeeper.server.DataTree: void deleteNode(java.lang.String,long)>($r62, $l29);

        goto label29;

     label06:
        r96 = (org.apache.zookeeper.txn.SetDataTxn) r2;

        $r57 = virtualinvoke r96.<org.apache.zookeeper.txn.SetDataTxn: java.lang.String getPath()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path> = $r57;

        $r58 = virtualinvoke r96.<org.apache.zookeeper.txn.SetDataTxn: java.lang.String getPath()>();

        $r59 = virtualinvoke r96.<org.apache.zookeeper.txn.SetDataTxn: byte[] getData()>();

        $i26 = virtualinvoke r96.<org.apache.zookeeper.txn.SetDataTxn: int getVersion()>();

        $l27 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $l28 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getTime()>();

        $r60 = virtualinvoke r8.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int,long,long)>($r58, $r59, $i26, $l27, $l28);

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: org.apache.zookeeper.data.Stat stat> = $r60;

        goto label29;

     label07:
        r97 = (org.apache.zookeeper.txn.SetACLTxn) r2;

        $r53 = virtualinvoke r97.<org.apache.zookeeper.txn.SetACLTxn: java.lang.String getPath()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path> = $r53;

        $r54 = virtualinvoke r97.<org.apache.zookeeper.txn.SetACLTxn: java.lang.String getPath()>();

        $r55 = virtualinvoke r97.<org.apache.zookeeper.txn.SetACLTxn: java.util.List getAcl()>();

        $i25 = virtualinvoke r97.<org.apache.zookeeper.txn.SetACLTxn: int getVersion()>();

        $r56 = virtualinvoke r8.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.data.Stat setACL(java.lang.String,java.util.List,int)>($r54, $r55, $i25);

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: org.apache.zookeeper.data.Stat stat> = $r56;

        goto label29;

     label08:
        $l34 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $l35 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        virtualinvoke r8.<org.apache.zookeeper.server.DataTree: void killSession(long,long)>($l34, $l35);

        goto label29;

     label09:
        r67 = (org.apache.zookeeper.txn.ErrorTxn) r2;

        $i33 = virtualinvoke r67.<org.apache.zookeeper.txn.ErrorTxn: int getErr()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err> = $i33;

        goto label29;

     label10:
        r51 = (org.apache.zookeeper.txn.CheckVersionTxn) r2;

        $r52 = virtualinvoke r51.<org.apache.zookeeper.txn.CheckVersionTxn: java.lang.String getPath()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path> = $r52;

        goto label29;

     label11:
        r3 = (org.apache.zookeeper.txn.MultiTxn) r2;

        $r4 = virtualinvoke r3.<org.apache.zookeeper.txn.MultiTxn: java.util.List getTxns()>();

        $r105 = new java.util.ArrayList;

        specialinvoke $r105.<java.util.ArrayList: void <init>()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.util.List multiResult> = $r105;

        z5 = 0;

        z10 = 0;

        z9 = 0;

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r50 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r98 = (org.apache.zookeeper.txn.Txn) $r50;

        $i24 = virtualinvoke r98.<org.apache.zookeeper.txn.Txn: int getType()>();

        $i50 = (int) -1;

        if $i24 != $i50 goto label13;

        z5 = 1;

        z10 = 1;

        z9 = 1;

        goto label14;

     label13:
        goto label12;

     label14:
        z6 = 0;

        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z7 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label29;

        $r31 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.zookeeper.txn.Txn) $r31;

        $r33 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: byte[] getData()>();

        $r34 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r33);

        $i18 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: int getType()>();

        tableswitch($i18)
        {
            case -1: goto label19;
            case 0: goto label21;
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label21;
            case 4: goto label21;
            case 5: goto label18;
            case 6: goto label21;
            case 7: goto label21;
            case 8: goto label21;
            case 9: goto label21;
            case 10: goto label21;
            case 11: goto label21;
            case 12: goto label21;
            case 13: goto label20;
            default: goto label21;
        };

     label16:
        $r106 = new org.apache.zookeeper.txn.CreateTxn;

        specialinvoke $r106.<org.apache.zookeeper.txn.CreateTxn: void <init>()>();

        r99 = $r106;

        goto label22;

     label17:
        $r107 = new org.apache.zookeeper.txn.DeleteTxn;

        specialinvoke $r107.<org.apache.zookeeper.txn.DeleteTxn: void <init>()>();

        r99 = $r107;

        goto label22;

     label18:
        $r108 = new org.apache.zookeeper.txn.SetDataTxn;

        specialinvoke $r108.<org.apache.zookeeper.txn.SetDataTxn: void <init>()>();

        r99 = $r108;

        goto label22;

     label19:
        $r109 = new org.apache.zookeeper.txn.ErrorTxn;

        specialinvoke $r109.<org.apache.zookeeper.txn.ErrorTxn: void <init>()>();

        r99 = $r109;

        z6 = 1;

        goto label22;

     label20:
        $r110 = new org.apache.zookeeper.txn.CheckVersionTxn;

        specialinvoke $r110.<org.apache.zookeeper.txn.CheckVersionTxn: void <init>()>();

        r99 = $r110;

        goto label22;

     label21:
        $r112 = new java.io.IOException;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type of op: ");

        $i23 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: int getType()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r112.<java.io.IOException: void <init>(java.lang.String)>($r49);

        throw $r112;

     label22:
        $z8 = <org.apache.zookeeper.server.DataTree: boolean $assertionsDisabled>;

        if $z8 != 0 goto label23;

        if r99 != null goto label23;

        $r113 = new java.lang.AssertionError;

        specialinvoke $r113.<java.lang.AssertionError: void <init>()>();

        throw $r113;

     label23:
        staticinvoke <org.apache.zookeeper.server.ByteBufferInputStream: void byteBuffer2Record(java.nio.ByteBuffer,org.apache.jute.Record)>($r34, r99);

        if z9 == 0 goto label26;

        $i22 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: int getType()>();

        $i52 = (int) -1;

        if $i22 == $i52 goto label26;

        if z6 == 0 goto label24;

        $r39 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code RUNTIMEINCONSISTENCY>;

        $i39 = virtualinvoke $r39.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        goto label25;

     label24:
        $r37 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code OK>;

        $i39 = virtualinvoke $r37.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

     label25:
        $i54 = (int) -1;

        virtualinvoke r32.<org.apache.zookeeper.txn.Txn: void setType(int)>($i54);

        $r114 = new org.apache.zookeeper.txn.ErrorTxn;

        specialinvoke $r114.<org.apache.zookeeper.txn.ErrorTxn: void <init>(int)>($i39);

        r99 = $r114;

     label26:
        if z10 == 0 goto label27;

        $z1 = <org.apache.zookeeper.server.DataTree: boolean $assertionsDisabled>;

        if $z1 != 0 goto label27;

        $i21 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: int getType()>();

        $i56 = (int) -1;

        if $i21 == $i56 goto label27;

        $r115 = new java.lang.AssertionError;

        specialinvoke $r115.<java.lang.AssertionError: void <init>()>();

        throw $r115;

     label27:
        $r116 = new org.apache.zookeeper.txn.TxnHeader;

        $l40 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $i41 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getCxid()>();

        $l42 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $l43 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getTime()>();

        $i44 = virtualinvoke r32.<org.apache.zookeeper.txn.Txn: int getType()>();

        specialinvoke $r116.<org.apache.zookeeper.txn.TxnHeader: void <init>(long,int,long,long,int)>($l40, $i41, $l42, $l43, $i44);

        $r101 = virtualinvoke r8.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r116, r99);

        $r102 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.util.List multiResult>;

        interfaceinvoke $r102.<java.util.List: boolean add(java.lang.Object)>($r101);

        $i45 = $r101.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        if $i45 == 0 goto label28;

        $i19 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        if $i19 != 0 goto label28;

        $i20 = $r101.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err> = $i20;

     label28:
        goto label15;

     label29:
        goto label33;

     label30:
        $r84 := @caughtexception;

        $r85 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $z4 = interfaceinvoke $r85.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label31;

        $r88 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed: ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r88.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r93, $r84);

     label31:
        $r86 = virtualinvoke $r84.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $i37 = virtualinvoke $r86.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err> = $i37;

        goto label33;

     label32:
        $r75 := @caughtexception;

        $r76 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r76.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label33;

        $r78 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed: ");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r78.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r83, $r75);

     label33:
        $l46 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: long zxid>;

        $l47 = r8.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

        $b48 = $l46 cmp $l47;

        $i57 = (int) $b48;

        if $i57 <= 0 goto label34;

        $l17 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: long zxid>;

        r8.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid> = $l17;

     label34:
        $i5 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        if $i5 != 1 goto label39;

        $i10 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r17 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code NODEEXISTS>;

        $i11 = virtualinvoke $r17.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        if $i10 != $i11 goto label39;

        $r19 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adjusting parent cversion for Txn: ");

        $i12 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path:");

        $r23 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" err: ");

        $i13 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>($r27);

        $r28 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        $i14 = virtualinvoke $r28.<java.lang.String: int lastIndexOf(int)>(47);

        $r29 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

        r103 = (org.apache.zookeeper.txn.CreateTxn) r2;

     label35:
        $i15 = virtualinvoke r103.<org.apache.zookeeper.txn.CreateTxn: int getParentCVersion()>();

        $l16 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        virtualinvoke r8.<org.apache.zookeeper.server.DataTree: void setCversionPzxid(java.lang.String,int,long)>($r30, $i15, $l16);

     label36:
        goto label38;

     label37:
        $r68 := @caughtexception;

        $r70 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set parent cversion for: ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r73, $r68);

        $r74 = virtualinvoke $r68.<org.apache.zookeeper.KeeperException$NoNodeException: org.apache.zookeeper.KeeperException$Code code()>();

        $i36 = virtualinvoke $r74.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err> = $i36;

     label38:
        goto label40;

     label39:
        $i6 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r9 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code OK>;

        $i7 = virtualinvoke $r9.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        if $i6 == $i7 goto label40;

        $r11 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring processTxn failure hdr: ");

        $i8 = virtualinvoke r1.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : error: ");

        $i9 = $r104.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label40:
        return $r104;

        catch org.apache.zookeeper.KeeperException from label01 to label29 with label30;
        catch java.io.IOException from label01 to label29 with label32;
        catch org.apache.zookeeper.KeeperException$NoNodeException from label35 to label36 with label37;
    }

    void killSession(long, long)
    {
        long l0, l1;
        org.apache.zookeeper.KeeperException$NoNodeException $r17;
        java.util.HashSet r4;
        java.lang.Long $r2;
        java.util.Map $r1;
        java.lang.String r7, $r14, $r16, $r23, $r25;
        boolean $z0, $z1;
        org.slf4j.Logger $r8, $r10, $r19;
        java.util.Iterator $r5;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r3, $r6;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r18, $r20, $r21, $r22, $r24;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        r4 = (java.util.HashSet) $r3;

        if r4 == null goto label6;

        $r5 = virtualinvoke r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

     label2:
        virtualinvoke r0.<org.apache.zookeeper.server.DataTree: void deleteNode(java.lang.String,long)>(r7, l1);

        $r8 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r10 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting ephemeral node ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for session 0x");

        $r14 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        $r19 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring NoNodeException for path ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while removing ephemeral for dead session 0x");

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r25);

     label5:
        goto label1;

     label6:
        return;

        catch org.apache.zookeeper.KeeperException$NoNodeException from label2 to label3 with label4;
    }

    private void getCounts(java.lang.String, org.apache.zookeeper.server.DataTree$Counts)
    {
        java.lang.Throwable $r15;
        byte[] $r4, $r5;
        java.lang.Object[] $r14;
        long $l2, $l3, $l4;
        java.lang.String[] $r13, r16, r17;
        org.apache.zookeeper.server.DataTree$Counts r6;
        int $i0, $i1, $i5, $i6, $i7, i8, i9;
        java.lang.String r1, r7, $r12;
        org.apache.zookeeper.server.DataNode $r2;
        java.util.Set $r3;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.zookeeper.server.DataTree$Counts;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>(r1);

        if $r2 != null goto label01;

        return;

     label01:
        r16 = null;

        entermonitor $r2;

     label02:
        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.DataNode: java.util.Set getChildren()>();

        if $r3 == null goto label03;

        $i6 = interfaceinvoke $r3.<java.util.Set: int size()>();

        $r13 = newarray (java.lang.String)[$i6];

        $r14 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        r16 = (java.lang.String[]) $r14;

     label03:
        $r4 = $r2.<org.apache.zookeeper.server.DataNode: byte[] data>;

        if $r4 != null goto label04;

        $i7 = 0;

        goto label05;

     label04:
        $r5 = $r2.<org.apache.zookeeper.server.DataNode: byte[] data>;

        $i7 = lengthof $r5;

     label05:
        exitmonitor $r2;

     label06:
        goto label09;

     label07:
        $r15 := @caughtexception;

        exitmonitor $r2;

     label08:
        throw $r15;

     label09:
        $i0 = r6.<org.apache.zookeeper.server.DataTree$Counts: int count>;

        $i1 = $i0 + 1;

        r6.<org.apache.zookeeper.server.DataTree$Counts: int count> = $i1;

        $l3 = r6.<org.apache.zookeeper.server.DataTree$Counts: long bytes>;

        $l2 = (long) $i7;

        $l4 = $l3 + $l2;

        r6.<org.apache.zookeeper.server.DataTree$Counts: long bytes> = $l4;

        if r16 == null goto label10;

        $i5 = lengthof r16;

        if $i5 != 0 goto label11;

     label10:
        return;

     label11:
        r17 = r16;

        i8 = lengthof r16;

        i9 = 0;

     label12:
        if i9 >= i8 goto label13;

        r7 = r17[i9];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void getCounts(java.lang.String,org.apache.zookeeper.server.DataTree$Counts)>($r12, r6);

        i9 = i9 + 1;

        goto label12;

     label13:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void updateQuotaForPath(java.lang.String)
    {
        java.lang.Throwable $r18;
        byte[] $r12;
        long $l0;
        org.apache.zookeeper.server.DataTree$Counts $r0;
        int $i1;
        java.lang.String r2, $r9, $r11, $r17;
        org.apache.zookeeper.server.DataNode $r10;
        org.slf4j.Logger $r14;
        org.apache.zookeeper.StatsTrack $r3;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r13, $r15, $r16;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.zookeeper.server.DataTree$Counts;

        specialinvoke $r0.<org.apache.zookeeper.server.DataTree$Counts: void <init>(org.apache.zookeeper.server.DataTree$1)>(null);

        specialinvoke r1.<org.apache.zookeeper.server.DataTree: void getCounts(java.lang.String,org.apache.zookeeper.server.DataTree$Counts)>(r2, $r0);

        $r3 = new org.apache.zookeeper.StatsTrack;

        specialinvoke $r3.<org.apache.zookeeper.StatsTrack: void <init>()>();

        $l0 = $r0.<org.apache.zookeeper.server.DataTree$Counts: long bytes>;

        virtualinvoke $r3.<org.apache.zookeeper.StatsTrack: void setBytes(long)>($l0);

        $i1 = $r0.<org.apache.zookeeper.server.DataTree$Counts: int count>;

        virtualinvoke $r3.<org.apache.zookeeper.StatsTrack: void setCount(int)>($i1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/zookeeper/quota");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("zookeeper_stats");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r1.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>($r9);

        if $r10 != null goto label1;

        $r14 = <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing quota stat node ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>($r17);

        return;

     label1:
        entermonitor $r10;

     label2:
        $r11 = virtualinvoke $r3.<org.apache.zookeeper.StatsTrack: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        $r10.<org.apache.zookeeper.server.DataNode: byte[] data> = $r12;

        exitmonitor $r10;

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        exitmonitor $r10;

     label5:
        throw $r18;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void traverseNode(java.lang.String)
    {
        java.lang.Throwable $r15;
        java.lang.Object[] $r14;
        java.lang.String[] $r13, r16, r17;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r1, $r4, $r5, r7, $r12;
        org.apache.zookeeper.server.DataNode $r2;
        boolean $z0;
        org.apache.zookeeper.common.PathTrie $r6;
        java.util.Set $r3;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>(r1);

        r16 = null;

        entermonitor $r2;

     label01:
        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.DataNode: java.util.Set getChildren()>();

        if $r3 == null goto label02;

        $i3 = interfaceinvoke $r3.<java.util.Set: int size()>();

        $r13 = newarray (java.lang.String)[$i3];

        $r14 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        r16 = (java.lang.String[]) $r14;

     label02:
        exitmonitor $r2;

     label03:
        goto label06;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r2;

     label05:
        throw $r15;

     label06:
        if r16 == null goto label07;

        $i2 = lengthof r16;

        if $i2 != 0 goto label09;

     label07:
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/zookeeper_limits");

        if $z0 == 0 goto label08;

        $r4 = "/zookeeper/quota";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("/zookeeper_limits");

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void updateQuotaForPath(java.lang.String)>($r5);

        $r6 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.common.PathTrie pTrie>;

        virtualinvoke $r6.<org.apache.zookeeper.common.PathTrie: void addPath(java.lang.String)>($r5);

     label08:
        return;

     label09:
        r17 = r16;

        i4 = lengthof r16;

        i5 = 0;

     label10:
        if i5 >= i4 goto label11;

        r7 = r17[i5];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void traverseNode(java.lang.String)>($r12);

        i5 = i5 + 1;

        goto label10;

     label11:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    private void setupQuota()
    {
        org.apache.zookeeper.server.DataTree r0;
        org.apache.zookeeper.server.DataNode $r1;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>("/zookeeper/quota");

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void traverseNode(java.lang.String)>("/zookeeper/quota");

        return;
    }

    void serializeNode(org.apache.jute.OutputArchive, java.lang.StringBuilder) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r8;
        java.lang.String[] $r7, r10, r11;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.jute.OutputArchive r4;
        java.lang.String $r1, r6;
        org.apache.zookeeper.server.DataNode $r3;
        java.util.Set $r5;
        org.apache.zookeeper.server.DataTree r2;
        java.lang.StringBuilder r0;

        r2 := @this: org.apache.zookeeper.server.DataTree;

        r4 := @parameter0: org.apache.jute.OutputArchive;

        r0 := @parameter1: java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke r2.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>($r1);

        if $r3 != null goto label1;

        return;

     label1:
        r10 = null;

        entermonitor $r3;

     label2:
        $i0 = r2.<org.apache.zookeeper.server.DataTree: int scount>;

        $i1 = $i0 + 1;

        r2.<org.apache.zookeeper.server.DataTree: int scount> = $i1;

        interfaceinvoke r4.<org.apache.jute.OutputArchive: void writeString(java.lang.String,java.lang.String)>($r1, "path");

        interfaceinvoke r4.<org.apache.jute.OutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>($r3, "node");

        $r5 = virtualinvoke $r3.<org.apache.zookeeper.server.DataNode: java.util.Set getChildren()>();

        if $r5 == null goto label3;

        $i3 = interfaceinvoke $r5.<java.util.Set: int size()>();

        $r7 = newarray (java.lang.String)[$i3];

        $r8 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r10 = (java.lang.String[]) $r8;

     label3:
        exitmonitor $r3;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r9;

     label7:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i2 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        if r10 == null goto label9;

        r11 = r10;

        i4 = lengthof r10;

        i5 = 0;

     label8:
        if i5 >= i4 goto label9;

        r6 = r11[i5];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i2, 2147483647);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke r2.<org.apache.zookeeper.server.DataTree: void serializeNode(org.apache.jute.OutputArchive,java.lang.StringBuilder)>(r4, r0);

        i5 = i5 + 1;

        goto label8;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void deserializeList(java.util.Map, org.apache.jute.InputArchive) throws java.io.IOException
    {
        org.apache.jute.InputArchive r0;
        long $l0, $l1, $l2, $l4;
        org.apache.zookeeper.data.ACL $r9;
        java.util.ArrayList $r8;
        byte $b3;
        java.lang.Long $r1;
        java.util.Map r5, $r6;
        int i5, $i6, $i8;
        boolean $z0;
        org.apache.zookeeper.server.DataTree r2;
        org.apache.jute.Index $r4;

        r2 := @this: org.apache.zookeeper.server.DataTree;

        r5 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.jute.InputArchive;

        i5 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("map");

     label1:
        if i5 <= 0 goto label5;

        $l0 = interfaceinvoke r0.<org.apache.jute.InputArchive: long readLong(java.lang.String)>("long");

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l1 = r2.<org.apache.zookeeper.server.DataTree: long aclIndex>;

        $l2 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b3 = $l1 cmp $l2;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label2;

        $l4 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        r2.<org.apache.zookeeper.server.DataTree: long aclIndex> = $l4;

     label2:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r0.<org.apache.jute.InputArchive: org.apache.jute.Index startVector(java.lang.String)>("acls");

     label3:
        $z0 = interfaceinvoke $r4.<org.apache.jute.Index: boolean done()>();

        if $z0 != 0 goto label4;

        $r9 = new org.apache.zookeeper.data.ACL;

        specialinvoke $r9.<org.apache.zookeeper.data.ACL: void <init>()>();

        virtualinvoke $r9.<org.apache.zookeeper.data.ACL: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, "acl");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        interfaceinvoke $r4.<org.apache.jute.Index: void incr()>();

        goto label3;

     label4:
        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        $r6 = r2.<org.apache.zookeeper.server.DataTree: java.util.Map aclKeyMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r1);

        $i8 = (int) -1;

        i5 = i5 + $i8;

        goto label1;

     label5:
        return;
    }

    private synchronized void serializeList(java.util.Map, org.apache.jute.OutputArchive) throws java.io.IOException
    {
        long $l1;
        org.apache.zookeeper.data.ACL r12;
        java.lang.Long $r7;
        java.util.Map r1;
        org.apache.jute.OutputArchive r0;
        int $i0;
        boolean $z0, $z1;
        java.util.Map$Entry r5;
        java.util.Iterator $r3, $r10;
        java.util.Set $r2;
        java.util.List r9;
        org.apache.zookeeper.server.DataTree r13;
        java.lang.Object $r4, $r6, $r8, $r11;

        r13 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.jute.OutputArchive;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i0, "map");

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.Long) $r6;

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeLong(long,java.lang.String)>($l1, "long");

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.util.List) $r8;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startVector(java.util.List,java.lang.String)>(r9, "acls");

        $r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.zookeeper.data.ACL) $r11;

        virtualinvoke r12.<org.apache.zookeeper.data.ACL: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, "acl");

        goto label2;

     label3:
        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endVector(java.util.List,java.lang.String)>(r9, "acls");

        goto label1;

     label4:
        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        java.util.Map $r2;
        org.apache.zookeeper.server.DataTree r0;
        org.apache.jute.OutputArchive r1;
        java.lang.StringBuilder $r3;
        java.lang.String r5;
        org.apache.zookeeper.server.DataNode $r4;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: org.apache.jute.OutputArchive;

        r5 := @parameter1: java.lang.String;

        r0.<org.apache.zookeeper.server.DataTree: int scount> = 0;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map longKeyMap>;

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void serializeList(java.util.Map,org.apache.jute.OutputArchive)>($r2, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        virtualinvoke r0.<org.apache.zookeeper.server.DataTree: void serializeNode(org.apache.jute.OutputArchive,java.lang.StringBuilder)>(r1, $r3);

        $r4 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        if $r4 == null goto label1;

        interfaceinvoke r1.<org.apache.jute.OutputArchive: void writeString(java.lang.String,java.lang.String)>("/", "path");

     label1:
        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.InputArchive r1;
        byte $b3;
        java.lang.Long $r17, $r21;
        java.util.Map $r2, $r16, $r20;
        boolean $z0;
        org.apache.zookeeper.server.DataNode $r4, $r11, $r12, $r13, $r32;
        java.util.concurrent.ConcurrentHashMap $r3, $r5, $r7, $r9;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r33;
        long $l2;
        java.util.HashSet r31, $r35;
        int $i0, $i1, $i5;
        org.apache.zookeeper.data.StatPersisted $r15;
        java.lang.String $r8, $r14, $r28, r29, r30;
        java.io.IOException $r34;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r10, $r18;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: org.apache.jute.InputArchive;

        r29 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map longKeyMap>;

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void deserializeList(java.util.Map,org.apache.jute.InputArchive)>($r2, r1);

        $r3 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        r30 = interfaceinvoke r1.<org.apache.jute.InputArchive: java.lang.String readString(java.lang.String)>("path");

     label1:
        $z0 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z0 != 0 goto label6;

        $r32 = new org.apache.zookeeper.server.DataNode;

        specialinvoke $r32.<org.apache.zookeeper.server.DataNode: void <init>()>();

        interfaceinvoke r1.<org.apache.jute.InputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r32, "node");

        $r7 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r32);

        $i0 = virtualinvoke r30.<java.lang.String: int lastIndexOf(int)>(47);

        $i5 = (int) -1;

        if $i0 != $i5 goto label2;

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root> = $r32;

        goto label5;

     label2:
        $r8 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r9 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r11 = (org.apache.zookeeper.server.DataNode) $r10;

        $r32.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.server.DataNode parent> = $r11;

        $r12 = $r32.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.server.DataNode parent>;

        if $r12 != null goto label3;

        $r34 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Datatree, unable to find parent ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of path ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>($r28);

        throw $r34;

     label3:
        $r13 = $r32.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.server.DataNode parent>;

        $i1 = $i0 + 1;

        $r14 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r13.<org.apache.zookeeper.server.DataNode: boolean addChild(java.lang.String)>($r14);

        $r15 = $r32.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l2 = virtualinvoke $r15.<org.apache.zookeeper.data.StatPersisted: long getEphemeralOwner()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label5;

        $r16 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r31 = (java.util.HashSet) $r18;

        if r31 != null goto label4;

        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>()>();

        r31 = $r35;

        $r20 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r35);

     label4:
        virtualinvoke r31.<java.util.HashSet: boolean add(java.lang.Object)>(r30);

     label5:
        r30 = interfaceinvoke r1.<org.apache.jute.InputArchive: java.lang.String readString(java.lang.String)>("path");

        goto label1;

     label6:
        $r5 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r4 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("/", $r4);

        specialinvoke r0.<org.apache.zookeeper.server.DataTree: void setupQuota()>();

        return;
    }

    public synchronized void dumpWatchesSummary(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        org.apache.zookeeper.server.WatchManager $r2;
        org.apache.zookeeper.server.DataTree r1;
        java.lang.String $r3;

        r1 := @this: org.apache.zookeeper.server.DataTree;

        r0 := @parameter0: java.io.PrintWriter;

        $r2 = r1.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.WatchManager: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        return;
    }

    public synchronized void dumpWatches(java.io.PrintWriter, boolean)
    {
        java.io.PrintWriter r1;
        org.apache.zookeeper.server.WatchManager $r2;
        org.apache.zookeeper.server.DataTree r0;
        boolean z0;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r2.<org.apache.zookeeper.server.WatchManager: void dumpWatches(java.io.PrintWriter,boolean)>(r1, z0);

        return;
    }

    public void dumpEphemerals(java.io.PrintWriter)
    {
        java.lang.Long $r11, $r18;
        java.util.Map $r1, $r17;
        boolean $z0, $z1;
        java.io.PrintWriter r3;
        java.util.Set $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r12, $r13, $r15, $r24, $r25, $r26;
        java.lang.Throwable $r28;
        long $l1;
        java.util.HashSet r20;
        int $i0;
        java.lang.String $r8, $r14, $r16, r23, $r27;
        java.util.Iterator $r9, $r21;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r10, $r19, $r22;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r3 := @parameter0: java.io.PrintWriter;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sessions with Ephemerals (");

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.Long) $r10;

        $l1 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r14 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r17 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r19 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        r20 = (java.util.HashSet) $r19;

        entermonitor r20;

     label2:
        $r21 = virtualinvoke r20.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r22;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        goto label3;

     label4:
        exitmonitor r20;

     label5:
        goto label8;

     label6:
        $r28 := @caughtexception;

        exitmonitor r20;

     label7:
        throw $r28;

     label8:
        goto label1;

     label9:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removeCnxn(org.apache.zookeeper.Watcher)
    {
        org.apache.zookeeper.server.WatchManager $r2, $r3;
        org.apache.zookeeper.Watcher r1;
        org.apache.zookeeper.server.DataTree r0;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r1 := @parameter0: org.apache.zookeeper.Watcher;

        $r2 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r2.<org.apache.zookeeper.server.WatchManager: void removeWatcher(org.apache.zookeeper.Watcher)>(r1);

        $r3 = r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        virtualinvoke $r3.<org.apache.zookeeper.server.WatchManager: void removeWatcher(org.apache.zookeeper.Watcher)>(r1);

        return;
    }

    public void clear()
    {
        org.apache.zookeeper.server.DataTree r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r0.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode root> = null;

        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        $r2 = r0.<org.apache.zookeeper.server.DataTree: java.util.Map ephemerals>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public void setWatches(long, java.util.List, java.util.List, java.util.List, org.apache.zookeeper.Watcher)
    {
        byte $b2, $b4, $b6, $b8;
        long $l0, l1, $l3, $l5, $l7;
        org.apache.zookeeper.data.StatPersisted $r9, $r20, $r30, $r31;
        java.lang.String r42, r44, r46;
        org.apache.zookeeper.Watcher r10;
        org.apache.zookeeper.Watcher$Event$EventType $r14, $r17, $r23, $r27, $r35, $r38, $r41;
        org.apache.zookeeper.server.DataTree r7;
        boolean $z0, $z1, $z2;
        org.apache.zookeeper.server.DataNode $r8, $r19, $r29;
        org.apache.zookeeper.Watcher$Event$KeeperState $r13, $r16, $r22, $r26, $r34, $r37, $r40;
        java.util.List r0, r2, r4;
        int $i9, $i10, $i11, $i12;
        java.util.Iterator $r1, $r3, $r5;
        org.apache.zookeeper.WatchedEvent r43, r45, r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        org.apache.zookeeper.server.WatchManager $r11, $r24, $r32;
        java.lang.Object $r6, $r18, $r28;

        r7 := @this: org.apache.zookeeper.server.DataTree;

        l1 := @parameter0: long;

        r0 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r10 := @parameter4: org.apache.zookeeper.Watcher;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r28 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.lang.String) $r28;

        $r29 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>(r42);

        r43 = null;

        if $r29 != null goto label02;

        $r48 = new org.apache.zookeeper.WatchedEvent;

        $r41 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDeleted>;

        $r40 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r48.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r41, $r40, r42);

        r43 = $r48;

        goto label04;

     label02:
        $r30 = $r29.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l5 = virtualinvoke $r30.<org.apache.zookeeper.data.StatPersisted: long getCzxid()>();

        $b6 = $l5 cmp l1;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label03;

        $r49 = new org.apache.zookeeper.WatchedEvent;

        $r38 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeCreated>;

        $r37 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r49.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r38, $r37, r42);

        r43 = $r49;

        goto label04;

     label03:
        $r31 = $r29.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l7 = virtualinvoke $r31.<org.apache.zookeeper.data.StatPersisted: long getMzxid()>();

        $b8 = $l7 cmp l1;

        $i10 = (int) $b8;

        if $i10 <= 0 goto label04;

        $r50 = new org.apache.zookeeper.WatchedEvent;

        $r35 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDataChanged>;

        $r34 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r50.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r35, $r34, r42);

        r43 = $r50;

     label04:
        if r43 == null goto label05;

        interfaceinvoke r10.<org.apache.zookeeper.Watcher: void process(org.apache.zookeeper.WatchedEvent)>(r43);

        goto label06;

     label05:
        $r32 = r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r32.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r42, r10);

     label06:
        goto label01;

     label07:
        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r18 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r18;

        $r19 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>(r44);

        r45 = null;

        if $r19 != null goto label09;

        goto label11;

     label09:
        $r20 = $r19.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l3 = virtualinvoke $r20.<org.apache.zookeeper.data.StatPersisted: long getMzxid()>();

        $b4 = $l3 cmp l1;

        $i11 = (int) $b4;

        if $i11 <= 0 goto label10;

        $r51 = new org.apache.zookeeper.WatchedEvent;

        $r27 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDataChanged>;

        $r26 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r51.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r27, $r26, r44);

        r45 = $r51;

        goto label11;

     label10:
        $r52 = new org.apache.zookeeper.WatchedEvent;

        $r23 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeCreated>;

        $r22 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r52.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r23, $r22, r44);

        r45 = $r52;

     label11:
        if r45 == null goto label12;

        interfaceinvoke r10.<org.apache.zookeeper.Watcher: void process(org.apache.zookeeper.WatchedEvent)>(r45);

        goto label13;

     label12:
        $r24 = r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager dataWatches>;

        virtualinvoke $r24.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r44, r10);

     label13:
        goto label08;

     label14:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) $r6;

        $r8 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataNode getNode(java.lang.String)>(r46);

        r47 = null;

        if $r8 != null goto label16;

        $r53 = new org.apache.zookeeper.WatchedEvent;

        $r17 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeDeleted>;

        $r16 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r53.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r17, $r16, r46);

        r47 = $r53;

        goto label17;

     label16:
        $r9 = $r8.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l0 = virtualinvoke $r9.<org.apache.zookeeper.data.StatPersisted: long getPzxid()>();

        $b2 = $l0 cmp l1;

        $i12 = (int) $b2;

        if $i12 <= 0 goto label17;

        $r54 = new org.apache.zookeeper.WatchedEvent;

        $r14 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType NodeChildrenChanged>;

        $r13 = <org.apache.zookeeper.Watcher$Event$KeeperState: org.apache.zookeeper.Watcher$Event$KeeperState SyncConnected>;

        specialinvoke $r54.<org.apache.zookeeper.WatchedEvent: void <init>(org.apache.zookeeper.Watcher$Event$EventType,org.apache.zookeeper.Watcher$Event$KeeperState,java.lang.String)>($r14, $r13, r46);

        r47 = $r54;

     label17:
        if r47 == null goto label18;

        interfaceinvoke r10.<org.apache.zookeeper.Watcher: void process(org.apache.zookeeper.WatchedEvent)>(r47);

        goto label19;

     label18:
        $r11 = r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.WatchManager childWatches>;

        virtualinvoke $r11.<org.apache.zookeeper.server.WatchManager: void addWatch(java.lang.String,org.apache.zookeeper.Watcher)>(r46, r10);

     label19:
        goto label15;

     label20:
        return;
    }

    public void setCversionPzxid(java.lang.String, int, long) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Throwable $r9;
        long l1;
        org.apache.zookeeper.KeeperException$NoNodeException $r11;
        org.apache.zookeeper.data.StatPersisted $r3, $r4, $r5, $r6;
        int $i0, $i2, $i3, $i4, i5, $i7;
        java.lang.String r10;
        boolean $z0;
        org.apache.zookeeper.server.DataNode $r8;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.zookeeper.server.DataTree;

        r10 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        l1 := @parameter2: long;

        $z0 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r10.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label1:
        $r1 = r0.<org.apache.zookeeper.server.DataTree: java.util.concurrent.ConcurrentHashMap nodes>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r10);

        $r8 = (org.apache.zookeeper.server.DataNode) $r2;

        if $r8 != null goto label2;

        $r11 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r11.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>(java.lang.String)>(r10);

        throw $r11;

     label2:
        entermonitor $r8;

     label3:
        $i7 = (int) -1;

        if i5 != $i7 goto label4;

        $r6 = $r8.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i2 = virtualinvoke $r6.<org.apache.zookeeper.data.StatPersisted: int getCversion()>();

        i5 = $i2 + 1;

     label4:
        $r3 = $r8.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i0 = virtualinvoke $r3.<org.apache.zookeeper.data.StatPersisted: int getCversion()>();

        if i5 <= $i0 goto label5;

        $r4 = $r8.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r4.<org.apache.zookeeper.data.StatPersisted: void setCversion(int)>(i5);

        $r5 = $r8.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r5.<org.apache.zookeeper.data.StatPersisted: void setPzxid(long)>(l1);

     label5:
        exitmonitor $r8;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r8;

     label8:
        throw $r9;

     label9:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r1;
        int $i0, $i1;
        java.lang.Class $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        <org.apache.zookeeper.server.DataTree: java.lang.String quotaZookeeper> = "/zookeeper/quota";

        <org.apache.zookeeper.server.DataTree: java.lang.String procZookeeper> = "/zookeeper";

        <org.apache.zookeeper.server.DataTree: java.lang.String rootZookeeper> = "/";

        $r0 = class "Lorg/apache/zookeeper/server/DataTree;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.zookeeper.server.DataTree: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/DataTree;");

        <org.apache.zookeeper.server.DataTree: org.slf4j.Logger LOG> = $r1;

        $r2 = "/zookeeper";

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

        <org.apache.zookeeper.server.DataTree: java.lang.String procChildZookeeper> = $r3;

        $r5 = "/zookeeper/quota";

        $r4 = "/zookeeper";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);

        <org.apache.zookeeper.server.DataTree: java.lang.String quotaChildZookeeper> = $r6;

        return;
    }
}
