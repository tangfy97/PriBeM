class org.mozilla.javascript.NativeScript extends org.mozilla.javascript.BaseFunction
{
    static final long serialVersionUID;
    private static final java.lang.Object SCRIPT_TAG;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_compile;
    private static final int Id_exec;
    private static final int MAX_PROTOTYPE_ID;
    private org.mozilla.javascript.Script script;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.NativeScript $r0;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeScript;

        specialinvoke $r0.<org.mozilla.javascript.NativeScript: void <init>(org.mozilla.javascript.Script)>(null);

        virtualinvoke $r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(4, r1, z0);

        return;
    }

    private void <init>(org.mozilla.javascript.Script)
    {
        org.mozilla.javascript.Script r1;
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        r1 := @parameter0: org.mozilla.javascript.Script;

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>()>();

        r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script> = r1;

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        return "Script";
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r8;
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.Script $r1, $r5;
        org.mozilla.javascript.Scriptable r4, r7;
        java.lang.Object $r2, $r6;
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r7 := @parameter2: org.mozilla.javascript.Scriptable;

        r8 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script>;

        if $r1 == null goto label1;

        $r5 = r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script>;

        $r6 = interfaceinvoke $r5.<org.mozilla.javascript.Script: java.lang.Object exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r3, r4);

        return $r6;

     label1:
        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r2;
    }

    public org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.Scriptable r3;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.EvaluatorException $r0;
        org.mozilla.javascript.NativeScript r1;

        r1 := @this: org.mozilla.javascript.NativeScript;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.script.is.not.constructor");

        throw $r0;
    }

    public int getLength()
    {
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        return 0;
    }

    public int getArity()
    {
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        return 0;
    }

    java.lang.String decompile(int, int)
    {
        org.mozilla.javascript.Script $r1, $r3;
        org.mozilla.javascript.NativeFunction $r4;
        int i0, i1;
        java.lang.String $r2, $r5;
        org.mozilla.javascript.NativeScript r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script>;

        $z0 = $r1 instanceof org.mozilla.javascript.NativeFunction;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script>;

        $r4 = (org.mozilla.javascript.NativeFunction) $r3;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.NativeFunction: java.lang.String decompile(int,int)>(i0, i1);

        return $r5;

     label1:
        $r2 = specialinvoke r0.<org.mozilla.javascript.BaseFunction: java.lang.String decompile(int,int)>(i0, i1);

        return $r2;
    }

    protected void initPrototypeId(int)
    {
        byte b1;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;
        org.mozilla.javascript.NativeScript r0;

        r0 := @this: org.mozilla.javascript.NativeScript;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label5;
        };

     label1:
        b1 = 1;

        r3 = "constructor";

        goto label6;

     label2:
        b1 = 0;

        r3 = "toString";

        goto label6;

     label3:
        b1 = 0;

        r3 = "exec";

        goto label6;

     label4:
        b1 = 1;

        r3 = "compile";

        goto label6;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label6:
        $r4 = <org.mozilla.javascript.NativeScript: java.lang.Object SCRIPT_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeScript: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0, $i1;
        java.lang.String $r6, $r10, $r16, $r19;
        boolean $z0;
        org.mozilla.javascript.NativeScript $r4, $r9, $r13, r17;
        org.mozilla.javascript.Context r7;
        org.mozilla.javascript.EvaluatorException $r2;
        org.mozilla.javascript.Script $r8, $r12, r20;
        java.lang.IllegalArgumentException $r15;
        org.mozilla.javascript.Scriptable r3, r14;
        java.lang.Object $r1, $r11, $r18;

        r17 := @this: org.mozilla.javascript.NativeScript;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r7 := @parameter1: org.mozilla.javascript.Context;

        r14 := @parameter2: org.mozilla.javascript.Scriptable;

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeScript: java.lang.Object SCRIPT_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r18 = specialinvoke r17.<org.mozilla.javascript.BaseFunction: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r7, r14, r3, r5);

        return $r18;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label8;
            case 4: goto label7;
            default: goto label9;
        };

     label2:
        $i1 = lengthof r5;

        if $i1 != 0 goto label3;

        $r19 = "";

        goto label4;

     label3:
        $r11 = r5[0];

        $r19 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r11);

     label4:
        $r12 = staticinvoke <org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,java.lang.String)>(r7, $r19);

        $r13 = new org.mozilla.javascript.NativeScript;

        specialinvoke $r13.<org.mozilla.javascript.NativeScript: void <init>(org.mozilla.javascript.Script)>($r12);

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void setObjectProtoAndParent(org.mozilla.javascript.ScriptableObject,org.mozilla.javascript.Scriptable)>($r13, r14);

        return $r13;

     label5:
        $r9 = staticinvoke <org.mozilla.javascript.NativeScript: org.mozilla.javascript.NativeScript realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r3, r0);

        r20 = $r9.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script>;

        if r20 != null goto label6;

        return "";

     label6:
        $r10 = virtualinvoke r7.<org.mozilla.javascript.Context: java.lang.String decompileScript(org.mozilla.javascript.Script,int)>(r20, 0);

        return $r10;

     label7:
        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.cant.call.indirect", "exec");

        throw $r2;

     label8:
        $r4 = staticinvoke <org.mozilla.javascript.NativeScript: org.mozilla.javascript.NativeScript realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r3, r0);

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r5, 0);

        $r8 = staticinvoke <org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,java.lang.String)>(r7, $r6);

        $r4.<org.mozilla.javascript.NativeScript: org.mozilla.javascript.Script script> = $r8;

        return $r4;

     label9:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;
    }

    private static org.mozilla.javascript.NativeScript realThis(org.mozilla.javascript.Scriptable, org.mozilla.javascript.IdFunctionObject)
    {
        org.mozilla.javascript.EcmaError $r3;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.IdFunctionObject r2;
        boolean $z0;
        org.mozilla.javascript.NativeScript $r1;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: org.mozilla.javascript.IdFunctionObject;

        $z0 = r0 instanceof org.mozilla.javascript.NativeScript;

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <org.mozilla.javascript.NativeScript: org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject)>(r2);

        throw $r3;

     label1:
        $r1 = (org.mozilla.javascript.NativeScript) r0;

        return $r1;
    }

    private static org.mozilla.javascript.Script compile(org.mozilla.javascript.Context, java.lang.String)
    {
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Script $r6;
        org.mozilla.javascript.ErrorReporter $r3, $r4;
        int[] $r0;
        int $i0;
        java.lang.String $r1, r5, r7;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r5 := @parameter1: java.lang.String;

        $r0 = newarray (int)[1];

        $r0[0] = 0;

        $r1 = staticinvoke <org.mozilla.javascript.Context: java.lang.String getSourcePositionFromStack(int[])>($r0);

        r7 = $r1;

        if $r1 != null goto label1;

        r7 = "<Script object>";

        $r0[0] = 1;

     label1:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ErrorReporter getErrorReporter()>();

        $r4 = staticinvoke <org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter forEval(org.mozilla.javascript.ErrorReporter)>($r3);

        $i0 = $r0[0];

        $r6 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.Script compileString(java.lang.String,org.mozilla.javascript.Interpreter,org.mozilla.javascript.ErrorReporter,java.lang.String,int,java.lang.Object)>(r5, null, $r4, r7, $i0, null);

        return $r6;
    }

    protected int findPrototypeId(java.lang.String)
    {
        byte b1;
        int $i0;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;
        org.mozilla.javascript.NativeScript r1;

        r1 := @this: org.mozilla.javascript.NativeScript;

        r0 := @parameter0: java.lang.String;

        b1 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 4: goto label1;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label5;
            case 10: goto label5;
            case 11: goto label4;
            default: goto label5;
        };

     label1:
        r2 = "exec";

        r5 = "exec";

        r4 = "exec";

        r3 = "exec";

        b1 = 4;

        goto label5;

     label2:
        r2 = "compile";

        r5 = "compile";

        r4 = "compile";

        r3 = "compile";

        b1 = 3;

        goto label5;

     label3:
        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b1 = 2;

        goto label5;

     label4:
        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b1 = 1;

        goto label5;

     label5:
        if r3 == null goto label6;

        if r4 == r0 goto label6;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label6;

        b1 = 0;

     label6:
        return b1;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeScript: int MAX_PROTOTYPE_ID> = 4;

        <org.mozilla.javascript.NativeScript: int Id_exec> = 4;

        <org.mozilla.javascript.NativeScript: int Id_compile> = 3;

        <org.mozilla.javascript.NativeScript: int Id_toString> = 2;

        <org.mozilla.javascript.NativeScript: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeScript: long serialVersionUID> = -6795101161980121700L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeScript: java.lang.Object SCRIPT_TAG> = $r0;

        return;
    }
}
