public class org.bouncycastle.asn1.BERConstructedSequence extends org.bouncycastle.asn1.DERConstructedSequence
{

    public void <init>()
    {
        org.bouncycastle.asn1.BERConstructedSequence r0;

        r0 := @this: org.bouncycastle.asn1.BERConstructedSequence;

        specialinvoke r0.<org.bouncycastle.asn1.DERConstructedSequence: void <init>()>();

        return;
    }

    void encode(org.bouncycastle.asn1.DEROutputStream) throws java.io.IOException
    {
        org.bouncycastle.asn1.BERConstructedSequence r1;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        org.bouncycastle.asn1.DEROutputStream r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.bouncycastle.asn1.BERConstructedSequence;

        r0 := @parameter0: org.bouncycastle.asn1.DEROutputStream;

        $z0 = r0 instanceof org.bouncycastle.asn1.ASN1OutputStream;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.bouncycastle.asn1.BEROutputStream;

        if $z1 == 0 goto label4;

     label1:
        virtualinvoke r0.<org.bouncycastle.asn1.DEROutputStream: void write(int)>(48);

        virtualinvoke r0.<org.bouncycastle.asn1.DEROutputStream: void write(int)>(128);

        $r2 = virtualinvoke r1.<org.bouncycastle.asn1.BERConstructedSequence: java.util.Enumeration getObjects()>();

     label2:
        $z2 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke r0.<org.bouncycastle.asn1.DEROutputStream: void writeObject(java.lang.Object)>($r3);

        goto label2;

     label3:
        virtualinvoke r0.<org.bouncycastle.asn1.DEROutputStream: void write(int)>(0);

        virtualinvoke r0.<org.bouncycastle.asn1.DEROutputStream: void write(int)>(0);

        goto label5;

     label4:
        specialinvoke r1.<org.bouncycastle.asn1.DERConstructedSequence: void encode(org.bouncycastle.asn1.DEROutputStream)>(r0);

     label5:
        return;
    }
}
