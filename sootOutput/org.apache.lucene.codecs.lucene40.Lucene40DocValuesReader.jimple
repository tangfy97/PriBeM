final class org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader extends org.apache.lucene.codecs.DocValuesProducer
{
    private final org.apache.lucene.store.Directory dir;
    private final org.apache.lucene.index.SegmentReadState state;
    private final java.lang.String legacyKey;
    private static final java.lang.String segmentSuffix;
    private final java.util.Map numericInstances;
    private final java.util.Map binaryInstances;
    private final java.util.Map sortedInstances;

    void <init>(org.apache.lucene.index.SegmentReadState, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        org.apache.lucene.index.SegmentReadState r4;
        java.util.HashMap $r1, $r2, $r3;
        org.apache.lucene.store.CompoundFileDirectory $r6;
        org.apache.lucene.store.Directory $r9;
        java.lang.String r5, r7;
        org.apache.lucene.store.IOContext $r8;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r4 := @parameter0: org.apache.lucene.index.SegmentReadState;

        r7 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.lucene.codecs.DocValuesProducer: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map numericInstances> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map binaryInstances> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map sortedInstances> = $r3;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state> = r4;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.lang.String legacyKey> = r5;

        $r6 = new org.apache.lucene.store.CompoundFileDirectory;

        $r9 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.Directory directory>;

        $r8 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        specialinvoke $r6.<org.apache.lucene.store.CompoundFileDirectory: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext,boolean)>($r9, r7, $r8, 0);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir> = $r6;

        return;
    }

    public synchronized org.apache.lucene.index.NumericDocValues getNumeric(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.Integer $r3, $r25;
        org.apache.lucene.index.CorruptIndexException $r27;
        byte $b9;
        int[] $r20;
        java.util.Map $r2, $r24;
        org.apache.lucene.store.Directory $r17;
        java.io.Closeable[] $r23, $r26, $r41, $r42;
        org.apache.lucene.store.IOContext $r16;
        org.apache.lucene.index.SegmentReadState $r6, $r15;
        org.apache.lucene.index.SegmentInfo $r7;
        java.lang.StringBuilder $r5, $r9, $r10, $r12, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.lang.Throwable $r40;
        org.apache.lucene.index.NumericDocValues r43;
        long $l5, $l6, $l7, $l8;
        java.lang.AssertionError $r39;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r8, $r11, $r13, $r14, $r19, $r21, $r38;
        org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType $r22;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        org.apache.lucene.store.IndexInput $r18;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map numericInstances>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r43 = (org.apache.lucene.index.NumericDocValues) $r4;

        if r43 != null goto label18;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r7 = $r6.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r8 = $r7.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i1 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r13, "dv", "dat");

        $r17 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r15 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r16 = $r15.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r18 = virtualinvoke $r17.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r14, $r16);

     label01:
        $r20 = <org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$16: int[] $SwitchMap$org$apache$lucene$codecs$lucene40$Lucene40FieldInfosReader$LegacyDocValuesType>;

        $r19 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.lang.String legacyKey>;

        $r21 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: java.lang.String getAttribute(java.lang.String)>($r19);

        $r22 = staticinvoke <org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType valueOf(java.lang.String)>($r21);

        $i2 = virtualinvoke $r22.<org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: int ordinal()>();

        $i3 = $r20[$i2];

        tableswitch($i3)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label02:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadVarIntsField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label03:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadByteField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label04:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadShortField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label05:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadIntField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label06:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadLongField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label07:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadFloatField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label08:
        r43 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.NumericDocValues loadDoubleField(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput)>(r1, $r18);

        goto label10;

     label09:
        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label10:
        $l7 = virtualinvoke $r18.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l8 = virtualinvoke $r18.<org.apache.lucene.store.IndexInput: long length()>();

        $b9 = $l7 cmp $l8;

        if $b9 == 0 goto label11;

        $r27 = new org.apache.lucene.index.CorruptIndexException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l5 = virtualinvoke $r18.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l6 = virtualinvoke $r18.<org.apache.lucene.store.IndexInput: long length()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r38);

        throw $r27;

     label11:
        if 1 == 0 goto label12;

        $r26 = newarray (java.io.Closeable)[1];

        $r26[0] = $r18;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r26);

        goto label17;

     label12:
        $r23 = newarray (java.io.Closeable)[1];

        $r23[0] = $r18;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r23);

        goto label17;

     label13:
        $r40 := @caughtexception;

     label14:
        if 0 == 0 goto label15;

        $r42 = newarray (java.io.Closeable)[1];

        $r42[0] = $r18;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r42);

        goto label16;

     label15:
        $r41 = newarray (java.io.Closeable)[1];

        $r41[0] = $r18;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r41);

     label16:
        throw $r40;

     label17:
        $r24 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map numericInstances>;

        $i4 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r43);

     label18:
        return r43;

        catch java.lang.Throwable from label01 to label11 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private org.apache.lucene.index.NumericDocValues loadVarIntsField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        long $l1, $l2, $l5;
        org.apache.lucene.index.CorruptIndexException $r20;
        long[] r14;
        byte $b0;
        int $i3, $i4, i6, $i7;
        java.lang.String $r8;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r11;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r12;
        org.apache.lucene.index.SegmentInfo $r13;
        org.apache.lucene.util.packed.PackedInts$Reader $r9;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$1 $r17;
        org.apache.lucene.index.FieldInfo r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r19;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$2 $r18;

        r11 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r16 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "PackedInts", 0, 0);

        $b0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: byte readByte()>();

        if $b0 != 1 goto label3;

        $r12 = r11.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r13 = $r12.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i3 = virtualinvoke $r13.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r14 = newarray (long)[$i3];

        i6 = 0;

     label1:
        $i4 = lengthof r14;

        if i6 >= $i4 goto label2;

        $l5 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        r14[i6] = $l5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r17 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$1;

        specialinvoke $r17.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$1: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,long[])>(r11, r14);

        return $r17;

     label3:
        if $b0 != 0 goto label4;

        $l1 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $l2 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r9 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>(r0);

        $r18 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$2;

        specialinvoke $r18.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$2: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.packed.PackedInts$Reader,long,long)>(r11, $r9, $l2, $l1);

        return $r18;

     label4:
        $r20 = new org.apache.lucene.index.CorruptIndexException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid VAR_INTS header byte: ");

        $i7 = (int) $b0;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r8);

        throw $r20;
    }

    private org.apache.lucene.index.NumericDocValues loadByteField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        byte[] r4;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.index.CorruptIndexException $r6;
        int $i0, $i1, $i2;
        org.apache.lucene.index.FieldInfo r11;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$3 $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Ints", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 1 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (byte)[$i1];

        $i2 = lengthof r4;

        virtualinvoke r0.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r4, 0, $i2);

        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$3;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$3: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,byte[])>(r1, r4);

        return $r5;
    }

    private org.apache.lucene.index.NumericDocValues loadShortField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r6;
        short $s3;
        int $i0, $i1, $i2, i4;
        java.lang.String $r10;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$4 $r5;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        short[] r4;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Ints", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 2 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (short)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label3;

        $s3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: short readShort()>();

        r4[i4] = $s3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$4;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$4: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,short[])>(r1, r4);

        return $r5;
    }

    private org.apache.lucene.index.NumericDocValues loadIntField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r6;
        int[] r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r10;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$5 $r5;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.StringBuilder $r7, $r8, $r9;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Ints", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 4 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (int)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label3;

        $i3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        r4[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$5;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$5: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,int[])>(r1, r4);

        return $r5;
    }

    private org.apache.lucene.index.NumericDocValues loadLongField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        long $l3;
        org.apache.lucene.index.CorruptIndexException $r6;
        long[] r4;
        int $i0, $i1, $i2, i4;
        java.lang.String $r10;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$6 $r5;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Ints", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 8 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (long)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label3;

        $l3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        r4[i4] = $l3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$6;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$6: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,long[])>(r1, r4);

        return $r5;
    }

    private org.apache.lucene.index.NumericDocValues loadFloatField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r6;
        int[] r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r10;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$7 $r5;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Floats", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 4 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (int)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label3;

        $i3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        r4[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$7;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$7: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,int[])>(r1, r4);

        return $r5;
    }

    private org.apache.lucene.index.NumericDocValues loadDoubleField(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        long $l3;
        org.apache.lucene.index.CorruptIndexException $r6;
        long[] r4;
        int $i0, $i1, $i2, i4;
        java.lang.String $r10;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.index.SegmentReadState $r2;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$8 $r5;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r11 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Floats", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 == 8 goto label1;

        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid valueSize: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        r4 = newarray (long)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label3;

        $l3 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        r4[i4] = $l3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$8;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$8: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,long[])>(r1, r4);

        return $r5;
    }

    public synchronized org.apache.lucene.index.BinaryDocValues getBinary(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.AssertionError $r9;
        java.lang.Integer $r3, $r12;
        int[] $r6;
        java.util.Map $r2, $r11;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r7;
        org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType $r8;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Object $r4;
        org.apache.lucene.index.BinaryDocValues r10;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map binaryInstances>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r10 = (org.apache.lucene.index.BinaryDocValues) $r4;

        if r10 != null goto label7;

        $r6 = <org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$16: int[] $SwitchMap$org$apache$lucene$codecs$lucene40$Lucene40FieldInfosReader$LegacyDocValuesType>;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.lang.String legacyKey>;

        $r7 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: java.lang.String getAttribute(java.lang.String)>($r5);

        $r8 = staticinvoke <org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType valueOf(java.lang.String)>($r7);

        $i1 = virtualinvoke $r8.<org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: int ordinal()>();

        $i2 = $r6[$i1];

        tableswitch($i2)
        {
            case 8: goto label1;
            case 9: goto label2;
            case 10: goto label3;
            case 11: goto label4;
            default: goto label5;
        };

     label1:
        r10 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.BinaryDocValues loadBytesFixedStraight(org.apache.lucene.index.FieldInfo)>(r1);

        goto label6;

     label2:
        r10 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.BinaryDocValues loadBytesVarStraight(org.apache.lucene.index.FieldInfo)>(r1);

        goto label6;

     label3:
        r10 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.BinaryDocValues loadBytesFixedDeref(org.apache.lucene.index.FieldInfo)>(r1);

        goto label6;

     label4:
        r10 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.BinaryDocValues loadBytesVarDeref(org.apache.lucene.index.FieldInfo)>(r1);

        goto label6;

     label5:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label6:
        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map binaryInstances>;

        $i3 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r10);

     label7:
        return r10;
    }

    private org.apache.lucene.index.BinaryDocValues loadBytesFixedStraight(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r23;
        byte $b8;
        org.apache.lucene.store.Directory $r14;
        java.io.Closeable[] $r21, $r22, $r36, $r37;
        org.apache.lucene.store.IOContext $r13;
        boolean z0;
        org.apache.lucene.index.SegmentReadState $r2, $r12, $r17;
        org.apache.lucene.index.SegmentInfo $r3, $r18;
        java.lang.StringBuilder $r0, $r5, $r6, $r9, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$9 $r20;
        java.lang.Throwable $r35;
        long $l2, $l4, $l5, $l6, $l7, $l9, $l10;
        org.apache.lucene.util.PagedBytes $r16;
        org.apache.lucene.util.PagedBytes$Reader $r19;
        int $i0, $i1, $i3;
        java.lang.String $r4, $r8, $r10, $r11, $r34;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.store.IndexInput $r15;
        org.apache.lucene.index.FieldInfo r7;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r7 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = $r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i0 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r10, "dv", "dat");

        $r14 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r12 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r13 = $r12.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r15 = virtualinvoke $r14.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, $r13);

        z0 = 0;

     label1:
        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r15, "FixedStraightBytes", 0, 0);

        $i1 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: int readInt()>();

        $r16 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r16.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        $l2 = (long) $i1;

        $r17 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r18 = $r17.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i3 = virtualinvoke $r18.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $l4 = (long) $i3;

        $l5 = $l2 * $l4;

        virtualinvoke $r16.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>($r15, $l5);

        $r19 = virtualinvoke $r16.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $l6 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l7 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: long length()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label2;

        $r23 = new org.apache.lucene.index.CorruptIndexException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l9 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l10 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: long length()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r34);

        throw $r23;

     label2:
        z0 = 1;

        $r20 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$9;

        specialinvoke $r20.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$9: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.PagedBytes$Reader,int)>(r1, $r19, $i1);

     label3:
        if 1 == 0 goto label4;

        $r22 = newarray (java.io.Closeable)[1];

        $r22[0] = $r15;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r22);

        goto label5;

     label4:
        $r21 = newarray (java.io.Closeable)[1];

        $r21[0] = $r15;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r21);

     label5:
        return $r20;

     label6:
        $r35 := @caughtexception;

     label7:
        if z0 == 0 goto label8;

        $r37 = newarray (java.io.Closeable)[1];

        $r37[0] = $r15;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r37);

        goto label9;

     label8:
        $r36 = newarray (java.io.Closeable)[1];

        $r36[0] = $r15;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r36);

     label9:
        throw $r35;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private org.apache.lucene.index.BinaryDocValues loadBytesVarStraight(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        byte $b5, $b8;
        org.apache.lucene.store.IOContext $r23, $r27;
        org.apache.lucene.index.SegmentInfo $r3, $r14;
        org.apache.lucene.util.packed.PackedInts$Reader $r32;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$10 $r33;
        java.lang.StringBuilder $r0, $r5, $r6, $r9, $r12, $r16, $r17, $r19, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;
        java.lang.Throwable $r60;
        long $l2, $l3, $l4, $l6, $l7, $l9, $l10, $l11, $l12;
        java.lang.String $r4, $r8, $r10, $r11, $r15, $r18, $r20, $r21, $r47, $r59;
        org.apache.lucene.store.IndexInput $r25, $r29, r63, r64;
        org.apache.lucene.index.FieldInfo r7;
        org.apache.lucene.index.CorruptIndexException $r36, $r48;
        org.apache.lucene.store.Directory $r24, $r28;
        java.io.Closeable[] $r34, $r35, $r61, $r62;
        boolean z0;
        org.apache.lucene.index.SegmentReadState $r2, $r13, $r22, $r26;
        org.apache.lucene.util.PagedBytes $r30;
        org.apache.lucene.util.PagedBytes$Reader $r31;
        int $i0, $i1;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r7 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = $r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i0 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r10, "dv", "dat");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r14 = $r13.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r15 = $r14.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i1 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r20, "dv", "idx");

        r63 = null;

        r64 = null;

        z0 = 0;

     label01:
        $r24 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r22 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r23 = $r22.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r25 = virtualinvoke $r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, $r23);

        r63 = $r25;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r25, "VarStraightBytesDat", 0, 0);

        $r28 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r26 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r27 = $r26.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r29 = virtualinvoke $r28.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r21, $r27);

        r64 = $r29;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r29, "VarStraightBytesIdx", 0, 0);

        $l2 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $r30 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r30.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>($r25, $l2);

        $r31 = virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r32 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>($r29);

        $l3 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l4 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label02;

        $r48 = new org.apache.lucene.index.CorruptIndexException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l11 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l12 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r59);

        throw $r48;

     label02:
        $l6 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l7 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label03;

        $r36 = new org.apache.lucene.index.CorruptIndexException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l9 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l10 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r47);

        throw $r36;

     label03:
        z0 = 1;

        $r33 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$10;

        specialinvoke $r33.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$10: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.PagedBytes$Reader)>(r1, $r32, $r31);

     label04:
        if 1 == 0 goto label05;

        $r35 = newarray (java.io.Closeable)[2];

        $r35[0] = $r25;

        $r35[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r35);

        goto label06;

     label05:
        $r34 = newarray (java.io.Closeable)[2];

        $r34[0] = $r25;

        $r34[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r34);

     label06:
        return $r33;

     label07:
        $r60 := @caughtexception;

     label08:
        if z0 == 0 goto label09;

        $r62 = newarray (java.io.Closeable)[2];

        $r62[0] = r63;

        $r62[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r62);

        goto label10;

     label09:
        $r61 = newarray (java.io.Closeable)[2];

        $r61[0] = r63;

        $r61[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r61);

     label10:
        throw $r60;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private org.apache.lucene.index.BinaryDocValues loadBytesFixedDeref(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        byte $b9, $b12;
        org.apache.lucene.store.IOContext $r23, $r27;
        org.apache.lucene.index.SegmentInfo $r3, $r14;
        org.apache.lucene.util.packed.PackedInts$Reader $r32;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$11 $r33;
        java.lang.StringBuilder $r0, $r5, $r6, $r9, $r12, $r16, $r17, $r19, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;
        java.lang.Throwable $r60;
        long $l4, $l5, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l15, $l16;
        java.lang.String $r4, $r8, $r10, $r11, $r15, $r18, $r20, $r21, $r47, $r59;
        org.apache.lucene.store.IndexInput $r25, $r29, r63, r64;
        org.apache.lucene.index.FieldInfo r7;
        org.apache.lucene.index.CorruptIndexException $r36, $r48;
        org.apache.lucene.store.Directory $r24, $r28;
        java.io.Closeable[] $r34, $r35, $r61, $r62;
        boolean z0;
        org.apache.lucene.index.SegmentReadState $r2, $r13, $r22, $r26;
        org.apache.lucene.util.PagedBytes $r30;
        org.apache.lucene.util.PagedBytes$Reader $r31;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r7 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = $r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i0 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r10, "dv", "dat");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r14 = $r13.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r15 = $r14.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i1 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r20, "dv", "idx");

        r63 = null;

        r64 = null;

        z0 = 0;

     label01:
        $r24 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r22 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r23 = $r22.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r25 = virtualinvoke $r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, $r23);

        r63 = $r25;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r25, "FixedDerefBytesDat", 0, 0);

        $r28 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r26 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r27 = $r26.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r29 = virtualinvoke $r28.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r21, $r27);

        r64 = $r29;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r29, "FixedDerefBytesIdx", 0, 0);

        $i2 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: int readInt()>();

        $i3 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: int readInt()>();

        $r30 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r30.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        $l5 = (long) $i2;

        $l4 = (long) $i3;

        $l6 = $l5 * $l4;

        virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>($r25, $l6);

        $r31 = virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r32 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>($r29);

        $l7 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l8 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $b9 = $l7 cmp $l8;

        if $b9 == 0 goto label02;

        $r48 = new org.apache.lucene.index.CorruptIndexException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l15 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l16 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r59);

        throw $r48;

     label02:
        $l10 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l11 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $b12 = $l10 cmp $l11;

        if $b12 == 0 goto label03;

        $r36 = new org.apache.lucene.index.CorruptIndexException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l13 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l14 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r47);

        throw $r36;

     label03:
        z0 = 1;

        $r33 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$11;

        specialinvoke $r33.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$11: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,int,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.PagedBytes$Reader)>(r1, $i2, $r32, $r31);

     label04:
        if 1 == 0 goto label05;

        $r35 = newarray (java.io.Closeable)[2];

        $r35[0] = $r25;

        $r35[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r35);

        goto label06;

     label05:
        $r34 = newarray (java.io.Closeable)[2];

        $r34[0] = $r25;

        $r34[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r34);

     label06:
        return $r33;

     label07:
        $r60 := @caughtexception;

     label08:
        if z0 == 0 goto label09;

        $r62 = newarray (java.io.Closeable)[2];

        $r62[0] = r63;

        $r62[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r62);

        goto label10;

     label09:
        $r61 = newarray (java.io.Closeable)[2];

        $r61[0] = r63;

        $r61[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r61);

     label10:
        throw $r60;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private org.apache.lucene.index.BinaryDocValues loadBytesVarDeref(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        byte $b5, $b8;
        org.apache.lucene.store.IOContext $r23, $r27;
        org.apache.lucene.index.SegmentInfo $r3, $r14;
        org.apache.lucene.util.packed.PackedInts$Reader $r32;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$12 $r33;
        java.lang.StringBuilder $r0, $r5, $r6, $r9, $r12, $r16, $r17, $r19, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;
        java.lang.Throwable $r60;
        long $l2, $l3, $l4, $l6, $l7, $l9, $l10, $l11, $l12;
        java.lang.String $r4, $r8, $r10, $r11, $r15, $r18, $r20, $r21, $r47, $r59;
        org.apache.lucene.store.IndexInput $r25, $r29, r63, r64;
        org.apache.lucene.index.FieldInfo r7;
        org.apache.lucene.index.CorruptIndexException $r36, $r48;
        org.apache.lucene.store.Directory $r24, $r28;
        java.io.Closeable[] $r34, $r35, $r61, $r62;
        boolean z0;
        org.apache.lucene.index.SegmentReadState $r2, $r13, $r22, $r26;
        org.apache.lucene.util.PagedBytes $r30;
        org.apache.lucene.util.PagedBytes$Reader $r31;
        int $i0, $i1;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r7 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r3 = $r2.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = $r3.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i0 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r10, "dv", "dat");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r14 = $r13.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r15 = $r14.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i1 = r7.<org.apache.lucene.index.FieldInfo: int number>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r20, "dv", "idx");

        r63 = null;

        r64 = null;

        z0 = 0;

     label01:
        $r24 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r22 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r23 = $r22.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r25 = virtualinvoke $r24.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, $r23);

        r63 = $r25;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r25, "VarDerefBytesDat", 0, 0);

        $r28 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r26 = r1.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r27 = $r26.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r29 = virtualinvoke $r28.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r21, $r27);

        r64 = $r29;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r29, "VarDerefBytesIdx", 0, 0);

        $l2 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r30 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r30.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>($r25, $l2);

        $r31 = virtualinvoke $r30.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r32 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>($r29);

        $l3 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l4 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label02;

        $r48 = new org.apache.lucene.index.CorruptIndexException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l11 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l12 = virtualinvoke $r25.<org.apache.lucene.store.IndexInput: long length()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r59);

        throw $r48;

     label02:
        $l6 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l7 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label03;

        $r36 = new org.apache.lucene.index.CorruptIndexException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l9 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l10 = virtualinvoke $r29.<org.apache.lucene.store.IndexInput: long length()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r47);

        throw $r36;

     label03:
        z0 = 1;

        $r33 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$12;

        specialinvoke $r33.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$12: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.PagedBytes$Reader)>(r1, $r32, $r31);

     label04:
        if 1 == 0 goto label05;

        $r35 = newarray (java.io.Closeable)[2];

        $r35[0] = $r25;

        $r35[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r35);

        goto label06;

     label05:
        $r34 = newarray (java.io.Closeable)[2];

        $r34[0] = $r25;

        $r34[1] = $r29;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r34);

     label06:
        return $r33;

     label07:
        $r60 := @caughtexception;

     label08:
        if z0 == 0 goto label09;

        $r62 = newarray (java.io.Closeable)[2];

        $r62[0] = r63;

        $r62[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r62);

        goto label10;

     label09:
        $r61 = newarray (java.io.Closeable)[2];

        $r61[0] = r63;

        $r61[1] = r64;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r61);

     label10:
        throw $r60;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public synchronized org.apache.lucene.index.SortedDocValues getSorted(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.Integer $r3, $r39;
        byte $b7, $b10;
        java.util.Map $r2, $r38;
        org.apache.lucene.store.IOContext $r26, $r30;
        org.apache.lucene.index.SegmentInfo $r7, $r17;
        java.lang.StringBuilder $r5, $r9, $r10, $r12, $r15, $r19, $r20, $r22, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63;
        java.lang.Throwable $r66;
        long $l5, $l6, $l8, $l9, $l12, $l13, $l14, $l15;
        java.lang.AssertionError $r65;
        java.lang.String $r8, $r11, $r13, $r14, $r18, $r21, $r23, $r24, $r33, $r35, $r52, $r64;
        org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType $r36;
        org.apache.lucene.store.IndexInput $r28, $r32, r70, r71;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.index.CorruptIndexException $r41, $r53;
        int[] $r34;
        org.apache.lucene.store.Directory $r27, $r31;
        java.io.Closeable[] $r37, $r40, $r67, $r68;
        org.apache.lucene.index.SegmentReadState $r6, $r16, $r25, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i11;
        org.apache.lucene.index.SortedDocValues r69;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map sortedInstances>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r69 = (org.apache.lucene.index.SortedDocValues) $r4;

        if r69 != null goto label14;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r7 = $r6.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r8 = $r7.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i1 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r13, "dv", "dat");

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r17 = $r16.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r18 = $r17.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $i2 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r23, "dv", "idx");

        r70 = null;

        r71 = null;

     label01:
        $r27 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r25 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r26 = $r25.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r14, $r26);

        r70 = $r28;

        $r31 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        $r29 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r30 = $r29.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.store.IOContext context>;

        $r32 = virtualinvoke $r31.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r24, $r30);

        r71 = $r32;

        $r34 = <org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$16: int[] $SwitchMap$org$apache$lucene$codecs$lucene40$Lucene40FieldInfosReader$LegacyDocValuesType>;

        $r33 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.lang.String legacyKey>;

        $r35 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: java.lang.String getAttribute(java.lang.String)>($r33);

        $r36 = staticinvoke <org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType valueOf(java.lang.String)>($r35);

        $i3 = virtualinvoke $r36.<org.apache.lucene.codecs.lucene40.Lucene40FieldInfosReader$LegacyDocValuesType: int ordinal()>();

        $i4 = $r34[$i3];

        lookupswitch($i4)
        {
            case 12: goto label02;
            case 13: goto label03;
            default: goto label04;
        };

     label02:
        r69 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SortedDocValues loadBytesFixedSorted(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput)>(r1, $r28, $r32);

        goto label05;

     label03:
        r69 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SortedDocValues loadBytesVarSorted(org.apache.lucene.index.FieldInfo,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput)>(r1, $r28, $r32);

        goto label05;

     label04:
        $r65 = new java.lang.AssertionError;

        specialinvoke $r65.<java.lang.AssertionError: void <init>()>();

        throw $r65;

     label05:
        $l5 = virtualinvoke $r28.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l6 = virtualinvoke $r28.<org.apache.lucene.store.IndexInput: long length()>();

        $b7 = $l5 cmp $l6;

        if $b7 == 0 goto label06;

        $r53 = new org.apache.lucene.index.CorruptIndexException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l14 = virtualinvoke $r28.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l15 = virtualinvoke $r28.<org.apache.lucene.store.IndexInput: long length()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r64);

        throw $r53;

     label06:
        $l8 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l9 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long length()>();

        $b10 = $l8 cmp $l9;

        if $b10 == 0 goto label07;

        $r41 = new org.apache.lucene.index.CorruptIndexException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not read all bytes from file \"");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": read ");

        $l12 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs size ");

        $l13 = virtualinvoke $r32.<org.apache.lucene.store.IndexInput: long length()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r52);

        throw $r41;

     label07:
        if 1 == 0 goto label08;

        $r40 = newarray (java.io.Closeable)[2];

        $r40[0] = $r28;

        $r40[1] = $r32;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r40);

        goto label13;

     label08:
        $r37 = newarray (java.io.Closeable)[2];

        $r37[0] = $r28;

        $r37[1] = $r32;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r37);

        goto label13;

     label09:
        $r66 := @caughtexception;

     label10:
        if 0 == 0 goto label11;

        $r68 = newarray (java.io.Closeable)[2];

        $r68[0] = r70;

        $r68[1] = r71;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r68);

        goto label12;

     label11:
        $r67 = newarray (java.io.Closeable)[2];

        $r67[0] = r70;

        $r67[1] = r71;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r67);

     label12:
        throw $r66;

     label13:
        $r38 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.util.Map sortedInstances>;

        $i11 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, r69);

     label14:
        return r69;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private org.apache.lucene.index.SortedDocValues loadBytesFixedSorted(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r5;
        org.apache.lucene.store.IndexInput r0, r1;
        long $l2, $l3, $l4;
        org.apache.lucene.util.PagedBytes $r2;
        org.apache.lucene.util.PagedBytes$Reader $r3;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$13 $r6;
        org.apache.lucene.util.packed.PackedInts$Reader $r4;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfo r8;
        org.apache.lucene.index.SortedDocValues $r7;

        r5 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r8 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        r1 := @parameter2: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "FixedSortedBytesDat", 0, 0);

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r1, "FixedSortedBytesIdx", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        $i1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readInt()>();

        $r2 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r2.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        $l3 = (long) $i0;

        $l2 = (long) $i1;

        $l4 = $l3 * $l2;

        virtualinvoke $r2.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>(r0, $l4);

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r4 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>(r1);

        $r6 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$13;

        specialinvoke $r6.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$13: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.PagedBytes$Reader,int,int)>(r5, $r4, $r3, $i0, $i1);

        $r7 = specialinvoke r5.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SortedDocValues correctBuggyOrds(org.apache.lucene.index.SortedDocValues)>($r6);

        return $r7;
    }

    private org.apache.lucene.index.SortedDocValues loadBytesVarSorted(org.apache.lucene.index.FieldInfo, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r6;
        org.apache.lucene.store.IndexInput r0, r1;
        long $l0;
        org.apache.lucene.util.PagedBytes $r2;
        org.apache.lucene.util.PagedBytes$Reader $r3;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$14 $r7;
        org.apache.lucene.util.packed.PackedInts$Reader $r4, $r5;
        int $i1, i2;
        org.apache.lucene.index.FieldInfo r9;
        org.apache.lucene.index.SortedDocValues $r8;

        r6 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r9 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.store.IndexInput;

        r1 := @parameter2: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "VarDerefBytesDat", 0, 0);

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r1, "VarDerefBytesIdx", 0, 0);

        $l0 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r2 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r2.<org.apache.lucene.util.PagedBytes: void <init>(int)>(16);

        virtualinvoke $r2.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.store.IndexInput,long)>(r0, $l0);

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r4 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>(r1);

        $r5 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Reader getReader(org.apache.lucene.store.DataInput)>(r1);

        $i1 = interfaceinvoke $r4.<org.apache.lucene.util.packed.PackedInts$Reader: int size()>();

        i2 = $i1 - 1;

        $r7 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$14;

        specialinvoke $r7.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$14: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.packed.PackedInts$Reader,org.apache.lucene.util.PagedBytes$Reader,int)>(r6, $r5, $r4, $r3, i2);

        $r8 = specialinvoke r6.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SortedDocValues correctBuggyOrds(org.apache.lucene.index.SortedDocValues)>($r7);

        return $r8;
    }

    private org.apache.lucene.index.SortedDocValues correctBuggyOrds(org.apache.lucene.index.SortedDocValues)
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        org.apache.lucene.index.SegmentReadState $r1;
        org.apache.lucene.index.SegmentInfo $r2;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$15 $r3;
        int $i0, $i1, i2;
        org.apache.lucene.index.SortedDocValues r4;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r4 := @parameter0: org.apache.lucene.index.SortedDocValues;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.index.SegmentReadState state>;

        $r2 = $r1.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $i1 = virtualinvoke r4.<org.apache.lucene.index.SortedDocValues: int getOrd(int)>(i2);

        if $i1 != 0 goto label2;

        return r4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = new org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$15;

        specialinvoke $r3.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader$15: void <init>(org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader,org.apache.lucene.index.SortedDocValues)>(r0, r4);

        return $r3;
    }

    public org.apache.lucene.index.SortedSetDocValues getSortedSet(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.IllegalStateException $r0;
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r1;
        org.apache.lucene.index.FieldInfo r2;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Lucene 4.0 does not support SortedSet: how did you pull this off?");

        throw $r0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: org.apache.lucene.store.Directory dir>;

        virtualinvoke $r1.<org.apache.lucene.store.Directory: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.codecs.lucene40.Lucene40DocValuesReader: java.lang.String segmentSuffix> = "dv";

        return;
    }
}
