public abstract class org.apache.batik.anim.InterpolatingAnimation extends org.apache.batik.anim.AbstractAnimation
{
    protected int calcMode;
    protected float[] keyTimes;
    protected float[] keySplines;
    protected org.apache.batik.ext.awt.geom.Cubic[] keySplineCubics;
    protected boolean additive;
    protected boolean cumulative;

    public void <init>(org.apache.batik.anim.timing.TimedElement, org.apache.batik.dom.anim.AnimatableElement, int, float[], float[], boolean, boolean)
    {
        byte $b2, $b3, $b5, $b6, $b9, $b11;
        boolean z0, z1, z2, z3, z4;
        org.apache.batik.anim.InterpolatingAnimation r0;
        org.apache.batik.dom.anim.AnimatableElement r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.lang.Object[] $r5, $r7;
        float[] r3, r4;
        org.apache.batik.anim.AnimationException $r6, $r8;
        org.apache.batik.ext.awt.geom.Cubic[] $r9, $r11;
        int i0, $i1, $i4, $i7, $i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, i27, $i28, $i29, $i30;
        double $d0, $d1, $d2, $d3;
        org.apache.batik.ext.awt.geom.Cubic $r12;
        org.apache.batik.anim.timing.TimedElement r1;

        r0 := @this: org.apache.batik.anim.InterpolatingAnimation;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        r2 := @parameter1: org.apache.batik.dom.anim.AnimatableElement;

        i0 := @parameter2: int;

        r3 := @parameter3: float[];

        r4 := @parameter4: float[];

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<org.apache.batik.anim.AbstractAnimation: void <init>(org.apache.batik.anim.timing.TimedElement,org.apache.batik.dom.anim.AnimatableElement)>(r1, r2);

        r0.<org.apache.batik.anim.InterpolatingAnimation: int calcMode> = i0;

        r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keyTimes> = r3;

        r0.<org.apache.batik.anim.InterpolatingAnimation: float[] keySplines> = r4;

        r0.<org.apache.batik.anim.InterpolatingAnimation: boolean additive> = z0;

        r0.<org.apache.batik.anim.InterpolatingAnimation: boolean cumulative> = z1;

        if i0 != 3 goto label05;

        if r4 == null goto label01;

        $i12 = lengthof r4;

        $i13 = $i12 % 4;

        if $i13 == 0 goto label02;

     label01:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = null;

        $r7[1] = "keySplines";

        $r8 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r7);

        throw $r8;

     label02:
        $i14 = lengthof r4;

        $i15 = $i14 / 4;

        $r9 = newarray (org.apache.batik.ext.awt.geom.Cubic)[$i15];

        r0.<org.apache.batik.anim.InterpolatingAnimation: org.apache.batik.ext.awt.geom.Cubic[] keySplineCubics> = $r9;

        i25 = 0;

        goto label04;

     label03:
        $r11 = r0.<org.apache.batik.anim.InterpolatingAnimation: org.apache.batik.ext.awt.geom.Cubic[] keySplineCubics>;

        $r12 = new org.apache.batik.ext.awt.geom.Cubic;

        $i18 = i25 * 4;

        $f7 = r4[$i18];

        $d3 = (double) $f7;

        $i19 = i25 * 4;

        $i20 = $i19 + 1;

        $f8 = r4[$i20];

        $d2 = (double) $f8;

        $i21 = i25 * 4;

        $i22 = $i21 + 2;

        $f9 = r4[$i22];

        $d1 = (double) $f9;

        $i23 = i25 * 4;

        $i24 = $i23 + 3;

        $f10 = r4[$i24];

        $d0 = (double) $f10;

        specialinvoke $r12.<org.apache.batik.ext.awt.geom.Cubic: void <init>(double,double,double,double,double,double,double,double)>(0.0, 0.0, $d3, $d2, $d1, $d0, 1.0, 1.0);

        $r11[i25] = $r12;

        i25 = i25 + 1;

     label04:
        $i16 = lengthof r4;

        $i17 = $i16 / 4;

        if i25 < $i17 goto label03;

     label05:
        if r3 == null goto label15;

        z2 = 0;

        z4 = 0;

        z3 = 0;

        if i0 == 1 goto label06;

        if i0 == 3 goto label06;

        if i0 != 2 goto label07;

     label06:
        $i26 = lengthof r3;

        if $i26 < 2 goto label08;

        $f4 = r3[0];

        $b6 = $f4 cmpl 0.0F;

        if $b6 != 0 goto label08;

        $i7 = lengthof r3;

        $i8 = $i7 - 1;

        $f5 = r3[$i8];

        $b9 = $f5 cmpl 1.0F;

        if $b9 != 0 goto label08;

     label07:
        if i0 != 0 goto label09;

        $i10 = lengthof r3;

        if $i10 == 0 goto label08;

        $f6 = r3[0];

        $b11 = $f6 cmpl 0.0F;

        if $b11 == 0 goto label09;

     label08:
        z2 = 1;

        z4 = 1;

        z3 = 1;

     label09:
        if z4 != 0 goto label14;

        i27 = 1;

        goto label13;

     label10:
        $f0 = r3[i27];

        $b2 = $f0 cmpg 0.0F;

        $i28 = (int) $b2;

        if $i28 < 0 goto label11;

        $f1 = r3[1];

        $b3 = $f1 cmpl 1.0F;

        $i29 = (int) $b3;

        if $i29 > 0 goto label11;

        $f3 = r3[i27];

        $i4 = i27 - 1;

        $f2 = r3[$i4];

        $b5 = $f3 cmpg $f2;

        $i30 = (int) $b5;

        if $i30 >= 0 goto label12;

     label11:
        z2 = 1;

        z3 = 1;

        goto label14;

     label12:
        i27 = i27 + 1;

     label13:
        $i1 = lengthof r3;

        if i27 < $i1 goto label10;

     label14:
        if z3 == 0 goto label15;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = null;

        $r5[1] = "keyTimes";

        $r6 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.AnimationException createException(java.lang.String,java.lang.Object[])>("attribute.malformed", $r5);

        throw $r6;

     label15:
        return;
    }

    protected boolean willReplace()
    {
        org.apache.batik.anim.InterpolatingAnimation r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.anim.InterpolatingAnimation;

        $z0 = r0.<org.apache.batik.anim.InterpolatingAnimation: boolean additive>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void sampledLastValue(int)
    {
        int i0;
        org.apache.batik.anim.InterpolatingAnimation r0;

        r0 := @this: org.apache.batik.anim.InterpolatingAnimation;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.batik.anim.InterpolatingAnimation: void sampledAtUnitTime(float,int)>(1.0F, i0);

        return;
    }

    protected void sampledAt(float, float, int)
    {
        org.apache.batik.anim.InterpolatingAnimation r0;
        byte $b0;
        int i1;
        float f0, f1, f2;

        r0 := @this: org.apache.batik.anim.InterpolatingAnimation;

        f1 := @parameter0: float;

        f0 := @parameter1: float;

        i1 := @parameter2: int;

        $b0 = f0 cmpl #InfinityF;

        if $b0 != 0 goto label1;

        f2 = 0.0F;

        goto label2;

     label1:
        f2 = f1 / f0;

     label2:
        virtualinvoke r0.<org.apache.batik.anim.InterpolatingAnimation: void sampledAtUnitTime(float,int)>(f2, i1);

        return;
    }

    protected abstract void sampledAtUnitTime(float, int);
}
