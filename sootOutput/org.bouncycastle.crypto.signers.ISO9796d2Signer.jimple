public class org.bouncycastle.crypto.signers.ISO9796d2Signer extends java.lang.Object implements org.bouncycastle.crypto.SignerWithRecovery
{
    public static final int TRAILER_IMPLICIT;
    public static final int TRAILER_RIPEMD160;
    public static final int TRAILER_RIPEMD128;
    public static final int TRAILER_SHA1;
    private org.bouncycastle.crypto.Digest digest;
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private int trailer;
    private int keyBits;
    private byte[] block;
    private byte[] mBuf;
    private int messageLength;
    private boolean fullMessage;
    private byte[] recoveredMessage;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, boolean)
    {
        org.bouncycastle.crypto.Digest r2;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest> = r2;

        if z0 == 0 goto label1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 188;

        goto label5;

     label1:
        $z1 = r2 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z1 == 0 goto label2;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 13260;

        goto label5;

     label2:
        $z2 = r2 instanceof org.bouncycastle.crypto.digests.RIPEMD160Digest;

        if $z2 == 0 goto label3;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 12748;

        goto label5;

     label3:
        $z3 = r2 instanceof org.bouncycastle.crypto.digests.RIPEMD128Digest;

        if $z3 == 0 goto label4;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 13004;

        goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no valid trailer for digest");

        throw $r3;

     label5:
        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.Digest r2;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,boolean)>(r1, r2, 0);

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r5, $r6, $r8, $r9, $r11;
        org.bouncycastle.crypto.Digest $r7, $r10;
        org.bouncycastle.crypto.params.RSAKeyParameters r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.math.BigInteger $r4;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r2;
        org.bouncycastle.crypto.CipherParameters r0;
        boolean z0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;

        r2 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r1 = (org.bouncycastle.crypto.params.RSAKeyParameters) r0;

        $r3 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits> = $i0;

        $i1 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits>;

        $i2 = $i1 + 7;

        $i3 = $i2 / 8;

        $r5 = newarray (byte)[$i3];

        r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block> = $r5;

        $i4 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        if $i4 != 188 goto label1;

        $r9 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i9 = lengthof $r9;

        $r10 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i10 = interfaceinvoke $r10.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i11 = $i9 - $i10;

        $i12 = $i11 - 2;

        $r11 = newarray (byte)[$i12];

        r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf> = $r11;

        goto label2;

     label1:
        $r6 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i5 = lengthof $r6;

        $r7 = r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i6 = interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i7 = $i5 - $i6;

        $i8 = $i7 - 3;

        $r8 = newarray (byte)[$i8];

        r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf> = $r8;

     label2:
        virtualinvoke r2.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void reset()>();

        return;
    }

    private boolean isSameAs(byte[], byte[])
    {
        byte[] $r1, r2, r3, $r4, $r5;
        byte $b5, $b6, $b10, $b11;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, i12, i13, $i14, $i15, $i16, $i17;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r3 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label5;

        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i8 = lengthof $r4;

        $i7 = lengthof r2;

        if $i8 <= $i7 goto label1;

        return 0;

     label1:
        i12 = 0;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i9 = lengthof $r5;

        if i12 == $i9 goto label4;

        $b11 = r3[i12];

        $b10 = r2[i12];

        $i14 = (int) $b11;

        $i15 = (int) $b10;

        if $i14 == $i15 goto label3;

        return 0;

     label3:
        i12 = i12 + 1;

        goto label2;

     label4:
        goto label9;

     label5:
        $i3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i2 = lengthof r2;

        if $i3 == $i2 goto label6;

        return 0;

     label6:
        i13 = 0;

     label7:
        $i4 = lengthof r2;

        if i13 == $i4 goto label9;

        $b6 = r3[i13];

        $b5 = r2[i13];

        $i16 = (int) $b6;

        $i17 = (int) $b5;

        if $i16 == $i17 goto label8;

        return 0;

     label8:
        i13 = i13 + 1;

        goto label7;

     label9:
        return 1;
    }

    private void clearBlock(byte[])
    {
        byte[] r0;
        int $i0, i1;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r1;

        r1 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r0 := @parameter0: byte[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label2;

        r0[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void update(byte)
    {
        byte[] $r2, $r3;
        org.bouncycastle.crypto.Digest $r1;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        $i2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i1 = lengthof $r2;

        if $i2 >= $i1 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r3[$i5] = b0;

     label1:
        $i3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i4 = $i3 + 1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = $i4;

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1, $r3, $r4, $r5;
        org.bouncycastle.crypto.Digest $r2;
        byte $b9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, i11, $i12, $i13;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        $i3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i2 = lengthof $r3;

        if $i3 >= $i2 goto label2;

        i11 = 0;

     label1:
        if i11 >= i1 goto label2;

        $i4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i6 = i11 + $i4;

        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i5 = lengthof $r4;

        if $i6 >= $i5 goto label2;

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i7 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i10 = $i7 + i11;

        $i8 = i0 + i11;

        $b9 = r1[$i8];

        $r5[$i10] = $b9;

        i11 = i11 + 1;

        goto label1;

     label2:
        $i12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i13 = $i12 + i1;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = $i13;

        return;
    }

    public void reset()
    {
        byte[] $r2, $r3, $r4;
        org.bouncycastle.crypto.Digest $r1;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = 0;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        if $r3 == null goto label1;

        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r4);

     label1:
        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = null;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 0;

        return;
    }

    public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException
    {
        byte[] $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29;
        byte $b7, $b11, $b22, $b23, $b24, $b27, $b28, $b29, $b30, $b31, $b32, b41, b44, b47, b48;
        org.bouncycastle.crypto.Digest $r1, $r4, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i25, $i26, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i42, i43, i45, i46, $i50;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r15;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        if $i1 != 188 goto label1;

        b41 = 8;

        $r25 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i36 = lengthof $r25;

        $i37 = $i36 - $i0;

        i42 = $i37 - 1;

        $r27 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $r26 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        interfaceinvoke $r27.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r26, i42);

        $r29 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r28 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i38 = lengthof $r28;

        $i39 = $i38 - 1;

        $r29[$i39] = -68;

        goto label2;

     label1:
        b41 = 16;

        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i2 = lengthof $r2;

        $i3 = $i2 - $i0;

        i42 = $i3 - 2;

        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $r3 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r3, i42);

        $r6 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i4 = lengthof $r5;

        $i8 = $i4 - 2;

        $i5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        $i6 = $i5 >>> 8;

        $b7 = (byte) $i6;

        $r6[$i8] = $b7;

        $r8 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r7 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i9 = lengthof $r7;

        $i12 = $i9 - 1;

        $i10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        $b11 = (byte) $i10;

        $r8[$i12] = $b11;

     label2:
        $i13 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i14 = $i0 + $i13;

        $i15 = $i14 * 8;

        $i16 = $i15 + b41;

        $i18 = $i16 + 4;

        $i17 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits>;

        $i40 = $i18 - $i17;

        if $i40 <= 0 goto label3;

        $i35 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i33 = $i40 + 7;

        $i34 = $i33 / 8;

        i43 = $i35 - $i34;

        b44 = 96;

        b48 = 96;

        b47 = 96;

        i45 = i42 - i43;

        $r24 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r23 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r23, i45, i43);

        goto label4;

     label3:
        b44 = 64;

        b48 = 64;

        b47 = 64;

        $i19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        i45 = i42 - $i19;

        $r10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r9 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i20 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, i45, $i20);

     label4:
        $i21 = i45 - 1;

        if $i21 <= 0 goto label7;

        i46 = i45 - 1;

     label5:
        if i46 == 0 goto label6;

        $r22 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r22[i46] = -69;

        $i50 = (int) -1;

        i46 = i46 + $i50;

        goto label5;

     label6:
        $r19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i26 = i45 - 1;

        $b27 = $r19[$i26];

        $b28 = $b27 ^ 1;

        $b29 = (byte) $b28;

        $r19[$i26] = $b29;

        $r20 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r20[0] = 11;

        $r21 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $b30 = $r21[0];

        $b31 = $b30 | b48;

        $b32 = (byte) $b31;

        $r21[0] = $b32;

        goto label8;

     label7:
        $r11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r11[0] = 10;

        $r12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $b22 = $r12[0];

        $b23 = $b22 | b47;

        $b24 = (byte) $b23;

        $r12[0] = $b24;

     label8:
        $r15 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $r14 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r13 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i25 = lengthof $r13;

        $r16 = interfaceinvoke $r15.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r14, 0, $i25);

        $r17 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r17);

        $r18 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r18);

        return $r16;
    }

    public boolean verifySignature(byte[])
    {
        byte[] r1, $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r30, $r31;
        byte $b1, $b6, $b7, $b8, $b11, $b16, $b20, $b28, $b29, $b35, $b36, $b37, $b38, $b40, $b46, $b47, $b48, $b49, $b51, $b52, $b53, $b54, b56;
        java.lang.Exception $r32;
        short $s2, $s3, $s12, $s13, $s17, $s21, $s63, $s64, $s65, $s67;
        java.lang.IllegalStateException $r33, $r34, $r35;
        boolean $z0, $z1, $z2, $z3;
        org.bouncycastle.crypto.Digest $r4, $r5, $r6, $r15, $r16, $r17, $r25, $r27;
        int $i0, $i4, $i5, $i9, $i10, $i14, $i15, $i18, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i30, $i31, $i32, $i33, $i34, $i39, $i41, $i42, $i43, $i44, $i45, $i50, $i55, i57, i58, $i59, i60, i61, i62, $i66, $i68;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;
        java.lang.IllegalArgumentException $r36;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r1 := @parameter0: byte[];

     label01:
        $r2 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i0 = lengthof r1;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, 0, $i0);

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        return 0;

     label04:
        $b1 = $r3[0];

        $s63 = (short) $b1;

        $s2 = $s63 & 192;

        $s3 = $s2 ^ 64;

        if $s3 == 0 goto label05;

        $r31 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r31);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label05:
        $i4 = lengthof $r3;

        $i5 = $i4 - 1;

        $b6 = $r3[$i5];

        $b7 = $b6 & 15;

        $b8 = $b7 ^ 12;

        if $b8 == 0 goto label06;

        $r30 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r30);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label06:
        $i9 = lengthof $r3;

        $i10 = $i9 - 1;

        $b11 = $r3[$i10];

        $s64 = (short) $b11;

        $s12 = $s64 & 255;

        $s13 = $s12 ^ 188;

        if $s13 != 0 goto label07;

        b56 = 1;

        goto label13;

     label07:
        $i14 = lengthof $r3;

        $i15 = $i14 - 2;

        $b16 = $r3[$i15];

        $s65 = (short) $b16;

        $s17 = $s65 & 255;

        $i66 = (int) $s17;

        $i22 = $i66 << 8;

        $i18 = lengthof $r3;

        $i19 = $i18 - 1;

        $b20 = $r3[$i19];

        $s67 = (short) $b20;

        $s21 = $s67 & 255;

        $i68 = (int) $s21;

        i57 = $i22 | $i68;

        lookupswitch(i57)
        {
            case 12748: goto label08;
            case 13004: goto label10;
            case 13260: goto label09;
            default: goto label11;
        };

     label08:
        $r27 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $z3 = $r27 instanceof org.bouncycastle.crypto.digests.RIPEMD160Digest;

        if $z3 != 0 goto label12;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with RIPEMD160");

        throw $r33;

     label09:
        $r4 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $z0 = $r4 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z0 != 0 goto label12;

        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with SHA1");

        throw $r34;

     label10:
        $r25 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $z2 = $r25 instanceof org.bouncycastle.crypto.digests.RIPEMD128Digest;

        if $z2 != 0 goto label12;

        $r35 = new java.lang.IllegalStateException;

        specialinvoke $r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with RIPEMD128");

        throw $r35;

     label11:
        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unrecognised hash in signature");

        throw $r36;

     label12:
        b56 = 2;

     label13:
        i58 = 0;

     label14:
        $i59 = lengthof $r3;

        if i58 == $i59 goto label16;

        $b52 = $r3[i58];

        $b53 = $b52 & 15;

        $b54 = $b53 ^ 10;

        if $b54 != 0 goto label15;

        goto label16;

     label15:
        i58 = i58 + 1;

        goto label14;

     label16:
        i60 = i58 + 1;

        $r5 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i23 = interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r23 = newarray (byte)[$i23];

        $i24 = lengthof $r3;

        $i26 = $i24 - b56;

        $i25 = lengthof $r23;

        $i55 = $i26 - $i25;

        $i27 = $i55 - i60;

        if $i27 > 0 goto label17;

        $r22 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r22);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label17:
        $b28 = $r3[0];

        $b29 = $b28 & 32;

        if $b29 != 0 goto label21;

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 1;

        $r15 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r15.<org.bouncycastle.crypto.Digest: void reset()>();

        $r16 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i41 = $i55 - i60;

        interfaceinvoke $r16.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r3, i60, $i41);

        $r17 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r17.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r23, 0);

        i61 = 0;

     label18:
        $i42 = lengthof $r23;

        if i61 == $i42 goto label20;

        $i45 = $i55 + i61;

        $b47 = $r3[$i45];

        $b46 = $r23[i61];

        $b48 = $b47 ^ $b46;

        $b49 = (byte) $b48;

        $r3[$i45] = $b49;

        $i50 = $i55 + i61;

        $b51 = $r3[$i50];

        if $b51 == 0 goto label19;

        $r21 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r21);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label19:
        i61 = i61 + 1;

        goto label18;

     label20:
        $i43 = $i55 - i60;

        $r18 = newarray (byte)[$i43];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = $r18;

        $r20 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $r19 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $i44 = lengthof $r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i60, $r20, 0, $i44);

        goto label25;

     label21:
        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 0;

        $r6 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r23, 0);

        i62 = 0;

     label22:
        $i30 = lengthof $r23;

        if i62 == $i30 goto label24;

        $i34 = $i55 + i62;

        $b36 = $r3[$i34];

        $b35 = $r23[i62];

        $b37 = $b36 ^ $b35;

        $b38 = (byte) $b37;

        $r3[$i34] = $b38;

        $i39 = $i55 + i62;

        $b40 = $r3[$i39];

        if $b40 == 0 goto label23;

        $r14 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r14);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label23:
        i62 = i62 + 1;

        goto label22;

     label24:
        $i31 = $i55 - i60;

        $r7 = newarray (byte)[$i31];

        r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = $r7;

        $r9 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $r8 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $i32 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i60, $r9, 0, $i32);

     label25:
        $i33 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        if $i33 == 0 goto label26;

        $r12 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r11 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $z1 = specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean isSameAs(byte[],byte[])>($r12, $r11);

        if $z1 != 0 goto label26;

        $r13 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r13);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 0;

     label26:
        $r10 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r10);

        specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public boolean hasFullMessage()
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $z0 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage>;

        return $z0;
    }

    public byte[] getRecoveredMessage()
    {
        byte[] $r1;
        org.bouncycastle.crypto.signers.ISO9796d2Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 = r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_SHA1> = 13260;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_RIPEMD128> = 13004;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_RIPEMD160> = 12748;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_IMPLICIT> = 188;

        return;
    }
}
