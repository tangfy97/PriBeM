public class org.springframework.aop.aspectj.DeclareParentsAdvisor extends java.lang.Object implements org.springframework.aop.IntroductionAdvisor
{
    private final java.lang.Class introducedInterface;
    private final org.springframework.aop.ClassFilter typePatternClassFilter;
    private final org.aopalliance.aop.Advice advice;

    public void <init>(java.lang.Class, java.lang.String, java.lang.Class)
    {
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor $r4;
        java.lang.Class r1, r3;
        java.lang.String r2;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        $r4 = new org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

        specialinvoke $r4.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: void <init>(java.lang.Class,java.lang.Class)>(r3, r1);

        specialinvoke r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: void <init>(java.lang.Class,java.lang.String,java.lang.Class,org.aopalliance.aop.Advice)>(r1, r2, r3, $r4);

        return;
    }

    public void <init>(java.lang.Class, java.lang.String, java.lang.Object)
    {
        org.springframework.aop.support.DelegatingIntroductionInterceptor $r5;
        java.lang.Class r1, $r4;
        java.lang.Object r3;
        java.lang.String r2;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = new org.springframework.aop.support.DelegatingIntroductionInterceptor;

        specialinvoke $r5.<org.springframework.aop.support.DelegatingIntroductionInterceptor: void <init>(java.lang.Object)>(r3);

        specialinvoke r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: void <init>(java.lang.Class,java.lang.String,java.lang.Class,org.aopalliance.aop.Advice)>(r1, r2, $r4, $r5);

        return;
    }

    private void <init>(java.lang.Class, java.lang.String, java.lang.Class, org.aopalliance.aop.Advice)
    {
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;
        org.springframework.aop.ClassFilter $r5;
        org.springframework.aop.aspectj.TypePatternClassFilter $r2;
        org.aopalliance.aop.Advice r6;
        java.lang.Class r1, r7;
        org.springframework.aop.aspectj.DeclareParentsAdvisor$1 $r4;
        java.lang.String r3;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Class;

        r6 := @parameter3: org.aopalliance.aop.Advice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: java.lang.Class introducedInterface> = r1;

        $r2 = new org.springframework.aop.aspectj.TypePatternClassFilter;

        specialinvoke $r2.<org.springframework.aop.aspectj.TypePatternClassFilter: void <init>(java.lang.String)>(r3);

        $r4 = new org.springframework.aop.aspectj.DeclareParentsAdvisor$1;

        specialinvoke $r4.<org.springframework.aop.aspectj.DeclareParentsAdvisor$1: void <init>(org.springframework.aop.aspectj.DeclareParentsAdvisor)>(r0);

        $r5 = staticinvoke <org.springframework.aop.support.ClassFilters: org.springframework.aop.ClassFilter intersection(org.springframework.aop.ClassFilter,org.springframework.aop.ClassFilter)>($r2, $r4);

        r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.springframework.aop.ClassFilter typePatternClassFilter> = $r5;

        r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.aopalliance.aop.Advice advice> = r6;

        return;
    }

    public org.springframework.aop.ClassFilter getClassFilter()
    {
        org.springframework.aop.ClassFilter $r1;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        $r1 = r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.springframework.aop.ClassFilter typePatternClassFilter>;

        return $r1;
    }

    public void validateInterfaces() throws java.lang.IllegalArgumentException
    {
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        return;
    }

    public boolean isPerInstance()
    {
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        return 1;
    }

    public org.aopalliance.aop.Advice getAdvice()
    {
        org.aopalliance.aop.Advice $r1;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        $r1 = r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.aopalliance.aop.Advice advice>;

        return $r1;
    }

    public java.lang.Class[] getInterfaces()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r2;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r1;

        r1 := @this: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        $r0 = newarray (java.lang.Class)[1];

        $r2 = r1.<org.springframework.aop.aspectj.DeclareParentsAdvisor: java.lang.Class introducedInterface>;

        $r0[0] = $r2;

        return $r0;
    }

    static java.lang.Class access$0(org.springframework.aop.aspectj.DeclareParentsAdvisor)
    {
        java.lang.Class $r1;
        org.springframework.aop.aspectj.DeclareParentsAdvisor r0;

        r0 := @parameter0: org.springframework.aop.aspectj.DeclareParentsAdvisor;

        $r1 = r0.<org.springframework.aop.aspectj.DeclareParentsAdvisor: java.lang.Class introducedInterface>;

        return $r1;
    }
}
