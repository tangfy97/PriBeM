class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final com.sun.xml.bind.v2.model.core.WildcardMode val$wc;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, com.sun.xml.bind.v2.model.core.WildcardMode)
    {
        com.sun.xml.bind.v2.model.core.WildcardMode r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5 r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: com.sun.xml.bind.v2.model.core.WildcardMode;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5: com.sun.xml.bind.v2.model.core.WildcardMode val$wc> = r2;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5 r2;
        com.sun.xml.bind.v2.model.core.WildcardMode $r3;
        com.sun.xml.bind.v2.schemagen.xmlschema.Any $r1;
        java.lang.String $r4;
        boolean z0, z1;

        r2 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5;

        r0 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.Any any()>();

        $r3 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5: com.sun.xml.bind.v2.model.core.WildcardMode val$wc>;

        $r4 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: java.lang.String access$2200(com.sun.xml.bind.v2.model.core.WildcardMode)>($r3);

        if $r4 == null goto label1;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.Any: com.sun.xml.bind.v2.schemagen.xmlschema.Wildcard processContents(java.lang.String)>($r4);

     label1:
        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.Any: com.sun.xml.bind.v2.schemagen.xmlschema.Wildcard namespace(java.lang.String)>("##other");

        virtualinvoke r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r1, z0, z1);

        return;
    }
}
