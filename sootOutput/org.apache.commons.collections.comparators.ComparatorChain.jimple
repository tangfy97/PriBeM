public class org.apache.commons.collections.comparators.ComparatorChain extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;
    protected java.util.List comparatorChain;
    protected java.util.BitSet orderingBits;
    protected boolean isLocked;

    public void <init>()
    {
        java.util.BitSet $r2;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void <init>(java.util.List,java.util.BitSet)>($r1, $r2);

        return;
    }

    public void <init>(java.util.Comparator)
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void <init>(java.util.Comparator,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.util.Comparator, boolean)
    {
        java.util.List $r3;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.BitSet $r4, $r5;
        java.util.Comparator r2;
        java.util.ArrayList $r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r2 := @parameter0: java.util.Comparator;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain> = null;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits> = null;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain> = $r1;

        $r3 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>(int)>(1);

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits> = $r4;

        if z0 != 1 goto label1;

        $r5 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        virtualinvoke $r5.<java.util.BitSet: void set(int)>(0);

     label1:
        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        int $i0;
        java.util.BitSet $r2;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.util.List;

        $r2 = new java.util.BitSet;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.BitSet: void <init>(int)>($i0);

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void <init>(java.util.List,java.util.BitSet)>(r1, $r2);

        return;
    }

    public void <init>(java.util.List, java.util.BitSet)
    {
        java.util.List r1;
        java.util.BitSet r2;
        org.apache.commons.collections.comparators.ComparatorChain r0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.BitSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain> = null;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits> = null;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked> = 0;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain> = r1;

        r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits> = r2;

        return;
    }

    public void addComparator(java.util.Comparator)
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.util.Comparator;

        virtualinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void addComparator(java.util.Comparator,boolean)>(r1, 0);

        return;
    }

    public void addComparator(java.util.Comparator, boolean)
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.List $r2, $r3;
        int $i0, $i1;
        java.util.BitSet $r4;
        java.util.Comparator r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.util.Comparator;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void checkLocked()>();

        $r2 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if z0 != 1 goto label1;

        $r4 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        $r3 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        virtualinvoke $r4.<java.util.BitSet: void set(int)>($i1);

     label1:
        return;
    }

    public void setComparator(int, java.util.Comparator) throws java.lang.IndexOutOfBoundsException
    {
        int i0;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Comparator;

        virtualinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void setComparator(int,java.util.Comparator,boolean)>(i0, r1, 0);

        return;
    }

    public void setComparator(int, java.util.Comparator, boolean)
    {
        java.util.List $r2;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        int i0;
        java.util.BitSet $r3, $r4;
        java.util.Comparator r1;
        boolean z0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Comparator;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void checkLocked()>();

        $r2 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        if z0 != 1 goto label1;

        $r4 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        virtualinvoke $r4.<java.util.BitSet: void set(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(i0);

     label2:
        return;
    }

    public void setForwardSort(int)
    {
        int i0;
        java.util.BitSet $r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void checkLocked()>();

        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        virtualinvoke $r1.<java.util.BitSet: void clear(int)>(i0);

        return;
    }

    public void setReverseSort(int)
    {
        int i0;
        java.util.BitSet $r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void checkLocked()>();

        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        virtualinvoke $r1.<java.util.BitSet: void set(int)>(i0);

        return;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public boolean isLocked()
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        $z0 = r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked>;

        return $z0;
    }

    private void checkLocked()
    {
        java.lang.UnsupportedOperationException $r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        $z0 = r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked>;

        if $z0 != 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Comparator ordering cannot be changed after the first comparison is performed");

        throw $r1;

     label1:
        return;
    }

    private void checkChainIntegrity()
    {
        java.lang.UnsupportedOperationException $r2;
        java.util.List $r1;
        org.apache.commons.collections.comparators.ComparatorChain r0;
        int $i0;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ComparatorChains must contain at least one Comparator");

        throw $r2;

     label1:
        return;
    }

    public int compare(java.lang.Object, java.lang.Object) throws java.lang.UnsupportedOperationException
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        int $i0, i1, i2, $i4;
        java.lang.Object $r3, r5, r6;
        java.util.BitSet $r7;
        java.util.Comparator r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.commons.collections.comparators.ComparatorChain: void checkChainIntegrity()>();

        r0.<org.apache.commons.collections.comparators.ComparatorChain: boolean isLocked> = 1;

     label1:
        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        i1 = 0;

     label2:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Comparator) $r3;

        $i0 = interfaceinvoke r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r5, r6);

        i2 = $i0;

        if $i0 == 0 goto label5;

        $r7 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        $z1 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>(i1);

        if $z1 != 1 goto label4;

        if -2147483648 != $i0 goto label3;

        i2 = 2147483647;

        goto label4;

     label3:
        $i4 = (int) -1;

        i2 = $i0 * $i4;

     label4:
        return i2;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections.comparators.ComparatorChain r0;
        java.util.List $r1, $r4;
        int $i0, $i1, i2;
        java.util.BitSet $r2, $r3;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        i2 = 0;

        $r1 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        if null == $r1 goto label1;

        $r4 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $i1 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i2 = 0 ^ $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        if null == $r2 goto label2;

        $r3 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        $i0 = virtualinvoke $r3.<java.util.BitSet: int hashCode()>();

        i2 = i2 ^ $i0;

     label2:
        return i2;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.collections.comparators.ComparatorChain r0, r4;
        java.util.List $r8, $r9, $r10, $r11;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.util.BitSet $r5, $r6, $r7, $r12;

        r0 := @this: org.apache.commons.collections.comparators.ComparatorChain;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if null != r1 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label9;

        r4 = (org.apache.commons.collections.comparators.ComparatorChain) r1;

        $r5 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        if null != $r5 goto label3;

        $r12 = r4.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        if null != $r12 goto label7;

        goto label4;

     label3:
        $r7 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        $r6 = r4.<org.apache.commons.collections.comparators.ComparatorChain: java.util.BitSet orderingBits>;

        $z1 = virtualinvoke $r7.<java.util.BitSet: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label7;

     label4:
        $r8 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        if null != $r8 goto label5;

        $r11 = r4.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        if null != $r11 goto label7;

        goto label6;

     label5:
        $r10 = r0.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $r9 = r4.<org.apache.commons.collections.comparators.ComparatorChain: java.util.List comparatorChain>;

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label7;

     label6:
        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        return $z3;

     label9:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.comparators.ComparatorChain: long serialVersionUID> = -721644942746081630L;

        return;
    }
}
