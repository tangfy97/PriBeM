public class org.apache.lucene.queries.function.valuesource.BytesRefFieldSource extends org.apache.lucene.queries.function.valuesource.FieldCacheSource
{

    public void <init>(java.lang.String)
    {
        org.apache.lucene.queries.function.valuesource.BytesRefFieldSource r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.BytesRefFieldSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.FieldCacheSource: void <init>(java.lang.String)>(r1);

        return;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.function.valuesource.BytesRefFieldSource r3;
        java.util.Map r15;
        java.lang.String $r4, $r7, $r12;
        org.apache.lucene.index.FieldInfos $r2;
        org.apache.lucene.search.FieldCache $r10;
        org.apache.lucene.index.FieldInfo$DocValuesType $r8, $r9;
        org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$2 $r6;
        org.apache.lucene.index.FieldInfo $r5;
        org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$1 $r14;
        org.apache.lucene.index.BinaryDocValues $r13;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r1, $r11;

        r3 := @this: org.apache.lucene.queries.function.valuesource.BytesRefFieldSource;

        r15 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r4 = r3.<org.apache.lucene.queries.function.valuesource.BytesRefFieldSource: java.lang.String field>;

        $r5 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>($r4);

        if $r5 == null goto label1;

        $r8 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r9 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType BINARY>;

        if $r8 != $r9 goto label1;

        $r10 = <org.apache.lucene.search.FieldCache: org.apache.lucene.search.FieldCache DEFAULT>;

        $r11 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r12 = r3.<org.apache.lucene.queries.function.valuesource.BytesRefFieldSource: java.lang.String field>;

        $r13 = interfaceinvoke $r10.<org.apache.lucene.search.FieldCache: org.apache.lucene.index.BinaryDocValues getTerms(org.apache.lucene.index.AtomicReader,java.lang.String)>($r11, $r12);

        $r14 = new org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$1;

        specialinvoke $r14.<org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$1: void <init>(org.apache.lucene.queries.function.valuesource.BytesRefFieldSource,org.apache.lucene.index.BinaryDocValues)>(r3, $r13);

        return $r14;

     label1:
        $r6 = new org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$2;

        $r7 = r3.<org.apache.lucene.queries.function.valuesource.BytesRefFieldSource: java.lang.String field>;

        specialinvoke $r6.<org.apache.lucene.queries.function.valuesource.BytesRefFieldSource$2: void <init>(org.apache.lucene.queries.function.valuesource.BytesRefFieldSource,org.apache.lucene.queries.function.ValueSource,org.apache.lucene.index.AtomicReaderContext,java.lang.String)>(r3, r3, r0, $r7);

        return $r6;
    }
}
