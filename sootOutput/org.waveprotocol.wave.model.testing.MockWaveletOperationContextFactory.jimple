public class org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory extends org.waveprotocol.wave.model.operation.wave.AbstractWaveletOperationContextFactory
{
    private long timeMillis;
    private org.waveprotocol.wave.model.wave.ParticipantId participantId;

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory r0;

        r0 := @this: org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.AbstractWaveletOperationContextFactory: void <init>()>();

        return;
    }

    protected long currentTimeMillis()
    {
        org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory r0;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory;

        $l0 = r0.<org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory: long timeMillis>;

        return $l0;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()
    {
        org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory;

        $r1 = r0.<org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory: org.waveprotocol.wave.model.wave.ParticipantId participantId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory setCurrentTimeMillis(long)
    {
        org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory r0;
        long l0;

        r0 := @this: org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory;

        l0 := @parameter0: long;

        r0.<org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory: long timeMillis> = l0;

        return r0;
    }

    public org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory setParticipantId(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory r0;
        org.waveprotocol.wave.model.wave.ParticipantId r1;

        r0 := @this: org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r0.<org.waveprotocol.wave.model.testing.MockWaveletOperationContextFactory: org.waveprotocol.wave.model.wave.ParticipantId participantId> = r1;

        return r0;
    }
}
