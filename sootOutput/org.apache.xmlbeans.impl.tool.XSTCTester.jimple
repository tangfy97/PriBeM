public class org.apache.xmlbeans.impl.tool.XSTCTester extends java.lang.Object
{
    private static final java.util.regex.Pattern leadingSpace;

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.XSTCTester r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.XSTCTester;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printUsage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: xstc [-showpass] [-errcode] foo_LTGfmt.xml ...");

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintWriter $r16;
        java.lang.Runtime $r46, $r52;
        java.util.Set $r3;
        long $l0, $l3, $l4;
        java.util.ArrayList $r13, $r66, $r68;
        org.apache.xmlbeans.XmlCalendar $r20;
        java.lang.StringBuffer $r18, $r19, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r35, $r36, $r37, $r39, $r41, $r42, $r47, $r48, $r50, $r53, $r54, $r56, $r57, $r61, $r63, $r64, $r69, $r70, $r71, $r72, $r84, $r86, $r88;
        java.lang.String $r4, $r5, $r6, $r7, $r10, $r11, $r24, $r32, $r38, $r43, $r44, $r45, $r49, $r51, $r55, $r58, $r65, $r73, $r82, $r87, $r89;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[] $r67;
        java.io.File $r15, r60, $r81, $r83;
        java.util.Date $r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        org.apache.xmlbeans.impl.tool.XMLBeanXSTCHarness $r14;
        org.apache.xmlbeans.impl.tool.CommandLine $r1;
        java.lang.String[] r2, $r8, $r9;
        java.util.HashSet $r0;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult $r76, $r79;
        int $i1, $i2, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, i13, i14, i15;
        double $d0, $d1;
        java.io.PrintStream $r34, $r40, $r62, $r85;
        java.util.Iterator $r25, $r74, $r77;
        java.io.FileWriter $r17;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase $r80;
        java.lang.Object $r59, $r75, $r78;
        java.io.File[] $r12;

        r2 := @parameter0: java.lang.String[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("h");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("help");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("usage");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("version");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("showpass");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("errcode");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = new org.apache.xmlbeans.impl.tool.CommandLine;

        $r3 = <java.util.Collections: java.util.Set EMPTY_SET>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: void <init>(java.lang.String[],java.util.Collection,java.util.Collection)>(r2, $r0, $r3);

        $r4 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("h");

        if $r4 != null goto label01;

        $r5 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("help");

        if $r5 != null goto label01;

        $r6 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("usage");

        if $r6 == null goto label02;

     label01:
        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: void printUsage()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label02:
        $r7 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("version");

        if $r7 == null goto label03;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label03:
        $r8 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] getBadOpts()>();

        $i1 = lengthof $r8;

        if $i1 <= 0 goto label06;

        i10 = 0;

     label04:
        $i9 = lengthof $r8;

        if i10 >= $i9 goto label05;

        $r85 = <java.lang.System: java.io.PrintStream out>;

        $r84 = new java.lang.StringBuffer;

        specialinvoke $r84.<java.lang.StringBuffer: void <init>()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized option: ");

        $r87 = $r8[i10];

        $r88 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r89);

        i10 = i10 + 1;

        goto label04;

     label05:
        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: void printUsage()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label06:
        $r9 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] args()>();

        $i2 = lengthof $r9;

        if $i2 != 0 goto label07;

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: void printUsage()>();

        return;

     label07:
        $r10 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("showpass");

        if $r10 == null goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z6 = $z5;

        $r11 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("errcode");

        if $r11 == null goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        z0 = $z7;

        $r12 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] getFiles()>();

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new org.apache.xmlbeans.impl.tool.XMLBeanXSTCHarness;

        specialinvoke $r14.<org.apache.xmlbeans.impl.tool.XMLBeanXSTCHarness: void <init>()>();

        i11 = 0;

     label12:
        $i12 = lengthof $r12;

        if i11 >= $i12 goto label14;

        $r81 = $r12[i11];

        $r82 = virtualinvoke $r81.<java.io.File: java.lang.String getName()>();

        $i8 = virtualinvoke $r82.<java.lang.String: int indexOf(java.lang.String)>("LTG");

        if $i8 < 0 goto label13;

        $r83 = $r12[i11];

        interfaceinvoke $r13.<java.util.Collection: boolean add(java.lang.Object)>($r83);

     label13:
        i11 = i11 + 1;

        goto label12;

     label14:
        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>("out.html");

        $r16 = new java.io.PrintWriter;

        $r17 = new java.io.FileWriter;

        specialinvoke $r17.<java.io.FileWriter: void <init>(java.io.File)>($r15);

        specialinvoke $r16.<java.io.PrintWriter: void <init>(java.io.Writer)>($r17);

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<html>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<style>td {border-bottom: 1px solid black} xmp {white-space: normal; word-wrap: break-word; word-break: break-all} </style>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<body>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<script language=\'JavaScript\' type=\'text/javascript\'>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("var w;");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("function openWindow(schema, instance) {");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  if (w == null) {");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("    w = window.open(\'about:blank\', \'xstc\');");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  }");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  if (w.closed) {");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("    w = window.open(\'about:blank\', \'xstc\');");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  }");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  w.document.open();");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  w.document.write(\"<frameset rows=*,*><frame src=\'\" + schema + \"\'><frame src=\'\" + instance + \"\'></frameset>\");");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  w.document.close();");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("  w.focus();");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("}");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("</script>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<h1>XML Schema Test Collection Results</h1>");

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<p>Run on ");

        $r20 = new org.apache.xmlbeans.XmlCalendar;

        $r21 = new java.util.Date;

        specialinvoke $r21.<java.util.Date: void <init>()>();

        specialinvoke $r20.<org.apache.xmlbeans.XmlCalendar: void <init>(java.util.Date)>($r21);

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</p>");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<p>Values in schema or instance valid columns are results from compiling or validating respectively.");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("Red or orange background mean the test failed.</p>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<table style=\'border: 1px solid black\' cellpadding=0 cellspacing=0>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<tr><td witdh=10%>id</td><td width=70%>Description</td><td width=10%>sch v</td><td width=10%>ins v</td></tr>");

        i13 = 0;

        i14 = 0;

        $r25 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z8 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label28;

        $r59 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r60 = (java.io.File) $r59;

        $r62 = <java.lang.System: java.io.PrintStream out>;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Processing test cases in ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r60);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r65);

        $r66 = new java.util.ArrayList;

        specialinvoke $r66.<java.util.ArrayList: void <init>()>();

        $r67 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[] parseLTGFile(java.io.File,java.util.Collection)>(r60, $r66);

        $r68 = new java.util.ArrayList;

        specialinvoke $r68.<java.util.ArrayList: void <init>()>();

        if $r67 == null goto label20;

        i15 = 0;

     label16:
        $i7 = lengthof $r67;

        if i15 >= $i7 goto label20;

        $r79 = new org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult;

        specialinvoke $r79.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: void <init>()>();

        $r80 = $r67[i15];

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: org.apache.xmlbeans.impl.tool.XSTCTester$TestCase access$002(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult,org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)>($r79, $r80);

        interfaceinvoke $r14.<org.apache.xmlbeans.impl.tool.XSTCTester$Harness: void runTestCase(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult)>($r79);

        i14 = i14 + 1;

        $z4 = virtualinvoke $r79.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean succeeded(boolean)>(z0);

        if $z4 != 0 goto label17;

        i13 = i13 + 1;

        goto label18;

     label17:
        if z6 != 0 goto label18;

        goto label19;

     label18:
        interfaceinvoke $r68.<java.util.Collection: boolean add(java.lang.Object)>($r79);

     label19:
        i15 = i15 + 1;

        goto label16;

     label20:
        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<tr><td colspan=4 bgcolor=skyblue>");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r60);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td></tr>");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        $z1 = interfaceinvoke $r66.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label23;

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<tr><td>Errors within the LTG file:");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<xmp>");

        $r77 = interfaceinvoke $r66.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z3 = interfaceinvoke $r77.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label22;

        $r78 = interfaceinvoke $r77.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.Object)>($r78);

        goto label21;

     label22:
        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("</xmp>");

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("</td></tr>");

        goto label24;

     label23:
        $i6 = interfaceinvoke $r68.<java.util.Collection: int size()>();

        if $i6 != 0 goto label24;

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("<tr><td colspan=4 bgcolor=green>Nothing to report</td></tr>");

     label24:
        if $r68 != null goto label25;

        goto label15;

     label25:
        $r74 = interfaceinvoke $r68.<java.util.Collection: java.util.Iterator iterator()>();

     label26:
        $z2 = interfaceinvoke $r74.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label27;

        $r75 = interfaceinvoke $r74.<java.util.Iterator: java.lang.Object next()>();

        $r76 = (org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult) $r75;

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: void summarizeResultAsHTMLTableRows(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult,java.io.PrintWriter,boolean)>($r76, $r16, z0);

        goto label26;

     label27:
        goto label15;

     label28:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<tr><td colspan=4>Summary: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" failures out of ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i14);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cases run.</td></tr>");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        virtualinvoke $r16.<java.io.PrintWriter: void println(java.lang.String)>("</table>");

        virtualinvoke $r16.<java.io.PrintWriter: void close()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Time run tests: ");

        $l4 = $l3 - $l0;

        $d0 = (double) $l4;

        $d1 = $d0 / 1000.0;

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Results output to ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r44 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("os.name");

        $r45 = virtualinvoke $r44.<java.lang.String: java.lang.String toLowerCase()>();

        $i5 = virtualinvoke $r45.<java.lang.String: int indexOf(java.lang.String)>("windows");

        if $i5 < 0 goto label29;

        $r52 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cmd /c start iexplore \"");

        $r55 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r52.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r58);

        goto label30;

     label29:
        $r46 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mozilla file://");

        $r49 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r51);

     label30:
        return;
    }

    public static java.lang.String makeHTMLLink(java.io.File, boolean)
    {
        java.io.File r0, $r1;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r8, $r9;
        java.net.URI $r2;
        java.lang.String $r7, $r10;
        boolean z0;

        r0 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return "&nbsp;";

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.io.File getAbsoluteFile()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.net.URI toURI()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<a href=\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" target=_blank>");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</a>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public static java.lang.String makeHTMLDescription(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)
    {
        java.io.File $r2, $r3, $r6, $r7;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase r1;
        java.util.regex.Matcher $r12;
        java.lang.StringBuffer $r0;
        java.lang.String $r4, $r5, $r8, $r9, $r11, $r13, $r14;
        java.util.regex.Pattern $r10;

        r1 := @parameter0: org.apache.xmlbeans.impl.tool.XSTCTester$TestCase;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<a class=noline href=\'javascript:openWindow(\"");

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getSchemaFile()>();

        if $r2 != null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("about:No schema");

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getSchemaFile()>();

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\\\\\");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getInstanceFile()>();

        if $r6 != null goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("about:No instance");

        goto label4;

     label3:
        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getInstanceFile()>();

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\\\\\");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")\'><xmp>");

        $r10 = <org.apache.xmlbeans.impl.tool.XSTCTester: java.util.regex.Pattern leadingSpace>;

        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getDescription()>();

        $r12 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r11);

        $r13 = virtualinvoke $r12.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</xmp></a>");

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    public static void summarizeResultAsHTMLTableRows(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult, java.io.PrintWriter, boolean)
    {
        java.io.PrintWriter r4;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r20, $r23, $r24, $r27, $r34, $r35, $r36, $r38, $r39, $r51, $r53, $r54, $r55, $r57, $r59, $r62, $r63;
        java.lang.String $r9, $r12, $r15, $r18, $r22, $r26, $r37, $r40, $r42, $r44, $r47, $r49, r50, $r52, $r56, $r58, $r61, $r64, $r65;
        java.io.File $r2, $r3, $r19, $r21, $r25, $r41, $r60;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, z24, $z25, $z26, $z27, $z28, $z29, $z30;
        java.util.Collection $r28, $r30, $r43, $r45, $r46, $r48;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult r0;
        int $i0, $i1;
        java.util.Iterator $r29, $r31;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase $r1;
        java.lang.Object $r32, $r33;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult;

        r4 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: org.apache.xmlbeans.impl.tool.XSTCTester$TestCase getTestCase()>();

        if z0 == 0 goto label01;

        $r47 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getErrorCode()>();

        if $r47 == null goto label01;

        $z19 = 1;

        goto label02;

     label01:
        $z19 = 0;

     label02:
        z1 = $z19;

        $r48 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection getIvMessages()>();

        $z20 = interfaceinvoke $r48.<java.util.Collection: boolean isEmpty()>();

        if $z20 == 0 goto label03;

        $r46 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection getSvMessages()>();

        $z18 = interfaceinvoke $r46.<java.util.Collection: boolean isEmpty()>();

        if $z18 != 0 goto label04;

     label03:
        $z21 = 1;

        goto label05;

     label04:
        $z21 = 0;

     label05:
        z2 = $z21;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getSchemaFile()>();

        if $r2 == null goto label06;

        $z16 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: boolean isSvExpected()>();

        $z17 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isSvActual()>();

        if $z16 != $z17 goto label07;

     label06:
        $z22 = 1;

        goto label08;

     label07:
        $z22 = 0;

     label08:
        z3 = $z22;

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getInstanceFile()>();

        if $r3 == null goto label09;

        $z14 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: boolean isIvExpected()>();

        $z15 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isIvActual()>();

        if $z14 != $z15 goto label10;

     label09:
        $z23 = 1;

        goto label11;

     label10:
        $z23 = 0;

     label11:
        z4 = $z23;

        z24 = 1;

        if z1 == 0 goto label15;

        $r42 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getErrorCode()>();

        $r43 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection access$100(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult)>(r0);

        $z12 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: boolean errorReported(java.lang.String,java.util.Collection)>($r42, $r43);

        if $z12 != 0 goto label12;

        $r44 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getErrorCode()>();

        $r45 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection access$200(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult)>(r0);

        $z13 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: boolean errorReported(java.lang.String,java.util.Collection)>($r44, $r45);

        if $z13 == 0 goto label13;

     label12:
        $z25 = 1;

        goto label14;

     label13:
        $z25 = 0;

     label14:
        z24 = $z25;

     label15:
        $z26 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isCrash()>();

        if $z26 == 0 goto label16;

        $r49 = "<tr bgcolor=black color=white>";

        goto label17;

     label16:
        $r49 = "<tr>";

     label17:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        if z1 == 0 goto label18;

        $z27 = 1;

        goto label19;

     label18:
        $z27 = 0;

     label19:
        $i0 = 1 + $z27;

        if z2 == 0 goto label20;

        $z28 = 1;

        goto label21;

     label20:
        $z28 = 0;

     label21:
        $i1 = $i0 + $z28;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<td rowspan=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" valign=top>");

        $r9 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getId()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<td valign=top>");

        $r15 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: java.lang.String makeHTMLDescription(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)>($r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getResourceFile()>();

        if $r19 != null goto label22;

        $r41 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getSchemaFile()>();

        $z11 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isSvActual()>();

        r50 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: java.lang.String makeHTMLLink(java.io.File,boolean)>($r41, $z11);

        goto label23;

     label22:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getSchemaFile()>();

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isSvActual()>();

        $r22 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: java.lang.String makeHTMLLink(java.io.File,boolean)>($r21, $z5);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<br>");

        $r25 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getResourceFile()>();

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isSvActual()>();

        $r26 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: java.lang.String makeHTMLLink(java.io.File,boolean)>($r25, $z6);

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        r50 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

     label23:
        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        if z3 == 0 goto label24;

        $r52 = "<td valign=top>";

        goto label26;

     label24:
        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isSvActual()>();

        if $z7 == 0 goto label25;

        $r52 = "<td bgcolor=orange valign=top>";

        goto label26;

     label25:
        $r52 = "<td bgcolor=red valign=top>";

     label26:
        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r50);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td>");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        if z4 == 0 goto label27;

        $r58 = "<td valign=top>";

        goto label29;

     label27:
        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isIvActual()>();

        if $z8 == 0 goto label28;

        $r58 = "<td bgcolor=orange valign=top>";

        goto label29;

     label28:
        $r58 = "<td bgcolor=red valign=top>";

     label29:
        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File getInstanceFile()>();

        $z29 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean isIvActual()>();

        $r61 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester: java.lang.String makeHTMLLink(java.io.File,boolean)>($r60, $z29);

        $r62 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td>");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("</tr>");

        if z1 == 0 goto label32;

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("<tr>");

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        if z24 == 0 goto label30;

        $r65 = "<td colspan=4 valid=top>";

        goto label31;

     label30:
        $r65 = "<td colspan=4 bgcolor=orange valign=top>";

     label31:
        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected error: ");

        $r37 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String getErrorCode()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</td>");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("</tr>");

     label32:
        if z2 == 0 goto label39;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: boolean succeeded(boolean)>(z0);

        if $z9 != 0 goto label33;

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("<tr><td colspan=4 bgcolor=yellow><xmp>");

        goto label34;

     label33:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("<tr><td colspan=4><xmp>");

     label34:
        $r28 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection getSvMessages()>();

        $r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label35:
        $z30 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z30 == 0 goto label36;

        $r33 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.Object)>($r33);

        goto label35;

     label36:
        $r30 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult: java.util.Collection getIvMessages()>();

        $r31 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>();

     label37:
        $z10 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label38;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.Object)>($r32);

        goto label37;

     label38:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("</xmp></tr></td>");

     label39:
        return;
    }

    public static org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[] parseLTGFile(java.io.File, java.util.Collection)
    {
        java.util.Map $r2;
        org.apache.xmlbeans.impl.xb.ltgfmt.TestCase$Files $r20;
        org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc[] $r21;
        java.lang.Exception $r58, $r64;
        org.apache.xmlbeans.impl.xb.ltgfmt.Code $r40, $r77;
        org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc $r23, $r25, $r35, $r38, $r39, $r42, $r46, $r47, $r51, $r52, $r56, $r73, $r76;
        java.lang.Object[] $r9;
        java.util.ArrayList $r0, $r7;
        java.lang.StringBuffer $r29, $r30, $r31, $r32, $r59, $r60, $r61, $r62, $r69, $r70, $r71;
        org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument$Tests $r5;
        java.lang.String $r14, $r16, $r18, $r24, $r26, $r33, $r41, $r44, $r49, $r54, $r63, $r67, $r68, $r72, $r75;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[] $r8, $r10, $r11;
        java.io.File r3, $r27, $r28, $r37, $r45, $r50;
        org.apache.xmlbeans.impl.xb.ltgfmt.TestCase $r13, $r15, $r17, $r19, $r22;
        org.apache.xmlbeans.XmlException $r55;
        org.apache.xmlbeans.impl.xb.ltgfmt.TestCase[] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc$Role$Enum $r36;
        java.util.Collection r34;
        org.apache.xmlbeans.XmlError $r43, $r48, $r53, $r57, $r74;
        org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument $r4;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.util.Iterator $r65;
        org.apache.xmlbeans.impl.tool.XSTCTester$TestCase $r12;
        org.apache.xmlbeans.XmlOptions $r1;
        java.lang.Object $r66;

        r3 := @parameter0: java.io.File;

        r34 := @parameter1: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label01:
        $r1 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r1.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("", "http://www.bea.com/2003/05/xmlbean/ltgfmt");

        virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)>($r2);

        virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r0);

        virtualinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument$Factory: org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument parse(java.io.File,org.apache.xmlbeans.XmlOptions)>(r3, $r1);

        $z0 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument: boolean validate(org.apache.xmlbeans.XmlOptions)>($r1);

        if $z0 != 0 goto label02;

        $r58 = new java.lang.Exception;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Document ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not valid.");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.Exception: void <init>(java.lang.String)>($r63);

        throw $r58;

     label02:
        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument: org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument$Tests getTests()>();

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.xb.ltgfmt.TestsDocument$Tests: org.apache.xmlbeans.impl.xb.ltgfmt.TestCase[] getTestArray()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label03:
        $i0 = lengthof $r6;

        if i4 >= $i0 goto label17;

        $r12 = new org.apache.xmlbeans.impl.tool.XSTCTester$TestCase;

        specialinvoke $r12.<org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: void <init>()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$302(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.io.File)>($r12, r3);

        $r13 = $r6[i4];

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase: java.lang.String getId()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String access$402(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.lang.String)>($r12, $r14);

        $r15 = $r6[i4];

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase: java.lang.String getOrigin()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String access$502(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.lang.String)>($r12, $r16);

        $r17 = $r6[i4];

        $r18 = interfaceinvoke $r17.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase: java.lang.String getDescription()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String access$602(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.lang.String)>($r12, $r18);

        $r19 = $r6[i4];

        $r20 = interfaceinvoke $r19.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase: org.apache.xmlbeans.impl.xb.ltgfmt.TestCase$Files getFiles()>();

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase$Files: org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc[] getFileArray()>();

        $r22 = $r6[i4];

        interfaceinvoke $r22.<org.apache.xmlbeans.impl.xb.ltgfmt.TestCase: java.lang.String getOrigin()>();

        i5 = 0;

     label04:
        $i2 = lengthof $r21;

        if i5 >= $i2 goto label16;

        $r23 = $r21[i5];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: java.lang.String getFolder()>();

        $r25 = $r21[i5];

        $r26 = interfaceinvoke $r25.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: java.lang.String getFileName()>();

        $r27 = new java.io.File;

        $r28 = virtualinvoke r3.<java.io.File: java.io.File getParentFile()>();

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r28, $r33);

        $z1 = virtualinvoke $r27.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label05;

        $z2 = virtualinvoke $r27.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label05;

        $z3 = virtualinvoke $r27.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label06;

     label05:
        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t read file ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        $r73 = $r21[i5];

        $r74 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,org.apache.xmlbeans.XmlObject)>($r72, $r73);

        $r75 = virtualinvoke $r74.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r75);

        goto label15;

     label06:
        $r35 = $r21[i5];

        $r36 = interfaceinvoke $r35.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc$Role$Enum getRole()>();

        $i3 = virtualinvoke $r36.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc$Role$Enum: int intValue()>();

        tableswitch($i3)
        {
            case 1: goto label09;
            case 2: goto label07;
            case 3: goto label11;
            default: goto label13;
        };

     label07:
        $r45 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$700(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)>($r12);

        if $r45 == null goto label08;

        $r47 = $r21[i5];

        $r48 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,org.apache.xmlbeans.XmlObject)>("More than one instance file speicifed - ignoring all but last", $r47);

        $r49 = virtualinvoke $r48.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r49);

     label08:
        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$702(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.io.File)>($r12, $r27);

        $r46 = $r21[i5];

        $z5 = interfaceinvoke $r46.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: boolean getValidity()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: boolean access$802(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,boolean)>($r12, $z5);

        goto label14;

     label09:
        $r50 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$900(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)>($r12);

        if $r50 == null goto label10;

        $r52 = $r21[i5];

        $r53 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,org.apache.xmlbeans.XmlObject)>("More than one schema file speicifed - ignoring all but last", $r52);

        $r54 = virtualinvoke $r53.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r54);

     label10:
        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$902(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.io.File)>($r12, $r27);

        $r51 = $r21[i5];

        $z6 = interfaceinvoke $r51.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: boolean getValidity()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: boolean access$1002(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,boolean)>($r12, $z6);

        goto label14;

     label11:
        $r37 = staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$1100(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)>($r12);

        if $r37 == null goto label12;

        $r42 = $r21[i5];

        $r43 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,org.apache.xmlbeans.XmlObject)>("More than one resource file speicifed - ignoring all but last", $r42);

        $r44 = virtualinvoke $r43.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r44);

     label12:
        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.io.File access$1102(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.io.File)>($r12, $r27);

        $r38 = $r21[i5];

        $z4 = interfaceinvoke $r38.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: boolean getValidity()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: boolean access$1202(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,boolean)>($r12, $z4);

        goto label14;

     label13:
        $r55 = new org.apache.xmlbeans.XmlException;

        $r56 = $r21[i5];

        $r57 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,org.apache.xmlbeans.XmlObject)>("Unexpected file role", $r56);

        specialinvoke $r55.<org.apache.xmlbeans.XmlException: void <init>(org.apache.xmlbeans.XmlError)>($r57);

        throw $r55;

     label14:
        $r76 = $r21[i5];

        $r77 = interfaceinvoke $r76.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: org.apache.xmlbeans.impl.xb.ltgfmt.Code getCode()>();

        if $r77 == null goto label15;

        $r39 = $r21[i5];

        $r40 = interfaceinvoke $r39.<org.apache.xmlbeans.impl.xb.ltgfmt.FileDesc: org.apache.xmlbeans.impl.xb.ltgfmt.Code getCode()>();

        $r41 = interfaceinvoke $r40.<org.apache.xmlbeans.impl.xb.ltgfmt.Code: java.lang.String getID()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.XSTCTester$TestCase: java.lang.String access$1302(org.apache.xmlbeans.impl.tool.XSTCTester$TestCase,java.lang.String)>($r12, $r41);

     label15:
        i5 = i5 + 1;

        goto label04;

     label16:
        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        i4 = i4 + 1;

        goto label03;

     label17:
        $i1 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        $r8 = newarray (org.apache.xmlbeans.impl.tool.XSTCTester$TestCase)[$i1];

        $r9 = interfaceinvoke $r7.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[]) $r9;

        $r11 = (org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[]) $r10;

     label18:
        return $r11;

     label19:
        $r64 := @caughtexception;

        $z7 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label20;

        $r68 = virtualinvoke $r64.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r68);

        goto label22;

     label20:
        $r65 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z8 = interfaceinvoke $r65.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label22;

        $r66 = interfaceinvoke $r65.<java.util.Iterator: java.lang.Object next()>();

        $r67 = virtualinvoke $r66.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r67);

        goto label21;

     label22:
        return null;

        catch java.lang.Exception from label01 to label18 with label19;
    }

    public static boolean errorReported(java.lang.String, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        int $i0;
        org.apache.xmlbeans.XmlError $r4;
        java.lang.Object $r3;
        java.lang.String r0, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Collection;

        if r0 == null goto label1;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.apache.xmlbeans.XmlError) $r3;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.XmlError: java.lang.String getErrorCode()>();

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        return 1;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^\\s+", 8);

        <org.apache.xmlbeans.impl.tool.XSTCTester: java.util.regex.Pattern leadingSpace> = $r0;

        return;
    }
}
