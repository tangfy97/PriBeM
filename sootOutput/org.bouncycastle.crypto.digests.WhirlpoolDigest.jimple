public final class org.bouncycastle.crypto.digests.WhirlpoolDigest extends java.lang.Object implements org.bouncycastle.crypto.ExtendedDigest
{
    private static final int BYTE_LENGTH;
    private static final int DIGEST_LENGTH_BYTES;
    private static final int ROUNDS;
    private static final int REDUCTION_POLYNOMIAL;
    private static final int[] SBOX;
    private static final long[] C0;
    private static final long[] C1;
    private static final long[] C2;
    private static final long[] C3;
    private static final long[] C4;
    private static final long[] C5;
    private static final long[] C6;
    private static final long[] C7;
    private final long[] _rc;
    private static final int BITCOUNT_ARRAY_SIZE;
    private byte[] _buffer;
    private int _bufferPos;
    private short[] _bitCount;
    private long[] _hash;
    private long[] _K;
    private long[] _L;
    private long[] _block;
    private long[] _state;
    private static final short[] EIGHT;

    public void <init>()
    {
        byte[] $r2;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        long $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l21, $l23, $l24, $l25, $l27, $l28, $l29, $l30, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46;
        int[] $r19;
        short[] $r3;
        long[] $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        int $i0, $i2, $i6, $i10, $i14, $i18, $i22, $i26, $i31, $i32, $i33, $i34, i35, $i36, $i37, i38, i47, i48, i49, i50;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[11];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc> = $r1;

        $r2 = newarray (byte)[64];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer> = $r2;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r3 = newarray (short)[32];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount> = $r3;

        $r4 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash> = $r4;

        $r5 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K> = $r5;

        $r6 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L> = $r6;

        $r7 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block> = $r7;

        $r8 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state> = $r8;

        i47 = 0;

     label1:
        if i47 >= 256 goto label2;

        $r19 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: int[] SBOX>;

        i48 = $r19[i47];

        $i31 = i48 << 1;

        $i32 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>($i31);

        $i33 = $i32 << 1;

        $i34 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>($i33);

        i35 = $i34 ^ i48;

        $i36 = $i34 << 1;

        $i37 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>($i36);

        i38 = $i37 ^ i48;

        $r20 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $l39 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i48, i48, $i34, i48, $i37, i35, $i32, i38);

        $r20[i47] = $l39;

        $r21 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $l40 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i38, i48, i48, $i34, i48, $i37, i35, $i32);

        $r21[i47] = $l40;

        $r22 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $l41 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i32, i38, i48, i48, $i34, i48, $i37, i35);

        $r22[i47] = $l41;

        $r23 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $l42 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i35, $i32, i38, i48, i48, $i34, i48, $i37);

        $r23[i47] = $l42;

        $r24 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $l43 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i37, i35, $i32, i38, i48, i48, $i34, i48);

        $r24[i47] = $l43;

        $r25 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $l44 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i48, $i37, i35, $i32, i38, i48, i48, $i34);

        $r25[i47] = $l44;

        $r26 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $l45 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i34, i48, $i37, i35, $i32, i38, i48, i48);

        $r26[i47] = $l45;

        $r27 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $l46 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i48, $i34, i48, $i37, i35, $i32, i38, i48);

        $r27[i47] = $l46;

        i47 = i47 + 1;

        goto label1;

     label2:
        $r9 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r9[0] = 0L;

        i49 = 1;

     label3:
        if i49 > 10 goto label4;

        $i0 = i49 - 1;

        i50 = 8 * $i0;

        $r18 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r10 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $l1 = $r10[i50];

        $l5 = $l1 & -72057594037927936L;

        $r11 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $i2 = i50 + 1;

        $l3 = $r11[$i2];

        $l4 = $l3 & 71776119061217280L;

        $l9 = $l5 ^ $l4;

        $r12 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $i6 = i50 + 2;

        $l7 = $r12[$i6];

        $l8 = $l7 & 280375465082880L;

        $l13 = $l9 ^ $l8;

        $r13 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $i10 = i50 + 3;

        $l11 = $r13[$i10];

        $l12 = $l11 & 1095216660480L;

        $l17 = $l13 ^ $l12;

        $r14 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $i14 = i50 + 4;

        $l15 = $r14[$i14];

        $l16 = $l15 & 4278190080L;

        $l21 = $l17 ^ $l16;

        $r15 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $i18 = i50 + 5;

        $l19 = $r15[$i18];

        $l20 = $l19 & 16711680L;

        $l25 = $l21 ^ $l20;

        $r16 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $i22 = i50 + 6;

        $l23 = $r16[$i22];

        $l24 = $l23 & 65280L;

        $l29 = $l25 ^ $l24;

        $r17 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $i26 = i50 + 7;

        $l27 = $r17[$i26];

        $l28 = $l27 & 255L;

        $l30 = $l29 ^ $l28;

        $r18[i49] = $l30;

        i49 = i49 + 1;

        goto label3;

     label4:
        return;
    }

    private long packIntoLong(int, int, int, int, int, int, int, int)
    {
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        long $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l21, $l23, $l24, $l25, $l27, $l28, $l29;
        int i0, i2, i6, i10, i14, i18, i22, i26;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i6 := @parameter2: int;

        i10 := @parameter3: int;

        i14 := @parameter4: int;

        i18 := @parameter5: int;

        i22 := @parameter6: int;

        i26 := @parameter7: int;

        $l1 = (long) i0;

        $l5 = $l1 << 56;

        $l3 = (long) i2;

        $l4 = $l3 << 48;

        $l9 = $l5 ^ $l4;

        $l7 = (long) i6;

        $l8 = $l7 << 40;

        $l13 = $l9 ^ $l8;

        $l11 = (long) i10;

        $l12 = $l11 << 32;

        $l17 = $l13 ^ $l12;

        $l15 = (long) i14;

        $l16 = $l15 << 24;

        $l21 = $l17 ^ $l16;

        $l19 = (long) i18;

        $l20 = $l19 << 16;

        $l25 = $l21 ^ $l20;

        $l23 = (long) i22;

        $l24 = $l23 << 8;

        $l28 = $l25 ^ $l24;

        $l27 = (long) i26;

        $l29 = $l28 ^ $l27;

        return $l29;
    }

    private int maskWithReductionPolynomial(int)
    {
        byte $b2;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        int i0, i3, $i4;
        long $l1;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        i0 := @parameter0: int;

        i3 = i0;

        $l1 = (long) i0;

        $b2 = $l1 cmp 256L;

        $i4 = (int) $b2;

        if $i4 < 0 goto label1;

        i3 = i0 ^ 285;

     label1:
        return i3;
    }

    public void <init>(org.bouncycastle.crypto.digests.WhirlpoolDigest)
    {
        byte[] $r2, $r13, $r14, $r15;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0, r9;
        short[] $r3, $r16, $r17, $r18;
        long[] $r1, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r9 := @parameter0: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[11];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc> = $r1;

        $r2 = newarray (byte)[64];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer> = $r2;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r3 = newarray (short)[32];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount> = $r3;

        $r4 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash> = $r4;

        $r5 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K> = $r5;

        $r6 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L> = $r6;

        $r7 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block> = $r7;

        $r8 = newarray (long)[8];

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state> = $r8;

        $r12 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r11 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r10 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $i0 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, $i0);

        $r15 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $r14 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $r13 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = lengthof $r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 0, $i1);

        $i2 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i2;

        $r18 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $r17 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $r16 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $i3 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r17, 0, $i3);

        $r21 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $r20 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $r19 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $i4 = lengthof $r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, $r20, 0, $i4);

        $r24 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r23 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r22 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i5 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r23, 0, $i5);

        $r27 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r26 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r25 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $i6 = lengthof $r25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, $r26, 0, $i6);

        $r30 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r29 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r28 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $i7 = lengthof $r28;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 0, $r29, 0, $i7);

        $r33 = r9.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r32 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r31 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i8 = lengthof $r31;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r33, 0, $r32, 0, $i8);

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        return "Whirlpool";
    }

    public int getDigestSize()
    {
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        return 64;
    }

    public int doFinal(byte[], int)
    {
        byte[] r2;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        long $l4;
        long[] $r1;
        int $i0, i1, $i2, $i3, i5;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void finish()>();

        i5 = 0;

     label1:
        if i5 >= 8 goto label2;

        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l4 = $r1[i5];

        $i2 = i5 * 8;

        $i3 = i1 + $i2;

        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void convertLongToByteArray(long,byte[],int)>($l4, r2, $i3);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void reset()>();

        $i0 = virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int getDigestSize()>();

        return $i0;
    }

    public void reset()
    {
        byte[] $r2;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        long[] $r3, $r4, $r5, $r6, $r7;
        short[] $r1;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(short[],short)>($r1, 0);

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r2, 0);

        $r3 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        $r4 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(long[],long)>($r4, 0L);

        $r5 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(long[],long)>($r5, 0L);

        $r6 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(long[],long)>($r6, 0L);

        $r7 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(long[],long)>($r7, 0L);

        return;
    }

    private void processFilledBuffer(byte[], int)
    {
        byte[] $r2, $r3, r5;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        long $l2;
        long[] $r1, $r4;
        int $i0, $i1, i3, i4;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r5 := @parameter0: byte[];

        i3 := @parameter1: int;

        i4 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i0 = lengthof $r1;

        if i4 >= $i0 goto label2;

        $r4 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r3 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = i4 * 8;

        $l2 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long bytesToLongFromBuffer(byte[],int)>($r3, $i1);

        $r4[i4] = $l2;

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void processBlock()>();

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r2, 0);

        return;
    }

    private long bytesToLongFromBuffer(byte[], int)
    {
        byte[] r0;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r1;
        byte $b2, $b6, $b12, $b18, $b24, $b30, $b36, $b42;
        long $l3, $l4, $l7, $l8, $l9, $l10, $l13, $l14, $l15, $l16, $l19, $l20, $l21, $l22, $l25, $l26, $l27, $l28, $l31, $l32, $l33, $l34, $l37, $l38, $l39, $l40, $l43, $l44, $l45, l46;
        int i0, $i1, $i5, $i11, $i17, $i23, $i29, $i35, $i41;

        r1 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 0;

        $b2 = r0[$i1];

        $l3 = (long) $b2;

        $l4 = $l3 & 255L;

        $l10 = $l4 << 56;

        $i5 = i0 + 1;

        $b6 = r0[$i5];

        $l7 = (long) $b6;

        $l8 = $l7 & 255L;

        $l9 = $l8 << 48;

        $l16 = $l10 | $l9;

        $i11 = i0 + 2;

        $b12 = r0[$i11];

        $l13 = (long) $b12;

        $l14 = $l13 & 255L;

        $l15 = $l14 << 40;

        $l22 = $l16 | $l15;

        $i17 = i0 + 3;

        $b18 = r0[$i17];

        $l19 = (long) $b18;

        $l20 = $l19 & 255L;

        $l21 = $l20 << 32;

        $l28 = $l22 | $l21;

        $i23 = i0 + 4;

        $b24 = r0[$i23];

        $l25 = (long) $b24;

        $l26 = $l25 & 255L;

        $l27 = $l26 << 24;

        $l34 = $l28 | $l27;

        $i29 = i0 + 5;

        $b30 = r0[$i29];

        $l31 = (long) $b30;

        $l32 = $l31 & 255L;

        $l33 = $l32 << 16;

        $l40 = $l34 | $l33;

        $i35 = i0 + 6;

        $b36 = r0[$i35];

        $l37 = (long) $b36;

        $l38 = $l37 & 255L;

        $l39 = $l38 << 8;

        $l45 = $l40 | $l39;

        $i41 = i0 + 7;

        $b42 = r0[$i41];

        $l43 = (long) $b42;

        $l44 = $l43 & 255L;

        l46 = $l45 | $l44;

        return l46;
    }

    private void convertLongToByteArray(long, byte[], int)
    {
        byte[] r0;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r1;
        long l1, $l4, $l5;
        byte $b7;
        int i0, $i2, $i3, $i6, $i8, i9;

        r1 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        l1 := @parameter0: long;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        i9 = 0;

     label1:
        if i9 >= 8 goto label2;

        $i8 = i0 + i9;

        $i2 = i9 * 8;

        $i3 = 56 - $i2;

        $l4 = l1 >> $i3;

        $l5 = $l4 & 255L;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        r0[$i8] = $b7;

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    protected void processBlock()
    {
        long $l0, $l1, $l2, $l3, $l4, $l6, $l7, $l8, $l10, $l13, $l14, $l17, $l18, $l19, $l22, $l23, $l26, $l27, $l28, $l31, $l32, $l35, $l36, $l37, $l40, $l41, $l44, $l45, $l46, $l49, $l50, $l53, $l54, $l55, $l58, $l59, $l62, $l63, $l64, $l67, $l68, $l71, $l72, $l73, $l76, $l79, $l80, $l81, $l84, $l85, $l88, $l89, $l90, $l93, $l94, $l97, $l98, $l99, $l102, $l103, $l106, $l107, $l108, $l111, $l112, $l115, $l116, $l117, $l120, $l121, $l124, $l125, $l126, $l129, $l130, $l133, $l134, $l135, $l138, $l139, $l142, $l143, $l144, $l147, $l150, $l151, $l152, $l153, $l154, $l155;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66;
        int $i5, $i9, $i11, $i12, $i15, $i16, $i20, $i21, $i24, $i25, $i29, $i30, $i33, $i34, $i38, $i39, $i42, $i43, $i47, $i48, $i51, $i52, $i56, $i57, $i60, $i61, $i65, $i66, $i69, $i70, $i74, $i75, $i77, $i78, $i82, $i83, $i86, $i87, $i91, $i92, $i95, $i96, $i100, $i101, $i104, $i105, $i109, $i110, $i113, $i114, $i118, $i119, $i122, $i123, $i127, $i128, $i131, $i132, $i136, $i137, $i140, $i141, $i145, $i146, $i148, $i149, i156, i157, i158, i159, i160;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        i156 = 0;

     label01:
        if i156 >= 8 goto label02;

        $r66 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r63 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $l154 = $r63[i156];

        $r65 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r64 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l153 = $r64[i156];

        $r65[i156] = $l153;

        $l155 = $l154 ^ $l153;

        $r66[i156] = $l155;

        i156 = i156 + 1;

        goto label01;

     label02:
        i157 = 1;

     label03:
        if i157 > 10 goto label08;

        i158 = 0;

     label04:
        if i158 >= 8 goto label05;

        $r38 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r38[i158] = 0L;

        $r39 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l89 = $r39[i158];

        $r41 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $r40 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i82 = i158 - 0;

        $i83 = $i82 & 7;

        $l84 = $r40[$i83];

        $l85 = $l84 >>> 56;

        $i86 = (int) $l85;

        $i87 = $i86 & 255;

        $l88 = $r41[$i87];

        $l90 = $l89 ^ $l88;

        $r39[i158] = $l90;

        $r42 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l98 = $r42[i158];

        $r44 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $r43 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i91 = i158 - 1;

        $i92 = $i91 & 7;

        $l93 = $r43[$i92];

        $l94 = $l93 >>> 48;

        $i95 = (int) $l94;

        $i96 = $i95 & 255;

        $l97 = $r44[$i96];

        $l99 = $l98 ^ $l97;

        $r42[i158] = $l99;

        $r45 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l107 = $r45[i158];

        $r47 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $r46 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i100 = i158 - 2;

        $i101 = $i100 & 7;

        $l102 = $r46[$i101];

        $l103 = $l102 >>> 40;

        $i104 = (int) $l103;

        $i105 = $i104 & 255;

        $l106 = $r47[$i105];

        $l108 = $l107 ^ $l106;

        $r45[i158] = $l108;

        $r48 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l116 = $r48[i158];

        $r50 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $r49 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i109 = i158 - 3;

        $i110 = $i109 & 7;

        $l111 = $r49[$i110];

        $l112 = $l111 >>> 32;

        $i113 = (int) $l112;

        $i114 = $i113 & 255;

        $l115 = $r50[$i114];

        $l117 = $l116 ^ $l115;

        $r48[i158] = $l117;

        $r51 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l125 = $r51[i158];

        $r53 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $r52 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i118 = i158 - 4;

        $i119 = $i118 & 7;

        $l120 = $r52[$i119];

        $l121 = $l120 >>> 24;

        $i122 = (int) $l121;

        $i123 = $i122 & 255;

        $l124 = $r53[$i123];

        $l126 = $l125 ^ $l124;

        $r51[i158] = $l126;

        $r54 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l134 = $r54[i158];

        $r56 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $r55 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i127 = i158 - 5;

        $i128 = $i127 & 7;

        $l129 = $r55[$i128];

        $l130 = $l129 >>> 16;

        $i131 = (int) $l130;

        $i132 = $i131 & 255;

        $l133 = $r56[$i132];

        $l135 = $l134 ^ $l133;

        $r54[i158] = $l135;

        $r57 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l143 = $r57[i158];

        $r59 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $r58 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i136 = i158 - 6;

        $i137 = $i136 & 7;

        $l138 = $r58[$i137];

        $l139 = $l138 >>> 8;

        $i140 = (int) $l139;

        $i141 = $i140 & 255;

        $l142 = $r59[$i141];

        $l144 = $l143 ^ $l142;

        $r57[i158] = $l144;

        $r60 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l151 = $r60[i158];

        $r62 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $r61 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i145 = i158 - 7;

        $i146 = $i145 & 7;

        $l147 = $r61[$i146];

        $i148 = (int) $l147;

        $i149 = $i148 & 255;

        $l150 = $r62[$i149];

        $l152 = $l151 ^ $l150;

        $r60[i158] = $l152;

        i158 = i158 + 1;

        goto label04;

     label05:
        $r6 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r5 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r4 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i5 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i5);

        $r7 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $l7 = $r7[0];

        $r8 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $l6 = $r8[i157];

        $l8 = $l7 ^ $l6;

        $r7[0] = $l8;

        i159 = 0;

     label06:
        if i159 >= 8 goto label07;

        $r13 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r12 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $l10 = $r12[i159];

        $r13[i159] = $l10;

        $r14 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l18 = $r14[i159];

        $r16 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $r15 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i11 = i159 - 0;

        $i12 = $i11 & 7;

        $l13 = $r15[$i12];

        $l14 = $l13 >>> 56;

        $i15 = (int) $l14;

        $i16 = $i15 & 255;

        $l17 = $r16[$i16];

        $l19 = $l18 ^ $l17;

        $r14[i159] = $l19;

        $r17 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l27 = $r17[i159];

        $r19 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $r18 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i20 = i159 - 1;

        $i21 = $i20 & 7;

        $l22 = $r18[$i21];

        $l23 = $l22 >>> 48;

        $i24 = (int) $l23;

        $i25 = $i24 & 255;

        $l26 = $r19[$i25];

        $l28 = $l27 ^ $l26;

        $r17[i159] = $l28;

        $r20 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l36 = $r20[i159];

        $r22 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $r21 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i29 = i159 - 2;

        $i30 = $i29 & 7;

        $l31 = $r21[$i30];

        $l32 = $l31 >>> 40;

        $i33 = (int) $l32;

        $i34 = $i33 & 255;

        $l35 = $r22[$i34];

        $l37 = $l36 ^ $l35;

        $r20[i159] = $l37;

        $r23 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l45 = $r23[i159];

        $r25 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $r24 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i38 = i159 - 3;

        $i39 = $i38 & 7;

        $l40 = $r24[$i39];

        $l41 = $l40 >>> 32;

        $i42 = (int) $l41;

        $i43 = $i42 & 255;

        $l44 = $r25[$i43];

        $l46 = $l45 ^ $l44;

        $r23[i159] = $l46;

        $r26 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l54 = $r26[i159];

        $r28 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $r27 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i47 = i159 - 4;

        $i48 = $i47 & 7;

        $l49 = $r27[$i48];

        $l50 = $l49 >>> 24;

        $i51 = (int) $l50;

        $i52 = $i51 & 255;

        $l53 = $r28[$i52];

        $l55 = $l54 ^ $l53;

        $r26[i159] = $l55;

        $r29 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l63 = $r29[i159];

        $r31 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $r30 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i56 = i159 - 5;

        $i57 = $i56 & 7;

        $l58 = $r30[$i57];

        $l59 = $l58 >>> 16;

        $i60 = (int) $l59;

        $i61 = $i60 & 255;

        $l62 = $r31[$i61];

        $l64 = $l63 ^ $l62;

        $r29[i159] = $l64;

        $r32 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l72 = $r32[i159];

        $r34 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $r33 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i65 = i159 - 6;

        $i66 = $i65 & 7;

        $l67 = $r33[$i66];

        $l68 = $l67 >>> 8;

        $i69 = (int) $l68;

        $i70 = $i69 & 255;

        $l71 = $r34[$i70];

        $l73 = $l72 ^ $l71;

        $r32[i159] = $l73;

        $r35 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l80 = $r35[i159];

        $r37 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $r36 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i74 = i159 - 7;

        $i75 = $i74 & 7;

        $l76 = $r36[$i75];

        $i77 = (int) $l76;

        $i78 = $i77 & 255;

        $l79 = $r37[$i78];

        $l81 = $l80 ^ $l79;

        $r35[i159] = $l81;

        i159 = i159 + 1;

        goto label06;

     label07:
        $r11 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r10 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r9 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i9 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i9);

        i157 = i157 + 1;

        goto label03;

     label08:
        i160 = 0;

     label09:
        if i160 >= 8 goto label10;

        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l3 = $r1[i160];

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $l1 = $r2[i160];

        $r3 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $l0 = $r3[i160];

        $l2 = $l1 ^ $l0;

        $l4 = $l3 ^ $l2;

        $r1[i160] = $l4;

        i160 = i160 + 1;

        goto label09;

     label10:
        return;
    }

    public void update(byte)
    {
        byte[] $r1, $r2, $r3;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r1[$i1] = b0;

        $i2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $i3 = $i2 + 1;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i3;

        $i5 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i4 = lengthof $r2;

        if $i5 != $i4 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r3, 0);

     label1:
        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void increment()>();

        return;
    }

    private void increment()
    {
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        short $s1, $s2, $s3, $s7;
        int $i0, $i4, i5, $i6, i8, i9, $i10, $i11, $i13;
        short[] $r1, $r2, $r3, $r4;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        i8 = 0;

        $r1 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $i0 = lengthof $r1;

        i9 = $i0 - 1;

     label1:
        if i9 < 0 goto label2;

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $s1 = $r2[i9];

        $s3 = $s1 & 255;

        $r3 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT>;

        $s2 = $r3[i9];

        $i10 = (int) $s3;

        $i11 = (int) $s2;

        $i4 = $i10 + $i11;

        i5 = $i4 + i8;

        i8 = i5 >>> 8;

        $r4 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $i6 = i5 & 255;

        $s7 = (short) $i6;

        $r4[i9] = $s7;

        $i13 = (int) -1;

        i9 = i9 + $i13;

        goto label1;

     label2:
        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        byte $b0;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        int i1, i2, $i4;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        if i2 <= 0 goto label2;

        $b0 = r1[i1];

        virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void update(byte)>($b0);

        i1 = i1 + 1;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        return;
    }

    private void finish()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;
        short $s3, $s11;
        byte $b2, $b4;
        int $i0, $i1, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        $r1 = specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] copyBitLength()>();

        $r2 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i0 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i1;

        $b2 = $r2[$i0];

        $s11 = (short) $b2;

        $s3 = $s11 | 128;

        $b4 = (byte) $s3;

        $r2[$i0] = $b4;

        $i6 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r3 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i5 = lengthof $r3;

        if $i6 != $i5 goto label1;

        $r6 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r6, 0);

     label1:
        $i7 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i7 <= 32 goto label3;

     label2:
        $i9 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i9 == 0 goto label3;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void update(byte)>(0);

        goto label2;

     label3:
        $i10 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i10 > 32 goto label4;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void update(byte)>(0);

        goto label3;

     label4:
        $r4 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i8 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 32, $i8);

        $r5 = r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.bouncycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r5, 0);

        return;
    }

    private byte[] copyBitLength()
    {
        byte[] r0;
        org.bouncycastle.crypto.digests.WhirlpoolDigest r1;
        short $s1, $s2;
        byte $b3;
        int $i0, i4;
        short[] $r2;

        r1 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        r0 = newarray (byte)[32];

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label2;

        $r2 = r1.<org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $s1 = $r2[i4];

        $s2 = $s1 & 255;

        $b3 = (byte) $s2;

        r0[i4] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r0;
    }

    public int getByteLength()
    {
        org.bouncycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.WhirlpoolDigest;

        return 64;
    }

    static void <clinit>()
    {
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int[] $r0;
        short[] $r9, $r10;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int BITCOUNT_ARRAY_SIZE> = 32;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int REDUCTION_POLYNOMIAL> = 285;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int ROUNDS> = 10;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int DIGEST_LENGTH_BYTES> = 64;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int BYTE_LENGTH> = 64;

        $r0 = newarray (int)[256];

        $r0[0] = 24;

        $r0[1] = 35;

        $r0[2] = 198;

        $r0[3] = 232;

        $r0[4] = 135;

        $r0[5] = 184;

        $r0[6] = 1;

        $r0[7] = 79;

        $r0[8] = 54;

        $r0[9] = 166;

        $r0[10] = 210;

        $r0[11] = 245;

        $r0[12] = 121;

        $r0[13] = 111;

        $r0[14] = 145;

        $r0[15] = 82;

        $r0[16] = 96;

        $r0[17] = 188;

        $r0[18] = 155;

        $r0[19] = 142;

        $r0[20] = 163;

        $r0[21] = 12;

        $r0[22] = 123;

        $r0[23] = 53;

        $r0[24] = 29;

        $r0[25] = 224;

        $r0[26] = 215;

        $r0[27] = 194;

        $r0[28] = 46;

        $r0[29] = 75;

        $r0[30] = 254;

        $r0[31] = 87;

        $r0[32] = 21;

        $r0[33] = 119;

        $r0[34] = 55;

        $r0[35] = 229;

        $r0[36] = 159;

        $r0[37] = 240;

        $r0[38] = 74;

        $r0[39] = 218;

        $r0[40] = 88;

        $r0[41] = 201;

        $r0[42] = 41;

        $r0[43] = 10;

        $r0[44] = 177;

        $r0[45] = 160;

        $r0[46] = 107;

        $r0[47] = 133;

        $r0[48] = 189;

        $r0[49] = 93;

        $r0[50] = 16;

        $r0[51] = 244;

        $r0[52] = 203;

        $r0[53] = 62;

        $r0[54] = 5;

        $r0[55] = 103;

        $r0[56] = 228;

        $r0[57] = 39;

        $r0[58] = 65;

        $r0[59] = 139;

        $r0[60] = 167;

        $r0[61] = 125;

        $r0[62] = 149;

        $r0[63] = 216;

        $r0[64] = 251;

        $r0[65] = 238;

        $r0[66] = 124;

        $r0[67] = 102;

        $r0[68] = 221;

        $r0[69] = 23;

        $r0[70] = 71;

        $r0[71] = 158;

        $r0[72] = 202;

        $r0[73] = 45;

        $r0[74] = 191;

        $r0[75] = 7;

        $r0[76] = 173;

        $r0[77] = 90;

        $r0[78] = 131;

        $r0[79] = 51;

        $r0[80] = 99;

        $r0[81] = 2;

        $r0[82] = 170;

        $r0[83] = 113;

        $r0[84] = 200;

        $r0[85] = 25;

        $r0[86] = 73;

        $r0[87] = 217;

        $r0[88] = 242;

        $r0[89] = 227;

        $r0[90] = 91;

        $r0[91] = 136;

        $r0[92] = 154;

        $r0[93] = 38;

        $r0[94] = 50;

        $r0[95] = 176;

        $r0[96] = 233;

        $r0[97] = 15;

        $r0[98] = 213;

        $r0[99] = 128;

        $r0[100] = 190;

        $r0[101] = 205;

        $r0[102] = 52;

        $r0[103] = 72;

        $r0[104] = 255;

        $r0[105] = 122;

        $r0[106] = 144;

        $r0[107] = 95;

        $r0[108] = 32;

        $r0[109] = 104;

        $r0[110] = 26;

        $r0[111] = 174;

        $r0[112] = 180;

        $r0[113] = 84;

        $r0[114] = 147;

        $r0[115] = 34;

        $r0[116] = 100;

        $r0[117] = 241;

        $r0[118] = 115;

        $r0[119] = 18;

        $r0[120] = 64;

        $r0[121] = 8;

        $r0[122] = 195;

        $r0[123] = 236;

        $r0[124] = 219;

        $r0[125] = 161;

        $r0[126] = 141;

        $r0[127] = 61;

        $r0[128] = 151;

        $r0[129] = 0;

        $r0[130] = 207;

        $r0[131] = 43;

        $r0[132] = 118;

        $r0[133] = 130;

        $r0[134] = 214;

        $r0[135] = 27;

        $r0[136] = 181;

        $r0[137] = 175;

        $r0[138] = 106;

        $r0[139] = 80;

        $r0[140] = 69;

        $r0[141] = 243;

        $r0[142] = 48;

        $r0[143] = 239;

        $r0[144] = 63;

        $r0[145] = 85;

        $r0[146] = 162;

        $r0[147] = 234;

        $r0[148] = 101;

        $r0[149] = 186;

        $r0[150] = 47;

        $r0[151] = 192;

        $r0[152] = 222;

        $r0[153] = 28;

        $r0[154] = 253;

        $r0[155] = 77;

        $r0[156] = 146;

        $r0[157] = 117;

        $r0[158] = 6;

        $r0[159] = 138;

        $r0[160] = 178;

        $r0[161] = 230;

        $r0[162] = 14;

        $r0[163] = 31;

        $r0[164] = 98;

        $r0[165] = 212;

        $r0[166] = 168;

        $r0[167] = 150;

        $r0[168] = 249;

        $r0[169] = 197;

        $r0[170] = 37;

        $r0[171] = 89;

        $r0[172] = 132;

        $r0[173] = 114;

        $r0[174] = 57;

        $r0[175] = 76;

        $r0[176] = 94;

        $r0[177] = 120;

        $r0[178] = 56;

        $r0[179] = 140;

        $r0[180] = 209;

        $r0[181] = 165;

        $r0[182] = 226;

        $r0[183] = 97;

        $r0[184] = 179;

        $r0[185] = 33;

        $r0[186] = 156;

        $r0[187] = 30;

        $r0[188] = 67;

        $r0[189] = 199;

        $r0[190] = 252;

        $r0[191] = 4;

        $r0[192] = 81;

        $r0[193] = 153;

        $r0[194] = 109;

        $r0[195] = 13;

        $r0[196] = 250;

        $r0[197] = 223;

        $r0[198] = 126;

        $r0[199] = 36;

        $r0[200] = 59;

        $r0[201] = 171;

        $r0[202] = 206;

        $r0[203] = 17;

        $r0[204] = 143;

        $r0[205] = 78;

        $r0[206] = 183;

        $r0[207] = 235;

        $r0[208] = 60;

        $r0[209] = 129;

        $r0[210] = 148;

        $r0[211] = 247;

        $r0[212] = 185;

        $r0[213] = 19;

        $r0[214] = 44;

        $r0[215] = 211;

        $r0[216] = 231;

        $r0[217] = 110;

        $r0[218] = 196;

        $r0[219] = 3;

        $r0[220] = 86;

        $r0[221] = 68;

        $r0[222] = 127;

        $r0[223] = 169;

        $r0[224] = 42;

        $r0[225] = 187;

        $r0[226] = 193;

        $r0[227] = 83;

        $r0[228] = 220;

        $r0[229] = 11;

        $r0[230] = 157;

        $r0[231] = 108;

        $r0[232] = 49;

        $r0[233] = 116;

        $r0[234] = 246;

        $r0[235] = 70;

        $r0[236] = 172;

        $r0[237] = 137;

        $r0[238] = 20;

        $r0[239] = 225;

        $r0[240] = 22;

        $r0[241] = 58;

        $r0[242] = 105;

        $r0[243] = 9;

        $r0[244] = 112;

        $r0[245] = 182;

        $r0[246] = 208;

        $r0[247] = 237;

        $r0[248] = 204;

        $r0[249] = 66;

        $r0[250] = 152;

        $r0[251] = 164;

        $r0[252] = 40;

        $r0[253] = 92;

        $r0[254] = 248;

        $r0[255] = 134;

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: int[] SBOX> = $r0;

        $r1 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C0> = $r1;

        $r2 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C1> = $r2;

        $r3 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C2> = $r3;

        $r4 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C3> = $r4;

        $r5 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C4> = $r5;

        $r6 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C5> = $r6;

        $r7 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C6> = $r7;

        $r8 = newarray (long)[256];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: long[] C7> = $r8;

        $r9 = newarray (short)[32];

        <org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT> = $r9;

        $r10 = <org.bouncycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT>;

        $r10[31] = 8;

        return;
    }
}
