class org.apache.log4j.chainsaw.MyTableModel extends javax.swing.table.AbstractTableModel
{
    private static final org.apache.log4j.Logger LOG;
    private static final java.util.Comparator MY_COMP;
    private static final java.lang.String[] COL_NAMES;
    private static final org.apache.log4j.chainsaw.EventDetails[] EMPTY_LIST;
    private static final java.text.DateFormat DATE_FORMATTER;
    private final java.lang.Object mLock;
    private final java.util.SortedSet mAllEvents;
    private org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents;
    private final java.util.List mPendingEvents;
    private boolean mPaused;
    private java.lang.String mThreadFilter;
    private java.lang.String mMessageFilter;
    private java.lang.String mNDCFilter;
    private java.lang.String mCategoryFilter;
    private org.apache.log4j.Priority mPriorityFilter;
    static java.lang.Class class$org$apache$log4j$chainsaw$MyTableModel;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Object;

    void <init>()
    {
        org.apache.log4j.chainsaw.MyTableModel r0;
        org.apache.log4j.chainsaw.EventDetails[] $r4;
        org.apache.log4j.chainsaw.MyTableModel$Processor $r8;
        java.util.TreeSet $r2;
        java.util.ArrayList $r5;
        org.apache.log4j.Priority $r6;
        java.lang.Thread $r7;
        java.lang.Object $r1;
        java.util.Comparator $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock> = $r1;

        $r2 = new java.util.TreeSet;

        $r3 = <org.apache.log4j.chainsaw.MyTableModel: java.util.Comparator MY_COMP>;

        specialinvoke $r2.<java.util.TreeSet: void <init>(java.util.Comparator)>($r3);

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet mAllEvents> = $r2;

        $r4 = <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] EMPTY_LIST>;

        r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.List mPendingEvents> = $r5;

        r0.<org.apache.log4j.chainsaw.MyTableModel: boolean mPaused> = 0;

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mThreadFilter> = "";

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mMessageFilter> = "";

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mNDCFilter> = "";

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mCategoryFilter> = "";

        $r6 = <org.apache.log4j.Priority: org.apache.log4j.Priority DEBUG>;

        r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Priority mPriorityFilter> = $r6;

        $r7 = new java.lang.Thread;

        $r8 = new org.apache.log4j.chainsaw.MyTableModel$Processor;

        specialinvoke $r8.<org.apache.log4j.chainsaw.MyTableModel$Processor: void <init>(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.MyTableModel$1)>(r0, null);

        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);

        virtualinvoke $r7.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r7.<java.lang.Thread: void start()>();

        return;
    }

    public int getRowCount()
    {
        java.lang.Throwable $r3;
        org.apache.log4j.chainsaw.MyTableModel r0;
        org.apache.log4j.chainsaw.EventDetails[] $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents>;

        $i0 = lengthof $r2;

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getColumnCount()
    {
        int $i0;
        java.lang.String[] $r0;
        org.apache.log4j.chainsaw.MyTableModel r1;

        r1 := @this: org.apache.log4j.chainsaw.MyTableModel;

        $r0 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.String[] COL_NAMES>;

        $i0 = lengthof $r0;

        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        org.apache.log4j.chainsaw.MyTableModel r2;
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r2 := @this: org.apache.log4j.chainsaw.MyTableModel;

        i0 := @parameter0: int;

        $r0 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.String[] COL_NAMES>;

        $r1 = $r0[i0];

        return $r1;
    }

    public java.lang.Class getColumnClass(int)
    {
        org.apache.log4j.chainsaw.MyTableModel r3;
        int i0;
        java.lang.Class $r0, $r1, $r2, $r4;

        r3 := @this: org.apache.log4j.chainsaw.MyTableModel;

        i0 := @parameter0: int;

        if i0 != 2 goto label2;

        $r1 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Boolean>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        $r4 = $r2;

        <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Boolean> = $r2;

        goto label4;

     label1:
        $r4 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Boolean>;

        goto label4;

     label2:
        $r0 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Object>;

        if $r0 != null goto label3;

        $r4 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Object> = $r4;

        goto label4;

     label3:
        $r4 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Object>;

     label4:
        return $r4;
    }

    public java.lang.Object getValueAt(int, int)
    {
        java.lang.Throwable $r12;
        java.util.Date $r9;
        java.lang.String[] $r7;
        long $l2;
        int i0, i1;
        java.lang.Boolean $r13;
        java.lang.String $r4, $r5, $r6, $r11;
        java.text.DateFormat $r10;
        org.apache.log4j.chainsaw.MyTableModel r0;
        org.apache.log4j.chainsaw.EventDetails[] $r2;
        org.apache.log4j.Priority $r8;
        java.lang.Object $r1;
        org.apache.log4j.chainsaw.EventDetails r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label01:
        $r2 = r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents>;

        r3 = $r2[i0];

        if i1 != 0 goto label03;

        $r10 = <org.apache.log4j.chainsaw.MyTableModel: java.text.DateFormat DATE_FORMATTER>;

        $r9 = new java.util.Date;

        $l2 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: long getTimeStamp()>();

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l2);

        $r11 = virtualinvoke $r10.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r9);

        exitmonitor $r1;

     label02:
        return $r11;

     label03:
        if i1 != 1 goto label05;

        $r8 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: org.apache.log4j.Priority getPriority()>();

        exitmonitor $r1;

     label04:
        return $r8;

     label05:
        if i1 != 2 goto label09;

        $r7 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: java.lang.String[] getThrowableStrRep()>();

        if $r7 != null goto label06;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label07;

     label06:
        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label07:
        exitmonitor $r1;

     label08:
        return $r13;

     label09:
        if i1 != 3 goto label11;

        $r6 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getCategoryName()>();

        exitmonitor $r1;

     label10:
        return $r6;

     label11:
        if i1 != 4 goto label13;

        $r5 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getNDC()>();

        exitmonitor $r1;

     label12:
        return $r5;

     label13:
        $r4 = virtualinvoke r3.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getMessage()>();

        exitmonitor $r1;

     label14:
        return $r4;

     label15:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label16:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void setPriorityFilter(org.apache.log4j.Priority)
    {
        java.lang.Throwable $r3;
        org.apache.log4j.Priority r2;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: org.apache.log4j.Priority;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Priority mPriorityFilter> = r2;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setThreadFilter(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mThreadFilter> = $r3;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setMessageFilter(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mMessageFilter> = $r3;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setNDCFilter(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mNDCFilter> = $r3;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCategoryFilter(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mCategoryFilter> = $r3;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addEvent(org.apache.log4j.chainsaw.EventDetails)
    {
        java.lang.Throwable $r4;
        java.util.List $r3;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        org.apache.log4j.chainsaw.EventDetails r2;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter0: org.apache.log4j.chainsaw.EventDetails;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.List mPendingEvents>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r5;
        java.util.List $r4;
        java.util.SortedSet $r2;
        org.apache.log4j.chainsaw.MyTableModel r0;
        org.apache.log4j.chainsaw.EventDetails[] $r3;
        java.lang.Object $r1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet mAllEvents>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = newarray (org.apache.log4j.chainsaw.EventDetails)[0];

        r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents> = $r3;

        $r4 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.List mPendingEvents>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        virtualinvoke r0.<javax.swing.table.AbstractTableModel: void fireTableDataChanged()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void toggle()
    {
        java.lang.Throwable $r2;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<org.apache.log4j.chainsaw.MyTableModel: boolean mPaused>;

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<org.apache.log4j.chainsaw.MyTableModel: boolean mPaused> = $z1;

        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isPaused()
    {
        java.lang.Throwable $r2;
        org.apache.log4j.chainsaw.MyTableModel r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<org.apache.log4j.chainsaw.MyTableModel: boolean mPaused>;

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.log4j.chainsaw.EventDetails getEventDetails(int)
    {
        java.lang.Throwable $r4;
        org.apache.log4j.chainsaw.MyTableModel r0;
        int i0;
        org.apache.log4j.chainsaw.EventDetails[] $r2;
        java.lang.Object $r1;
        org.apache.log4j.chainsaw.EventDetails $r3;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents>;

        $r3 = $r2[i0];

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void updateFilteredEvents(boolean)
    {
        java.util.SortedSet $r2, $r3;
        org.apache.log4j.Logger $r11, $r15;
        boolean $z0, z1, $z2;
        org.apache.log4j.chainsaw.MyTableModel r1;
        org.apache.log4j.chainsaw.EventDetails[] $r5, $r6, $r7, $r9, $r10;
        org.apache.log4j.chainsaw.EventDetails r13, $r14;
        java.lang.Object[] $r8;
        long $l0, $l5, $l6;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r16, $r17, $r18, $r19, $r20;
        int $i1, $i2, $i3, $i4;
        java.lang.String $r21;
        java.util.Iterator $r4;
        java.lang.Object $r12;

        r1 := @this: org.apache.log4j.chainsaw.MyTableModel;

        z1 := @parameter0: boolean;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet mAllEvents>;

        $i1 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = r1.<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet mAllEvents>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.log4j.chainsaw.EventDetails) $r12;

        $z2 = specialinvoke r1.<org.apache.log4j.chainsaw.MyTableModel: boolean matchFilter(org.apache.log4j.chainsaw.EventDetails)>(r13);

        if $z2 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r13);

     label2:
        goto label1;

     label3:
        $r5 = r1.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents>;

        $i2 = lengthof $r5;

        if $i2 != 0 goto label4;

        $r14 = null;

        goto label5;

     label4:
        $r6 = r1.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents>;

        $r14 = $r6[0];

     label5:
        $r7 = <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] EMPTY_LIST>;

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (org.apache.log4j.chainsaw.EventDetails[]) $r8;

        $r10 = (org.apache.log4j.chainsaw.EventDetails[]) $r9;

        r1.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] mFilteredEvents> = $r10;

        if z1 == 0 goto label8;

        if $r14 == null goto label8;

        $i3 = interfaceinvoke $r0.<java.util.List: int indexOf(java.lang.Object)>($r14);

        if $i3 >= 1 goto label6;

        $r11 = <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Logger LOG>;

        virtualinvoke $r11.<org.apache.log4j.Category: void warn(java.lang.Object)>("In strange state");

        virtualinvoke r1.<javax.swing.table.AbstractTableModel: void fireTableDataChanged()>();

        goto label7;

     label6:
        $i4 = $i3 - 1;

        virtualinvoke r1.<javax.swing.table.AbstractTableModel: void fireTableRowsInserted(int,int)>(0, $i4);

     label7:
        goto label9;

     label8:
        virtualinvoke r1.<javax.swing.table.AbstractTableModel: void fireTableDataChanged()>();

     label9:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Logger LOG>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Total time [ms]: ");

        $l6 = $l5 - $l0;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in update, size: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.log4j.Category: void debug(java.lang.Object)>($r21);

        return;
    }

    private boolean matchFilter(org.apache.log4j.chainsaw.EventDetails)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        org.apache.log4j.chainsaw.MyTableModel r2;
        org.apache.log4j.Priority $r1, $r3;
        org.apache.log4j.chainsaw.EventDetails r0;

        r2 := @this: org.apache.log4j.chainsaw.MyTableModel;

        r0 := @parameter0: org.apache.log4j.chainsaw.EventDetails;

        $r1 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: org.apache.log4j.Priority getPriority()>();

        $r3 = r2.<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Priority mPriorityFilter>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Priority: boolean isGreaterOrEqual(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label7;

        $r4 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getThreadName()>();

        $r5 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mThreadFilter>;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>($r5);

        if $i0 < 0 goto label7;

        $r6 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getCategoryName()>();

        $r7 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mCategoryFilter>;

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>($r7);

        if $i1 < 0 goto label7;

        $r8 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mNDCFilter>;

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i2 == 0 goto label1;

        $r12 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getNDC()>();

        if $r12 == null goto label7;

        $r13 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getNDC()>();

        $r14 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mNDCFilter>;

        $i5 = virtualinvoke $r13.<java.lang.String: int indexOf(java.lang.String)>($r14);

        if $i5 < 0 goto label7;

     label1:
        $r9 = virtualinvoke r0.<org.apache.log4j.chainsaw.EventDetails: java.lang.String getMessage()>();

        if $r9 != null goto label4;

        $r11 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mMessageFilter>;

        $i4 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i4 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r10 = r2.<org.apache.log4j.chainsaw.MyTableModel: java.lang.String mMessageFilter>;

        $i3 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>($r10);

        if $i3 < 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

     label7:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel)
    {
        java.lang.Object $r1;
        org.apache.log4j.chainsaw.MyTableModel r0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$100(org.apache.log4j.chainsaw.MyTableModel)
    {
        org.apache.log4j.chainsaw.MyTableModel r0;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        $z0 = r0.<org.apache.log4j.chainsaw.MyTableModel: boolean mPaused>;

        return $z0;
    }

    static java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)
    {
        java.util.List $r1;
        org.apache.log4j.chainsaw.MyTableModel r0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.List mPendingEvents>;

        return $r1;
    }

    static java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)
    {
        java.util.SortedSet $r1;
        org.apache.log4j.chainsaw.MyTableModel r0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet mAllEvents>;

        return $r1;
    }

    static boolean access$400(org.apache.log4j.chainsaw.MyTableModel, org.apache.log4j.chainsaw.EventDetails)
    {
        org.apache.log4j.chainsaw.EventDetails r1;
        org.apache.log4j.chainsaw.MyTableModel r0;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        r1 := @parameter1: org.apache.log4j.chainsaw.EventDetails;

        $z0 = specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: boolean matchFilter(org.apache.log4j.chainsaw.EventDetails)>(r1);

        return $z0;
    }

    static void access$500(org.apache.log4j.chainsaw.MyTableModel, boolean)
    {
        org.apache.log4j.chainsaw.MyTableModel r0;
        boolean z0;

        r0 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)>(z0);

        return;
    }

    static void <clinit>()
    {
        org.apache.log4j.Logger $r1;
        org.apache.log4j.chainsaw.MyTableModel$1 $r2;
        org.apache.log4j.chainsaw.EventDetails[] $r4;
        java.lang.Class $r0, $r6;
        java.lang.String[] $r3;
        java.text.DateFormat $r5;

        $r0 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$org$apache$log4j$chainsaw$MyTableModel>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.MyTableModel");

        <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$org$apache$log4j$chainsaw$MyTableModel> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$org$apache$log4j$chainsaw$MyTableModel>;

     label2:
        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r6);

        <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.Logger LOG> = $r1;

        $r2 = new org.apache.log4j.chainsaw.MyTableModel$1;

        specialinvoke $r2.<org.apache.log4j.chainsaw.MyTableModel$1: void <init>()>();

        <org.apache.log4j.chainsaw.MyTableModel: java.util.Comparator MY_COMP> = $r2;

        $r3 = newarray (java.lang.String)[6];

        $r3[0] = "Time";

        $r3[1] = "Priority";

        $r3[2] = "Trace";

        $r3[3] = "Category";

        $r3[4] = "NDC";

        $r3[5] = "Message";

        <org.apache.log4j.chainsaw.MyTableModel: java.lang.String[] COL_NAMES> = $r3;

        $r4 = newarray (org.apache.log4j.chainsaw.EventDetails)[0];

        <org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] EMPTY_LIST> = $r4;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 2);

        <org.apache.log4j.chainsaw.MyTableModel: java.text.DateFormat DATE_FORMATTER> = $r5;

        return;
    }
}
