public abstract class org.apache.lucene.index.MergePolicy extends java.lang.Object implements java.io.Closeable, java.lang.Cloneable
{
    protected org.apache.lucene.util.SetOnce writer;

    public org.apache.lucene.index.MergePolicy clone()
    {
        org.apache.lucene.util.SetOnce $r3;
        org.apache.lucene.index.MergePolicy r0, r2;
        java.lang.Object $r1;
        java.lang.RuntimeException $r5;
        java.lang.CloneNotSupportedException $r4;

        r0 := @this: org.apache.lucene.index.MergePolicy;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.lucene.index.MergePolicy) $r1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r3 = new org.apache.lucene.util.SetOnce;

        specialinvoke $r3.<org.apache.lucene.util.SetOnce: void <init>()>();

        r2.<org.apache.lucene.index.MergePolicy: org.apache.lucene.util.SetOnce writer> = $r3;

        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void <init>()
    {
        org.apache.lucene.util.SetOnce $r1;
        org.apache.lucene.index.MergePolicy r0;

        r0 := @this: org.apache.lucene.index.MergePolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.util.SetOnce;

        specialinvoke $r1.<org.apache.lucene.util.SetOnce: void <init>()>();

        r0.<org.apache.lucene.index.MergePolicy: org.apache.lucene.util.SetOnce writer> = $r1;

        return;
    }

    public void setIndexWriter(org.apache.lucene.index.IndexWriter)
    {
        org.apache.lucene.index.IndexWriter r1;
        org.apache.lucene.util.SetOnce $r2;
        org.apache.lucene.index.MergePolicy r0;

        r0 := @this: org.apache.lucene.index.MergePolicy;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter;

        $r2 = r0.<org.apache.lucene.index.MergePolicy: org.apache.lucene.util.SetOnce writer>;

        virtualinvoke $r2.<org.apache.lucene.util.SetOnce: void set(java.lang.Object)>(r1);

        return;
    }

    public abstract org.apache.lucene.index.MergePolicy$MergeSpecification findMerges(org.apache.lucene.index.MergePolicy$MergeTrigger, org.apache.lucene.index.SegmentInfos) throws java.io.IOException;

    public abstract org.apache.lucene.index.MergePolicy$MergeSpecification findForcedMerges(org.apache.lucene.index.SegmentInfos, int, java.util.Map) throws java.io.IOException;

    public abstract org.apache.lucene.index.MergePolicy$MergeSpecification findForcedDeletesMerges(org.apache.lucene.index.SegmentInfos) throws java.io.IOException;

    public abstract void close();

    public abstract boolean useCompoundFile(org.apache.lucene.index.SegmentInfos, org.apache.lucene.index.SegmentInfoPerCommit) throws java.io.IOException;

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.index.MergePolicy r0, $r1;

        r0 := @this: org.apache.lucene.index.MergePolicy;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.MergePolicy: org.apache.lucene.index.MergePolicy clone()>();

        return $r1;
    }
}
