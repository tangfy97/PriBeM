public abstract class javax.xml.bind.helpers.AbstractUnmarshallerImpl extends java.lang.Object implements javax.xml.bind.Unmarshaller
{
    private javax.xml.bind.ValidationEventHandler eventHandler;
    protected boolean validating;
    private org.xml.sax.XMLReader reader;

    public void <init>()
    {
        javax.xml.bind.helpers.DefaultValidationEventHandler $r1;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.xml.bind.helpers.DefaultValidationEventHandler;

        specialinvoke $r1.<javax.xml.bind.helpers.DefaultValidationEventHandler: void <init>()>();

        r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = $r1;

        r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: boolean validating> = 0;

        r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader reader> = null;

        return;
    }

    protected org.xml.sax.XMLReader getXMLReader() throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;
        javax.xml.parsers.SAXParserFactory $r3;
        javax.xml.bind.JAXBException $r7, $r9;
        org.xml.sax.XMLReader $r1, $r2, $r5;
        javax.xml.parsers.ParserConfigurationException $r8;
        org.xml.sax.SAXException $r6;
        javax.xml.parsers.SAXParser $r4;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader reader>;

        if $r1 != null goto label5;

     label1:
        $r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader reader> = $r5;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new javax.xml.bind.JAXBException;

        specialinvoke $r9.<javax.xml.bind.JAXBException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r6 := @caughtexception;

        $r7 = new javax.xml.bind.JAXBException;

        specialinvoke $r7.<javax.xml.bind.JAXBException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        $r2 = r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader reader>;

        return $r2;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
    }

    public java.lang.Object unmarshal(javax.xml.transform.Source) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.dom.DOMSource $r3;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r2;
        javax.xml.transform.stream.StreamSource $r6;
        javax.xml.transform.Source r0;
        org.w3c.dom.Node $r4;
        java.lang.String $r12;
        boolean $z0, $z1, $z2;
        org.xml.sax.InputSource $r7;
        java.lang.IllegalArgumentException $r1, $r11;
        javax.xml.transform.sax.SAXSource $r9;
        java.lang.Object $r5, $r8, $r10;

        r2 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: javax.xml.transform.Source;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "source");

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        $z0 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label2;

        $r9 = (javax.xml.transform.sax.SAXSource) r0;

        $r10 = specialinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(javax.xml.transform.sax.SAXSource)>($r9);

        return $r10;

     label2:
        $z1 = r0 instanceof javax.xml.transform.stream.StreamSource;

        if $z1 == 0 goto label3;

        $r6 = (javax.xml.transform.stream.StreamSource) r0;

        $r7 = staticinvoke <javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.InputSource streamSourceToInputSource(javax.xml.transform.stream.StreamSource)>($r6);

        $r8 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.InputSource)>($r7);

        return $r8;

     label3:
        $z2 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z2 == 0 goto label4;

        $r3 = (javax.xml.transform.dom.DOMSource) r0;

        $r4 = virtualinvoke $r3.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        $r5 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.w3c.dom.Node)>($r4);

        return $r5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    private java.lang.Object unmarshal(javax.xml.transform.sax.SAXSource) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.XMLReader $r1, r5;
        org.xml.sax.InputSource $r3;
        javax.xml.transform.sax.SAXSource r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r2;
        java.lang.Object $r4;

        r2 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: javax.xml.transform.sax.SAXSource;

        $r1 = virtualinvoke r0.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        r5 = $r1;

        if $r1 != null goto label1;

        r5 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

     label1:
        $r3 = virtualinvoke r0.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        $r4 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.XMLReader,org.xml.sax.InputSource)>(r5, $r3);

        return $r4;
    }

    protected abstract java.lang.Object unmarshal(org.xml.sax.XMLReader, org.xml.sax.InputSource) throws javax.xml.bind.JAXBException;

    public final java.lang.Object unmarshal(org.xml.sax.InputSource) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.InputSource r0;
        org.xml.sax.XMLReader $r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Object $r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: org.xml.sax.InputSource;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "source");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: org.xml.sax.XMLReader getXMLReader()>();

        $r3 = virtualinvoke r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.XMLReader,org.xml.sax.InputSource)>($r2, r0);

        return $r3;
    }

    private java.lang.Object unmarshal(java.lang.String) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.InputSource $r1;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;
        java.lang.Object $r3;
        java.lang.String r2;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public final java.lang.Object unmarshal(java.net.URL) throws javax.xml.bind.JAXBException
    {
        java.net.URL r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Object $r3;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.net.URL;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "url");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<java.net.URL: java.lang.String toExternalForm()>();

        $r3 = specialinvoke r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(java.lang.String)>($r2);

        return $r3;
    }

    public final java.lang.Object unmarshal(java.io.File) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r2;
        java.net.URL $r20;
        int $i2;
        java.lang.String $r1, $r10, $r13, r14;
        boolean $z0, $z1, $z2;
        java.net.MalformedURLException $r11;
        char $c0, $c1;
        java.lang.IllegalArgumentException $r17, $r21;
        java.io.File r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r18, $r19;
        java.lang.Object $r16;

        r2 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.io.File;

        if r0 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        $r10 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "file");

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r17;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        r14 = $r1;

        $c0 = <java.io.File: char separatorChar>;

        $i2 = (int) $c0;

        if $i2 == 47 goto label2;

        $c1 = <java.io.File: char separatorChar>;

        r14 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label2:
        $z0 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label3;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $z1 = virtualinvoke r14.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label4;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r20 = new java.net.URL;

        specialinvoke $r20.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", r14);

        $r16 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(java.net.URL)>($r20);

     label5:
        return $r16;

     label6:
        $r11 := @caughtexception;

        $r21 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r11.<java.net.MalformedURLException: java.lang.String getMessage()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r21;

        catch java.net.MalformedURLException from label1 to label5 with label6;
    }

    public final java.lang.Object unmarshal(java.io.InputStream) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.InputSource $r1;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r2;
        java.lang.Object $r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;
        java.io.InputStream r0;

        r2 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "is");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r0);

        $r3 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public final java.lang.Object unmarshal(java.io.Reader) throws javax.xml.bind.JAXBException
    {
        org.xml.sax.InputSource $r1;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r2;
        java.lang.Object $r3;
        java.io.Reader r0;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;

        r2 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.io.Reader;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "reader");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r0);

        $r3 = virtualinvoke r2.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: java.lang.Object unmarshal(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    private static org.xml.sax.InputSource streamSourceToInputSource(javax.xml.transform.stream.StreamSource)
    {
        org.xml.sax.InputSource $r0;
        javax.xml.transform.stream.StreamSource r1;
        java.lang.String $r2;
        java.io.Reader $r4;
        java.io.InputStream $r3;

        r1 := @parameter0: javax.xml.transform.stream.StreamSource;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>()>();

        $r2 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r3);

        $r4 = virtualinvoke r1.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        virtualinvoke $r0.<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>($r4);

        return $r0;
    }

    public boolean isValidating() throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;
        boolean $z0;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $z0 = r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: boolean validating>;

        return $z0;
    }

    public void setEventHandler(javax.xml.bind.ValidationEventHandler) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.ValidationEventHandler r0;
        javax.xml.bind.helpers.DefaultValidationEventHandler $r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: javax.xml.bind.ValidationEventHandler;

        if r0 != null goto label1;

        $r2 = new javax.xml.bind.helpers.DefaultValidationEventHandler;

        specialinvoke $r2.<javax.xml.bind.helpers.DefaultValidationEventHandler: void <init>()>();

        r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = $r2;

        goto label2;

     label1:
        r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = r0;

     label2:
        return;
    }

    public void setValidating(boolean) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;
        boolean z0;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        z0 := @parameter0: boolean;

        r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: boolean validating> = z0;

        return;
    }

    public javax.xml.bind.ValidationEventHandler getEventHandler() throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.ValidationEventHandler $r1;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r0;

        r0 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler>;

        return $r1;
    }

    protected javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)
    {
        javax.xml.bind.UnmarshalException $r2, $r3, $r5;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r6;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r1;
        org.xml.sax.SAXException r0;
        boolean $z0, $z1;

        r6 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: org.xml.sax.SAXException;

        $r1 = virtualinvoke r0.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        $z0 = $r1 instanceof javax.xml.bind.UnmarshalException;

        if $z0 == 0 goto label1;

        $r5 = (javax.xml.bind.UnmarshalException) $r1;

        return $r5;

     label1:
        $z1 = $r1 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label2;

        $r4 = (java.lang.RuntimeException) $r1;

        throw $r4;

     label2:
        if $r1 == null goto label3;

        $r3 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r3.<javax.xml.bind.UnmarshalException: void <init>(java.lang.Throwable)>($r1);

        return $r3;

     label3:
        $r2 = new javax.xml.bind.UnmarshalException;

        specialinvoke $r2.<javax.xml.bind.UnmarshalException: void <init>(java.lang.Throwable)>(r0);

        return $r2;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r5;
        javax.xml.bind.PropertyException $r1;
        java.lang.Object r2;
        java.lang.String r0, $r4;
        java.lang.IllegalArgumentException $r3;

        r5 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "name");

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $r1 = new javax.xml.bind.PropertyException;

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String,java.lang.Object)>(r0, r2);

        throw $r1;
    }

    public java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r4;
        javax.xml.bind.PropertyException $r1;
        java.lang.String r0, $r3;
        java.lang.IllegalArgumentException $r2;

        r4 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "name");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r1 = new javax.xml.bind.PropertyException;

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>(r0);

        throw $r1;
    }

    public java.lang.Object unmarshal(javax.xml.stream.XMLEventReader) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.stream.XMLEventReader r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLEventReader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.stream.XMLStreamReader r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.JAXBElement unmarshal(org.w3c.dom.Node, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        org.w3c.dom.Node r2;
        java.lang.Class r3;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Class r3;
        javax.xml.transform.Source r2;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.transform.Source;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLStreamReader, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.stream.XMLStreamReader r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Class r3;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.JAXBElement unmarshal(javax.xml.stream.XMLEventReader, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.stream.XMLEventReader r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Class r3;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.stream.XMLEventReader;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        javax.xml.validation.Schema r2;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.validation.Schema;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.validation.Schema getSchema()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setAdapter(javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Class $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r0 := @parameter0: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r1.<javax.xml.bind.helpers.AbstractUnmarshallerImpl: void setAdapter(java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlAdapter)>($r2, r0);

        return;
    }

    public void setAdapter(java.lang.Class, javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.'annotation'.adapters.XmlAdapter r3;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;
        java.lang.Class r2;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Class r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setAttachmentUnmarshaller(javax.xml.bind.attachment.AttachmentUnmarshaller)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.attachment.AttachmentUnmarshaller r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.bind.attachment.AttachmentUnmarshaller;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.attachment.AttachmentUnmarshaller getAttachmentUnmarshaller()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setListener(javax.xml.bind.Unmarshaller$Listener)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.Unmarshaller$Listener r2;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        r2 := @parameter0: javax.xml.bind.Unmarshaller$Listener;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.Unmarshaller$Listener getListener()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractUnmarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractUnmarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
