public class org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource extends org.apache.lucene.queries.function.ValueSource
{
    protected final java.lang.String indexedField;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSource: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField> = r1;

        return;
    }

    public java.lang.String name()
    {
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        return "sumtotaltermfreq";
    }

    public java.lang.String description()
    {
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        r1 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String name()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r1.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        java.util.Map r0;
        java.lang.Object $r2;
        org.apache.lucene.queries.function.FunctionValues $r3;
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r1;
        org.apache.lucene.index.AtomicReaderContext r4;

        r1 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        r0 := @parameter0: java.util.Map;

        r4 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (org.apache.lucene.queries.function.FunctionValues) $r2;

        return $r3;
    }

    public void createWeight(java.util.Map, org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r10;
        long $l0, l2;
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource$1 $r6;
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r5;
        byte $b1;
        java.util.Map r4;
        java.lang.String $r11;
        boolean $z0;
        org.apache.lucene.index.Terms $r12;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r7;
        org.apache.lucene.index.AtomicReaderContext r8;
        org.apache.lucene.index.AtomicReader $r9;
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.index.IndexReaderContext $r1;

        r5 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        r4 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.lucene.search.IndexSearcher;

        l2 = 0L;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReaderContext getTopReaderContext()>();

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexReaderContext: java.util.List leaves()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.lucene.index.AtomicReaderContext) $r7;

        $r9 = virtualinvoke r8.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        if $r10 != null goto label2;

        goto label1;

     label2:
        $r11 = r5.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField>;

        $r12 = virtualinvoke $r10.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r11);

        if $r12 != null goto label3;

        goto label1;

     label3:
        $l0 = virtualinvoke $r12.<org.apache.lucene.index.Terms: long getSumTotalTermFreq()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label4;

        l2 = -1L;

        goto label5;

     label4:
        l2 = l2 + $l0;

        goto label1;

     label5:
        $r6 = new org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource$1;

        specialinvoke $r6.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource$1: void <init>(org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource,org.apache.lucene.queries.function.ValueSource,long)>(r5, r5, l2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r6);

        return;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.lang.Class $r1;
        java.lang.String $r2;
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource r0, r4;
        java.lang.Class $r1, $r3;
        java.lang.Object r2;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r3 goto label1;

        return 0;

     label1:
        r4 = (org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource) r2;

        $r6 = r0.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField>;

        $r5 = r4.<org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource: java.lang.String indexedField>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }
}
