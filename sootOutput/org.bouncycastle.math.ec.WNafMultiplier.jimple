class org.bouncycastle.math.ec.WNafMultiplier extends java.lang.Object implements org.bouncycastle.math.ec.ECMultiplier
{

    void <init>()
    {
        org.bouncycastle.math.ec.WNafMultiplier r0;

        r0 := @this: org.bouncycastle.math.ec.WNafMultiplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] windowNaf(byte, java.math.BigInteger)
    {
        byte[] r0, r6;
        long $l5, $l11;
        short s4;
        byte b2, $b9, $b10, $b14;
        int $i0, $i1, $i3, $i6, $i7, $i8, $i12, $i13, i15, i16, i17, $i18, $i19, $i20;
        java.math.BigInteger $r1, $r2, $r3, r5;
        boolean $z0, $z1;
        org.bouncycastle.math.ec.WNafMultiplier r4;

        r4 := @this: org.bouncycastle.math.ec.WNafMultiplier;

        b2 := @parameter0: byte;

        r5 := @parameter1: java.math.BigInteger;

        $i0 = virtualinvoke r5.<java.math.BigInteger: int bitLength()>();

        $i1 = $i0 + 1;

        r0 = newarray (byte)[$i1];

        $i18 = (int) b2;

        $i3 = 1 << $i18;

        s4 = (short) $i3;

        $l5 = (long) s4;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        i15 = 0;

        i16 = 0;

     label1:
        $i6 = virtualinvoke r5.<java.math.BigInteger: int signum()>();

        if $i6 <= 0 goto label6;

        $z0 = virtualinvoke r5.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r1);

        $i19 = (int) b2;

        $i7 = $i19 - 1;

        $z1 = virtualinvoke $r2.<java.math.BigInteger: boolean testBit(int)>($i7);

        if $z1 == 0 goto label2;

        $i12 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        $i20 = (int) s4;

        $i13 = $i12 - $i20;

        $b14 = (byte) $i13;

        r0[i15] = $b14;

        goto label3;

     label2:
        $i8 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        $b9 = (byte) $i8;

        r0[i15] = $b9;

     label3:
        $b10 = r0[i15];

        $l11 = (long) $b10;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l11);

        r5 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r3);

        i16 = i15;

        goto label5;

     label4:
        r0[i15] = 0;

     label5:
        r5 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        i15 = i15 + 1;

        goto label1;

     label6:
        i17 = i16 + 1;

        r6 = newarray (byte)[i17];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r6, 0, i17);

        return r6;
    }

    public org.bouncycastle.math.ec.ECPoint multiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.PreCompInfo)
    {
        byte[] $r4;
        byte $b0, $b1, $b2, $b6, b12, b13, b17, b18, b19;
        java.math.BigInteger r2;
        boolean $z0;
        org.bouncycastle.math.ec.ECPoint[] $r12, $r14, r15, r18;
        org.bouncycastle.math.ec.PreCompInfo r0;
        org.bouncycastle.math.ec.WNafMultiplier r3;
        org.bouncycastle.math.ec.WNafPreCompInfo r13, $r20;
        org.bouncycastle.math.ec.ECPoint r5, $r7, $r8, $r9, $r10, $r11, $r16, r17, r19;
        int $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, i14, i15, i16, $i20, $i21, $i22, $i24;
        org.bouncycastle.math.ec.ECCurve $r6;

        r3 := @this: org.bouncycastle.math.ec.WNafMultiplier;

        r5 := @parameter0: org.bouncycastle.math.ec.ECPoint;

        r2 := @parameter1: java.math.BigInteger;

        r0 := @parameter2: org.bouncycastle.math.ec.PreCompInfo;

        if r0 == null goto label01;

        $z0 = r0 instanceof org.bouncycastle.math.ec.WNafPreCompInfo;

        if $z0 == 0 goto label01;

        r13 = (org.bouncycastle.math.ec.WNafPreCompInfo) r0;

        goto label02;

     label01:
        $r20 = new org.bouncycastle.math.ec.WNafPreCompInfo;

        specialinvoke $r20.<org.bouncycastle.math.ec.WNafPreCompInfo: void <init>()>();

        r13 = $r20;

     label02:
        $i11 = virtualinvoke r2.<java.math.BigInteger: int bitLength()>();

        if $i11 >= 13 goto label03;

        b12 = 2;

        b13 = 1;

        b19 = 1;

        b18 = 1;

        b17 = 1;

        goto label09;

     label03:
        if $i11 >= 41 goto label04;

        b12 = 3;

        b13 = 2;

        b19 = 2;

        b18 = 2;

        b17 = 2;

        goto label09;

     label04:
        if $i11 >= 121 goto label05;

        b12 = 4;

        b13 = 4;

        b19 = 4;

        b18 = 4;

        b17 = 4;

        goto label09;

     label05:
        if $i11 >= 337 goto label06;

        b12 = 5;

        b13 = 8;

        b19 = 8;

        b18 = 8;

        b17 = 8;

        goto label09;

     label06:
        if $i11 >= 897 goto label07;

        b12 = 6;

        b13 = 16;

        b19 = 16;

        b18 = 16;

        b17 = 16;

        goto label09;

     label07:
        if $i11 >= 2305 goto label08;

        b12 = 7;

        b13 = 32;

        b19 = 32;

        b18 = 32;

        b17 = 32;

        goto label09;

     label08:
        b12 = 8;

        b13 = 127;

        b19 = 127;

        b18 = 127;

        b17 = 127;

     label09:
        i14 = 1;

        $r14 = virtualinvoke r13.<org.bouncycastle.math.ec.WNafPreCompInfo: org.bouncycastle.math.ec.ECPoint[] getPreComp()>();

        r15 = $r14;

        $r16 = virtualinvoke r13.<org.bouncycastle.math.ec.WNafPreCompInfo: org.bouncycastle.math.ec.ECPoint getTwiceP()>();

        r17 = $r16;

        if $r14 != null goto label10;

        $r12 = newarray (org.bouncycastle.math.ec.ECPoint)[1];

        $r12[0] = r5;

        r15 = $r12;

        goto label11;

     label10:
        i14 = lengthof $r14;

     label11:
        if $r16 != null goto label12;

        r17 = virtualinvoke r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint twice()>();

     label12:
        if i14 >= b19 goto label14;

        r18 = r15;

        r15 = newarray (org.bouncycastle.math.ec.ECPoint)[b18];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r15, 0, i14);

        i15 = i14;

     label13:
        if i15 >= b17 goto label14;

        $i10 = i15 - 1;

        $r10 = r15[$i10];

        $r11 = virtualinvoke r17.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)>($r10);

        r15[i15] = $r11;

        i15 = i15 + 1;

        goto label13;

     label14:
        $r4 = virtualinvoke r3.<org.bouncycastle.math.ec.WNafMultiplier: byte[] windowNaf(byte,java.math.BigInteger)>(b12, r2);

        $i9 = lengthof $r4;

        $r6 = virtualinvoke r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECCurve getCurve()>();

        r19 = virtualinvoke $r6.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint getInfinity()>();

        i16 = $i9 - 1;

     label15:
        if i16 < 0 goto label18;

        $r7 = virtualinvoke r19.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint twice()>();

        r19 = $r7;

        $b0 = $r4[i16];

        if $b0 == 0 goto label17;

        $b1 = $r4[i16];

        $i20 = (int) $b1;

        if $i20 <= 0 goto label16;

        $b6 = $r4[i16];

        $i21 = (int) $b6;

        $i7 = $i21 - 1;

        $i8 = $i7 / 2;

        $r9 = r15[$i8];

        r19 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)>($r9);

        goto label17;

     label16:
        $b2 = $r4[i16];

        $i22 = (int) $b2;

        $i3 = neg $i22;

        $i4 = $i3 - 1;

        $i5 = $i4 / 2;

        $r8 = r15[$i5];

        r19 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint subtract(org.bouncycastle.math.ec.ECPoint)>($r8);

     label17:
        $i24 = (int) -1;

        i16 = i16 + $i24;

        goto label15;

     label18:
        virtualinvoke r13.<org.bouncycastle.math.ec.WNafPreCompInfo: void setPreComp(org.bouncycastle.math.ec.ECPoint[])>(r15);

        virtualinvoke r13.<org.bouncycastle.math.ec.WNafPreCompInfo: void setTwiceP(org.bouncycastle.math.ec.ECPoint)>(r17);

        virtualinvoke r5.<org.bouncycastle.math.ec.ECPoint: void setPreCompInfo(org.bouncycastle.math.ec.PreCompInfo)>(r13);

        return r19;
    }
}
