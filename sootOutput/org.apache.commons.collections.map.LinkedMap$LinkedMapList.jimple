class org.apache.commons.collections.map.LinkedMap$LinkedMapList extends java.util.AbstractList
{
    final org.apache.commons.collections.map.LinkedMap parent;

    void <init>(org.apache.commons.collections.map.LinkedMap)
    {
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r1 := @parameter0: org.apache.commons.collections.map.LinkedMap;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: int size()>();

        return $i0;
    }

    public java.lang.Object get(int)
    {
        int i0;
        java.lang.Object $r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections.map.LinkedMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public int indexOf(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r2;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $i0 = virtualinvoke $r2.<org.apache.commons.collections.map.LinkedMap: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r2;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $i0 = virtualinvoke $r2.<org.apache.commons.collections.map.LinkedMap: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collection r3;
        java.util.Set $r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r3 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r3);

        return $z0;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r3;
        java.util.Set $r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray()>();

        return $r3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r3, $r4;
        java.util.Set $r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        r3 := @parameter0: java.lang.Object[];

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3, $r4;
        java.util.Set $r2;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        org.apache.commons.collections.map.LinkedMap $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        $r1 = r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: org.apache.commons.collections.map.LinkedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.LinkedMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableIterator: java.util.Iterator decorate(java.util.Iterator)>($r3);

        return $r4;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;
        java.util.ListIterator $r1, $r2;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        $r1 = specialinvoke r0.<java.util.AbstractList: java.util.ListIterator listIterator()>();

        $r2 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableListIterator: java.util.ListIterator decorate(java.util.ListIterator)>($r1);

        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.ListIterator $r1, $r2;
        int i0;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.util.AbstractList: java.util.ListIterator listIterator(int)>(i0);

        $r2 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableListIterator: java.util.ListIterator decorate(java.util.ListIterator)>($r1);

        return $r2;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1, $r2;
        int i0, i1;
        org.apache.commons.collections.map.LinkedMap$LinkedMapList r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<java.util.AbstractList: java.util.List subList(int,int)>(i0, i1);

        $r2 = staticinvoke <org.apache.commons.collections.list.UnmodifiableList: java.util.List decorate(java.util.List)>($r1);

        return $r2;
    }
}
