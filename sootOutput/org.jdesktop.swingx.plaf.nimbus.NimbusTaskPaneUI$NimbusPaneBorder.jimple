class org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder extends org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder
{
    final org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0;

    void <init>(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)
    {
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder r0;
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI r1;

        r0 := @this: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI;

        r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return;
    }

    protected void paintTitleBackground(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics)
    {
        java.awt.Color $r7, $r8, $r31, $r39;
        float[] $r9;
        org.jdesktop.swingx.JXTaskPane r5;
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder r3;
        java.awt.LinearGradientPaint $r10;
        java.awt.RenderingHints$Key $r14, $r17, $r20, $r23;
        java.awt.Color[] $r6;
        boolean $z0;
        java.awt.Paint $r2;
        java.awt.Graphics r0;
        float $f0, $f1, $f2;
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI $r4, $r11, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r45;
        java.awt.Graphics2D $r1, $r12, $r15, $r18, $r21, $r24, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        java.lang.Object $r13, $r16, $r19, $r22;

        r3 := @this: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder;

        r5 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r0 := @parameter1: java.awt.Graphics;

        $r1 = (java.awt.Graphics2D) r0;

        $r2 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.Paint getPaint()>();

        $r4 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$002(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,int)>($r4, 7);

        $z0 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z0 == 0 goto label1;

        $r39 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: java.awt.Color specialTitleBackground>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r39);

        $i27 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r40 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i28 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$100(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r40);

        $i29 = $i28 * 2;

        $r41 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i30 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$200(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r41);

        $r42 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i31 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$300(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r42);

        virtualinvoke r0.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>(0, 0, $i27, $i29, $i30, $i31);

        $r43 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i32 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$400(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r43);

        $i33 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r44 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i34 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$500(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r44, r5);

        $r45 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i35 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$600(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r45);

        $i36 = $i34 - $i35;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, $i32, $i33, $i36);

        goto label2;

     label1:
        $r6 = newarray (java.awt.Color)[2];

        $r7 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: java.awt.Color titleBackgroundGradientStart>;

        $r6[0] = $r7;

        $r8 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: java.awt.Color titleBackgroundGradientEnd>;

        $r6[1] = $r8;

        $r9 = newarray (float)[2];

        $r9[0] = 0.0F;

        $r9[1] = 1.0F;

        $r10 = new java.awt.LinearGradientPaint;

        $i0 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i1 = $i0 / 2;

        $f0 = (float) $i1;

        $i2 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i3 = $i2 / 2;

        $f1 = (float) $i3;

        $r11 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i4 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$700(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r11, r5);

        $f2 = (float) $i4;

        specialinvoke $r10.<java.awt.LinearGradientPaint: void <init>(float,float,float,float,float[],java.awt.Color[])>($f0, 0.0F, $f1, $f2, $r9, $r6);

        $r12 = (java.awt.Graphics2D) r0;

        virtualinvoke $r12.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

        $r15 = (java.awt.Graphics2D) r0;

        $r14 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_COLOR_RENDERING>;

        $r13 = <java.awt.RenderingHints: java.lang.Object VALUE_COLOR_RENDER_QUALITY>;

        virtualinvoke $r15.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r14, $r13);

        $r18 = (java.awt.Graphics2D) r0;

        $r17 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r16 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r18.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r17, $r16);

        $r21 = (java.awt.Graphics2D) r0;

        $r20 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_RENDERING>;

        $r19 = <java.awt.RenderingHints: java.lang.Object VALUE_RENDER_QUALITY>;

        virtualinvoke $r21.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r20, $r19);

        $r24 = (java.awt.Graphics2D) r0;

        $r23 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r22 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r24.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r23, $r22);

        $i5 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r25 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i6 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$800(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r25, r5);

        $i7 = $i6 / 2;

        $r26 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i8 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$900(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r26);

        $r27 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i9 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1000(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r27);

        virtualinvoke r0.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>(0, 0, $i5, $i7, $i8, $i9);

        $r28 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i10 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1100(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r28);

        $i11 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r29 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i12 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1200(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r29, r5);

        $r30 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i13 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1300(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r30);

        $i14 = $i12 - $i13;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, $i10, $i11, $i14);

     label2:
        $r31 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: java.awt.Color borderColor>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r31);

        $i15 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i16 = $i15 - 1;

        $r32 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i17 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1400(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r32, r5);

        $r33 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i18 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1500(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r33);

        $i19 = $i17 + $i18;

        $r34 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i20 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1600(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r34);

        $r35 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i21 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1700(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI)>($r35);

        virtualinvoke r0.<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>(0, 0, $i16, $i19, $i20, $i21);

        $r36 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i22 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1800(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r36, r5);

        $i23 = $i22 - 1;

        $i24 = virtualinvoke r5.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r37 = r3.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI this$0>;

        $i25 = staticinvoke <org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI: int access$1900(org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI,java.awt.Component)>($r37, r5);

        $i26 = $i25 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i23, $i24, $i26);

        $r38 = (java.awt.Graphics2D) r0;

        virtualinvoke $r38.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r2);

        return;
    }

    protected void paintExpandedControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r6;
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder r4;
        java.awt.Graphics2D $r3, $r9;
        java.awt.Graphics r0;
        java.awt.RenderingHints$Key $r2, $r8;
        int i0, i1, i2, i3;
        java.lang.Object $r1, $r7;
        org.jdesktop.swingx.JXTaskPane r5;

        r4 := @this: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder;

        r5 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r0 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = (java.awt.Graphics2D) r0;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r3.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        $r6 = virtualinvoke r4.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)>(r5);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        virtualinvoke r4.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: void paintChevronControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)>(r5, r0, i0, i1, i2, i3);

        $r9 = (java.awt.Graphics2D) r0;

        $r8 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r7 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_OFF>;

        virtualinvoke $r9.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r8, $r7);

        return;
    }

    protected void paintTitle(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, java.awt.Color, int, int, int, int)
    {
        java.awt.Color $r2, r3;
        int $i0, i1, i2, i3, i4, $i5, $i6;
        org.jdesktop.swingx.JXTaskPane r1;
        boolean $z0;
        java.awt.Font $r5, $r7, $r9;
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder r0;
        javax.swing.JLabel $r4, $r8, $r10, $r11;
        java.awt.Graphics r6;

        r0 := @this: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r6 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Color;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: void configureLabel(org.jdesktop.swingx.JXTaskPane)>(r1);

        $r4 = r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: javax.swing.JLabel label>;

        $r2 = new java.awt.Color;

        $i0 = virtualinvoke r3.<java.awt.Color: int getRGB()>();

        specialinvoke $r2.<java.awt.Color: void <init>(int)>($i0);

        virtualinvoke $r4.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r2);

        $r5 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        if $r5 == null goto label1;

        $r7 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        $z0 = $r7 instanceof javax.swing.plaf.FontUIResource;

        if $z0 != 0 goto label1;

        $r8 = r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: javax.swing.JLabel label>;

        $r9 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        virtualinvoke $r8.<javax.swing.JLabel: void setFont(java.awt.Font)>($r9);

     label1:
        virtualinvoke r6.<java.awt.Graphics: void translate(int,int)>(i1, i2);

        $r10 = r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r10.<javax.swing.JLabel: void setBounds(int,int,int,int)>(0, 0, i3, i4);

        $r11 = r0.<org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r11.<javax.swing.JLabel: void paint(java.awt.Graphics)>(r6);

        $i5 = neg i1;

        $i6 = neg i2;

        virtualinvoke r6.<java.awt.Graphics: void translate(int,int)>($i5, $i6);

        return;
    }

    protected boolean isMouseOverBorder()
    {
        org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder r0;

        r0 := @this: org.jdesktop.swingx.plaf.nimbus.NimbusTaskPaneUI$NimbusPaneBorder;

        return 1;
    }
}
