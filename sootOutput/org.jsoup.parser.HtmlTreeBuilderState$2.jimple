final enum class org.jsoup.parser.HtmlTreeBuilderState$2 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$2 r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag $r6, $r8;
        java.lang.String[] $r5;
        java.lang.String $r4, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.HtmlTreeBuilderState$2 r1;
        org.jsoup.parser.Token$EndTag $r3;
        org.jsoup.parser.HtmlTreeBuilderState $r9;
        org.jsoup.parser.Token$Comment $r10;
        org.jsoup.parser.HtmlTreeBuilder r2;

        r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;

        r0 := @parameter0: org.jsoup.parser.Token;

        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isComment()>();

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r10);

        goto label7;

     label2:
        $z2 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r0);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z3 == 0 goto label4;

        $r6 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r7 = virtualinvoke $r6.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z9 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z9 == 0 goto label4;

        $r8 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r8);

        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$2: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r9);

        goto label7;

     label4:
        $z4 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z4 == 0 goto label5;

        $r3 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r4 = virtualinvoke $r3.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $r5 = newarray (java.lang.String)[4];

        $r5[0] = "head";

        $r5[1] = "body";

        $r5[2] = "html";

        $r5[3] = "br";

        $z7 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z7 == 0 goto label5;

        $z8 = specialinvoke r1.<org.jsoup.parser.HtmlTreeBuilderState$2: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r2);

        return $z8;

     label5:
        $z5 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z5 == 0 goto label6;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r1);

        return 0;

     label6:
        $z6 = specialinvoke r1.<org.jsoup.parser.HtmlTreeBuilderState$2: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r0, r2);

        return $z6;

     label7:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$2 r3;
        org.jsoup.parser.HtmlTreeBuilderState $r1;
        org.jsoup.parser.Token r2;
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean $z0;

        r3 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;

        r2 := @parameter0: org.jsoup.parser.Token;

        r0 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(java.lang.String)>("html");

        $r1 = <org.jsoup.parser.HtmlTreeBuilderState$2: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r1);

        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r2);

        return $z0;
    }
}
