public abstract class org.joda.time.field.BaseDurationField extends org.joda.time.DurationField implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.joda.time.DurationFieldType iType;

    protected void <init>(org.joda.time.DurationFieldType)
    {
        java.lang.IllegalArgumentException $r2;
        org.joda.time.field.BaseDurationField r0;
        org.joda.time.DurationFieldType r1;

        r0 := @this: org.joda.time.field.BaseDurationField;

        r1 := @parameter0: org.joda.time.DurationFieldType;

        specialinvoke r0.<org.joda.time.DurationField: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The type must not be null");

        throw $r2;

     label1:
        r0.<org.joda.time.field.BaseDurationField: org.joda.time.DurationFieldType iType> = r1;

        return;
    }

    public final org.joda.time.DurationFieldType getType()
    {
        org.joda.time.field.BaseDurationField r0;
        org.joda.time.DurationFieldType $r1;

        r0 := @this: org.joda.time.field.BaseDurationField;

        $r1 = r0.<org.joda.time.field.BaseDurationField: org.joda.time.DurationFieldType iType>;

        return $r1;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r2;
        org.joda.time.field.BaseDurationField r0;
        org.joda.time.DurationFieldType $r1;

        r0 := @this: org.joda.time.field.BaseDurationField;

        $r1 = r0.<org.joda.time.field.BaseDurationField: org.joda.time.DurationFieldType iType>;

        $r2 = virtualinvoke $r1.<org.joda.time.DurationFieldType: java.lang.String getName()>();

        return $r2;
    }

    public final boolean isSupported()
    {
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        return 1;
    }

    public int getValue(long)
    {
        int $i2;
        long l0, $l1;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getValueAsLong(long)>(l0);

        $i2 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l1);

        return $i2;
    }

    public long getValueAsLong(long)
    {
        long l0, $l1, $l2;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getUnitMillis()>();

        $l2 = l0 / $l1;

        return $l2;
    }

    public int getValue(long, long)
    {
        int $i3;
        long l0, l1, $l2;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getValueAsLong(long,long)>(l0, l1);

        $i3 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l2);

        return $i3;
    }

    public long getMillis(int)
    {
        int i0;
        long $l1, $l2, $l3;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getUnitMillis()>();

        $l3 = $l1 * $l2;

        return $l3;
    }

    public long getMillis(long)
    {
        long l0, $l1, $l2;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getUnitMillis()>();

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,long)>(l0, $l1);

        return $l2;
    }

    public int getDifference(long, long)
    {
        int $i3;
        long l0, l1, $l2;
        org.joda.time.field.BaseDurationField r0;

        r0 := @this: org.joda.time.field.BaseDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getDifferenceAsLong(long,long)>(l0, l1);

        $i3 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l2);

        return $i3;
    }

    public int compareTo(java.lang.Object)
    {
        org.joda.time.DurationField r1;
        long $l0, $l1;
        byte $b2, $b3;
        int $i4, $i6;
        java.lang.Object r0;
        org.joda.time.field.BaseDurationField r2;

        r2 := @this: org.joda.time.field.BaseDurationField;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.joda.time.DurationField) r0;

        $l0 = virtualinvoke r1.<org.joda.time.DurationField: long getUnitMillis()>();

        $l1 = virtualinvoke r2.<org.joda.time.field.BaseDurationField: long getUnitMillis()>();

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        return 0;

     label1:
        $b3 = $l1 cmp $l0;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label2;

        $i6 = (int) -1;

        return $i6;

     label2:
        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        org.joda.time.field.BaseDurationField r2;

        r2 := @this: org.joda.time.field.BaseDurationField;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DurationField[");

        $r3 = virtualinvoke r2.<org.joda.time.field.BaseDurationField: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.BaseDurationField: long serialVersionUID> = -2554245107589433218L;

        return;
    }
}
