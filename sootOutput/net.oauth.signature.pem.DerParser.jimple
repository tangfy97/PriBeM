class net.oauth.signature.pem.DerParser extends java.lang.Object
{
    public static final int UNIVERSAL;
    public static final int APPLICATION;
    public static final int CONTEXT;
    public static final int PRIVATE;
    public static final int CONSTRUCTED;
    public static final int ANY;
    public static final int BOOLEAN;
    public static final int INTEGER;
    public static final int BIT_STRING;
    public static final int OCTET_STRING;
    public static final int NULL;
    public static final int OBJECT_IDENTIFIER;
    public static final int REAL;
    public static final int ENUMERATED;
    public static final int RELATIVE_OID;
    public static final int SEQUENCE;
    public static final int SET;
    public static final int NUMERIC_STRING;
    public static final int PRINTABLE_STRING;
    public static final int T61_STRING;
    public static final int VIDEOTEX_STRING;
    public static final int IA5_STRING;
    public static final int GRAPHIC_STRING;
    public static final int ISO646_STRING;
    public static final int GENERAL_STRING;
    public static final int UTF8_STRING;
    public static final int UNIVERSAL_STRING;
    public static final int BMP_STRING;
    public static final int UTC_TIME;
    public static final int GENERALIZED_TIME;
    protected java.io.InputStream in;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        net.oauth.signature.pem.DerParser r0;
        java.io.InputStream r1;

        r0 := @this: net.oauth.signature.pem.DerParser;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.oauth.signature.pem.DerParser: java.io.InputStream in> = r1;

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        byte[] r2;
        java.io.ByteArrayInputStream $r1;
        net.oauth.signature.pem.DerParser r0;

        r0 := @this: net.oauth.signature.pem.DerParser;

        r2 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke r0.<net.oauth.signature.pem.DerParser: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public net.oauth.signature.pem.Asn1Object read() throws java.io.IOException
    {
        net.oauth.signature.pem.Asn1Object $r9;
        byte[] r2;
        net.oauth.signature.pem.DerParser r0;
        java.io.IOException $r7, $r8;
        int $i0, $i1, $i2, $i4;
        java.io.InputStream $r1, $r3;

        r0 := @this: net.oauth.signature.pem.DerParser;

        $r1 = r0.<net.oauth.signature.pem.DerParser: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Invalid DER: stream too short, missing tag");

        throw $r7;

     label1:
        $i1 = specialinvoke r0.<net.oauth.signature.pem.DerParser: int getLength()>();

        r2 = newarray (byte)[$i1];

        $r3 = r0.<net.oauth.signature.pem.DerParser: java.io.InputStream in>;

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r2);

        if $i2 >= $i1 goto label2;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Invalid DER: stream too short, missing value");

        throw $r8;

     label2:
        $r9 = new net.oauth.signature.pem.Asn1Object;

        specialinvoke $r9.<net.oauth.signature.pem.Asn1Object: void <init>(int,int,byte[])>($i0, $i1, r2);

        return $r9;
    }

    private int getLength() throws java.io.IOException
    {
        byte[] r8;
        net.oauth.signature.pem.DerParser r0;
        int $i0, $i1, i2, $i3, $i4, $i6, $i8;
        java.math.BigInteger $r17;
        java.lang.String $r7;
        java.io.IOException $r13, $r15, $r16;
        java.lang.StringBuilder $r4, $r5, $r6, $r14;
        java.io.InputStream $r1, $r9;

        r0 := @this: net.oauth.signature.pem.DerParser;

        $r1 = r0.<net.oauth.signature.pem.DerParser: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Invalid DER: length missing");

        throw $r13;

     label1:
        $i8 = (int) -128;

        $i1 = $i0 & $i8;

        if $i1 != 0 goto label2;

        return $i0;

     label2:
        i2 = $i0 & 127;

        if $i0 >= 255 goto label3;

        if i2 <= 4 goto label4;

     label3:
        $r15 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DER: length field too big (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r15;

     label4:
        r8 = newarray (byte)[i2];

        $r9 = r0.<net.oauth.signature.pem.DerParser: java.io.InputStream in>;

        $i3 = virtualinvoke $r9.<java.io.InputStream: int read(byte[])>(r8);

        if $i3 >= i2 goto label5;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Invalid DER: length too short");

        throw $r16;

     label5:
        $r17 = new java.math.BigInteger;

        specialinvoke $r17.<java.math.BigInteger: void <init>(int,byte[])>(1, r8);

        $i4 = virtualinvoke $r17.<java.math.BigInteger: int intValue()>();

        return $i4;
    }

    public static void <clinit>()
    {
        <net.oauth.signature.pem.DerParser: int GENERALIZED_TIME> = 24;

        <net.oauth.signature.pem.DerParser: int UTC_TIME> = 23;

        <net.oauth.signature.pem.DerParser: int BMP_STRING> = 30;

        <net.oauth.signature.pem.DerParser: int UNIVERSAL_STRING> = 28;

        <net.oauth.signature.pem.DerParser: int UTF8_STRING> = 12;

        <net.oauth.signature.pem.DerParser: int GENERAL_STRING> = 27;

        <net.oauth.signature.pem.DerParser: int ISO646_STRING> = 26;

        <net.oauth.signature.pem.DerParser: int GRAPHIC_STRING> = 25;

        <net.oauth.signature.pem.DerParser: int IA5_STRING> = 22;

        <net.oauth.signature.pem.DerParser: int VIDEOTEX_STRING> = 21;

        <net.oauth.signature.pem.DerParser: int T61_STRING> = 20;

        <net.oauth.signature.pem.DerParser: int PRINTABLE_STRING> = 19;

        <net.oauth.signature.pem.DerParser: int NUMERIC_STRING> = 18;

        <net.oauth.signature.pem.DerParser: int SET> = 17;

        <net.oauth.signature.pem.DerParser: int SEQUENCE> = 16;

        <net.oauth.signature.pem.DerParser: int RELATIVE_OID> = 13;

        <net.oauth.signature.pem.DerParser: int ENUMERATED> = 10;

        <net.oauth.signature.pem.DerParser: int REAL> = 9;

        <net.oauth.signature.pem.DerParser: int OBJECT_IDENTIFIER> = 6;

        <net.oauth.signature.pem.DerParser: int NULL> = 5;

        <net.oauth.signature.pem.DerParser: int OCTET_STRING> = 4;

        <net.oauth.signature.pem.DerParser: int BIT_STRING> = 3;

        <net.oauth.signature.pem.DerParser: int INTEGER> = 2;

        <net.oauth.signature.pem.DerParser: int BOOLEAN> = 1;

        <net.oauth.signature.pem.DerParser: int ANY> = 0;

        <net.oauth.signature.pem.DerParser: int CONSTRUCTED> = 32;

        <net.oauth.signature.pem.DerParser: int PRIVATE> = 192;

        <net.oauth.signature.pem.DerParser: int CONTEXT> = 128;

        <net.oauth.signature.pem.DerParser: int APPLICATION> = 64;

        <net.oauth.signature.pem.DerParser: int UNIVERSAL> = 0;

        return;
    }
}
