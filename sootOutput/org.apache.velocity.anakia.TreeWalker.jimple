public class org.apache.velocity.anakia.TreeWalker extends java.lang.Object
{

    public void <init>()
    {
        org.apache.velocity.anakia.TreeWalker r0;

        r0 := @this: org.apache.velocity.anakia.TreeWalker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.velocity.anakia.NodeList allElements(org.jdom.Element)
    {
        org.apache.velocity.anakia.TreeWalker r1;
        org.apache.velocity.anakia.NodeList $r3;
        org.jdom.Element r2;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.velocity.anakia.TreeWalker;

        r2 := @parameter0: org.jdom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        specialinvoke r1.<org.apache.velocity.anakia.TreeWalker: void treeWalk(org.jdom.Element,java.util.Collection)>(r2, $r0);

        $r3 = new org.apache.velocity.anakia.NodeList;

        specialinvoke $r3.<org.apache.velocity.anakia.NodeList: void <init>(java.util.List,boolean)>($r0, 0);

        return $r3;
    }

    private final void treeWalk(org.jdom.Element, java.util.Collection)
    {
        org.apache.velocity.anakia.TreeWalker r6;
        java.util.Iterator $r2;
        java.util.Collection r5;
        java.util.List $r1;
        java.lang.Object $r3;
        org.jdom.Element r0, r4;
        boolean $z0;

        r6 := @this: org.apache.velocity.anakia.TreeWalker;

        r0 := @parameter0: org.jdom.Element;

        r5 := @parameter1: java.util.Collection;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdom.Element) $r3;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        specialinvoke r6.<org.apache.velocity.anakia.TreeWalker: void treeWalk(org.jdom.Element,java.util.Collection)>(r4, r5);

        goto label1;

     label2:
        return;
    }
}
