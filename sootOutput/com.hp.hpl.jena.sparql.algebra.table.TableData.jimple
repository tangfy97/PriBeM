public class com.hp.hpl.jena.sparql.algebra.table.TableData extends com.hp.hpl.jena.sparql.algebra.table.TableN
{

    public void <init>(java.util.List, java.util.List)
    {
        com.hp.hpl.jena.sparql.algebra.table.TableData r0;
        java.util.List r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.table.TableData;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.table.TableN: void <init>(java.util.List,java.util.List)>(r1, r2);

        return;
    }

    public void addBinding(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.algebra.table.TableData r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.ARQException $r0;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.table.TableData;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r0 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Can\'t add bindings to an existing data table");

        throw $r0;
    }

    public java.util.List getRows()
    {
        com.hp.hpl.jena.sparql.algebra.table.TableData r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.table.TableData;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.table.TableData: java.util.List rows>;

        return $r1;
    }
}
