public class org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl extends java.lang.Object implements groovy.lang.MetaClassRegistry
{
    private volatile int constantMetaClassCount;
    private org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses;
    private org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses;
    private boolean useAccessible;
    private org.codehaus.groovy.reflection.FastArray instanceMethods;
    private org.codehaus.groovy.reflection.FastArray staticMethods;
    private volatile java.lang.Integer version;
    private org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal locallyKnown;
    public static final int LOAD_DEFAULT;
    public static final int DONT_LOAD_DEFAULT;
    private static groovy.lang.MetaClassRegistry instanceInclude;
    private static groovy.lang.MetaClassRegistry instanceExclude;
    private groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle;
    static java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyMethods;
    static java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyStaticMethods;
    static java.lang.Class class$groovy$lang$ExpandoMetaClass;

    public void <init>()
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void <init>(int,boolean)>(0, 1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void <init>(int,boolean)>(i0, 1);

        return;
    }

    public void <init>(boolean)
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void <init>(int,boolean)>(0, z0);

        return;
    }

    public void <init>(int, boolean)
    {
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle $r7, $r9;
        java.lang.Integer $r5;
        boolean z0, $z1;
        org.codehaus.groovy.vmplugin.VMPlugin $r15;
        java.util.Set $r18;
        org.codehaus.groovy.reflection.CachedClass r23;
        org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap $r1, $r12;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal $r6;
        org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap $r2;
        java.util.HashMap $r13;
        java.util.ArrayList r25;
        int i0, i1, $i2;
        org.codehaus.groovy.reflection.FastArray $r3, $r4;
        groovy.lang.MetaClass $r10;
        java.util.Map$Entry r21;
        java.util.Iterator $r19;
        java.lang.Class[] $r16;
        java.lang.Class $r8, $r11, $r14, $r17, $r26, $r27, $r28, $r29, $r30;
        java.lang.Object $r20, $r22, $r24;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount> = 0;

        $r1 = new org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap;

        specialinvoke $r1.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses> = $r1;

        $r2 = new org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap;

        specialinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses> = $r2;

        $r3 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r3.<org.codehaus.groovy.reflection.FastArray: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray instanceMethods> = $r3;

        $r4 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r4.<org.codehaus.groovy.reflection.FastArray: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray staticMethods> = $r4;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(0);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version> = $r5;

        $r6 = new org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal;

        specialinvoke $r6.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal: void <init>(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl,org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$1)>(r0, null);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal locallyKnown> = $r6;

        $r7 = new groovy.lang.MetaClassRegistry$MetaClassCreationHandle;

        specialinvoke $r7.<groovy.lang.MetaClassRegistry$MetaClassCreationHandle: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle> = $r7;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: boolean useAccessible> = z0;

        if i0 != 0 goto label08;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyMethods>;

        if $r14 != null goto label01;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.DefaultGroovyMethods");

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyMethods> = $r27;

        goto label02;

     label01:
        $r27 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyMethods>;

     label02:
        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void registerMethods(java.lang.Class,boolean,java.util.Map)>($r27, 1, $r13);

        $r15 = staticinvoke <org.codehaus.groovy.vmplugin.VMPluginFactory: org.codehaus.groovy.vmplugin.VMPlugin getPlugin()>();

        $r16 = interfaceinvoke $r15.<org.codehaus.groovy.vmplugin.VMPlugin: java.lang.Class[] getPluginDefaultGroovyMethods()>();

        i1 = 0;

     label03:
        $i2 = lengthof $r16;

        if i1 >= $i2 goto label04;

        $r26 = $r16[i1];

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void registerMethods(java.lang.Class,boolean,java.util.Map)>($r26, 1, $r13);

        i1 = i1 + 1;

        goto label03;

     label04:
        $r17 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyStaticMethods>;

        if $r17 != null goto label05;

        $r28 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.DefaultGroovyStaticMethods");

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyStaticMethods> = $r28;

        goto label06;

     label05:
        $r28 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$org$codehaus$groovy$runtime$DefaultGroovyStaticMethods>;

     label06:
        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void registerMethods(java.lang.Class,boolean,java.util.Map)>($r28, 0, $r13);

        $r18 = virtualinvoke $r13.<java.util.HashMap: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r23 = (org.codehaus.groovy.reflection.CachedClass) $r22;

        $r24 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r25 = (java.util.ArrayList) $r24;

        virtualinvoke r23.<org.codehaus.groovy.reflection.CachedClass: void setNewMopMethods(java.util.ArrayList)>(r25);

        goto label07;

     label08:
        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void installMetaClassCreationHandle()>();

        $r9 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle>;

        $r8 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass>;

        if $r8 != null goto label09;

        $r29 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.ExpandoMetaClass");

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass> = $r29;

        goto label10;

     label09:
        $r29 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass>;

     label10:
        $r10 = virtualinvoke $r9.<groovy.lang.MetaClassRegistry$MetaClassCreationHandle: groovy.lang.MetaClass create(java.lang.Class,groovy.lang.MetaClassRegistry)>($r29, r0);

        interfaceinvoke $r10.<groovy.lang.MetaClass: void initialize()>();

        $r12 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses>;

        $r11 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass>;

        if $r11 != null goto label11;

        $r30 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$(java.lang.String)>("groovy.lang.ExpandoMetaClass");

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass> = $r30;

        goto label12;

     label11:
        $r30 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Class class$groovy$lang$ExpandoMetaClass>;

     label12:
        virtualinvoke $r12.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r10);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount> = 1;

        return;
    }

    private void installMetaClassCreationHandle()
    {
        java.lang.Object[] $r4;
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle $r6, $r14;
        groovy.lang.GroovyRuntimeException $r8;
        java.lang.Class[] $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Exception $r7;
        java.lang.StringBuffer $r9, $r10, $r11;
        java.lang.Class $r0;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r13;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r3;
        java.lang.String $r12;

        r3 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("groovy.runtime.metaclass.CustomMetaClassCreationHandle");

        $r1 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = (groovy.lang.MetaClassRegistry$MetaClassCreationHandle) $r5;

        r3.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle> = $r6;

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        $r14 = new groovy.lang.MetaClassRegistry$MetaClassCreationHandle;

        specialinvoke $r14.<groovy.lang.MetaClassRegistry$MetaClassCreationHandle: void <init>()>();

        r3.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle> = $r14;

        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new groovy.lang.GroovyRuntimeException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate custom Metaclass creation handle: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r7);

        throw $r8;

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void registerMethods(java.lang.Class, boolean, java.util.Map)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r4;
        java.util.ArrayList $r13, r15;
        org.codehaus.groovy.reflection.CachedMethod[] $r2;
        org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod $r11;
        java.util.Map r5;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.reflection.FastArray $r10, $r12;
        boolean $z0, $z1, z2;
        org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod $r8;
        org.codehaus.groovy.reflection.CachedMethod r3;
        org.codehaus.groovy.reflection.CachedClass $r1, $r6, $r14;
        java.lang.Class r0;
        java.lang.Object $r7;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r9;

        r9 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r0 := @parameter0: java.lang.Class;

        z2 := @parameter1: boolean;

        r5 := @parameter2: java.util.Map;

        $r1 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label5;

        r3 = $r2[i3];

        $i1 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedMethod: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 == 0 goto label4;

        $r4 = virtualinvoke r3.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i2 = lengthof $r4;

        if $i2 <= 0 goto label4;

        $r6 = $r4[0];

        $r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r15 = (java.util.ArrayList) $r7;

        if r15 != null goto label2;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>(4);

        r15 = $r13;

        $r14 = $r4[0];

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

     label2:
        if z2 == 0 goto label3;

        $r11 = new org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod;

        specialinvoke $r11.<org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod: void <init>(org.codehaus.groovy.reflection.CachedMethod)>(r3);

        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = r9.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray instanceMethods>;

        virtualinvoke $r12.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>($r11);

        goto label4;

     label3:
        $r8 = new org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod;

        specialinvoke $r8.<org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod: void <init>(org.codehaus.groovy.reflection.CachedMethod)>(r3);

        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r10 = r9.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray staticMethods>;

        virtualinvoke $r10.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>($r8);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private groovy.lang.MetaClass getGlobalMetaClass(java.lang.Class)
    {
        java.lang.Throwable $r12;
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        groovy.lang.MetaClass $r7, r13, r14, r15;
        org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap $r9, $r10;
        java.lang.Class r1;
        java.lang.Object $r3, $r5, $r11;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap $r2, $r4, $r8;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r1 := @parameter0: java.lang.Class;

        r13 = null;

        $i0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount>;

        if $i0 == 0 goto label01;

        $r10 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses>;

        $r11 = virtualinvoke $r10.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (groovy.lang.MetaClass) $r11;

     label01:
        if r13 == null goto label02;

        return r13;

     label02:
        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (groovy.lang.MetaClass) $r3;

        if r14 == null goto label03;

        return r14;

     label03:
        entermonitor r1;

     label04:
        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap: java.lang.Object get(java.lang.Object)>(r1);

        r15 = (groovy.lang.MetaClass) $r5;

        if r15 == null goto label06;

        exitmonitor r1;

     label05:
        return r15;

     label06:
        staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r1);

        $r6 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle>;

        $r7 = virtualinvoke $r6.<groovy.lang.MetaClassRegistry$MetaClassCreationHandle: groovy.lang.MetaClass create(java.lang.Class,groovy.lang.MetaClassRegistry)>(r1, r0);

        interfaceinvoke $r7.<groovy.lang.MetaClass: void initialize()>();

        $z0 = staticinvoke <groovy.lang.GroovySystem: boolean isKeepJavaMetaClasses()>();

        if $z0 == 0 goto label07;

        $i1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount> = $i2;

        $r9 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses>;

        virtualinvoke $r9.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        goto label08;

     label07:
        $r8 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses>;

        virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        exitmonitor r1;

     label11:
        throw $r12;

     label12:
        return $r7;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public groovy.lang.MetaClass getMetaClass(java.lang.Class)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal $r2;
        java.lang.Class r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal locallyKnown>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$MyThreadLocal: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r1);

        return $r3;
    }

    public synchronized void removeMetaClass(java.lang.Class)
    {
        java.lang.Integer $r1, $r2;
        org.codehaus.groovy.reflection.CachedClass $r4;
        org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Class r3;
        java.lang.Object r7;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap $r5;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r3 := @parameter0: java.lang.Class;

        $r1 = new java.lang.Integer;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version> = $r1;

        r7 = null;

        $i2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount>;

        if $i2 == 0 goto label1;

        $r6 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses>;

        r7 = virtualinvoke $r6.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: java.lang.Object remove(java.lang.Object)>(r3);

     label1:
        if r7 != null goto label2;

        $r5 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap weakMetaClasses>;

        virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap: java.lang.Object remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        $i3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount>;

        $i4 = $i3 - 1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount> = $i4;

     label3:
        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedClass: void setStaticMetaClassField(groovy.lang.MetaClass)>(null);

        return;
    }

    public synchronized void setMetaClass(java.lang.Class, groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r4;
        java.lang.Integer $r1, $r2;
        org.codehaus.groovy.reflection.CachedClass $r6;
        org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Class r3;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r3 := @parameter0: java.lang.Class;

        r4 := @parameter1: groovy.lang.MetaClass;

        $r1 = new java.lang.Integer;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version> = $r1;

        $i2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int constantMetaClassCount> = $i3;

        $r5 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap constantMetaClasses>;

        virtualinvoke $r5.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>(r3);

        virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: void setStaticMetaClassField(groovy.lang.MetaClass)>(r4);

        return;
    }

    public boolean useAccessible()
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        $z0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: boolean useAccessible>;

        return $z0;
    }

    public groovy.lang.MetaClassRegistry$MetaClassCreationHandle getMetaClassCreationHandler()
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle>;

        return $r1;
    }

    public void setMetaClassCreationHandle(groovy.lang.MetaClassRegistry$MetaClassCreationHandle)
    {
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle r0;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r0 := @parameter0: groovy.lang.MetaClassRegistry$MetaClassCreationHandle;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set MetaClassCreationHandle to null value!");

        throw $r2;

     label1:
        r1.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry$MetaClassCreationHandle metaClassCreationHandle> = r0;

        return;
    }

    public static groovy.lang.MetaClassRegistry getInstance(int)
    {
        groovy.lang.MetaClassRegistry $r0, $r1, $r3, $r4;
        int i0;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl $r2, $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        $r3 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceInclude>;

        if $r3 != null goto label1;

        $r5 = new org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        specialinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void <init>()>();

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceInclude> = $r5;

     label1:
        $r4 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceInclude>;

        return $r4;

     label2:
        $r0 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceExclude>;

        if $r0 != null goto label3;

        $r2 = new org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        specialinvoke $r2.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: void <init>(int)>(1);

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceExclude> = $r2;

     label3:
        $r1 = <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClassRegistry instanceExclude>;

        return $r1;
    }

    public org.codehaus.groovy.reflection.FastArray getInstanceMethods()
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        org.codehaus.groovy.reflection.FastArray $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray instanceMethods>;

        return $r1;
    }

    public org.codehaus.groovy.reflection.FastArray getStaticMethods()
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        org.codehaus.groovy.reflection.FastArray $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: org.codehaus.groovy.reflection.FastArray staticMethods>;

        return $r1;
    }

    static java.lang.Integer access$000(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl)
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;
        java.lang.Integer $r1;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer version>;

        return $r1;
    }

    static groovy.lang.MetaClass access$100(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl, java.lang.Class)
    {
        groovy.lang.MetaClass $r2;
        java.lang.Class r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r0;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r1 := @parameter1: java.lang.Class;

        $r2 = specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClass getGlobalMetaClass(java.lang.Class)>(r1);

        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int DONT_LOAD_DEFAULT> = 1;

        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: int LOAD_DEFAULT> = 0;

        return;
    }
}
