public abstract class org.codehaus.jackson.map.BeanDescription extends java.lang.Object
{
    protected final org.codehaus.jackson.type.JavaType _type;

    protected void <init>(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.BeanDescription r0;

        r0 := @this: org.codehaus.jackson.map.BeanDescription;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType _type> = r1;

        return;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.BeanDescription r0;

        r0 := @this: org.codehaus.jackson.map.BeanDescription;

        $r1 = r0.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType _type>;

        return $r1;
    }

    public java.lang.Class getBeanClass()
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.BeanDescription r0;

        r0 := @this: org.codehaus.jackson.map.BeanDescription;

        $r1 = r0.<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType _type>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        return $r2;
    }

    public abstract org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo();

    public abstract boolean hasKnownClassAnnotations();

    public abstract org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType();

    public abstract org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type);

    public abstract org.codehaus.jackson.map.util.Annotations getClassAnnotations();

    public abstract java.util.List findProperties();

    public abstract java.util.Map findInjectables();

    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter();

    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter();

    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod();

    public abstract org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor();

    public abstract java.util.Set getIgnoredPropertyNames();

    public abstract java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker, java.util.Collection);

    public abstract java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker);

    public abstract java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker, java.util.Collection);

    public abstract java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker, java.util.Collection);
}
