public final class org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder extends java.lang.Object
{
    private java.lang.String participantId;
    private java.lang.String waveId;
    private final java.util.List waveletIdPrefix;
    private final java.util.List knownWavelet;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List knownWavelet> = $r2;

        return;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder setParticipantId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.lang.String participantId> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder setWaveId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.lang.String waveId> = r1;

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder addAllWaveletIdPrefix(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder setWaveletIdPrefix(int, java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder addWaveletIdPrefix(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder clearWaveletIdPrefix()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        $r1 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder addAllKnownWavelet(java.util.List)
    {
        java.util.List r0;
        org.waveprotocol.box.common.comms.WaveletVersion r4;
        java.util.Iterator $r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r2;
        java.lang.Object $r3;
        boolean $z0;

        r2 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.box.common.comms.WaveletVersion) $r3;

        virtualinvoke r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder addKnownWavelet(org.waveprotocol.box.common.comms.WaveletVersion)>(r4);

        goto label1;

     label2:
        return r2;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder setKnownWavelet(int, org.waveprotocol.box.common.comms.WaveletVersion)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.WaveletVersion r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;
        int i0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.box.common.comms.WaveletVersion;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List knownWavelet>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder addKnownWavelet(org.waveprotocol.box.common.comms.WaveletVersion)
    {
        java.util.List $r2;
        org.waveprotocol.box.common.comms.WaveletVersion r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletVersion;

        $r2 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List knownWavelet>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder clearKnownWavelet()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        $r1 = r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List knownWavelet>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.box.common.comms.ProtocolOpenRequest build(org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder$Factory)
    {
        org.waveprotocol.box.common.comms.ProtocolOpenRequest $r1;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder$Factory r0;
        java.util.List $r5, $r6;
        org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder r2;
        java.lang.String $r3, $r4;

        r2 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder$Factory: org.waveprotocol.box.common.comms.ProtocolOpenRequest create()>();

        $r3 = r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.lang.String participantId>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void setParticipantId(java.lang.String)>($r3);

        $r4 = r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.lang.String waveId>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void setWaveId(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void clearWaveletIdPrefix()>();

        $r5 = r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List waveletIdPrefix>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void addAllWaveletIdPrefix(java.util.List)>($r5);

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void clearKnownWavelet()>();

        $r6 = r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequestBuilder: java.util.List knownWavelet>;

        interfaceinvoke $r1.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: void addAllKnownWavelet(java.util.List)>($r6);

        return $r1;
    }
}
