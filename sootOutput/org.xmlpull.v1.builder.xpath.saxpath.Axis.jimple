public class org.xmlpull.v1.builder.xpath.saxpath.Axis extends java.lang.Object
{
    public static final int INVALID_AXIS;
    public static final int CHILD;
    public static final int DESCENDANT;
    public static final int PARENT;
    public static final int ANCESTOR;
    public static final int FOLLOWING_SIBLING;
    public static final int PRECEDING_SIBLING;
    public static final int FOLLOWING;
    public static final int PRECEDING;
    public static final int ATTRIBUTE;
    public static final int NAMESPACE;
    public static final int SELF;
    public static final int DESCENDANT_OR_SELF;
    public static final int ANCESTOR_OR_SELF;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.saxpath.Axis r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.saxpath.Axis;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String lookup(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            default: goto label14;
        };

     label01:
        return "child";

     label02:
        return "descendant";

     label03:
        return "parent";

     label04:
        return "ancestor";

     label05:
        return "following-sibling";

     label06:
        return "preceding-sibling";

     label07:
        return "following";

     label08:
        return "preceding";

     label09:
        return "attribute";

     label10:
        return "namespace";

     label11:
        return "self";

     label12:
        return "descendant-or-self";

     label13:
        return "ancestor-or-self";

     label14:
        return null;
    }

    public static int lookup(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;

        r0 := @parameter0: java.lang.String;

        $r1 = "child";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = "descendant";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label02;

        return 2;

     label02:
        $r3 = "parent";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label03;

        return 3;

     label03:
        $r4 = "ancestor";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label04;

        return 4;

     label04:
        $r5 = "following-sibling";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label05;

        return 5;

     label05:
        $r6 = "preceding-sibling";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label06;

        return 6;

     label06:
        $r7 = "following";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label07;

        return 7;

     label07:
        $r8 = "preceding";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label08;

        return 8;

     label08:
        $r9 = "attribute";

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label09;

        return 9;

     label09:
        $r10 = "namespace";

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z9 == 0 goto label10;

        return 10;

     label10:
        $r11 = "self";

        $z10 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z10 == 0 goto label11;

        return 11;

     label11:
        $r12 = "descendant-or-self";

        $z11 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z11 == 0 goto label12;

        return 12;

     label12:
        $r13 = "ancestor-or-self";

        $z12 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z12 == 0 goto label13;

        return 13;

     label13:
        return 0;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int ANCESTOR_OR_SELF> = 13;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int DESCENDANT_OR_SELF> = 12;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int SELF> = 11;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int NAMESPACE> = 10;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int ATTRIBUTE> = 9;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int PRECEDING> = 8;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int FOLLOWING> = 7;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int PRECEDING_SIBLING> = 6;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int FOLLOWING_SIBLING> = 5;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int ANCESTOR> = 4;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int PARENT> = 3;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int DESCENDANT> = 2;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int CHILD> = 1;

        <org.xmlpull.v1.builder.xpath.saxpath.Axis: int INVALID_AXIS> = 0;

        return;
    }
}
