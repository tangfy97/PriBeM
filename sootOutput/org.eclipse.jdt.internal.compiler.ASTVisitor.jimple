public abstract class org.eclipse.jdt.internal.compiler.ASTVisitor extends java.lang.Object
{

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void acceptProblem(org.eclipse.jdt.core.compiler.IProblem)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.core.compiler.IProblem r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.core.compiler.IProblem;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ArrayReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.AssertStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.AssertStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AssertStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Assignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Assignment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Assignment;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.BinaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.BinaryExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BinaryExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Block, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Block r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.BreakStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.BreakStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BreakStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.CaseStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CaseStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CaseStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.CharLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Clinit, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Clinit r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ConditionalExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConditionalExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ContinueStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ContinueStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ContinueStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.DoStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.DoStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.DoStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.DoubleLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.DoubleLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.EqualExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.FalseLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FalseLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FalseLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.FloatLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FloatLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FloatLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ForeachStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ForeachStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ForeachStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ForStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.IfStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Initializer, org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer r1;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Initializer;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.IntLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.LabeledStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.LabeledStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LabeledStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.LongLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MemberValuePair;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.NormalAnnotation r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NormalAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.NullLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.NullLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.PostfixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.PostfixExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.PostfixExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.PrefixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.PrefixExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.PrefixExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SwitchStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.SwitchStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SwitchStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ThisReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ThisReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThrowStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ThrowStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThrowStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TrueLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TrueLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TrueLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TryStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TryStatement r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TryStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.UnaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.UnaryExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.UnaryExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.WhileStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Wildcard r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Wildcard;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Wildcard r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Wildcard;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ArrayReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.AssertStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.AssertStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AssertStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Assignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Assignment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Assignment;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.BinaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.BinaryExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BinaryExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Block, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Block r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.BreakStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.BreakStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BreakStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.CaseStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CaseStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CaseStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.CharLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Clinit, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Clinit r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ConditionalExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConditionalExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ContinueStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ContinueStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ContinueStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.DoStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.DoStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.DoStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.DoubleLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.DoubleLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.EqualExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.FalseLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FalseLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FalseLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.FloatLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.FloatLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FloatLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ForeachStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ForeachStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ForeachStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ForStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ForStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ForStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.IfStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.IfStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.IfStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Initializer, org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Initializer r1;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Initializer;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.IntLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Javadoc;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.LabeledStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.LabeledStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LabeledStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.LongLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MemberValuePair;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.NormalAnnotation r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NormalAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.NullLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.NullLiteral r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.PostfixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.PostfixExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.PostfixExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.PrefixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.PrefixExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.PrefixExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SuperReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SuperReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SwitchStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.SwitchStatement r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SwitchStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ThisReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.ThisReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThisReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThrowStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ThrowStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThrowStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TrueLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TrueLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TrueLiteral;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TryStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TryStatement r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TryStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.UnaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.UnaryExpression r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.UnaryExpression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.WhileStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Wildcard r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Wildcard;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.Wildcard r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Wildcard;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        return 1;
    }
}
