public class org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand extends org.codehaus.groovy.tools.shell.CommandSupport
{
    private static int counter;
    private final java.util.List args;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697122;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;

    public void <init>(org.codehaus.groovy.tools.shell.Shell, java.lang.String, java.util.List)
    {
        boolean $z0;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r11;
        java.util.List r18, $r22;
        java.lang.Object[] $r5, $r27;
        java.lang.StringBuffer $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r4, $r15, $r17;
        java.lang.IllegalArgumentException $r23;
        java.lang.Class $r0, r1, $r2, $r10, $r20, $r25, $r26, $r28, $r29;
        java.lang.Object $r6, $r7, $r8, $r9, $r12, $r14, $r16, $r21, $r24;
        org.codehaus.groovy.tools.shell.Shell r3, $r13;

        r11 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r3 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        r4 := @parameter1: java.lang.String;

        r18 := @parameter2: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r25;

        goto label02;

     label01:
        $r25 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label02:
        r1 = $r25;

        $r2 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r26;

        goto label04;

     label03:
        $r26 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r27 = newarray (java.lang.Object)[3];

        $r27[0] = r3;

        $r27[1] = r4;

        $r5 = newarray (java.lang.Object)[1];

        $i0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: int counter>;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i0);

        $i1 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: int counter>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i1);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "next");

        $i2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r8);

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: int counter> = $i2;

        $r5[0] = $r6;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "\\a", "plus", $r5);

        $r27[2] = $r9;

        $r10 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r10 != null goto label05;

        $r28 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r28;

        goto label06;

     label05:
        $r28 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r27, 1, $r28);

        $i4 = $i3 & 1;

        if $i4 == 0 goto label07;

        $r24 = $r27[0];

        $r27 = (java.lang.Object[]) $r24;

     label07:
        $i5 = $i3 >> 8;

        lookupswitch($i5)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r12 = $r27[0];

        $r13 = (org.codehaus.groovy.tools.shell.Shell) $r12;

        $r14 = $r27[1];

        $r15 = (java.lang.String) $r14;

        $r16 = $r27[2];

        $r17 = (java.lang.String) $r16;

        specialinvoke r11.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r13, $r15, $r17);

        goto label10;

     label09:
        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r23;

     label10:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r18);

        if $z0 == 0 goto label11;

        goto label12;

     label11:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>("args. Values: ");

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r18);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r19, null);

     label12:
        $r20 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

        if $r20 != null goto label13;

        $r29 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List> = $r29;

        goto label14;

     label13:
        $r29 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

     label14:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r18, $r29);

        $r22 = (java.util.List) $r21;

        r11.<org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.util.List args> = $r22;

        return;
    }

    public java.lang.String getDescription()
    {
        java.lang.Object[] $r4, $r6;
        java.lang.String[] $r9;
        java.lang.String $r12;
        org.codehaus.groovy.runtime.GStringImpl $r3;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r5;
        java.util.List $r7;
        java.lang.Class $r0, r1, $r2, $r10, $r13, $r14, $r15;
        java.lang.Object $r8, $r11;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r13;

        goto label2;

     label1:
        $r13 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        r1 = $r13;

        $r2 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label4;

     label3:
        $r14 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = new org.codehaus.groovy.runtime.GStringImpl;

        $r4 = newarray (java.lang.Object)[1];

        $r7 = r5.<org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.util.List args>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = " ";

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "join", $r6);

        $r4[0] = $r8;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "User defined alias to: @|bold ";

        $r9[1] = "|";

        specialinvoke $r3.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r4, $r9);

        $r10 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label5;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String> = $r15;

        goto label6;

     label5:
        $r15 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

     label6:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r15);

        $r12 = (java.lang.String) $r11;

        return $r12;
    }

    public java.lang.String getUsage()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r5;
        java.lang.Class $r0, $r1, $r2, $r6, $r7, $r8;
        java.lang.Object $r3;
        java.lang.String $r4;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label5;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String> = $r8;

        goto label6;

     label5:
        $r8 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

     label6:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>("", $r8);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getHelp()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r3;
        java.lang.Class $r0, r1, $r2, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.lang.String $r7;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        r1 = $r8;

        $r2 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "description");

        $r5 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String> = $r10;

        goto label6;

     label5:
        $r10 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$String>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    public java.lang.Object execute(java.util.List)
    {
        java.lang.Object[] $r4, $r11, $r13, $r16, $r17;
        java.lang.String[] $r14;
        org.codehaus.groovy.runtime.GStringImpl $r12;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r3;
        java.util.List $r5, $r9, r23;
        java.lang.Class $r0, r1, $r2, $r7, $r20, $r24, $r25, $r26, $r27;
        java.lang.Object $r6, $r8, $r10, $r15, $r18, $r19, $r21, $r22;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r23 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r24 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r24;

        goto label2;

     label1:
        $r24 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        r1 = $r24;

        $r2 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r25;

        goto label4;

     label3:
        $r25 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = r3.<org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.util.List args>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r23;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "plus", $r4);

        $r7 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

        if $r7 != null goto label5;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List> = $r26;

        goto label6;

     label5:
        $r26 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r26);

        $r9 = (java.util.List) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "log");

        $r11 = newarray (java.lang.Object)[1];

        $r12 = new org.codehaus.groovy.runtime.GStringImpl;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r9;

        $r14 = newarray (java.lang.String)[2];

        $r14[0] = "Executing with args: ";

        $r14[1] = "";

        specialinvoke $r12.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r13, $r14);

        $r11[0] = $r12;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r10, "debug", $r11);

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "shell");

        $r16 = newarray (java.lang.Object)[1];

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = " ";

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r9, "join", $r17);

        $r16[0] = $r18;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r15, "executeCommand", $r16);

        $r20 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$Object>;

        if $r20 != null goto label7;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$Object> = $r27;

        goto label8;

     label7:
        $r27 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$lang$Object>;

     label8:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r19, $r27);

        $r22 = (java.lang.Object) $r21;

        return $r22;
    }

    static void <clinit>()
    {
        java.lang.Integer $r2;
        java.lang.Long $r3, $r4, $r5, $r6;
        int $i0;
        java.lang.Class $r0, $r1, $r7, $r8;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(0);

        $i0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r2);

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: int counter> = $i0;

        $r3 = new java.lang.Long;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>(1239119697122L);

        $r4 = (java.lang.Long) $r3;

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Long __timeStamp> = $r4;

        $r5 = new java.lang.Long;

        specialinvoke $r5.<java.lang.Long: void <init>(long)>(0L);

        $r6 = (java.lang.Long) $r5;

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Long __timeStamp__239_neverHappen1239119697122> = $r6;

        return;
    }

    public final java.util.List getArgs()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r2;
        java.util.List $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.util.List args>;

        $r3 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand: java.lang.Class class$java$util$List>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.util.List) $r5;

        return $r6;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        org.codehaus.groovy.tools.shell.BufferManager $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        jline.History $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        java.util.List r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        jline.Completor $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        groovy.lang.Binding $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
