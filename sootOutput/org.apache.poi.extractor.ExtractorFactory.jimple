public class org.apache.poi.extractor.ExtractorFactory extends java.lang.Object
{
    public static final java.lang.String CORE_DOCUMENT_REL;
    private static final java.lang.ThreadLocal threadPreferEventExtractors;
    private static java.lang.Boolean allPreferEventExtractors;

    public void <init>()
    {
        org.apache.poi.extractor.ExtractorFactory r0;

        r0 := @this: org.apache.poi.extractor.ExtractorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean getThreadPrefersEventExtractors()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 = <org.apache.poi.extractor.ExtractorFactory: java.lang.ThreadLocal threadPreferEventExtractors>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static java.lang.Boolean getAllThreadsPreferEventExtractors()
    {
        java.lang.Boolean $r0;

        $r0 = <org.apache.poi.extractor.ExtractorFactory: java.lang.Boolean allPreferEventExtractors>;

        return $r0;
    }

    public static void setThreadPrefersEventExtractors(boolean)
    {
        java.lang.Boolean $r1;
        java.lang.ThreadLocal $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = <org.apache.poi.extractor.ExtractorFactory: java.lang.ThreadLocal threadPreferEventExtractors>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return;
    }

    public static void setAllThreadsPreferEventExtractors(java.lang.Boolean)
    {
        java.lang.Boolean r0;

        r0 := @parameter0: java.lang.Boolean;

        <org.apache.poi.extractor.ExtractorFactory: java.lang.Boolean allPreferEventExtractors> = r0;

        return;
    }

    protected static boolean getPreferEventExtractor()
    {
        java.lang.ThreadLocal $r1;
        java.lang.Boolean $r0, $r3, $r4;
        java.lang.Object $r2;
        boolean $z0, $z1;

        $r0 = <org.apache.poi.extractor.ExtractorFactory: java.lang.Boolean allPreferEventExtractors>;

        if $r0 == null goto label1;

        $r4 = <org.apache.poi.extractor.ExtractorFactory: java.lang.Boolean allPreferEventExtractors>;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r1 = <org.apache.poi.extractor.ExtractorFactory: java.lang.ThreadLocal threadPreferEventExtractors>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static org.apache.poi.POITextExtractor createExtractor(java.io.File) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        java.lang.Throwable $r9;
        java.io.PushbackInputStream $r0, r10;
        java.io.FileInputStream $r1;
        java.lang.IllegalArgumentException $r3;
        org.apache.poi.POIOLE2TextExtractor $r8;
        java.io.File r2;
        org.apache.poi.POIXMLTextExtractor $r6;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r7;
        org.apache.poi.openxml4j.opc.OPCPackage $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r2 := @parameter0: java.io.File;

        r10 = null;

     label01:
        $r0 = new java.io.PushbackInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>($r1, 8);

        r10 = $r0;

        $z0 = staticinvoke <org.apache.poi.poifs.filesystem.POIFSFileSystem: boolean hasPOIFSHeader(java.io.InputStream)>($r0);

        if $z0 == 0 goto label04;

        $r7 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r7.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>($r0);

        $r8 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIOLE2TextExtractor createExtractor(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r7);

     label02:
        if $r0 == null goto label03;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label03:
        return $r8;

     label04:
        $z1 = staticinvoke <org.apache.poi.POIXMLDocument: boolean hasOOXMLHeader(java.io.InputStream)>($r0);

        if $z1 == 0 goto label07;

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String)>($r4);

        $r6 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIXMLTextExtractor createExtractor(org.apache.poi.openxml4j.opc.OPCPackage)>($r5);

     label05:
        if $r0 == null goto label06;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label06:
        return $r6;

     label07:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Your File was neither an OLE2 file, nor an OOXML file");

        throw $r3;

     label08:
        $r9 := @caughtexception;

     label09:
        if r10 == null goto label10;

        virtualinvoke r10.<java.io.InputStream: void close()>();

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label09 with label08;
    }

    public static org.apache.poi.POITextExtractor createExtractor(java.io.InputStream) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        java.io.PushbackInputStream $r5;
        java.lang.IllegalArgumentException $r0;
        org.apache.poi.POIOLE2TextExtractor $r4;
        org.apache.poi.POIXMLTextExtractor $r2;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r3;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        boolean $z0, $z1, $z2;
        java.io.InputStream r6;

        r6 := @parameter0: java.io.InputStream;

        $z0 = virtualinvoke r6.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label1;

        $r5 = new java.io.PushbackInputStream;

        specialinvoke $r5.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r6, 8);

        r6 = $r5;

     label1:
        $z1 = staticinvoke <org.apache.poi.poifs.filesystem.POIFSFileSystem: boolean hasPOIFSHeader(java.io.InputStream)>(r6);

        if $z1 == 0 goto label2;

        $r3 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>(r6);

        $r4 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIOLE2TextExtractor createExtractor(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r3);

        return $r4;

     label2:
        $z2 = staticinvoke <org.apache.poi.POIXMLDocument: boolean hasOOXMLHeader(java.io.InputStream)>(r6);

        if $z2 == 0 goto label3;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>(r6);

        $r2 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIXMLTextExtractor createExtractor(org.apache.poi.openxml4j.opc.OPCPackage)>($r1);

        return $r2;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Your InputStream was neither an OLE2 stream, nor an OOXML stream");

        throw $r0;
    }

    public static org.apache.poi.POIXMLTextExtractor createExtractor(org.apache.poi.openxml4j.opc.OPCPackage) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.xwpf.extractor.XWPFWordExtractor $r16;
        org.apache.poi.openxml4j.opc.PackagePart $r3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor $r19;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor $r20;
        org.apache.poi.openxml4j.opc.OPCPackage r0;
        org.apache.poi.xssf.usermodel.XSSFRelation[] r26;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r22, $r23, $r24;
        org.apache.poi.xslf.usermodel.XSLFRelation[] r30;
        org.apache.poi.xssf.usermodel.XSSFRelation r27;
        org.apache.poi.openxml4j.opc.PackageRelationship $r2;
        org.apache.poi.xslf.usermodel.XSLFRelation r31;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        java.lang.String $r7, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r25;
        org.apache.poi.xwpf.usermodel.XWPFRelation[] r28;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor $r13;
        java.lang.IllegalArgumentException $r4, $r21;
        org.apache.poi.xwpf.usermodel.XWPFRelation r29;

        r0 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument");

        $i0 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: int size()>();

        if $i0 == 1 goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid OOXML Package received - expected 1 core document, found ");

        $i1 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: int size()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label01:
        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(int)>(0);

        $r3 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r2);

        r26 = <org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFRelation[] SUPPORTED_TYPES>;

        i2 = lengthof r26;

        i3 = 0;

     label02:
        if i3 >= i2 goto label05;

        r27 = r26[i3];

        $r17 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r18 = virtualinvoke r27.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getContentType()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label04;

        $z3 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: boolean getPreferEventExtractor()>();

        if $z3 == 0 goto label03;

        $r20 = new org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        specialinvoke $r20.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r0);

        return $r20;

     label03:
        $r19 = new org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        specialinvoke $r19.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r0);

        return $r19;

     label04:
        i3 = i3 + 1;

        goto label02;

     label05:
        r28 = <org.apache.poi.xwpf.extractor.XWPFWordExtractor: org.apache.poi.xwpf.usermodel.XWPFRelation[] SUPPORTED_TYPES>;

        i4 = lengthof r28;

        i5 = 0;

     label06:
        if i5 >= i4 goto label08;

        r29 = r28[i5];

        $r14 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r15 = virtualinvoke r29.<org.apache.poi.xwpf.usermodel.XWPFRelation: java.lang.String getContentType()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label07;

        $r16 = new org.apache.poi.xwpf.extractor.XWPFWordExtractor;

        specialinvoke $r16.<org.apache.poi.xwpf.extractor.XWPFWordExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r0);

        return $r16;

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        r30 = <org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: org.apache.poi.xslf.usermodel.XSLFRelation[] SUPPORTED_TYPES>;

        i6 = lengthof r30;

        i7 = 0;

     label09:
        if i7 >= i6 goto label11;

        r31 = r30[i7];

        $r11 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r12 = virtualinvoke r31.<org.apache.poi.xslf.usermodel.XSLFRelation: java.lang.String getContentType()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label10;

        $r13 = new org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;

        specialinvoke $r13.<org.apache.poi.xslf.extractor.XSLFPowerPointExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r0);

        return $r13;

     label10:
        i7 = i7 + 1;

        goto label09;

     label11:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No supported documents found in the OOXML package (found ");

        $r7 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;
    }

    public static org.apache.poi.POIOLE2TextExtractor createExtractor(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r1;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r0;
        org.apache.poi.POITextExtractor $r2;
        org.apache.poi.POIOLE2TextExtractor $r3;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r2 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POITextExtractor createExtractor(org.apache.poi.poifs.filesystem.DirectoryNode)>($r1);

        $r3 = (org.apache.poi.POIOLE2TextExtractor) $r2;

        return $r3;
    }

    public static org.apache.poi.POITextExtractor createExtractor(org.apache.poi.poifs.filesystem.DirectoryNode, org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode r0;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r2;
        org.apache.poi.POITextExtractor $r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r1 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POITextExtractor createExtractor(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r1;
    }

    public static org.apache.poi.POITextExtractor createExtractor(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.poifs.filesystem.Entry r4;
        org.apache.poi.hslf.extractor.PowerPointExtractor $r11;
        org.apache.poi.hwpf.extractor.WordExtractor $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.poi.hsmf.extractor.OutlookTextExtactor $r17;
        org.apache.poi.poifs.filesystem.DirectoryNode r0;
        org.apache.poi.POIXMLTextExtractor $r8;
        org.apache.poi.hssf.extractor.EventBasedExcelExtractor $r14;
        org.apache.poi.openxml4j.opc.OPCPackage $r7;
        org.apache.poi.hpbf.extractor.PublisherTextExtractor $r9;
        org.apache.poi.hwpf.extractor.Word6Extractor $r16;
        org.apache.poi.hdgf.extractor.VisioTextExtractor $r10;
        java.lang.String $r5;
        java.util.Iterator $r1;
        org.apache.poi.hssf.extractor.ExcelExtractor $r13;
        java.lang.IllegalArgumentException $r2;
        org.apache.poi.hwpf.OldWordFileFormatException $r15;
        java.lang.Object $r3;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r6;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        $z0 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("Workbook");

        if $z0 == 0 goto label02;

        $z13 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: boolean getPreferEventExtractor()>();

        if $z13 == 0 goto label01;

        $r14 = new org.apache.poi.hssf.extractor.EventBasedExcelExtractor;

        specialinvoke $r14.<org.apache.poi.hssf.extractor.EventBasedExcelExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r14;

     label01:
        $r13 = new org.apache.poi.hssf.extractor.ExcelExtractor;

        specialinvoke $r13.<org.apache.poi.hssf.extractor.ExcelExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r13;

     label02:
        $z1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("WordDocument");

        if $z1 == 0 goto label06;

     label03:
        $r12 = new org.apache.poi.hwpf.extractor.WordExtractor;

        specialinvoke $r12.<org.apache.poi.hwpf.extractor.WordExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

     label04:
        return $r12;

     label05:
        $r15 := @caughtexception;

        $r16 = new org.apache.poi.hwpf.extractor.Word6Extractor;

        specialinvoke $r16.<org.apache.poi.hwpf.extractor.Word6Extractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r16;

     label06:
        $z2 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("PowerPoint Document");

        if $z2 == 0 goto label07;

        $r11 = new org.apache.poi.hslf.extractor.PowerPointExtractor;

        specialinvoke $r11.<org.apache.poi.hslf.extractor.PowerPointExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r11;

     label07:
        $z3 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("VisioDocument");

        if $z3 == 0 goto label08;

        $r10 = new org.apache.poi.hdgf.extractor.VisioTextExtractor;

        specialinvoke $r10.<org.apache.poi.hdgf.extractor.VisioTextExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r10;

     label08:
        $z4 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("Quill");

        if $z4 == 0 goto label09;

        $r9 = new org.apache.poi.hpbf.extractor.PublisherTextExtractor;

        specialinvoke $r9.<org.apache.poi.hpbf.extractor.PublisherTextExtractor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r9;

     label09:
        $z5 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_1000001E");

        if $z5 != 0 goto label10;

        $z6 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_1000001F");

        if $z6 != 0 goto label10;

        $z7 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_0047001E");

        if $z7 != 0 goto label10;

        $z8 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_0047001F");

        if $z8 != 0 goto label10;

        $z9 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_0037001E");

        if $z9 != 0 goto label10;

        $z10 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("__substg1.0_0037001F");

        if $z10 == 0 goto label11;

     label10:
        $r17 = new org.apache.poi.hsmf.extractor.OutlookTextExtactor;

        specialinvoke $r17.<org.apache.poi.hsmf.extractor.OutlookTextExtactor: void <init>(org.apache.poi.poifs.filesystem.DirectoryNode)>(r0);

        return $r17;

     label11:
        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: java.util.Iterator getEntries()>();

     label12:
        $z11 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label14;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.poifs.filesystem.Entry) $r3;

        $r5 = interfaceinvoke r4.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z12 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("Package");

        if $z12 == 0 goto label13;

        $r6 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("Package");

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>($r6);

        $r8 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIXMLTextExtractor createExtractor(org.apache.poi.openxml4j.opc.OPCPackage)>($r7);

        return $r8;

     label13:
        goto label12;

     label14:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No supported documents found in the OLE2 stream");

        throw $r2;

        catch org.apache.poi.hwpf.OldWordFileFormatException from label03 to label04 with label05;
    }

    public static org.apache.poi.POITextExtractor[] getEmbededDocsTextExtractors(org.apache.poi.POIOLE2TextExtractor) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, org.apache.xmlbeans.XmlException
    {
        byte[] $r24;
        java.lang.IllegalStateException $r33;
        org.apache.poi.poifs.filesystem.Entry $r26, r42, r44;
        org.apache.poi.POITextExtractor $r10, $r13;
        org.apache.poi.POIOLE2TextExtractor r2;
        org.apache.poi.hsmf.datatypes.ByteChunk $r19, $r23;
        java.io.ByteArrayInputStream $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.poi.hsmf.extractor.OutlookTextExtactor $r15;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r3, r43;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r34;
        java.io.FileNotFoundException $r41;
        org.apache.poi.hsmf.datatypes.DirectoryChunk $r20, $r21;
        org.apache.poi.poifs.filesystem.DirectoryNode $r12, $r22;
        org.apache.poi.POITextExtractor[] $r5, $r7, $r14;
        java.lang.Object[] $r6;
        org.apache.poi.hsmf.datatypes.AttachmentChunks r18;
        java.util.ArrayList $r0, $r1, $r4;
        int $i0, $i1, $i2, i3, i4, $i5, i6, $i7, i8;
        org.apache.poi.hsmf.datatypes.AttachmentChunks[] $r17;
        java.lang.String $r29, $r32, $r36, $r39;
        org.apache.poi.hsmf.MAPIMessage $r16;
        java.util.Iterator $r27, $r30;
        java.io.IOException $r35, $r38;
        java.lang.IllegalArgumentException $r40;
        org.apache.xmlbeans.XmlException $r37;
        java.lang.Object $r8, $r11, $r28, $r31;
        java.io.InputStream $r9;

        r2 := @parameter0: org.apache.poi.POIOLE2TextExtractor;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.poi.POIOLE2TextExtractor: org.apache.poi.poifs.filesystem.DirectoryEntry getRoot()>();

        if $r3 != null goto label01;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The extractor didn\'t know which POIFS it came from!");

        throw $r33;

     label01:
        $z0 = r2 instanceof org.apache.poi.hssf.extractor.ExcelExtractor;

        if $z0 == 0 goto label05;

        $r30 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator getEntries()>();

     label02:
        $z6 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.apache.poi.poifs.filesystem.Entry) $r31;

        $r32 = interfaceinvoke r42.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z7 = virtualinvoke $r32.<java.lang.String: boolean startsWith(java.lang.String)>("MBD");

        if $z7 == 0 goto label03;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r42);

     label03:
        goto label02;

     label04:
        goto label16;

     label05:
        $z1 = r2 instanceof org.apache.poi.hwpf.extractor.WordExtractor;

        if $z1 == 0 goto label11;

     label06:
        $r26 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("ObjectPool");

        r43 = (org.apache.poi.poifs.filesystem.DirectoryEntry) $r26;

        $r27 = interfaceinvoke r43.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator getEntries()>();

     label07:
        $z4 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r44 = (org.apache.poi.poifs.filesystem.Entry) $r28;

        $r29 = interfaceinvoke r44.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z5 = virtualinvoke $r29.<java.lang.String: boolean startsWith(java.lang.String)>("_");

        if $z5 == 0 goto label08;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r44);

     label08:
        goto label07;

     label09:
        goto label16;

     label10:
        $r41 := @caughtexception;

        goto label16;

     label11:
        $z2 = r2 instanceof org.apache.poi.hslf.extractor.PowerPointExtractor;

        if $z2 == 0 goto label12;

        goto label16;

     label12:
        $z3 = r2 instanceof org.apache.poi.hsmf.extractor.OutlookTextExtactor;

        if $z3 == 0 goto label16;

        $r15 = (org.apache.poi.hsmf.extractor.OutlookTextExtactor) r2;

        $r16 = virtualinvoke $r15.<org.apache.poi.hsmf.extractor.OutlookTextExtactor: org.apache.poi.hsmf.MAPIMessage getMAPIMessage()>();

        $r17 = virtualinvoke $r16.<org.apache.poi.hsmf.MAPIMessage: org.apache.poi.hsmf.datatypes.AttachmentChunks[] getAttachmentFiles()>();

        i3 = lengthof $r17;

        i4 = 0;

     label13:
        if i4 >= i3 goto label16;

        r18 = $r17[i4];

        $r19 = r18.<org.apache.poi.hsmf.datatypes.AttachmentChunks: org.apache.poi.hsmf.datatypes.ByteChunk attachData>;

        if $r19 == null goto label14;

        $r23 = r18.<org.apache.poi.hsmf.datatypes.AttachmentChunks: org.apache.poi.hsmf.datatypes.ByteChunk attachData>;

        $r24 = virtualinvoke $r23.<org.apache.poi.hsmf.datatypes.ByteChunk: byte[] getValue()>();

        $r25 = new java.io.ByteArrayInputStream;

        specialinvoke $r25.<java.io.ByteArrayInputStream: void <init>(byte[])>($r24);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        goto label15;

     label14:
        $r20 = r18.<org.apache.poi.hsmf.datatypes.AttachmentChunks: org.apache.poi.hsmf.datatypes.DirectoryChunk attachmentDirectory>;

        if $r20 == null goto label15;

        $r21 = r18.<org.apache.poi.hsmf.datatypes.AttachmentChunks: org.apache.poi.hsmf.datatypes.DirectoryChunk attachmentDirectory>;

        $r22 = virtualinvoke $r21.<org.apache.poi.hsmf.datatypes.DirectoryChunk: org.apache.poi.poifs.filesystem.DirectoryNode getDirectory()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        $i5 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label17;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label17;

        $r14 = newarray (org.apache.poi.POITextExtractor)[0];

        return $r14;

     label17:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i6 = 0;

     label18:
        $i7 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if i6 >= $i7 goto label19;

        $r11 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r12 = (org.apache.poi.poifs.filesystem.DirectoryNode) $r11;

        $r13 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POITextExtractor createExtractor(org.apache.poi.poifs.filesystem.DirectoryNode)>($r12);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        i6 = i6 + 1;

        goto label18;

     label19:
        i8 = 0;

     label20:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i8 >= $i0 goto label27;

     label21:
        $r8 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r9 = (java.io.InputStream) $r8;

        $r10 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POITextExtractor createExtractor(java.io.InputStream)>($r9);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label22:
        goto label26;

     label23:
        $r40 := @caughtexception;

        goto label26;

     label24:
        $r37 := @caughtexception;

        $r38 = new java.io.IOException;

        $r39 = virtualinvoke $r37.<org.apache.xmlbeans.XmlException: java.lang.String getMessage()>();

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>($r39);

        throw $r38;

     label25:
        $r34 := @caughtexception;

        $r35 = new java.io.IOException;

        $r36 = virtualinvoke $r34.<org.apache.poi.openxml4j.exceptions.OpenXML4JException: java.lang.String getMessage()>();

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label26:
        i8 = i8 + 1;

        goto label20;

     label27:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = newarray (org.apache.poi.POITextExtractor)[$i1];

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.poi.POITextExtractor[]) $r6;

        return $r7;

        catch java.io.FileNotFoundException from label06 to label09 with label10;
        catch java.lang.IllegalArgumentException from label21 to label22 with label23;
        catch org.apache.xmlbeans.XmlException from label21 to label22 with label24;
        catch org.apache.poi.openxml4j.exceptions.OpenXML4JException from label21 to label22 with label25;
    }

    public static org.apache.poi.POITextExtractor[] getEmbededDocsTextExtractors(org.apache.poi.POIXMLTextExtractor)
    {
        java.lang.IllegalStateException $r0;
        org.apache.poi.POIXMLTextExtractor r1;

        r1 := @parameter0: org.apache.poi.POIXMLTextExtractor;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not yet supported");

        throw $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.extractor.ExtractorFactory$1 $r0;

        <org.apache.poi.extractor.ExtractorFactory: java.lang.String CORE_DOCUMENT_REL> = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument";

        $r0 = new org.apache.poi.extractor.ExtractorFactory$1;

        specialinvoke $r0.<org.apache.poi.extractor.ExtractorFactory$1: void <init>()>();

        <org.apache.poi.extractor.ExtractorFactory: java.lang.ThreadLocal threadPreferEventExtractors> = $r0;

        return;
    }
}
