public class org.gagravarr.ogg.OggFile extends java.lang.Object
{
    private java.io.InputStream inp;
    private java.io.OutputStream out;
    private boolean writing;
    private java.util.Set seenSIDs;

    public void <init>(java.io.OutputStream)
    {
        java.util.HashSet $r1;
        java.io.OutputStream r2;
        org.gagravarr.ogg.OggFile r0;

        r0 := @this: org.gagravarr.ogg.OggFile;

        r2 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.gagravarr.ogg.OggFile: boolean writing> = 1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.gagravarr.ogg.OggFile: java.util.Set seenSIDs> = $r1;

        r0.<org.gagravarr.ogg.OggFile: java.io.OutputStream out> = r2;

        r0.<org.gagravarr.ogg.OggFile: boolean writing> = 1;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        java.util.HashSet $r1;
        org.gagravarr.ogg.OggFile r0;
        java.io.InputStream r2;

        r0 := @this: org.gagravarr.ogg.OggFile;

        r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.gagravarr.ogg.OggFile: boolean writing> = 1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.gagravarr.ogg.OggFile: java.util.Set seenSIDs> = $r1;

        r0.<org.gagravarr.ogg.OggFile: java.io.InputStream inp> = r2;

        r0.<org.gagravarr.ogg.OggFile: boolean writing> = 0;

        return;
    }

    public void <init>(java.io.InputStream, org.gagravarr.ogg.OggStreamListener) throws java.io.IOException
    {
        byte[] $r8;
        org.gagravarr.ogg.OggPacketReader $r3;
        java.util.HashMap $r2;
        org.gagravarr.ogg.OggFile r0;
        java.lang.Integer $r4, $r10;
        org.gagravarr.ogg.OggPacket $r11;
        int $i0, $i1, i2, $i3, $i4, $i5, i6;
        org.gagravarr.ogg.OggStreamListener r6;
        boolean $z0, $z1;
        org.gagravarr.ogg.OggStreamReader[] $r9, r12;
        java.lang.Object $r5;
        org.gagravarr.ogg.OggStreamReader r7;
        java.io.InputStream r1;

        r0 := @this: org.gagravarr.ogg.OggFile;

        r1 := @parameter0: java.io.InputStream;

        r6 := @parameter1: org.gagravarr.ogg.OggStreamListener;

        specialinvoke r0.<org.gagravarr.ogg.OggFile: void <init>(java.io.InputStream)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke r0.<org.gagravarr.ogg.OggFile: org.gagravarr.ogg.OggPacketReader getPacketReader()>();

     label1:
        $r11 = virtualinvoke $r3.<org.gagravarr.ogg.OggPacketReader: org.gagravarr.ogg.OggPacket getNextPacket()>();

        if $r11 == null goto label6;

        $z0 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: boolean isBeginningOfStream()>();

        if $z0 == 0 goto label3;

        $i3 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: int getSid()>();

        $r8 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: byte[] getData()>();

        $r9 = interfaceinvoke r6.<org.gagravarr.ogg.OggStreamListener: org.gagravarr.ogg.OggStreamReader[] processNewStream(int,byte[])>($i3, $r8);

        if $r9 == null goto label2;

        $i4 = lengthof $r9;

        if $i4 <= 0 goto label2;

        $i5 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: int getSid()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

     label2:
        goto label5;

     label3:
        $i0 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: int getSid()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r12 = (org.gagravarr.ogg.OggStreamReader[]) $r5;

        if r12 == null goto label5;

        i2 = lengthof r12;

        i6 = 0;

     label4:
        if i6 >= i2 goto label5;

        r7 = r12[i6];

        interfaceinvoke r7.<org.gagravarr.ogg.OggStreamReader: void processPacket(org.gagravarr.ogg.OggPacket)>($r11);

        i6 = i6 + 1;

        goto label4;

     label5:
        $z1 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: boolean isEndOfStream()>();

        if $z1 == 0 goto label1;

        $i1 = virtualinvoke $r11.<org.gagravarr.ogg.OggPacket: int getSid()>();

        interfaceinvoke r6.<org.gagravarr.ogg.OggStreamListener: void processStreamEnd(int)>($i1);

        goto label1;

     label6:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r2, $r3;
        org.gagravarr.ogg.OggFile r0;
        java.io.InputStream $r1, $r4;

        r0 := @this: org.gagravarr.ogg.OggFile;

        $r1 = r0.<org.gagravarr.ogg.OggFile: java.io.InputStream inp>;

        if $r1 == null goto label1;

        $r4 = r0.<org.gagravarr.ogg.OggFile: java.io.InputStream inp>;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label1:
        $r2 = r0.<org.gagravarr.ogg.OggFile: java.io.OutputStream out>;

        if $r2 == null goto label2;

        $r3 = r0.<org.gagravarr.ogg.OggFile: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label2:
        return;
    }

    public org.gagravarr.ogg.OggPacketReader getPacketReader()
    {
        java.lang.IllegalStateException $r1;
        org.gagravarr.ogg.OggPacketReader $r3;
        org.gagravarr.ogg.OggFile r0;
        boolean $z0;
        java.io.InputStream $r2, $r4;

        r0 := @this: org.gagravarr.ogg.OggFile;

        $z0 = r0.<org.gagravarr.ogg.OggFile: boolean writing>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.gagravarr.ogg.OggFile: java.io.InputStream inp>;

        if $r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can only read from a file opened with an InputStream");

        throw $r1;

     label2:
        $r3 = new org.gagravarr.ogg.OggPacketReader;

        $r4 = r0.<org.gagravarr.ogg.OggFile: java.io.InputStream inp>;

        specialinvoke $r3.<org.gagravarr.ogg.OggPacketReader: void <init>(java.io.InputStream)>($r4);

        return $r3;
    }

    public org.gagravarr.ogg.OggPacketWriter getPacketWriter()
    {
        int $i0;
        org.gagravarr.ogg.OggPacketWriter $r1;
        org.gagravarr.ogg.OggFile r0;

        r0 := @this: org.gagravarr.ogg.OggFile;

        $i0 = virtualinvoke r0.<org.gagravarr.ogg.OggFile: int getUnusedSerialNumber()>();

        $r1 = virtualinvoke r0.<org.gagravarr.ogg.OggFile: org.gagravarr.ogg.OggPacketWriter getPacketWriter(int)>($i0);

        return $r1;
    }

    public org.gagravarr.ogg.OggPacketWriter getPacketWriter(int)
    {
        java.lang.IllegalStateException $r4;
        int i0;
        java.util.Set $r1;
        org.gagravarr.ogg.OggPacketWriter $r3;
        org.gagravarr.ogg.OggFile r0;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: org.gagravarr.ogg.OggFile;

        i0 := @parameter0: int;

        $z0 = r0.<org.gagravarr.ogg.OggFile: boolean writing>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can only write to a file opened with an OutputStream");

        throw $r4;

     label1:
        $r1 = r0.<org.gagravarr.ogg.OggFile: java.util.Set seenSIDs>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = new org.gagravarr.ogg.OggPacketWriter;

        specialinvoke $r3.<org.gagravarr.ogg.OggPacketWriter: void <init>(org.gagravarr.ogg.OggFile,int)>(r0, i0);

        return $r3;
    }

    protected synchronized void writePages(org.gagravarr.ogg.OggPage[]) throws java.io.IOException
    {
        java.io.OutputStream $r2, $r4, $r5;
        byte[] $r6;
        org.gagravarr.ogg.OggPage[] r0;
        org.gagravarr.ogg.OggFile r1;
        org.gagravarr.ogg.OggPage r3;
        int i0, i1;

        r1 := @this: org.gagravarr.ogg.OggFile;

        r0 := @parameter0: org.gagravarr.ogg.OggPage[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r0[i1];

        $r4 = r1.<org.gagravarr.ogg.OggFile: java.io.OutputStream out>;

        virtualinvoke r3.<org.gagravarr.ogg.OggPage: void writeHeader(java.io.OutputStream)>($r4);

        $r5 = r1.<org.gagravarr.ogg.OggFile: java.io.OutputStream out>;

        $r6 = virtualinvoke r3.<org.gagravarr.ogg.OggPage: byte[] getData()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r1.<org.gagravarr.ogg.OggFile: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        return;
    }

    protected int getUnusedSerialNumber()
    {
        int $i0;
        java.util.Set $r1;
        org.gagravarr.ogg.OggFile r0;
        java.lang.Integer $r2;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: org.gagravarr.ogg.OggFile;

     label1:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 32767.0;

        $i0 = (int) $d1;

        $r1 = r0.<org.gagravarr.ogg.OggFile: java.util.Set seenSIDs>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        return $i0;

     label2:
        goto label1;
    }
}
