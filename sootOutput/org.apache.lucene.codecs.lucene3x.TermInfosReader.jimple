final class org.apache.lucene.codecs.lucene3x.TermInfosReader extends java.lang.Object implements java.io.Closeable
{
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String segment;
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.util.CloseableThreadLocal threadResources;
    private final org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum;
    private final long size;
    private final org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index;
    private final int indexLength;
    private final int totalIndexInterval;
    private static final int DEFAULT_CACHE_SIZE;
    private final org.apache.lucene.util.DoubleBarrelLRUCache termsCache;
    private static final java.util.Comparator legacyComparator;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext, int) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r31;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.store.Directory r3, $r8, $r18;
        org.apache.lucene.index.FieldInfos r5, $r12, $r20;
        org.apache.lucene.store.IOContext r10;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r13, $r14, $r34, $r35;
        java.lang.StringBuilder $r25, $r26, $r32;
        java.lang.Throwable $r28, $r29;
        long $l1, $l4;
        int i0, $i2, $i3, $i5, $i6, $i8, $i10, $i12, $i14;
        java.lang.String r4, $r7, $r9, $r15, $r16, $r27;
        org.apache.lucene.store.IndexInput $r11, $r19;
        java.lang.IllegalArgumentException $r33;
        org.apache.lucene.util.CloseableThreadLocal $r30;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex $r22, $r36;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r3 := @parameter0: org.apache.lucene.store.Directory;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.lucene.index.FieldInfos;

        r10 := @parameter3: org.apache.lucene.store.IOContext;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r30 = new org.apache.lucene.util.CloseableThreadLocal;

        specialinvoke $r30.<org.apache.lucene.util.CloseableThreadLocal: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources> = $r30;

        $r31 = new org.apache.lucene.util.DoubleBarrelLRUCache;

        specialinvoke $r31.<org.apache.lucene.util.DoubleBarrelLRUCache: void <init>(int)>(1024);

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache> = $r31;

        if i0 >= 1 goto label01;

        $i8 = (int) -1;

        if i0 == $i8 goto label01;

        $r33 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("indexDivisor must be -1 (don\'t load terms index) or greater than 0: got ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r33;

     label01:
        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.store.Directory directory> = r3;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: java.lang.String segment> = r4;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos> = r5;

        $r34 = new org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.store.Directory directory>;

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: java.lang.String segment>;

        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r7, "", "tis");

        $r11 = virtualinvoke $r8.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r9, r10);

        $r12 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke $r34.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: void <init>(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos,boolean)>($r11, $r12, 0);

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum> = $r34;

        $r13 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $l1 = $r13.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long size>;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size> = $l1;

        $i10 = (int) -1;

        if i0 == $i10 goto label07;

        $r14 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $i2 = $r14.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int indexInterval>;

        $i3 = $i2 * i0;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int totalIndexInterval> = $i3;

        $r15 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: java.lang.String segment>;

        $r16 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r15, "", "tii");

        $r35 = new org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r18 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.store.Directory directory>;

        $r19 = virtualinvoke $r18.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r16, r10);

        $r20 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke $r35.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: void <init>(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos,boolean)>($r19, $r20, 1);

     label02:
        $r36 = new org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        $l4 = virtualinvoke r3.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>($r16);

        $i5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int totalIndexInterval>;

        specialinvoke $r36.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: void <init>(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,int,long,int)>($r35, i0, $l4, $i5);

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index> = $r36;

        $r22 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        $i6 = virtualinvoke $r22.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int length()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int indexLength> = $i6;

     label03:
        virtualinvoke $r35.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: void close()>();

        goto label06;

     label04:
        $r29 := @caughtexception;

     label05:
        virtualinvoke $r35.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: void close()>();

        throw $r29;

     label06:
        goto label08;

     label07:
        $i12 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int totalIndexInterval> = $i12;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index> = null;

        $i14 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int indexLength> = $i14;

     label08:
        if 1 != 0 goto label12;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: void close()>();

        goto label12;

     label09:
        $r28 := @caughtexception;

     label10:
        if 0 != 0 goto label11;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: void close()>();

     label11:
        throw $r28;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int getSkipInterval()
    {
        int $i0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $i0 = $r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        return $i0;
    }

    public int getMaxSkipLevels()
    {
        int $i0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $i0 = $r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int maxSkipLevels>;

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r1;
        java.io.Closeable[] $r0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r2;
        org.apache.lucene.util.CloseableThreadLocal $r3;

        r1 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r0 = newarray (java.io.Closeable)[2];

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        $r0[1] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    long size()
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        long $l0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $l0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size>;

        return $l0;
    }

    private org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources getThreadResources()
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources $r3, r6;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        java.lang.Object $r2;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r4;
        org.apache.lucene.util.CloseableThreadLocal $r1, $r5;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        r6 = (org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources) $r2;

        if r6 != null goto label1;

        $r3 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources;

        specialinvoke $r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources: void <init>(org.apache.lucene.codecs.lucene3x.TermInfosReader$1)>(null);

        r6 = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum terms()>();

        $r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources: org.apache.lucene.codecs.lucene3x.SegmentTermEnum termEnum> = $r4;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.CloseableThreadLocal threadResources>;

        virtualinvoke $r5.<org.apache.lucene.util.CloseableThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        return r6;
    }

    private final int compareAsUTF16(org.apache.lucene.index.Term, org.apache.lucene.index.Term)
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r9;
        org.apache.lucene.util.BytesRef $r7, $r8;
        org.apache.lucene.index.Term r0, r2;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4, $r5;
        java.util.Comparator $r6;
        boolean $z0;

        r9 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r0 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: org.apache.lucene.index.Term;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r3 = virtualinvoke r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.lucene.codecs.lucene3x.TermInfosReader: java.util.Comparator legacyComparator>;

        $r7 = virtualinvoke r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $r8 = virtualinvoke r2.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $i1 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $i1;

     label1:
        $r4 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r5 = virtualinvoke r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

    org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.Term r1;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term,boolean)>(r1, 0);

        return $r2;
    }

    private org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term, boolean) throws java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r3;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources $r6;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm $r1;
        org.apache.lucene.codecs.lucene3x.TermInfo $r8;
        org.apache.lucene.index.Term r2;
        long $l0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r7;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd r5;
        byte $b1;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r2 := @parameter0: org.apache.lucene.index.Term;

        z0 := @parameter1: boolean;

        $l0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: void ensureIndexIsRead()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r1 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm;

        specialinvoke $r1.<org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>(r2);

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.DoubleBarrelLRUCache: java.lang.Object get(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey)>($r1);

        r5 = (org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd) $r4;

        $r6 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources getThreadResources()>();

        if z0 != 0 goto label2;

        if r5 == null goto label2;

        return r5;

     label2:
        $r7 = $r6.<org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources: org.apache.lucene.codecs.lucene3x.SegmentTermEnum termEnum>;

        $r8 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,org.apache.lucene.index.Term,org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd,boolean)>($r7, r2, r5, 1);

        return $r8;
    }

    public void cacheCurrentTerm(org.apache.lucene.codecs.lucene3x.SegmentTermEnum)
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r3;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm $r1;
        org.apache.lucene.codecs.lucene3x.TermInfo $r6;
        org.apache.lucene.index.Term $r4;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r2;
        long $l0;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd $r5;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r2 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r1 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm;

        $r4 = virtualinvoke r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        specialinvoke $r1.<org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>($r4);

        $r5 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd;

        $r6 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $l0 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        specialinvoke $r5.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: void <init>(org.apache.lucene.codecs.lucene3x.TermInfo,long)>($r6, $l0);

        virtualinvoke $r3.<org.apache.lucene.util.DoubleBarrelLRUCache: void put(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey,java.lang.Object)>($r1, $r5);

        return;
    }

    static org.apache.lucene.index.Term deepCopyOf(org.apache.lucene.index.Term)
    {
        org.apache.lucene.util.BytesRef $r3, $r4;
        org.apache.lucene.index.Term $r0, r1;
        java.lang.String $r2;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r0 = new org.apache.lucene.index.Term;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r3 = virtualinvoke r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $r4 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r3);

        specialinvoke $r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>($r2, $r4);

        return $r0;
    }

    org.apache.lucene.codecs.lucene3x.TermInfo seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum, org.apache.lucene.index.Term, boolean) throws java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r5;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r3, $r9;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm $r4;
        org.apache.lucene.index.Term r2, $r6;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r1;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd $r8;
        java.lang.Object $r7;
        boolean z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r2 := @parameter1: org.apache.lucene.index.Term;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r4 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm;

        $r6 = staticinvoke <org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.Term deepCopyOf(org.apache.lucene.index.Term)>(r2);

        specialinvoke $r4.<org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>($r6);

        $r7 = virtualinvoke $r5.<org.apache.lucene.util.DoubleBarrelLRUCache: java.lang.Object get(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey)>($r4);

        $r8 = (org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd) $r7;

        $r9 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,org.apache.lucene.index.Term,org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd,boolean)>(r1, r2, $r8, z0);

        return $r9;

     label1:
        $r3 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,org.apache.lucene.index.Term,org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd,boolean)>(r1, r2, null, z0);

        return $r3;
    }

    org.apache.lucene.codecs.lucene3x.TermInfo seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum, org.apache.lucene.index.Term, org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd, boolean) throws java.io.IOException
    {
        org.apache.lucene.util.DoubleBarrelLRUCache $r12, $r22;
        org.apache.lucene.index.Term $r2, r4, $r7, $r8, $r13, $r15, $r16, $r17, $r18, $r23, $r26;
        byte $b1, $b5, $b24;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r1;
        long $l0, $l3, $l4, $l6, $l8, $l9, $l10, $l13, $l14, $l15, $l20, $l22, $l23, $l25;
        java.lang.AssertionError $r9, $r10, $r19, $r20;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd r3, $r14, $r24;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        org.apache.lucene.codecs.lucene3x.TermInfo r27, r28;
        org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm $r11, $r21;
        int $i2, $i7, $i11, $i12, $i16, $i17, $i18, $i19, $i21, $i26, $i27, $i28, i29;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex $r5, $r6, $r25;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r4 := @parameter1: org.apache.lucene.index.Term;

        r3 := @parameter2: org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd;

        z3 := @parameter3: boolean;

        $l0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label01;

        return null;

     label01:
        $r2 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r2 == null goto label09;

        $r15 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term prev()>();

        if $r15 == null goto label02;

        $r26 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term prev()>();

        $i27 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r4, $r26);

        if $i27 > 0 goto label03;

     label02:
        $r16 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i11 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r4, $r16);

        if $i11 < 0 goto label09;

     label03:
        $l14 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        $i12 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int totalIndexInterval>;

        $l13 = (long) $i12;

        $l15 = $l14 / $l13;

        $i16 = (int) $l15;

        $i28 = $i16 + 1;

        $i17 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int indexLength>;

        if $i17 == $i28 goto label04;

        $r25 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        $i26 = virtualinvoke $r25.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int compareTo(org.apache.lucene.index.Term,int)>(r4, $i28);

        if $i26 >= 0 goto label09;

     label04:
        $i18 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int scanTo(org.apache.lucene.index.Term)>(r4);

        $r17 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r17 == null goto label07;

        $r18 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i19 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r4, $r18);

        if $i19 != 0 goto label07;

        r27 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        if $i18 <= 1 goto label08;

        if r3 != null goto label05;

        if z3 == 0 goto label08;

        $r22 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r21 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm;

        $r23 = staticinvoke <org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.Term deepCopyOf(org.apache.lucene.index.Term)>(r4);

        specialinvoke $r21.<org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>($r23);

        $r24 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd;

        $l25 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        specialinvoke $r24.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: void <init>(org.apache.lucene.codecs.lucene3x.TermInfo,long)>(r27, $l25);

        virtualinvoke $r22.<org.apache.lucene.util.DoubleBarrelLRUCache: void put(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey,java.lang.Object)>($r21, $r24);

        goto label08;

     label05:
        $z4 = <org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean $assertionsDisabled>;

        if $z4 != 0 goto label06;

        $z6 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean sameTermInfo(org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.codecs.lucene3x.SegmentTermEnum)>(r27, r3, r1);

        if $z6 != 0 goto label06;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label06:
        $z5 = <org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean $assertionsDisabled>;

        if $z5 != 0 goto label08;

        $l20 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        $i21 = (int) $l20;

        $l23 = (long) $i21;

        $l22 = r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $b24 = $l23 cmp $l22;

        if $b24 == 0 goto label08;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label07:
        r27 = null;

     label08:
        return r27;

     label09:
        if r3 == null goto label10;

        $l9 = r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $i7 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int totalIndexInterval>;

        $l8 = (long) $i7;

        $l10 = $l9 / $l8;

        i29 = (int) $l10;

        goto label11;

     label10:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        i29 = virtualinvoke $r5.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int getIndexOffset(org.apache.lucene.index.Term)>(r4);

     label11:
        $r6 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        virtualinvoke $r6.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: void seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,int)>(r1, i29);

        virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int scanTo(org.apache.lucene.index.Term)>(r4);

        $r7 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if $r7 == null goto label14;

        $r8 = virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i2 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r4, $r8);

        if $i2 != 0 goto label14;

        r28 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        if r3 != null goto label12;

        if z3 == 0 goto label15;

        $r12 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.util.DoubleBarrelLRUCache termsCache>;

        $r11 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm;

        $r13 = staticinvoke <org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.index.Term deepCopyOf(org.apache.lucene.index.Term)>(r4);

        specialinvoke $r11.<org.apache.lucene.codecs.lucene3x.TermInfosReader$CloneableTerm: void <init>(org.apache.lucene.index.Term)>($r13);

        $r14 = new org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd;

        $l6 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        specialinvoke $r14.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: void <init>(org.apache.lucene.codecs.lucene3x.TermInfo,long)>(r28, $l6);

        virtualinvoke $r12.<org.apache.lucene.util.DoubleBarrelLRUCache: void put(org.apache.lucene.util.DoubleBarrelLRUCache$CloneableKey,java.lang.Object)>($r11, $r14);

        goto label15;

     label12:
        $z0 = <org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label13;

        $z2 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean sameTermInfo(org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.codecs.lucene3x.TermInfo,org.apache.lucene.codecs.lucene3x.SegmentTermEnum)>(r28, r3, r1);

        if $z2 != 0 goto label13;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label13:
        $z1 = <org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label15;

        $l4 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        $l3 = r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$TermInfoAndOrd: long termOrd>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label15;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label14:
        r28 = null;

     label15:
        return r28;
    }

    private boolean sameTermInfo(org.apache.lucene.codecs.lucene3x.TermInfo, org.apache.lucene.codecs.lucene3x.TermInfo, org.apache.lucene.codecs.lucene3x.SegmentTermEnum)
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r3;
        long $l2, $l3, $l5, $l6;
        byte $b4, $b7;
        int $i0, $i1, $i8, $i9, $i10, $i11;
        org.apache.lucene.codecs.lucene3x.TermInfo r0, r1;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r2;

        r3 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.TermInfo;

        r1 := @parameter1: org.apache.lucene.codecs.lucene3x.TermInfo;

        r2 := @parameter2: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        $i0 = r1.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        $l3 = r0.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        $l2 = r1.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        $b4 = $l3 cmp $l2;

        if $b4 == 0 goto label2;

        return 0;

     label2:
        $l6 = r0.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        $l5 = r1.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        $b7 = $l6 cmp $l5;

        if $b7 == 0 goto label3;

        return 0;

     label3:
        $i9 = r0.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        $i8 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        if $i9 < $i8 goto label4;

        $i11 = r0.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset>;

        $i10 = r1.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset>;

        if $i11 == $i10 goto label4;

        return 0;

     label4:
        return 1;
    }

    private void ensureIndexIsRead()
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        java.lang.IllegalStateException $r2;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("terms index was not loaded when this reader was created");

        throw $r2;

     label1:
        return;
    }

    long getPosition(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources $r3;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.index.Term r1, $r6, $r7;
        long $l0, $l5;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r4;
        byte $b1;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex $r2, $r5;
        int $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $l0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return -1L;

     label1:
        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: void ensureIndexIsRead()>();

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        $i2 = virtualinvoke $r2.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int getIndexOffset(org.apache.lucene.index.Term)>(r1);

        $r3 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources getThreadResources()>();

        r4 = $r3.<org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources: org.apache.lucene.codecs.lucene3x.SegmentTermEnum termEnum>;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex index>;

        virtualinvoke $r5.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: void seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum,int)>(r4, $i2);

     label2:
        $r6 = virtualinvoke r4.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i3 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r1, $r6);

        if $i3 <= 0 goto label3;

        $z0 = virtualinvoke r4.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean next()>();

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        $r7 = virtualinvoke r4.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        $i4 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: int compareAsUTF16(org.apache.lucene.index.Term,org.apache.lucene.index.Term)>(r1, $r7);

        if $i4 != 0 goto label4;

        $l5 = r4.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        return $l5;

     label4:
        return -1L;
    }

    public org.apache.lucene.codecs.lucene3x.SegmentTermEnum terms()
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r1, $r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.SegmentTermEnum origEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.SegmentTermEnum clone()>();

        return $r2;
    }

    public org.apache.lucene.codecs.lucene3x.SegmentTermEnum terms(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources $r2;
        org.apache.lucene.codecs.lucene3x.TermInfosReader r0;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum $r3, $r4;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReader;

        r1 := @parameter0: org.apache.lucene.index.Term;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfo get(org.apache.lucene.index.Term,boolean)>(r1, 1);

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReader: org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources getThreadResources()>();

        $r3 = $r2.<org.apache.lucene.codecs.lucene3x.TermInfosReader$ThreadResources: org.apache.lucene.codecs.lucene3x.SegmentTermEnum termEnum>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.SegmentTermEnum clone()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.Comparator $r1;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene3x.TermInfosReader: int DEFAULT_CACHE_SIZE> = 1024;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/TermInfosReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.TermInfosReader: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUTF16Comparator()>();

        <org.apache.lucene.codecs.lucene3x.TermInfosReader: java.util.Comparator legacyComparator> = $r1;

        return;
    }
}
