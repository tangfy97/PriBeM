public class org.eclipse.jetty.io.bio.StringEndPoint extends org.eclipse.jetty.io.bio.StreamEndPoint
{
    java.lang.String _encoding;
    java.io.ByteArrayInputStream _bin;
    java.io.ByteArrayOutputStream _bout;

    public void <init>()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r1, $r4;
        java.io.ByteArrayOutputStream $r3, $r5;
        org.eclipse.jetty.io.bio.StringEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.bio.StringEndPoint;

        specialinvoke r0.<org.eclipse.jetty.io.bio.StreamEndPoint: void <init>(java.io.InputStream,java.io.OutputStream)>(null, null);

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.lang.String _encoding> = "UTF-8";

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = newarray (byte)[0];

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayInputStream _bin> = $r1;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout> = $r3;

        $r4 = r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayInputStream _bin>;

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.InputStream _in> = $r4;

        $r5 = r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout>;

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.OutputStream _out> = $r5;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.eclipse.jetty.io.bio.StringEndPoint r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.io.bio.StringEndPoint;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.io.bio.StringEndPoint: void <init>()>();

        if r1 == null goto label1;

        r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.lang.String _encoding> = r1;

     label1:
        return;
    }

    public void setInput(java.lang.String)
    {
        byte[] $r3;
        java.lang.IllegalStateException $r9;
        java.io.ByteArrayOutputStream $r6, $r7;
        java.lang.Exception $r8;
        java.io.ByteArrayInputStream $r4, $r5;
        org.eclipse.jetty.io.bio.StringEndPoint r1;
        java.lang.String r0, $r2, $r10;

        r1 := @this: org.eclipse.jetty.io.bio.StringEndPoint;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.lang.String _encoding>;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayInputStream _bin> = $r4;

        $r5 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayInputStream _bin>;

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.InputStream _in> = $r5;

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout> = $r6;

        $r7 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout>;

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.OutputStream _out> = $r7;

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: boolean _ishut> = 0;

        r1.<org.eclipse.jetty.io.bio.StringEndPoint: boolean _oshut> = 0;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getOutput()
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r2, $r5;
        java.lang.Exception $r6;
        org.eclipse.jetty.io.bio.StringEndPoint$1 $r7;
        org.eclipse.jetty.io.bio.StringEndPoint r1;
        java.lang.String $r0, $r4, $r8;

        r1 := @this: org.eclipse.jetty.io.bio.StringEndPoint;

     label1:
        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout>;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r4 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.lang.String _encoding>;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, $r4);

        $r5 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayOutputStream _bout>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void reset()>();

     label2:
        return $r0;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.eclipse.jetty.io.bio.StringEndPoint$1;

        $r8 = r1.<org.eclipse.jetty.io.bio.StringEndPoint: java.lang.String _encoding>;

        specialinvoke $r7.<org.eclipse.jetty.io.bio.StringEndPoint$1: void <init>(org.eclipse.jetty.io.bio.StringEndPoint,java.lang.String,java.lang.Exception)>(r1, $r8, $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean hasMore()
    {
        java.io.ByteArrayInputStream $r1;
        int $i0;
        org.eclipse.jetty.io.bio.StringEndPoint r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.bio.StringEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.bio.StringEndPoint: java.io.ByteArrayInputStream _bin>;

        $i0 = virtualinvoke $r1.<java.io.ByteArrayInputStream: int available()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
