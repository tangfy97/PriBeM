public abstract class org.codehaus.jackson.impl.JsonWriteContext extends org.codehaus.jackson.JsonStreamContext
{
    public static final int STATUS_OK_AS_IS;
    public static final int STATUS_OK_AFTER_COMMA;
    public static final int STATUS_OK_AFTER_COLON;
    public static final int STATUS_OK_AFTER_SPACE;
    public static final int STATUS_EXPECT_VALUE;
    public static final int STATUS_EXPECT_NAME;
    protected final org.codehaus.jackson.impl.JsonWriteContext _parent;
    org.codehaus.jackson.impl.JsonWriteContext _childArray;
    org.codehaus.jackson.impl.JsonWriteContext _childObject;

    protected void <init>(int, org.codehaus.jackson.impl.JsonWriteContext)
    {
        int i0;
        org.codehaus.jackson.impl.JsonWriteContext r0, r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.jackson.impl.JsonWriteContext;

        specialinvoke r0.<org.codehaus.jackson.JsonStreamContext: void <init>(int)>(i0);

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childArray> = null;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childObject> = null;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _parent> = r1;

        return;
    }

    public static org.codehaus.jackson.impl.JsonWriteContext createRootContext()
    {
        org.codehaus.jackson.impl.RootWContext $r0;

        $r0 = new org.codehaus.jackson.impl.RootWContext;

        specialinvoke $r0.<org.codehaus.jackson.impl.RootWContext: void <init>()>();

        return $r0;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext()
    {
        int $i1;
        org.codehaus.jackson.impl.JsonWriteContext r0, r2;
        org.codehaus.jackson.impl.ArrayWContext $r3;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r2 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childArray>;

        if r2 != null goto label1;

        $r3 = new org.codehaus.jackson.impl.ArrayWContext;

        specialinvoke $r3.<org.codehaus.jackson.impl.ArrayWContext: void <init>(org.codehaus.jackson.impl.JsonWriteContext)>(r0);

        r2 = $r3;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childArray> = $r3;

        goto label2;

     label1:
        $i1 = (int) -1;

        r2.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = $i1;

     label2:
        return r2;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext()
    {
        int $i1;
        org.codehaus.jackson.impl.JsonWriteContext r0, r2;
        org.codehaus.jackson.impl.ObjectWContext $r3;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r2 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childObject>;

        if r2 != null goto label1;

        $r3 = new org.codehaus.jackson.impl.ObjectWContext;

        specialinvoke $r3.<org.codehaus.jackson.impl.ObjectWContext: void <init>(org.codehaus.jackson.impl.JsonWriteContext)>(r0);

        r2 = $r3;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _childObject> = $r3;

        goto label2;

     label1:
        $i1 = (int) -1;

        r2.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = $i1;

     label2:
        return r2;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext getParent()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0, $r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $r1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _parent>;

        return $r1;
    }

    public abstract int writeFieldName(java.lang.String);

    public abstract int writeValue();

    protected abstract void appendDesc(java.lang.StringBuilder);

    public final java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        org.codehaus.jackson.impl.JsonWriteContext r1;

        r1 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke r1.<org.codehaus.jackson.impl.JsonWriteContext: void appendDesc(java.lang.StringBuilder)>($r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0, $r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext getParent()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_EXPECT_NAME> = 5;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_EXPECT_VALUE> = 4;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_SPACE> = 3;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_COLON> = 2;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_COMMA> = 1;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AS_IS> = 0;

        return;
    }
}
