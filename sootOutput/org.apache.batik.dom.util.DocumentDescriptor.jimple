public class org.apache.batik.dom.util.DocumentDescriptor extends java.lang.Object
{
    protected static final int INITIAL_CAPACITY;
    protected org.apache.batik.dom.util.DocumentDescriptor$Entry[] table;
    protected int count;

    public void <init>()
    {
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] $r1;
        org.apache.batik.dom.util.DocumentDescriptor r0;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.batik.dom.util.DocumentDescriptor$Entry)[101];

        r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table> = $r1;

        return;
    }

    public int getNumberOfElements()
    {
        int i0;
        java.lang.Throwable $r1;
        org.apache.batik.dom.util.DocumentDescriptor r0;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        entermonitor r0;

     label1:
        i0 = r0.<org.apache.batik.dom.util.DocumentDescriptor: int count>;

        exitmonitor r0;

        return i0;

     label2:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public int getLocationLine(org.w3c.dom.Element)
    {
        java.lang.Throwable $r5;
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] $r2, $r3;
        org.w3c.dom.Element r1;
        org.apache.batik.dom.util.DocumentDescriptor r0;
        int $i0, i1, $i2, i3, $i4, i5;
        java.lang.Object $r4;
        org.apache.batik.dom.util.DocumentDescriptor$Entry r6;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        r1 := @parameter0: org.w3c.dom.Element;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i1 = $i0 & 2147483647;

        $r2 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i2 = lengthof $r2;

        i3 = i1 % $i2;

        $r3 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        r6 = $r3[i3];

        goto label5;

     label2:
        $i4 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int hash>;

        if $i4 == i1 goto label3;

        goto label4;

     label3:
        $r4 = virtualinvoke r6.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r4 != r1 goto label4;

        i5 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int locationLine>;

        exitmonitor r0;

        return i5;

     label4:
        r6 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

     label5:
        if r6 != null goto label2;

        exitmonitor r0;

        goto label7;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label6 with label6;
    }

    public int getLocationColumn(org.w3c.dom.Element)
    {
        java.lang.Throwable $r5;
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] $r2, $r3;
        org.w3c.dom.Element r1;
        org.apache.batik.dom.util.DocumentDescriptor r0;
        int $i0, i1, $i2, i3, $i4, i5;
        java.lang.Object $r4;
        org.apache.batik.dom.util.DocumentDescriptor$Entry r6;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        r1 := @parameter0: org.w3c.dom.Element;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i1 = $i0 & 2147483647;

        $r2 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i2 = lengthof $r2;

        i3 = i1 % $i2;

        $r3 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        r6 = $r3[i3];

        goto label5;

     label2:
        $i4 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int hash>;

        if $i4 == i1 goto label3;

        goto label4;

     label3:
        $r4 = virtualinvoke r6.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r4 != r1 goto label4;

        i5 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int locationColumn>;

        exitmonitor r0;

        return i5;

     label4:
        r6 = r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

     label5:
        if r6 != null goto label2;

        exitmonitor r0;

        goto label7;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label6 with label6;
    }

    public void setLocation(org.w3c.dom.Element, int, int)
    {
        java.lang.Throwable $r11;
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] $r2, $r3, $r5, $r7, $r9, $r10;
        org.apache.batik.dom.util.DocumentDescriptor r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12;
        org.apache.batik.dom.util.DocumentDescriptor$Entry $r6, $r8, r12;
        org.w3c.dom.Element r1;
        java.lang.Object $r4;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        r1 := @parameter0: org.w3c.dom.Element;

        i4 := @parameter1: int;

        i9 := @parameter2: int;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i1 = $i0 & 2147483647;

        $r2 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i2 = lengthof $r2;

        i11 = i1 % $i2;

        $r3 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        r12 = $r3[i11];

        goto label5;

     label2:
        $i3 = r12.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int hash>;

        if $i3 == i1 goto label3;

        goto label4;

     label3:
        $r4 = virtualinvoke r12.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r4 != r1 goto label4;

        r12.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int locationLine> = i4;

     label4:
        r12 = r12.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

     label5:
        if r12 != null goto label2;

        $r5 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        i12 = lengthof $r5;

        $i5 = r0.<org.apache.batik.dom.util.DocumentDescriptor: int count>;

        $i6 = $i5 + 1;

        r0.<org.apache.batik.dom.util.DocumentDescriptor: int count> = $i6;

        $i7 = i12 >> 2;

        $i8 = i12 - $i7;

        if $i5 < $i8 goto label6;

        virtualinvoke r0.<org.apache.batik.dom.util.DocumentDescriptor: void rehash()>();

        $r10 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i10 = lengthof $r10;

        i11 = i1 % $i10;

     label6:
        $r6 = new org.apache.batik.dom.util.DocumentDescriptor$Entry;

        $r7 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $r8 = $r7[i11];

        specialinvoke $r6.<org.apache.batik.dom.util.DocumentDescriptor$Entry: void <init>(org.apache.batik.dom.util.DocumentDescriptor,int,org.w3c.dom.Element,int,int,org.apache.batik.dom.util.DocumentDescriptor$Entry)>(r0, i1, r1, i4, i9, $r8);

        $r9 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $r9[i11] = $r6;

        exitmonitor r0;

        goto label8;

     label7:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

     label8:
        return;

        catch java.lang.Throwable from label1 to label7 with label7;
    }

    protected void rehash()
    {
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] r1, $r2, $r4, $r5, $r7;
        org.apache.batik.dom.util.DocumentDescriptor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        org.apache.batik.dom.util.DocumentDescriptor$Entry r3, $r6, r8;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        r1 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i0 = lengthof r1;

        $i1 = $i0 * 2;

        $i2 = $i1 + 1;

        $r2 = newarray (org.apache.batik.dom.util.DocumentDescriptor$Entry)[$i2];

        r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table> = $r2;

        $i3 = lengthof r1;

        i7 = $i3 - 1;

        goto label4;

     label1:
        r8 = r1[i7];

        goto label3;

     label2:
        r3 = r8;

        r8 = r8.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

        $i5 = r3.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int hash>;

        $r4 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i4 = lengthof $r4;

        i6 = $i5 % $i4;

        $r5 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $r6 = $r5[i6];

        r3.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next> = $r6;

        $r7 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $r7[i6] = r3;

     label3:
        if r8 != null goto label2;

        $i9 = (int) -1;

        i7 = i7 + $i9;

     label4:
        if i7 >= 0 goto label1;

        return;
    }

    protected void removeEntry(org.apache.batik.dom.util.DocumentDescriptor$Entry)
    {
        java.lang.Throwable $r7;
        org.apache.batik.dom.util.DocumentDescriptor$Entry[] $r2, $r3, $r6;
        org.apache.batik.dom.util.DocumentDescriptor r0;
        int i0, $i1, i2, $i3, $i4;
        org.apache.batik.dom.util.DocumentDescriptor$Entry r1, $r4, $r5, r8, r9;

        r0 := @this: org.apache.batik.dom.util.DocumentDescriptor;

        r1 := @parameter0: org.apache.batik.dom.util.DocumentDescriptor$Entry;

        entermonitor r0;

     label1:
        i0 = r1.<org.apache.batik.dom.util.DocumentDescriptor$Entry: int hash>;

        $r2 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $i1 = lengthof $r2;

        i2 = i0 % $i1;

        $r3 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        r8 = $r3[i2];

        r9 = null;

        goto label3;

     label2:
        r9 = r8;

        r8 = r8.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

     label3:
        if r8 != r1 goto label2;

        if r8 != null goto label4;

        exitmonitor r0;

        return;

     label4:
        if r9 != null goto label5;

        $r6 = r0.<org.apache.batik.dom.util.DocumentDescriptor: org.apache.batik.dom.util.DocumentDescriptor$Entry[] table>;

        $r5 = r8.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

        $r6[i2] = $r5;

        goto label6;

     label5:
        $r4 = r8.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next>;

        r9.<org.apache.batik.dom.util.DocumentDescriptor$Entry: org.apache.batik.dom.util.DocumentDescriptor$Entry next> = $r4;

     label6:
        $i3 = r0.<org.apache.batik.dom.util.DocumentDescriptor: int count>;

        $i4 = $i3 - 1;

        r0.<org.apache.batik.dom.util.DocumentDescriptor: int count> = $i4;

        exitmonitor r0;

        goto label8;

     label7:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label7 with label7;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.util.DocumentDescriptor: int INITIAL_CAPACITY> = 101;

        return;
    }
}
