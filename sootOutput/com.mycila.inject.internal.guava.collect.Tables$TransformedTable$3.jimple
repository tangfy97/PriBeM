class com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Function
{
    final com.mycila.inject.internal.guava.collect.Tables$TransformedTable this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Tables$TransformedTable)
    {
        com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3 r0;
        com.mycila.inject.internal.guava.collect.Tables$TransformedTable r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Tables$TransformedTable;

        r0.<com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3: com.mycila.inject.internal.guava.collect.Tables$TransformedTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Map apply(java.util.Map)
    {
        com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3 r1;
        java.util.Map r0, $r4;
        com.mycila.inject.internal.guava.collect.Tables$TransformedTable $r2;
        com.mycila.inject.internal.guava.base.Function $r3;

        r1 := @this: com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3;

        r0 := @parameter0: java.util.Map;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3: com.mycila.inject.internal.guava.collect.Tables$TransformedTable this$0>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.Tables$TransformedTable: com.mycila.inject.internal.guava.base.Function function>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.Map transformValues(java.util.Map,com.mycila.inject.internal.guava.base.Function)>(r0, $r3);

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3 r0;
        java.util.Map $r2, $r3;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Tables$TransformedTable$3: java.util.Map apply(java.util.Map)>($r2);

        return $r3;
    }
}
