abstract class org.springframework.util.xml.AbstractStaxContentHandler extends java.lang.Object implements org.xml.sax.ContentHandler
{
    private org.springframework.util.xml.SimpleNamespaceContext namespaceContext;
    private boolean namespaceContextChanged;

    void <init>()
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        org.springframework.util.xml.SimpleNamespaceContext $r1;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.util.xml.SimpleNamespaceContext;

        specialinvoke $r1.<org.springframework.util.xml.SimpleNamespaceContext: void <init>()>();

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext> = $r1;

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 0;

        return;
    }

    public final void startDocument() throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r2;
        org.xml.sax.SAXException $r3;
        org.springframework.util.xml.SimpleNamespaceContext $r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        $r1 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        virtualinvoke $r1.<org.springframework.util.xml.SimpleNamespaceContext: void clear()>();

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 0;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void startDocumentInternal()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle startDocument: ");

        $r5 = virtualinvoke $r2.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected abstract void startDocumentInternal() throws javax.xml.stream.XMLStreamException;

    public final void endDocument() throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r2;
        org.xml.sax.SAXException $r3;
        org.springframework.util.xml.SimpleNamespaceContext $r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        $r1 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        virtualinvoke $r1.<org.springframework.util.xml.SimpleNamespaceContext: void clear()>();

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 0;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void endDocumentInternal()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle startDocument: ");

        $r5 = virtualinvoke $r2.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected abstract void endDocumentInternal() throws javax.xml.stream.XMLStreamException;

    public final void startPrefixMapping(java.lang.String, java.lang.String)
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        org.springframework.util.xml.SimpleNamespaceContext $r3;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        virtualinvoke $r3.<org.springframework.util.xml.SimpleNamespaceContext: void bindNamespaceUri(java.lang.String,java.lang.String)>(r1, r2);

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 1;

        return;
    }

    public final void endPrefixMapping(java.lang.String)
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        org.springframework.util.xml.SimpleNamespaceContext $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        virtualinvoke $r2.<org.springframework.util.xml.SimpleNamespaceContext: void removeBinding(java.lang.String)>(r1);

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 1;

        return;
    }

    public final void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r5;
        org.xml.sax.SAXException $r6;
        org.xml.sax.Attributes r4;
        org.springframework.util.xml.SimpleNamespaceContext $r12;
        java.lang.StringBuilder $r7, $r9;
        java.lang.String r1, r2, $r8, $r10, r11;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: javax.xml.namespace.QName toQName(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged>;

        if $z0 == 0 goto label2;

        $r12 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        goto label3;

     label2:
        $r12 = null;

     label3:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void startElementInternal(javax.xml.namespace.QName,org.xml.sax.Attributes,org.springframework.util.xml.SimpleNamespaceContext)>($r3, r4, $r12);

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 0;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle startElement: ");

        $r8 = virtualinvoke $r5.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r10, $r5);

        throw $r6;

     label6:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    protected abstract void startElementInternal(javax.xml.namespace.QName, org.xml.sax.Attributes, org.springframework.util.xml.SimpleNamespaceContext) throws javax.xml.stream.XMLStreamException;

    public final void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r4;
        org.xml.sax.SAXException $r5;
        org.springframework.util.xml.SimpleNamespaceContext $r11;
        java.lang.StringBuilder $r6, $r8;
        java.lang.String r1, r2, $r7, $r9, r10;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: javax.xml.namespace.QName toQName(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged>;

        if $z0 == 0 goto label2;

        $r11 = r0.<org.springframework.util.xml.AbstractStaxContentHandler: org.springframework.util.xml.SimpleNamespaceContext namespaceContext>;

        goto label3;

     label2:
        $r11 = null;

     label3:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void endElementInternal(javax.xml.namespace.QName,org.springframework.util.xml.SimpleNamespaceContext)>($r3, $r11);

        r0.<org.springframework.util.xml.AbstractStaxContentHandler: boolean namespaceContextChanged> = 0;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle endElement: ");

        $r7 = virtualinvoke $r4.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r9, $r4);

        throw $r5;

     label6:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    protected abstract void endElementInternal(javax.xml.namespace.QName, org.springframework.util.xml.SimpleNamespaceContext) throws javax.xml.stream.XMLStreamException;

    public final void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r2;
        org.xml.sax.SAXException $r3;
        int i0, i1;
        char[] r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void charactersInternal(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle characters: ");

        $r5 = virtualinvoke $r2.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected abstract void charactersInternal(char[], int, int) throws javax.xml.stream.XMLStreamException;

    public final void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r2;
        org.xml.sax.SAXException $r3;
        int i0, i1;
        char[] r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void ignorableWhitespaceInternal(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle ignorableWhitespace:");

        $r5 = virtualinvoke $r2.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected abstract void ignorableWhitespaceInternal(char[], int, int) throws javax.xml.stream.XMLStreamException;

    public final void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r3;
        org.xml.sax.SAXException $r4;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String r1, r2, $r6, $r8;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void processingInstructionInternal(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle processingInstruction: ");

        $r6 = virtualinvoke $r3.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r8, $r3);

        throw $r4;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected abstract void processingInstructionInternal(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;

    public final void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.springframework.util.xml.AbstractStaxContentHandler r0;
        javax.xml.stream.XMLStreamException $r2;
        org.xml.sax.SAXException $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String r1, $r5, $r7;

        r0 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r1 := @parameter0: java.lang.String;

     label1:
        virtualinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void skippedEntityInternal(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle skippedEntity: ");

        $r5 = virtualinvoke $r2.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    protected javax.xml.namespace.QName toQName(java.lang.String, java.lang.String)
    {
        org.springframework.util.xml.AbstractStaxContentHandler r6;
        int $i0, $i1, $i3;
        java.lang.String r0, $r1, $r2, r4;
        javax.xml.namespace.QName $r7, $r8;

        r6 := @this: org.springframework.util.xml.AbstractStaxContentHandler;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r4, r0);

        return $r7;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r4, $r2, $r1);

        return $r8;
    }

    protected abstract void skippedEntityInternal(java.lang.String) throws javax.xml.stream.XMLStreamException;
}
