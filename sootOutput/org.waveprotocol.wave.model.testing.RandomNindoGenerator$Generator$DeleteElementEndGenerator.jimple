class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator extends org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomConstantMutationComponentGenerator
{
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomConstantMutationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)>(r1);

        return;
    }

    int potential()
    {
        int $i1;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator;

        $i1 = (int) -3;

        return $i1;
    }

    org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r2;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r3 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2);

        return $r4;
    }

    void apply()
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r1, $r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator r0;
        org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r2 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doDeleteElementEnd()>();

        $r3 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$DeleteElementEndGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r4 = $r3.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor targetDoc>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor: void deleteElementEnd()>();

        return;
    }
}
