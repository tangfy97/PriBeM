public class org.bouncycastle.crypto.tls.TlsOuputStream extends java.io.OutputStream
{
    private byte[] buf;
    private org.bouncycastle.crypto.tls.TlsProtocolHandler handler;

    void <init>(org.bouncycastle.crypto.tls.TlsProtocolHandler)
    {
        byte[] $r1;
        org.bouncycastle.crypto.tls.TlsProtocolHandler r2;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        r2 := @parameter0: org.bouncycastle.crypto.tls.TlsProtocolHandler;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.bouncycastle.crypto.tls.TlsOuputStream: byte[] buf> = $r1;

        r0.<org.bouncycastle.crypto.tls.TlsOuputStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler> = r2;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;
        int i0, i1;
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r2;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        virtualinvoke $r2.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void writeData(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte $b1;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;
        int i0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: byte[] buf>;

        $b1 = (byte) i0;

        $r1[0] = $b1;

        $r2 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: byte[] buf>;

        virtualinvoke r0.<org.bouncycastle.crypto.tls.TlsOuputStream: void write(byte[],int,int)>($r2, 0, 1);

        return;
    }

    public void cose() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r1;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        virtualinvoke $r1.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void close()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r1;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        virtualinvoke $r1.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void close()>();

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.bouncycastle.crypto.tls.TlsProtocolHandler $r1;
        org.bouncycastle.crypto.tls.TlsOuputStream r0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsOuputStream;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsOuputStream: org.bouncycastle.crypto.tls.TlsProtocolHandler handler>;

        virtualinvoke $r1.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void flush()>();

        return;
    }
}
