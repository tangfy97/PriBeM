public class org.apache.pdfbox.pdmodel.graphics.predictor.Optimum extends org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm
{
    org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter;

    public void <init>()
    {
        org.apache.pdfbox.pdmodel.graphics.predictor.None $r2;
        org.apache.pdfbox.pdmodel.graphics.predictor.Up $r4;
        org.apache.pdfbox.pdmodel.graphics.predictor.Sub $r3;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] $r1;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;
        org.apache.pdfbox.pdmodel.graphics.predictor.Paeth $r6;
        org.apache.pdfbox.pdmodel.graphics.predictor.Average $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void <init>()>();

        $r1 = newarray (org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm)[5];

        $r2 = new org.apache.pdfbox.pdmodel.graphics.predictor.None;

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.predictor.None: void <init>()>();

        $r1[0] = $r2;

        $r3 = new org.apache.pdfbox.pdmodel.graphics.predictor.Sub;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.predictor.Sub: void <init>()>();

        $r1[1] = $r3;

        $r4 = new org.apache.pdfbox.pdmodel.graphics.predictor.Up;

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.predictor.Up: void <init>()>();

        $r1[2] = $r4;

        $r5 = new org.apache.pdfbox.pdmodel.graphics.predictor.Average;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.graphics.predictor.Average: void <init>()>();

        $r1[3] = $r5;

        $r6 = new org.apache.pdfbox.pdmodel.graphics.predictor.Paeth;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.graphics.predictor.Paeth: void <init>()>();

        $r1[4] = $r6;

        r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter> = $r1;

        return;
    }

    public void checkBufsiz(byte[], byte[])
    {
        byte[] r0, r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r13, $r26;
        java.lang.IllegalArgumentException $r3, $r14;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        r0 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $i2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        $i3 = $i1 * $i2;

        $i4 = $i3 + 1;

        $i5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        $i6 = $i4 * $i5;

        if $i0 == $i6 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filtered.length != (width*bpp + 1) * height, ");

        $i17 = lengthof r0;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i18 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $i19 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        $i20 = $i18 * $i19;

        $i21 = $i20 + 1;

        $i22 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        $i23 = $i21 * $i22;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("w,h,bpp=");

        $i24 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i26 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r14;

     label1:
        $i7 = lengthof r2;

        $i8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $i9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        $i10 = $i8 * $i9;

        $i11 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        $i12 = $i10 * $i11;

        if $i7 == $i12 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("raw.length != width * height * bpp, raw.length=");

        $i13 = lengthof r2;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" w,h,bpp=");

        $i14 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i15 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i16 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label2:
        return;
    }

    public void encodeLine(byte[], byte[], int, int, int, int)
    {
        java.lang.UnsupportedOperationException $r0;
        byte[] r2, r3;
        int i0, i1, i2, i3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        r2 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("encodeLine");

        throw $r0;
    }

    public void decodeLine(byte[], byte[], int, int, int, int)
    {
        java.lang.UnsupportedOperationException $r0;
        byte[] r2, r3;
        int i0, i1, i2, i3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        r2 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("decodeLine");

        throw $r0;
    }

    public void encode(byte[], byte[])
    {
        byte[] r1, r2;
        java.lang.UnsupportedOperationException $r3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        r2 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: void checkBufsiz(byte[],byte[])>(r1, r2);

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("encode");

        throw $r3;
    }

    public void setBpp(int)
    {
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] $r1, $r2;
        int i0, $i1, i2;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm $r3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setBpp(int)>(i0);

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $i1 = lengthof $r1;

        if i2 >= $i1 goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setBpp(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setHeight(int)
    {
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] $r1, $r2;
        int i0, $i1, i2;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm $r3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setHeight(int)>(i0);

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $i1 = lengthof $r1;

        if i2 >= $i1 goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setHeight(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setWidth(int)
    {
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] $r1, $r2;
        int i0, $i1, i2;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm $r3;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setWidth(int)>(i0);

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $i1 = lengthof $r1;

        if i2 >= $i1 goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $r3 = $r2[i2];

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void setWidth(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void decode(byte[], byte[])
    {
        byte[] r1, r2;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm r4;
        byte $b6;
        org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] $r3;
        int $i0, $i1, i2, i3, $i4, $i5, $i7, i8, $i9, i10, $i11;
        org.apache.pdfbox.pdmodel.graphics.predictor.Optimum r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.predictor.Optimum;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: void checkBufsiz(byte[],byte[])>(r1, r2);

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getWidth()>();

        $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getBpp()>();

        i2 = $i0 * $i1;

        i3 = i2 + 1;

        i10 = 0;

     label1:
        $i4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: int getHeight()>();

        if i10 >= $i4 goto label2;

        $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.predictor.Optimum: org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm[] filter>;

        $i5 = i10 * i3;

        $b6 = r1[$i5];

        $i11 = (int) $b6;

        r4 = $r3[$i11];

        $i7 = i10 * i3;

        i8 = $i7 + 1;

        $i9 = i10 * i2;

        virtualinvoke r4.<org.apache.pdfbox.pdmodel.graphics.predictor.PredictorAlgorithm: void decodeLine(byte[],byte[],int,int,int,int)>(r1, r2, i3, i8, i2, $i9);

        i10 = i10 + 1;

        goto label1;

     label2:
        return;
    }
}
