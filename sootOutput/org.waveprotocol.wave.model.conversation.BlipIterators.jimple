public final class org.waveprotocol.wave.model.conversation.BlipIterators extends java.lang.Object
{
    private static final org.waveprotocol.wave.model.util.Predicate ALL;

    public static java.lang.Iterable breadthFirst(org.waveprotocol.wave.model.conversation.Conversation)
    {
        org.waveprotocol.wave.model.conversation.Conversation r0;
        java.lang.Iterable $r2;
        org.waveprotocol.wave.model.conversation.ConversationThread $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.conversation.Conversation;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.Conversation: org.waveprotocol.wave.model.conversation.ConversationThread getRootThread()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.BlipIterators: java.lang.Iterable breadthFirst(org.waveprotocol.wave.model.conversation.ConversationThread)>($r1);

        return $r2;
    }

    public static java.lang.Iterable breadthFirst(org.waveprotocol.wave.model.conversation.ConversationThread)
    {
        org.waveprotocol.wave.model.conversation.BlipIterators$2 $r0;
        org.waveprotocol.wave.model.conversation.ConversationThread r1;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        $r0 = new org.waveprotocol.wave.model.conversation.BlipIterators$2;

        specialinvoke $r0.<org.waveprotocol.wave.model.conversation.BlipIterators$2: void <init>(org.waveprotocol.wave.model.conversation.ConversationThread)>(r1);

        return $r0;
    }

    private void <init>()
    {
        org.waveprotocol.wave.model.conversation.BlipIterators r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.BlipIterators;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.waveprotocol.wave.model.util.Predicate access$000()
    {
        org.waveprotocol.wave.model.util.Predicate $r0;

        $r0 = <org.waveprotocol.wave.model.conversation.BlipIterators: org.waveprotocol.wave.model.util.Predicate ALL>;

        return $r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.conversation.BlipIterators$1 $r0;

        $r0 = new org.waveprotocol.wave.model.conversation.BlipIterators$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.conversation.BlipIterators$1: void <init>()>();

        <org.waveprotocol.wave.model.conversation.BlipIterators: org.waveprotocol.wave.model.util.Predicate ALL> = $r0;

        return;
    }
}
