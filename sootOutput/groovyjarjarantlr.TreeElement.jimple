class groovyjarjarantlr.TreeElement extends groovyjarjarantlr.AlternativeBlock
{
    groovyjarjarantlr.GrammarAtom root;

    public void <init>(groovyjarjarantlr.Grammar, groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.TreeElement r0;
        groovyjarjarantlr.Grammar r1;
        groovyjarjarantlr.Token r2;

        r0 := @this: groovyjarjarantlr.TreeElement;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        specialinvoke r0.<groovyjarjarantlr.AlternativeBlock: void <init>(groovyjarjarantlr.Grammar,groovyjarjarantlr.Token,boolean)>(r1, r2, 0);

        return;
    }

    public void generate()
    {
        groovyjarjarantlr.TreeElement r0;
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CodeGenerator $r2;

        r0 := @this: groovyjarjarantlr.TreeElement;

        $r1 = r0.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.CodeGenerator generator>;

        virtualinvoke $r2.<groovyjarjarantlr.CodeGenerator: void gen(groovyjarjarantlr.TreeElement)>(r0);

        return;
    }

    public groovyjarjarantlr.Lookahead look(int)
    {
        groovyjarjarantlr.Lookahead $r3;
        int i0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r2;
        groovyjarjarantlr.TreeElement r0;
        groovyjarjarantlr.Grammar $r1;

        r0 := @this: groovyjarjarantlr.TreeElement;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r3 = interfaceinvoke $r2.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.TreeElement)>(i0, r0);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r8, $r9, $r10, $r12, $r13, $r14;
        groovyjarjarantlr.TreeElement r2;
        java.lang.String $r11, r15;
        groovyjarjarantlr.collections.impl.Vector $r5;
        groovyjarjarantlr.GrammarAtom $r3;
        groovyjarjarantlr.Alternative r7;
        java.lang.Object $r6;
        groovyjarjarantlr.AlternativeElement r16;

        r2 := @this: groovyjarjarantlr.TreeElement;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" #(");

        $r3 = r2.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.GrammarAtom root>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        r15 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r2.<groovyjarjarantlr.TreeElement: groovyjarjarantlr.collections.impl.Vector alternatives>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(0);

        r7 = (groovyjarjarantlr.Alternative) $r6;

        r16 = r7.<groovyjarjarantlr.Alternative: groovyjarjarantlr.AlternativeElement head>;

     label1:
        if r16 == null goto label2;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r16);

        r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        r16 = r16.<groovyjarjarantlr.AlternativeElement: groovyjarjarantlr.AlternativeElement next>;

        goto label1;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }
}
