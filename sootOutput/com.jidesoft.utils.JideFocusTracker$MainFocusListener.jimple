class com.jidesoft.utils.JideFocusTracker$MainFocusListener extends java.lang.Object implements java.awt.event.FocusListener
{
    final com.jidesoft.utils.JideFocusTracker this$0;

    void <init>(com.jidesoft.utils.JideFocusTracker)
    {
        com.jidesoft.utils.JideFocusTracker$MainFocusListener r0;
        com.jidesoft.utils.JideFocusTracker r1;

        r0 := @this: com.jidesoft.utils.JideFocusTracker$MainFocusListener;

        r1 := @parameter0: com.jidesoft.utils.JideFocusTracker;

        r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void focusGained(java.awt.event.FocusEvent)
    {
        java.awt.event.FocusListener $r2, $r8;
        com.jidesoft.utils.JideFocusTracker$MainFocusListener r0;
        java.awt.Component $r6;
        java.awt.event.FocusEvent r3;
        java.lang.Object $r4;
        com.jidesoft.utils.JideFocusTracker $r1, $r5, $r7, $r9;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker$MainFocusListener;

        r3 := @parameter0: java.awt.event.FocusEvent;

        $r1 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r2 = $r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r3.<java.awt.event.FocusEvent: java.lang.Object getSource()>();

        $r5 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r6 = $r5.<com.jidesoft.utils.JideFocusTracker: java.awt.Component lastFocus>;

        if $r4 != $r6 goto label1;

        $r9 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $z0 = virtualinvoke $r9.<com.jidesoft.utils.JideFocusTracker: boolean isRepeating()>();

        if $z0 == 0 goto label2;

     label1:
        $r7 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r8 = $r7.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        interfaceinvoke $r8.<java.awt.event.FocusListener: void focusGained(java.awt.event.FocusEvent)>(r3);

     label2:
        return;
    }

    public void focusLost(java.awt.event.FocusEvent)
    {
        java.awt.event.FocusListener $r2, $r8;
        com.jidesoft.utils.JideFocusTracker$MainFocusListener r0;
        java.awt.Component $r6;
        java.awt.event.FocusEvent r3;
        java.lang.Object $r4;
        com.jidesoft.utils.JideFocusTracker $r1, $r5, $r7, $r9;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.JideFocusTracker$MainFocusListener;

        r3 := @parameter0: java.awt.event.FocusEvent;

        $r1 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r2 = $r1.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r3.<java.awt.event.FocusEvent: java.lang.Object getSource()>();

        $r5 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r6 = $r5.<com.jidesoft.utils.JideFocusTracker: java.awt.Component lastFocus>;

        if $r4 != $r6 goto label1;

        $r9 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $z0 = virtualinvoke $r9.<com.jidesoft.utils.JideFocusTracker: boolean isRepeating()>();

        if $z0 == 0 goto label2;

     label1:
        $r7 = r0.<com.jidesoft.utils.JideFocusTracker$MainFocusListener: com.jidesoft.utils.JideFocusTracker this$0>;

        $r8 = $r7.<com.jidesoft.utils.JideFocusTracker: java.awt.event.FocusListener listenerMultiCast>;

        interfaceinvoke $r8.<java.awt.event.FocusListener: void focusLost(java.awt.event.FocusEvent)>(r3);

     label2:
        return;
    }
}
