class org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2 extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    final org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument this$0;

    void <init>(org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument)
    {
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument r1;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument;

        r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.operation.SilentOperationSink $r2, $r4;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument $r1, $r3;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2 r0;
        org.waveprotocol.wave.model.document.operation.DocOp r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2;

        r5 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: org.waveprotocol.wave.model.operation.SilentOperationSink access$100(org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Output sink not yet initialized");

        $r3 = r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: org.waveprotocol.wave.model.operation.SilentOperationSink access$100(org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument)>($r3);

        interfaceinvoke $r4.<org.waveprotocol.wave.model.operation.SilentOperationSink: void consume(org.waveprotocol.wave.model.operation.Operation)>(r5);

        return;
    }

    public volatile void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOp) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$2: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
