class org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream extends java.io.FilterInputStream
{
    private boolean addDummyByte;

    private void <init>(java.io.InputStream)
    {
        org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: boolean addDummyByte> = 1;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream r0;
        int $i0, i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        i1 = $i0;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $z0 = r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: boolean addDummyByte>;

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: boolean addDummyByte> = 0;

        i1 = 0;

     label1:
        return i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream r0;
        int i0, i1, $i2, $i4;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i4 = (int) -1;

        if $i2 != $i4 goto label1;

        $z0 = r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: boolean addDummyByte>;

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: boolean addDummyByte> = 0;

        r1[i0] = 0;

        return 1;

     label1:
        return $i2;
    }

    void <init>(java.io.InputStream, org.apache.commons.compress.archivers.sevenz.Coders$1)
    {
        org.apache.commons.compress.archivers.sevenz.Coders$1 r2;
        org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.commons.compress.archivers.sevenz.Coders$1;

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }
}
