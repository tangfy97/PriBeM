public abstract class org.springframework.web.context.support.WebApplicationContextUtils extends java.lang.Object
{
    private static final boolean jsfPresent;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        boolean $z0;

        $r0 = class "Lorg/springframework/web/context/request/RequestContextHolder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("javax.faces.context.FacesContext", $r1);

        <org.springframework.web.context.support.WebApplicationContextUtils: boolean jsfPresent> = $z0;

        return;
    }

    public void <init>()
    {
        org.springframework.web.context.support.WebApplicationContextUtils r0;

        r0 := @this: org.springframework.web.context.support.WebApplicationContextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.servlet.ServletContext) throws java.lang.IllegalStateException
    {
        org.springframework.web.context.WebApplicationContext $r1;
        java.lang.IllegalStateException $r2;
        javax.servlet.ServletContext r0;

        r0 := @parameter0: javax.servlet.ServletContext;

        $r1 = staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>(r0);

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No WebApplicationContext found: no ContextLoaderListener registered?");

        throw $r2;

     label1:
        return $r1;
    }

    public static org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)
    {
        org.springframework.web.context.WebApplicationContext $r2;
        javax.servlet.ServletContext r0;
        java.lang.String $r1;

        r0 := @parameter0: javax.servlet.ServletContext;

        $r1 = <org.springframework.web.context.WebApplicationContext: java.lang.String ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE>;

        $r2 = staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public static org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext, java.lang.String)
    {
        java.lang.IllegalStateException $r4, $r8;
        java.lang.Error $r10;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.web.context.WebApplicationContext $r3;
        java.lang.RuntimeException $r11;
        java.lang.Exception $r9;
        javax.servlet.ServletContext r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6;

        r0 := @parameter0: javax.servlet.ServletContext;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "ServletContext must not be null");

        $r2 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label2;

        $r11 = (java.lang.RuntimeException) $r2;

        throw $r11;

     label2:
        $z1 = $r2 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r10 = (java.lang.Error) $r2;

        throw $r10;

     label3:
        $z2 = $r2 instanceof java.lang.Exception;

        if $z2 == 0 goto label4;

        $r8 = new java.lang.IllegalStateException;

        $r9 = (java.lang.Exception) $r2;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

     label4:
        $z3 = $r2 instanceof org.springframework.web.context.WebApplicationContext;

        if $z3 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Context attribute is not of type WebApplicationContext: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label5:
        $r3 = (org.springframework.web.context.WebApplicationContext) $r2;

        return $r3;
    }

    public static void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r0;

        r0 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>(r0, null);

        return;
    }

    public static void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)
    {
        org.springframework.web.context.request.SessionScope $r2, $r3;
        org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory $r6;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r0;
        org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory $r7;
        org.springframework.web.context.support.ServletContextScope $r8;
        org.springframework.web.context.request.RequestScope $r1;
        javax.servlet.ServletContext r4;
        java.lang.Class $r9;
        org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory $r5;
        java.lang.String $r10;
        boolean $z0;

        r0 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        r4 := @parameter1: javax.servlet.ServletContext;

        $r1 = new org.springframework.web.context.request.RequestScope;

        specialinvoke $r1.<org.springframework.web.context.request.RequestScope: void <init>()>();

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerScope(java.lang.String,org.springframework.beans.factory.config.Scope)>("request", $r1);

        $r2 = new org.springframework.web.context.request.SessionScope;

        specialinvoke $r2.<org.springframework.web.context.request.SessionScope: void <init>(boolean)>(0);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerScope(java.lang.String,org.springframework.beans.factory.config.Scope)>("session", $r2);

        $r3 = new org.springframework.web.context.request.SessionScope;

        specialinvoke $r3.<org.springframework.web.context.request.SessionScope: void <init>(boolean)>(1);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerScope(java.lang.String,org.springframework.beans.factory.config.Scope)>("globalSession", $r3);

        if r4 == null goto label1;

        $r8 = new org.springframework.web.context.support.ServletContextScope;

        specialinvoke $r8.<org.springframework.web.context.support.ServletContextScope: void <init>(javax.servlet.ServletContext)>(r4);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerScope(java.lang.String,org.springframework.beans.factory.config.Scope)>("application", $r8);

        $r9 = class "Lorg/springframework/web/context/support/ServletContextScope;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r4.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>($r10, $r8);

     label1:
        $r5 = new org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory;

        specialinvoke $r5.<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: void <init>(org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory)>(null);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerResolvableDependency(java.lang.Class,java.lang.Object)>(class "Ljavax/servlet/ServletRequest;", $r5);

        $r6 = new org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory;

        specialinvoke $r6.<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: void <init>(org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory)>(null);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerResolvableDependency(java.lang.Class,java.lang.Object)>(class "Ljavax/servlet/http/HttpSession;", $r6);

        $r7 = new org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory;

        specialinvoke $r7.<org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: void <init>(org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory)>(null);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerResolvableDependency(java.lang.Class,java.lang.Object)>(class "Lorg/springframework/web/context/request/WebRequest;", $r7);

        $z0 = <org.springframework.web.context.support.WebApplicationContextUtils: boolean jsfPresent>;

        if $z0 == 0 goto label2;

        staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar: void registerFacesDependencies(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>(r0);

     label2:
        return;
    }

    public static void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)
    {
        javax.servlet.ServletContext r1;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r0;

        r0 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        r1 := @parameter1: javax.servlet.ServletContext;

        staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext,javax.servlet.ServletConfig)>(r0, r1, null);

        return;
    }

    public static void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext, javax.servlet.ServletConfig)
    {
        java.util.Enumeration $r5, $r10, $r13;
        java.util.HashMap $r3, $r8;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r2;
        java.util.Map $r4, $r9;
        java.lang.String $r12, $r15, r16, r17, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.servlet.ServletConfig r1;
        javax.servlet.ServletContext r0;
        java.lang.Object $r6, $r7, $r11, $r14;

        r2 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        r0 := @parameter1: javax.servlet.ServletContext;

        r1 := @parameter2: javax.servlet.ServletConfig;

        if r0 == null goto label01;

        $z4 = interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsBean(java.lang.String)>("servletContext");

        if $z4 != 0 goto label01;

        interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerSingleton(java.lang.String,java.lang.Object)>("servletContext", r0);

     label01:
        if r1 == null goto label02;

        $z3 = interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsBean(java.lang.String)>("servletConfig");

        if $z3 != 0 goto label02;

        interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerSingleton(java.lang.String,java.lang.Object)>("servletConfig", r1);

     label02:
        $z5 = interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsBean(java.lang.String)>("contextParameters");

        if $z5 != 0 goto label09;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        if r0 == null goto label05;

        $r13 = interfaceinvoke r0.<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>();

        goto label04;

     label03:
        $r14 = interfaceinvoke $r13.<java.util.Enumeration: java.lang.Object nextElement()>();

        r16 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>(r16);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r15);

     label04:
        $z2 = interfaceinvoke $r13.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 != 0 goto label03;

     label05:
        if r1 == null goto label08;

        $r10 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>();

        goto label07;

     label06:
        $r11 = interfaceinvoke $r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        r17 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>(r17);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r12);

     label07:
        $z1 = interfaceinvoke $r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label06;

     label08:
        $r9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r8);

        interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerSingleton(java.lang.String,java.lang.Object)>("contextParameters", $r9);

     label09:
        $z6 = interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean containsBean(java.lang.String)>("contextAttributes");

        if $z6 != 0 goto label13;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        if r0 == null goto label12;

        $r5 = interfaceinvoke r0.<javax.servlet.ServletContext: java.util.Enumeration getAttributeNames()>();

        goto label11;

     label10:
        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r18 = (java.lang.String) $r6;

        $r7 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>(r18);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r7);

     label11:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label10;

     label12:
        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerSingleton(java.lang.String,java.lang.Object)>("contextAttributes", $r4);

     label13:
        return;
    }

    private static org.springframework.web.context.request.ServletRequestAttributes currentRequestAttributes()
    {
        java.lang.IllegalStateException $r2;
        org.springframework.web.context.request.RequestAttributes $r0;
        org.springframework.web.context.request.ServletRequestAttributes $r1;
        boolean $z0;

        $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>();

        $z0 = $r0 instanceof org.springframework.web.context.request.ServletRequestAttributes;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Current request is not a servlet request");

        throw $r2;

     label1:
        $r1 = (org.springframework.web.context.request.ServletRequestAttributes) $r0;

        return $r1;
    }

    static org.springframework.web.context.request.ServletRequestAttributes access$0()
    {
        org.springframework.web.context.request.ServletRequestAttributes $r0;

        $r0 = staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.request.ServletRequestAttributes currentRequestAttributes()>();

        return $r0;
    }
}
