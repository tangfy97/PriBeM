class org.apache.jena.riot.lang.LabelToNode$Alloc extends java.lang.Object implements org.apache.jena.riot.system.MapWithScope$Allocator
{
    final org.apache.jena.riot.lang.BlankNodeAllocator alloc;

    void <init>(org.apache.jena.riot.lang.BlankNodeAllocator)
    {
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;
        org.apache.jena.riot.lang.BlankNodeAllocator r1;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        r1 := @parameter0: org.apache.jena.riot.lang.BlankNodeAllocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: org.apache.jena.riot.lang.BlankNodeAllocator alloc> = r1;

        return;
    }

    public com.hp.hpl.jena.graph.Node alloc(com.hp.hpl.jena.graph.Node, java.lang.String)
    {
        org.apache.jena.riot.lang.BlankNodeAllocator $r2;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r3, r4;
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: org.apache.jena.riot.lang.BlankNodeAllocator alloc>;

        $r3 = interfaceinvoke $r2.<org.apache.jena.riot.lang.BlankNodeAllocator: com.hp.hpl.jena.graph.Node alloc(java.lang.String)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.graph.Node create()
    {
        com.hp.hpl.jena.graph.Node $r2;
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;
        org.apache.jena.riot.lang.BlankNodeAllocator $r1;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        $r1 = r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: org.apache.jena.riot.lang.BlankNodeAllocator alloc>;

        $r2 = interfaceinvoke $r1.<org.apache.jena.riot.lang.BlankNodeAllocator: com.hp.hpl.jena.graph.Node create()>();

        return $r2;
    }

    public void reset()
    {
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;
        org.apache.jena.riot.lang.BlankNodeAllocator $r1;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        $r1 = r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: org.apache.jena.riot.lang.BlankNodeAllocator alloc>;

        interfaceinvoke $r1.<org.apache.jena.riot.lang.BlankNodeAllocator: void reset()>();

        return;
    }

    public volatile java.lang.Object create()
    {
        com.hp.hpl.jena.graph.Node $r1;
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: com.hp.hpl.jena.graph.Node create()>();

        return $r1;
    }

    public volatile java.lang.Object alloc(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        java.lang.String $r3;
        com.hp.hpl.jena.graph.Node $r4, $r5;
        org.apache.jena.riot.lang.LabelToNode$Alloc r0;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$Alloc;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.hp.hpl.jena.graph.Node) r1;

        $r3 = (java.lang.String) r2;

        $r5 = virtualinvoke r0.<org.apache.jena.riot.lang.LabelToNode$Alloc: com.hp.hpl.jena.graph.Node alloc(com.hp.hpl.jena.graph.Node,java.lang.String)>($r4, $r3);

        return $r5;
    }
}
