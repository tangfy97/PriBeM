class com.jidesoft.plaf.metal.MetalBumps extends java.lang.Object implements javax.swing.Icon
{
    static final java.awt.Color ALPHA;
    protected int xBumps;
    protected int yBumps;
    protected java.awt.Color topColor;
    protected java.awt.Color shadowColor;
    protected java.awt.Color backColor;
    protected static java.util.Vector buffers;
    protected com.jidesoft.plaf.metal.BumpBuffer buffer;

    public void <init>(java.awt.Dimension)
    {
        java.awt.Dimension r1;
        int $i0, $i1;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        r1 := @parameter0: java.awt.Dimension;

        $i1 = r1.<java.awt.Dimension: int width>;

        $i0 = r1.<java.awt.Dimension: int height>;

        specialinvoke r0.<com.jidesoft.plaf.metal.MetalBumps: void <init>(int,int)>($i1, $i0);

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        javax.swing.plaf.ColorUIResource $r1, $r2, $r3;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <javax.swing.plaf.metal.MetalLookAndFeel: javax.swing.plaf.ColorUIResource getPrimaryControlHighlight()>();

        $r2 = staticinvoke <javax.swing.plaf.metal.MetalLookAndFeel: javax.swing.plaf.ColorUIResource getPrimaryControlDarkShadow()>();

        $r3 = staticinvoke <javax.swing.plaf.metal.MetalLookAndFeel: javax.swing.plaf.ColorUIResource getPrimaryControlShadow()>();

        specialinvoke r0.<com.jidesoft.plaf.metal.MetalBumps: void <init>(int,int,java.awt.Color,java.awt.Color,java.awt.Color)>(i0, i1, $r1, $r2, $r3);

        return;
    }

    public void <init>(int, int, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2, r3;
        int i0, i1;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Color;

        r2 := @parameter3: java.awt.Color;

        r3 := @parameter4: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.jidesoft.plaf.metal.MetalBumps: void setBumpArea(int,int)>(i0, i1);

        virtualinvoke r0.<com.jidesoft.plaf.metal.MetalBumps: void setBumpColors(java.awt.Color,java.awt.Color,java.awt.Color)>(r1, r2, r3);

        return;
    }

    private com.jidesoft.plaf.metal.BumpBuffer getBuffer(java.awt.GraphicsConfiguration, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color $r6, $r7, $r8, r12, r13, r14;
        java.util.Enumeration $r3;
        java.util.Vector $r2, $r9;
        com.jidesoft.plaf.metal.MetalBumps r0;
        boolean $z0, $z1, $z2;
        java.awt.GraphicsConfiguration r5;
        com.jidesoft.plaf.metal.BumpBuffer $r1, $r4, r11, $r15, $r16, r17;
        java.lang.Object $r10;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        r5 := @parameter0: java.awt.GraphicsConfiguration;

        r12 := @parameter1: java.awt.Color;

        r13 := @parameter2: java.awt.Color;

        r14 := @parameter3: java.awt.Color;

        $r1 = r0.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        if $r1 == null goto label1;

        $r15 = r0.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        $z1 = virtualinvoke $r15.<com.jidesoft.plaf.metal.BumpBuffer: boolean hasSameConfiguration(java.awt.GraphicsConfiguration,java.awt.Color,java.awt.Color,java.awt.Color)>(r5, r12, r13, r14);

        if $z1 == 0 goto label1;

        $r16 = r0.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        return $r16;

     label1:
        r17 = null;

        $r2 = <com.jidesoft.plaf.metal.MetalBumps: java.util.Vector buffers>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label2:
        $z2 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label4;

        $r10 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r11 = (com.jidesoft.plaf.metal.BumpBuffer) $r10;

        $z0 = virtualinvoke r11.<com.jidesoft.plaf.metal.BumpBuffer: boolean hasSameConfiguration(java.awt.GraphicsConfiguration,java.awt.Color,java.awt.Color,java.awt.Color)>(r5, r12, r13, r14);

        if $z0 == 0 goto label3;

        r17 = r11;

        goto label4;

     label3:
        goto label2;

     label4:
        if r17 != null goto label5;

        $r4 = new com.jidesoft.plaf.metal.BumpBuffer;

        $r8 = r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color topColor>;

        $r7 = r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color shadowColor>;

        $r6 = r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color backColor>;

        specialinvoke $r4.<com.jidesoft.plaf.metal.BumpBuffer: void <init>(java.awt.GraphicsConfiguration,java.awt.Color,java.awt.Color,java.awt.Color)>(r5, $r8, $r7, $r6);

        r17 = $r4;

        $r9 = <com.jidesoft.plaf.metal.MetalBumps: java.util.Vector buffers>;

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r4);

     label5:
        return r17;
    }

    public void setBumpArea(java.awt.Dimension)
    {
        java.awt.Dimension r1;
        int $i0, $i1;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        r1 := @parameter0: java.awt.Dimension;

        $i1 = r1.<java.awt.Dimension: int width>;

        $i0 = r1.<java.awt.Dimension: int height>;

        virtualinvoke r0.<com.jidesoft.plaf.metal.MetalBumps: void setBumpArea(int,int)>($i1, $i0);

        return;
    }

    public void setBumpArea(int, int)
    {
        int i0, $i1, i2, $i3;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = i0 / 2;

        r0.<com.jidesoft.plaf.metal.MetalBumps: int xBumps> = $i1;

        $i3 = i2 / 2;

        r0.<com.jidesoft.plaf.metal.MetalBumps: int yBumps> = $i3;

        return;
    }

    public void setBumpColors(java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2, r3, $r4;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color topColor> = r1;

        r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color shadowColor> = r2;

        if r3 != null goto label1;

        $r4 = <com.jidesoft.plaf.metal.MetalBumps: java.awt.Color ALPHA>;

        r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color backColor> = $r4;

        goto label2;

     label1:
        r0.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color backColor> = r3;

     label2:
        return;
    }

    public void paintIcon(java.awt.Component, java.awt.Graphics, int, int)
    {
        java.awt.Color $r2, $r3, $r4;
        java.awt.Graphics2D $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        boolean $z0;
        com.jidesoft.plaf.metal.MetalBumps r1;
        java.awt.GraphicsConfiguration $r14;
        java.awt.Image $r11;
        java.awt.Component r13;
        com.jidesoft.plaf.metal.BumpBuffer $r5, $r6, $r8, $r10;
        java.awt.Dimension $r7, $r9;
        java.awt.Graphics r0;

        r1 := @this: com.jidesoft.plaf.metal.MetalBumps;

        r13 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i12 := @parameter2: int;

        i13 := @parameter3: int;

        $z0 = r0 instanceof java.awt.Graphics2D;

        if $z0 == 0 goto label1;

        $r12 = (java.awt.Graphics2D) r0;

        $r14 = virtualinvoke $r12.<java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>();

        goto label2;

     label1:
        $r14 = null;

     label2:
        $r4 = r1.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color topColor>;

        $r3 = r1.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color shadowColor>;

        $r2 = r1.<com.jidesoft.plaf.metal.MetalBumps: java.awt.Color backColor>;

        $r5 = specialinvoke r1.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer getBuffer(java.awt.GraphicsConfiguration,java.awt.Color,java.awt.Color,java.awt.Color)>($r14, $r4, $r3, $r2);

        r1.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer> = $r5;

        $r6 = r1.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        $r7 = virtualinvoke $r6.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Dimension getImageSize()>();

        $i8 = $r7.<java.awt.Dimension: int width>;

        $r8 = r1.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        $r9 = virtualinvoke $r8.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Dimension getImageSize()>();

        $i9 = $r9.<java.awt.Dimension: int height>;

        $i0 = virtualinvoke r1.<com.jidesoft.plaf.metal.MetalBumps: int getIconWidth()>();

        $i1 = virtualinvoke r1.<com.jidesoft.plaf.metal.MetalBumps: int getIconHeight()>();

        $i10 = i12 + $i0;

        $i11 = i13 + $i1;

     label3:
        if i13 >= $i11 goto label6;

        $i2 = $i11 - i13;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i9);

        i14 = i12;

     label4:
        if i14 >= $i10 goto label5;

        $i4 = $i10 - i14;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i8);

        $r10 = r1.<com.jidesoft.plaf.metal.MetalBumps: com.jidesoft.plaf.metal.BumpBuffer buffer>;

        $r11 = virtualinvoke $r10.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Image getImage()>();

        $i7 = i14 + $i5;

        $i6 = i13 + $i3;

        virtualinvoke r0.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r11, i14, i13, $i7, $i6, 0, 0, $i5, $i3, null);

        i14 = i14 + $i8;

        goto label4;

     label5:
        i13 = i13 + $i9;

        goto label3;

     label6:
        return;
    }

    public int getIconWidth()
    {
        int $i0, $i1;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        $i0 = r0.<com.jidesoft.plaf.metal.MetalBumps: int xBumps>;

        $i1 = $i0 * 2;

        return $i1;
    }

    public int getIconHeight()
    {
        int $i0, $i1;
        com.jidesoft.plaf.metal.MetalBumps r0;

        r0 := @this: com.jidesoft.plaf.metal.MetalBumps;

        $i0 = r0.<com.jidesoft.plaf.metal.MetalBumps: int yBumps>;

        $i1 = $i0 * 2;

        return $i1;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;
        java.util.Vector $r1;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0);

        <com.jidesoft.plaf.metal.MetalBumps: java.awt.Color ALPHA> = $r0;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        <com.jidesoft.plaf.metal.MetalBumps: java.util.Vector buffers> = $r1;

        return;
    }
}
