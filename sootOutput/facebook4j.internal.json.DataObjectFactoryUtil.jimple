public class facebook4j.internal.json.DataObjectFactoryUtil extends java.lang.Object
{
    private static final java.lang.reflect.Method CLEAR_THREAD_LOCAL_MAP;
    private static final java.lang.reflect.Method REGISTER_JSON_OBJECT;

    private void <init>()
    {
        java.lang.AssertionError $r1;
        facebook4j.internal.json.DataObjectFactoryUtil r0;

        r0 := @this: facebook4j.internal.json.DataObjectFactoryUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("not intended to be instantiated.");

        throw $r1;
    }

    public static void clearThreadLocalMap()
    {
        java.lang.IllegalAccessException $r4;
        java.lang.Object[] $r0;
        java.lang.AssertionError $r3, $r5;
        java.lang.reflect.Method $r1;
        java.lang.reflect.InvocationTargetException $r2;

     label1:
        $r1 = <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.reflect.Method CLEAR_THREAD_LOCAL_MAP>;

        $r0 = newarray (java.lang.Object)[0];

        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r0);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public static java.lang.Object registerJSONObject(java.lang.Object, java.lang.Object)
    {
        java.lang.IllegalAccessException $r7;
        java.lang.Object[] $r0;
        java.lang.AssertionError $r6, $r8;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.Object r1, r2, $r4;
        java.lang.reflect.Method $r3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

     label1:
        $r3 = <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.reflect.Method REGISTER_JSON_OBJECT>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r0);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        java.lang.AssertionError $r2;
        java.lang.reflect.Method[] $r1;
        int i0, i1;
        java.lang.Class $r0;
        java.lang.String $r4, $r5;
        java.lang.reflect.Method r3, r6, r7;
        boolean $z0, $z1;

        $r0 = class "Lfacebook4j/json/DataObjectFactory;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        r6 = null;

        r7 = null;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = $r1[i1];

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("clearThreadLocalMap");

        if $z0 == 0 goto label2;

        r6 = r3;

        virtualinvoke r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        goto label3;

     label2:
        $r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("registerJSONObject");

        if $z1 == 0 goto label3;

        r7 = r3;

        virtualinvoke r3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if null == r6 goto label5;

        if null != r7 goto label6;

     label5:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label6:
        <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.reflect.Method CLEAR_THREAD_LOCAL_MAP> = r6;

        <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.reflect.Method REGISTER_JSON_OBJECT> = r7;

        return;
    }
}
