public class org.json.Test extends java.lang.Object
{

    public void <init>()
    {
        org.json.Test r0;

        r0 := @this: org.json.Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        org.json.JSONTokener $r477;
        org.json.JSONObject $r1, $r124, $r130, $r136, $r142, $r148, $r154, $r160, $r166, $r172, $r196, $r208, $r214, $r265, $r270, $r293, $r451, $r457, $r458, $r459, $r460, $r463, $r472, $r475, $r476, $r478, $r480, $r482, $r483, $r485, $r503, $r505, $r507;
        int[] $r54;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i13, $i15;
        java.io.PrintStream $r2, $r5, $r23, $r25, $r48, $r51, $r56, $r60, $r63, $r65, $r67, $r76, $r78, $r81, $r86, $r91, $r97, $r103, $r109, $r115, $r120, $r125, $r127, $r129, $r131, $r133, $r135, $r137, $r139, $r141, $r143, $r145, $r147, $r149, $r151, $r153, $r155, $r157, $r159, $r161, $r163, $r165, $r167, $r169, $r171, $r173, $r175, $r177, $r179, $r182, $r187, $r191, $r193, $r195, $r197, $r199, $r201, $r203, $r205, $r207, $r209, $r211, $r213, $r215, $r217, $r219, $r221, $r223, $r226, $r229, $r233, $r235, $r237, $r239, $r241, $r242, $r244, $r246, $r248, $r249, $r251, $r253, $r255, $r256, $r259, $r261, $r263, $r266, $r268, $r271, $r273, $r278, $r281, $r284, $r286, $r287, $r288, $r289, $r290, $r291, $r292, $r294, $r295, $r296, $r297, $r299, $r300, $r302, $r303, $r304, $r305, $r308, $r310, $r312, $r316, $r322, $r324, $r327, $r329, $r331, $r333, $r335, $r337, $r339, $r341, $r343, $r345, $r347, $r349, $r352, $r354, $r355, $r362, $r364, $r365, $r370, $r375, $r380, $r385, $r390, $r391, $r396, $r401, $r406, $r411, $r416, $r417, $r422, $r427, $r432, $r437, $r442, $r445, $r447;
        java.lang.Exception $r323, $r326, $r328, $r330, $r332, $r334, $r336, $r338, $r340, $r342, $r344, $r346;
        java.lang.String $r3, $r6, $r22, $r36, $r49, $r52, $r53, $r57, $r61, $r64, $r66, $r77, $r79, $r84, $r89, $r93, $r95, $r99, $r101, $r107, $r111, $r113, $r118, $r123, $r126, $r128, $r132, $r134, $r138, $r140, $r144, $r146, $r150, $r152, $r156, $r158, $r162, $r164, $r168, $r170, $r174, $r176, $r180, $r185, $r190, $r192, $r194, $r198, $r200, $r204, $r206, $r210, $r212, $r216, $r218, $r222, $r227, $r232, $r236, $r240, $r243, $r247, $r250, $r254, $r260, $r267, $r269, $r272, $r274, $r279, $r282, $r285, $r309, $r313, $r319, $r321, $r325, $r353, $r363, $r369, $r374, $r379, $r384, $r389, $r395, $r400, $r405, $r410, $r415, $r421, $r426, $r431, $r436, $r441, $r443, $r446, r449;
        java.io.StringWriter $r504;
        org.json.Test$1Obj $r450;
        org.json.JSONStringer $r452, $r453, $r454, $r484;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.Writer $r264;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        org.json.JSONWriter $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r357, $r358, $r359, $r360;
        java.lang.StringBuilder $r82, $r83, $r87, $r88, $r92, $r94, $r98, $r100, $r104, $r106, $r110, $r112, $r116, $r117, $r121, $r122, $r183, $r184, $r188, $r189, $r230, $r231, $r317, $r318, $r320, $r367, $r368, $r372, $r373, $r377, $r378, $r382, $r383, $r387, $r388, $r393, $r394, $r398, $r399, $r403, $r404, $r408, $r409, $r413, $r414, $r419, $r420, $r424, $r425, $r429, $r430, $r434, $r435, $r439, $r440, $r464, $r465, $r466, $r467, $r468, $r469, $r470, $r471, $r473, $r474, $r479, $r486, $r487, $r488, $r489, $r490, $r491, $r492, $r493, $r494, $r495, $r496, $r497, $r498, $r499, $r500, $r502;
        long $l8, $l9, $l10, $l11, $l12;
        java.lang.Object $r71, $r277, $r298, $r314, $r509;
        org.json.JSONArray $r72, $r105, $r238, $r258, $r301, $r455, $r456, $r461, $r462, $r481, $r501, $r506, $r508, $r510, $r511;
        java.lang.String[] $r19, $r58, $r75, r348, $r351;
        java.util.Iterator $r448;
        char $c2;

        r348 := @parameter0: java.lang.String[];

        $r450 = new org.json.Test$1Obj;

        specialinvoke $r450.<org.json.Test$1Obj: void <init>(java.lang.String,double,boolean)>("A beany object", 42.0, 1);

     label01:
        $r1 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<![CDATA[This is a collection of test patterns and examples for org.json.]]>  Ignore the stuff past the end.  ");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r451 = new org.json.JSONObject;

        specialinvoke $r451.<org.json.JSONObject: void <init>(java.lang.Object)>($r450);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = virtualinvoke $r451.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r452 = new org.json.JSONStringer;

        specialinvoke $r452.<org.json.JSONStringer: void <init>()>();

        $r8 = virtualinvoke $r452.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r9 = virtualinvoke $r8.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("foo");

        $r10 = virtualinvoke $r9.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("bar");

        $r11 = virtualinvoke $r10.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("baz");

        $r12 = virtualinvoke $r11.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r13 = virtualinvoke $r12.<org.json.JSONWriter: org.json.JSONWriter object()>();

        $r14 = virtualinvoke $r13.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("quux");

        $r15 = virtualinvoke $r14.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("Thanks, Josh!");

        $r16 = virtualinvoke $r15.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r17 = virtualinvoke $r16.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r18 = virtualinvoke $r17.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("obj keys");

        $r19 = staticinvoke <org.json.JSONObject: java.lang.String[] getNames(java.lang.Object)>($r450);

        $r20 = virtualinvoke $r18.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r453 = new org.json.JSONStringer;

        specialinvoke $r453.<org.json.JSONStringer: void <init>()>();

        $r26 = virtualinvoke $r453.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r27 = virtualinvoke $r26.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("a");

        $r28 = virtualinvoke $r27.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r29 = virtualinvoke $r28.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r30 = virtualinvoke $r29.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r31 = virtualinvoke $r30.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("b");

        $r32 = virtualinvoke $r31.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r33 = virtualinvoke $r32.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r34 = virtualinvoke $r33.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r35 = virtualinvoke $r34.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r454 = new org.json.JSONStringer;

        specialinvoke $r454.<org.json.JSONStringer: void <init>()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(long)>(1L);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>(null);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r38 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("empty-array");

        $r39 = virtualinvoke $r38.<org.json.JSONWriter: org.json.JSONWriter array()>();

        virtualinvoke $r39.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r40 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("answer");

        virtualinvoke $r40.<org.json.JSONWriter: org.json.JSONWriter value(long)>(42L);

        $r41 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("null");

        virtualinvoke $r41.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>(null);

        $r42 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("false");

        virtualinvoke $r42.<org.json.JSONWriter: org.json.JSONWriter value(boolean)>(0);

        $r43 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("true");

        virtualinvoke $r43.<org.json.JSONWriter: org.json.JSONWriter value(boolean)>(1);

        $r44 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("big");

        virtualinvoke $r44.<org.json.JSONWriter: org.json.JSONWriter value(double)>(1.23456789E96);

        $r45 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("small");

        virtualinvoke $r45.<org.json.JSONWriter: org.json.JSONWriter value(double)>(1.23456789E-80);

        $r46 = virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("empty-object");

        $r47 = virtualinvoke $r46.<org.json.JSONWriter: org.json.JSONWriter object()>();

        virtualinvoke $r47.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("long");

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(long)>(9223372036854775807L);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>("two");

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(boolean)>(1);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(double)>(98.6);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(double)>(-100.0);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter object()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter object()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("one");

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(double)>(1.0);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>($r450);

        virtualinvoke $r454.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

        $r48 = <java.lang.System: java.io.PrintStream out>;

        $r49 = virtualinvoke $r454.<org.json.JSONStringer: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r49);

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r455 = new org.json.JSONArray;

        $r52 = virtualinvoke $r454.<org.json.JSONStringer: java.lang.String toString()>();

        specialinvoke $r455.<org.json.JSONArray: void <init>(java.lang.String)>($r52);

        $r53 = virtualinvoke $r455.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r53);

        $r54 = newarray (int)[3];

        $r54[0] = 1;

        $r54[1] = 2;

        $r54[2] = 3;

        $r456 = new org.json.JSONArray;

        specialinvoke $r456.<org.json.JSONArray: void <init>(java.lang.Object)>($r54);

        $r56 = <java.lang.System: java.io.PrintStream out>;

        $r57 = virtualinvoke $r456.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r58 = newarray (java.lang.String)[3];

        $r58[0] = "aString";

        $r58[1] = "aNumber";

        $r58[2] = "aBoolean";

        $r457 = new org.json.JSONObject;

        specialinvoke $r457.<org.json.JSONObject: void <init>(java.lang.Object,java.lang.String[])>($r450, $r58);

        virtualinvoke $r457.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Testing JSONString interface", $r450);

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $r61 = virtualinvoke $r457.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r61);

        $r458 = new org.json.JSONObject;

        specialinvoke $r458.<org.json.JSONObject: void <init>(java.lang.String)>("{slashes: \'///\', closetag: \'</script>\', backslash:\'\\\\\', ei: {quotes: \'\"\\\'\'},eo: {a: \'\"quoted\"\', b:\"don\'t\"}, quotes: [\"\'\", \'\"\']}");

        $r63 = <java.lang.System: java.io.PrintStream out>;

        $r64 = virtualinvoke $r458.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r65 = <java.lang.System: java.io.PrintStream out>;

        $r66 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r458);

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r66);

        $r67 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("");

        $r459 = new org.json.JSONObject;

        specialinvoke $r459.<org.json.JSONObject: void <init>(java.lang.String)>("/*comment*/{foo: [true, false,9876543210,    0.0, 1.00000001,  1.000000000001, 1.00000000000000001, .00000000000000001, 2.00, 0.1, 2e100, -32,[],{}, \"string\"],   to   : null, op : \'Good\',ten:10} postfix comment");

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("String", "98.6");

        $r460 = new org.json.JSONObject;

        specialinvoke $r460.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("JSONObject", $r460);

        $r461 = new org.json.JSONArray;

        specialinvoke $r461.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("JSONArray", $r461);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("int", 57);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("double", 1.2345678901234568E29);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("true", 1);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("false", 0);

        $r71 = <org.json.JSONObject: java.lang.Object NULL>;

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("null", $r71);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("bool", "true");

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("zero", -0.0);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("\\u2028", "\u2028");

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("\\u2029", "\u2029");

        $r72 = virtualinvoke $r459.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("foo");

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(int)>(666);

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(double)>(2001.99);

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>("so \"fine\".");

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>("so <fine>.");

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(boolean)>(1);

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(boolean)>(0);

        $r462 = new org.json.JSONArray;

        specialinvoke $r462.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r462);

        $r463 = new org.json.JSONObject;

        specialinvoke $r463.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r72.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r463);

        $r75 = staticinvoke <org.json.JSONObject: java.lang.String[] getNames(org.json.JSONObject)>($r459);

        virtualinvoke $r459.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("keys", $r75);

        $r76 = <java.lang.System: java.io.PrintStream out>;

        $r77 = virtualinvoke $r459.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r77);

        $r78 = <java.lang.System: java.io.PrintStream out>;

        $r79 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r459);

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r79);

        $r81 = <java.lang.System: java.io.PrintStream out>;

        $r464 = new java.lang.StringBuilder;

        specialinvoke $r464.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r464.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String: ");

        $d0 = virtualinvoke $r459.<org.json.JSONObject: double getDouble(java.lang.String)>("String");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>($r84);

        $r86 = <java.lang.System: java.io.PrintStream out>;

        $r465 = new java.lang.StringBuilder;

        specialinvoke $r465.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  bool: ");

        $z0 = virtualinvoke $r459.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("bool");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r89);

        $r91 = <java.lang.System: java.io.PrintStream out>;

        $r466 = new java.lang.StringBuilder;

        specialinvoke $r466.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r466.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    to: ");

        $r93 = virtualinvoke $r459.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("to");

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r91.<java.io.PrintStream: void println(java.lang.String)>($r95);

        $r97 = <java.lang.System: java.io.PrintStream out>;

        $r467 = new java.lang.StringBuilder;

        specialinvoke $r467.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r467.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  true: ");

        $r99 = virtualinvoke $r459.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("true");

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>($r101);

        $r103 = <java.lang.System: java.io.PrintStream out>;

        $r468 = new java.lang.StringBuilder;

        specialinvoke $r468.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r468.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   foo: ");

        $r105 = virtualinvoke $r459.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("foo");

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r103.<java.io.PrintStream: void println(java.lang.String)>($r107);

        $r109 = <java.lang.System: java.io.PrintStream out>;

        $r469 = new java.lang.StringBuilder;

        specialinvoke $r469.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r469.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    op: ");

        $r111 = virtualinvoke $r459.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("op");

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r109.<java.io.PrintStream: void println(java.lang.String)>($r113);

        $r115 = <java.lang.System: java.io.PrintStream out>;

        $r470 = new java.lang.StringBuilder;

        specialinvoke $r470.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r470.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ten: ");

        $i0 = virtualinvoke $r459.<org.json.JSONObject: int getInt(java.lang.String)>("ten");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r118);

        $r120 = <java.lang.System: java.io.PrintStream out>;

        $r471 = new java.lang.StringBuilder;

        specialinvoke $r471.<java.lang.StringBuilder: void <init>()>();

        $r121 = virtualinvoke $r471.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  oops: ");

        $z1 = virtualinvoke $r459.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("oops");

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r120.<java.io.PrintStream: void println(java.lang.String)>($r123);

        $r124 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<xml one = 1 two=\' \"2\" \'><five></five>First \t&lt;content&gt;<five></five> This is \"content\". <three>  3  </three>JSON does not preserve the sequencing of elements and contents.<three>  III  </three>  <three>  T H R E E</three><four/>Content text is an implied structure in XML. <six content=\"6\"/>JSON does not have implied structure:<seven>7</seven>everything is explicit.<![CDATA[CDATA blocks<are><supported>!]]></xml>");

        $r125 = <java.lang.System: java.io.PrintStream out>;

        $r126 = virtualinvoke $r124.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r125.<java.io.PrintStream: void println(java.lang.String)>($r126);

        $r127 = <java.lang.System: java.io.PrintStream out>;

        $r128 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r124);

        virtualinvoke $r127.<java.io.PrintStream: void println(java.lang.String)>($r128);

        $r129 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r129.<java.io.PrintStream: void println(java.lang.String)>("");

        $r130 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<mapping><empty/>   <class name = \"Customer\">      <field name = \"ID\" type = \"string\">         <bind-xml name=\"ID\" node=\"attribute\"/>      </field>      <field name = \"FirstName\" type = \"FirstName\"/>      <field name = \"MI\" type = \"MI\"/>      <field name = \"LastName\" type = \"LastName\"/>   </class>   <class name = \"FirstName\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class>   <class name = \"MI\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class>   <class name = \"LastName\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class></mapping>");

        $r131 = <java.lang.System: java.io.PrintStream out>;

        $r132 = virtualinvoke $r130.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r131.<java.io.PrintStream: void println(java.lang.String)>($r132);

        $r133 = <java.lang.System: java.io.PrintStream out>;

        $r134 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r130);

        virtualinvoke $r133.<java.io.PrintStream: void println(java.lang.String)>($r134);

        $r135 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>("");

        $r136 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\"1.0\" ?><Book Author=\"Anonymous\"><Title>Sample Book</Title><Chapter id=\"1\">This is chapter 1. It is not very long or interesting.</Chapter><Chapter id=\"2\">This is chapter 2. Although it is longer than chapter 1, it is not any more interesting.</Chapter></Book>");

        $r137 = <java.lang.System: java.io.PrintStream out>;

        $r138 = virtualinvoke $r136.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r137.<java.io.PrintStream: void println(java.lang.String)>($r138);

        $r139 = <java.lang.System: java.io.PrintStream out>;

        $r140 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r136);

        virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r140);

        $r141 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r141.<java.io.PrintStream: void println(java.lang.String)>("");

        $r142 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<!DOCTYPE bCard \'http://www.cs.caltech.edu/~adam/schemas/bCard\'><bCard><?xml default bCard        firstname = \'\'        lastname  = \'\' company   = \'\' email = \'\' homepage  = \'\'?><bCard        firstname = \'Rohit\'        lastname  = \'Khare\'        company   = \'MCI\'        email     = \'khare@mci.net\'        homepage  = \'http://pest.w3.org/\'/><bCard        firstname = \'Adam\'        lastname  = \'Rifkin\'        company   = \'Caltech Infospheres Project\'        email     = \'adam@cs.caltech.edu\'        homepage  = \'http://www.cs.caltech.edu/~adam/\'/></bCard>");

        $r143 = <java.lang.System: java.io.PrintStream out>;

        $r144 = virtualinvoke $r142.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r143.<java.io.PrintStream: void println(java.lang.String)>($r144);

        $r145 = <java.lang.System: java.io.PrintStream out>;

        $r146 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r142);

        virtualinvoke $r145.<java.io.PrintStream: void println(java.lang.String)>($r146);

        $r147 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r147.<java.io.PrintStream: void println(java.lang.String)>("");

        $r148 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\"1.0\"?><customer>    <firstName>        <text>Fred</text>    </firstName>    <ID>fbs0001</ID>    <lastName> <text>Scerbo</text>    </lastName>    <MI>        <text>B</text>    </MI></customer>");

        $r149 = <java.lang.System: java.io.PrintStream out>;

        $r150 = virtualinvoke $r148.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r149.<java.io.PrintStream: void println(java.lang.String)>($r150);

        $r151 = <java.lang.System: java.io.PrintStream out>;

        $r152 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r148);

        virtualinvoke $r151.<java.io.PrintStream: void println(java.lang.String)>($r152);

        $r153 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r153.<java.io.PrintStream: void println(java.lang.String)>("");

        $r154 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<!ENTITY tp-address PUBLIC \'-//ABC University::Special Collections Library//TEXT (titlepage: name and address)//EN\' \'tpspcoll.sgm\'><list type=\'simple\'><head>Repository Address </head><item>Special Collections Library</item><item>ABC University</item><item>Main Library, 40 Circle Drive</item><item>Ourtown, Pennsylvania</item><item>17654 USA</item></list>");

        $r155 = <java.lang.System: java.io.PrintStream out>;

        $r156 = virtualinvoke $r154.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r155.<java.io.PrintStream: void println(java.lang.String)>($r156);

        $r157 = <java.lang.System: java.io.PrintStream out>;

        $r158 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r154);

        virtualinvoke $r157.<java.io.PrintStream: void println(java.lang.String)>($r158);

        $r159 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>("");

        $r160 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<test intertag status=ok><empty/>deluxe<blip sweet=true>&amp;&quot;toot&quot;&toot;&#x41;</blip><x>eks</x><w>bonus</w><w>bonus2</w></test>");

        $r161 = <java.lang.System: java.io.PrintStream out>;

        $r162 = virtualinvoke $r160.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r161.<java.io.PrintStream: void println(java.lang.String)>($r162);

        $r163 = <java.lang.System: java.io.PrintStream out>;

        $r164 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r160);

        virtualinvoke $r163.<java.io.PrintStream: void println(java.lang.String)>($r164);

        $r165 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r165.<java.io.PrintStream: void println(java.lang.String)>("");

        $r166 = staticinvoke <org.json.HTTP: org.json.JSONObject toJSONObject(java.lang.String)>("GET / HTTP/1.0\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-powerpoint, application/vnd.ms-excel, application/msword, */*\nAccept-Language: en-us\nUser-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows 98; Win 9x 4.90; T312461; Q312461)\nHost: www.nokko.com\nConnection: keep-alive\nAccept-encoding: gzip, deflate\n");

        $r167 = <java.lang.System: java.io.PrintStream out>;

        $r168 = virtualinvoke $r166.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r167.<java.io.PrintStream: void println(java.lang.String)>($r168);

        $r169 = <java.lang.System: java.io.PrintStream out>;

        $r170 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r166);

        virtualinvoke $r169.<java.io.PrintStream: void println(java.lang.String)>($r170);

        $r171 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r171.<java.io.PrintStream: void println(java.lang.String)>("");

        $r172 = staticinvoke <org.json.HTTP: org.json.JSONObject toJSONObject(java.lang.String)>("HTTP/1.1 200 Oki Doki\nDate: Sun, 26 May 2002 17:38:52 GMT\nServer: Apache/1.3.23 (Unix) mod_perl/1.26\nKeep-Alive: timeout=15, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: text/html\n");

        $r173 = <java.lang.System: java.io.PrintStream out>;

        $r174 = virtualinvoke $r172.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r173.<java.io.PrintStream: void println(java.lang.String)>($r174);

        $r175 = <java.lang.System: java.io.PrintStream out>;

        $r176 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r172);

        virtualinvoke $r175.<java.io.PrintStream: void println(java.lang.String)>($r176);

        $r177 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r177.<java.io.PrintStream: void println(java.lang.String)>("");

        $r472 = new org.json.JSONObject;

        specialinvoke $r472.<org.json.JSONObject: void <init>(java.lang.String)>("{nix: null, nux: false, null: \'null\', \'Request-URI\': \'/\', Method: \'GET\', \'HTTP-Version\': \'HTTP/1.0\'}");

        $r179 = <java.lang.System: java.io.PrintStream out>;

        $r180 = virtualinvoke $r472.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r179.<java.io.PrintStream: void println(java.lang.String)>($r180);

        $r182 = <java.lang.System: java.io.PrintStream out>;

        $r473 = new java.lang.StringBuilder;

        specialinvoke $r473.<java.lang.StringBuilder: void <init>()>();

        $r183 = virtualinvoke $r473.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isNull: ");

        $z2 = virtualinvoke $r472.<org.json.JSONObject: boolean isNull(java.lang.String)>("nix");

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r182.<java.io.PrintStream: void println(java.lang.String)>($r185);

        $r187 = <java.lang.System: java.io.PrintStream out>;

        $r474 = new java.lang.StringBuilder;

        specialinvoke $r474.<java.lang.StringBuilder: void <init>()>();

        $r188 = virtualinvoke $r474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   has: ");

        $z3 = virtualinvoke $r472.<org.json.JSONObject: boolean has(java.lang.String)>("nix");

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r187.<java.io.PrintStream: void println(java.lang.String)>($r190);

        $r191 = <java.lang.System: java.io.PrintStream out>;

        $r192 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r472);

        virtualinvoke $r191.<java.io.PrintStream: void println(java.lang.String)>($r192);

        $r193 = <java.lang.System: java.io.PrintStream out>;

        $r194 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r472);

        virtualinvoke $r193.<java.io.PrintStream: void println(java.lang.String)>($r194);

        $r195 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r195.<java.io.PrintStream: void println(java.lang.String)>("");

        $r196 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/1999/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"><SOAP-ENV:Body><ns1:doGoogleSearch xmlns:ns1=\"urn:GoogleSearch\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><key xsi:type=\"xsd:string\">GOOGLEKEY</key> <q xsi:type=\"xsd:string\">\'+search+\'</q> <start xsi:type=\"xsd:int\">0</start> <maxResults xsi:type=\"xsd:int\">10</maxResults> <filter xsi:type=\"xsd:boolean\">true</filter> <restrict xsi:type=\"xsd:string\"></restrict> <safeSearch xsi:type=\"xsd:boolean\">false</safeSearch> <lr xsi:type=\"xsd:string\"></lr> <ie xsi:type=\"xsd:string\">latin1</ie> <oe xsi:type=\"xsd:string\">latin1</oe></ns1:doGoogleSearch></SOAP-ENV:Body></SOAP-ENV:Envelope>");

        $r197 = <java.lang.System: java.io.PrintStream out>;

        $r198 = virtualinvoke $r196.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r197.<java.io.PrintStream: void println(java.lang.String)>($r198);

        $r199 = <java.lang.System: java.io.PrintStream out>;

        $r200 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r196);

        virtualinvoke $r199.<java.io.PrintStream: void println(java.lang.String)>($r200);

        $r201 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r201.<java.io.PrintStream: void println(java.lang.String)>("");

        $r475 = new org.json.JSONObject;

        specialinvoke $r475.<org.json.JSONObject: void <init>(java.lang.String)>("{Envelope: {Body: {\"ns1:doGoogleSearch\": {oe: \"latin1\", filter: true, q: \"\'+search+\'\", key: \"GOOGLEKEY\", maxResults: 10, \"SOAP-ENV:encodingStyle\": \"http://schemas.xmlsoap.org/soap/encoding/\", start: 0, ie: \"latin1\", safeSearch:false, \"xmlns:ns1\": \"urn:GoogleSearch\"}}}}");

        $r203 = <java.lang.System: java.io.PrintStream out>;

        $r204 = virtualinvoke $r475.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r203.<java.io.PrintStream: void println(java.lang.String)>($r204);

        $r205 = <java.lang.System: java.io.PrintStream out>;

        $r206 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r475);

        virtualinvoke $r205.<java.io.PrintStream: void println(java.lang.String)>($r206);

        $r207 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r207.<java.io.PrintStream: void println(java.lang.String)>("");

        $r208 = staticinvoke <org.json.CookieList: org.json.JSONObject toJSONObject(java.lang.String)>("  f%oo = b+l=ah  ; o;n%40e = t.wo ");

        $r209 = <java.lang.System: java.io.PrintStream out>;

        $r210 = virtualinvoke $r208.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r209.<java.io.PrintStream: void println(java.lang.String)>($r210);

        $r211 = <java.lang.System: java.io.PrintStream out>;

        $r212 = staticinvoke <org.json.CookieList: java.lang.String toString(org.json.JSONObject)>($r208);

        virtualinvoke $r211.<java.io.PrintStream: void println(java.lang.String)>($r212);

        $r213 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r213.<java.io.PrintStream: void println(java.lang.String)>("");

        $r214 = staticinvoke <org.json.Cookie: org.json.JSONObject toJSONObject(java.lang.String)>("f%oo=blah; secure ;expires = April 24, 2002");

        $r215 = <java.lang.System: java.io.PrintStream out>;

        $r216 = virtualinvoke $r214.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r215.<java.io.PrintStream: void println(java.lang.String)>($r216);

        $r217 = <java.lang.System: java.io.PrintStream out>;

        $r218 = staticinvoke <org.json.Cookie: java.lang.String toString(org.json.JSONObject)>($r214);

        virtualinvoke $r217.<java.io.PrintStream: void println(java.lang.String)>($r218);

        $r219 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r219.<java.io.PrintStream: void println(java.lang.String)>("");

        $r476 = new org.json.JSONObject;

        specialinvoke $r476.<org.json.JSONObject: void <init>(java.lang.String)>("{script: \'It is not allowed in HTML to send a close script tag in a string<script>because it confuses browsers</script>so we insert a backslash before the /\'}");

        $r221 = <java.lang.System: java.io.PrintStream out>;

        $r222 = virtualinvoke $r476.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r221.<java.io.PrintStream: void println(java.lang.String)>($r222);

        $r223 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r223.<java.io.PrintStream: void println(java.lang.String)>("");

        $r477 = new org.json.JSONTokener;

        specialinvoke $r477.<org.json.JSONTokener: void <init>(java.lang.String)>("{op:\'test\', to:\'session\', pre:1}{op:\'test\', to:\'session\', pre:2}");

        $r478 = new org.json.JSONObject;

        specialinvoke $r478.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r477);

        $r226 = <java.lang.System: java.io.PrintStream out>;

        $r227 = virtualinvoke $r478.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r226.<java.io.PrintStream: void println(java.lang.String)>($r227);

        $r229 = <java.lang.System: java.io.PrintStream out>;

        $r479 = new java.lang.StringBuilder;

        specialinvoke $r479.<java.lang.StringBuilder: void <init>()>();

        $r230 = virtualinvoke $r479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre: ");

        $i1 = virtualinvoke $r478.<org.json.JSONObject: int optInt(java.lang.String)>("pre");

        $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r229.<java.io.PrintStream: void println(java.lang.String)>($r232);

        $c2 = virtualinvoke $r477.<org.json.JSONTokener: char skipTo(char)>(123);

        $r233 = <java.lang.System: java.io.PrintStream out>;

        $i13 = (int) $c2;

        virtualinvoke $r233.<java.io.PrintStream: void println(int)>($i13);

        $r480 = new org.json.JSONObject;

        specialinvoke $r480.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r477);

        $r235 = <java.lang.System: java.io.PrintStream out>;

        $r236 = virtualinvoke $r480.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r235.<java.io.PrintStream: void println(java.lang.String)>($r236);

        $r237 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r237.<java.io.PrintStream: void println(java.lang.String)>("");

        $r238 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(java.lang.String)>("No quotes, \'Single Quotes\', \"Double Quotes\"\n1,\'2\',\"3\"\n,\'It is \"good,\"\', \"It works.\"\n\n");

        $r239 = <java.lang.System: java.io.PrintStream out>;

        $r240 = staticinvoke <org.json.CDL: java.lang.String toString(org.json.JSONArray)>($r238);

        virtualinvoke $r239.<java.io.PrintStream: void println(java.lang.String)>($r240);

        $r241 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r241.<java.io.PrintStream: void println(java.lang.String)>("");

        $r242 = <java.lang.System: java.io.PrintStream out>;

        $r243 = virtualinvoke $r238.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r242.<java.io.PrintStream: void println(java.lang.String)>($r243);

        $r244 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r244.<java.io.PrintStream: void println(java.lang.String)>("");

        $r481 = new org.json.JSONArray;

        specialinvoke $r481.<org.json.JSONArray: void <init>(java.lang.String)>(" [\"<escape>\", next is an implied null , , ok,] ");

        $r246 = <java.lang.System: java.io.PrintStream out>;

        $r247 = virtualinvoke $r481.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r246.<java.io.PrintStream: void println(java.lang.String)>($r247);

        $r248 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r248.<java.io.PrintStream: void println(java.lang.String)>("");

        $r249 = <java.lang.System: java.io.PrintStream out>;

        $r250 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r481);

        virtualinvoke $r249.<java.io.PrintStream: void println(java.lang.String)>($r250);

        $r251 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r251.<java.io.PrintStream: void println(java.lang.String)>("");

        $r482 = new org.json.JSONObject;

        specialinvoke $r482.<org.json.JSONObject: void <init>(java.lang.String)>("{ fun => with non-standard forms ; forgiving => This package can be used to parse formats that are similar to but not stricting conforming to JSON; why=To make it easier to migrate existing data to JSON,one = [[1.00]]; uno=[[{1=>1}]];\'+\':+6e66 ;pluses=+++;empty = \'\' , \'double\':0.666,true: TRUE, false: FALSE, null=NULL;[true] = [[!,@;*]]; string=>  o. k. ; # comment\r oct=0666; hex=0x666; dec=666; o=0999; noh=0x0x}");

        $r253 = <java.lang.System: java.io.PrintStream out>;

        $r254 = virtualinvoke $r482.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r253.<java.io.PrintStream: void println(java.lang.String)>($r254);

        $r255 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r255.<java.io.PrintStream: void println(java.lang.String)>("");

        $z4 = virtualinvoke $r482.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("true");

        if $z4 == 0 goto label02;

        $z5 = virtualinvoke $r482.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("false");

        if $z5 != 0 goto label02;

        $r322 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r322.<java.io.PrintStream: void println(java.lang.String)>("It\'s all good");

     label02:
        $r349 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r349.<java.io.PrintStream: void println(java.lang.String)>("");

        $r483 = new org.json.JSONObject;

        $r351 = newarray (java.lang.String)[4];

        $r351[0] = "dec";

        $r351[1] = "oct";

        $r351[2] = "hex";

        $r351[3] = "missing";

        specialinvoke $r483.<org.json.JSONObject: void <init>(org.json.JSONObject,java.lang.String[])>($r482, $r351);

        $r352 = <java.lang.System: java.io.PrintStream out>;

        $r353 = virtualinvoke $r483.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r352.<java.io.PrintStream: void println(java.lang.String)>($r353);

        $r354 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r354.<java.io.PrintStream: void println(java.lang.String)>("");

        $r355 = <java.lang.System: java.io.PrintStream out>;

        $r484 = new org.json.JSONStringer;

        specialinvoke $r484.<org.json.JSONStringer: void <init>()>();

        $r357 = virtualinvoke $r484.<org.json.JSONStringer: org.json.JSONWriter array()>();

        $r358 = virtualinvoke $r357.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>($r481);

        $r359 = virtualinvoke $r358.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>($r483);

        $r360 = virtualinvoke $r359.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        virtualinvoke $r355.<java.io.PrintStream: void println(java.lang.Object)>($r360);

        $r485 = new org.json.JSONObject;

        specialinvoke $r485.<org.json.JSONObject: void <init>(java.lang.String)>("{string: \"98.6\", long: 2147483648, int: 2147483647, longer: 9223372036854775807, double: 9223372036854775808}");

        $r362 = <java.lang.System: java.io.PrintStream out>;

        $r363 = virtualinvoke $r485.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r362.<java.io.PrintStream: void println(java.lang.String)>($r363);

        $r364 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r364.<java.io.PrintStream: void println(java.lang.String)>("\ngetInt");

        $r365 = <java.lang.System: java.io.PrintStream out>;

        $r486 = new java.lang.StringBuilder;

        specialinvoke $r486.<java.lang.StringBuilder: void <init>()>();

        $r367 = virtualinvoke $r486.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $i3 = virtualinvoke $r485.<org.json.JSONObject: int getInt(java.lang.String)>("int");

        $r368 = virtualinvoke $r367.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r369 = virtualinvoke $r368.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r365.<java.io.PrintStream: void println(java.lang.String)>($r369);

        $r370 = <java.lang.System: java.io.PrintStream out>;

        $r487 = new java.lang.StringBuilder;

        specialinvoke $r487.<java.lang.StringBuilder: void <init>()>();

        $r372 = virtualinvoke $r487.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $i4 = virtualinvoke $r485.<org.json.JSONObject: int getInt(java.lang.String)>("long");

        $r373 = virtualinvoke $r372.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r374 = virtualinvoke $r373.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r370.<java.io.PrintStream: void println(java.lang.String)>($r374);

        $r375 = <java.lang.System: java.io.PrintStream out>;

        $r488 = new java.lang.StringBuilder;

        specialinvoke $r488.<java.lang.StringBuilder: void <init>()>();

        $r377 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $i5 = virtualinvoke $r485.<org.json.JSONObject: int getInt(java.lang.String)>("longer");

        $r378 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r379 = virtualinvoke $r378.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r375.<java.io.PrintStream: void println(java.lang.String)>($r379);

        $r380 = <java.lang.System: java.io.PrintStream out>;

        $r489 = new java.lang.StringBuilder;

        specialinvoke $r489.<java.lang.StringBuilder: void <init>()>();

        $r382 = virtualinvoke $r489.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $i6 = virtualinvoke $r485.<org.json.JSONObject: int getInt(java.lang.String)>("double");

        $r383 = virtualinvoke $r382.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r384 = virtualinvoke $r383.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r380.<java.io.PrintStream: void println(java.lang.String)>($r384);

        $r385 = <java.lang.System: java.io.PrintStream out>;

        $r490 = new java.lang.StringBuilder;

        specialinvoke $r490.<java.lang.StringBuilder: void <init>()>();

        $r387 = virtualinvoke $r490.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $i7 = virtualinvoke $r485.<org.json.JSONObject: int getInt(java.lang.String)>("string");

        $r388 = virtualinvoke $r387.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r389 = virtualinvoke $r388.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r385.<java.io.PrintStream: void println(java.lang.String)>($r389);

        $r390 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r390.<java.io.PrintStream: void println(java.lang.String)>("\ngetLong");

        $r391 = <java.lang.System: java.io.PrintStream out>;

        $r491 = new java.lang.StringBuilder;

        specialinvoke $r491.<java.lang.StringBuilder: void <init>()>();

        $r393 = virtualinvoke $r491.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $l8 = virtualinvoke $r485.<org.json.JSONObject: long getLong(java.lang.String)>("int");

        $r394 = virtualinvoke $r393.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r395 = virtualinvoke $r394.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r391.<java.io.PrintStream: void println(java.lang.String)>($r395);

        $r396 = <java.lang.System: java.io.PrintStream out>;

        $r492 = new java.lang.StringBuilder;

        specialinvoke $r492.<java.lang.StringBuilder: void <init>()>();

        $r398 = virtualinvoke $r492.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $l9 = virtualinvoke $r485.<org.json.JSONObject: long getLong(java.lang.String)>("long");

        $r399 = virtualinvoke $r398.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r400 = virtualinvoke $r399.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r396.<java.io.PrintStream: void println(java.lang.String)>($r400);

        $r401 = <java.lang.System: java.io.PrintStream out>;

        $r493 = new java.lang.StringBuilder;

        specialinvoke $r493.<java.lang.StringBuilder: void <init>()>();

        $r403 = virtualinvoke $r493.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $l10 = virtualinvoke $r485.<org.json.JSONObject: long getLong(java.lang.String)>("longer");

        $r404 = virtualinvoke $r403.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r405 = virtualinvoke $r404.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r401.<java.io.PrintStream: void println(java.lang.String)>($r405);

        $r406 = <java.lang.System: java.io.PrintStream out>;

        $r494 = new java.lang.StringBuilder;

        specialinvoke $r494.<java.lang.StringBuilder: void <init>()>();

        $r408 = virtualinvoke $r494.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $l11 = virtualinvoke $r485.<org.json.JSONObject: long getLong(java.lang.String)>("double");

        $r409 = virtualinvoke $r408.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r410 = virtualinvoke $r409.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r406.<java.io.PrintStream: void println(java.lang.String)>($r410);

        $r411 = <java.lang.System: java.io.PrintStream out>;

        $r495 = new java.lang.StringBuilder;

        specialinvoke $r495.<java.lang.StringBuilder: void <init>()>();

        $r413 = virtualinvoke $r495.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $l12 = virtualinvoke $r485.<org.json.JSONObject: long getLong(java.lang.String)>("string");

        $r414 = virtualinvoke $r413.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r415 = virtualinvoke $r414.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r411.<java.io.PrintStream: void println(java.lang.String)>($r415);

        $r416 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r416.<java.io.PrintStream: void println(java.lang.String)>("\ngetDouble");

        $r417 = <java.lang.System: java.io.PrintStream out>;

        $r496 = new java.lang.StringBuilder;

        specialinvoke $r496.<java.lang.StringBuilder: void <init>()>();

        $r419 = virtualinvoke $r496.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $d4 = virtualinvoke $r485.<org.json.JSONObject: double getDouble(java.lang.String)>("int");

        $r420 = virtualinvoke $r419.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r421 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r417.<java.io.PrintStream: void println(java.lang.String)>($r421);

        $r422 = <java.lang.System: java.io.PrintStream out>;

        $r497 = new java.lang.StringBuilder;

        specialinvoke $r497.<java.lang.StringBuilder: void <init>()>();

        $r424 = virtualinvoke $r497.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $d5 = virtualinvoke $r485.<org.json.JSONObject: double getDouble(java.lang.String)>("long");

        $r425 = virtualinvoke $r424.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r426 = virtualinvoke $r425.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r422.<java.io.PrintStream: void println(java.lang.String)>($r426);

        $r427 = <java.lang.System: java.io.PrintStream out>;

        $r498 = new java.lang.StringBuilder;

        specialinvoke $r498.<java.lang.StringBuilder: void <init>()>();

        $r429 = virtualinvoke $r498.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $d6 = virtualinvoke $r485.<org.json.JSONObject: double getDouble(java.lang.String)>("longer");

        $r430 = virtualinvoke $r429.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        $r431 = virtualinvoke $r430.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r427.<java.io.PrintStream: void println(java.lang.String)>($r431);

        $r432 = <java.lang.System: java.io.PrintStream out>;

        $r499 = new java.lang.StringBuilder;

        specialinvoke $r499.<java.lang.StringBuilder: void <init>()>();

        $r434 = virtualinvoke $r499.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $d7 = virtualinvoke $r485.<org.json.JSONObject: double getDouble(java.lang.String)>("double");

        $r435 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r436 = virtualinvoke $r435.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r432.<java.io.PrintStream: void println(java.lang.String)>($r436);

        $r437 = <java.lang.System: java.io.PrintStream out>;

        $r500 = new java.lang.StringBuilder;

        specialinvoke $r500.<java.lang.StringBuilder: void <init>()>();

        $r439 = virtualinvoke $r500.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $d8 = virtualinvoke $r485.<org.json.JSONObject: double getDouble(java.lang.String)>("string");

        $r440 = virtualinvoke $r439.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r441 = virtualinvoke $r440.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r437.<java.io.PrintStream: void println(java.lang.String)>($r441);

        virtualinvoke $r485.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("good sized", 9223372036854775807L);

        $r442 = <java.lang.System: java.io.PrintStream out>;

        $r443 = virtualinvoke $r485.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r442.<java.io.PrintStream: void println(java.lang.String)>($r443);

        $r501 = new org.json.JSONArray;

        specialinvoke $r501.<org.json.JSONArray: void <init>(java.lang.String)>("[2147483647, 2147483648, 9223372036854775807, 9223372036854775808]");

        $r445 = <java.lang.System: java.io.PrintStream out>;

        $r446 = virtualinvoke $r501.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r445.<java.io.PrintStream: void println(java.lang.String)>($r446);

        $r447 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r447.<java.io.PrintStream: void println(java.lang.String)>("\nKeys: ");

        $r448 = virtualinvoke $r485.<org.json.JSONObject: java.util.Iterator keys()>();

     label03:
        $z6 = interfaceinvoke $r448.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r314 = interfaceinvoke $r448.<java.util.Iterator: java.lang.Object next()>();

        r449 = (java.lang.String) $r314;

        $r316 = <java.lang.System: java.io.PrintStream out>;

        $r502 = new java.lang.StringBuilder;

        specialinvoke $r502.<java.lang.StringBuilder: void <init>()>();

        $r317 = virtualinvoke $r502.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r449);

        $r318 = virtualinvoke $r317.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r319 = virtualinvoke $r485.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(r449);

        $r320 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r319);

        $r321 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r316.<java.io.PrintStream: void println(java.lang.String)>($r321);

        goto label03;

     label04:
        $r256 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r256.<java.io.PrintStream: void println(java.lang.String)>("\naccumulate: ");

        $r503 = new org.json.JSONObject;

        specialinvoke $r503.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r503.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Curly");

        virtualinvoke $r503.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Larry");

        virtualinvoke $r503.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Moe");

        $r258 = virtualinvoke $r503.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("stooge");

        virtualinvoke $r258.<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>(5, "Shemp");

        $r259 = <java.lang.System: java.io.PrintStream out>;

        $r260 = virtualinvoke $r503.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r259.<java.io.PrintStream: void println(java.lang.String)>($r260);

        $r261 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r261.<java.io.PrintStream: void println(java.lang.String)>("\nwrite:");

        $r263 = <java.lang.System: java.io.PrintStream out>;

        $r504 = new java.io.StringWriter;

        specialinvoke $r504.<java.io.StringWriter: void <init>()>();

        $r264 = virtualinvoke $r503.<org.json.JSONObject: java.io.Writer write(java.io.Writer)>($r504);

        virtualinvoke $r263.<java.io.PrintStream: void println(java.lang.Object)>($r264);

        $r265 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<xml empty><a></a><a>1</a><a>22</a><a>333</a></xml>");

        $r266 = <java.lang.System: java.io.PrintStream out>;

        $r267 = virtualinvoke $r265.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r266.<java.io.PrintStream: void println(java.lang.String)>($r267);

        $r268 = <java.lang.System: java.io.PrintStream out>;

        $r269 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r265);

        virtualinvoke $r268.<java.io.PrintStream: void println(java.lang.String)>($r269);

        $r270 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<book><chapter>Content of the first chapter</chapter><chapter>Content of the second chapter      <chapter>Content of the first subchapter</chapter>      <chapter>Content of the second subchapter</chapter></chapter><chapter>Third Chapter</chapter></book>");

        $r271 = <java.lang.System: java.io.PrintStream out>;

        $r272 = virtualinvoke $r270.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r271.<java.io.PrintStream: void println(java.lang.String)>($r272);

        $r273 = <java.lang.System: java.io.PrintStream out>;

        $r274 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r270);

        virtualinvoke $r273.<java.io.PrintStream: void println(java.lang.String)>($r274);

        $r505 = new org.json.JSONObject;

        specialinvoke $r505.<org.json.JSONObject: void <init>(java.util.Map)>(null);

        $r506 = new org.json.JSONArray;

        specialinvoke $r506.<org.json.JSONArray: void <init>(java.util.Collection)>(null);

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject append(java.lang.String,java.lang.Object)>("stooge", "Joe DeRita");

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject append(java.lang.String,java.lang.Object)>("stooge", "Shemp");

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Curly");

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Larry");

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Moe");

        $r277 = virtualinvoke $r505.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("stooges");

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stoogearray", $r277);

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.util.Map)>("map", null);

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.util.Collection)>("collection", null);

        virtualinvoke $r505.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("array", $r506);

        virtualinvoke $r506.<org.json.JSONArray: org.json.JSONArray put(java.util.Map)>(null);

        virtualinvoke $r506.<org.json.JSONArray: org.json.JSONArray put(java.util.Collection)>(null);

        $r278 = <java.lang.System: java.io.PrintStream out>;

        $r279 = virtualinvoke $r505.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r278.<java.io.PrintStream: void println(java.lang.String)>($r279);

        $r507 = new org.json.JSONObject;

        specialinvoke $r507.<org.json.JSONObject: void <init>(java.lang.String)>("{plist=Apple; AnimalSmells = { pig = piggish; lamb = lambish; worm = wormy; }; AnimalSounds = { pig = oink; lamb = baa; worm = baa;  Lisa = \"Why is the worm talking like a lamb?\" } ; AnimalColors = { pig = pink; lamb = black; worm = pink; } } ");

        $r281 = <java.lang.System: java.io.PrintStream out>;

        $r282 = virtualinvoke $r507.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r281.<java.io.PrintStream: void println(java.lang.String)>($r282);

        $r508 = new org.json.JSONArray;

        specialinvoke $r508.<org.json.JSONArray: void <init>(java.lang.String)>(" (\"San Francisco\", \"New York\", \"Seoul\", \"London\", \"Seattle\", \"Shanghai\")");

        $r284 = <java.lang.System: java.io.PrintStream out>;

        $r285 = virtualinvoke $r508.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r284.<java.io.PrintStream: void println(java.lang.String)>($r285);

        $r286 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r286.<java.io.PrintStream: void println(java.lang.String)>("\nTesting Exceptions: ");

        $r287 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r287.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label05:
        $r288 = <java.lang.System: java.io.PrintStream out>;

        $d1 = virtualinvoke $r507.<org.json.JSONObject: double getDouble(java.lang.String)>("stooge");

        virtualinvoke $r288.<java.io.PrintStream: void println(double)>($d1);

     label06:
        goto label08;

     label07:
        $r346 := @caughtexception;

        $r347 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r347.<java.io.PrintStream: void println(java.lang.Object)>($r346);

     label08:
        $r289 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r289.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label09:
        $r290 = <java.lang.System: java.io.PrintStream out>;

        $d2 = virtualinvoke $r507.<org.json.JSONObject: double getDouble(java.lang.String)>("howard");

        virtualinvoke $r290.<java.io.PrintStream: void println(double)>($d2);

     label10:
        goto label12;

     label11:
        $r344 := @caughtexception;

        $r345 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r345.<java.io.PrintStream: void println(java.lang.Object)>($r344);

     label12:
        $r291 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r291.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label13:
        $r292 = <java.lang.System: java.io.PrintStream out>;

        $r293 = virtualinvoke $r507.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(null, "howard");

        virtualinvoke $r292.<java.io.PrintStream: void println(java.lang.Object)>($r293);

     label14:
        goto label16;

     label15:
        $r342 := @caughtexception;

        $r343 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r343.<java.io.PrintStream: void println(java.lang.Object)>($r342);

     label16:
        $r294 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r294.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label17:
        $r295 = <java.lang.System: java.io.PrintStream out>;

        $d3 = virtualinvoke $r508.<org.json.JSONArray: double getDouble(int)>(0);

        virtualinvoke $r295.<java.io.PrintStream: void println(double)>($d3);

     label18:
        goto label20;

     label19:
        $r340 := @caughtexception;

        $r341 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r341.<java.io.PrintStream: void println(java.lang.Object)>($r340);

     label20:
        $r296 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r296.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label21:
        $r297 = <java.lang.System: java.io.PrintStream out>;

        $i15 = (int) -1;

        $r298 = virtualinvoke $r508.<org.json.JSONArray: java.lang.Object get(int)>($i15);

        virtualinvoke $r297.<java.io.PrintStream: void println(java.lang.Object)>($r298);

     label22:
        goto label24;

     label23:
        $r338 := @caughtexception;

        $r339 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r339.<java.io.PrintStream: void println(java.lang.Object)>($r338);

     label24:
        $r299 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r299.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label25:
        $r300 = <java.lang.System: java.io.PrintStream out>;

        $r301 = virtualinvoke $r508.<org.json.JSONArray: org.json.JSONArray put(double)>(#NaN);

        virtualinvoke $r300.<java.io.PrintStream: void println(java.lang.Object)>($r301);

     label26:
        goto label28;

     label27:
        $r336 := @caughtexception;

        $r337 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r337.<java.io.PrintStream: void println(java.lang.Object)>($r336);

     label28:
        $r302 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r302.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label29:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a><b>    ");

     label30:
        goto label32;

     label31:
        $r334 := @caughtexception;

        $r335 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r335.<java.io.PrintStream: void println(java.lang.Object)>($r334);

     label32:
        $r303 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r303.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label33:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a></b>    ");

     label34:
        goto label36;

     label35:
        $r332 := @caughtexception;

        $r333 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r333.<java.io.PrintStream: void println(java.lang.Object)>($r332);

     label36:
        $r304 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r304.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label37:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a></a    ");

     label38:
        goto label40;

     label39:
        $r330 := @caughtexception;

        $r331 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r331.<java.io.PrintStream: void println(java.lang.Object)>($r330);

     label40:
        $r305 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r305.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label41:
        $r510 = new org.json.JSONArray;

        $r509 = new java.lang.Object;

        specialinvoke $r509.<java.lang.Object: void <init>()>();

        specialinvoke $r510.<org.json.JSONArray: void <init>(java.lang.Object)>($r509);

        $r308 = <java.lang.System: java.io.PrintStream out>;

        $r309 = virtualinvoke $r510.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r308.<java.io.PrintStream: void println(java.lang.String)>($r309);

     label42:
        goto label44;

     label43:
        $r328 := @caughtexception;

        $r329 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r329.<java.io.PrintStream: void println(java.lang.Object)>($r328);

     label44:
        $r310 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r310.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label45:
        $r511 = new org.json.JSONArray;

        specialinvoke $r511.<org.json.JSONArray: void <init>(java.lang.String)>("[)");

        $r312 = <java.lang.System: java.io.PrintStream out>;

        $r313 = virtualinvoke $r511.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r312.<java.io.PrintStream: void println(java.lang.String)>($r313);

     label46:
        goto label48;

     label47:
        $r326 := @caughtexception;

        $r327 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r327.<java.io.PrintStream: void println(java.lang.Object)>($r326);

     label48:
        goto label50;

     label49:
        $r323 := @caughtexception;

        $r324 = <java.lang.System: java.io.PrintStream out>;

        $r325 = virtualinvoke $r323.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r324.<java.io.PrintStream: void println(java.lang.String)>($r325);

     label50:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Exception from label41 to label42 with label43;
        catch java.lang.Exception from label45 to label46 with label47;
        catch java.lang.Exception from label01 to label48 with label49;
    }
}
