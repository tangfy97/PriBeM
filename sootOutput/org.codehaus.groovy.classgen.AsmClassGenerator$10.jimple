class org.codehaus.groovy.classgen.AsmClassGenerator$10 extends org.codehaus.groovy.classgen.BytecodeInstruction
{
    private final groovyjarjarasm.asm.Label val$label;
    private final boolean val$isStatement;
    private final org.codehaus.groovy.classgen.AsmClassGenerator this$0;

    void <init>(org.codehaus.groovy.classgen.AsmClassGenerator, groovyjarjarasm.asm.Label, boolean)
    {
        org.codehaus.groovy.classgen.AsmClassGenerator$10 r0;
        org.codehaus.groovy.classgen.AsmClassGenerator r1;
        groovyjarjarasm.asm.Label r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.classgen.AsmClassGenerator$10;

        r1 := @parameter0: org.codehaus.groovy.classgen.AsmClassGenerator;

        r2 := @parameter1: groovyjarjarasm.asm.Label;

        z0 := @parameter2: boolean;

        r0.<org.codehaus.groovy.classgen.AsmClassGenerator$10: org.codehaus.groovy.classgen.AsmClassGenerator this$0> = r1;

        r0.<org.codehaus.groovy.classgen.AsmClassGenerator$10: groovyjarjarasm.asm.Label val$label> = r2;

        r0.<org.codehaus.groovy.classgen.AsmClassGenerator$10: boolean val$isStatement> = z0;

        specialinvoke r0.<org.codehaus.groovy.classgen.BytecodeInstruction: void <init>()>();

        return;
    }

    public void visit(groovyjarjarasm.asm.MethodVisitor)
    {
        org.codehaus.groovy.classgen.AsmClassGenerator$10 r1;
        groovyjarjarasm.asm.MethodVisitor r0;
        groovyjarjarasm.asm.Label $r2;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.classgen.AsmClassGenerator$10;

        r0 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        $r2 = r1.<org.codehaus.groovy.classgen.AsmClassGenerator$10: groovyjarjarasm.asm.Label val$label>;

        interfaceinvoke r0.<groovyjarjarasm.asm.MethodVisitor: void visitLabel(groovyjarjarasm.asm.Label)>($r2);

        $z0 = r1.<org.codehaus.groovy.classgen.AsmClassGenerator$10: boolean val$isStatement>;

        if $z0 != 0 goto label1;

        interfaceinvoke r0.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(87);

     label1:
        return;
    }
}
