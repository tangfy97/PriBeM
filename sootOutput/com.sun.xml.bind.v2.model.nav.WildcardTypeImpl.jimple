final class com.sun.xml.bind.v2.model.nav.WildcardTypeImpl extends java.lang.Object implements java.lang.reflect.WildcardType
{
    private final java.lang.reflect.Type[] ub;
    private final java.lang.reflect.Type[] lb;

    public void <init>(java.lang.reflect.Type[], java.lang.reflect.Type[])
    {
        java.lang.reflect.Type[] r1, r2;
        com.sun.xml.bind.v2.model.nav.WildcardTypeImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.WildcardTypeImpl;

        r1 := @parameter0: java.lang.reflect.Type[];

        r2 := @parameter1: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] ub> = r1;

        r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] lb> = r2;

        return;
    }

    public java.lang.reflect.Type[] getUpperBounds()
    {
        java.lang.reflect.Type[] $r1;
        com.sun.xml.bind.v2.model.nav.WildcardTypeImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.WildcardTypeImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] ub>;

        return $r1;
    }

    public java.lang.reflect.Type[] getLowerBounds()
    {
        java.lang.reflect.Type[] $r1;
        com.sun.xml.bind.v2.model.nav.WildcardTypeImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.WildcardTypeImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] lb>;

        return $r1;
    }

    public int hashCode()
    {
        java.lang.reflect.Type[] $r1, $r2;
        int $i0, $i1, $i2;
        com.sun.xml.bind.v2.model.nav.WildcardTypeImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.WildcardTypeImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] lb>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $r2 = r0.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] ub>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.WildcardType r1;
        java.lang.reflect.Type[] $r2, $r4, $r5, $r6;
        java.lang.Object r0;
        com.sun.xml.bind.v2.model.nav.WildcardTypeImpl r3;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: com.sun.xml.bind.v2.model.nav.WildcardTypeImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label3;

        r1 = (java.lang.reflect.WildcardType) r0;

        $r2 = interfaceinvoke r1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r4 = r3.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] lb>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r2, $r4);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke r1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r6 = r3.<com.sun.xml.bind.v2.model.nav.WildcardTypeImpl: java.lang.reflect.Type[] ub>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }
}
