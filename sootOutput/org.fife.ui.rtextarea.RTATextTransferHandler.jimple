public class org.fife.ui.rtextarea.RTATextTransferHandler extends javax.swing.TransferHandler
{
    private javax.swing.text.JTextComponent exportComp;
    private boolean shouldRemove;
    private int p0;
    private int p1;
    private boolean withinSameComponent;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$io$Reader;
    static java.lang.Class class$java$io$InputStream;

    public void <init>()
    {
        org.fife.ui.rtextarea.RTATextTransferHandler r0;

        r0 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        specialinvoke r0.<javax.swing.TransferHandler: void <init>()>();

        return;
    }

    protected java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[], javax.swing.text.JTextComponent)
    {
        java.awt.datatransfer.DataFlavor $r1, $r3, $r4, $r5, $r8, r11, r12;
        int $i0, i1;
        java.lang.String $r2;
        org.fife.ui.rtextarea.RTATextTransferHandler r9;
        boolean $z0, $z1, $z2;
        java.awt.datatransfer.DataFlavor[] r0;
        javax.swing.text.JTextComponent r10;
        java.lang.Class $r6, $r7, $r13;

        r9 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r0 := @parameter0: java.awt.datatransfer.DataFlavor[];

        r10 := @parameter1: javax.swing.text.JTextComponent;

        r11 = null;

        r12 = null;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label7;

        $r1 = r0[i1];

        $r2 = virtualinvoke $r1.<java.awt.datatransfer.DataFlavor: java.lang.String getMimeType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("text/plain");

        if $z0 == 0 goto label2;

        $r8 = r0[i1];

        return $r8;

     label2:
        if r11 != null goto label5;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("application/x-java-jvm-local-objectref");

        if $z2 == 0 goto label5;

        $r5 = r0[i1];

        $r6 = virtualinvoke $r5.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $r7 = <org.fife.ui.rtextarea.RTATextTransferHandler: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label3;

        $r13 = staticinvoke <org.fife.ui.rtextarea.RTATextTransferHandler: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.fife.ui.rtextarea.RTATextTransferHandler: java.lang.Class class$java$lang$String> = $r13;

        goto label4;

     label3:
        $r13 = <org.fife.ui.rtextarea.RTATextTransferHandler: java.lang.Class class$java$lang$String>;

     label4:
        if $r6 != $r13 goto label5;

        r11 = r0[i1];

        goto label6;

     label5:
        if r12 != null goto label6;

        $r4 = r0[i1];

        $r3 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor stringFlavor>;

        $z1 = virtualinvoke $r4.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>($r3);

        if $z1 == 0 goto label6;

        r12 = r0[i1];

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        if r11 == null goto label8;

        return r11;

     label8:
        if r12 == null goto label9;

        return r12;

     label9:
        return null;
    }

    protected void handleReaderImport(java.io.Reader, javax.swing.text.JTextComponent) throws javax.swing.text.BadLocationException, java.io.IOException
    {
        java.lang.StringBuffer r6, $r8;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i16;
        java.lang.String $r7;
        org.fife.ui.rtextarea.RTATextTransferHandler r2;
        boolean $z0, z1, z2, z3, z4, z5, z6;
        org.fife.ui.rtextarea.RTextArea $r4;
        char $c4;
        java.io.Reader r1;
        javax.swing.text.JTextComponent r3;
        char[] r0;

        r2 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r1 := @parameter0: java.io.Reader;

        r3 := @parameter1: javax.swing.text.JTextComponent;

        r0 = newarray (char)[1024];

        z1 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        r6 = null;

     label01:
        $i10 = lengthof r0;

        $i11 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i10);

        $i15 = (int) -1;

        if $i11 == $i15 goto label15;

        if r6 != null goto label02;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i11);

        r6 = $r8;

     label02:
        i12 = 0;

        i13 = 0;

     label03:
        if i13 >= $i11 goto label13;

        $c4 = r0[i13];

        $i16 = (int) $c4;

        lookupswitch($i16)
        {
            case 10: goto label07;
            case 13: goto label04;
            default: goto label09;
        };

     label04:
        if z6 == 0 goto label06;

        if i13 != 0 goto label05;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label12;

     label05:
        $i5 = i13 - 1;

        r0[$i5] = 10;

        goto label12;

     label06:
        z1 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        goto label12;

     label07:
        if z3 == 0 goto label12;

        $i6 = i12 + 1;

        if i13 <= $i6 goto label08;

        $i7 = i13 - i12;

        $i8 = $i7 - 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r0, i12, $i8);

     label08:
        z1 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        i12 = i13;

        goto label12;

     label09:
        if z5 == 0 goto label12;

        if i13 != 0 goto label10;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label11;

     label10:
        $i9 = i13 - 1;

        r0[$i9] = 10;

     label11:
        z1 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

     label12:
        i13 = i13 + 1;

        goto label03;

     label13:
        if i12 >= $i11 goto label01;

        if z2 == 0 goto label14;

        $i1 = $i11 - 1;

        if i12 >= $i1 goto label01;

        $i2 = $i11 - i12;

        $i3 = $i2 - 1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r0, i12, $i3);

        goto label01;

     label14:
        $i0 = $i11 - i12;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r0, i12, $i0);

        goto label01;

     label15:
        $z0 = r2.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean withinSameComponent>;

        if $z0 == 0 goto label16;

        $r4 = (org.fife.ui.rtextarea.RTextArea) r3;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RTextArea: void beginAtomicEdit()>();

     label16:
        if z4 == 0 goto label17;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label17:
        if r6 == null goto label18;

        $r7 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label19;

     label18:
        $r7 = "";

     label19:
        virtualinvoke r3.<javax.swing.text.JTextComponent: void replaceSelection(java.lang.String)>($r7);

        return;
    }

    public int getSourceActions(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        org.fife.ui.rtextarea.RTATextTransferHandler r2;
        javax.swing.text.JTextComponent $r1;
        boolean $z0;

        r2 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = (javax.swing.text.JTextComponent) r0;

        $z0 = virtualinvoke $r1.<javax.swing.text.JTextComponent: boolean isEditable()>();

        if $z0 == 0 goto label1;

        return 3;

     label1:
        return 1;
    }

    protected java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.text.JTextComponent $r2, $r3, $r4, $r5;
        org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.fife.ui.rtextarea.RTATextTransferHandler r0;

        r0 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (javax.swing.text.JTextComponent) r1;

        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp> = $r2;

        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean shouldRemove> = 1;

        $r3 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp>;

        $i0 = virtualinvoke $r3.<javax.swing.text.JTextComponent: int getSelectionStart()>();

        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p0> = $i0;

        $r4 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp>;

        $i1 = virtualinvoke $r4.<javax.swing.text.JTextComponent: int getSelectionEnd()>();

        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p1> = $i1;

        $i3 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p0>;

        $i2 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p1>;

        if $i3 == $i2 goto label1;

        $r6 = new org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable;

        $r5 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp>;

        $i5 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p0>;

        $i4 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: int p1>;

        specialinvoke $r6.<org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable: void <init>(javax.swing.text.JTextComponent,int,int)>($r5, $i5, $i4);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    protected void exportDone(javax.swing.JComponent, java.awt.datatransfer.Transferable, int)
    {
        javax.swing.JComponent r3;
        org.fife.ui.rtextarea.RTextArea $r4;
        java.awt.datatransfer.Transferable r1;
        org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable r2;
        int i0;
        org.fife.ui.rtextarea.RTATextTransferHandler r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r3 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.datatransfer.Transferable;

        i0 := @parameter2: int;

        $z0 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean shouldRemove>;

        if $z0 == 0 goto label1;

        if i0 != 2 goto label1;

        r2 = (org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable) r1;

        virtualinvoke r2.<org.fife.ui.rtextarea.RTATextTransferHandler$TextTransferable: void removeText()>();

        $z1 = r0.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean withinSameComponent>;

        if $z1 == 0 goto label1;

        $r4 = (org.fife.ui.rtextarea.RTextArea) r3;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RTextArea: void endAtomicEdit()>();

        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean withinSameComponent> = 0;

     label1:
        r0.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp> = null;

        return;
    }

    public boolean importData(javax.swing.JComponent, java.awt.datatransfer.Transferable)
    {
        java.awt.im.InputContext $r5;
        java.awt.datatransfer.DataFlavor $r11;
        java.awt.datatransfer.Transferable r4;
        int $i0, $i1, $i2, $i3;
        org.fife.ui.rtextarea.RTATextTransferHandler r2;
        boolean $z0, $z1, z2;
        javax.swing.JComponent r0;
        java.awt.datatransfer.UnsupportedFlavorException $r9;
        java.awt.datatransfer.DataFlavor[] $r10;
        java.io.IOException $r7;
        java.io.Reader $r6;
        javax.swing.text.BadLocationException $r8;
        javax.swing.text.JTextComponent r1, $r3;

        r2 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r0 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.awt.datatransfer.Transferable;

        r1 = (javax.swing.text.JTextComponent) r0;

        $r3 = r2.<org.fife.ui.rtextarea.RTATextTransferHandler: javax.swing.text.JTextComponent exportComp>;

        if r1 != $r3 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        r2.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean withinSameComponent> = $z1;

        $z0 = r2.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean withinSameComponent>;

        if $z0 == 0 goto label03;

        $i0 = virtualinvoke r1.<javax.swing.text.JTextComponent: int getCaretPosition()>();

        $i1 = r2.<org.fife.ui.rtextarea.RTATextTransferHandler: int p0>;

        if $i0 < $i1 goto label03;

        $i2 = virtualinvoke r1.<javax.swing.text.JTextComponent: int getCaretPosition()>();

        $i3 = r2.<org.fife.ui.rtextarea.RTATextTransferHandler: int p1>;

        if $i2 > $i3 goto label03;

        r2.<org.fife.ui.rtextarea.RTATextTransferHandler: boolean shouldRemove> = 0;

        return 1;

     label03:
        z2 = 0;

        $r10 = interfaceinvoke r4.<java.awt.datatransfer.Transferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>();

        $r11 = virtualinvoke r2.<org.fife.ui.rtextarea.RTATextTransferHandler: java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[],javax.swing.text.JTextComponent)>($r10, r1);

        if $r11 == null goto label10;

     label04:
        $r5 = virtualinvoke r1.<javax.swing.text.JTextComponent: java.awt.im.InputContext getInputContext()>();

        if $r5 == null goto label05;

        virtualinvoke $r5.<java.awt.im.InputContext: void endComposition()>();

     label05:
        $r6 = virtualinvoke $r11.<java.awt.datatransfer.DataFlavor: java.io.Reader getReaderForText(java.awt.datatransfer.Transferable)>(r4);

        virtualinvoke r2.<org.fife.ui.rtextarea.RTATextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent)>($r6, r1);

        z2 = 1;

     label06:
        goto label10;

     label07:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.awt.datatransfer.UnsupportedFlavorException: void printStackTrace()>();

        goto label10;

     label08:
        $r8 := @caughtexception;

        virtualinvoke $r8.<javax.swing.text.BadLocationException: void printStackTrace()>();

        goto label10;

     label09:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

     label10:
        return z2;

        catch java.awt.datatransfer.UnsupportedFlavorException from label04 to label06 with label07;
        catch javax.swing.text.BadLocationException from label04 to label06 with label08;
        catch java.io.IOException from label04 to label06 with label09;
    }

    public boolean canImport(javax.swing.JComponent, java.awt.datatransfer.DataFlavor[])
    {
        javax.swing.JComponent r0;
        java.awt.datatransfer.DataFlavor $r4;
        java.awt.datatransfer.DataFlavor[] r3;
        javax.swing.text.JTextComponent r1;
        org.fife.ui.rtextarea.RTATextTransferHandler r2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.fife.ui.rtextarea.RTATextTransferHandler;

        r0 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.datatransfer.DataFlavor[];

        r1 = (javax.swing.text.JTextComponent) r0;

        $z0 = virtualinvoke r1.<javax.swing.text.JTextComponent: boolean isEditable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<javax.swing.text.JTextComponent: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = virtualinvoke r2.<org.fife.ui.rtextarea.RTATextTransferHandler: java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[],javax.swing.text.JTextComponent)>(r3, r1);

        if $r4 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
